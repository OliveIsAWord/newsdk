#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine110, uint64_t _mng_arg111, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread112);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex113);
extern void TlReleaseMutex(uint64_t _mng_mutex114);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue115);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore116);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore117);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg118);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename119, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock120, uint64_t _mng_filepath121);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope122);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg123);
extern void LexExpandMacro(uint64_t _mng_macro124, uint64_t _mng_token125);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream126, uint64_t _mng_macro127);
extern void LexUninitializeStream(uint64_t _mng_stream128);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream129);
extern void LexPushStream(uint64_t _mng_stream130);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream131, uint64_t _mng_fileblock132, uint64_t _mng_handle133);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock134, uint64_t _mng_handle135);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest136, uint64_t _mng_src137);
extern void LexGetToken(uint64_t _mng_token138);
extern void LexPutbackToken(uint64_t _mng_token139);
extern uint64_t LexMatchToken(uint64_t _mng_token140, uint64_t _mng_type141, uint64_t _mng_subtype142);
extern void LexStreamError(uint64_t _mng_str143, uint64_t _mng_err1144, uint64_t _mng_err2145, uint64_t _mng_err3146);
extern void LexTokenError(uint64_t _mng_token147, uint64_t _mng_str148, uint64_t _mng_err1149, uint64_t _mng_err2150, uint64_t _mng_err3151);
extern uint64_t LexCrunchNumber(uint64_t _mng_token152, uint64_t _mng_buffer153);
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtStatFile(uint64_t _mng_fullpath154);
extern uint64_t BtSelectedTarget;
void BtConnectDagNodes(uint64_t _mng_fromnode155, uint64_t _mng_tonode156) {
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t _mng_dagedge160;
    uint64_t _mng_status161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t _mng_listhead169;
    uint64_t _mng_listentry170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t _mng_last174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t _mng_listhead178;
    uint64_t __twr_v179;
    uint64_t _mng_listentry180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t _mng_last183;
    uint64_t __twr_v184;
    __twr_v157 = (uint64_t)(&TlBumpAlloc);
    __twr_v158 = 48ULL;
    __twr_v159 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v157)(__twr_v158, (uint64_t)(&_mng_dagedge160));
    _mng_status161 = __twr_v159;
    if (!(_mng_status161)) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v162 = (uint64_t)(&TlInternalError);
    __twr_v163 = (uint64_t)(&"Failed to allocate DAG edge");
    __twr_v164 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v162)(__twr_v163, __twr_v164, __twr_v164, __twr_v164);
    __twr_l2:;
    __twr_v165 = 32ULL;
    __twr_v166 = _mng_dagedge160 + __twr_v165;
    *(uint64_t*)(__twr_v166) = _mng_fromnode155;
    __twr_v167 = 40ULL;
    __twr_v168 = _mng_dagedge160 + __twr_v167;
    *(uint64_t*)(__twr_v168) = _mng_tonode156;
    _mng_listhead169 = _mng_tonode156;
    _mng_listentry170 = _mng_dagedge160;
    __twr_v171 = 8ULL;
    __twr_v172 = _mng_listhead169 + __twr_v171;
    __twr_v173 = *(uint64_t*)(__twr_v172);
    _mng_last174 = __twr_v173;
    __twr_v175 = _mng_listentry170 + __twr_v171;
    *(uint64_t*)(__twr_v175) = _mng_last174;
    *(uint64_t*)(_mng_listentry170) = _mng_listhead169;
    *(uint64_t*)(_mng_last174) = _mng_listentry170;
    *(uint64_t*)(__twr_v172) = _mng_listentry170;
    __twr_v176 = 16ULL;
    __twr_v177 = _mng_fromnode155 + __twr_v176;
    _mng_listhead178 = __twr_v177;
    __twr_v179 = _mng_dagedge160 + __twr_v176;
    _mng_listentry180 = __twr_v179;
    __twr_v181 = _mng_listhead178 + __twr_v171;
    __twr_v182 = *(uint64_t*)(__twr_v181);
    _mng_last183 = __twr_v182;
    __twr_v184 = _mng_listentry180 + __twr_v171;
    *(uint64_t*)(__twr_v184) = _mng_last183;
    *(uint64_t*)(_mng_listentry180) = _mng_listhead178;
    *(uint64_t*)(_mng_last183) = _mng_listentry180;
    *(uint64_t*)(__twr_v181) = _mng_listentry180;
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t BtCreateDagNode(uint64_t _mng_target185, uint64_t _mng_type186) {
    uint64_t _jkl_retv;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t _mng_dagnode190;
    uint64_t _mng_status191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_listhead195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t _mng_listhead200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    __twr_v187 = (uint64_t)(&TlBumpAlloc);
    __twr_v188 = 393ULL;
    __twr_v189 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v187)(__twr_v188, (uint64_t)(&_mng_dagnode190));
    _mng_status191 = __twr_v189;
    if (!(_mng_status191)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v192 = (uint64_t)(&TlInternalError);
    __twr_v193 = (uint64_t)(&"Failed to allocate DAG node");
    __twr_v194 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v192)(__twr_v193, __twr_v194, __twr_v194, __twr_v194);
    __twr_l5:;
    _mng_listhead195 = _mng_dagnode190;
    __twr_v196 = 8ULL;
    __twr_v197 = _mng_listhead195 + __twr_v196;
    *(uint64_t*)(__twr_v197) = _mng_listhead195;
    *(uint64_t*)(_mng_listhead195) = _mng_listhead195;
    __twr_v198 = 16ULL;
    __twr_v199 = _mng_dagnode190 + __twr_v198;
    _mng_listhead200 = __twr_v199;
    __twr_v201 = _mng_listhead200 + __twr_v196;
    *(uint64_t*)(__twr_v201) = _mng_listhead200;
    *(uint64_t*)(_mng_listhead200) = _mng_listhead200;
    __twr_v202 = 32ULL;
    __twr_v203 = _mng_dagnode190 + __twr_v202;
    *(uint64_t*)(__twr_v203) = _mng_target185;
    __twr_v204 = 392ULL;
    __twr_v205 = _mng_dagnode190 + __twr_v204;
    *(uint8_t*)(__twr_v205) = _mng_type186;
    _jkl_retv = _mng_dagnode190;
    goto _jkl_epilogue;
    __twr_l4:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t BtDepsLineBuffer[32];
uint64_t BtAnyDepsLater(uint64_t _mng_srctime206, uint64_t _mng_depspath207) {
    uint64_t _jkl_retv;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t _mng_handle210;
    uint64_t _mng_status211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t _mng_stat217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t _mng_ptr226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t _mng_tokptr235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t _mng_depstat244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    __twr_v208 = (uint64_t)(&TlOpenSource);
    __twr_v209 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v208)(_mng_depspath207, (uint64_t)(&_mng_handle210));
    _mng_status211 = __twr_v209;
    if (!(_mng_status211)) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v212 = (uint64_t)(&TlInternalError);
    __twr_v213 = (uint64_t)(&"Failed to open deps file");
    __twr_v214 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v212)(__twr_v213, __twr_v214, __twr_v214, __twr_v214);
    __twr_l8:;
    __twr_v215 = (uint64_t)(&BtStatFile);
    __twr_v216 = ((uint64_t (*)(uint64_t))__twr_v215)(_mng_depspath207);
    _mng_stat217 = __twr_v216;
    if (_mng_stat217) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v218 = (uint64_t)(&TlInternalError);
    __twr_v219 = (uint64_t)(&"Failed to stat deps file");
    __twr_v220 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v218)(__twr_v219, __twr_v220, __twr_v220, __twr_v220);
    __twr_l10:;
    __twr_v221 = (uint64_t)(&TlAlloc);
    __twr_v222 = 8ULL;
    __twr_v223 = _mng_stat217 + __twr_v222;
    __twr_v224 = *(uint32_t*)(__twr_v223);
    __twr_v225 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v221)(__twr_v224, (uint64_t)(&_mng_ptr226));
    _mng_status211 = __twr_v225;
    if (!(_mng_status211)) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v227 = (uint64_t)(&TlInternalError);
    __twr_v228 = (uint64_t)(&"Failed to allocate deps buffer");
    __twr_v229 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v227)(__twr_v228, __twr_v229, __twr_v229, __twr_v229);
    __twr_l12:;
    __twr_v230 = (uint64_t)(&TlReadFile);
    __twr_v231 = 8ULL;
    __twr_v232 = _mng_stat217 + __twr_v231;
    __twr_v233 = *(uint32_t*)(__twr_v232);
    __twr_v234 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v230)(_mng_handle210, __twr_v233, _mng_ptr226);
    _mng_tokptr235 = _mng_ptr226;
    __twr_l14:;
    __twr_v236 = (uint64_t)(&TlTokenize);
    __twr_v237 = (uint64_t)(&BtDepsLineBuffer);
    __twr_v238 = 256ULL;
    __twr_v239 = 10ULL;
    __twr_v240 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v236)(_mng_tokptr235, __twr_v237, __twr_v238, __twr_v239);
    _mng_tokptr235 = __twr_v240;
    if (_mng_tokptr235) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    goto __twr_l15;
    __twr_l16:;
    __twr_v241 = (uint64_t)(&BtStatFile);
    __twr_v242 = (uint64_t)(&BtDepsLineBuffer);
    __twr_v243 = ((uint64_t (*)(uint64_t))__twr_v241)(__twr_v242);
    _mng_depstat244 = __twr_v243;
    if (_mng_depstat244) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v245 = (uint64_t)(&TlInternalError);
    __twr_v246 = (uint64_t)(&"Failed to stat dependent header");
    __twr_v247 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v245)(__twr_v246, __twr_v247, __twr_v247, __twr_v247);
    __twr_l18:;
    __twr_v248 = 4ULL;
    __twr_v249 = _mng_depstat244 + __twr_v248;
    __twr_v250 = *(uint32_t*)(__twr_v249);
    if (__twr_v250 < _mng_srctime206) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v251 = (uint64_t)(&TlFree);
    ((void (*)(uint64_t))__twr_v251)(_mng_ptr226);
    __twr_v252 = 1ULL;
    _jkl_retv = __twr_v252;
    goto _jkl_epilogue;
    __twr_l20:;
    goto __twr_l14;
    __twr_l15:;
    __twr_v253 = (uint64_t)(&TlFree);
    ((void (*)(uint64_t))__twr_v253)(_mng_ptr226);
    __twr_v254 = 0ULL;
    _jkl_retv = __twr_v254;
    goto _jkl_epilogue;
    __twr_l7:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtProcessDirectoryEntry(uint64_t _mng_fullpath255, uint64_t _mng_filename256, uint64_t _mng_context257) {
    uint64_t _mng_pdc258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t _mng_ext261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t _mng_nodetype265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t _mng_stat274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t _mng_dagnode283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t _mng_objectpath294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t _mng_depspath297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t _mng_tmppath300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_objstat356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    _mng_pdc258 = _mng_context257;
    __twr_v259 = (uint64_t)(&TlGetPathExtension);
    __twr_v260 = ((uint64_t (*)(uint64_t))__twr_v259)(_mng_filename256);
    _mng_ext261 = __twr_v260;
    __twr_v262 = (uint64_t)(&TlCompareString);
    __twr_v263 = (uint64_t)(&"jkl");
    __twr_v264 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v262)(_mng_ext261, __twr_v263);
    if (__twr_v264) { goto __twr_l25; } else { goto __twr_l24; }
    __twr_l24:;
    _mng_nodetype265 = 1ULL;
    goto __twr_l23;
    __twr_l25:;
    __twr_v266 = (uint64_t)(&TlCompareString);
    __twr_v267 = (uint64_t)(&"s");
    __twr_v268 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v266)(_mng_ext261, __twr_v267);
    if (__twr_v268) { goto __twr_l27; } else { goto __twr_l26; }
    __twr_l26:;
    _mng_nodetype265 = 3ULL;
    goto __twr_l23;
    __twr_l27:;
    __twr_v269 = (uint64_t)(&TlCompareString);
    __twr_v270 = (uint64_t)(&"c");
    __twr_v271 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v269)(_mng_ext261, __twr_v270);
    if (__twr_v271) { goto __twr_l29; } else { goto __twr_l28; }
    __twr_l28:;
    _mng_nodetype265 = 2ULL;
    goto __twr_l23;
    __twr_l29:;
    goto _jkl_epilogue;
    __twr_l23:;
    __twr_v272 = (uint64_t)(&BtStatFile);
    __twr_v273 = ((uint64_t (*)(uint64_t))__twr_v272)(_mng_fullpath255);
    _mng_stat274 = __twr_v273;
    if (_mng_stat274) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v275 = (uint64_t)(&TlInternalError);
    __twr_v276 = (uint64_t)(&"Failed to stat file");
    __twr_v277 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v275)(__twr_v276, __twr_v277, __twr_v277, __twr_v277);
    __twr_l30:;
    __twr_v278 = *(uint8_t*)(_mng_stat274);
    __twr_v279 = 1ULL;
    if (__twr_v278 == __twr_v279) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    goto _jkl_epilogue;
    __twr_l32:;
    __twr_v280 = (uint64_t)(&BtCreateDagNode);
    __twr_v281 = *(uint64_t*)(_mng_pdc258);
    __twr_v282 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v280)(__twr_v281, _mng_nodetype265);
    _mng_dagnode283 = __twr_v282;
    __twr_v284 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v285 = 40ULL;
    __twr_v286 = _mng_dagnode283 + __twr_v285;
    ((void (*)(uint64_t))__twr_v284)(__twr_v286);
    __twr_v287 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v288 = (uint64_t)(&TlMeasureString);
    __twr_v289 = ((uint64_t (*)(uint64_t))__twr_v288)(_mng_fullpath255);
    __twr_v290 = 1ULL;
    __twr_v291 = __twr_v289 + __twr_v290;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v287)(__twr_v286, _mng_fullpath255, __twr_v291);
    __twr_v292 = 128ULL;
    __twr_v293 = _mng_dagnode283 + __twr_v292;
    _mng_objectpath294 = __twr_v293;
    __twr_v295 = 216ULL;
    __twr_v296 = _mng_dagnode283 + __twr_v295;
    _mng_depspath297 = __twr_v296;
    __twr_v298 = 304ULL;
    __twr_v299 = _mng_dagnode283 + __twr_v298;
    _mng_tmppath300 = __twr_v299;
    ((void (*)(uint64_t))__twr_v284)(_mng_objectpath294);
    ((void (*)(uint64_t))__twr_v284)(_mng_depspath297);
    ((void (*)(uint64_t))__twr_v284)(_mng_tmppath300);
    __twr_v301 = 16ULL;
    __twr_v302 = _mng_pdc258 + __twr_v301;
    __twr_v303 = *(uint64_t*)(__twr_v302);
    __twr_v304 = __twr_v303 + __twr_v301;
    __twr_v305 = *(uint64_t*)(__twr_v304);
    __twr_v306 = *(uint64_t*)(__twr_v303);
    __twr_v307 = __twr_v306 - __twr_v290;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v287)(_mng_objectpath294, __twr_v305, __twr_v307);
    __twr_v308 = _mng_objectpath294 + __twr_v301;
    __twr_v309 = *(uint64_t*)(__twr_v308);
    __twr_v310 = *(uint64_t*)(_mng_objectpath294);
    __twr_v311 = __twr_v310 - __twr_v290;
    __twr_v312 = __twr_v309 + __twr_v311;
    __twr_v313 = *(uint8_t*)(__twr_v312);
    __twr_v314 = 47ULL;
    if (__twr_v313 == __twr_v314) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v315 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v316 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v315)(_mng_objectpath294, __twr_v316);
    __twr_l34:;
    __twr_v317 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v318 = (uint64_t)(&"obj/");
    __twr_v319 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v317)(_mng_objectpath294, __twr_v318, __twr_v319);
    __twr_v320 = (uint64_t)(&TlCreateDirectory);
    __twr_v321 = 16ULL;
    __twr_v322 = _mng_objectpath294 + __twr_v321;
    __twr_v323 = *(uint64_t*)(__twr_v322);
    __twr_v324 = ((uint64_t (*)(uint64_t))__twr_v320)(__twr_v323);
    __twr_v325 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v326 = ((uint64_t (*)(uint64_t))__twr_v325)(_mng_objectpath294);
    __twr_v327 = (uint64_t)(&BtTargetArchitectureName);
    __twr_v328 = 1ULL;
    __twr_v329 = (uint64_t)(&TlMeasureString);
    __twr_v330 = ((uint64_t (*)(uint64_t))__twr_v329)(__twr_v327);
    __twr_v331 = __twr_v330 + __twr_v328;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v317)(_mng_objectpath294, __twr_v327, __twr_v331);
    __twr_v332 = *(uint64_t*)(__twr_v322);
    __twr_v333 = ((uint64_t (*)(uint64_t))__twr_v320)(__twr_v332);
    __twr_v334 = ((uint64_t (*)(uint64_t))__twr_v325)(_mng_objectpath294);
    __twr_v335 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v336 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v335)(_mng_objectpath294, __twr_v336);
    __twr_v337 = ((uint64_t (*)(uint64_t))__twr_v329)(_mng_filename256);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v317)(_mng_objectpath294, _mng_filename256, __twr_v337);
    __twr_v338 = *(uint64_t*)(__twr_v322);
    __twr_v339 = *(uint64_t*)(_mng_objectpath294);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v317)(_mng_tmppath300, __twr_v338, __twr_v339);
    __twr_v340 = *(uint64_t*)(__twr_v322);
    __twr_v341 = *(uint64_t*)(_mng_objectpath294);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v317)(_mng_depspath297, __twr_v340, __twr_v341);
    __twr_v342 = (uint64_t)(&".o");
    __twr_v343 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v317)(_mng_objectpath294, __twr_v342, __twr_v343);
    __twr_v344 = (uint64_t)(&".dep");
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v317)(_mng_depspath297, __twr_v344, __twr_v319);
    __twr_v345 = (uint64_t)(&".tmp");
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v317)(_mng_tmppath300, __twr_v345, __twr_v319);
    if (_mng_nodetype265 != __twr_v328) { goto __twr_l36; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v346 = (uint64_t)(&TlPathExists);
    __twr_v347 = 16ULL;
    __twr_v348 = _mng_depspath297 + __twr_v347;
    __twr_v349 = *(uint64_t*)(__twr_v348);
    __twr_v350 = ((uint64_t (*)(uint64_t))__twr_v346)(__twr_v349);
    if (__twr_v350) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    goto __twr_lAddToDag;
    __twr_l36:;
    __twr_v351 = (uint64_t)(&BtStatFile);
    __twr_v352 = 16ULL;
    __twr_v353 = _mng_objectpath294 + __twr_v352;
    __twr_v354 = *(uint64_t*)(__twr_v353);
    __twr_v355 = ((uint64_t (*)(uint64_t))__twr_v351)(__twr_v354);
    _mng_objstat356 = __twr_v355;
    if (_mng_objstat356) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l41:;
    goto __twr_lAddToDag;
    __twr_l40:;
    __twr_v357 = 4ULL;
    __twr_v358 = _mng_stat274 + __twr_v357;
    __twr_v359 = *(uint32_t*)(__twr_v358);
    __twr_v360 = _mng_objstat356 + __twr_v357;
    __twr_v361 = *(uint32_t*)(__twr_v360);
    if (__twr_v359 < __twr_v361) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    goto __twr_lAddToDag;
    __twr_l42:;
    __twr_v362 = (uint64_t)(&BtAnyDepsLater);
    __twr_v363 = 4ULL;
    __twr_v364 = _mng_stat274 + __twr_v363;
    __twr_v365 = *(uint32_t*)(__twr_v364);
    __twr_v366 = 16ULL;
    __twr_v367 = _mng_depspath297 + __twr_v366;
    __twr_v368 = *(uint64_t*)(__twr_v367);
    __twr_v369 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v362)(__twr_v365, __twr_v368);
    if (!(__twr_v369)) { goto __twr_l44; } else { goto __twr_l45; }
    __twr_l45:;
    goto __twr_lAddToDag;
    __twr_l44:;
    __twr_v370 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v370)(_mng_objectpath294);
    ((void (*)(uint64_t))__twr_v370)(_mng_depspath297);
    ((void (*)(uint64_t))__twr_v370)(_mng_tmppath300);
    __twr_v371 = 40ULL;
    __twr_v372 = _mng_dagnode283 + __twr_v371;
    ((void (*)(uint64_t))__twr_v370)(__twr_v372);
    goto _jkl_epilogue;
    __twr_lAddToDag:;
    __twr_v373 = 8ULL;
    __twr_v374 = _mng_pdc258 + __twr_v373;
    __twr_v375 = *(uint64_t*)(__twr_v374);
    if (__twr_v375) { goto __twr_l46; } else { goto __twr_l47; }
    __twr_l47:;
    __twr_v376 = (uint64_t)(&BtCreateDagNode);
    __twr_v377 = *(uint64_t*)(_mng_pdc258);
    __twr_v378 = 4ULL;
    __twr_v379 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v376)(__twr_v377, __twr_v378);
    __twr_v380 = 8ULL;
    __twr_v381 = _mng_pdc258 + __twr_v380;
    *(uint64_t*)(__twr_v381) = __twr_v379;
    __twr_l46:;
    __twr_v382 = (uint64_t)(&BtConnectDagNodes);
    __twr_v383 = 8ULL;
    __twr_v384 = _mng_pdc258 + __twr_v383;
    __twr_v385 = *(uint64_t*)(__twr_v384);
    ((void (*)(uint64_t, uint64_t))__twr_v382)(__twr_v385, _mng_dagnode283);
    __twr_l22:;
    _jkl_epilogue:;
}
uint64_t BtBuildDagForTarget(uint64_t _mng_target386) {
    uint64_t _jkl_retv;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t _mng_dagnode393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t _mng_dagtype397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t _mng_dependhead400;
    uint64_t __twr_v401;
    uint64_t _mng_dependentry402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t _mng_dependnode408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t _mng_sourceshead418;
    uint64_t __twr_v419;
    uint64_t _mng_sourcesentry420;
    uint64_t __twr_v421;
    uint64_t _mng_context422[3];
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t _mng_sourcesrcrd425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t _mng_status436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    __twr_v387 = 616ULL;
    __twr_v388 = _mng_target386 + __twr_v387;
    __twr_v389 = *(uint8_t*)(__twr_v388);
    if (!(__twr_v389)) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_v390 = 608ULL;
    __twr_v391 = _mng_target386 + __twr_v390;
    __twr_v392 = *(uint64_t*)(__twr_v391);
    _jkl_retv = __twr_v392;
    goto _jkl_epilogue;
    __twr_l49:;
    _mng_dagnode393 = 0ULL;
    __twr_v394 = 617ULL;
    __twr_v395 = _mng_target386 + __twr_v394;
    __twr_v396 = *(uint8_t*)(__twr_v395);
    if (!(__twr_v396)) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    _mng_dagtype397 = 4ULL;
    goto __twr_l51;
    __twr_l53:;
    _mng_dagtype397 = 0ULL;
    __twr_l51:;
    __twr_v398 = 488ULL;
    __twr_v399 = _mng_target386 + __twr_v398;
    _mng_dependhead400 = __twr_v399;
    __twr_v401 = *(uint64_t*)(_mng_dependhead400);
    _mng_dependentry402 = __twr_v401;
    if (_mng_dependentry402 == _mng_dependhead400) { goto __twr_l55; } else { goto __twr_l54; }
    __twr_l54:;
    __twr_v403 = (uint64_t)(&BtBuildDagForTarget);
    __twr_v404 = 16ULL;
    __twr_v405 = _mng_dependentry402 + __twr_v404;
    __twr_v406 = *(uint64_t*)(__twr_v405);
    __twr_v407 = ((uint64_t (*)(uint64_t))__twr_v403)(__twr_v406);
    _mng_dependnode408 = __twr_v407;
    if (!(_mng_dependnode408)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    if (_mng_dagnode393) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v409 = (uint64_t)(&BtCreateDagNode);
    __twr_v410 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v409)(_mng_target386, _mng_dagtype397);
    _mng_dagnode393 = __twr_v410;
    __twr_l59:;
    __twr_v411 = (uint64_t)(&BtConnectDagNodes);
    ((void (*)(uint64_t, uint64_t))__twr_v411)(_mng_dagnode393, _mng_dependnode408);
    __twr_l57:;
    __twr_v412 = *(uint64_t*)(_mng_dependentry402);
    _mng_dependentry402 = __twr_v412;
    __twr_l56:;
    if (_mng_dependentry402 != _mng_dependhead400) { goto __twr_l54; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v413 = 617ULL;
    __twr_v414 = _mng_target386 + __twr_v413;
    __twr_v415 = *(uint8_t*)(__twr_v414);
    if (!(__twr_v415)) { goto __twr_l61; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v416 = 504ULL;
    __twr_v417 = _mng_target386 + __twr_v416;
    _mng_sourceshead418 = __twr_v417;
    __twr_v419 = *(uint64_t*)(_mng_sourceshead418);
    _mng_sourcesentry420 = __twr_v419;
    __twr_v421 = (uint64_t)(&_mng_context422);
    *(uint64_t*)(__twr_v421) = _mng_target386;
    __twr_v423 = 8ULL;
    __twr_v424 = __twr_v421 + __twr_v423;
    *(uint64_t*)(__twr_v424) = _mng_dagnode393;
    if (_mng_sourcesentry420 == _mng_sourceshead418) { goto __twr_l64; } else { goto __twr_l63; }
    __twr_l63:;
    _mng_sourcesrcrd425 = _mng_sourcesentry420;
    __twr_v426 = 16ULL;
    __twr_v427 = _mng_sourcesrcrd425 + __twr_v426;
    __twr_v428 = (uint64_t)(&_mng_context422);
    __twr_v429 = __twr_v428 + __twr_v426;
    *(uint64_t*)(__twr_v429) = __twr_v427;
    __twr_v430 = (uint64_t)(&TlIterateDirectory);
    __twr_v431 = 32ULL;
    __twr_v432 = _mng_sourcesrcrd425 + __twr_v431;
    __twr_v433 = *(uint64_t*)(__twr_v432);
    __twr_v434 = (uint64_t)(&BtProcessDirectoryEntry);
    __twr_v435 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v430)(__twr_v433, __twr_v434, __twr_v428);
    _mng_status436 = __twr_v435;
    if (!(_mng_status436)) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v437 = (uint64_t)(&TlInternalError);
    __twr_v438 = (uint64_t)(&"Failed to iterate directory");
    __twr_v439 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v437)(__twr_v438, __twr_v439, __twr_v439, __twr_v439);
    __twr_l66:;
    __twr_v440 = *(uint64_t*)(_mng_sourcesentry420);
    _mng_sourcesentry420 = __twr_v440;
    __twr_l65:;
    if (_mng_sourcesentry420 != _mng_sourceshead418) { goto __twr_l63; } else { goto __twr_l64; }
    __twr_l64:;
    __twr_v441 = (uint64_t)(&_mng_context422);
    __twr_v442 = 8ULL;
    __twr_v443 = __twr_v441 + __twr_v442;
    __twr_v444 = *(uint64_t*)(__twr_v443);
    _mng_dagnode393 = __twr_v444;
    __twr_l69:;
    __twr_l68:;
    __twr_l61:;
    __twr_v445 = 608ULL;
    __twr_v446 = _mng_target386 + __twr_v445;
    *(uint64_t*)(__twr_v446) = _mng_dagnode393;
    __twr_v447 = 1ULL;
    __twr_v448 = 616ULL;
    __twr_v449 = _mng_target386 + __twr_v448;
    *(uint8_t*)(__twr_v449) = __twr_v447;
    _jkl_retv = _mng_dagnode393;
    goto _jkl_epilogue;
    __twr_l48:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtBuildDag() {
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t _mng_dagroot454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    __twr_v450 = (uint64_t)(&BtBuildDagForTarget);
    __twr_v451 = (uint64_t)(&BtSelectedTarget);
    __twr_v452 = *(uint64_t*)(__twr_v451);
    __twr_v453 = ((uint64_t (*)(uint64_t))__twr_v450)(__twr_v452);
    _mng_dagroot454 = __twr_v453;
    if (_mng_dagroot454) { goto __twr_l71; } else { goto __twr_l72; }
    __twr_l72:;
    __twr_v455 = (uint64_t)(&TlPrintString);
    __twr_v456 = (uint64_t)(&"The target is already up to date.\n");
    ((void (*)(uint64_t))__twr_v455)(__twr_v456);
    goto _jkl_epilogue;
    __twr_l71:;
    __twr_l70:;
    _jkl_epilogue:;
}

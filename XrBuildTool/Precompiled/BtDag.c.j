#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlStringToNumber(uint64_t _mng_src110, uint64_t _mng_bufsize111, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler112);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine113, uint64_t _mng_arg114, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread115);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex116);
extern void TlReleaseMutex(uint64_t _mng_mutex117);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue118);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore119);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore120);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg121);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename122, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock123, uint64_t _mng_filepath124);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope125);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg126);
extern void LexExpandMacro(uint64_t _mng_macro127, uint64_t _mng_token128);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream129, uint64_t _mng_macro130);
extern void LexUninitializeStream(uint64_t _mng_stream131);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream132);
extern void LexPushStream(uint64_t _mng_stream133);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream134, uint64_t _mng_fileblock135, uint64_t _mng_handle136);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock137, uint64_t _mng_handle138);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest139, uint64_t _mng_src140);
extern void LexGetToken(uint64_t _mng_token141);
extern void LexPutbackToken(uint64_t _mng_token142);
extern uint64_t LexMatchToken(uint64_t _mng_token143, uint64_t _mng_type144, uint64_t _mng_subtype145);
extern void LexStreamError(uint64_t _mng_str146, uint64_t _mng_err1147, uint64_t _mng_err2148, uint64_t _mng_err3149);
extern void LexTokenError(uint64_t _mng_token150, uint64_t _mng_str151, uint64_t _mng_err1152, uint64_t _mng_err2153, uint64_t _mng_err3154);
extern uint64_t LexCrunchNumber(uint64_t _mng_token155, uint64_t _mng_buffer156);
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtStatFile(uint64_t _mng_fullpath157);
extern uint64_t BtSelectedTarget;
uint64_t BtLeafListHead[2];
uint64_t BtLeafListMutex = 0ULL;
uint64_t BtLeafSemaphore = 0ULL;
uint64_t BtLeafCount = 0ULL;
uint64_t BtNodeCount = 0ULL;
uint64_t BtTerminateWorkers = 0ULL;
void BtConnectDagNodes(uint64_t _mng_fromnode158, uint64_t _mng_tonode159) {
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t _mng_dagedge163;
    uint64_t _mng_status164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t _mng_listentry181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t _mng_prev185;
    uint64_t __twr_v186;
    uint64_t _mng_next187;
    uint64_t __twr_v188;
    uint64_t _mng_listhead189;
    uint64_t _mng_listentry190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t _mng_last194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t _mng_listhead198;
    uint64_t __twr_v199;
    uint64_t _mng_listentry200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t _mng_last203;
    uint64_t __twr_v204;
    __twr_v160 = (uint64_t)(&TlBumpAlloc);
    __twr_v161 = 48ULL;
    __twr_v162 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v160)(__twr_v161, (uint64_t)(&_mng_dagedge163));
    _mng_status164 = __twr_v162;
    if (!(_mng_status164)) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v165 = (uint64_t)(&TlInternalError);
    __twr_v166 = (uint64_t)(&"Failed to allocate DAG edge");
    __twr_v167 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v165)(__twr_v166, __twr_v167, __twr_v167, __twr_v167);
    __twr_l2:;
    __twr_v168 = 32ULL;
    __twr_v169 = _mng_dagedge163 + __twr_v168;
    *(uint64_t*)(__twr_v169) = _mng_fromnode158;
    __twr_v170 = 40ULL;
    __twr_v171 = _mng_dagedge163 + __twr_v170;
    *(uint64_t*)(__twr_v171) = _mng_tonode159;
    __twr_v172 = 16ULL;
    __twr_v173 = _mng_fromnode158 + __twr_v172;
    __twr_v174 = *(uint64_t*)(__twr_v173);
    if (__twr_v174 != __twr_v173) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v175 = 1ULL;
    __twr_v176 = (uint64_t)(&BtLeafCount);
    __twr_v177 = *(uint64_t*)(__twr_v176);
    __twr_v178 = __twr_v177 - __twr_v175;
    *(uint64_t*)(__twr_v176) = __twr_v178;
    __twr_v179 = 32ULL;
    __twr_v180 = _mng_fromnode158 + __twr_v179;
    _mng_listentry181 = __twr_v180;
    __twr_v182 = 8ULL;
    __twr_v183 = _mng_listentry181 + __twr_v182;
    __twr_v184 = *(uint64_t*)(__twr_v183);
    _mng_prev185 = __twr_v184;
    __twr_v186 = *(uint64_t*)(_mng_listentry181);
    _mng_next187 = __twr_v186;
    *(uint64_t*)(_mng_prev185) = _mng_next187;
    __twr_v188 = _mng_next187 + __twr_v182;
    *(uint64_t*)(__twr_v188) = _mng_prev185;
    __twr_l4:;
    _mng_listhead189 = _mng_tonode159;
    _mng_listentry190 = _mng_dagedge163;
    __twr_v191 = 8ULL;
    __twr_v192 = _mng_listhead189 + __twr_v191;
    __twr_v193 = *(uint64_t*)(__twr_v192);
    _mng_last194 = __twr_v193;
    __twr_v195 = _mng_listentry190 + __twr_v191;
    *(uint64_t*)(__twr_v195) = _mng_last194;
    *(uint64_t*)(_mng_listentry190) = _mng_listhead189;
    *(uint64_t*)(_mng_last194) = _mng_listentry190;
    *(uint64_t*)(__twr_v192) = _mng_listentry190;
    __twr_v196 = 16ULL;
    __twr_v197 = _mng_fromnode158 + __twr_v196;
    _mng_listhead198 = __twr_v197;
    __twr_v199 = _mng_dagedge163 + __twr_v196;
    _mng_listentry200 = __twr_v199;
    __twr_v201 = _mng_listhead198 + __twr_v191;
    __twr_v202 = *(uint64_t*)(__twr_v201);
    _mng_last203 = __twr_v202;
    __twr_v204 = _mng_listentry200 + __twr_v191;
    *(uint64_t*)(__twr_v204) = _mng_last203;
    *(uint64_t*)(_mng_listentry200) = _mng_listhead198;
    *(uint64_t*)(_mng_last203) = _mng_listentry200;
    *(uint64_t*)(__twr_v201) = _mng_listentry200;
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t BtCreateDagNode(uint64_t _mng_target205, uint64_t _mng_type206) {
    uint64_t _jkl_retv;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t _mng_dagnode210;
    uint64_t _mng_status211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t _mng_listhead215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t _mng_listhead220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t _mng_listhead227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t _mng_listentry230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t _mng_last233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    __twr_v207 = (uint64_t)(&TlBumpAlloc);
    __twr_v208 = 409ULL;
    __twr_v209 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v207)(__twr_v208, (uint64_t)(&_mng_dagnode210));
    _mng_status211 = __twr_v209;
    if (!(_mng_status211)) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l8:;
    __twr_v212 = (uint64_t)(&TlInternalError);
    __twr_v213 = (uint64_t)(&"Failed to allocate DAG node");
    __twr_v214 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v212)(__twr_v213, __twr_v214, __twr_v214, __twr_v214);
    __twr_l7:;
    _mng_listhead215 = _mng_dagnode210;
    __twr_v216 = 8ULL;
    __twr_v217 = _mng_listhead215 + __twr_v216;
    *(uint64_t*)(__twr_v217) = _mng_listhead215;
    *(uint64_t*)(_mng_listhead215) = _mng_listhead215;
    __twr_v218 = 16ULL;
    __twr_v219 = _mng_dagnode210 + __twr_v218;
    _mng_listhead220 = __twr_v219;
    __twr_v221 = _mng_listhead220 + __twr_v216;
    *(uint64_t*)(__twr_v221) = _mng_listhead220;
    *(uint64_t*)(_mng_listhead220) = _mng_listhead220;
    __twr_v222 = 48ULL;
    __twr_v223 = _mng_dagnode210 + __twr_v222;
    *(uint64_t*)(__twr_v223) = _mng_target205;
    __twr_v224 = 408ULL;
    __twr_v225 = _mng_dagnode210 + __twr_v224;
    *(uint8_t*)(__twr_v225) = _mng_type206;
    __twr_v226 = (uint64_t)(&BtLeafListHead);
    _mng_listhead227 = __twr_v226;
    __twr_v228 = 32ULL;
    __twr_v229 = _mng_dagnode210 + __twr_v228;
    _mng_listentry230 = __twr_v229;
    __twr_v231 = _mng_listhead227 + __twr_v216;
    __twr_v232 = *(uint64_t*)(__twr_v231);
    _mng_last233 = __twr_v232;
    __twr_v234 = _mng_listentry230 + __twr_v216;
    *(uint64_t*)(__twr_v234) = _mng_last233;
    *(uint64_t*)(_mng_listentry230) = _mng_listhead227;
    *(uint64_t*)(_mng_last233) = _mng_listentry230;
    *(uint64_t*)(__twr_v231) = _mng_listentry230;
    __twr_v235 = 1ULL;
    __twr_v236 = (uint64_t)(&BtLeafCount);
    __twr_v237 = *(uint64_t*)(__twr_v236);
    __twr_v238 = __twr_v237 + __twr_v235;
    *(uint64_t*)(__twr_v236) = __twr_v238;
    __twr_v239 = (uint64_t)(&BtNodeCount);
    __twr_v240 = *(uint64_t*)(__twr_v239);
    __twr_v241 = __twr_v240 + __twr_v235;
    *(uint64_t*)(__twr_v239) = __twr_v241;
    _jkl_retv = _mng_dagnode210;
    goto _jkl_epilogue;
    __twr_l6:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t BtRemoveDagNode(uint64_t _mng_node242) {
    uint64_t _jkl_retv;
    uint64_t _mng_head243;
    uint64_t __twr_v244;
    uint64_t _mng_listentry245;
    uint64_t _mng_edge246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t _mng_fromnode250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t _mng_listentry253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t _mng_prev257;
    uint64_t __twr_v258;
    uint64_t _mng_next259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t _mng_listhead272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t _mng_listentry275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t _mng_last279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    _mng_head243 = _mng_node242;
    __twr_v244 = *(uint64_t*)(_mng_head243);
    _mng_listentry245 = __twr_v244;
    if (_mng_head243 == _mng_listentry245) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l10:;
    _mng_edge246 = _mng_listentry245;
    __twr_v247 = 32ULL;
    __twr_v248 = _mng_edge246 + __twr_v247;
    __twr_v249 = *(uint64_t*)(__twr_v248);
    _mng_fromnode250 = __twr_v249;
    __twr_v251 = 16ULL;
    __twr_v252 = _mng_edge246 + __twr_v251;
    _mng_listentry253 = __twr_v252;
    __twr_v254 = 8ULL;
    __twr_v255 = _mng_listentry253 + __twr_v254;
    __twr_v256 = *(uint64_t*)(__twr_v255);
    _mng_prev257 = __twr_v256;
    __twr_v258 = *(uint64_t*)(_mng_listentry253);
    _mng_next259 = __twr_v258;
    *(uint64_t*)(_mng_prev257) = _mng_next259;
    __twr_v260 = _mng_next259 + __twr_v254;
    *(uint64_t*)(__twr_v260) = _mng_prev257;
    __twr_v261 = _mng_fromnode250 + __twr_v251;
    __twr_v262 = *(uint64_t*)(__twr_v261);
    if (__twr_v262 != __twr_v261) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v263 = 1ULL;
    __twr_v264 = (uint64_t)(&BtLeafCount);
    __twr_v265 = *(uint64_t*)(__twr_v264);
    __twr_v266 = __twr_v265 + __twr_v263;
    *(uint64_t*)(__twr_v264) = __twr_v266;
    __twr_v267 = *(uint64_t*)(__twr_v264);
    if (__twr_v267 != __twr_v263) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v268 = (uint64_t)(&TlReleaseSemaphore);
    __twr_v269 = (uint64_t)(&BtLeafSemaphore);
    __twr_v270 = *(uint64_t*)(__twr_v269);
    ((void (*)(uint64_t))__twr_v268)(__twr_v270);
    __twr_l15:;
    __twr_v271 = (uint64_t)(&BtLeafListHead);
    _mng_listhead272 = __twr_v271;
    __twr_v273 = 32ULL;
    __twr_v274 = _mng_fromnode250 + __twr_v273;
    _mng_listentry275 = __twr_v274;
    __twr_v276 = 8ULL;
    __twr_v277 = _mng_listhead272 + __twr_v276;
    __twr_v278 = *(uint64_t*)(__twr_v277);
    _mng_last279 = __twr_v278;
    __twr_v280 = _mng_listentry275 + __twr_v276;
    *(uint64_t*)(__twr_v280) = _mng_last279;
    *(uint64_t*)(_mng_listentry275) = _mng_listhead272;
    *(uint64_t*)(_mng_last279) = _mng_listentry275;
    *(uint64_t*)(__twr_v277) = _mng_listentry275;
    __twr_l13:;
    __twr_v281 = *(uint64_t*)(_mng_listentry245);
    _mng_listentry245 = __twr_v281;
    __twr_l12:;
    if (_mng_head243 != _mng_listentry245) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v282 = 1ULL;
    __twr_v283 = (uint64_t)(&BtNodeCount);
    __twr_v284 = *(uint64_t*)(__twr_v283);
    __twr_v285 = __twr_v284 - __twr_v282;
    *(uint64_t*)(__twr_v283) = __twr_v285;
    __twr_l9:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t BtDepsLineBuffer[32];
uint64_t BtAnyDepsLater(uint64_t _mng_srctime286, uint64_t _mng_depspath287) {
    uint64_t _jkl_retv;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t _mng_handle290;
    uint64_t _mng_status291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t _mng_stat297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t _mng_ptr306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t _mng_tokptr315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t _mng_depstat324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    __twr_v288 = (uint64_t)(&TlOpenSource);
    __twr_v289 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v288)(_mng_depspath287, (uint64_t)(&_mng_handle290));
    _mng_status291 = __twr_v289;
    if (!(_mng_status291)) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v292 = (uint64_t)(&TlInternalError);
    __twr_v293 = (uint64_t)(&"Failed to open deps file");
    __twr_v294 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v293, __twr_v294, __twr_v294, __twr_v294);
    __twr_l18:;
    __twr_v295 = (uint64_t)(&BtStatFile);
    __twr_v296 = ((uint64_t (*)(uint64_t))__twr_v295)(_mng_depspath287);
    _mng_stat297 = __twr_v296;
    if (_mng_stat297) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v298 = (uint64_t)(&TlInternalError);
    __twr_v299 = (uint64_t)(&"Failed to stat deps file");
    __twr_v300 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v298)(__twr_v299, __twr_v300, __twr_v300, __twr_v300);
    __twr_l20:;
    __twr_v301 = (uint64_t)(&TlAlloc);
    __twr_v302 = 8ULL;
    __twr_v303 = _mng_stat297 + __twr_v302;
    __twr_v304 = *(uint32_t*)(__twr_v303);
    __twr_v305 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v301)(__twr_v304, (uint64_t)(&_mng_ptr306));
    _mng_status291 = __twr_v305;
    if (!(_mng_status291)) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v307 = (uint64_t)(&TlInternalError);
    __twr_v308 = (uint64_t)(&"Failed to allocate deps buffer");
    __twr_v309 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v307)(__twr_v308, __twr_v309, __twr_v309, __twr_v309);
    __twr_l22:;
    __twr_v310 = (uint64_t)(&TlReadFile);
    __twr_v311 = 8ULL;
    __twr_v312 = _mng_stat297 + __twr_v311;
    __twr_v313 = *(uint32_t*)(__twr_v312);
    __twr_v314 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v310)(_mng_handle290, __twr_v313, _mng_ptr306);
    _mng_tokptr315 = _mng_ptr306;
    __twr_l24:;
    __twr_v316 = (uint64_t)(&TlTokenize);
    __twr_v317 = (uint64_t)(&BtDepsLineBuffer);
    __twr_v318 = 256ULL;
    __twr_v319 = 10ULL;
    __twr_v320 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v316)(_mng_tokptr315, __twr_v317, __twr_v318, __twr_v319);
    _mng_tokptr315 = __twr_v320;
    if (_mng_tokptr315) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    goto __twr_l25;
    __twr_l26:;
    __twr_v321 = (uint64_t)(&BtStatFile);
    __twr_v322 = (uint64_t)(&BtDepsLineBuffer);
    __twr_v323 = ((uint64_t (*)(uint64_t))__twr_v321)(__twr_v322);
    _mng_depstat324 = __twr_v323;
    if (_mng_depstat324) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v325 = (uint64_t)(&TlInternalError);
    __twr_v326 = (uint64_t)(&"Failed to stat dependent header");
    __twr_v327 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v325)(__twr_v326, __twr_v327, __twr_v327, __twr_v327);
    __twr_l28:;
    __twr_v328 = 4ULL;
    __twr_v329 = _mng_depstat324 + __twr_v328;
    __twr_v330 = *(uint32_t*)(__twr_v329);
    if (__twr_v330 < _mng_srctime286) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v331 = (uint64_t)(&TlFree);
    ((void (*)(uint64_t))__twr_v331)(_mng_ptr306);
    __twr_v332 = 1ULL;
    _jkl_retv = __twr_v332;
    goto _jkl_epilogue;
    __twr_l30:;
    goto __twr_l24;
    __twr_l25:;
    __twr_v333 = (uint64_t)(&TlFree);
    ((void (*)(uint64_t))__twr_v333)(_mng_ptr306);
    __twr_v334 = 0ULL;
    _jkl_retv = __twr_v334;
    goto _jkl_epilogue;
    __twr_l17:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtProcessDirectoryEntry(uint64_t _mng_fullpath335, uint64_t _mng_filename336, uint64_t _mng_context337) {
    uint64_t _mng_pdc338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t _mng_ext341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t _mng_nodetype345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t _mng_stat354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t _mng_dagnode363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t _mng_objectpath374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t _mng_depspath377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t _mng_tmppath380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t _mng_objstat436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    _mng_pdc338 = _mng_context337;
    __twr_v339 = (uint64_t)(&TlGetPathExtension);
    __twr_v340 = ((uint64_t (*)(uint64_t))__twr_v339)(_mng_filename336);
    _mng_ext341 = __twr_v340;
    __twr_v342 = (uint64_t)(&TlCompareString);
    __twr_v343 = (uint64_t)(&"jkl");
    __twr_v344 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v342)(_mng_ext341, __twr_v343);
    if (__twr_v344) { goto __twr_l35; } else { goto __twr_l34; }
    __twr_l34:;
    _mng_nodetype345 = 1ULL;
    goto __twr_l33;
    __twr_l35:;
    __twr_v346 = (uint64_t)(&TlCompareString);
    __twr_v347 = (uint64_t)(&"s");
    __twr_v348 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v346)(_mng_ext341, __twr_v347);
    if (__twr_v348) { goto __twr_l37; } else { goto __twr_l36; }
    __twr_l36:;
    _mng_nodetype345 = 3ULL;
    goto __twr_l33;
    __twr_l37:;
    __twr_v349 = (uint64_t)(&TlCompareString);
    __twr_v350 = (uint64_t)(&"c");
    __twr_v351 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v349)(_mng_ext341, __twr_v350);
    if (__twr_v351) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    _mng_nodetype345 = 2ULL;
    goto __twr_l33;
    __twr_l39:;
    goto _jkl_epilogue;
    __twr_l33:;
    __twr_v352 = (uint64_t)(&BtStatFile);
    __twr_v353 = ((uint64_t (*)(uint64_t))__twr_v352)(_mng_fullpath335);
    _mng_stat354 = __twr_v353;
    if (_mng_stat354) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l41:;
    __twr_v355 = (uint64_t)(&TlInternalError);
    __twr_v356 = (uint64_t)(&"Failed to stat file");
    __twr_v357 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v355)(__twr_v356, __twr_v357, __twr_v357, __twr_v357);
    __twr_l40:;
    __twr_v358 = *(uint8_t*)(_mng_stat354);
    __twr_v359 = 1ULL;
    if (__twr_v358 == __twr_v359) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    goto _jkl_epilogue;
    __twr_l42:;
    __twr_v360 = (uint64_t)(&BtCreateDagNode);
    __twr_v361 = *(uint64_t*)(_mng_pdc338);
    __twr_v362 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v360)(__twr_v361, _mng_nodetype345);
    _mng_dagnode363 = __twr_v362;
    __twr_v364 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v365 = 56ULL;
    __twr_v366 = _mng_dagnode363 + __twr_v365;
    ((void (*)(uint64_t))__twr_v364)(__twr_v366);
    __twr_v367 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v368 = (uint64_t)(&TlMeasureString);
    __twr_v369 = ((uint64_t (*)(uint64_t))__twr_v368)(_mng_fullpath335);
    __twr_v370 = 1ULL;
    __twr_v371 = __twr_v369 + __twr_v370;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v367)(__twr_v366, _mng_fullpath335, __twr_v371);
    __twr_v372 = 144ULL;
    __twr_v373 = _mng_dagnode363 + __twr_v372;
    _mng_objectpath374 = __twr_v373;
    __twr_v375 = 232ULL;
    __twr_v376 = _mng_dagnode363 + __twr_v375;
    _mng_depspath377 = __twr_v376;
    __twr_v378 = 320ULL;
    __twr_v379 = _mng_dagnode363 + __twr_v378;
    _mng_tmppath380 = __twr_v379;
    ((void (*)(uint64_t))__twr_v364)(_mng_objectpath374);
    ((void (*)(uint64_t))__twr_v364)(_mng_depspath377);
    ((void (*)(uint64_t))__twr_v364)(_mng_tmppath380);
    __twr_v381 = 16ULL;
    __twr_v382 = _mng_pdc338 + __twr_v381;
    __twr_v383 = *(uint64_t*)(__twr_v382);
    __twr_v384 = __twr_v383 + __twr_v381;
    __twr_v385 = *(uint64_t*)(__twr_v384);
    __twr_v386 = *(uint64_t*)(__twr_v383);
    __twr_v387 = __twr_v386 - __twr_v370;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v367)(_mng_objectpath374, __twr_v385, __twr_v387);
    __twr_v388 = _mng_objectpath374 + __twr_v381;
    __twr_v389 = *(uint64_t*)(__twr_v388);
    __twr_v390 = *(uint64_t*)(_mng_objectpath374);
    __twr_v391 = __twr_v390 - __twr_v370;
    __twr_v392 = __twr_v389 + __twr_v391;
    __twr_v393 = *(uint8_t*)(__twr_v392);
    __twr_v394 = 47ULL;
    if (__twr_v393 == __twr_v394) { goto __twr_l44; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v395 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v396 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v395)(_mng_objectpath374, __twr_v396);
    __twr_l44:;
    __twr_v397 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v398 = (uint64_t)(&"obj/");
    __twr_v399 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_objectpath374, __twr_v398, __twr_v399);
    __twr_v400 = (uint64_t)(&TlCreateDirectory);
    __twr_v401 = 16ULL;
    __twr_v402 = _mng_objectpath374 + __twr_v401;
    __twr_v403 = *(uint64_t*)(__twr_v402);
    __twr_v404 = ((uint64_t (*)(uint64_t))__twr_v400)(__twr_v403);
    __twr_v405 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v406 = ((uint64_t (*)(uint64_t))__twr_v405)(_mng_objectpath374);
    __twr_v407 = (uint64_t)(&BtTargetArchitectureName);
    __twr_v408 = 1ULL;
    __twr_v409 = (uint64_t)(&TlMeasureString);
    __twr_v410 = ((uint64_t (*)(uint64_t))__twr_v409)(__twr_v407);
    __twr_v411 = __twr_v410 + __twr_v408;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_objectpath374, __twr_v407, __twr_v411);
    __twr_v412 = *(uint64_t*)(__twr_v402);
    __twr_v413 = ((uint64_t (*)(uint64_t))__twr_v400)(__twr_v412);
    __twr_v414 = ((uint64_t (*)(uint64_t))__twr_v405)(_mng_objectpath374);
    __twr_v415 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v416 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v415)(_mng_objectpath374, __twr_v416);
    __twr_v417 = ((uint64_t (*)(uint64_t))__twr_v409)(_mng_filename336);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_objectpath374, _mng_filename336, __twr_v417);
    __twr_v418 = *(uint64_t*)(__twr_v402);
    __twr_v419 = *(uint64_t*)(_mng_objectpath374);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_tmppath380, __twr_v418, __twr_v419);
    __twr_v420 = *(uint64_t*)(__twr_v402);
    __twr_v421 = *(uint64_t*)(_mng_objectpath374);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_depspath377, __twr_v420, __twr_v421);
    __twr_v422 = (uint64_t)(&".o");
    __twr_v423 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_objectpath374, __twr_v422, __twr_v423);
    __twr_v424 = (uint64_t)(&".dep");
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_depspath377, __twr_v424, __twr_v399);
    __twr_v425 = (uint64_t)(&".tmp");
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_tmppath380, __twr_v425, __twr_v399);
    if (_mng_nodetype345 != __twr_v408) { goto __twr_l46; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v426 = (uint64_t)(&TlPathExists);
    __twr_v427 = 16ULL;
    __twr_v428 = _mng_depspath377 + __twr_v427;
    __twr_v429 = *(uint64_t*)(__twr_v428);
    __twr_v430 = ((uint64_t (*)(uint64_t))__twr_v426)(__twr_v429);
    if (__twr_v430) { goto __twr_l46; } else { goto __twr_l47; }
    __twr_l47:;
    goto __twr_lAddToDag;
    __twr_l46:;
    __twr_v431 = (uint64_t)(&BtStatFile);
    __twr_v432 = 16ULL;
    __twr_v433 = _mng_objectpath374 + __twr_v432;
    __twr_v434 = *(uint64_t*)(__twr_v433);
    __twr_v435 = ((uint64_t (*)(uint64_t))__twr_v431)(__twr_v434);
    _mng_objstat436 = __twr_v435;
    if (_mng_objstat436) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    goto __twr_lAddToDag;
    __twr_l50:;
    __twr_v437 = 4ULL;
    __twr_v438 = _mng_stat354 + __twr_v437;
    __twr_v439 = *(uint32_t*)(__twr_v438);
    __twr_v440 = _mng_objstat436 + __twr_v437;
    __twr_v441 = *(uint32_t*)(__twr_v440);
    if (__twr_v439 < __twr_v441) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    goto __twr_lAddToDag;
    __twr_l52:;
    __twr_v442 = (uint64_t)(&BtAnyDepsLater);
    __twr_v443 = 4ULL;
    __twr_v444 = _mng_stat354 + __twr_v443;
    __twr_v445 = *(uint32_t*)(__twr_v444);
    __twr_v446 = 16ULL;
    __twr_v447 = _mng_depspath377 + __twr_v446;
    __twr_v448 = *(uint64_t*)(__twr_v447);
    __twr_v449 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v442)(__twr_v445, __twr_v448);
    if (!(__twr_v449)) { goto __twr_l54; } else { goto __twr_l55; }
    __twr_l55:;
    goto __twr_lAddToDag;
    __twr_l54:;
    __twr_v450 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v450)(_mng_objectpath374);
    ((void (*)(uint64_t))__twr_v450)(_mng_depspath377);
    ((void (*)(uint64_t))__twr_v450)(_mng_tmppath380);
    __twr_v451 = 56ULL;
    __twr_v452 = _mng_dagnode363 + __twr_v451;
    ((void (*)(uint64_t))__twr_v450)(__twr_v452);
    goto _jkl_epilogue;
    __twr_lAddToDag:;
    __twr_v453 = 8ULL;
    __twr_v454 = _mng_pdc338 + __twr_v453;
    __twr_v455 = *(uint64_t*)(__twr_v454);
    if (__twr_v455) { goto __twr_l56; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v456 = (uint64_t)(&BtCreateDagNode);
    __twr_v457 = *(uint64_t*)(_mng_pdc338);
    __twr_v458 = 4ULL;
    __twr_v459 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v456)(__twr_v457, __twr_v458);
    __twr_v460 = 8ULL;
    __twr_v461 = _mng_pdc338 + __twr_v460;
    *(uint64_t*)(__twr_v461) = __twr_v459;
    __twr_l56:;
    __twr_v462 = (uint64_t)(&BtConnectDagNodes);
    __twr_v463 = 8ULL;
    __twr_v464 = _mng_pdc338 + __twr_v463;
    __twr_v465 = *(uint64_t*)(__twr_v464);
    ((void (*)(uint64_t, uint64_t))__twr_v462)(__twr_v465, _mng_dagnode363);
    __twr_l32:;
    _jkl_epilogue:;
}
uint64_t BtBuildDagForTarget(uint64_t _mng_target466) {
    uint64_t _jkl_retv;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t _mng_dagnode473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t _mng_dagtype477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t _mng_dependhead480;
    uint64_t __twr_v481;
    uint64_t _mng_dependentry482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t _mng_dependnode488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t _mng_sourceshead498;
    uint64_t __twr_v499;
    uint64_t _mng_sourcesentry500;
    uint64_t __twr_v501;
    uint64_t _mng_context502[3];
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t _mng_sourcesrcrd505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t _mng_status516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    __twr_v467 = 616ULL;
    __twr_v468 = _mng_target466 + __twr_v467;
    __twr_v469 = *(uint8_t*)(__twr_v468);
    if (!(__twr_v469)) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v470 = 608ULL;
    __twr_v471 = _mng_target466 + __twr_v470;
    __twr_v472 = *(uint64_t*)(__twr_v471);
    _jkl_retv = __twr_v472;
    goto _jkl_epilogue;
    __twr_l59:;
    _mng_dagnode473 = 0ULL;
    __twr_v474 = 617ULL;
    __twr_v475 = _mng_target466 + __twr_v474;
    __twr_v476 = *(uint8_t*)(__twr_v475);
    if (!(__twr_v476)) { goto __twr_l63; } else { goto __twr_l62; }
    __twr_l62:;
    _mng_dagtype477 = 4ULL;
    goto __twr_l61;
    __twr_l63:;
    _mng_dagtype477 = 0ULL;
    __twr_l61:;
    __twr_v478 = 488ULL;
    __twr_v479 = _mng_target466 + __twr_v478;
    _mng_dependhead480 = __twr_v479;
    __twr_v481 = *(uint64_t*)(_mng_dependhead480);
    _mng_dependentry482 = __twr_v481;
    if (_mng_dependentry482 == _mng_dependhead480) { goto __twr_l65; } else { goto __twr_l64; }
    __twr_l64:;
    __twr_v483 = (uint64_t)(&BtBuildDagForTarget);
    __twr_v484 = 16ULL;
    __twr_v485 = _mng_dependentry482 + __twr_v484;
    __twr_v486 = *(uint64_t*)(__twr_v485);
    __twr_v487 = ((uint64_t (*)(uint64_t))__twr_v483)(__twr_v486);
    _mng_dependnode488 = __twr_v487;
    if (!(_mng_dependnode488)) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    if (_mng_dagnode473) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v489 = (uint64_t)(&BtCreateDagNode);
    __twr_v490 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v489)(_mng_target466, _mng_dagtype477);
    _mng_dagnode473 = __twr_v490;
    __twr_l69:;
    __twr_v491 = (uint64_t)(&BtConnectDagNodes);
    ((void (*)(uint64_t, uint64_t))__twr_v491)(_mng_dagnode473, _mng_dependnode488);
    __twr_l67:;
    __twr_v492 = *(uint64_t*)(_mng_dependentry482);
    _mng_dependentry482 = __twr_v492;
    __twr_l66:;
    if (_mng_dependentry482 != _mng_dependhead480) { goto __twr_l64; } else { goto __twr_l65; }
    __twr_l65:;
    __twr_v493 = 617ULL;
    __twr_v494 = _mng_target466 + __twr_v493;
    __twr_v495 = *(uint8_t*)(__twr_v494);
    if (!(__twr_v495)) { goto __twr_l71; } else { goto __twr_l72; }
    __twr_l72:;
    __twr_v496 = 504ULL;
    __twr_v497 = _mng_target466 + __twr_v496;
    _mng_sourceshead498 = __twr_v497;
    __twr_v499 = *(uint64_t*)(_mng_sourceshead498);
    _mng_sourcesentry500 = __twr_v499;
    __twr_v501 = (uint64_t)(&_mng_context502);
    *(uint64_t*)(__twr_v501) = _mng_target466;
    __twr_v503 = 8ULL;
    __twr_v504 = __twr_v501 + __twr_v503;
    *(uint64_t*)(__twr_v504) = _mng_dagnode473;
    if (_mng_sourcesentry500 == _mng_sourceshead498) { goto __twr_l74; } else { goto __twr_l73; }
    __twr_l73:;
    _mng_sourcesrcrd505 = _mng_sourcesentry500;
    __twr_v506 = 16ULL;
    __twr_v507 = _mng_sourcesrcrd505 + __twr_v506;
    __twr_v508 = (uint64_t)(&_mng_context502);
    __twr_v509 = __twr_v508 + __twr_v506;
    *(uint64_t*)(__twr_v509) = __twr_v507;
    __twr_v510 = (uint64_t)(&TlIterateDirectory);
    __twr_v511 = 32ULL;
    __twr_v512 = _mng_sourcesrcrd505 + __twr_v511;
    __twr_v513 = *(uint64_t*)(__twr_v512);
    __twr_v514 = (uint64_t)(&BtProcessDirectoryEntry);
    __twr_v515 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v510)(__twr_v513, __twr_v514, __twr_v508);
    _mng_status516 = __twr_v515;
    if (!(_mng_status516)) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v517 = (uint64_t)(&TlInternalError);
    __twr_v518 = (uint64_t)(&"Failed to iterate directory");
    __twr_v519 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v517)(__twr_v518, __twr_v519, __twr_v519, __twr_v519);
    __twr_l76:;
    __twr_v520 = *(uint64_t*)(_mng_sourcesentry500);
    _mng_sourcesentry500 = __twr_v520;
    __twr_l75:;
    if (_mng_sourcesentry500 != _mng_sourceshead498) { goto __twr_l73; } else { goto __twr_l74; }
    __twr_l74:;
    __twr_v521 = (uint64_t)(&_mng_context502);
    __twr_v522 = 8ULL;
    __twr_v523 = __twr_v521 + __twr_v522;
    __twr_v524 = *(uint64_t*)(__twr_v523);
    _mng_dagnode473 = __twr_v524;
    if (_mng_dagnode473) { goto __twr_l78; } else { goto __twr_l80; }
    __twr_l80:;
    __twr_v525 = (uint64_t)(&TlPathExists);
    __twr_v526 = 536ULL;
    __twr_v527 = _mng_target466 + __twr_v526;
    __twr_v528 = *(uint64_t*)(__twr_v527);
    __twr_v529 = ((uint64_t (*)(uint64_t))__twr_v525)(__twr_v528);
    if (__twr_v529) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v530 = (uint64_t)(&BtCreateDagNode);
    __twr_v531 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v530)(_mng_target466, _mng_dagtype477);
    _mng_dagnode473 = __twr_v531;
    __twr_l78:;
    __twr_l71:;
    __twr_v532 = 608ULL;
    __twr_v533 = _mng_target466 + __twr_v532;
    *(uint64_t*)(__twr_v533) = _mng_dagnode473;
    __twr_v534 = 1ULL;
    __twr_v535 = 616ULL;
    __twr_v536 = _mng_target466 + __twr_v535;
    *(uint8_t*)(__twr_v536) = __twr_v534;
    _jkl_retv = _mng_dagnode473;
    goto _jkl_epilogue;
    __twr_l58:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtBuildJkl(uint64_t _mng_dagnode537) {
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    __twr_v538 = (uint64_t)(&TlPrintString);
    __twr_v539 = (uint64_t)(&"Building ");
    ((void (*)(uint64_t))__twr_v538)(__twr_v539);
    __twr_v540 = 72ULL;
    __twr_v541 = _mng_dagnode537 + __twr_v540;
    __twr_v542 = *(uint64_t*)(__twr_v541);
    ((void (*)(uint64_t))__twr_v538)(__twr_v542);
    __twr_v543 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v538)(__twr_v543);
    __twr_l81:;
    _jkl_epilogue:;
}
void BtBuildC(uint64_t _mng_dagnode544) {
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    __twr_v545 = (uint64_t)(&TlPrintString);
    __twr_v546 = (uint64_t)(&"Building ");
    ((void (*)(uint64_t))__twr_v545)(__twr_v546);
    __twr_v547 = 72ULL;
    __twr_v548 = _mng_dagnode544 + __twr_v547;
    __twr_v549 = *(uint64_t*)(__twr_v548);
    ((void (*)(uint64_t))__twr_v545)(__twr_v549);
    __twr_v550 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v545)(__twr_v550);
    __twr_l82:;
    _jkl_epilogue:;
}
void BtBuildS(uint64_t _mng_dagnode551) {
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    __twr_v552 = (uint64_t)(&TlPrintString);
    __twr_v553 = (uint64_t)(&"Building ");
    ((void (*)(uint64_t))__twr_v552)(__twr_v553);
    __twr_v554 = 72ULL;
    __twr_v555 = _mng_dagnode551 + __twr_v554;
    __twr_v556 = *(uint64_t*)(__twr_v555);
    ((void (*)(uint64_t))__twr_v552)(__twr_v556);
    __twr_v557 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v552)(__twr_v557);
    __twr_l83:;
    _jkl_epilogue:;
}
void BtLinkExecutable(uint64_t _mng_dagnode558) {
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    __twr_v559 = (uint64_t)(&TlPrintString);
    __twr_v560 = (uint64_t)(&"Linking ");
    ((void (*)(uint64_t))__twr_v559)(__twr_v560);
    __twr_v561 = 48ULL;
    __twr_v562 = _mng_dagnode558 + __twr_v561;
    __twr_v563 = *(uint64_t*)(__twr_v562);
    __twr_v564 = 536ULL;
    __twr_v565 = __twr_v563 + __twr_v564;
    __twr_v566 = *(uint64_t*)(__twr_v565);
    ((void (*)(uint64_t))__twr_v559)(__twr_v566);
    __twr_v567 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v559)(__twr_v567);
    __twr_l84:;
    _jkl_epilogue:;
}
uint64_t BtDagAction[5] = {
    0x0000000000000000,
    (uint64_t)(&BtBuildJkl),
    (uint64_t)(&BtBuildC),
    (uint64_t)(&BtBuildS),
    (uint64_t)(&BtLinkExecutable),
};
void BtWorkerThread(uint64_t _mng_arg568) {
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t _mng_leafnode595;
    uint64_t __twr_v596;
    uint64_t _mng_listentry597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t _mng_prev601;
    uint64_t __twr_v602;
    uint64_t _mng_next603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    __twr_v569 = (uint64_t)(&BtNodeCount);
    __twr_v570 = *(uint64_t*)(__twr_v569);
    if (!(__twr_v570)) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v571 = (uint64_t)(&BtTerminateWorkers);
    __twr_v572 = *(uint64_t*)(__twr_v571);
    if (__twr_v572) { goto __twr_l87; } else { goto __twr_l86; }
    __twr_l86:;
    __twr_v573 = (uint64_t)(&TlAcquireMutex);
    __twr_v574 = (uint64_t)(&BtLeafListMutex);
    __twr_v575 = *(uint64_t*)(__twr_v574);
    ((void (*)(uint64_t))__twr_v573)(__twr_v575);
    __twr_v576 = (uint64_t)(&BtNodeCount);
    __twr_v577 = *(uint64_t*)(__twr_v576);
    if (__twr_v577) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v578 = (uint64_t)(&TlReleaseMutex);
    __twr_v579 = (uint64_t)(&BtLeafListMutex);
    __twr_v580 = *(uint64_t*)(__twr_v579);
    ((void (*)(uint64_t))__twr_v578)(__twr_v580);
    goto __twr_l87;
    __twr_l90:;
    __twr_v581 = (uint64_t)(&BtLeafCount);
    __twr_v582 = *(uint64_t*)(__twr_v581);
    if (__twr_v582) { goto __twr_l92; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v583 = (uint64_t)(&TlReleaseMutex);
    __twr_v584 = (uint64_t)(&BtLeafListMutex);
    __twr_v585 = *(uint64_t*)(__twr_v584);
    ((void (*)(uint64_t))__twr_v583)(__twr_v585);
    __twr_v586 = (uint64_t)(&TlAcquireSemaphore);
    __twr_v587 = (uint64_t)(&BtLeafSemaphore);
    __twr_v588 = *(uint64_t*)(__twr_v587);
    ((void (*)(uint64_t))__twr_v586)(__twr_v588);
    __twr_v589 = (uint64_t)(&TlReleaseSemaphore);
    __twr_v590 = *(uint64_t*)(__twr_v587);
    ((void (*)(uint64_t))__twr_v589)(__twr_v590);
    goto __twr_l89;
    __twr_l92:;
    __twr_v591 = (uint64_t)(&BtLeafListHead);
    __twr_v592 = *(uint64_t*)(__twr_v591);
    __twr_v593 = 32ULL;
    __twr_v594 = __twr_v592 - __twr_v593;
    _mng_leafnode595 = __twr_v594;
    __twr_v596 = _mng_leafnode595 + __twr_v593;
    _mng_listentry597 = __twr_v596;
    __twr_v598 = 8ULL;
    __twr_v599 = _mng_listentry597 + __twr_v598;
    __twr_v600 = *(uint64_t*)(__twr_v599);
    _mng_prev601 = __twr_v600;
    __twr_v602 = *(uint64_t*)(_mng_listentry597);
    _mng_next603 = __twr_v602;
    *(uint64_t*)(_mng_prev601) = _mng_next603;
    __twr_v604 = _mng_next603 + __twr_v598;
    *(uint64_t*)(__twr_v604) = _mng_prev601;
    __twr_v605 = 1ULL;
    __twr_v606 = (uint64_t)(&BtLeafCount);
    __twr_v607 = *(uint64_t*)(__twr_v606);
    __twr_v608 = __twr_v607 - __twr_v605;
    *(uint64_t*)(__twr_v606) = __twr_v608;
    __twr_v609 = *(uint64_t*)(__twr_v606);
    if (__twr_v609) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v610 = (uint64_t)(&TlAcquireSemaphore);
    __twr_v611 = (uint64_t)(&BtLeafSemaphore);
    __twr_v612 = *(uint64_t*)(__twr_v611);
    ((void (*)(uint64_t))__twr_v610)(__twr_v612);
    __twr_l94:;
    __twr_v613 = (uint64_t)(&TlReleaseMutex);
    __twr_v614 = (uint64_t)(&BtLeafListMutex);
    __twr_v615 = *(uint64_t*)(__twr_v614);
    ((void (*)(uint64_t))__twr_v613)(__twr_v615);
    __twr_v616 = (uint64_t)(&BtDagAction);
    __twr_v617 = 408ULL;
    __twr_v618 = _mng_leafnode595 + __twr_v617;
    __twr_v619 = *(uint8_t*)(__twr_v618);
    __twr_v620 = 3ULL;
    __twr_v621 = __twr_v619 << __twr_v620;
    __twr_v622 = __twr_v616 + __twr_v621;
    __twr_v623 = *(uint64_t*)(__twr_v622);
    ((void (*)(uint64_t))__twr_v623)(_mng_leafnode595);
    __twr_v624 = (uint64_t)(&TlAcquireMutex);
    __twr_v625 = *(uint64_t*)(__twr_v614);
    ((void (*)(uint64_t))__twr_v624)(__twr_v625);
    __twr_v626 = (uint64_t)(&BtRemoveDagNode);
    __twr_v627 = ((uint64_t (*)(uint64_t))__twr_v626)(_mng_leafnode595);
    __twr_v628 = *(uint64_t*)(__twr_v614);
    ((void (*)(uint64_t))__twr_v613)(__twr_v628);
    __twr_l89:;
    __twr_v629 = (uint64_t)(&BtNodeCount);
    __twr_v630 = *(uint64_t*)(__twr_v629);
    if (!(__twr_v630)) { goto __twr_l87; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v631 = (uint64_t)(&BtTerminateWorkers);
    __twr_v632 = *(uint64_t*)(__twr_v631);
    if (!(__twr_v632)) { goto __twr_l86; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_l85:;
    _jkl_epilogue:;
}
void BtTerminationHandler() {
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    __twr_v633 = (uint64_t)(&TlPrintString);
    __twr_v634 = (uint64_t)(&"BREAK. Waiting for jobs to complete.");
    ((void (*)(uint64_t))__twr_v633)(__twr_v634);
    __twr_v635 = 1ULL;
    __twr_v636 = (uint64_t)(&BtTerminateWorkers);
    *(uint64_t*)(__twr_v636) = __twr_v635;
    __twr_l97:;
    _jkl_epilogue:;
}
void BtBuildDag() {
    uint64_t __twr_v637;
    uint64_t _mng_listhead638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t _mng_dagroot645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t _mng_table667;
    uint64_t _mng_status668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t _mng_i672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    __twr_v637 = (uint64_t)(&BtLeafListHead);
    _mng_listhead638 = __twr_v637;
    __twr_v639 = 8ULL;
    __twr_v640 = _mng_listhead638 + __twr_v639;
    *(uint64_t*)(__twr_v640) = _mng_listhead638;
    *(uint64_t*)(_mng_listhead638) = _mng_listhead638;
    __twr_v641 = (uint64_t)(&BtBuildDagForTarget);
    __twr_v642 = (uint64_t)(&BtSelectedTarget);
    __twr_v643 = *(uint64_t*)(__twr_v642);
    __twr_v644 = ((uint64_t (*)(uint64_t))__twr_v641)(__twr_v643);
    _mng_dagroot645 = __twr_v644;
    if (_mng_dagroot645) { goto __twr_l99; } else { goto __twr_l100; }
    __twr_l100:;
    __twr_v646 = (uint64_t)(&TlPrintString);
    __twr_v647 = (uint64_t)(&"The target is already up to date.\n");
    ((void (*)(uint64_t))__twr_v646)(__twr_v647);
    goto _jkl_epilogue;
    __twr_l99:;
    __twr_v648 = (uint64_t)(&TlSetTerminationHandler);
    __twr_v649 = (uint64_t)(&BtTerminationHandler);
    ((void (*)(uint64_t))__twr_v648)(__twr_v649);
    __twr_v650 = (uint64_t)(&TlCreateMutex);
    __twr_v651 = ((uint64_t (*)())__twr_v650)();
    __twr_v652 = (uint64_t)(&BtLeafListMutex);
    *(uint64_t*)(__twr_v652) = __twr_v651;
    __twr_v653 = (uint64_t)(&TlCreateSemaphore);
    __twr_v654 = 1ULL;
    __twr_v655 = ((uint64_t (*)(uint64_t))__twr_v653)(__twr_v654);
    __twr_v656 = (uint64_t)(&BtLeafSemaphore);
    *(uint64_t*)(__twr_v656) = __twr_v655;
    __twr_v657 = (uint64_t)(&BtJobCount);
    __twr_v658 = *(uint64_t*)(__twr_v657);
    if (__twr_v658 != __twr_v654) { goto __twr_l103; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v659 = (uint64_t)(&BtWorkerThread);
    __twr_v660 = 0ULL;
    ((void (*)(uint64_t))__twr_v659)(__twr_v660);
    goto __twr_l101;
    __twr_l103:;
    __twr_v661 = (uint64_t)(&TlBumpAlloc);
    __twr_v662 = (uint64_t)(&BtJobCount);
    __twr_v663 = *(uint64_t*)(__twr_v662);
    __twr_v664 = 3ULL;
    __twr_v665 = __twr_v663 << __twr_v664;
    __twr_v666 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v661)(__twr_v665, (uint64_t)(&_mng_table667));
    _mng_status668 = __twr_v666;
    if (!(_mng_status668)) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v669 = (uint64_t)(&TlInternalError);
    __twr_v670 = (uint64_t)(&"Failed to allocate job table");
    __twr_v671 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v669)(__twr_v670, __twr_v671, __twr_v671, __twr_v671);
    __twr_l104:;
    _mng_i672 = 0ULL;
    __twr_v673 = (uint64_t)(&BtJobCount);
    __twr_v674 = *(uint64_t*)(__twr_v673);
    if (__twr_v674 <= _mng_i672) { goto __twr_l107; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v675 = (uint64_t)(&TlCreateThread);
    __twr_v676 = (uint64_t)(&BtWorkerThread);
    __twr_v677 = 0ULL;
    __twr_v678 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v675)(__twr_v676, __twr_v677, (uint64_t)(&__twr_v679));
    __twr_v680 = 3ULL;
    __twr_v681 = _mng_i672 << __twr_v680;
    __twr_v682 = _mng_table667 + __twr_v681;
    *(uint64_t*)(__twr_v682) = __twr_v679;
    _mng_status668 = __twr_v678;
    if (!(_mng_status668)) { goto __twr_l109; } else { goto __twr_l110; }
    __twr_l110:;
    __twr_v683 = (uint64_t)(&TlInternalError);
    __twr_v684 = (uint64_t)(&"Failed to create worker thread");
    __twr_v685 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v683)(__twr_v684, __twr_v685, __twr_v685, __twr_v685);
    __twr_l109:;
    __twr_v686 = 1ULL;
    __twr_v687 = _mng_i672 + __twr_v686;
    _mng_i672 = __twr_v687;
    __twr_l108:;
    __twr_v688 = (uint64_t)(&BtJobCount);
    __twr_v689 = *(uint64_t*)(__twr_v688);
    if (_mng_i672 < __twr_v689) { goto __twr_l106; } else { goto __twr_l107; }
    __twr_l107:;
    _mng_i672 = 0ULL;
    __twr_v690 = (uint64_t)(&BtJobCount);
    __twr_v691 = *(uint64_t*)(__twr_v690);
    if (__twr_v691 <= _mng_i672) { goto __twr_l112; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v692 = (uint64_t)(&TlJoinThread);
    __twr_v693 = 3ULL;
    __twr_v694 = _mng_i672 << __twr_v693;
    __twr_v695 = _mng_table667 + __twr_v694;
    __twr_v696 = *(uint64_t*)(__twr_v695);
    __twr_v697 = ((uint64_t (*)(uint64_t))__twr_v692)(__twr_v696);
    __twr_v698 = 1ULL;
    __twr_v699 = _mng_i672 + __twr_v698;
    _mng_i672 = __twr_v699;
    __twr_l113:;
    __twr_v700 = (uint64_t)(&BtJobCount);
    __twr_v701 = *(uint64_t*)(__twr_v700);
    if (_mng_i672 < __twr_v701) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_l101:;
    __twr_l98:;
    _jkl_epilogue:;
}

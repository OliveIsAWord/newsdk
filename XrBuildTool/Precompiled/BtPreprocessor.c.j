#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern void TlInitializeZone(uint64_t _mng_zone96, uint64_t _mng_blocksize97);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone98);
extern void TlFreeToZone(uint64_t _mng_zone99, uint64_t _mng_block100);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant101);
extern void TlPunchValue(uint64_t _mng_ptr102, uint64_t _mng_value103, uint64_t _mng_bytes104);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg105);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename106, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock107, uint64_t _mng_filepath108);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope109);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg110);
extern void LexExpandMacro(uint64_t _mng_macro111, uint64_t _mng_token112);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream113, uint64_t _mng_macro114);
extern void LexUninitializeStream(uint64_t _mng_stream115);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream116);
extern void LexPushStream(uint64_t _mng_stream117);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream118, uint64_t _mng_fileblock119, uint64_t _mng_handle120);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock121, uint64_t _mng_handle122);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest123, uint64_t _mng_src124);
extern void LexGetToken(uint64_t _mng_token125);
extern void LexPutbackToken(uint64_t _mng_token126);
extern uint64_t LexMatchToken(uint64_t _mng_token127, uint64_t _mng_type128, uint64_t _mng_subtype129);
extern void LexStreamError(uint64_t _mng_str130, uint64_t _mng_err1131, uint64_t _mng_err2132, uint64_t _mng_err3133);
extern void LexTokenError(uint64_t _mng_token134, uint64_t _mng_str135, uint64_t _mng_err1136, uint64_t _mng_err2137, uint64_t _mng_err3138);
extern uint64_t LexCrunchNumber(uint64_t _mng_token139, uint64_t _mng_buffer140);
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtStatFile(uint64_t _mng_fullpath141);
uint64_t LexRootMacroScope = 0ULL;
uint64_t LexCurrentMacroScope = 0ULL;
uint32_t LexMacroDepth = 0ULL;
uint64_t LexDirectiveHashTable[196];
uint64_t LexOperatorHashTable[196];
uint64_t LexIfStack[11];
uint64_t LexMacroZone[2];
uint64_t LexDirectiveToken[4];
uint64_t LexDirectiveBumpArray[112];
uint64_t LexDirectiveBumpIndex = 0ULL;
void LexInsertDirective(uint64_t _mng_name142, uint64_t _mng_parsefunc143) {
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t _mng_directive150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    __twr_v144 = (uint64_t)(&LexDirectiveBumpArray);
    __twr_v145 = (uint64_t)(&LexDirectiveBumpIndex);
    __twr_v146 = *(uint64_t*)(__twr_v145);
    __twr_v147 = 56ULL;
    __twr_v148 = __twr_v146 * __twr_v147;
    __twr_v149 = __twr_v144 + __twr_v148;
    _mng_directive150 = __twr_v149;
    __twr_v151 = 1ULL;
    __twr_v152 = __twr_v146 + __twr_v151;
    *(uint64_t*)(__twr_v145) = __twr_v152;
    __twr_v153 = 48ULL;
    __twr_v154 = _mng_directive150 + __twr_v153;
    *(uint64_t*)(__twr_v154) = _mng_parsefunc143;
    __twr_v155 = (uint64_t)(&TlInsertHashTable);
    __twr_v156 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v155)(__twr_v156, _mng_directive150, _mng_name142);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexOperatorBumpArray[224];
uint64_t LexOperatorBumpIndex = 0ULL;
void LexInsertOperator(uint64_t _mng_name157, uint64_t _mng_parsefunc158) {
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t _mng_operator165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    __twr_v159 = (uint64_t)(&LexOperatorBumpArray);
    __twr_v160 = (uint64_t)(&LexOperatorBumpIndex);
    __twr_v161 = *(uint64_t*)(__twr_v160);
    __twr_v162 = 56ULL;
    __twr_v163 = __twr_v161 * __twr_v162;
    __twr_v164 = __twr_v159 + __twr_v163;
    _mng_operator165 = __twr_v164;
    __twr_v166 = 1ULL;
    __twr_v167 = __twr_v161 + __twr_v166;
    *(uint64_t*)(__twr_v160) = __twr_v167;
    __twr_v168 = 48ULL;
    __twr_v169 = _mng_operator165 + __twr_v168;
    *(uint64_t*)(__twr_v169) = _mng_parsefunc158;
    __twr_v170 = (uint64_t)(&TlInsertHashTable);
    __twr_v171 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v170)(__twr_v171, _mng_operator165, _mng_name157);
    __twr_l2:;
    _jkl_epilogue:;
}
void LexMacroDelete(uint64_t _mng_entry172) {
    uint64_t _mng_macro173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    _mng_macro173 = _mng_entry172;
    __twr_v174 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v175 = 80ULL;
    __twr_v176 = _mng_macro173 + __twr_v175;
    ((void (*)(uint64_t))__twr_v174)(__twr_v176);
    __twr_v177 = (uint64_t)(&TlFreeToZone);
    __twr_v178 = (uint64_t)(&LexMacroZone);
    ((void (*)(uint64_t, uint64_t))__twr_v177)(__twr_v178, _mng_entry172);
    __twr_l3:;
    _jkl_epilogue:;
}
uint64_t LexCreateMacroTable(uint64_t _mng_outerscope179) {
    uint64_t _jkl_retv;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    __twr_v180 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v181 = (uint64_t)(&LexMacroDelete);
    __twr_v182 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v180)(_mng_outerscope179, __twr_v181);
    _jkl_retv = __twr_v182;
    goto _jkl_epilogue;
    __twr_l4:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexNextNonWhitespaceCharacter(uint64_t _mng_token183) {
    uint64_t _jkl_retv;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t _mng_stream186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t _mng_byte203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    __twr_v184 = (uint64_t)(&LexCurrentStream);
    __twr_v185 = *(uint64_t*)(__twr_v184);
    _mng_stream186 = __twr_v185;
    if (!(_mng_stream186)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v187 = 8ULL;
    __twr_v188 = _mng_stream186 + __twr_v187;
    __twr_v189 = *(uint64_t*)(__twr_v188);
    __twr_v190 = _mng_token183 + __twr_v187;
    *(uint64_t*)(__twr_v190) = __twr_v189;
    __twr_v191 = 44ULL;
    __twr_v192 = _mng_stream186 + __twr_v191;
    __twr_v193 = *(uint32_t*)(__twr_v192);
    __twr_v194 = 16ULL;
    __twr_v195 = _mng_token183 + __twr_v194;
    *(uint32_t*)(__twr_v195) = __twr_v193;
    __twr_v196 = 48ULL;
    __twr_v197 = _mng_stream186 + __twr_v196;
    __twr_v198 = *(uint32_t*)(__twr_v197);
    __twr_v199 = 20ULL;
    __twr_v200 = _mng_token183 + __twr_v199;
    *(uint32_t*)(__twr_v200) = __twr_v198;
    __twr_l6:;
    __twr_v201 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v202 = ((uint64_t (*)())__twr_v201)();
    _mng_byte203 = __twr_v202;
    __twr_v204 = (uint64_t)(&LexCharTreatment);
    __twr_v205 = __twr_v204 + _mng_byte203;
    __twr_v206 = *(uint8_t*)(__twr_v205);
    __twr_v207 = 3ULL;
    if (__twr_v206 != __twr_v207) { goto __twr_l9; } else { goto __twr_l8; }
    __twr_l8:;
    __twr_v208 = (uint64_t)(&LexCurrentStream);
    __twr_v209 = *(uint64_t*)(__twr_v208);
    _mng_stream186 = __twr_v209;
    if (!(_mng_stream186)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v210 = 8ULL;
    __twr_v211 = _mng_stream186 + __twr_v210;
    __twr_v212 = *(uint64_t*)(__twr_v211);
    __twr_v213 = _mng_token183 + __twr_v210;
    *(uint64_t*)(__twr_v213) = __twr_v212;
    __twr_v214 = 44ULL;
    __twr_v215 = _mng_stream186 + __twr_v214;
    __twr_v216 = *(uint32_t*)(__twr_v215);
    __twr_v217 = 16ULL;
    __twr_v218 = _mng_token183 + __twr_v217;
    *(uint32_t*)(__twr_v218) = __twr_v216;
    __twr_v219 = 48ULL;
    __twr_v220 = _mng_stream186 + __twr_v219;
    __twr_v221 = *(uint32_t*)(__twr_v220);
    __twr_v222 = 20ULL;
    __twr_v223 = _mng_token183 + __twr_v222;
    *(uint32_t*)(__twr_v223) = __twr_v221;
    __twr_l11:;
    __twr_v224 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v225 = ((uint64_t (*)())__twr_v224)();
    _mng_byte203 = __twr_v225;
    __twr_l10:;
    __twr_v226 = (uint64_t)(&LexCharTreatment);
    __twr_v227 = __twr_v226 + _mng_byte203;
    __twr_v228 = *(uint8_t*)(__twr_v227);
    __twr_v229 = 3ULL;
    if (__twr_v228 == __twr_v229) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    if (_mng_byte203) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v230 = (uint64_t)(&LexStreamError);
    __twr_v231 = (uint64_t)(&"Unexpected EOF while parsing directive");
    __twr_v232 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v230)(__twr_v231, __twr_v232, __twr_v232, __twr_v232);
    __twr_l13:;
    _jkl_retv = _mng_byte203;
    goto _jkl_epilogue;
    __twr_l5:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectDirectiveToken(uint64_t _mng_token233, uint64_t _mng_buffer234) {
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t _mng_byte237;
    uint64_t _mng_len238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    __twr_v235 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v236 = ((uint64_t (*)(uint64_t))__twr_v235)(_mng_token233);
    _mng_byte237 = __twr_v236;
    _mng_len238 = 0ULL;
    __twr_v239 = (uint64_t)(&LexCharTreatment);
    __twr_v240 = __twr_v239 + _mng_byte237;
    __twr_v241 = *(uint8_t*)(__twr_v240);
    __twr_v242 = 3ULL;
    if (__twr_v241 == __twr_v242) { goto __twr_l17; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v243 = (uint64_t)(&LexCharTreatment);
    __twr_v244 = __twr_v243 + _mng_byte237;
    __twr_v245 = *(uint8_t*)(__twr_v244);
    if (!(__twr_v245)) { goto __twr_l19; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v246 = (uint64_t)(&LexCharTreatment);
    __twr_v247 = 1ULL;
    __twr_v248 = __twr_v246 + _mng_byte237;
    __twr_v249 = *(uint8_t*)(__twr_v248);
    if (__twr_v249 == __twr_v247) { goto __twr_l19; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v250 = (uint64_t)(&LexCharTreatment);
    __twr_v251 = __twr_v250 + _mng_byte237;
    __twr_v252 = *(uint8_t*)(__twr_v251);
    __twr_v253 = 2ULL;
    if (__twr_v252 == __twr_v253) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v254 = (uint64_t)(&LexTokenError);
    __twr_v255 = (uint64_t)(&"Illegal character in token");
    __twr_v256 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v254)(_mng_token233, __twr_v255, __twr_v256, __twr_v256, __twr_v256);
    __twr_l19:;
    __twr_v257 = 63ULL;
    if (_mng_len238 != __twr_v257) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v258 = (uint64_t)(&LexTokenError);
    __twr_v259 = (uint64_t)(&"Token length too great");
    __twr_v260 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v258)(_mng_token233, __twr_v259, __twr_v260, __twr_v260, __twr_v260);
    __twr_l23:;
    *(uint8_t*)(_mng_buffer234) = _mng_byte237;
    __twr_v261 = 1ULL;
    __twr_v262 = _mng_buffer234 + __twr_v261;
    _mng_buffer234 = __twr_v262;
    __twr_v263 = _mng_len238 + __twr_v261;
    _mng_len238 = __twr_v263;
    __twr_v264 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v265 = ((uint64_t (*)())__twr_v264)();
    _mng_byte237 = __twr_v265;
    __twr_l18:;
    __twr_v266 = (uint64_t)(&LexCharTreatment);
    __twr_v267 = __twr_v266 + _mng_byte237;
    __twr_v268 = *(uint8_t*)(__twr_v267);
    __twr_v269 = 3ULL;
    if (__twr_v268 != __twr_v269) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v270 = 0ULL;
    *(uint8_t*)(_mng_buffer234) = __twr_v270;
    __twr_l15:;
    _jkl_epilogue:;
}
void LexGetPreprocessorString(uint64_t _mng_token271, uint64_t _mng_buffer272) {
    uint64_t _mng_backslash273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t _mng_byte276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    _mng_backslash273 = 0ULL;
    __twr_l26:;
    __twr_v274 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v275 = ((uint64_t (*)())__twr_v274)();
    _mng_byte276 = __twr_v275;
    if (_mng_byte276) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v277 = (uint64_t)(&LexTokenError);
    __twr_v278 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v279 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v277)(_mng_token271, __twr_v278, __twr_v279, __twr_v279, __twr_v279);
    __twr_l28:;
    __twr_v280 = 34ULL;
    if (_mng_byte276 != __twr_v280) { goto __twr_l30; } else { goto __twr_l32; }
    __twr_l32:;
    if (_mng_backslash273) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    __twr_v281 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v281)(_mng_buffer272, _mng_byte276);
    if (!(_mng_backslash273)) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    _mng_backslash273 = 0ULL;
    goto __twr_l26;
    __twr_l33:;
    __twr_v282 = 92ULL;
    __twr_v283 = (_mng_byte276 == __twr_v282);
    _mng_backslash273 = __twr_v283;
    goto __twr_l26;
    __twr_l27:;
    __twr_l25:;
    _jkl_epilogue:;
}
void LexCollectString(uint64_t _mng_token284, uint64_t _mng_buffer285) {
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t _mng_byte288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    __twr_v286 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v287 = ((uint64_t (*)(uint64_t))__twr_v286)(_mng_token284);
    _mng_byte288 = __twr_v287;
    __twr_v289 = 34ULL;
    if (_mng_byte288 == __twr_v289) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    __twr_v290 = (uint64_t)(&LexTokenError);
    __twr_v291 = (uint64_t)(&"Expected a string");
    __twr_v292 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v290)(_mng_token284, __twr_v291, __twr_v292, __twr_v292, __twr_v292);
    __twr_l36:;
    __twr_v293 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v293)(_mng_token284, _mng_buffer285);
    __twr_v294 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v295 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v294)(_mng_buffer285, __twr_v295);
    __twr_l35:;
    _jkl_epilogue:;
}
void LexGetComplexString(uint64_t _mng_token296, uint64_t _mng_buffer297) {
    uint64_t _mng_bracketdepth298;
    uint64_t _mng_comment299;
    uint64_t _mng_backslash300;
    uint64_t _mng_instring301;
    uint64_t _mng_inliteral302;
    uint64_t _mng_sawforwardslash303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t _mng_byte306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    _mng_bracketdepth298 = 1ULL;
    _mng_comment299 = 0ULL;
    _mng_backslash300 = 0ULL;
    _mng_instring301 = 0ULL;
    _mng_inliteral302 = 0ULL;
    _mng_sawforwardslash303 = 0ULL;
    __twr_l39:;
    __twr_v304 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v305 = ((uint64_t (*)())__twr_v304)();
    _mng_byte306 = __twr_v305;
    if (_mng_byte306) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v307 = (uint64_t)(&LexTokenError);
    __twr_v308 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v309 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v307)(_mng_token296, __twr_v308, __twr_v309, __twr_v309, __twr_v309);
    __twr_l41:;
    if (!(_mng_comment299)) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v310 = 10ULL;
    if (_mng_byte306 != __twr_v310) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_comment299 = 0ULL;
    goto __twr_l46;
    __twr_l48:;
    _mng_byte306 = 0ULL;
    goto __twr_l39;
    __twr_l46:;
    goto __twr_l43;
    __twr_l45:;
    __twr_v311 = 47ULL;
    if (_mng_byte306 == __twr_v311) { goto __twr_l43; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_sawforwardslash303 = 0ULL;
    __twr_l43:;
    if (!(_mng_backslash300)) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_backslash300 = 0ULL;
    goto __twr_l50;
    __twr_l52:;
    __twr_v312 = 92ULL;
    if (_mng_byte306 != __twr_v312) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_backslash300 = 1ULL;
    goto __twr_l50;
    __twr_l54:;
    if (!(_mng_instring301)) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v313 = 34ULL;
    __twr_v314 = (_mng_byte306 == __twr_v313);
    __twr_v315 = !__twr_v314;
    _mng_instring301 = __twr_v315;
    goto __twr_l50;
    __twr_l56:;
    if (!(_mng_inliteral302)) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v316 = 39ULL;
    __twr_v317 = (_mng_byte306 == __twr_v316);
    __twr_v318 = !__twr_v317;
    _mng_inliteral302 = __twr_v318;
    goto __twr_l50;
    __twr_l58:;
    __twr_v319 = 47ULL;
    if (_mng_byte306 != __twr_v319) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    if (!(_mng_sawforwardslash303)) { goto __twr_l63; } else { goto __twr_l62; }
    __twr_l62:;
    _mng_sawforwardslash303 = 0ULL;
    _mng_comment299 = 1ULL;
    goto __twr_l61;
    __twr_l63:;
    _mng_sawforwardslash303 = 1ULL;
    __twr_l61:;
    goto __twr_l50;
    __twr_l60:;
    __twr_v320 = 34ULL;
    if (_mng_byte306 != __twr_v320) { goto __twr_l65; } else { goto __twr_l64; }
    __twr_l64:;
    _mng_instring301 = 1ULL;
    goto __twr_l50;
    __twr_l65:;
    __twr_v321 = 39ULL;
    if (_mng_byte306 != __twr_v321) { goto __twr_l67; } else { goto __twr_l66; }
    __twr_l66:;
    _mng_inliteral302 = 1ULL;
    goto __twr_l50;
    __twr_l67:;
    __twr_v322 = 91ULL;
    if (_mng_byte306 != __twr_v322) { goto __twr_l69; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v323 = 1ULL;
    __twr_v324 = _mng_bracketdepth298 + __twr_v323;
    _mng_bracketdepth298 = __twr_v324;
    goto __twr_l50;
    __twr_l69:;
    __twr_v325 = 93ULL;
    if (_mng_byte306 != __twr_v325) { goto __twr_l50; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v326 = 1ULL;
    __twr_v327 = _mng_bracketdepth298 - __twr_v326;
    _mng_bracketdepth298 = __twr_v327;
    if (_mng_bracketdepth298) { goto __twr_l71; } else { goto __twr_l72; }
    __twr_l72:;
    goto __twr_l40;
    __twr_l71:;
    __twr_l50:;
    __twr_v328 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v328)(_mng_buffer297, _mng_byte306);
    _mng_byte306 = 0ULL;
    goto __twr_l39;
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentContents(uint64_t _mng_token329, uint64_t _mng_buffer330) {
    uint64_t _jkl_retv;
    uint64_t _mng_bracketdepth331;
    uint64_t _mng_comment332;
    uint64_t _mng_backslash333;
    uint64_t _mng_instring334;
    uint64_t _mng_inliteral335;
    uint64_t _mng_sawforwardslash336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t _mng_byte339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    _mng_bracketdepth331 = 1ULL;
    _mng_comment332 = 0ULL;
    _mng_backslash333 = 0ULL;
    _mng_instring334 = 0ULL;
    _mng_inliteral335 = 0ULL;
    _mng_sawforwardslash336 = 0ULL;
    __twr_l74:;
    __twr_v337 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v338 = ((uint64_t (*)(uint64_t))__twr_v337)(_mng_token329);
    _mng_byte339 = __twr_v338;
    __twr_v340 = 41ULL;
    if (_mng_byte339 != __twr_v340) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v341 = 2ULL;
    _jkl_retv = __twr_v341;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v342 = 44ULL;
    if (_mng_byte339 != __twr_v342) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    goto __twr_l74;
    __twr_l78:;
    goto __twr_l75;
    goto __twr_l74;
    __twr_l75:;
    __twr_l80:;
    if (!(_mng_comment332)) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v343 = 10ULL;
    if (_mng_byte339 != __twr_v343) { goto __twr_l84; } else { goto __twr_l83; }
    __twr_l83:;
    _mng_comment332 = 0ULL;
    goto __twr_l82;
    __twr_l84:;
    __twr_v344 = 47ULL;
    if (_mng_byte339 == __twr_v344) { goto __twr_l82; } else { goto __twr_l86; }
    __twr_l86:;
    _mng_sawforwardslash336 = 0ULL;
    __twr_l82:;
    if (!(_mng_comment332)) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    goto __twr_l87;
    __twr_l89:;
    if (!(_mng_backslash333)) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    _mng_backslash333 = 0ULL;
    goto __twr_l87;
    __twr_l91:;
    __twr_v345 = 92ULL;
    if (_mng_byte339 != __twr_v345) { goto __twr_l93; } else { goto __twr_l92; }
    __twr_l92:;
    _mng_backslash333 = 1ULL;
    goto __twr_l87;
    __twr_l93:;
    if (!(_mng_instring334)) { goto __twr_l95; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v346 = 34ULL;
    __twr_v347 = (_mng_byte339 == __twr_v346);
    __twr_v348 = !__twr_v347;
    _mng_instring334 = __twr_v348;
    goto __twr_l87;
    __twr_l95:;
    if (!(_mng_inliteral335)) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v349 = 39ULL;
    __twr_v350 = (_mng_byte339 == __twr_v349);
    __twr_v351 = !__twr_v350;
    _mng_inliteral335 = __twr_v351;
    goto __twr_l87;
    __twr_l97:;
    __twr_v352 = 47ULL;
    if (_mng_byte339 != __twr_v352) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    if (!(_mng_sawforwardslash336)) { goto __twr_l102; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v353 = 1ULL;
    __twr_v354 = *(uint64_t*)(_mng_buffer330);
    __twr_v355 = __twr_v354 - __twr_v353;
    *(uint64_t*)(_mng_buffer330) = __twr_v355;
    _mng_sawforwardslash336 = 0ULL;
    _mng_comment332 = 1ULL;
    goto __twr_l100;
    __twr_l102:;
    _mng_sawforwardslash336 = 1ULL;
    __twr_l100:;
    goto __twr_l87;
    __twr_l99:;
    __twr_v356 = 34ULL;
    if (_mng_byte339 != __twr_v356) { goto __twr_l104; } else { goto __twr_l103; }
    __twr_l103:;
    _mng_instring334 = 1ULL;
    goto __twr_l87;
    __twr_l104:;
    __twr_v357 = 39ULL;
    if (_mng_byte339 != __twr_v357) { goto __twr_l106; } else { goto __twr_l105; }
    __twr_l105:;
    _mng_inliteral335 = 1ULL;
    goto __twr_l87;
    __twr_l106:;
    __twr_v358 = 40ULL;
    if (_mng_byte339 != __twr_v358) { goto __twr_l108; } else { goto __twr_l107; }
    __twr_l107:;
    __twr_v359 = 1ULL;
    __twr_v360 = _mng_bracketdepth331 + __twr_v359;
    _mng_bracketdepth331 = __twr_v360;
    goto __twr_l87;
    __twr_l108:;
    __twr_v361 = 41ULL;
    if (_mng_byte339 != __twr_v361) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v362 = 1ULL;
    __twr_v363 = _mng_bracketdepth331 - __twr_v362;
    _mng_bracketdepth331 = __twr_v363;
    if (_mng_bracketdepth331) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v364 = 3ULL;
    _jkl_retv = __twr_v364;
    goto _jkl_epilogue;
    __twr_l111:;
    goto __twr_l87;
    __twr_l110:;
    __twr_v365 = 1ULL;
    if (_mng_bracketdepth331 != __twr_v365) { goto __twr_l114; } else { goto __twr_l115; }
    __twr_l115:;
    __twr_v366 = 44ULL;
    if (_mng_byte339 != __twr_v366) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    goto __twr_l81;
    goto __twr_l87;
    __twr_l114:;
    __twr_v367 = 10ULL;
    if (_mng_byte339 != __twr_v367) { goto __twr_l87; } else { goto __twr_l116; }
    __twr_l116:;
    _mng_byte339 = 32ULL;
    __twr_l87:;
    if (_mng_comment332) { goto __twr_l117; } else { goto __twr_l119; }
    __twr_l119:;
    if (_mng_backslash333) { goto __twr_l117; } else { goto __twr_l118; }
    __twr_l118:;
    __twr_v368 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v368)(_mng_buffer330, _mng_byte339);
    __twr_l117:;
    __twr_v369 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v370 = ((uint64_t (*)())__twr_v369)();
    _mng_byte339 = __twr_v370;
    if (_mng_byte339) { goto __twr_l120; } else { goto __twr_l121; }
    __twr_l121:;
    __twr_v371 = (uint64_t)(&LexTokenError);
    __twr_v372 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v373 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v371)(_mng_token329, __twr_v372, __twr_v373, __twr_v373, __twr_v373);
    __twr_l120:;
    goto __twr_l80;
    __twr_l81:;
    __twr_v374 = 1ULL;
    _jkl_retv = __twr_v374;
    goto _jkl_epilogue;
    __twr_l73:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectValue(uint64_t _mng_token375, uint64_t _mng_buffer376, uint64_t _mng_ignore377) {
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t _mng_byte380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t _mng_optoken392[4];
    uint64_t __twr_v393;
    uint64_t _mng_opbuffer394[8];
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t _mng_operator398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t _mng_simpletokbuf408[11];
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t _mng_macro460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    __twr_v378 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v379 = ((uint64_t (*)(uint64_t))__twr_v378)(_mng_token375);
    _mng_byte380 = __twr_v379;
    __twr_v381 = 34ULL;
    if (_mng_byte380 != __twr_v381) { goto __twr_l125; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v382 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v382)(_mng_token375, _mng_buffer376);
    __twr_v383 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v384 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v383)(_mng_buffer376, __twr_v384);
    goto _jkl_epilogue;
    goto __twr_l123;
    __twr_l125:;
    __twr_v385 = 91ULL;
    if (_mng_byte380 != __twr_v385) { goto __twr_l127; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v386 = (uint64_t)(&LexGetComplexString);
    ((void (*)(uint64_t, uint64_t))__twr_v386)(_mng_token375, _mng_buffer376);
    __twr_v387 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v388 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v387)(_mng_buffer376, __twr_v388);
    goto _jkl_epilogue;
    goto __twr_l123;
    __twr_l127:;
    __twr_v389 = 40ULL;
    if (_mng_byte380 != __twr_v389) { goto __twr_l123; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v390 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v391 = (uint64_t)(&_mng_optoken392);
    __twr_v393 = (uint64_t)(&_mng_opbuffer394);
    ((void (*)(uint64_t, uint64_t))__twr_v390)(__twr_v391, __twr_v393);
    __twr_v395 = (uint64_t)(&TlLookupHashTable);
    __twr_v396 = (uint64_t)(&LexOperatorHashTable);
    __twr_v397 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v395)(__twr_v396, __twr_v393);
    _mng_operator398 = __twr_v397;
    if (_mng_operator398) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v399 = (uint64_t)(&LexTokenError);
    __twr_v400 = (uint64_t)(&_mng_optoken392);
    __twr_v401 = (uint64_t)(&"Unknown operator");
    __twr_v402 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v399)(__twr_v400, __twr_v401, __twr_v402, __twr_v402, __twr_v402);
    __twr_l129:;
    __twr_v403 = 48ULL;
    __twr_v404 = _mng_operator398 + __twr_v403;
    __twr_v405 = *(uint64_t*)(__twr_v404);
    ((void (*)(uint64_t, uint64_t))__twr_v405)(_mng_buffer376, _mng_ignore377);
    goto _jkl_epilogue;
    __twr_l123:;
    __twr_v406 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v407 = (uint64_t)(&_mng_simpletokbuf408);
    ((void (*)(uint64_t))__twr_v406)(__twr_v407);
    __twr_v409 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v409)(__twr_v407, _mng_byte380);
    __twr_v410 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v411 = ((uint64_t (*)())__twr_v410)();
    _mng_byte380 = __twr_v411;
    __twr_v412 = (uint64_t)(&LexCharTreatment);
    __twr_v413 = __twr_v412 + _mng_byte380;
    __twr_v414 = *(uint8_t*)(__twr_v413);
    __twr_v415 = 3ULL;
    if (__twr_v414 == __twr_v415) { goto __twr_l132; } else { goto __twr_l131; }
    __twr_l131:;
    if (_mng_byte380) { goto __twr_l134; } else { goto __twr_l135; }
    __twr_l135:;
    __twr_v416 = (uint64_t)(&LexTokenError);
    __twr_v417 = (uint64_t)(&"Unexpected EOF");
    __twr_v418 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v416)(_mng_token375, __twr_v417, __twr_v418, __twr_v418, __twr_v418);
    __twr_l134:;
    __twr_v419 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v420 = (uint64_t)(&_mng_simpletokbuf408);
    ((void (*)(uint64_t, uint64_t))__twr_v419)(__twr_v420, _mng_byte380);
    __twr_v421 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v422 = ((uint64_t (*)())__twr_v421)();
    _mng_byte380 = __twr_v422;
    __twr_l133:;
    __twr_v423 = (uint64_t)(&LexCharTreatment);
    __twr_v424 = __twr_v423 + _mng_byte380;
    __twr_v425 = *(uint8_t*)(__twr_v424);
    __twr_v426 = 3ULL;
    if (__twr_v425 != __twr_v426) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v427 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v428 = (uint64_t)(&_mng_simpletokbuf408);
    __twr_v429 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v427)(__twr_v428, __twr_v429);
    __twr_v430 = 16ULL;
    __twr_v431 = __twr_v428 + __twr_v430;
    __twr_v432 = *(uint64_t*)(__twr_v431);
    __twr_v433 = *(uint8_t*)(__twr_v432);
    __twr_v434 = 48ULL;
    if (__twr_v433 < __twr_v434) { goto __twr_l136; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v435 = (uint64_t)(&_mng_simpletokbuf408);
    __twr_v436 = 16ULL;
    __twr_v437 = __twr_v435 + __twr_v436;
    __twr_v438 = *(uint64_t*)(__twr_v437);
    __twr_v439 = *(uint8_t*)(__twr_v438);
    __twr_v440 = 57ULL;
    if (__twr_v439 > __twr_v440) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v441 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v442 = (uint64_t)(&_mng_simpletokbuf408);
    __twr_v443 = 16ULL;
    __twr_v444 = __twr_v442 + __twr_v443;
    __twr_v445 = *(uint64_t*)(__twr_v444);
    __twr_v446 = *(uint64_t*)(__twr_v442);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v441)(_mng_buffer376, __twr_v445, __twr_v446);
    __twr_v447 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v447)(__twr_v442);
    goto _jkl_epilogue;
    __twr_l136:;
    if (!(_mng_ignore377)) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v448 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v449 = (uint64_t)(&_mng_simpletokbuf408);
    ((void (*)(uint64_t))__twr_v448)(__twr_v449);
    __twr_v450 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v451 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v450)(_mng_buffer376, __twr_v451);
    goto _jkl_epilogue;
    __twr_l139:;
    __twr_v452 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v453 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v454 = *(uint64_t*)(__twr_v453);
    __twr_v455 = (uint64_t)(&_mng_simpletokbuf408);
    __twr_v456 = 16ULL;
    __twr_v457 = __twr_v455 + __twr_v456;
    __twr_v458 = *(uint64_t*)(__twr_v457);
    __twr_v459 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v452)(__twr_v454, __twr_v458);
    _mng_macro460 = __twr_v459;
    __twr_v461 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v461)(__twr_v455);
    if (_mng_macro460) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v462 = (uint64_t)(&LexTokenError);
    __twr_v463 = (uint64_t)(&"Not a defined macro name");
    __twr_v464 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v462)(_mng_token375, __twr_v463, __twr_v464, __twr_v464, __twr_v464);
    __twr_l141:;
    __twr_v465 = 248ULL;
    __twr_v466 = _mng_macro460 + __twr_v465;
    __twr_v467 = *(uint8_t*)(__twr_v466);
    if (!(__twr_v467)) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v468 = (uint64_t)(&LexTokenError);
    __twr_v469 = (uint64_t)(&"Function macros not permitted here");
    __twr_v470 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v468)(_mng_token375, __twr_v469, __twr_v470, __twr_v470, __twr_v470);
    __twr_l143:;
    __twr_v471 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v472 = 80ULL;
    __twr_v473 = _mng_macro460 + __twr_v472;
    __twr_v474 = 96ULL;
    __twr_v475 = _mng_macro460 + __twr_v474;
    __twr_v476 = *(uint64_t*)(__twr_v475);
    __twr_v477 = *(uint64_t*)(__twr_v473);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v471)(_mng_buffer376, __twr_v476, __twr_v477);
    __twr_l122:;
    _jkl_epilogue:;
}
uint64_t LexCollectValueNumeric(uint64_t _mng_token478, uint64_t _mng_ignore479) {
    uint64_t _jkl_retv;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t _mng_buffer482[11];
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t _mng_num508;
    uint64_t __twr_v509;
    __twr_v480 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v481 = (uint64_t)(&_mng_buffer482);
    ((void (*)(uint64_t))__twr_v480)(__twr_v481);
    __twr_v483 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v483)(_mng_token478, __twr_v481, _mng_ignore479);
    if (!(_mng_ignore479)) { goto __twr_l146; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v484 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v485 = (uint64_t)(&_mng_buffer482);
    ((void (*)(uint64_t))__twr_v484)(__twr_v485);
    __twr_v486 = 0ULL;
    _jkl_retv = __twr_v486;
    goto _jkl_epilogue;
    __twr_l146:;
    __twr_v487 = (uint64_t)(&_mng_buffer482);
    __twr_v488 = 16ULL;
    __twr_v489 = __twr_v487 + __twr_v488;
    __twr_v490 = *(uint64_t*)(__twr_v489);
    __twr_v491 = *(uint8_t*)(__twr_v490);
    __twr_v492 = 48ULL;
    if (__twr_v491 < __twr_v492) { goto __twr_l149; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v493 = (uint64_t)(&_mng_buffer482);
    __twr_v494 = 16ULL;
    __twr_v495 = __twr_v493 + __twr_v494;
    __twr_v496 = *(uint64_t*)(__twr_v495);
    __twr_v497 = *(uint8_t*)(__twr_v496);
    __twr_v498 = 57ULL;
    if (__twr_v497 <= __twr_v498) { goto __twr_l148; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v499 = (uint64_t)(&LexTokenError);
    __twr_v500 = (uint64_t)(&"Expected numeric value");
    __twr_v501 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v499)(_mng_token478, __twr_v500, __twr_v501, __twr_v501, __twr_v501);
    __twr_l148:;
    __twr_v502 = (uint64_t)(&LexCrunchNumber);
    __twr_v503 = (uint64_t)(&_mng_buffer482);
    __twr_v504 = 16ULL;
    __twr_v505 = __twr_v503 + __twr_v504;
    __twr_v506 = *(uint64_t*)(__twr_v505);
    __twr_v507 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v502)(_mng_token478, __twr_v506);
    _mng_num508 = __twr_v507;
    __twr_v509 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v509)(__twr_v503);
    _jkl_retv = _mng_num508;
    goto _jkl_epilogue;
    __twr_l145:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexConsumeCloseParenthesis() {
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t _mng_token512[4];
    uint64_t __twr_v513;
    uint64_t _mng_byte514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    __twr_v510 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v511 = (uint64_t)(&_mng_token512);
    __twr_v513 = ((uint64_t (*)(uint64_t))__twr_v510)(__twr_v511);
    _mng_byte514 = __twr_v513;
    __twr_v515 = 41ULL;
    if (_mng_byte514 == __twr_v515) { goto __twr_l152; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v516 = (uint64_t)(&LexTokenError);
    __twr_v517 = (uint64_t)(&_mng_token512);
    __twr_v518 = (uint64_t)(&"Expected close parenthesis");
    __twr_v519 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v516)(__twr_v517, __twr_v518, __twr_v519, __twr_v519, __twr_v519);
    __twr_l152:;
    __twr_l151:;
    _jkl_epilogue:;
}
void LexDefineMacroFromArgumentString(uint64_t _mng_arg520) {
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t _mng_macro524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t _mng_equalsptr530;
    uint64_t _mng_j531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    __twr_v521 = (uint64_t)(&TlAllocateFromZone);
    __twr_v522 = (uint64_t)(&LexMacroZone);
    __twr_v523 = ((uint64_t (*)(uint64_t))__twr_v521)(__twr_v522);
    _mng_macro524 = __twr_v523;
    __twr_v525 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v526 = 80ULL;
    __twr_v527 = _mng_macro524 + __twr_v526;
    ((void (*)(uint64_t))__twr_v525)(__twr_v527);
    __twr_v528 = (uint64_t)(&FeIsMacroArgument);
    __twr_v529 = ((uint64_t (*)(uint64_t))__twr_v528)(_mng_arg520);
    _mng_equalsptr530 = __twr_v529;
    _mng_j531 = 0ULL;
    if (_mng_arg520 >= _mng_equalsptr530) { goto __twr_l156; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v532 = *(uint8_t*)(_mng_arg520);
    __twr_v533 = 168ULL;
    __twr_v534 = _mng_macro524 + __twr_v533;
    __twr_v535 = 1ULL;
    __twr_v536 = __twr_v534 + _mng_j531;
    *(uint8_t*)(__twr_v536) = __twr_v532;
    __twr_v537 = _mng_j531 + __twr_v535;
    _mng_j531 = __twr_v537;
    __twr_v538 = _mng_arg520 + __twr_v535;
    _mng_arg520 = __twr_v538;
    __twr_l157:;
    if (_mng_arg520 < _mng_equalsptr530) { goto __twr_l155; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v539 = 0ULL;
    __twr_v540 = 168ULL;
    __twr_v541 = _mng_macro524 + __twr_v540;
    __twr_v542 = 1ULL;
    __twr_v543 = __twr_v541 + _mng_j531;
    *(uint8_t*)(__twr_v543) = __twr_v539;
    _mng_j531 = 0ULL;
    __twr_v544 = _mng_equalsptr530 + __twr_v542;
    _mng_equalsptr530 = __twr_v544;
    __twr_v545 = *(uint8_t*)(_mng_equalsptr530);
    if (!(__twr_v545)) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v546 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v547 = 80ULL;
    __twr_v548 = _mng_macro524 + __twr_v547;
    __twr_v549 = *(uint8_t*)(_mng_equalsptr530);
    ((void (*)(uint64_t, uint64_t))__twr_v546)(__twr_v548, __twr_v549);
    __twr_v550 = 1ULL;
    __twr_v551 = _mng_equalsptr530 + __twr_v550;
    _mng_equalsptr530 = __twr_v551;
    __twr_l160:;
    __twr_v552 = *(uint8_t*)(_mng_equalsptr530);
    if (__twr_v552) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_v553 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v554 = 80ULL;
    __twr_v555 = _mng_macro524 + __twr_v554;
    __twr_v556 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v553)(__twr_v555, __twr_v556);
    __twr_v557 = 248ULL;
    __twr_v558 = _mng_macro524 + __twr_v557;
    *(uint8_t*)(__twr_v558) = __twr_v556;
    __twr_v559 = 249ULL;
    __twr_v560 = _mng_macro524 + __twr_v559;
    *(uint8_t*)(__twr_v560) = __twr_v556;
    __twr_v561 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v562 = (uint64_t)(&LexRootMacroScope);
    __twr_v563 = *(uint64_t*)(__twr_v562);
    __twr_v564 = 168ULL;
    __twr_v565 = _mng_macro524 + __twr_v564;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v561)(__twr_v563, _mng_macro524, __twr_v565);
    __twr_l154:;
    _jkl_epilogue:;
}
void LexExpandMacro(uint64_t _mng_macro566, uint64_t _mng_token567) {
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t _mng_oldmacroscope579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t _mng_stream594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t _mng_trashtoken624[4];
    uint64_t __twr_v625;
    uint64_t _mng_byte626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t _mng_arg635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t _mng_argmacro639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t _mng_foundclose657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    __twr_v568 = 1ULL;
    __twr_v569 = (uint64_t)(&LexMacroDepth);
    __twr_v570 = *(uint32_t*)(__twr_v569);
    __twr_v571 = __twr_v570 + __twr_v568;
    *(uint32_t*)(__twr_v569) = __twr_v571;
    __twr_v572 = *(uint32_t*)(__twr_v569);
    __twr_v573 = 64ULL;
    if (__twr_v572 < __twr_v573) { goto __twr_l162; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v574 = (uint64_t)(&LexTokenError);
    __twr_v575 = (uint64_t)(&"Too many macros deep!");
    __twr_v576 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v574)(_mng_token567, __twr_v575, __twr_v576, __twr_v576, __twr_v576);
    __twr_l162:;
    __twr_v577 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v578 = *(uint64_t*)(__twr_v577);
    _mng_oldmacroscope579 = __twr_v578;
    __twr_v580 = 249ULL;
    __twr_v581 = _mng_macro566 + __twr_v580;
    __twr_v582 = *(uint8_t*)(__twr_v581);
    if (!(__twr_v582)) { goto __twr_l166; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v583 = 232ULL;
    __twr_v584 = _mng_macro566 + __twr_v583;
    __twr_v585 = *(uint64_t*)(__twr_v584);
    __twr_v586 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v586) = __twr_v585;
    goto __twr_l164;
    __twr_l166:;
    __twr_v587 = (uint64_t)(&LexCreateMacroTable);
    __twr_v588 = (uint64_t)(&LexRootMacroScope);
    __twr_v589 = *(uint64_t*)(__twr_v588);
    __twr_v590 = ((uint64_t (*)(uint64_t))__twr_v587)(__twr_v589);
    __twr_v591 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v591) = __twr_v590;
    __twr_l164:;
    __twr_v592 = (uint64_t)(&LexAllocateStream);
    __twr_v593 = ((uint64_t (*)())__twr_v592)();
    _mng_stream594 = __twr_v593;
    __twr_v595 = (uint64_t)(&LexInitializeStream);
    ((void (*)(uint64_t, uint64_t))__twr_v595)(_mng_stream594, _mng_macro566);
    __twr_v596 = (uint64_t)(&LexCurrentStream);
    __twr_v597 = *(uint64_t*)(__twr_v596);
    __twr_v598 = 8ULL;
    __twr_v599 = __twr_v597 + __twr_v598;
    __twr_v600 = *(uint64_t*)(__twr_v599);
    __twr_v601 = _mng_stream594 + __twr_v598;
    *(uint64_t*)(__twr_v601) = __twr_v600;
    __twr_v602 = 1000000ULL;
    __twr_v603 = 44ULL;
    __twr_v604 = _mng_stream594 + __twr_v603;
    *(uint32_t*)(__twr_v604) = __twr_v602;
    __twr_v605 = 80ULL;
    __twr_v606 = _mng_macro566 + __twr_v605;
    __twr_v607 = 96ULL;
    __twr_v608 = _mng_macro566 + __twr_v607;
    __twr_v609 = *(uint64_t*)(__twr_v608);
    __twr_v610 = 24ULL;
    __twr_v611 = _mng_stream594 + __twr_v610;
    *(uint64_t*)(__twr_v611) = __twr_v609;
    __twr_v612 = *(uint64_t*)(__twr_v606);
    __twr_v613 = 1ULL;
    __twr_v614 = __twr_v612 - __twr_v613;
    __twr_v615 = 36ULL;
    __twr_v616 = _mng_stream594 + __twr_v615;
    *(uint32_t*)(__twr_v616) = __twr_v614;
    __twr_v617 = 72ULL;
    __twr_v618 = _mng_stream594 + __twr_v617;
    *(uint64_t*)(__twr_v618) = _mng_oldmacroscope579;
    __twr_v619 = 248ULL;
    __twr_v620 = _mng_macro566 + __twr_v619;
    __twr_v621 = *(uint8_t*)(__twr_v620);
    if (!(__twr_v621)) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v622 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v623 = (uint64_t)(&_mng_trashtoken624);
    __twr_v625 = ((uint64_t (*)(uint64_t))__twr_v622)(__twr_v623);
    _mng_byte626 = __twr_v625;
    __twr_v627 = 40ULL;
    if (_mng_byte626 == __twr_v627) { goto __twr_l169; } else { goto __twr_l170; }
    __twr_l170:;
    __twr_v628 = (uint64_t)(&LexTokenError);
    __twr_v629 = (uint64_t)(&_mng_trashtoken624);
    __twr_v630 = (uint64_t)(&"Expected open parenthesis after function macro name");
    __twr_v631 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v628)(__twr_v629, __twr_v630, __twr_v631, __twr_v631, __twr_v631);
    __twr_l169:;
    __twr_v632 = 240ULL;
    __twr_v633 = _mng_macro566 + __twr_v632;
    __twr_v634 = *(uint64_t*)(__twr_v633);
    _mng_arg635 = __twr_v634;
    if (!(_mng_arg635)) { goto __twr_l172; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v636 = (uint64_t)(&TlAllocateFromZone);
    __twr_v637 = (uint64_t)(&LexMacroZone);
    __twr_v638 = ((uint64_t (*)(uint64_t))__twr_v636)(__twr_v637);
    _mng_argmacro639 = __twr_v638;
    __twr_v640 = 232ULL;
    __twr_v641 = _mng_argmacro639 + __twr_v640;
    *(uint64_t*)(__twr_v641) = _mng_oldmacroscope579;
    __twr_v642 = (uint64_t)(&TlCopyString);
    __twr_v643 = 168ULL;
    __twr_v644 = _mng_argmacro639 + __twr_v643;
    __twr_v645 = 0ULL;
    __twr_v646 = 1ULL;
    __twr_v647 = 56ULL;
    __twr_v648 = _mng_arg635 + __twr_v647;
    __twr_v649 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v642)(__twr_v644, __twr_v648, __twr_v649);
    __twr_v650 = 248ULL;
    __twr_v651 = _mng_argmacro639 + __twr_v650;
    *(uint8_t*)(__twr_v651) = __twr_v645;
    __twr_v652 = 249ULL;
    __twr_v653 = _mng_argmacro639 + __twr_v652;
    *(uint8_t*)(__twr_v653) = __twr_v646;
    __twr_v654 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v655 = 80ULL;
    __twr_v656 = _mng_argmacro639 + __twr_v655;
    ((void (*)(uint64_t))__twr_v654)(__twr_v656);
    _mng_foundclose657 = 0ULL;
    __twr_l174:;
    __twr_v658 = 2ULL;
    __twr_v659 = _mng_foundclose657 & __twr_v658;
    if (!(__twr_v659)) { goto __twr_l177; } else { goto __twr_l178; }
    __twr_l178:;
    __twr_v660 = (uint64_t)(&LexTokenError);
    __twr_v661 = (uint64_t)(&_mng_trashtoken624);
    __twr_v662 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v663 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v660)(__twr_v661, __twr_v662, __twr_v663, __twr_v663, __twr_v663);
    __twr_l177:;
    __twr_v664 = (uint64_t)(&LexCollectMacroArgumentContents);
    __twr_v665 = 48ULL;
    __twr_v666 = _mng_argmacro639 + __twr_v665;
    __twr_v667 = 80ULL;
    __twr_v668 = _mng_argmacro639 + __twr_v667;
    __twr_v669 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v664)(__twr_v666, __twr_v668);
    _mng_foundclose657 = __twr_v669;
    __twr_l176:;
    __twr_v670 = 1ULL;
    __twr_v671 = _mng_foundclose657 & __twr_v670;
    if (!(__twr_v671)) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    __twr_v672 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v673 = 80ULL;
    __twr_v674 = _mng_argmacro639 + __twr_v673;
    __twr_v675 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v672)(__twr_v674, __twr_v675);
    __twr_v676 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v677 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v678 = *(uint64_t*)(__twr_v677);
    __twr_v679 = 168ULL;
    __twr_v680 = _mng_argmacro639 + __twr_v679;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v676)(__twr_v678, _mng_argmacro639, __twr_v680);
    __twr_v681 = 48ULL;
    __twr_v682 = _mng_arg635 + __twr_v681;
    __twr_v683 = *(uint64_t*)(__twr_v682);
    _mng_arg635 = __twr_v683;
    __twr_v684 = 2ULL;
    __twr_v685 = _mng_foundclose657 & __twr_v684;
    if (!(__twr_v685)) { goto __twr_l181; } else { goto __twr_l180; }
    __twr_l180:;
    if (!(_mng_arg635)) { goto __twr_l182; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v686 = (uint64_t)(&LexTokenError);
    __twr_v687 = (uint64_t)(&_mng_trashtoken624);
    __twr_v688 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v689 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v686)(__twr_v687, __twr_v688, __twr_v689, __twr_v689, __twr_v689);
    __twr_l182:;
    goto __twr_l179;
    __twr_l181:;
    if (_mng_arg635) { goto __twr_l179; } else { goto __twr_l184; }
    __twr_l184:;
    __twr_l185:;
    __twr_v690 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v691 = (uint64_t)(&_mng_trashtoken624);
    __twr_v692 = ((uint64_t (*)(uint64_t))__twr_v690)(__twr_v691);
    _mng_byte626 = __twr_v692;
    __twr_v693 = 41ULL;
    if (_mng_byte626 != __twr_v693) { goto __twr_l187; } else { goto __twr_l188; }
    __twr_l188:;
    goto __twr_l186;
    __twr_l187:;
    goto __twr_l185;
    __twr_l186:;
    __twr_l179:;
    __twr_l173:;
    if (_mng_arg635) { goto __twr_l171; } else { goto __twr_l172; }
    __twr_l172:;
    __twr_l167:;
    __twr_v694 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v694)(_mng_stream594);
    __twr_l161:;
    _jkl_epilogue:;
}
void LexParseInclude() {
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t _mng_str697[11];
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t _mng_token700[4];
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t _mng_created711;
    uint64_t _mng_fileblock712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t _mng_filepath717[11];
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t _mng_handle755;
    uint64_t _mng_status756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t _mng_stream770;
    uint64_t __twr_v771;
    __twr_v695 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v696 = (uint64_t)(&_mng_str697);
    ((void (*)(uint64_t))__twr_v695)(__twr_v696);
    __twr_v698 = (uint64_t)(&LexCollectString);
    __twr_v699 = (uint64_t)(&_mng_token700);
    ((void (*)(uint64_t, uint64_t))__twr_v698)(__twr_v699, __twr_v696);
    __twr_v701 = (uint64_t)(&LexFalseCount);
    __twr_v702 = *(uint32_t*)(__twr_v701);
    if (!(__twr_v702)) { goto __twr_l190; } else { goto __twr_l191; }
    __twr_l191:;
    __twr_v703 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v704 = (uint64_t)(&_mng_str697);
    ((void (*)(uint64_t))__twr_v703)(__twr_v704);
    goto _jkl_epilogue;
    __twr_l190:;
    __twr_v705 = (uint64_t)(&FeCreateFileBlock);
    __twr_v706 = (uint64_t)(&_mng_str697);
    __twr_v707 = 16ULL;
    __twr_v708 = __twr_v706 + __twr_v707;
    __twr_v709 = *(uint64_t*)(__twr_v708);
    __twr_v710 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v705)(__twr_v709, (uint64_t)(&_mng_created711));
    _mng_fileblock712 = __twr_v710;
    if (_mng_created711) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v713 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v714 = (uint64_t)(&_mng_str697);
    ((void (*)(uint64_t))__twr_v713)(__twr_v714);
    goto _jkl_epilogue;
    __twr_l192:;
    __twr_v715 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v716 = (uint64_t)(&_mng_filepath717);
    ((void (*)(uint64_t))__twr_v715)(__twr_v716);
    __twr_v718 = (uint64_t)(&TlCopyParentPath);
    __twr_v719 = (uint64_t)(&LexCurrentStream);
    __twr_v720 = *(uint64_t*)(__twr_v719);
    __twr_v721 = 8ULL;
    __twr_v722 = __twr_v720 + __twr_v721;
    __twr_v723 = *(uint64_t*)(__twr_v722);
    __twr_v724 = 48ULL;
    __twr_v725 = __twr_v723 + __twr_v724;
    ((void (*)(uint64_t, uint64_t))__twr_v718)(__twr_v725, __twr_v716);
    __twr_v726 = *(uint64_t*)(__twr_v716);
    if (__twr_v726) { goto __twr_l196; } else { goto __twr_l195; }
    __twr_l195:;
    __twr_v727 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v728 = (uint64_t)(&_mng_filepath717);
    __twr_v729 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v727)(__twr_v728, __twr_v729);
    __twr_v730 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v727)(__twr_v728, __twr_v730);
    goto __twr_l194;
    __twr_l196:;
    __twr_v731 = (uint64_t)(&_mng_filepath717);
    __twr_v732 = 16ULL;
    __twr_v733 = __twr_v731 + __twr_v732;
    __twr_v734 = *(uint64_t*)(__twr_v733);
    __twr_v735 = *(uint64_t*)(__twr_v731);
    __twr_v736 = 1ULL;
    __twr_v737 = __twr_v735 - __twr_v736;
    __twr_v738 = __twr_v734 + __twr_v737;
    __twr_v739 = *(uint8_t*)(__twr_v738);
    __twr_v740 = 47ULL;
    if (__twr_v739 == __twr_v740) { goto __twr_l194; } else { goto __twr_l197; }
    __twr_l197:;
    __twr_v741 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v742 = (uint64_t)(&_mng_filepath717);
    __twr_v743 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v741)(__twr_v742, __twr_v743);
    __twr_l194:;
    __twr_v744 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v745 = (uint64_t)(&_mng_filepath717);
    __twr_v746 = (uint64_t)(&_mng_str697);
    __twr_v747 = 16ULL;
    __twr_v748 = __twr_v746 + __twr_v747;
    __twr_v749 = *(uint64_t*)(__twr_v748);
    __twr_v750 = *(uint64_t*)(__twr_v746);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v744)(__twr_v745, __twr_v749, __twr_v750);
    __twr_v751 = (uint64_t)(&TlOpenSource);
    __twr_v752 = __twr_v745 + __twr_v747;
    __twr_v753 = *(uint64_t*)(__twr_v752);
    __twr_v754 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v751)(__twr_v753, (uint64_t)(&_mng_handle755));
    _mng_status756 = __twr_v754;
    if (!(_mng_status756)) { goto __twr_l198; } else { goto __twr_l199; }
    __twr_l199:;
    __twr_v757 = (uint64_t)(&LexTokenError);
    __twr_v758 = (uint64_t)(&_mng_token700);
    __twr_v759 = (uint64_t)(&"Failed to include the file.");
    __twr_v760 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v757)(__twr_v758, __twr_v759, __twr_v760, __twr_v760, __twr_v760);
    __twr_l198:;
    __twr_v761 = (uint64_t)(&FeCopyPathFileBlock);
    __twr_v762 = (uint64_t)(&_mng_filepath717);
    __twr_v763 = 16ULL;
    __twr_v764 = __twr_v762 + __twr_v763;
    __twr_v765 = *(uint64_t*)(__twr_v764);
    ((void (*)(uint64_t, uint64_t))__twr_v761)(_mng_fileblock712, __twr_v765);
    __twr_v766 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v766)(__twr_v762);
    __twr_v767 = (uint64_t)(&_mng_str697);
    ((void (*)(uint64_t))__twr_v766)(__twr_v767);
    __twr_v768 = (uint64_t)(&LexCreateFileStream);
    __twr_v769 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v768)(_mng_fileblock712, _mng_handle755);
    _mng_stream770 = __twr_v769;
    __twr_v771 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v771)(_mng_stream770);
    __twr_l189:;
    _jkl_epilogue:;
}
void LexParseDepend() {
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t _mng_oldstream774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t _mng_stream777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    __twr_v772 = (uint64_t)(&LexCurrentStream);
    __twr_v773 = *(uint64_t*)(__twr_v772);
    _mng_oldstream774 = __twr_v773;
    __twr_v775 = (uint64_t)(&LexParseInclude);
    ((void (*)())__twr_v775)();
    __twr_v776 = *(uint64_t*)(__twr_v772);
    _mng_stream777 = __twr_v776;
    if (_mng_stream777 != _mng_oldstream774) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    goto _jkl_epilogue;
    __twr_l201:;
    __twr_v778 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v779 = *(uint64_t*)(__twr_v778);
    __twr_v780 = 72ULL;
    __twr_v781 = _mng_stream777 + __twr_v780;
    *(uint64_t*)(__twr_v781) = __twr_v779;
    __twr_v782 = (uint64_t)(&LexCreateMacroTable);
    __twr_v783 = *(uint64_t*)(__twr_v778);
    __twr_v784 = ((uint64_t (*)(uint64_t))__twr_v782)(__twr_v783);
    *(uint64_t*)(__twr_v778) = __twr_v784;
    __twr_l200:;
    _jkl_epilogue:;
}
void LexParseDefine() {
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t _mng_contentsbuffer789[11];
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t _mng_trashtoken792[4];
    uint64_t __twr_v793;
    uint64_t _mng_namebuffer794[8];
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t _mng_macro801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t _mng_oldmacro814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    __twr_v785 = (uint64_t)(&LexFalseCount);
    __twr_v786 = *(uint32_t*)(__twr_v785);
    if (!(__twr_v786)) { goto __twr_l204; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v787 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v788 = (uint64_t)(&_mng_contentsbuffer789);
    ((void (*)(uint64_t))__twr_v787)(__twr_v788);
    __twr_v790 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v791 = (uint64_t)(&_mng_trashtoken792);
    __twr_v793 = (uint64_t)(&_mng_namebuffer794);
    __twr_v795 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v790)(__twr_v791, __twr_v793);
    __twr_v796 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v796)(__twr_v791, __twr_v788, __twr_v795);
    __twr_v797 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v797)(__twr_v788);
    goto _jkl_epilogue;
    __twr_l204:;
    __twr_v798 = (uint64_t)(&TlAllocateFromZone);
    __twr_v799 = (uint64_t)(&LexMacroZone);
    __twr_v800 = ((uint64_t (*)(uint64_t))__twr_v798)(__twr_v799);
    _mng_macro801 = __twr_v800;
    __twr_v802 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v803 = 80ULL;
    __twr_v804 = _mng_macro801 + __twr_v803;
    ((void (*)(uint64_t))__twr_v802)(__twr_v804);
    __twr_v805 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v806 = 48ULL;
    __twr_v807 = _mng_macro801 + __twr_v806;
    __twr_v808 = 168ULL;
    __twr_v809 = _mng_macro801 + __twr_v808;
    ((void (*)(uint64_t, uint64_t))__twr_v805)(__twr_v807, __twr_v809);
    __twr_v810 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v811 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v812 = *(uint64_t*)(__twr_v811);
    __twr_v813 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v810)(__twr_v812, __twr_v809);
    _mng_oldmacro814 = __twr_v813;
    if (!(_mng_oldmacro814)) { goto __twr_l206; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v815 = 32ULL;
    __twr_v816 = _mng_oldmacro814 + __twr_v815;
    __twr_v817 = *(uint64_t*)(__twr_v816);
    __twr_v818 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v819 = *(uint64_t*)(__twr_v818);
    __twr_v820 = 8ULL;
    __twr_v821 = __twr_v819 + __twr_v820;
    if (__twr_v817 != __twr_v821) { goto __twr_l206; } else { goto __twr_l207; }
    __twr_l207:;
    __twr_v822 = (uint64_t)(&LexTokenError);
    __twr_v823 = 48ULL;
    __twr_v824 = _mng_macro801 + __twr_v823;
    __twr_v825 = (uint64_t)(&"Macro already defined");
    __twr_v826 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v822)(__twr_v824, __twr_v825, __twr_v826, __twr_v826, __twr_v826);
    __twr_l206:;
    __twr_v827 = 0ULL;
    __twr_v828 = 248ULL;
    __twr_v829 = _mng_macro801 + __twr_v828;
    *(uint8_t*)(__twr_v829) = __twr_v827;
    __twr_v830 = 249ULL;
    __twr_v831 = _mng_macro801 + __twr_v830;
    *(uint8_t*)(__twr_v831) = __twr_v827;
    __twr_v832 = (uint64_t)(&LexCollectValue);
    __twr_v833 = 48ULL;
    __twr_v834 = _mng_macro801 + __twr_v833;
    __twr_v835 = 80ULL;
    __twr_v836 = _mng_macro801 + __twr_v835;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v832)(__twr_v834, __twr_v836, __twr_v827);
    __twr_v837 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v838 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v839 = *(uint64_t*)(__twr_v838);
    __twr_v840 = 168ULL;
    __twr_v841 = _mng_macro801 + __twr_v840;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v837)(__twr_v839, _mng_macro801, __twr_v841);
    __twr_l203:;
    _jkl_epilogue:;
}
void LexParseUndefine() {
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t _mng_token844[4];
    uint64_t __twr_v845;
    uint64_t _mng_buffer846[8];
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t _mng_oldmacro854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    __twr_v842 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v843 = (uint64_t)(&_mng_token844);
    __twr_v845 = (uint64_t)(&_mng_buffer846);
    ((void (*)(uint64_t, uint64_t))__twr_v842)(__twr_v843, __twr_v845);
    __twr_v847 = (uint64_t)(&LexFalseCount);
    __twr_v848 = *(uint32_t*)(__twr_v847);
    if (!(__twr_v848)) { goto __twr_l210; } else { goto __twr_l211; }
    __twr_l211:;
    goto _jkl_epilogue;
    __twr_l210:;
    __twr_v849 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v850 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v851 = *(uint64_t*)(__twr_v850);
    __twr_v852 = (uint64_t)(&_mng_buffer846);
    __twr_v853 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v849)(__twr_v851, __twr_v852);
    _mng_oldmacro854 = __twr_v853;
    if (_mng_oldmacro854) { goto __twr_l212; } else { goto __twr_l213; }
    __twr_l213:;
    goto _jkl_epilogue;
    __twr_l212:;
    __twr_v855 = (uint64_t)(&TlRemoveSymbolTable);
    ((void (*)(uint64_t))__twr_v855)(_mng_oldmacro854);
    __twr_v856 = (uint64_t)(&LexMacroDelete);
    ((void (*)(uint64_t))__twr_v856)(_mng_oldmacro854);
    __twr_l209:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentName(uint64_t _mng_token857, uint64_t _mng_buffer858) {
    uint64_t _jkl_retv;
    uint64_t _mng_len859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t _mng_byte862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t __twr_v886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    _mng_len859 = 0ULL;
    __twr_l215:;
    __twr_v860 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v861 = ((uint64_t (*)(uint64_t))__twr_v860)(_mng_token857);
    _mng_byte862 = __twr_v861;
    __twr_v863 = 41ULL;
    if (_mng_byte862 != __twr_v863) { goto __twr_l219; } else { goto __twr_l218; }
    __twr_l218:;
    __twr_v864 = 2ULL;
    _jkl_retv = __twr_v864;
    goto _jkl_epilogue;
    goto __twr_l217;
    __twr_l219:;
    __twr_v865 = 44ULL;
    if (_mng_byte862 != __twr_v865) { goto __twr_l217; } else { goto __twr_l220; }
    __twr_l220:;
    goto __twr_l215;
    __twr_l217:;
    goto __twr_l216;
    goto __twr_l215;
    __twr_l216:;
    __twr_l221:;
    __twr_v866 = (uint64_t)(&LexCharTreatment);
    __twr_v867 = __twr_v866 + _mng_byte862;
    __twr_v868 = *(uint8_t*)(__twr_v867);
    __twr_v869 = 3ULL;
    if (__twr_v868 != __twr_v869) { goto __twr_l223; } else { goto __twr_l224; }
    __twr_l224:;
    __twr_v870 = 0ULL;
    *(uint8_t*)(_mng_buffer858) = __twr_v870;
    __twr_v871 = 1ULL;
    _jkl_retv = __twr_v871;
    goto _jkl_epilogue;
    __twr_l223:;
    __twr_v872 = 41ULL;
    if (_mng_byte862 != __twr_v872) { goto __twr_l225; } else { goto __twr_l226; }
    __twr_l226:;
    __twr_v873 = 0ULL;
    *(uint8_t*)(_mng_buffer858) = __twr_v873;
    __twr_v874 = 3ULL;
    _jkl_retv = __twr_v874;
    goto _jkl_epilogue;
    __twr_l225:;
    __twr_v875 = 44ULL;
    if (_mng_byte862 != __twr_v875) { goto __twr_l227; } else { goto __twr_l228; }
    __twr_l228:;
    __twr_v876 = 0ULL;
    *(uint8_t*)(_mng_buffer858) = __twr_v876;
    __twr_v877 = 1ULL;
    _jkl_retv = __twr_v877;
    goto _jkl_epilogue;
    __twr_l227:;
    __twr_v878 = (uint64_t)(&LexCharTreatment);
    __twr_v879 = __twr_v878 + _mng_byte862;
    __twr_v880 = *(uint8_t*)(__twr_v879);
    if (!(__twr_v880)) { goto __twr_l229; } else { goto __twr_l230; }
    __twr_l230:;
    __twr_v881 = (uint64_t)(&LexTokenError);
    __twr_v882 = (uint64_t)(&"Illegal character in token");
    __twr_v883 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v881)(_mng_token857, __twr_v882, __twr_v883, __twr_v883, __twr_v883);
    __twr_l229:;
    __twr_v884 = 63ULL;
    if (_mng_len859 != __twr_v884) { goto __twr_l231; } else { goto __twr_l232; }
    __twr_l232:;
    __twr_v885 = (uint64_t)(&LexTokenError);
    __twr_v886 = (uint64_t)(&"Token length too great");
    __twr_v887 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v885)(_mng_token857, __twr_v886, __twr_v887, __twr_v887, __twr_v887);
    __twr_l231:;
    *(uint8_t*)(_mng_buffer858) = _mng_byte862;
    __twr_v888 = 1ULL;
    __twr_v889 = _mng_buffer858 + __twr_v888;
    _mng_buffer858 = __twr_v889;
    __twr_v890 = _mng_len859 + __twr_v888;
    _mng_len859 = __twr_v890;
    __twr_v891 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v892 = ((uint64_t (*)())__twr_v891)();
    _mng_byte862 = __twr_v892;
    goto __twr_l221;
    __twr_l222:;
    __twr_l214:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectMacroArgumentList(uint64_t _mng_ignore893, uint64_t _mng_o_arglisthead, uint64_t _mng_o_length) {
    uint64_t _mng_arglisttail894;
    uint64_t __twr_v895;
    uint64_t __twr_v896;
    uint64_t _mng_hashtable897[196];
    uint64_t _mng_arglisthead898;
    uint64_t _mng_length899;
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t _mng_token902[4];
    uint64_t __twr_v903;
    uint64_t _mng_buffer904[8];
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t _mng_state907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t _mng_created914;
    uint64_t _mng_arg915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint64_t __twr_v933;
    _mng_arglisttail894 = 0ULL;
    __twr_v895 = (uint64_t)(&TlInitializeHashTable);
    __twr_v896 = (uint64_t)(&_mng_hashtable897);
    ((void (*)(uint64_t))__twr_v895)(__twr_v896);
    _mng_arglisthead898 = 0ULL;
    _mng_length899 = 0ULL;
    __twr_l234:;
    __twr_v900 = (uint64_t)(&LexCollectMacroArgumentName);
    __twr_v901 = (uint64_t)(&_mng_token902);
    __twr_v903 = (uint64_t)(&_mng_buffer904);
    __twr_v905 = 1ULL;
    __twr_v906 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v900)(__twr_v901, __twr_v903);
    _mng_state907 = __twr_v906;
    __twr_v908 = _mng_state907 & __twr_v905;
    if (!(__twr_v908)) { goto __twr_l236; } else { goto __twr_l238; }
    __twr_l238:;
    if (_mng_ignore893) { goto __twr_l236; } else { goto __twr_l237; }
    __twr_l237:;
    __twr_v909 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v910 = (uint64_t)(&_mng_hashtable897);
    __twr_v911 = 120ULL;
    __twr_v912 = (uint64_t)(&_mng_buffer904);
    __twr_v913 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v909)(__twr_v910, __twr_v911, __twr_v912, (uint64_t)(&_mng_created914));
    _mng_arg915 = __twr_v913;
    if (_mng_created914) { goto __twr_l239; } else { goto __twr_l240; }
    __twr_l240:;
    __twr_v916 = (uint64_t)(&LexTokenError);
    __twr_v917 = (uint64_t)(&_mng_token902);
    __twr_v918 = (uint64_t)(&"Macro argument name already used");
    __twr_v919 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v916)(__twr_v917, __twr_v918, __twr_v919, __twr_v919, __twr_v919);
    __twr_l239:;
    __twr_v920 = (uint64_t)(&TlCopyString);
    __twr_v921 = 56ULL;
    __twr_v922 = _mng_arg915 + __twr_v921;
    __twr_v923 = 1ULL;
    __twr_v924 = (uint64_t)(&_mng_buffer904);
    __twr_v925 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v920)(__twr_v922, __twr_v924, __twr_v925);
    __twr_v926 = _mng_length899 + __twr_v923;
    _mng_length899 = __twr_v926;
    __twr_v927 = 0ULL;
    __twr_v928 = 48ULL;
    __twr_v929 = _mng_arg915 + __twr_v928;
    *(uint64_t*)(__twr_v929) = __twr_v927;
    if (!(_mng_arglisttail894)) { goto __twr_l243; } else { goto __twr_l242; }
    __twr_l242:;
    __twr_v930 = 48ULL;
    __twr_v931 = _mng_arglisttail894 + __twr_v930;
    *(uint64_t*)(__twr_v931) = _mng_arg915;
    goto __twr_l241;
    __twr_l243:;
    _mng_arglisthead898 = _mng_arg915;
    __twr_l241:;
    _mng_arglisttail894 = _mng_arg915;
    __twr_l236:;
    __twr_v932 = 2ULL;
    __twr_v933 = _mng_state907 & __twr_v932;
    if (!(__twr_v933)) { goto __twr_l244; } else { goto __twr_l245; }
    __twr_l245:;
    goto _jkl_epilogue;
    __twr_l244:;
    goto __twr_l234;
    __twr_l235:;
    __twr_l233:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_arglisthead) = _mng_arglisthead898;
    *(uint64_t*)(_mng_o_length) = _mng_length899;
}
void LexParseMacro() {
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t __twr_v936;
    uint64_t _mng_macro937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    uint64_t __twr_v942;
    uint64_t __twr_v943;
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t __twr_v946;
    uint64_t __twr_v947;
    uint64_t _mng_trashtoken948[4];
    uint64_t __twr_v949;
    uint64_t _mng_byte950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t __twr_v953;
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    uint64_t __twr_v956;
    uint64_t __twr_v957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t _mng_length961;
    uint64_t __twr_v962;
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    uint64_t __twr_v965;
    uint64_t _mng_contentsbuffer966[11];
    uint64_t __twr_v967;
    uint64_t __twr_v968;
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t __twr_v975;
    uint64_t __twr_v976;
    uint64_t __twr_v977;
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t _mng_oldmacro986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t __twr_v990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    __twr_v934 = (uint64_t)(&TlAllocateFromZone);
    __twr_v935 = (uint64_t)(&LexMacroZone);
    __twr_v936 = ((uint64_t (*)(uint64_t))__twr_v934)(__twr_v935);
    _mng_macro937 = __twr_v936;
    __twr_v938 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v939 = 80ULL;
    __twr_v940 = _mng_macro937 + __twr_v939;
    ((void (*)(uint64_t))__twr_v938)(__twr_v940);
    __twr_v941 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v942 = 48ULL;
    __twr_v943 = _mng_macro937 + __twr_v942;
    __twr_v944 = 168ULL;
    __twr_v945 = _mng_macro937 + __twr_v944;
    ((void (*)(uint64_t, uint64_t))__twr_v941)(__twr_v943, __twr_v945);
    __twr_v946 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v947 = (uint64_t)(&_mng_trashtoken948);
    __twr_v949 = ((uint64_t (*)(uint64_t))__twr_v946)(__twr_v947);
    _mng_byte950 = __twr_v949;
    __twr_v951 = 40ULL;
    if (_mng_byte950 == __twr_v951) { goto __twr_l247; } else { goto __twr_l248; }
    __twr_l248:;
    __twr_v952 = (uint64_t)(&LexTokenError);
    __twr_v953 = (uint64_t)(&_mng_trashtoken948);
    __twr_v954 = (uint64_t)(&"Expected an open parenthesis");
    __twr_v955 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v952)(__twr_v953, __twr_v954, __twr_v955, __twr_v955, __twr_v955);
    __twr_l247:;
    __twr_v956 = (uint64_t)(&LexFalseCount);
    __twr_v957 = *(uint32_t*)(__twr_v956);
    if (!(__twr_v957)) { goto __twr_l249; } else { goto __twr_l250; }
    __twr_l250:;
    __twr_v958 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v959 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v958)(__twr_v959, (uint64_t)(&__twr_v960), (uint64_t)(&_mng_length961));
    __twr_v962 = 240ULL;
    __twr_v963 = _mng_macro937 + __twr_v962;
    *(uint64_t*)(__twr_v963) = __twr_v960;
    __twr_v964 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v965 = (uint64_t)(&_mng_contentsbuffer966);
    ((void (*)(uint64_t))__twr_v964)(__twr_v965);
    __twr_v967 = (uint64_t)(&LexCollectValue);
    __twr_v968 = (uint64_t)(&_mng_trashtoken948);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v967)(__twr_v968, __twr_v965, __twr_v959);
    __twr_v969 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v969)(__twr_v965);
    goto _jkl_epilogue;
    __twr_l249:;
    __twr_v970 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v971 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v970)(__twr_v971, (uint64_t)(&__twr_v972), (uint64_t)(&_mng_length961));
    __twr_v973 = 240ULL;
    __twr_v974 = _mng_macro937 + __twr_v973;
    *(uint64_t*)(__twr_v974) = __twr_v972;
    if (_mng_length961) { goto __twr_l251; } else { goto __twr_l252; }
    __twr_l252:;
    __twr_v975 = (uint64_t)(&LexTokenError);
    __twr_v976 = 48ULL;
    __twr_v977 = _mng_macro937 + __twr_v976;
    __twr_v978 = (uint64_t)(&"Must have at least 1 argument");
    __twr_v979 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v975)(__twr_v977, __twr_v978, __twr_v979, __twr_v979, __twr_v979);
    __twr_l251:;
    __twr_v980 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v981 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v982 = *(uint64_t*)(__twr_v981);
    __twr_v983 = 168ULL;
    __twr_v984 = _mng_macro937 + __twr_v983;
    __twr_v985 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v980)(__twr_v982, __twr_v984);
    _mng_oldmacro986 = __twr_v985;
    if (!(_mng_oldmacro986)) { goto __twr_l253; } else { goto __twr_l254; }
    __twr_l254:;
    __twr_v987 = (uint64_t)(&LexTokenError);
    __twr_v988 = 48ULL;
    __twr_v989 = _mng_macro937 + __twr_v988;
    __twr_v990 = (uint64_t)(&"Macro already defined");
    __twr_v991 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v987)(__twr_v989, __twr_v990, __twr_v991, __twr_v991, __twr_v991);
    __twr_l253:;
    __twr_v992 = 1ULL;
    __twr_v993 = 248ULL;
    __twr_v994 = _mng_macro937 + __twr_v993;
    *(uint8_t*)(__twr_v994) = __twr_v992;
    __twr_v995 = 0ULL;
    __twr_v996 = 249ULL;
    __twr_v997 = _mng_macro937 + __twr_v996;
    *(uint8_t*)(__twr_v997) = __twr_v995;
    __twr_v998 = (uint64_t)(&LexCollectValue);
    __twr_v999 = 48ULL;
    __twr_v1000 = _mng_macro937 + __twr_v999;
    __twr_v1001 = 80ULL;
    __twr_v1002 = _mng_macro937 + __twr_v1001;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v998)(__twr_v1000, __twr_v1002, __twr_v995);
    __twr_v1003 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1004 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1005 = *(uint64_t*)(__twr_v1004);
    __twr_v1006 = 168ULL;
    __twr_v1007 = _mng_macro937 + __twr_v1006;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1003)(__twr_v1005, _mng_macro937, __twr_v1007);
    __twr_l246:;
    _jkl_epilogue:;
}
void LexParseIf() {
    uint64_t __twr_v1008;
    uint64_t __twr_v1009;
    uint64_t _mng_token1010[4];
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t _mng_truthy1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    __twr_v1008 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1009 = (uint64_t)(&_mng_token1010);
    __twr_v1011 = (uint64_t)(&LexFalseCount);
    __twr_v1012 = *(uint32_t*)(__twr_v1011);
    __twr_v1013 = 0ULL;
    __twr_v1014 = (__twr_v1012 != __twr_v1013);
    __twr_v1015 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1008)(__twr_v1009, __twr_v1014);
    _mng_truthy1016 = __twr_v1015;
    __twr_v1017 = *(uint32_t*)(__twr_v1011);
    if (!(__twr_v1017)) { goto __twr_l256; } else { goto __twr_l257; }
    __twr_l257:;
    __twr_v1018 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1019 = (uint64_t)(&LexIfStack);
    __twr_v1020 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1018)(__twr_v1019, __twr_v1020);
    __twr_v1021 = 1ULL;
    __twr_v1022 = (uint64_t)(&LexFalseCount);
    __twr_v1023 = *(uint32_t*)(__twr_v1022);
    __twr_v1024 = __twr_v1023 + __twr_v1021;
    *(uint32_t*)(__twr_v1022) = __twr_v1024;
    goto _jkl_epilogue;
    __twr_l256:;
    if (!(_mng_truthy1016)) { goto __twr_l260; } else { goto __twr_l259; }
    __twr_l259:;
    __twr_v1025 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1026 = (uint64_t)(&LexIfStack);
    __twr_v1027 = 2ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1025)(__twr_v1026, __twr_v1027);
    goto __twr_l258;
    __twr_l260:;
    __twr_v1028 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1029 = (uint64_t)(&LexIfStack);
    __twr_v1030 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1028)(__twr_v1029, __twr_v1030);
    __twr_v1031 = (uint64_t)(&LexFalseCount);
    __twr_v1032 = *(uint32_t*)(__twr_v1031);
    __twr_v1033 = __twr_v1032 + __twr_v1030;
    *(uint32_t*)(__twr_v1031) = __twr_v1033;
    __twr_l258:;
    __twr_l255:;
    _jkl_epilogue:;
}
void LexParseElse() {
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t _mng_status1048;
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    __twr_v1034 = (uint64_t)(&LexIfStack);
    __twr_v1035 = *(uint64_t*)(__twr_v1034);
    if (__twr_v1035) { goto __twr_l262; } else { goto __twr_l263; }
    __twr_l263:;
    __twr_v1036 = (uint64_t)(&LexStreamError);
    __twr_v1037 = (uint64_t)(&"ELSE with no matching IF");
    __twr_v1038 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1036)(__twr_v1037, __twr_v1038, __twr_v1038, __twr_v1038);
    __twr_l262:;
    __twr_v1039 = (uint64_t)(&LexIfStack);
    __twr_v1040 = 16ULL;
    __twr_v1041 = __twr_v1039 + __twr_v1040;
    __twr_v1042 = *(uint64_t*)(__twr_v1041);
    __twr_v1043 = *(uint64_t*)(__twr_v1039);
    __twr_v1044 = 1ULL;
    __twr_v1045 = __twr_v1043 - __twr_v1044;
    __twr_v1046 = __twr_v1042 + __twr_v1045;
    __twr_v1047 = *(uint8_t*)(__twr_v1046);
    _mng_status1048 = __twr_v1047;
    if (_mng_status1048) { goto __twr_l264; } else { goto __twr_l265; }
    __twr_l265:;
    goto _jkl_epilogue;
    __twr_l264:;
    __twr_v1049 = 2ULL;
    if (_mng_status1048 != __twr_v1049) { goto __twr_l266; } else { goto __twr_l267; }
    __twr_l267:;
    __twr_v1050 = 0ULL;
    __twr_v1051 = (uint64_t)(&LexIfStack);
    __twr_v1052 = 16ULL;
    __twr_v1053 = __twr_v1051 + __twr_v1052;
    __twr_v1054 = *(uint64_t*)(__twr_v1053);
    __twr_v1055 = *(uint64_t*)(__twr_v1051);
    __twr_v1056 = 1ULL;
    __twr_v1057 = __twr_v1055 - __twr_v1056;
    __twr_v1058 = __twr_v1054 + __twr_v1057;
    *(uint8_t*)(__twr_v1058) = __twr_v1050;
    __twr_v1059 = (uint64_t)(&LexFalseCount);
    __twr_v1060 = *(uint32_t*)(__twr_v1059);
    __twr_v1061 = __twr_v1060 + __twr_v1056;
    *(uint32_t*)(__twr_v1059) = __twr_v1061;
    goto _jkl_epilogue;
    __twr_l266:;
    __twr_v1062 = 2ULL;
    __twr_v1063 = (uint64_t)(&LexIfStack);
    __twr_v1064 = 16ULL;
    __twr_v1065 = __twr_v1063 + __twr_v1064;
    __twr_v1066 = *(uint64_t*)(__twr_v1065);
    __twr_v1067 = *(uint64_t*)(__twr_v1063);
    __twr_v1068 = 1ULL;
    __twr_v1069 = __twr_v1067 - __twr_v1068;
    __twr_v1070 = __twr_v1066 + __twr_v1069;
    *(uint8_t*)(__twr_v1070) = __twr_v1062;
    __twr_v1071 = (uint64_t)(&LexFalseCount);
    __twr_v1072 = *(uint32_t*)(__twr_v1071);
    __twr_v1073 = __twr_v1072 - __twr_v1068;
    *(uint32_t*)(__twr_v1071) = __twr_v1073;
    __twr_l261:;
    _jkl_epilogue:;
}
void LexParseElseif() {
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t _mng_status1088;
    uint64_t __twr_v1089;
    uint64_t __twr_v1090;
    uint64_t _mng_token1091[4];
    uint64_t __twr_v1092;
    uint64_t __twr_v1093;
    uint64_t __twr_v1094;
    uint64_t __twr_v1095;
    uint64_t __twr_v1096;
    uint64_t __twr_v1097;
    uint64_t __twr_v1098;
    uint64_t __twr_v1099;
    uint64_t __twr_v1100;
    uint64_t __twr_v1101;
    uint64_t __twr_v1102;
    uint64_t __twr_v1103;
    uint64_t __twr_v1104;
    uint64_t __twr_v1105;
    uint64_t __twr_v1106;
    uint64_t __twr_v1107;
    uint64_t __twr_v1108;
    uint64_t __twr_v1109;
    uint64_t __twr_v1110;
    uint64_t __twr_v1111;
    uint64_t __twr_v1112;
    uint64_t __twr_v1113;
    uint64_t _mng_truthy1114;
    uint64_t __twr_v1115;
    uint64_t __twr_v1116;
    uint64_t __twr_v1117;
    uint64_t __twr_v1118;
    uint64_t __twr_v1119;
    uint64_t __twr_v1120;
    uint64_t __twr_v1121;
    uint64_t __twr_v1122;
    uint64_t __twr_v1123;
    uint64_t __twr_v1124;
    uint64_t __twr_v1125;
    uint64_t __twr_v1126;
    __twr_v1074 = (uint64_t)(&LexIfStack);
    __twr_v1075 = *(uint64_t*)(__twr_v1074);
    if (__twr_v1075) { goto __twr_l269; } else { goto __twr_l270; }
    __twr_l270:;
    __twr_v1076 = (uint64_t)(&LexStreamError);
    __twr_v1077 = (uint64_t)(&"ELSEIF with no matching IF");
    __twr_v1078 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1076)(__twr_v1077, __twr_v1078, __twr_v1078, __twr_v1078);
    __twr_l269:;
    __twr_v1079 = (uint64_t)(&LexIfStack);
    __twr_v1080 = 16ULL;
    __twr_v1081 = __twr_v1079 + __twr_v1080;
    __twr_v1082 = *(uint64_t*)(__twr_v1081);
    __twr_v1083 = *(uint64_t*)(__twr_v1079);
    __twr_v1084 = 1ULL;
    __twr_v1085 = __twr_v1083 - __twr_v1084;
    __twr_v1086 = __twr_v1082 + __twr_v1085;
    __twr_v1087 = *(uint8_t*)(__twr_v1086);
    _mng_status1088 = __twr_v1087;
    if (_mng_status1088) { goto __twr_l271; } else { goto __twr_l272; }
    __twr_l272:;
    __twr_v1089 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1090 = (uint64_t)(&_mng_token1091);
    __twr_v1092 = 1ULL;
    __twr_v1093 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1089)(__twr_v1090, __twr_v1092);
    goto _jkl_epilogue;
    __twr_l271:;
    __twr_v1094 = 2ULL;
    if (_mng_status1088 != __twr_v1094) { goto __twr_l273; } else { goto __twr_l274; }
    __twr_l274:;
    __twr_v1095 = 0ULL;
    __twr_v1096 = (uint64_t)(&LexIfStack);
    __twr_v1097 = 16ULL;
    __twr_v1098 = __twr_v1096 + __twr_v1097;
    __twr_v1099 = *(uint64_t*)(__twr_v1098);
    __twr_v1100 = *(uint64_t*)(__twr_v1096);
    __twr_v1101 = 1ULL;
    __twr_v1102 = __twr_v1100 - __twr_v1101;
    __twr_v1103 = __twr_v1099 + __twr_v1102;
    *(uint8_t*)(__twr_v1103) = __twr_v1095;
    __twr_v1104 = (uint64_t)(&LexFalseCount);
    __twr_v1105 = *(uint32_t*)(__twr_v1104);
    __twr_v1106 = __twr_v1105 + __twr_v1101;
    *(uint32_t*)(__twr_v1104) = __twr_v1106;
    __twr_v1107 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1108 = (uint64_t)(&_mng_token1091);
    __twr_v1109 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1107)(__twr_v1108, __twr_v1101);
    goto _jkl_epilogue;
    __twr_l273:;
    __twr_v1110 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1111 = (uint64_t)(&_mng_token1091);
    __twr_v1112 = 0ULL;
    __twr_v1113 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1110)(__twr_v1111, __twr_v1112);
    _mng_truthy1114 = __twr_v1113;
    if (!(_mng_truthy1114)) { goto __twr_l275; } else { goto __twr_l276; }
    __twr_l276:;
    __twr_v1115 = 2ULL;
    __twr_v1116 = (uint64_t)(&LexIfStack);
    __twr_v1117 = 16ULL;
    __twr_v1118 = __twr_v1116 + __twr_v1117;
    __twr_v1119 = *(uint64_t*)(__twr_v1118);
    __twr_v1120 = *(uint64_t*)(__twr_v1116);
    __twr_v1121 = 1ULL;
    __twr_v1122 = __twr_v1120 - __twr_v1121;
    __twr_v1123 = __twr_v1119 + __twr_v1122;
    *(uint8_t*)(__twr_v1123) = __twr_v1115;
    __twr_v1124 = (uint64_t)(&LexFalseCount);
    __twr_v1125 = *(uint32_t*)(__twr_v1124);
    __twr_v1126 = __twr_v1125 - __twr_v1121;
    *(uint32_t*)(__twr_v1124) = __twr_v1126;
    __twr_l275:;
    __twr_l268:;
    _jkl_epilogue:;
}
void LexParseEnd() {
    uint64_t __twr_v1127;
    uint64_t __twr_v1128;
    uint64_t __twr_v1129;
    uint64_t __twr_v1130;
    uint64_t __twr_v1131;
    uint64_t __twr_v1132;
    uint64_t __twr_v1133;
    uint64_t __twr_v1134;
    uint64_t _mng_status1135;
    uint64_t __twr_v1136;
    uint64_t __twr_v1137;
    uint64_t __twr_v1138;
    uint64_t __twr_v1139;
    uint64_t __twr_v1140;
    __twr_v1127 = (uint64_t)(&LexIfStack);
    __twr_v1128 = *(uint64_t*)(__twr_v1127);
    if (__twr_v1128) { goto __twr_l278; } else { goto __twr_l279; }
    __twr_l279:;
    __twr_v1129 = (uint64_t)(&LexStreamError);
    __twr_v1130 = (uint64_t)(&"END with no matching IF");
    __twr_v1131 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1129)(__twr_v1130, __twr_v1131, __twr_v1131, __twr_v1131);
    __twr_l278:;
    __twr_v1132 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1133 = (uint64_t)(&LexIfStack);
    __twr_v1134 = ((uint64_t (*)(uint64_t))__twr_v1132)(__twr_v1133);
    _mng_status1135 = __twr_v1134;
    if (!(_mng_status1135)) { goto __twr_l281; } else { goto __twr_l282; }
    __twr_l282:;
    __twr_v1136 = 1ULL;
    if (_mng_status1135 != __twr_v1136) { goto __twr_l280; } else { goto __twr_l281; }
    __twr_l281:;
    __twr_v1137 = 1ULL;
    __twr_v1138 = (uint64_t)(&LexFalseCount);
    __twr_v1139 = *(uint32_t*)(__twr_v1138);
    __twr_v1140 = __twr_v1139 - __twr_v1137;
    *(uint32_t*)(__twr_v1138) = __twr_v1140;
    goto _jkl_epilogue;
    __twr_l280:;
    __twr_l277:;
    _jkl_epilogue:;
}
void LexParseError() {
    uint64_t __twr_v1141;
    uint64_t __twr_v1142;
    uint64_t _mng_buffer1143[11];
    uint64_t __twr_v1144;
    uint64_t __twr_v1145;
    uint64_t _mng_token1146[4];
    uint64_t __twr_v1147;
    uint64_t __twr_v1148;
    uint64_t __twr_v1149;
    uint64_t __twr_v1150;
    uint64_t __twr_v1151;
    uint64_t __twr_v1152;
    uint64_t __twr_v1153;
    uint64_t __twr_v1154;
    uint64_t __twr_v1155;
    uint64_t __twr_v1156;
    uint64_t __twr_v1157;
    uint64_t __twr_v1158;
    uint64_t __twr_v1159;
    uint64_t __twr_v1160;
    __twr_v1141 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1142 = (uint64_t)(&_mng_buffer1143);
    ((void (*)(uint64_t))__twr_v1141)(__twr_v1142);
    __twr_v1144 = (uint64_t)(&LexCollectValue);
    __twr_v1145 = (uint64_t)(&_mng_token1146);
    __twr_v1147 = (uint64_t)(&LexFalseCount);
    __twr_v1148 = *(uint32_t*)(__twr_v1147);
    __twr_v1149 = 0ULL;
    __twr_v1150 = (__twr_v1148 != __twr_v1149);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1144)(__twr_v1145, __twr_v1142, __twr_v1150);
    __twr_v1151 = *(uint32_t*)(__twr_v1147);
    if (!(__twr_v1151)) { goto __twr_l284; } else { goto __twr_l285; }
    __twr_l285:;
    __twr_v1152 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1153 = (uint64_t)(&_mng_buffer1143);
    ((void (*)(uint64_t))__twr_v1152)(__twr_v1153);
    goto _jkl_epilogue;
    __twr_l284:;
    __twr_v1154 = (uint64_t)(&LexTokenError);
    __twr_v1155 = (uint64_t)(&_mng_token1146);
    __twr_v1156 = (uint64_t)(&_mng_buffer1143);
    __twr_v1157 = 16ULL;
    __twr_v1158 = __twr_v1156 + __twr_v1157;
    __twr_v1159 = *(uint64_t*)(__twr_v1158);
    __twr_v1160 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1154)(__twr_v1155, __twr_v1159, __twr_v1160, __twr_v1160, __twr_v1160);
    __twr_l283:;
    _jkl_epilogue:;
}
void LexParsePrint() {
    uint64_t __twr_v1161;
    uint64_t __twr_v1162;
    uint64_t _mng_buffer1163[11];
    uint64_t __twr_v1164;
    uint64_t __twr_v1165;
    uint64_t _mng_token1166[4];
    uint64_t __twr_v1167;
    uint64_t __twr_v1168;
    uint64_t __twr_v1169;
    uint64_t __twr_v1170;
    uint64_t __twr_v1171;
    uint64_t __twr_v1172;
    uint64_t __twr_v1173;
    uint64_t __twr_v1174;
    uint64_t __twr_v1175;
    uint64_t __twr_v1176;
    uint64_t __twr_v1177;
    uint64_t __twr_v1178;
    uint64_t __twr_v1179;
    uint64_t __twr_v1180;
    __twr_v1161 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1162 = (uint64_t)(&_mng_buffer1163);
    ((void (*)(uint64_t))__twr_v1161)(__twr_v1162);
    __twr_v1164 = (uint64_t)(&LexCollectValue);
    __twr_v1165 = (uint64_t)(&_mng_token1166);
    __twr_v1167 = (uint64_t)(&LexFalseCount);
    __twr_v1168 = *(uint32_t*)(__twr_v1167);
    __twr_v1169 = 0ULL;
    __twr_v1170 = (__twr_v1168 != __twr_v1169);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1164)(__twr_v1165, __twr_v1162, __twr_v1170);
    __twr_v1171 = *(uint32_t*)(__twr_v1167);
    if (!(__twr_v1171)) { goto __twr_l287; } else { goto __twr_l288; }
    __twr_l288:;
    __twr_v1172 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1173 = (uint64_t)(&_mng_buffer1163);
    ((void (*)(uint64_t))__twr_v1172)(__twr_v1173);
    goto _jkl_epilogue;
    __twr_l287:;
    __twr_v1174 = (uint64_t)(&TlPrintString);
    __twr_v1175 = (uint64_t)(&_mng_buffer1163);
    __twr_v1176 = 16ULL;
    __twr_v1177 = __twr_v1175 + __twr_v1176;
    __twr_v1178 = *(uint64_t*)(__twr_v1177);
    ((void (*)(uint64_t))__twr_v1174)(__twr_v1178);
    __twr_v1179 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v1174)(__twr_v1179);
    __twr_v1180 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1180)(__twr_v1175);
    __twr_l286:;
    _jkl_epilogue:;
}
void LexOperatorEquals(uint64_t _mng_buffer1181, uint64_t _mng_ignore1182) {
    uint64_t __twr_v1183;
    uint64_t __twr_v1184;
    uint64_t _mng_token1185[4];
    uint64_t __twr_v1186;
    uint64_t _mng_num11187;
    uint64_t __twr_v1188;
    uint64_t _mng_num21189;
    uint64_t __twr_v1190;
    uint64_t __twr_v1191;
    uint64_t __twr_v1192;
    uint64_t __twr_v1193;
    uint64_t __twr_v1194;
    uint64_t __twr_v1195;
    __twr_v1183 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1184 = (uint64_t)(&_mng_token1185);
    __twr_v1186 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1183)(__twr_v1184, _mng_ignore1182);
    _mng_num11187 = __twr_v1186;
    __twr_v1188 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1183)(__twr_v1184, _mng_ignore1182);
    _mng_num21189 = __twr_v1188;
    __twr_v1190 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1190)();
    __twr_v1191 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1192 = (_mng_num11187 == _mng_num21189);
    __twr_v1193 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1191)(_mng_buffer1181, __twr_v1192, __twr_v1193);
    __twr_v1194 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1195 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1194)(_mng_buffer1181, __twr_v1195);
    __twr_l289:;
    _jkl_epilogue:;
}
void LexOperatorLteq(uint64_t _mng_buffer1196, uint64_t _mng_ignore1197) {
    uint64_t __twr_v1198;
    uint64_t __twr_v1199;
    uint64_t _mng_token1200[4];
    uint64_t __twr_v1201;
    uint64_t _mng_num11202;
    uint64_t __twr_v1203;
    uint64_t _mng_num21204;
    uint64_t __twr_v1205;
    uint64_t __twr_v1206;
    uint64_t __twr_v1207;
    uint64_t __twr_v1208;
    uint64_t __twr_v1209;
    uint64_t __twr_v1210;
    __twr_v1198 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1199 = (uint64_t)(&_mng_token1200);
    __twr_v1201 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1198)(__twr_v1199, _mng_ignore1197);
    _mng_num11202 = __twr_v1201;
    __twr_v1203 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1198)(__twr_v1199, _mng_ignore1197);
    _mng_num21204 = __twr_v1203;
    __twr_v1205 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1205)();
    __twr_v1206 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1207 = (_mng_num11202 <= _mng_num21204);
    __twr_v1208 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1206)(_mng_buffer1196, __twr_v1207, __twr_v1208);
    __twr_v1209 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1210 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1209)(_mng_buffer1196, __twr_v1210);
    __twr_l290:;
    _jkl_epilogue:;
}
void LexOperatorGteq(uint64_t _mng_buffer1211, uint64_t _mng_ignore1212) {
    uint64_t __twr_v1213;
    uint64_t __twr_v1214;
    uint64_t _mng_token1215[4];
    uint64_t __twr_v1216;
    uint64_t _mng_num11217;
    uint64_t __twr_v1218;
    uint64_t _mng_num21219;
    uint64_t __twr_v1220;
    uint64_t __twr_v1221;
    uint64_t __twr_v1222;
    uint64_t __twr_v1223;
    uint64_t __twr_v1224;
    uint64_t __twr_v1225;
    __twr_v1213 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1214 = (uint64_t)(&_mng_token1215);
    __twr_v1216 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1213)(__twr_v1214, _mng_ignore1212);
    _mng_num11217 = __twr_v1216;
    __twr_v1218 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1213)(__twr_v1214, _mng_ignore1212);
    _mng_num21219 = __twr_v1218;
    __twr_v1220 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1220)();
    __twr_v1221 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1222 = (_mng_num11217 >= _mng_num21219);
    __twr_v1223 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1221)(_mng_buffer1211, __twr_v1222, __twr_v1223);
    __twr_v1224 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1225 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1224)(_mng_buffer1211, __twr_v1225);
    __twr_l291:;
    _jkl_epilogue:;
}
void LexOperatorNeq(uint64_t _mng_buffer1226, uint64_t _mng_ignore1227) {
    uint64_t __twr_v1228;
    uint64_t __twr_v1229;
    uint64_t _mng_token1230[4];
    uint64_t __twr_v1231;
    uint64_t _mng_num11232;
    uint64_t __twr_v1233;
    uint64_t _mng_num21234;
    uint64_t __twr_v1235;
    uint64_t __twr_v1236;
    uint64_t __twr_v1237;
    uint64_t __twr_v1238;
    uint64_t __twr_v1239;
    uint64_t __twr_v1240;
    __twr_v1228 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1229 = (uint64_t)(&_mng_token1230);
    __twr_v1231 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1228)(__twr_v1229, _mng_ignore1227);
    _mng_num11232 = __twr_v1231;
    __twr_v1233 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1228)(__twr_v1229, _mng_ignore1227);
    _mng_num21234 = __twr_v1233;
    __twr_v1235 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1235)();
    __twr_v1236 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1237 = (_mng_num11232 != _mng_num21234);
    __twr_v1238 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1236)(_mng_buffer1226, __twr_v1237, __twr_v1238);
    __twr_v1239 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1240 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1239)(_mng_buffer1226, __twr_v1240);
    __twr_l292:;
    _jkl_epilogue:;
}
void LexOperatorLt(uint64_t _mng_buffer1241, uint64_t _mng_ignore1242) {
    uint64_t __twr_v1243;
    uint64_t __twr_v1244;
    uint64_t _mng_token1245[4];
    uint64_t __twr_v1246;
    uint64_t _mng_num11247;
    uint64_t __twr_v1248;
    uint64_t _mng_num21249;
    uint64_t __twr_v1250;
    uint64_t __twr_v1251;
    uint64_t __twr_v1252;
    uint64_t __twr_v1253;
    uint64_t __twr_v1254;
    uint64_t __twr_v1255;
    __twr_v1243 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1244 = (uint64_t)(&_mng_token1245);
    __twr_v1246 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1243)(__twr_v1244, _mng_ignore1242);
    _mng_num11247 = __twr_v1246;
    __twr_v1248 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1243)(__twr_v1244, _mng_ignore1242);
    _mng_num21249 = __twr_v1248;
    __twr_v1250 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1250)();
    __twr_v1251 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1252 = (_mng_num11247 < _mng_num21249);
    __twr_v1253 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1251)(_mng_buffer1241, __twr_v1252, __twr_v1253);
    __twr_v1254 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1255 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1254)(_mng_buffer1241, __twr_v1255);
    __twr_l293:;
    _jkl_epilogue:;
}
void LexOperatorGt(uint64_t _mng_buffer1256, uint64_t _mng_ignore1257) {
    uint64_t __twr_v1258;
    uint64_t __twr_v1259;
    uint64_t _mng_token1260[4];
    uint64_t __twr_v1261;
    uint64_t _mng_num11262;
    uint64_t __twr_v1263;
    uint64_t _mng_num21264;
    uint64_t __twr_v1265;
    uint64_t __twr_v1266;
    uint64_t __twr_v1267;
    uint64_t __twr_v1268;
    uint64_t __twr_v1269;
    uint64_t __twr_v1270;
    __twr_v1258 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1259 = (uint64_t)(&_mng_token1260);
    __twr_v1261 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1258)(__twr_v1259, _mng_ignore1257);
    _mng_num11262 = __twr_v1261;
    __twr_v1263 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1258)(__twr_v1259, _mng_ignore1257);
    _mng_num21264 = __twr_v1263;
    __twr_v1265 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1265)();
    __twr_v1266 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1267 = (_mng_num11262 > _mng_num21264);
    __twr_v1268 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1266)(_mng_buffer1256, __twr_v1267, __twr_v1268);
    __twr_v1269 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1270 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1269)(_mng_buffer1256, __twr_v1270);
    __twr_l294:;
    _jkl_epilogue:;
}
void LexOperatorAdd(uint64_t _mng_buffer1271, uint64_t _mng_ignore1272) {
    uint64_t __twr_v1273;
    uint64_t __twr_v1274;
    uint64_t _mng_token1275[4];
    uint64_t __twr_v1276;
    uint64_t _mng_num11277;
    uint64_t __twr_v1278;
    uint64_t _mng_num21279;
    uint64_t __twr_v1280;
    uint64_t __twr_v1281;
    uint64_t __twr_v1282;
    uint64_t __twr_v1283;
    uint64_t __twr_v1284;
    uint64_t __twr_v1285;
    __twr_v1273 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1274 = (uint64_t)(&_mng_token1275);
    __twr_v1276 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1273)(__twr_v1274, _mng_ignore1272);
    _mng_num11277 = __twr_v1276;
    __twr_v1278 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1273)(__twr_v1274, _mng_ignore1272);
    _mng_num21279 = __twr_v1278;
    __twr_v1280 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1280)();
    __twr_v1281 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1282 = _mng_num11277 + _mng_num21279;
    __twr_v1283 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1281)(_mng_buffer1271, __twr_v1282, __twr_v1283);
    __twr_v1284 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1285 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1284)(_mng_buffer1271, __twr_v1285);
    __twr_l295:;
    _jkl_epilogue:;
}
void LexOperatorSub(uint64_t _mng_buffer1286, uint64_t _mng_ignore1287) {
    uint64_t __twr_v1288;
    uint64_t __twr_v1289;
    uint64_t _mng_token1290[4];
    uint64_t __twr_v1291;
    uint64_t _mng_num11292;
    uint64_t __twr_v1293;
    uint64_t _mng_num21294;
    uint64_t __twr_v1295;
    uint64_t __twr_v1296;
    uint64_t __twr_v1297;
    uint64_t __twr_v1298;
    uint64_t __twr_v1299;
    uint64_t __twr_v1300;
    __twr_v1288 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1289 = (uint64_t)(&_mng_token1290);
    __twr_v1291 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1288)(__twr_v1289, _mng_ignore1287);
    _mng_num11292 = __twr_v1291;
    __twr_v1293 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1288)(__twr_v1289, _mng_ignore1287);
    _mng_num21294 = __twr_v1293;
    __twr_v1295 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1295)();
    __twr_v1296 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1297 = _mng_num11292 - _mng_num21294;
    __twr_v1298 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1296)(_mng_buffer1286, __twr_v1297, __twr_v1298);
    __twr_v1299 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1300 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1299)(_mng_buffer1286, __twr_v1300);
    __twr_l296:;
    _jkl_epilogue:;
}
void LexOperatorMul(uint64_t _mng_buffer1301, uint64_t _mng_ignore1302) {
    uint64_t __twr_v1303;
    uint64_t __twr_v1304;
    uint64_t _mng_token1305[4];
    uint64_t __twr_v1306;
    uint64_t _mng_num11307;
    uint64_t __twr_v1308;
    uint64_t _mng_num21309;
    uint64_t __twr_v1310;
    uint64_t __twr_v1311;
    uint64_t __twr_v1312;
    uint64_t __twr_v1313;
    uint64_t __twr_v1314;
    uint64_t __twr_v1315;
    __twr_v1303 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1304 = (uint64_t)(&_mng_token1305);
    __twr_v1306 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1303)(__twr_v1304, _mng_ignore1302);
    _mng_num11307 = __twr_v1306;
    __twr_v1308 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1303)(__twr_v1304, _mng_ignore1302);
    _mng_num21309 = __twr_v1308;
    __twr_v1310 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1310)();
    __twr_v1311 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1312 = _mng_num11307 * _mng_num21309;
    __twr_v1313 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1311)(_mng_buffer1301, __twr_v1312, __twr_v1313);
    __twr_v1314 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1315 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1314)(_mng_buffer1301, __twr_v1315);
    __twr_l297:;
    _jkl_epilogue:;
}
void LexOperatorDiv(uint64_t _mng_buffer1316, uint64_t _mng_ignore1317) {
    uint64_t __twr_v1318;
    uint64_t __twr_v1319;
    uint64_t _mng_token1320[4];
    uint64_t __twr_v1321;
    uint64_t _mng_num11322;
    uint64_t __twr_v1323;
    uint64_t _mng_num21324;
    uint64_t __twr_v1325;
    uint64_t __twr_v1326;
    uint64_t __twr_v1327;
    uint64_t __twr_v1328;
    uint64_t __twr_v1329;
    uint64_t __twr_v1330;
    __twr_v1318 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1319 = (uint64_t)(&_mng_token1320);
    __twr_v1321 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1318)(__twr_v1319, _mng_ignore1317);
    _mng_num11322 = __twr_v1321;
    __twr_v1323 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1318)(__twr_v1319, _mng_ignore1317);
    _mng_num21324 = __twr_v1323;
    __twr_v1325 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1325)();
    __twr_v1326 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1327 = _mng_num11322 / _mng_num21324;
    __twr_v1328 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1326)(_mng_buffer1316, __twr_v1327, __twr_v1328);
    __twr_v1329 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1330 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1329)(_mng_buffer1316, __twr_v1330);
    __twr_l298:;
    _jkl_epilogue:;
}
void LexOperatorLsh(uint64_t _mng_buffer1331, uint64_t _mng_ignore1332) {
    uint64_t __twr_v1333;
    uint64_t __twr_v1334;
    uint64_t _mng_token1335[4];
    uint64_t __twr_v1336;
    uint64_t _mng_num11337;
    uint64_t __twr_v1338;
    uint64_t _mng_num21339;
    uint64_t __twr_v1340;
    uint64_t __twr_v1341;
    uint64_t __twr_v1342;
    uint64_t __twr_v1343;
    uint64_t __twr_v1344;
    uint64_t __twr_v1345;
    __twr_v1333 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1334 = (uint64_t)(&_mng_token1335);
    __twr_v1336 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1333)(__twr_v1334, _mng_ignore1332);
    _mng_num11337 = __twr_v1336;
    __twr_v1338 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1333)(__twr_v1334, _mng_ignore1332);
    _mng_num21339 = __twr_v1338;
    __twr_v1340 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1340)();
    __twr_v1341 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1342 = _mng_num11337 << _mng_num21339;
    __twr_v1343 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1341)(_mng_buffer1331, __twr_v1342, __twr_v1343);
    __twr_v1344 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1345 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1344)(_mng_buffer1331, __twr_v1345);
    __twr_l299:;
    _jkl_epilogue:;
}
void LexOperatorRsh(uint64_t _mng_buffer1346, uint64_t _mng_ignore1347) {
    uint64_t __twr_v1348;
    uint64_t __twr_v1349;
    uint64_t _mng_token1350[4];
    uint64_t __twr_v1351;
    uint64_t _mng_num11352;
    uint64_t __twr_v1353;
    uint64_t _mng_num21354;
    uint64_t __twr_v1355;
    uint64_t __twr_v1356;
    uint64_t __twr_v1357;
    uint64_t __twr_v1358;
    uint64_t __twr_v1359;
    uint64_t __twr_v1360;
    __twr_v1348 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1349 = (uint64_t)(&_mng_token1350);
    __twr_v1351 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1348)(__twr_v1349, _mng_ignore1347);
    _mng_num11352 = __twr_v1351;
    __twr_v1353 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1348)(__twr_v1349, _mng_ignore1347);
    _mng_num21354 = __twr_v1353;
    __twr_v1355 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1355)();
    __twr_v1356 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1357 = _mng_num11352 >> _mng_num21354;
    __twr_v1358 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1356)(_mng_buffer1346, __twr_v1357, __twr_v1358);
    __twr_v1359 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1360 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1359)(_mng_buffer1346, __twr_v1360);
    __twr_l300:;
    _jkl_epilogue:;
}
void LexOperatorStrcat(uint64_t _mng_buffer1361, uint64_t _mng_ignore1362) {
    uint64_t __twr_v1363;
    uint64_t __twr_v1364;
    uint64_t _mng_token1365[4];
    uint64_t __twr_v1366;
    uint64_t __twr_v1367;
    uint64_t __twr_v1368;
    __twr_v1363 = (uint64_t)(&LexCollectValue);
    __twr_v1364 = (uint64_t)(&_mng_token1365);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1363)(__twr_v1364, _mng_buffer1361, _mng_ignore1362);
    __twr_v1366 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1367 = ((uint64_t (*)(uint64_t))__twr_v1366)(_mng_buffer1361);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1363)(__twr_v1364, _mng_buffer1361, _mng_ignore1362);
    __twr_v1368 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1368)();
    __twr_l301:;
    _jkl_epilogue:;
}
void LexOperatorStrcmp(uint64_t _mng_buffer1369, uint64_t _mng_ignore1370) {
    uint64_t __twr_v1371;
    uint64_t __twr_v1372;
    uint64_t _mng_str11373[11];
    uint64_t __twr_v1374;
    uint64_t _mng_str21375[11];
    uint64_t __twr_v1376;
    uint64_t __twr_v1377;
    uint64_t _mng_token1378[4];
    uint64_t __twr_v1379;
    uint64_t __twr_v1380;
    uint64_t __twr_v1381;
    uint64_t __twr_v1382;
    uint64_t __twr_v1383;
    uint64_t __twr_v1384;
    uint64_t __twr_v1385;
    uint64_t __twr_v1386;
    uint64_t __twr_v1387;
    uint64_t __twr_v1388;
    uint64_t __twr_v1389;
    uint64_t __twr_v1390;
    uint64_t __twr_v1391;
    uint64_t __twr_v1392;
    __twr_v1371 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1372 = (uint64_t)(&_mng_str11373);
    ((void (*)(uint64_t))__twr_v1371)(__twr_v1372);
    __twr_v1374 = (uint64_t)(&_mng_str21375);
    ((void (*)(uint64_t))__twr_v1371)(__twr_v1374);
    __twr_v1376 = (uint64_t)(&LexCollectValue);
    __twr_v1377 = (uint64_t)(&_mng_token1378);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1376)(__twr_v1377, __twr_v1372, _mng_ignore1370);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1376)(__twr_v1377, __twr_v1374, _mng_ignore1370);
    __twr_v1379 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1379)(__twr_v1372);
    ((void (*)(uint64_t))__twr_v1379)(__twr_v1374);
    __twr_v1380 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1380)();
    __twr_v1381 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1382 = (uint64_t)(&TlCompareString);
    __twr_v1383 = 16ULL;
    __twr_v1384 = __twr_v1372 + __twr_v1383;
    __twr_v1385 = *(uint64_t*)(__twr_v1384);
    __twr_v1386 = __twr_v1374 + __twr_v1383;
    __twr_v1387 = *(uint64_t*)(__twr_v1386);
    __twr_v1388 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1382)(__twr_v1385, __twr_v1387);
    __twr_v1389 = 0ULL;
    __twr_v1390 = (__twr_v1388 == __twr_v1389);
    __twr_v1391 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1381)(_mng_buffer1369, __twr_v1390, __twr_v1391);
    __twr_v1392 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1392)(_mng_buffer1369, __twr_v1389);
    __twr_l302:;
    _jkl_epilogue:;
}
void LexOperatorNot(uint64_t _mng_buffer1393, uint64_t _mng_ignore1394) {
    uint64_t __twr_v1395;
    uint64_t __twr_v1396;
    uint64_t _mng_token1397[4];
    uint64_t __twr_v1398;
    uint64_t _mng_num11399;
    uint64_t __twr_v1400;
    uint64_t __twr_v1401;
    uint64_t __twr_v1402;
    uint64_t __twr_v1403;
    uint64_t __twr_v1404;
    uint64_t __twr_v1405;
    __twr_v1395 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1396 = (uint64_t)(&_mng_token1397);
    __twr_v1398 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1395)(__twr_v1396, _mng_ignore1394);
    _mng_num11399 = __twr_v1398;
    __twr_v1400 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1400)();
    __twr_v1401 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1402 = !_mng_num11399;
    __twr_v1403 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1401)(_mng_buffer1393, __twr_v1402, __twr_v1403);
    __twr_v1404 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1405 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1404)(_mng_buffer1393, __twr_v1405);
    __twr_l303:;
    _jkl_epilogue:;
}
void LexOperatorOr(uint64_t _mng_buffer1406, uint64_t _mng_ignore1407) {
    uint64_t __twr_v1408;
    uint64_t __twr_v1409;
    uint64_t _mng_token1410[4];
    uint64_t __twr_v1411;
    uint64_t _mng_num11412;
    uint64_t __twr_v1413;
    uint64_t _mng_num21414;
    uint64_t __twr_v1415;
    uint64_t __twr_v1416;
    uint64_t __twr_v1417;
    uint64_t __twr_v1418;
    uint64_t __twr_v1419;
    uint64_t __twr_v1420;
    __twr_v1408 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1409 = (uint64_t)(&_mng_token1410);
    __twr_v1411 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1408)(__twr_v1409, _mng_ignore1407);
    _mng_num11412 = __twr_v1411;
    __twr_v1413 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1408)(__twr_v1409, _mng_ignore1407);
    _mng_num21414 = __twr_v1413;
    __twr_v1415 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1415)();
    __twr_v1416 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (_mng_num11412) { goto __twr_l306; } else { goto __twr_l305; }
    __twr_l305:;
    if (!(_mng_num21414)) { goto __twr_l307; } else { goto __twr_l306; }
    __twr_l306:;
    __twr_v1417 = 1ULL;
    goto __twr_l308;
    __twr_l307:;
    __twr_v1417 = 0ULL;
    __twr_l308:;
    __twr_v1418 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1416)(_mng_buffer1406, __twr_v1417, __twr_v1418);
    __twr_v1419 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1420 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1419)(_mng_buffer1406, __twr_v1420);
    __twr_l304:;
    _jkl_epilogue:;
}
void LexOperatorAnd(uint64_t _mng_buffer1421, uint64_t _mng_ignore1422) {
    uint64_t __twr_v1423;
    uint64_t __twr_v1424;
    uint64_t _mng_token1425[4];
    uint64_t __twr_v1426;
    uint64_t _mng_num11427;
    uint64_t __twr_v1428;
    uint64_t _mng_num21429;
    uint64_t __twr_v1430;
    uint64_t __twr_v1431;
    uint64_t __twr_v1432;
    uint64_t __twr_v1433;
    uint64_t __twr_v1434;
    uint64_t __twr_v1435;
    __twr_v1423 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1424 = (uint64_t)(&_mng_token1425);
    __twr_v1426 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1423)(__twr_v1424, _mng_ignore1422);
    _mng_num11427 = __twr_v1426;
    __twr_v1428 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1423)(__twr_v1424, _mng_ignore1422);
    _mng_num21429 = __twr_v1428;
    __twr_v1430 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1430)();
    __twr_v1431 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (!(_mng_num11427)) { goto __twr_l312; } else { goto __twr_l310; }
    __twr_l310:;
    if (!(_mng_num21429)) { goto __twr_l312; } else { goto __twr_l311; }
    __twr_l311:;
    __twr_v1432 = 1ULL;
    goto __twr_l313;
    __twr_l312:;
    __twr_v1432 = 0ULL;
    __twr_l313:;
    __twr_v1433 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1431)(_mng_buffer1421, __twr_v1432, __twr_v1433);
    __twr_v1434 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1435 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1434)(_mng_buffer1421, __twr_v1435);
    __twr_l309:;
    _jkl_epilogue:;
}
void LexOperatorDefined(uint64_t _mng_buffer1436, uint64_t _mng_ignore1437) {
    uint64_t __twr_v1438;
    uint64_t __twr_v1439;
    uint64_t _mng_token1440[4];
    uint64_t __twr_v1441;
    uint64_t _mng_tokbuffer1442[8];
    uint64_t __twr_v1443;
    uint64_t __twr_v1444;
    uint64_t __twr_v1445;
    uint64_t __twr_v1446;
    uint64_t __twr_v1447;
    uint64_t __twr_v1448;
    uint64_t _mng_macro1449;
    uint64_t __twr_v1450;
    uint64_t __twr_v1451;
    uint64_t __twr_v1452;
    uint64_t __twr_v1453;
    __twr_v1438 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1439 = (uint64_t)(&_mng_token1440);
    __twr_v1441 = (uint64_t)(&_mng_tokbuffer1442);
    __twr_v1443 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1438)(__twr_v1439, __twr_v1441);
    __twr_v1444 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1444)();
    __twr_v1445 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1446 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1447 = *(uint64_t*)(__twr_v1446);
    __twr_v1448 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1445)(__twr_v1447, __twr_v1441);
    _mng_macro1449 = __twr_v1448;
    __twr_v1450 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1451 = (_mng_macro1449 != __twr_v1443);
    __twr_v1452 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1450)(_mng_buffer1436, __twr_v1451, __twr_v1452);
    __twr_v1453 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1453)(_mng_buffer1436, __twr_v1443);
    __twr_l314:;
    _jkl_epilogue:;
}
void LexOperatorBitNot(uint64_t _mng_buffer1454, uint64_t _mng_ignore1455) {
    uint64_t __twr_v1456;
    uint64_t __twr_v1457;
    uint64_t _mng_token1458[4];
    uint64_t __twr_v1459;
    uint64_t _mng_num11460;
    uint64_t __twr_v1461;
    uint64_t __twr_v1462;
    uint64_t __twr_v1463;
    uint64_t __twr_v1464;
    uint64_t __twr_v1465;
    uint64_t __twr_v1466;
    __twr_v1456 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1457 = (uint64_t)(&_mng_token1458);
    __twr_v1459 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1456)(__twr_v1457, _mng_ignore1455);
    _mng_num11460 = __twr_v1459;
    __twr_v1461 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1461)();
    __twr_v1462 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1463 = ~_mng_num11460;
    __twr_v1464 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1462)(_mng_buffer1454, __twr_v1463, __twr_v1464);
    __twr_v1465 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1466 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1465)(_mng_buffer1454, __twr_v1466);
    __twr_l315:;
    _jkl_epilogue:;
}
void LexOperatorBitOr(uint64_t _mng_buffer1467, uint64_t _mng_ignore1468) {
    uint64_t __twr_v1469;
    uint64_t __twr_v1470;
    uint64_t _mng_token1471[4];
    uint64_t __twr_v1472;
    uint64_t _mng_num11473;
    uint64_t __twr_v1474;
    uint64_t _mng_num21475;
    uint64_t __twr_v1476;
    uint64_t __twr_v1477;
    uint64_t __twr_v1478;
    uint64_t __twr_v1479;
    uint64_t __twr_v1480;
    uint64_t __twr_v1481;
    __twr_v1469 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1470 = (uint64_t)(&_mng_token1471);
    __twr_v1472 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1469)(__twr_v1470, _mng_ignore1468);
    _mng_num11473 = __twr_v1472;
    __twr_v1474 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1469)(__twr_v1470, _mng_ignore1468);
    _mng_num21475 = __twr_v1474;
    __twr_v1476 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1476)();
    __twr_v1477 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1478 = _mng_num11473 | _mng_num21475;
    __twr_v1479 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1477)(_mng_buffer1467, __twr_v1478, __twr_v1479);
    __twr_v1480 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1481 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1480)(_mng_buffer1467, __twr_v1481);
    __twr_l316:;
    _jkl_epilogue:;
}
void LexOperatorBitXor(uint64_t _mng_buffer1482, uint64_t _mng_ignore1483) {
    uint64_t __twr_v1484;
    uint64_t __twr_v1485;
    uint64_t _mng_token1486[4];
    uint64_t __twr_v1487;
    uint64_t _mng_num11488;
    uint64_t __twr_v1489;
    uint64_t _mng_num21490;
    uint64_t __twr_v1491;
    uint64_t __twr_v1492;
    uint64_t __twr_v1493;
    uint64_t __twr_v1494;
    uint64_t __twr_v1495;
    uint64_t __twr_v1496;
    __twr_v1484 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1485 = (uint64_t)(&_mng_token1486);
    __twr_v1487 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1484)(__twr_v1485, _mng_ignore1483);
    _mng_num11488 = __twr_v1487;
    __twr_v1489 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1484)(__twr_v1485, _mng_ignore1483);
    _mng_num21490 = __twr_v1489;
    __twr_v1491 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1491)();
    __twr_v1492 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1493 = _mng_num11488 ^ _mng_num21490;
    __twr_v1494 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1492)(_mng_buffer1482, __twr_v1493, __twr_v1494);
    __twr_v1495 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1496 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1495)(_mng_buffer1482, __twr_v1496);
    __twr_l317:;
    _jkl_epilogue:;
}
void LexOperatorBitAnd(uint64_t _mng_buffer1497, uint64_t _mng_ignore1498) {
    uint64_t __twr_v1499;
    uint64_t __twr_v1500;
    uint64_t _mng_token1501[4];
    uint64_t __twr_v1502;
    uint64_t _mng_num11503;
    uint64_t __twr_v1504;
    uint64_t _mng_num21505;
    uint64_t __twr_v1506;
    uint64_t __twr_v1507;
    uint64_t __twr_v1508;
    uint64_t __twr_v1509;
    uint64_t __twr_v1510;
    uint64_t __twr_v1511;
    __twr_v1499 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1500 = (uint64_t)(&_mng_token1501);
    __twr_v1502 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1499)(__twr_v1500, _mng_ignore1498);
    _mng_num11503 = __twr_v1502;
    __twr_v1504 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1499)(__twr_v1500, _mng_ignore1498);
    _mng_num21505 = __twr_v1504;
    __twr_v1506 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1506)();
    __twr_v1507 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1508 = _mng_num11503 & _mng_num21505;
    __twr_v1509 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1507)(_mng_buffer1497, __twr_v1508, __twr_v1509);
    __twr_v1510 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1511 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1510)(_mng_buffer1497, __twr_v1511);
    __twr_l318:;
    _jkl_epilogue:;
}
void LexParseDirective() {
    uint64_t __twr_v1512;
    uint64_t __twr_v1513;
    uint64_t __twr_v1514;
    uint64_t _mng_buffer1515[8];
    uint64_t __twr_v1516;
    uint64_t __twr_v1517;
    uint64_t __twr_v1518;
    uint64_t _mng_directive1519;
    uint64_t __twr_v1520;
    uint64_t __twr_v1521;
    uint64_t __twr_v1522;
    uint64_t __twr_v1523;
    uint64_t __twr_v1524;
    uint64_t __twr_v1525;
    uint64_t __twr_v1526;
    __twr_v1512 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1513 = (uint64_t)(&LexDirectiveToken);
    __twr_v1514 = (uint64_t)(&_mng_buffer1515);
    ((void (*)(uint64_t, uint64_t))__twr_v1512)(__twr_v1513, __twr_v1514);
    __twr_v1516 = (uint64_t)(&TlLookupHashTable);
    __twr_v1517 = (uint64_t)(&LexDirectiveHashTable);
    __twr_v1518 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1516)(__twr_v1517, __twr_v1514);
    _mng_directive1519 = __twr_v1518;
    if (_mng_directive1519) { goto __twr_l320; } else { goto __twr_l321; }
    __twr_l321:;
    __twr_v1520 = (uint64_t)(&LexTokenError);
    __twr_v1521 = (uint64_t)(&LexDirectiveToken);
    __twr_v1522 = (uint64_t)(&"Unknown directive");
    __twr_v1523 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1520)(__twr_v1521, __twr_v1522, __twr_v1523, __twr_v1523, __twr_v1523);
    __twr_l320:;
    __twr_v1524 = 48ULL;
    __twr_v1525 = _mng_directive1519 + __twr_v1524;
    __twr_v1526 = *(uint64_t*)(__twr_v1525);
    ((void (*)())__twr_v1526)();
    __twr_l319:;
    _jkl_epilogue:;
}
void LexInitializePreprocessor() {
    uint64_t __twr_v1527;
    uint64_t __twr_v1528;
    uint64_t __twr_v1529;
    uint64_t __twr_v1530;
    uint64_t __twr_v1531;
    uint64_t __twr_v1532;
    uint64_t __twr_v1533;
    uint64_t __twr_v1534;
    uint64_t __twr_v1535;
    uint64_t __twr_v1536;
    uint64_t __twr_v1537;
    uint64_t __twr_v1538;
    uint64_t __twr_v1539;
    uint64_t __twr_v1540;
    uint64_t __twr_v1541;
    uint64_t __twr_v1542;
    uint64_t __twr_v1543;
    uint64_t __twr_v1544;
    uint64_t __twr_v1545;
    uint64_t __twr_v1546;
    uint64_t __twr_v1547;
    uint64_t __twr_v1548;
    uint64_t __twr_v1549;
    uint64_t __twr_v1550;
    uint64_t __twr_v1551;
    uint64_t __twr_v1552;
    uint64_t __twr_v1553;
    uint64_t __twr_v1554;
    uint64_t __twr_v1555;
    uint64_t __twr_v1556;
    uint64_t __twr_v1557;
    uint64_t __twr_v1558;
    uint64_t __twr_v1559;
    uint64_t __twr_v1560;
    uint64_t __twr_v1561;
    uint64_t __twr_v1562;
    uint64_t __twr_v1563;
    uint64_t __twr_v1564;
    uint64_t __twr_v1565;
    uint64_t __twr_v1566;
    uint64_t __twr_v1567;
    uint64_t __twr_v1568;
    uint64_t __twr_v1569;
    uint64_t __twr_v1570;
    uint64_t __twr_v1571;
    uint64_t __twr_v1572;
    uint64_t __twr_v1573;
    uint64_t __twr_v1574;
    uint64_t __twr_v1575;
    uint64_t __twr_v1576;
    uint64_t __twr_v1577;
    uint64_t __twr_v1578;
    uint64_t __twr_v1579;
    uint64_t __twr_v1580;
    uint64_t __twr_v1581;
    uint64_t __twr_v1582;
    uint64_t __twr_v1583;
    uint64_t __twr_v1584;
    uint64_t __twr_v1585;
    uint64_t __twr_v1586;
    uint64_t __twr_v1587;
    uint64_t __twr_v1588;
    uint64_t __twr_v1589;
    uint64_t __twr_v1590;
    uint64_t __twr_v1591;
    uint64_t __twr_v1592;
    uint64_t __twr_v1593;
    uint64_t __twr_v1594;
    uint64_t __twr_v1595;
    uint64_t __twr_v1596;
    uint64_t __twr_v1597;
    uint64_t __twr_v1598;
    uint64_t __twr_v1599;
    uint64_t __twr_v1600;
    uint64_t __twr_v1601;
    uint64_t __twr_v1602;
    uint64_t __twr_v1603;
    uint64_t __twr_v1604;
    __twr_v1527 = (uint64_t)(&TlInitializeHashTable);
    __twr_v1528 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t))__twr_v1527)(__twr_v1528);
    __twr_v1529 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t))__twr_v1527)(__twr_v1529);
    __twr_v1530 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1531 = (uint64_t)(&LexIfStack);
    ((void (*)(uint64_t))__twr_v1530)(__twr_v1531);
    __twr_v1532 = (uint64_t)(&LexCreateMacroTable);
    __twr_v1533 = 0ULL;
    __twr_v1534 = ((uint64_t (*)(uint64_t))__twr_v1532)(__twr_v1533);
    __twr_v1535 = (uint64_t)(&LexRootMacroScope);
    *(uint64_t*)(__twr_v1535) = __twr_v1534;
    __twr_v1536 = *(uint64_t*)(__twr_v1535);
    __twr_v1537 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v1537) = __twr_v1536;
    __twr_v1538 = (uint64_t)(&TlInitializeZone);
    __twr_v1539 = (uint64_t)(&LexMacroZone);
    __twr_v1540 = 250ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1538)(__twr_v1539, __twr_v1540);
    __twr_v1541 = (uint64_t)(&LexInsertDirective);
    __twr_v1542 = (uint64_t)(&"INCLUDE");
    __twr_v1543 = (uint64_t)(&LexParseInclude);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1542, __twr_v1543);
    __twr_v1544 = (uint64_t)(&"DEPEND");
    __twr_v1545 = (uint64_t)(&LexParseDepend);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1544, __twr_v1545);
    __twr_v1546 = (uint64_t)(&"DEFINE");
    __twr_v1547 = (uint64_t)(&LexParseDefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1546, __twr_v1547);
    __twr_v1548 = (uint64_t)(&"MACRO");
    __twr_v1549 = (uint64_t)(&LexParseMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1548, __twr_v1549);
    __twr_v1550 = (uint64_t)(&"IF");
    __twr_v1551 = (uint64_t)(&LexParseIf);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1550, __twr_v1551);
    __twr_v1552 = (uint64_t)(&"ELSE");
    __twr_v1553 = (uint64_t)(&LexParseElse);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1552, __twr_v1553);
    __twr_v1554 = (uint64_t)(&"ELSEIF");
    __twr_v1555 = (uint64_t)(&LexParseElseif);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1554, __twr_v1555);
    __twr_v1556 = (uint64_t)(&"END");
    __twr_v1557 = (uint64_t)(&LexParseEnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1556, __twr_v1557);
    __twr_v1558 = (uint64_t)(&"UNDEFINE");
    __twr_v1559 = (uint64_t)(&LexParseUndefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1558, __twr_v1559);
    __twr_v1560 = (uint64_t)(&"ERROR");
    __twr_v1561 = (uint64_t)(&LexParseError);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1560, __twr_v1561);
    __twr_v1562 = (uint64_t)(&"PRINT");
    __twr_v1563 = (uint64_t)(&LexParsePrint);
    ((void (*)(uint64_t, uint64_t))__twr_v1541)(__twr_v1562, __twr_v1563);
    __twr_v1564 = (uint64_t)(&LexInsertOperator);
    __twr_v1565 = (uint64_t)(&"==");
    __twr_v1566 = (uint64_t)(&LexOperatorEquals);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1565, __twr_v1566);
    __twr_v1567 = (uint64_t)(&"<=");
    __twr_v1568 = (uint64_t)(&LexOperatorLteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1567, __twr_v1568);
    __twr_v1569 = (uint64_t)(&">=");
    __twr_v1570 = (uint64_t)(&LexOperatorGteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1569, __twr_v1570);
    __twr_v1571 = (uint64_t)(&"!=");
    __twr_v1572 = (uint64_t)(&LexOperatorNeq);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1571, __twr_v1572);
    __twr_v1573 = (uint64_t)(&"+");
    __twr_v1574 = (uint64_t)(&LexOperatorAdd);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1573, __twr_v1574);
    __twr_v1575 = (uint64_t)(&"-");
    __twr_v1576 = (uint64_t)(&LexOperatorSub);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1575, __twr_v1576);
    __twr_v1577 = (uint64_t)(&"*");
    __twr_v1578 = (uint64_t)(&LexOperatorMul);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1577, __twr_v1578);
    __twr_v1579 = (uint64_t)(&"/");
    __twr_v1580 = (uint64_t)(&LexOperatorDiv);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1579, __twr_v1580);
    __twr_v1581 = (uint64_t)(&"<<");
    __twr_v1582 = (uint64_t)(&LexOperatorLsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1581, __twr_v1582);
    __twr_v1583 = (uint64_t)(&">>");
    __twr_v1584 = (uint64_t)(&LexOperatorRsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1583, __twr_v1584);
    __twr_v1585 = (uint64_t)(&"STRCAT");
    __twr_v1586 = (uint64_t)(&LexOperatorStrcat);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1585, __twr_v1586);
    __twr_v1587 = (uint64_t)(&"STRCMP");
    __twr_v1588 = (uint64_t)(&LexOperatorStrcmp);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1587, __twr_v1588);
    __twr_v1589 = (uint64_t)(&"NOT");
    __twr_v1590 = (uint64_t)(&LexOperatorNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1589, __twr_v1590);
    __twr_v1591 = (uint64_t)(&"OR");
    __twr_v1592 = (uint64_t)(&LexOperatorOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1591, __twr_v1592);
    __twr_v1593 = (uint64_t)(&"AND");
    __twr_v1594 = (uint64_t)(&LexOperatorAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1593, __twr_v1594);
    __twr_v1595 = (uint64_t)(&"DEFINED");
    __twr_v1596 = (uint64_t)(&LexOperatorDefined);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1595, __twr_v1596);
    __twr_v1597 = (uint64_t)(&"~");
    __twr_v1598 = (uint64_t)(&LexOperatorBitNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1597, __twr_v1598);
    __twr_v1599 = (uint64_t)(&"|");
    __twr_v1600 = (uint64_t)(&LexOperatorBitOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1599, __twr_v1600);
    __twr_v1601 = (uint64_t)(&"$");
    __twr_v1602 = (uint64_t)(&LexOperatorBitXor);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1601, __twr_v1602);
    __twr_v1603 = (uint64_t)(&"&");
    __twr_v1604 = (uint64_t)(&LexOperatorBitAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(__twr_v1603, __twr_v1604);
    __twr_l322:;
    _jkl_epilogue:;
}

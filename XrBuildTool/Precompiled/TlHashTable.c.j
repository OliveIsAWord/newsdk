#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlIterateDirectory(uint64_t _mng_path88, uint64_t _mng_callback89, uint64_t _mng_context90);
extern void TlInitializeZone(uint64_t _mng_zone91, uint64_t _mng_blocksize92);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone93);
extern void TlFreeToZone(uint64_t _mng_zone94, uint64_t _mng_block95);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant96);
extern void TlPunchValue(uint64_t _mng_ptr97, uint64_t _mng_value98, uint64_t _mng_bytes99);
void TlInitializeHashTable(uint64_t _mng_hashtable100) {
    uint64_t _mng_listhead101;
    uint64_t __twr_v102;
    uint64_t __twr_v103;
    uint64_t _mng_i104;
    uint64_t __twr_v105;
    uint64_t __twr_v106;
    uint64_t __twr_v107;
    uint64_t __twr_v108;
    uint64_t __twr_v109;
    uint64_t _mng_listhead110;
    uint64_t __twr_v111;
    uint64_t __twr_v112;
    uint64_t __twr_v113;
    uint64_t __twr_v114;
    uint64_t __twr_v115;
    _mng_listhead101 = _mng_hashtable100;
    __twr_v102 = 8ULL;
    __twr_v103 = _mng_listhead101 + __twr_v102;
    *(uint64_t*)(__twr_v103) = _mng_listhead101;
    *(uint64_t*)(_mng_listhead101) = _mng_listhead101;
    _mng_i104 = 0ULL;
    __twr_l2:;
    __twr_v105 = 16ULL;
    __twr_v106 = _mng_hashtable100 + __twr_v105;
    __twr_v107 = 4ULL;
    __twr_v108 = _mng_i104 << __twr_v107;
    __twr_v109 = __twr_v106 + __twr_v108;
    _mng_listhead110 = __twr_v109;
    __twr_v111 = 8ULL;
    __twr_v112 = _mng_listhead110 + __twr_v111;
    *(uint64_t*)(__twr_v112) = _mng_listhead110;
    *(uint64_t*)(_mng_listhead110) = _mng_listhead110;
    __twr_v113 = 1ULL;
    __twr_v114 = _mng_i104 + __twr_v113;
    _mng_i104 = __twr_v114;
    __twr_l4:;
    __twr_v115 = 97ULL;
    if (_mng_i104 < __twr_v115) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable116) {
    uint64_t _mng_i117;
    uint64_t _mng_entries118;
    uint64_t __twr_v119;
    uint64_t __twr_v120;
    uint64_t __twr_v121;
    uint64_t __twr_v122;
    uint64_t __twr_v123;
    uint64_t _mng_head124;
    uint64_t __twr_v125;
    uint64_t _mng_listentry126;
    uint64_t __twr_v127;
    uint64_t __twr_v128;
    uint64_t __twr_v129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t __twr_v133;
    uint64_t __twr_v134;
    uint64_t __twr_v135;
    uint64_t __twr_v136;
    _mng_i117 = 0ULL;
    __twr_l6:;
    _mng_entries118 = 0ULL;
    __twr_v119 = 16ULL;
    __twr_v120 = _mng_hashtable116 + __twr_v119;
    __twr_v121 = 4ULL;
    __twr_v122 = _mng_i117 << __twr_v121;
    __twr_v123 = __twr_v120 + __twr_v122;
    _mng_head124 = __twr_v123;
    __twr_v125 = *(uint64_t*)(_mng_head124);
    _mng_listentry126 = __twr_v125;
    if (_mng_listentry126 == _mng_head124) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v127 = 1ULL;
    __twr_v128 = _mng_entries118 + __twr_v127;
    _mng_entries118 = __twr_v128;
    __twr_v129 = *(uint64_t*)(_mng_listentry126);
    _mng_listentry126 = __twr_v129;
    __twr_l11:;
    if (_mng_listentry126 != _mng_head124) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (!(_mng_entries118)) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v130 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v130)(_mng_i117);
    __twr_v131 = (uint64_t)(&TlPrintString);
    __twr_v132 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v131)(__twr_v132);
    ((void (*)(uint64_t))__twr_v130)(_mng_entries118);
    __twr_v133 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v131)(__twr_v133);
    __twr_l12:;
    __twr_v134 = 1ULL;
    __twr_v135 = _mng_i117 + __twr_v134;
    _mng_i117 = __twr_v135;
    __twr_l8:;
    __twr_v136 = 97ULL;
    if (_mng_i117 < __twr_v136) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_l5:;
    _jkl_epilogue:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable137, uint64_t _mng_entry138, uint64_t _mng_key139, uint64_t _mng_hash140) {
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t _mng_listhead150;
    uint64_t _mng_listentry151;
    uint64_t __twr_v152;
    uint64_t _mng_first153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t _mng_listhead157;
    uint64_t __twr_v158;
    uint64_t _mng_listentry159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t _mng_last162;
    uint64_t __twr_v163;
    __twr_v141 = 32ULL;
    __twr_v142 = _mng_entry138 + __twr_v141;
    *(uint64_t*)(__twr_v142) = _mng_hashtable137;
    __twr_v143 = 40ULL;
    __twr_v144 = _mng_entry138 + __twr_v143;
    *(uint64_t*)(__twr_v144) = _mng_key139;
    __twr_v145 = 16ULL;
    __twr_v146 = _mng_hashtable137 + __twr_v145;
    __twr_v147 = 4ULL;
    __twr_v148 = _mng_hash140 << __twr_v147;
    __twr_v149 = __twr_v146 + __twr_v148;
    _mng_listhead150 = __twr_v149;
    _mng_listentry151 = _mng_entry138;
    __twr_v152 = *(uint64_t*)(_mng_listhead150);
    _mng_first153 = __twr_v152;
    *(uint64_t*)(_mng_listentry151) = _mng_first153;
    __twr_v154 = 8ULL;
    __twr_v155 = _mng_listentry151 + __twr_v154;
    *(uint64_t*)(__twr_v155) = _mng_listhead150;
    __twr_v156 = _mng_first153 + __twr_v154;
    *(uint64_t*)(__twr_v156) = _mng_entry138;
    *(uint64_t*)(_mng_listhead150) = _mng_entry138;
    _mng_listhead157 = _mng_hashtable137;
    __twr_v158 = _mng_entry138 + __twr_v145;
    _mng_listentry159 = __twr_v158;
    __twr_v160 = _mng_listhead157 + __twr_v154;
    __twr_v161 = *(uint64_t*)(__twr_v160);
    _mng_last162 = __twr_v161;
    __twr_v163 = _mng_listentry159 + __twr_v154;
    *(uint64_t*)(__twr_v163) = _mng_last162;
    *(uint64_t*)(_mng_listentry159) = _mng_listhead157;
    *(uint64_t*)(_mng_last162) = _mng_listentry159;
    *(uint64_t*)(__twr_v160) = _mng_listentry159;
    __twr_l14:;
    _jkl_epilogue:;
}
void TlInsertHashTable(uint64_t _mng_hashtable164, uint64_t _mng_entry165, uint64_t _mng_key166) {
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t _mng_hash169;
    uint64_t __twr_v170;
    __twr_v167 = (uint64_t)(&TlHashString);
    __twr_v168 = ((uint64_t (*)(uint64_t))__twr_v167)(_mng_key166);
    _mng_hash169 = __twr_v168;
    __twr_v170 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v170)(_mng_hashtable164, _mng_entry165, _mng_key166, _mng_hash169);
    __twr_l15:;
    _jkl_epilogue:;
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable171, uint64_t _mng_entrysize172, uint64_t _mng_key173, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t _mng_hash176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t _mng_head182;
    uint64_t __twr_v183;
    uint64_t _mng_listentry184;
    uint64_t _mng_entry185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t _mng_created191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_status195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    __twr_v174 = (uint64_t)(&TlHashString);
    __twr_v175 = ((uint64_t (*)(uint64_t))__twr_v174)(_mng_key173);
    _mng_hash176 = __twr_v175;
    __twr_v177 = 16ULL;
    __twr_v178 = _mng_hashtable171 + __twr_v177;
    __twr_v179 = 4ULL;
    __twr_v180 = _mng_hash176 << __twr_v179;
    __twr_v181 = __twr_v178 + __twr_v180;
    _mng_head182 = __twr_v181;
    __twr_v183 = *(uint64_t*)(_mng_head182);
    _mng_listentry184 = __twr_v183;
    if (_mng_listentry184 == _mng_head182) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    _mng_entry185 = _mng_listentry184;
    __twr_v186 = (uint64_t)(&TlCompareString);
    __twr_v187 = 40ULL;
    __twr_v188 = _mng_entry185 + __twr_v187;
    __twr_v189 = *(uint64_t*)(__twr_v188);
    __twr_v190 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v186)(_mng_key173, __twr_v189);
    if (__twr_v190) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    _mng_created191 = 0ULL;
    _jkl_retv = _mng_entry185;
    goto _jkl_epilogue;
    __twr_l20:;
    __twr_v192 = *(uint64_t*)(_mng_listentry184);
    _mng_listentry184 = __twr_v192;
    __twr_l19:;
    if (_mng_listentry184 != _mng_head182) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v193 = (uint64_t)(&TlBumpAlloc);
    __twr_v194 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v193)(_mng_entrysize172, (uint64_t)(&_mng_entry185));
    _mng_status195 = __twr_v194;
    if (!(_mng_status195)) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v196 = (uint64_t)(&TlInternalError);
    __twr_v197 = (uint64_t)(&"Failed to allocate entry");
    __twr_v198 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v196)(__twr_v197, __twr_v198, __twr_v198, __twr_v198);
    __twr_l22:;
    __twr_v199 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v199)(_mng_hashtable171, _mng_entry185, _mng_key173, _mng_hash176);
    _mng_created191 = 1ULL;
    _jkl_retv = _mng_entry185;
    goto _jkl_epilogue;
    __twr_l16:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created191;
    return _jkl_retv;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable200, uint64_t _mng_entry201, uint64_t _mng_key202) {
    uint64_t _jkl_retv;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t _mng_hash205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t _mng_head211;
    uint64_t __twr_v212;
    uint64_t _mng_listentry213;
    uint64_t _mng_oldentry214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    __twr_v203 = (uint64_t)(&TlHashString);
    __twr_v204 = ((uint64_t (*)(uint64_t))__twr_v203)(_mng_key202);
    _mng_hash205 = __twr_v204;
    __twr_v206 = 16ULL;
    __twr_v207 = _mng_hashtable200 + __twr_v206;
    __twr_v208 = 4ULL;
    __twr_v209 = _mng_hash205 << __twr_v208;
    __twr_v210 = __twr_v207 + __twr_v209;
    _mng_head211 = __twr_v210;
    __twr_v212 = *(uint64_t*)(_mng_head211);
    _mng_listentry213 = __twr_v212;
    if (_mng_listentry213 == _mng_head211) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    _mng_oldentry214 = _mng_listentry213;
    __twr_v215 = (uint64_t)(&TlCompareString);
    __twr_v216 = 40ULL;
    __twr_v217 = _mng_oldentry214 + __twr_v216;
    __twr_v218 = *(uint64_t*)(__twr_v217);
    __twr_v219 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v215)(_mng_key202, __twr_v218);
    if (__twr_v219) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    _jkl_retv = _mng_oldentry214;
    goto _jkl_epilogue;
    __twr_l28:;
    __twr_v220 = *(uint64_t*)(_mng_listentry213);
    _mng_listentry213 = __twr_v220;
    __twr_l27:;
    if (_mng_listentry213 != _mng_head211) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v221 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v221)(_mng_hashtable200, _mng_entry201, _mng_key202, _mng_hash205);
    _jkl_retv = _mng_entry201;
    goto _jkl_epilogue;
    __twr_l24:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable222, uint64_t _mng_key223, uint64_t _mng_hash224) {
    uint64_t _jkl_retv;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t _mng_head230;
    uint64_t __twr_v231;
    uint64_t _mng_listentry232;
    uint64_t _mng_entry233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    __twr_v225 = 16ULL;
    __twr_v226 = _mng_hashtable222 + __twr_v225;
    __twr_v227 = 4ULL;
    __twr_v228 = _mng_hash224 << __twr_v227;
    __twr_v229 = __twr_v226 + __twr_v228;
    _mng_head230 = __twr_v229;
    __twr_v231 = *(uint64_t*)(_mng_head230);
    _mng_listentry232 = __twr_v231;
    if (_mng_listentry232 == _mng_head230) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    _mng_entry233 = _mng_listentry232;
    __twr_v234 = (uint64_t)(&TlCompareString);
    __twr_v235 = 40ULL;
    __twr_v236 = _mng_entry233 + __twr_v235;
    __twr_v237 = *(uint64_t*)(__twr_v236);
    __twr_v238 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v234)(_mng_key223, __twr_v237);
    if (__twr_v238) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_entry233;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v239 = *(uint64_t*)(_mng_listentry232);
    _mng_listentry232 = __twr_v239;
    __twr_l33:;
    if (_mng_listentry232 != _mng_head230) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v240 = 0ULL;
    _jkl_retv = __twr_v240;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable241, uint64_t _mng_key242) {
    uint64_t _jkl_retv;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t _mng_hash245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    __twr_v243 = (uint64_t)(&TlHashString);
    __twr_v244 = ((uint64_t (*)(uint64_t))__twr_v243)(_mng_key242);
    _mng_hash245 = __twr_v244;
    __twr_v246 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v247 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v246)(_mng_hashtable241, _mng_key242, _mng_hash245);
    _jkl_retv = __twr_v247;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void TlRemoveHashTable(uint64_t _mng_entry248) {
    uint64_t _mng_listentry249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t _mng_prev253;
    uint64_t __twr_v254;
    uint64_t _mng_next255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t _mng_listentry259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t _mng_prev262;
    uint64_t __twr_v263;
    uint64_t _mng_next264;
    uint64_t __twr_v265;
    _mng_listentry249 = _mng_entry248;
    __twr_v250 = 8ULL;
    __twr_v251 = _mng_listentry249 + __twr_v250;
    __twr_v252 = *(uint64_t*)(__twr_v251);
    _mng_prev253 = __twr_v252;
    __twr_v254 = *(uint64_t*)(_mng_listentry249);
    _mng_next255 = __twr_v254;
    *(uint64_t*)(_mng_prev253) = _mng_next255;
    __twr_v256 = _mng_next255 + __twr_v250;
    *(uint64_t*)(__twr_v256) = _mng_prev253;
    __twr_v257 = 16ULL;
    __twr_v258 = _mng_entry248 + __twr_v257;
    _mng_listentry259 = __twr_v258;
    __twr_v260 = _mng_listentry259 + __twr_v250;
    __twr_v261 = *(uint64_t*)(__twr_v260);
    _mng_prev262 = __twr_v261;
    __twr_v263 = *(uint64_t*)(_mng_listentry259);
    _mng_next264 = __twr_v263;
    *(uint64_t*)(_mng_prev262) = _mng_next264;
    __twr_v265 = _mng_next264 + __twr_v250;
    *(uint64_t*)(__twr_v265) = _mng_prev262;
    __twr_l37:;
    _jkl_epilogue:;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable266, uint64_t _mng_enumfunc267) {
    uint64_t _mng_head268;
    uint64_t __twr_v269;
    uint64_t _mng_listentry270;
    uint64_t __twr_v271;
    uint64_t _mng_nextentry272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t _mng_entry275;
    _mng_head268 = _mng_hashtable266;
    __twr_v269 = *(uint64_t*)(_mng_head268);
    _mng_listentry270 = __twr_v269;
    if (_mng_listentry270 == _mng_head268) { goto __twr_l40; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v271 = *(uint64_t*)(_mng_listentry270);
    _mng_nextentry272 = __twr_v271;
    __twr_v273 = 16ULL;
    __twr_v274 = _mng_listentry270 - __twr_v273;
    _mng_entry275 = __twr_v274;
    ((void (*)(uint64_t))_mng_enumfunc267)(_mng_entry275);
    _mng_listentry270 = _mng_nextentry272;
    __twr_l41:;
    if (_mng_listentry270 != _mng_head268) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t TlHashString(uint64_t _mng_str276) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    _mng_hash277 = 0ULL;
    __twr_v278 = *(uint8_t*)(_mng_str276);
    if (!(__twr_v278)) { goto __twr_l44; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v279 = *(uint8_t*)(_mng_str276);
    __twr_v280 = _mng_hash277 + __twr_v279;
    _mng_hash277 = __twr_v280;
    __twr_v281 = 10ULL;
    __twr_v282 = _mng_hash277 << __twr_v281;
    __twr_v283 = _mng_hash277 + __twr_v282;
    _mng_hash277 = __twr_v283;
    __twr_v284 = 6ULL;
    __twr_v285 = _mng_hash277 >> __twr_v284;
    __twr_v286 = _mng_hash277 ^ __twr_v285;
    _mng_hash277 = __twr_v286;
    __twr_v287 = 1ULL;
    __twr_v288 = _mng_str276 + __twr_v287;
    _mng_str276 = __twr_v288;
    __twr_l45:;
    __twr_v289 = *(uint8_t*)(_mng_str276);
    if (__twr_v289) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v290 = 3ULL;
    __twr_v291 = _mng_hash277 << __twr_v290;
    __twr_v292 = _mng_hash277 + __twr_v291;
    _mng_hash277 = __twr_v292;
    __twr_v293 = 11ULL;
    __twr_v294 = _mng_hash277 >> __twr_v293;
    __twr_v295 = _mng_hash277 ^ __twr_v294;
    _mng_hash277 = __twr_v295;
    __twr_v296 = 15ULL;
    __twr_v297 = _mng_hash277 << __twr_v296;
    __twr_v298 = _mng_hash277 + __twr_v297;
    _mng_hash277 = __twr_v298;
    __twr_v299 = 97ULL;
    __twr_v300 = _mng_hash277 % __twr_v299;
    _mng_hash277 = __twr_v300;
    _jkl_retv = _mng_hash277;
    goto _jkl_epilogue;
    __twr_l42:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
void TlInitializeHashTable(uint64_t _mng_hashtable110) {
    uint64_t _mng_listhead111;
    uint64_t __twr_v112;
    uint64_t __twr_v113;
    uint64_t _mng_i114;
    uint64_t __twr_v115;
    uint64_t __twr_v116;
    uint64_t __twr_v117;
    uint64_t __twr_v118;
    uint64_t __twr_v119;
    uint64_t _mng_listhead120;
    uint64_t __twr_v121;
    uint64_t __twr_v122;
    uint64_t __twr_v123;
    uint64_t __twr_v124;
    uint64_t __twr_v125;
    _mng_listhead111 = _mng_hashtable110;
    __twr_v112 = 8ULL;
    __twr_v113 = _mng_listhead111 + __twr_v112;
    *(uint64_t*)(__twr_v113) = _mng_listhead111;
    *(uint64_t*)(_mng_listhead111) = _mng_listhead111;
    _mng_i114 = 0ULL;
    __twr_l2:;
    __twr_v115 = 16ULL;
    __twr_v116 = _mng_hashtable110 + __twr_v115;
    __twr_v117 = 4ULL;
    __twr_v118 = _mng_i114 << __twr_v117;
    __twr_v119 = __twr_v116 + __twr_v118;
    _mng_listhead120 = __twr_v119;
    __twr_v121 = 8ULL;
    __twr_v122 = _mng_listhead120 + __twr_v121;
    *(uint64_t*)(__twr_v122) = _mng_listhead120;
    *(uint64_t*)(_mng_listhead120) = _mng_listhead120;
    __twr_v123 = 1ULL;
    __twr_v124 = _mng_i114 + __twr_v123;
    _mng_i114 = __twr_v124;
    __twr_l4:;
    __twr_v125 = 97ULL;
    if (_mng_i114 < __twr_v125) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable126) {
    uint64_t _mng_i127;
    uint64_t _mng_entries128;
    uint64_t __twr_v129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t __twr_v133;
    uint64_t _mng_head134;
    uint64_t __twr_v135;
    uint64_t _mng_listentry136;
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    uint64_t __twr_v139;
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    _mng_i127 = 0ULL;
    __twr_l6:;
    _mng_entries128 = 0ULL;
    __twr_v129 = 16ULL;
    __twr_v130 = _mng_hashtable126 + __twr_v129;
    __twr_v131 = 4ULL;
    __twr_v132 = _mng_i127 << __twr_v131;
    __twr_v133 = __twr_v130 + __twr_v132;
    _mng_head134 = __twr_v133;
    __twr_v135 = *(uint64_t*)(_mng_head134);
    _mng_listentry136 = __twr_v135;
    if (_mng_listentry136 == _mng_head134) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v137 = 1ULL;
    __twr_v138 = _mng_entries128 + __twr_v137;
    _mng_entries128 = __twr_v138;
    __twr_v139 = *(uint64_t*)(_mng_listentry136);
    _mng_listentry136 = __twr_v139;
    __twr_l11:;
    if (_mng_listentry136 != _mng_head134) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (!(_mng_entries128)) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v140 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v140)(_mng_i127);
    __twr_v141 = (uint64_t)(&TlPrintString);
    __twr_v142 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v141)(__twr_v142);
    ((void (*)(uint64_t))__twr_v140)(_mng_entries128);
    __twr_v143 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v141)(__twr_v143);
    __twr_l12:;
    __twr_v144 = 1ULL;
    __twr_v145 = _mng_i127 + __twr_v144;
    _mng_i127 = __twr_v145;
    __twr_l8:;
    __twr_v146 = 97ULL;
    if (_mng_i127 < __twr_v146) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_l5:;
    _jkl_epilogue:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable147, uint64_t _mng_entry148, uint64_t _mng_key149, uint64_t _mng_hash150) {
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t _mng_listhead160;
    uint64_t _mng_listentry161;
    uint64_t __twr_v162;
    uint64_t _mng_first163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t _mng_listhead167;
    uint64_t __twr_v168;
    uint64_t _mng_listentry169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t _mng_last172;
    uint64_t __twr_v173;
    __twr_v151 = 32ULL;
    __twr_v152 = _mng_entry148 + __twr_v151;
    *(uint64_t*)(__twr_v152) = _mng_hashtable147;
    __twr_v153 = 40ULL;
    __twr_v154 = _mng_entry148 + __twr_v153;
    *(uint64_t*)(__twr_v154) = _mng_key149;
    __twr_v155 = 16ULL;
    __twr_v156 = _mng_hashtable147 + __twr_v155;
    __twr_v157 = 4ULL;
    __twr_v158 = _mng_hash150 << __twr_v157;
    __twr_v159 = __twr_v156 + __twr_v158;
    _mng_listhead160 = __twr_v159;
    _mng_listentry161 = _mng_entry148;
    __twr_v162 = *(uint64_t*)(_mng_listhead160);
    _mng_first163 = __twr_v162;
    *(uint64_t*)(_mng_listentry161) = _mng_first163;
    __twr_v164 = 8ULL;
    __twr_v165 = _mng_listentry161 + __twr_v164;
    *(uint64_t*)(__twr_v165) = _mng_listhead160;
    __twr_v166 = _mng_first163 + __twr_v164;
    *(uint64_t*)(__twr_v166) = _mng_entry148;
    *(uint64_t*)(_mng_listhead160) = _mng_entry148;
    _mng_listhead167 = _mng_hashtable147;
    __twr_v168 = _mng_entry148 + __twr_v155;
    _mng_listentry169 = __twr_v168;
    __twr_v170 = _mng_listhead167 + __twr_v164;
    __twr_v171 = *(uint64_t*)(__twr_v170);
    _mng_last172 = __twr_v171;
    __twr_v173 = _mng_listentry169 + __twr_v164;
    *(uint64_t*)(__twr_v173) = _mng_last172;
    *(uint64_t*)(_mng_listentry169) = _mng_listhead167;
    *(uint64_t*)(_mng_last172) = _mng_listentry169;
    *(uint64_t*)(__twr_v170) = _mng_listentry169;
    __twr_l14:;
    _jkl_epilogue:;
}
void TlInsertHashTable(uint64_t _mng_hashtable174, uint64_t _mng_entry175, uint64_t _mng_key176) {
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t _mng_hash179;
    uint64_t __twr_v180;
    __twr_v177 = (uint64_t)(&TlHashString);
    __twr_v178 = ((uint64_t (*)(uint64_t))__twr_v177)(_mng_key176);
    _mng_hash179 = __twr_v178;
    __twr_v180 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v180)(_mng_hashtable174, _mng_entry175, _mng_key176, _mng_hash179);
    __twr_l15:;
    _jkl_epilogue:;
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable181, uint64_t _mng_entrysize182, uint64_t _mng_key183, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t _mng_hash186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t _mng_head192;
    uint64_t __twr_v193;
    uint64_t _mng_listentry194;
    uint64_t _mng_entry195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t _mng_created201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t _mng_status205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    __twr_v184 = (uint64_t)(&TlHashString);
    __twr_v185 = ((uint64_t (*)(uint64_t))__twr_v184)(_mng_key183);
    _mng_hash186 = __twr_v185;
    __twr_v187 = 16ULL;
    __twr_v188 = _mng_hashtable181 + __twr_v187;
    __twr_v189 = 4ULL;
    __twr_v190 = _mng_hash186 << __twr_v189;
    __twr_v191 = __twr_v188 + __twr_v190;
    _mng_head192 = __twr_v191;
    __twr_v193 = *(uint64_t*)(_mng_head192);
    _mng_listentry194 = __twr_v193;
    if (_mng_listentry194 == _mng_head192) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    _mng_entry195 = _mng_listentry194;
    __twr_v196 = (uint64_t)(&TlCompareString);
    __twr_v197 = 40ULL;
    __twr_v198 = _mng_entry195 + __twr_v197;
    __twr_v199 = *(uint64_t*)(__twr_v198);
    __twr_v200 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v196)(_mng_key183, __twr_v199);
    if (__twr_v200) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    _mng_created201 = 0ULL;
    _jkl_retv = _mng_entry195;
    goto _jkl_epilogue;
    __twr_l20:;
    __twr_v202 = *(uint64_t*)(_mng_listentry194);
    _mng_listentry194 = __twr_v202;
    __twr_l19:;
    if (_mng_listentry194 != _mng_head192) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v203 = (uint64_t)(&TlBumpAlloc);
    __twr_v204 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v203)(_mng_entrysize182, (uint64_t)(&_mng_entry195));
    _mng_status205 = __twr_v204;
    if (!(_mng_status205)) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v206 = (uint64_t)(&TlInternalError);
    __twr_v207 = (uint64_t)(&"Failed to allocate entry");
    __twr_v208 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v206)(__twr_v207, __twr_v208, __twr_v208, __twr_v208);
    __twr_l22:;
    __twr_v209 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v209)(_mng_hashtable181, _mng_entry195, _mng_key183, _mng_hash186);
    _mng_created201 = 1ULL;
    _jkl_retv = _mng_entry195;
    goto _jkl_epilogue;
    __twr_l16:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created201;
    return _jkl_retv;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable210, uint64_t _mng_entry211, uint64_t _mng_key212) {
    uint64_t _jkl_retv;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t _mng_hash215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t _mng_head221;
    uint64_t __twr_v222;
    uint64_t _mng_listentry223;
    uint64_t _mng_oldentry224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    __twr_v213 = (uint64_t)(&TlHashString);
    __twr_v214 = ((uint64_t (*)(uint64_t))__twr_v213)(_mng_key212);
    _mng_hash215 = __twr_v214;
    __twr_v216 = 16ULL;
    __twr_v217 = _mng_hashtable210 + __twr_v216;
    __twr_v218 = 4ULL;
    __twr_v219 = _mng_hash215 << __twr_v218;
    __twr_v220 = __twr_v217 + __twr_v219;
    _mng_head221 = __twr_v220;
    __twr_v222 = *(uint64_t*)(_mng_head221);
    _mng_listentry223 = __twr_v222;
    if (_mng_listentry223 == _mng_head221) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    _mng_oldentry224 = _mng_listentry223;
    __twr_v225 = (uint64_t)(&TlCompareString);
    __twr_v226 = 40ULL;
    __twr_v227 = _mng_oldentry224 + __twr_v226;
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v225)(_mng_key212, __twr_v228);
    if (__twr_v229) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    _jkl_retv = _mng_oldentry224;
    goto _jkl_epilogue;
    __twr_l28:;
    __twr_v230 = *(uint64_t*)(_mng_listentry223);
    _mng_listentry223 = __twr_v230;
    __twr_l27:;
    if (_mng_listentry223 != _mng_head221) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v231 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v231)(_mng_hashtable210, _mng_entry211, _mng_key212, _mng_hash215);
    _jkl_retv = _mng_entry211;
    goto _jkl_epilogue;
    __twr_l24:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable232, uint64_t _mng_key233, uint64_t _mng_hash234) {
    uint64_t _jkl_retv;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t _mng_head240;
    uint64_t __twr_v241;
    uint64_t _mng_listentry242;
    uint64_t _mng_entry243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    __twr_v235 = 16ULL;
    __twr_v236 = _mng_hashtable232 + __twr_v235;
    __twr_v237 = 4ULL;
    __twr_v238 = _mng_hash234 << __twr_v237;
    __twr_v239 = __twr_v236 + __twr_v238;
    _mng_head240 = __twr_v239;
    __twr_v241 = *(uint64_t*)(_mng_head240);
    _mng_listentry242 = __twr_v241;
    if (_mng_listentry242 == _mng_head240) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    _mng_entry243 = _mng_listentry242;
    __twr_v244 = (uint64_t)(&TlCompareString);
    __twr_v245 = 40ULL;
    __twr_v246 = _mng_entry243 + __twr_v245;
    __twr_v247 = *(uint64_t*)(__twr_v246);
    __twr_v248 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v244)(_mng_key233, __twr_v247);
    if (__twr_v248) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_entry243;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v249 = *(uint64_t*)(_mng_listentry242);
    _mng_listentry242 = __twr_v249;
    __twr_l33:;
    if (_mng_listentry242 != _mng_head240) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v250 = 0ULL;
    _jkl_retv = __twr_v250;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable251, uint64_t _mng_key252) {
    uint64_t _jkl_retv;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t _mng_hash255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    __twr_v253 = (uint64_t)(&TlHashString);
    __twr_v254 = ((uint64_t (*)(uint64_t))__twr_v253)(_mng_key252);
    _mng_hash255 = __twr_v254;
    __twr_v256 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v257 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v256)(_mng_hashtable251, _mng_key252, _mng_hash255);
    _jkl_retv = __twr_v257;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void TlRemoveHashTable(uint64_t _mng_entry258) {
    uint64_t _mng_listentry259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t _mng_prev263;
    uint64_t __twr_v264;
    uint64_t _mng_next265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t _mng_listentry269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t _mng_prev272;
    uint64_t __twr_v273;
    uint64_t _mng_next274;
    uint64_t __twr_v275;
    _mng_listentry259 = _mng_entry258;
    __twr_v260 = 8ULL;
    __twr_v261 = _mng_listentry259 + __twr_v260;
    __twr_v262 = *(uint64_t*)(__twr_v261);
    _mng_prev263 = __twr_v262;
    __twr_v264 = *(uint64_t*)(_mng_listentry259);
    _mng_next265 = __twr_v264;
    *(uint64_t*)(_mng_prev263) = _mng_next265;
    __twr_v266 = _mng_next265 + __twr_v260;
    *(uint64_t*)(__twr_v266) = _mng_prev263;
    __twr_v267 = 16ULL;
    __twr_v268 = _mng_entry258 + __twr_v267;
    _mng_listentry269 = __twr_v268;
    __twr_v270 = _mng_listentry269 + __twr_v260;
    __twr_v271 = *(uint64_t*)(__twr_v270);
    _mng_prev272 = __twr_v271;
    __twr_v273 = *(uint64_t*)(_mng_listentry269);
    _mng_next274 = __twr_v273;
    *(uint64_t*)(_mng_prev272) = _mng_next274;
    __twr_v275 = _mng_next274 + __twr_v260;
    *(uint64_t*)(__twr_v275) = _mng_prev272;
    __twr_l37:;
    _jkl_epilogue:;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable276, uint64_t _mng_enumfunc277) {
    uint64_t _mng_head278;
    uint64_t __twr_v279;
    uint64_t _mng_listentry280;
    uint64_t __twr_v281;
    uint64_t _mng_nextentry282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_entry285;
    _mng_head278 = _mng_hashtable276;
    __twr_v279 = *(uint64_t*)(_mng_head278);
    _mng_listentry280 = __twr_v279;
    if (_mng_listentry280 == _mng_head278) { goto __twr_l40; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v281 = *(uint64_t*)(_mng_listentry280);
    _mng_nextentry282 = __twr_v281;
    __twr_v283 = 16ULL;
    __twr_v284 = _mng_listentry280 - __twr_v283;
    _mng_entry285 = __twr_v284;
    ((void (*)(uint64_t))_mng_enumfunc277)(_mng_entry285);
    _mng_listentry280 = _mng_nextentry282;
    __twr_l41:;
    if (_mng_listentry280 != _mng_head278) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t TlHashString(uint64_t _mng_str286) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    _mng_hash287 = 0ULL;
    __twr_v288 = *(uint8_t*)(_mng_str286);
    if (!(__twr_v288)) { goto __twr_l44; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v289 = *(uint8_t*)(_mng_str286);
    __twr_v290 = _mng_hash287 + __twr_v289;
    _mng_hash287 = __twr_v290;
    __twr_v291 = 10ULL;
    __twr_v292 = _mng_hash287 << __twr_v291;
    __twr_v293 = _mng_hash287 + __twr_v292;
    _mng_hash287 = __twr_v293;
    __twr_v294 = 6ULL;
    __twr_v295 = _mng_hash287 >> __twr_v294;
    __twr_v296 = _mng_hash287 ^ __twr_v295;
    _mng_hash287 = __twr_v296;
    __twr_v297 = 1ULL;
    __twr_v298 = _mng_str286 + __twr_v297;
    _mng_str286 = __twr_v298;
    __twr_l45:;
    __twr_v299 = *(uint8_t*)(_mng_str286);
    if (__twr_v299) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v300 = 3ULL;
    __twr_v301 = _mng_hash287 << __twr_v300;
    __twr_v302 = _mng_hash287 + __twr_v301;
    _mng_hash287 = __twr_v302;
    __twr_v303 = 11ULL;
    __twr_v304 = _mng_hash287 >> __twr_v303;
    __twr_v305 = _mng_hash287 ^ __twr_v304;
    _mng_hash287 = __twr_v305;
    __twr_v306 = 15ULL;
    __twr_v307 = _mng_hash287 << __twr_v306;
    __twr_v308 = _mng_hash287 + __twr_v307;
    _mng_hash287 = __twr_v308;
    __twr_v309 = 97ULL;
    __twr_v310 = _mng_hash287 % __twr_v309;
    _mng_hash287 = __twr_v310;
    _jkl_retv = _mng_hash287;
    goto _jkl_epilogue;
    __twr_l42:;
    _jkl_epilogue:;
    return _jkl_retv;
}

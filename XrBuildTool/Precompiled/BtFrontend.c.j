#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlIterateDirectory(uint64_t _mng_path88, uint64_t _mng_callback89, uint64_t _mng_context90);
extern uint64_t TlGetPathExtension(uint64_t _mng_path91);
extern uint64_t TlStatFile(uint64_t _mng_path92, uint64_t _mng_statrecord93);
extern void TlInitializeZone(uint64_t _mng_zone94, uint64_t _mng_blocksize95);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone96);
extern void TlFreeToZone(uint64_t _mng_zone97, uint64_t _mng_block98);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant99);
extern void TlPunchValue(uint64_t _mng_ptr100, uint64_t _mng_value101, uint64_t _mng_bytes102);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg103);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename104, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock105, uint64_t _mng_filepath106);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope107);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg108);
extern void LexExpandMacro(uint64_t _mng_macro109, uint64_t _mng_token110);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream111, uint64_t _mng_macro112);
extern void LexUninitializeStream(uint64_t _mng_stream113);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream114);
extern void LexPushStream(uint64_t _mng_stream115);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream116, uint64_t _mng_fileblock117, uint64_t _mng_handle118);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock119, uint64_t _mng_handle120);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest121, uint64_t _mng_src122);
extern void LexGetToken(uint64_t _mng_token123);
extern void LexPutbackToken(uint64_t _mng_token124);
extern uint64_t LexMatchToken(uint64_t _mng_token125, uint64_t _mng_type126, uint64_t _mng_subtype127);
extern void LexStreamError(uint64_t _mng_str128, uint64_t _mng_err1129, uint64_t _mng_err2130, uint64_t _mng_err3131);
extern void LexTokenError(uint64_t _mng_token132, uint64_t _mng_str133, uint64_t _mng_err1134, uint64_t _mng_err2135, uint64_t _mng_err3136);
extern uint64_t LexCrunchNumber(uint64_t _mng_token137, uint64_t _mng_buffer138);
extern uint64_t BtStatFile(uint64_t _mng_fullpath139);
uint64_t FeInputFile[32];
uint64_t FeTargetName[32];
uint64_t FeInputFileHandle;
uint64_t BtBinaryName = 0ULL;
void BtUsage() {
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    __twr_v140 = (uint64_t)(&TlPrintString);
    __twr_v141 = (uint64_t)(&"Usage: ");
    ((void (*)(uint64_t))__twr_v140)(__twr_v141);
    __twr_v142 = (uint64_t)(&BtBinaryName);
    __twr_v143 = *(uint64_t*)(__twr_v142);
    ((void (*)(uint64_t))__twr_v140)(__twr_v143);
    __twr_v144 = (uint64_t)(&" [configname] [targetname]\n");
    ((void (*)(uint64_t))__twr_v140)(__twr_v144);
    __twr_v145 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v145)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg146) {
    uint64_t _jkl_retv;
    uint64_t _mng_i147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    _mng_i147 = 0ULL;
    __twr_v148 = *(uint8_t*)(_mng_arg146);
    if (!(__twr_v148)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v149 = _mng_arg146 + _mng_i147;
    __twr_v150 = *(uint8_t*)(__twr_v149);
    __twr_v151 = 61ULL;
    if (__twr_v150 != __twr_v151) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v152 = _mng_arg146 + _mng_i147;
    _jkl_retv = __twr_v152;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v153 = 1ULL;
    __twr_v154 = _mng_i147 + __twr_v153;
    _mng_i147 = __twr_v154;
    __twr_l5:;
    __twr_v155 = _mng_arg146 + _mng_i147;
    __twr_v156 = *(uint8_t*)(__twr_v155);
    if (__twr_v156) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v157 = 0ULL;
    _jkl_retv = __twr_v157;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc158, uint64_t _mng_argv159) {
    uint64_t _mng_foundinput160;
    uint64_t _mng_foundtarget161;
    uint64_t _mng_i162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    _mng_foundinput160 = 0ULL;
    _mng_foundtarget161 = 0ULL;
    _mng_i162 = 1ULL;
    if (_mng_argc158 <= _mng_i162) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v163 = (uint64_t)(&FeIsMacroArgument);
    __twr_v164 = 3ULL;
    __twr_v165 = _mng_i162 << __twr_v164;
    __twr_v166 = _mng_argv159 + __twr_v165;
    __twr_v167 = *(uint64_t*)(__twr_v166);
    __twr_v168 = ((uint64_t (*)(uint64_t))__twr_v163)(__twr_v167);
    if (!(__twr_v168)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v169 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v170 = 3ULL;
    __twr_v171 = _mng_i162 << __twr_v170;
    __twr_v172 = _mng_argv159 + __twr_v171;
    __twr_v173 = *(uint64_t*)(__twr_v172);
    ((void (*)(uint64_t))__twr_v169)(__twr_v173);
    goto __twr_l12;
    __twr_l14:;
    if (!(_mng_foundinput160)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    if (!(_mng_foundtarget161)) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v174 = (uint64_t)(&TlPrintString);
    __twr_v175 = (uint64_t)(&"Too many arguments specified!\n");
    ((void (*)(uint64_t))__twr_v174)(__twr_v175);
    __twr_v176 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v176)();
    __twr_l17:;
    __twr_v177 = (uint64_t)(&TlCopyString);
    __twr_v178 = (uint64_t)(&FeTargetName);
    __twr_v179 = 3ULL;
    __twr_v180 = _mng_i162 << __twr_v179;
    __twr_v181 = _mng_argv159 + __twr_v180;
    __twr_v182 = *(uint64_t*)(__twr_v181);
    __twr_v183 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v177)(__twr_v178, __twr_v182, __twr_v183);
    _mng_foundtarget161 = 1ULL;
    goto __twr_l12;
    __twr_l16:;
    _mng_foundinput160 = 1ULL;
    __twr_v184 = (uint64_t)(&TlCopyString);
    __twr_v185 = (uint64_t)(&FeInputFile);
    __twr_v186 = 3ULL;
    __twr_v187 = _mng_i162 << __twr_v186;
    __twr_v188 = _mng_argv159 + __twr_v187;
    __twr_v189 = *(uint64_t*)(__twr_v188);
    __twr_v190 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v184)(__twr_v185, __twr_v189, __twr_v190);
    __twr_l12:;
    __twr_v191 = 1ULL;
    __twr_v192 = _mng_i162 + __twr_v191;
    _mng_i162 = __twr_v192;
    __twr_l11:;
    if (_mng_i162 < _mng_argc158) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput160) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v193 = (uint64_t)(&TlPrintString);
    __twr_v194 = (uint64_t)(&"Error: No config file specified.\n");
    ((void (*)(uint64_t))__twr_v193)(__twr_v194);
    __twr_v195 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v195)();
    __twr_l19:;
    if (_mng_foundtarget161) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v196 = (uint64_t)(&TlPrintString);
    __twr_v197 = (uint64_t)(&"Error: No target name specified.\n");
    ((void (*)(uint64_t))__twr_v196)(__twr_v197);
    __twr_v198 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v198)();
    __twr_l21:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename199, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t _mng_created204;
    uint64_t _mng_fileblock205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    __twr_v200 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v201 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v202 = 560ULL;
    __twr_v203 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v200)(__twr_v201, __twr_v202, _mng_includename199, (uint64_t)(&_mng_created204));
    _mng_fileblock205 = __twr_v203;
    if (!(_mng_created204)) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v206 = (uint64_t)(&TlCopyString);
    __twr_v207 = 304ULL;
    __twr_v208 = _mng_fileblock205 + __twr_v207;
    __twr_v209 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v206)(__twr_v208, _mng_includename199, __twr_v209);
    __twr_v210 = 40ULL;
    __twr_v211 = _mng_fileblock205 + __twr_v210;
    *(uint64_t*)(__twr_v211) = __twr_v208;
    __twr_l24:;
    _jkl_retv = _mng_fileblock205;
    goto _jkl_epilogue;
    __twr_l23:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created204;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock212, uint64_t _mng_filepath213) {
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    __twr_v214 = (uint64_t)(&TlCopyString);
    __twr_v215 = 48ULL;
    __twr_v216 = _mng_fileblock212 + __twr_v215;
    __twr_v217 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v214)(__twr_v216, _mng_filepath213, __twr_v217);
    __twr_l26:;
    _jkl_epilogue:;
}
extern void BtInitializeStatCache();
void FeInitialize(uint64_t _mng_argc218, uint64_t _mng_argv219) {
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t _mng_status229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    __twr_v220 = (uint64_t)(&TlInitializeHashTable);
    __twr_v221 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v220)(__twr_v221);
    __twr_v222 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v222)();
    __twr_v223 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v223)(_mng_argc218, _mng_argv219);
    __twr_v224 = (uint64_t)(&TlOpenSource);
    __twr_v225 = (uint64_t)(&FeInputFile);
    __twr_v226 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v224)(__twr_v225, (uint64_t)(&__twr_v227));
    __twr_v228 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v228) = __twr_v227;
    _mng_status229 = __twr_v226;
    if (!(_mng_status229)) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v230 = (uint64_t)(&TlUserError);
    __twr_v231 = (uint64_t)(&"Failed to open the config file.");
    __twr_v232 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v230)(__twr_v231, __twr_v232, __twr_v232, __twr_v232);
    __twr_l28:;
    __twr_v233 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v233)();
    __twr_v234 = (uint64_t)(&BtInitializeStatCache);
    ((void (*)())__twr_v234)();
    __twr_l27:;
    _jkl_epilogue:;
}
extern void BtParse();
extern void BtBuildDag();
void BtBuild(uint64_t _mng_argc235, uint64_t _mng_argv236) {
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    __twr_v237 = *(uint64_t*)(_mng_argv236);
    __twr_v238 = (uint64_t)(&BtBinaryName);
    *(uint64_t*)(__twr_v238) = __twr_v237;
    __twr_v239 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v239)(_mng_argc235, _mng_argv236);
    __twr_v240 = (uint64_t)(&BtParse);
    ((void (*)())__twr_v240)();
    __twr_v241 = (uint64_t)(&BtBuildDag);
    ((void (*)())__twr_v241)();
    __twr_l30:;
    _jkl_epilogue:;
}

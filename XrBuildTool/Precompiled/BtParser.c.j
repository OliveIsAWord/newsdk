#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlIterateDirectory(uint64_t _mng_path88, uint64_t _mng_callback89, uint64_t _mng_context90);
extern void TlInitializeZone(uint64_t _mng_zone91, uint64_t _mng_blocksize92);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone93);
extern void TlFreeToZone(uint64_t _mng_zone94, uint64_t _mng_block95);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant96);
extern void TlPunchValue(uint64_t _mng_ptr97, uint64_t _mng_value98, uint64_t _mng_bytes99);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg100);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename101, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock102, uint64_t _mng_filepath103);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope104);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg105);
extern void LexExpandMacro(uint64_t _mng_macro106, uint64_t _mng_token107);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream108, uint64_t _mng_macro109);
extern void LexUninitializeStream(uint64_t _mng_stream110);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream111);
extern void LexPushStream(uint64_t _mng_stream112);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream113, uint64_t _mng_fileblock114, uint64_t _mng_handle115);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock116, uint64_t _mng_handle117);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest118, uint64_t _mng_src119);
extern void LexGetToken(uint64_t _mng_token120);
extern void LexPutbackToken(uint64_t _mng_token121);
extern uint64_t LexMatchToken(uint64_t _mng_token122, uint64_t _mng_type123, uint64_t _mng_subtype124);
extern void LexStreamError(uint64_t _mng_str125, uint64_t _mng_err1126, uint64_t _mng_err2127, uint64_t _mng_err3128);
extern void LexTokenError(uint64_t _mng_token129, uint64_t _mng_str130, uint64_t _mng_err1131, uint64_t _mng_err2132, uint64_t _mng_err3133);
extern uint64_t LexCrunchNumber(uint64_t _mng_token134, uint64_t _mng_buffer135);
uint64_t BtTargetHashTable[196];
uint64_t BtCurrentTarget;
extern uint64_t FeTargetName[32];
uint64_t BtSelectedTarget;
void BtParseStandardPath(uint64_t _mng_stdpath136, uint64_t _mng_fullpath137, uint64_t _mng_errtoken138) {
    uint64_t __twr_v139;
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    uint64_t _mng_stdpathstr142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t _mng_macro171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t _mng_macro201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    __twr_v139 = 16ULL;
    __twr_v140 = _mng_stdpath136 + __twr_v139;
    __twr_v141 = *(uint64_t*)(__twr_v140);
    _mng_stdpathstr142 = __twr_v141;
    __twr_v143 = *(uint8_t*)(_mng_stdpathstr142);
    if (__twr_v143) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v144 = (uint64_t)(&LexTokenError);
    __twr_v145 = (uint64_t)(&"Empty path string");
    __twr_v146 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v144)(_mng_errtoken138, __twr_v145, __twr_v146, __twr_v146, __twr_v146);
    __twr_l2:;
    __twr_v147 = *(uint8_t*)(_mng_stdpathstr142);
    __twr_v148 = 47ULL;
    if (__twr_v147 != __twr_v148) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v149 = (uint64_t)(&LexTokenError);
    __twr_v150 = (uint64_t)(&"Expected a relative path, found an absolute path");
    __twr_v151 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v149)(_mng_errtoken138, __twr_v150, __twr_v151, __twr_v151, __twr_v151);
    __twr_l4:;
    __twr_v152 = *(uint8_t*)(_mng_stdpathstr142);
    __twr_v153 = 60ULL;
    if (__twr_v152 == __twr_v153) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v154 = (uint64_t)(&TlCopyParentPath);
    __twr_v155 = (uint64_t)(&LexCurrentStream);
    __twr_v156 = *(uint64_t*)(__twr_v155);
    __twr_v157 = 8ULL;
    __twr_v158 = __twr_v156 + __twr_v157;
    __twr_v159 = *(uint64_t*)(__twr_v158);
    __twr_v160 = 48ULL;
    __twr_v161 = __twr_v159 + __twr_v160;
    ((void (*)(uint64_t, uint64_t))__twr_v154)(__twr_v161, _mng_fullpath137);
    goto __twr_l6;
    __twr_l8:;
    __twr_v162 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v163 = (uint64_t)(&"<sdk>/");
    __twr_v164 = 5ULL;
    __twr_v165 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v162)(_mng_stdpathstr142, __twr_v163, __twr_v164);
    if (__twr_v165) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v166 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v167 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v168 = *(uint64_t*)(__twr_v167);
    __twr_v169 = (uint64_t)(&"SDK_BASE");
    __twr_v170 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v166)(__twr_v168, __twr_v169);
    _mng_macro171 = __twr_v170;
    if (_mng_macro171) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v172 = (uint64_t)(&LexTokenError);
    __twr_v173 = (uint64_t)(&"SDK_BASE isn't defined");
    __twr_v174 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v172)(_mng_errtoken138, __twr_v173, __twr_v174, __twr_v174, __twr_v174);
    __twr_l11:;
    __twr_v175 = 248ULL;
    __twr_v176 = _mng_macro171 + __twr_v175;
    __twr_v177 = *(uint8_t*)(__twr_v176);
    if (!(__twr_v177)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v178 = (uint64_t)(&LexTokenError);
    __twr_v179 = (uint64_t)(&"SDK_BASE is a function macro for some reason");
    __twr_v180 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v178)(_mng_errtoken138, __twr_v179, __twr_v180, __twr_v180, __twr_v180);
    __twr_l13:;
    __twr_v181 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v182 = 80ULL;
    __twr_v183 = _mng_macro171 + __twr_v182;
    __twr_v184 = 96ULL;
    __twr_v185 = _mng_macro171 + __twr_v184;
    __twr_v186 = *(uint64_t*)(__twr_v185);
    __twr_v187 = 1ULL;
    __twr_v188 = *(uint64_t*)(__twr_v183);
    __twr_v189 = __twr_v188 - __twr_v187;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v181)(_mng_fullpath137, __twr_v186, __twr_v189);
    __twr_v190 = 5ULL;
    __twr_v191 = _mng_stdpathstr142 + __twr_v190;
    _mng_stdpathstr142 = __twr_v191;
    goto __twr_l6;
    __twr_l10:;
    __twr_v192 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v193 = (uint64_t)(&"<bld>/");
    __twr_v194 = 5ULL;
    __twr_v195 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v192)(_mng_stdpathstr142, __twr_v193, __twr_v194);
    if (__twr_v195) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v196 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v197 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v198 = *(uint64_t*)(__twr_v197);
    __twr_v199 = (uint64_t)(&"BUILD_BASE");
    __twr_v200 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v196)(__twr_v198, __twr_v199);
    _mng_macro201 = __twr_v200;
    if (_mng_macro201) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v202 = (uint64_t)(&LexTokenError);
    __twr_v203 = (uint64_t)(&"BUILD_BASE isn't defined");
    __twr_v204 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(_mng_errtoken138, __twr_v203, __twr_v204, __twr_v204, __twr_v204);
    __twr_l17:;
    __twr_v205 = 248ULL;
    __twr_v206 = _mng_macro201 + __twr_v205;
    __twr_v207 = *(uint8_t*)(__twr_v206);
    if (!(__twr_v207)) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v208 = (uint64_t)(&LexTokenError);
    __twr_v209 = (uint64_t)(&"BUILD_BASE is a function macro for some reason");
    __twr_v210 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v208)(_mng_errtoken138, __twr_v209, __twr_v210, __twr_v210, __twr_v210);
    __twr_l19:;
    __twr_v211 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v212 = 80ULL;
    __twr_v213 = _mng_macro201 + __twr_v212;
    __twr_v214 = 96ULL;
    __twr_v215 = _mng_macro201 + __twr_v214;
    __twr_v216 = *(uint64_t*)(__twr_v215);
    __twr_v217 = 1ULL;
    __twr_v218 = *(uint64_t*)(__twr_v213);
    __twr_v219 = __twr_v218 - __twr_v217;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v211)(_mng_fullpath137, __twr_v216, __twr_v219);
    __twr_v220 = 5ULL;
    __twr_v221 = _mng_stdpathstr142 + __twr_v220;
    _mng_stdpathstr142 = __twr_v221;
    goto __twr_l6;
    __twr_l16:;
    __twr_v222 = (uint64_t)(&LexTokenError);
    __twr_v223 = (uint64_t)(&"Unknown path prefix");
    __twr_v224 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v222)(_mng_errtoken138, __twr_v223, __twr_v224, __twr_v224, __twr_v224);
    __twr_l6:;
    __twr_v225 = *(uint64_t*)(_mng_fullpath137);
    if (__twr_v225) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v226 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v227 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v226)(_mng_fullpath137, __twr_v227);
    __twr_v228 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v226)(_mng_fullpath137, __twr_v228);
    goto __twr_l21;
    __twr_l23:;
    __twr_v229 = 16ULL;
    __twr_v230 = _mng_fullpath137 + __twr_v229;
    __twr_v231 = *(uint64_t*)(__twr_v230);
    __twr_v232 = *(uint64_t*)(_mng_fullpath137);
    __twr_v233 = 1ULL;
    __twr_v234 = __twr_v232 - __twr_v233;
    __twr_v235 = __twr_v231 + __twr_v234;
    __twr_v236 = *(uint8_t*)(__twr_v235);
    __twr_v237 = 47ULL;
    if (__twr_v236 == __twr_v237) { goto __twr_l21; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v238 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v239 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v238)(_mng_fullpath137, __twr_v239);
    __twr_l21:;
    __twr_v240 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v241 = *(uint64_t*)(_mng_stdpath136);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v240)(_mng_fullpath137, _mng_stdpathstr142, __twr_v241);
    __twr_l1:;
    _jkl_epilogue:;
}
void BtTargetInfoFile() {
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t _mng_token244[4];
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t _mng_string254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    __twr_v242 = (uint64_t)(&LexMatchToken);
    __twr_v243 = (uint64_t)(&_mng_token244);
    __twr_v245 = 4ULL;
    __twr_v246 = 0ULL;
    __twr_v247 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v242)(__twr_v243, __twr_v245, __twr_v246);
    if (__twr_v247) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v248 = (uint64_t)(&LexTokenError);
    __twr_v249 = (uint64_t)(&_mng_token244);
    __twr_v250 = (uint64_t)(&"Expected a string");
    __twr_v251 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v248)(__twr_v249, __twr_v250, __twr_v251, __twr_v251, __twr_v251);
    __twr_l26:;
    __twr_v252 = (uint64_t)(&_mng_token244);
    __twr_v253 = *(uint64_t*)(__twr_v252);
    _mng_string254 = __twr_v253;
    __twr_v255 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v256 = (uint64_t)(&BtCurrentTarget);
    __twr_v257 = *(uint64_t*)(__twr_v256);
    __twr_v258 = 520ULL;
    __twr_v259 = __twr_v257 + __twr_v258;
    ((void (*)(uint64_t))__twr_v255)(__twr_v259);
    __twr_v260 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v261 = *(uint64_t*)(__twr_v256);
    __twr_v262 = __twr_v261 + __twr_v258;
    ((void (*)(uint64_t))__twr_v260)(__twr_v262);
    __twr_v263 = (uint64_t)(&BtParseStandardPath);
    __twr_v264 = 48ULL;
    __twr_v265 = _mng_string254 + __twr_v264;
    __twr_v266 = *(uint64_t*)(__twr_v256);
    __twr_v267 = __twr_v266 + __twr_v258;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v263)(__twr_v265, __twr_v267, __twr_v252);
    __twr_v268 = 1ULL;
    __twr_v269 = *(uint64_t*)(__twr_v256);
    __twr_v270 = 617ULL;
    __twr_v271 = __twr_v269 + __twr_v270;
    *(uint8_t*)(__twr_v271) = __twr_v268;
    __twr_l25:;
    _jkl_epilogue:;
}
void BtTargetInfoDepend() {
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t _mng_token274[4];
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t _mng_string284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t _mng_target291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t _mng_head300;
    uint64_t __twr_v301;
    uint64_t _mng_listentry302;
    uint64_t _mng_entry303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t _mng_entry311;
    uint64_t _mng_status312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t _mng_listhead322;
    uint64_t _mng_listentry323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t _mng_last327;
    uint64_t __twr_v328;
    __twr_v272 = (uint64_t)(&LexMatchToken);
    __twr_v273 = (uint64_t)(&_mng_token274);
    __twr_v275 = 4ULL;
    __twr_v276 = 0ULL;
    __twr_v277 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v272)(__twr_v273, __twr_v275, __twr_v276);
    if (__twr_v277) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v278 = (uint64_t)(&LexTokenError);
    __twr_v279 = (uint64_t)(&_mng_token274);
    __twr_v280 = (uint64_t)(&"Expected a string");
    __twr_v281 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v278)(__twr_v279, __twr_v280, __twr_v281, __twr_v281, __twr_v281);
    __twr_l29:;
    __twr_v282 = (uint64_t)(&_mng_token274);
    __twr_v283 = *(uint64_t*)(__twr_v282);
    _mng_string284 = __twr_v283;
    __twr_v285 = (uint64_t)(&TlLookupHashTable);
    __twr_v286 = (uint64_t)(&BtTargetHashTable);
    __twr_v287 = 64ULL;
    __twr_v288 = _mng_string284 + __twr_v287;
    __twr_v289 = *(uint64_t*)(__twr_v288);
    __twr_v290 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v285)(__twr_v286, __twr_v289);
    _mng_target291 = __twr_v290;
    if (_mng_target291) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v292 = (uint64_t)(&LexTokenError);
    __twr_v293 = (uint64_t)(&_mng_token274);
    __twr_v294 = (uint64_t)(&"Target not defined");
    __twr_v295 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v293, __twr_v294, __twr_v295, __twr_v295, __twr_v295);
    __twr_l31:;
    __twr_v296 = (uint64_t)(&BtCurrentTarget);
    __twr_v297 = *(uint64_t*)(__twr_v296);
    __twr_v298 = 488ULL;
    __twr_v299 = __twr_v297 + __twr_v298;
    _mng_head300 = __twr_v299;
    __twr_v301 = *(uint64_t*)(_mng_head300);
    _mng_listentry302 = __twr_v301;
    if (_mng_head300 == _mng_listentry302) { goto __twr_l34; } else { goto __twr_l33; }
    __twr_l33:;
    _mng_entry303 = _mng_listentry302;
    __twr_v304 = 16ULL;
    __twr_v305 = _mng_entry303 + __twr_v304;
    __twr_v306 = *(uint64_t*)(__twr_v305);
    if (__twr_v306 != _mng_target291) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    goto _jkl_epilogue;
    __twr_l36:;
    __twr_v307 = *(uint64_t*)(_mng_listentry302);
    _mng_listentry302 = __twr_v307;
    __twr_l35:;
    if (_mng_head300 != _mng_listentry302) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    __twr_v308 = (uint64_t)(&TlBumpAlloc);
    __twr_v309 = 24ULL;
    __twr_v310 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v308)(__twr_v309, (uint64_t)(&_mng_entry311));
    _mng_status312 = __twr_v310;
    if (!(_mng_status312)) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v313 = (uint64_t)(&TlInternalError);
    __twr_v314 = (uint64_t)(&"Failed to allocate depends list entry");
    __twr_v315 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v313)(__twr_v314, __twr_v315, __twr_v315, __twr_v315);
    __twr_l38:;
    __twr_v316 = 16ULL;
    __twr_v317 = _mng_entry311 + __twr_v316;
    *(uint64_t*)(__twr_v317) = _mng_target291;
    __twr_v318 = (uint64_t)(&BtCurrentTarget);
    __twr_v319 = *(uint64_t*)(__twr_v318);
    __twr_v320 = 488ULL;
    __twr_v321 = __twr_v319 + __twr_v320;
    _mng_listhead322 = __twr_v321;
    _mng_listentry323 = _mng_entry311;
    __twr_v324 = 8ULL;
    __twr_v325 = _mng_listhead322 + __twr_v324;
    __twr_v326 = *(uint64_t*)(__twr_v325);
    _mng_last327 = __twr_v326;
    __twr_v328 = _mng_listentry323 + __twr_v324;
    *(uint64_t*)(__twr_v328) = _mng_last327;
    *(uint64_t*)(_mng_listentry323) = _mng_listhead322;
    *(uint64_t*)(_mng_last327) = _mng_listentry323;
    *(uint64_t*)(__twr_v325) = _mng_listentry323;
    __twr_l28:;
    _jkl_epilogue:;
}
void BtTargetInfoSources() {
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t _mng_token331[4];
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t _mng_string341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t _mng_entry354;
    uint64_t _mng_status355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t _mng_filepath361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t _mng_listhead379;
    uint64_t _mng_listentry380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t _mng_last384;
    uint64_t __twr_v385;
    __twr_v329 = (uint64_t)(&LexMatchToken);
    __twr_v330 = (uint64_t)(&_mng_token331);
    __twr_v332 = 4ULL;
    __twr_v333 = 0ULL;
    __twr_v334 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v329)(__twr_v330, __twr_v332, __twr_v333);
    if (__twr_v334) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v335 = (uint64_t)(&LexTokenError);
    __twr_v336 = (uint64_t)(&_mng_token331);
    __twr_v337 = (uint64_t)(&"Expected a string");
    __twr_v338 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v335)(__twr_v336, __twr_v337, __twr_v338, __twr_v338, __twr_v338);
    __twr_l41:;
    __twr_v339 = (uint64_t)(&_mng_token331);
    __twr_v340 = *(uint64_t*)(__twr_v339);
    _mng_string341 = __twr_v340;
    __twr_v342 = (uint64_t)(&BtCurrentTarget);
    __twr_v343 = *(uint64_t*)(__twr_v342);
    __twr_v344 = 617ULL;
    __twr_v345 = __twr_v343 + __twr_v344;
    __twr_v346 = *(uint8_t*)(__twr_v345);
    if (__twr_v346) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v347 = (uint64_t)(&LexTokenError);
    __twr_v348 = (uint64_t)(&_mng_token331);
    __twr_v349 = (uint64_t)(&"Sourceful target needs FILE name");
    __twr_v350 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v347)(__twr_v348, __twr_v349, __twr_v350, __twr_v350, __twr_v350);
    __twr_l43:;
    __twr_v351 = (uint64_t)(&TlBumpAlloc);
    __twr_v352 = 104ULL;
    __twr_v353 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v351)(__twr_v352, (uint64_t)(&_mng_entry354));
    _mng_status355 = __twr_v353;
    if (!(_mng_status355)) { goto __twr_l45; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v356 = (uint64_t)(&TlInternalError);
    __twr_v357 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v358 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v356)(__twr_v357, __twr_v358, __twr_v358, __twr_v358);
    __twr_l45:;
    __twr_v359 = 16ULL;
    __twr_v360 = _mng_entry354 + __twr_v359;
    _mng_filepath361 = __twr_v360;
    __twr_v362 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v362)(_mng_filepath361);
    __twr_v363 = (uint64_t)(&BtParseStandardPath);
    __twr_v364 = 48ULL;
    __twr_v365 = _mng_string341 + __twr_v364;
    __twr_v366 = (uint64_t)(&_mng_token331);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v363)(__twr_v365, _mng_filepath361, __twr_v366);
    __twr_v367 = (uint64_t)(&TlIsPathDirectory);
    __twr_v368 = _mng_filepath361 + __twr_v359;
    __twr_v369 = *(uint64_t*)(__twr_v368);
    __twr_v370 = ((uint64_t (*)(uint64_t))__twr_v367)(__twr_v369);
    if (__twr_v370) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v371 = (uint64_t)(&LexTokenError);
    __twr_v372 = (uint64_t)(&_mng_token331);
    __twr_v373 = (uint64_t)(&"Doesn't exist or not a directory");
    __twr_v374 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v371)(__twr_v372, __twr_v373, __twr_v374, __twr_v374, __twr_v374);
    __twr_l47:;
    __twr_v375 = (uint64_t)(&BtCurrentTarget);
    __twr_v376 = *(uint64_t*)(__twr_v375);
    __twr_v377 = 504ULL;
    __twr_v378 = __twr_v376 + __twr_v377;
    _mng_listhead379 = __twr_v378;
    _mng_listentry380 = _mng_entry354;
    __twr_v381 = 8ULL;
    __twr_v382 = _mng_listhead379 + __twr_v381;
    __twr_v383 = *(uint64_t*)(__twr_v382);
    _mng_last384 = __twr_v383;
    __twr_v385 = _mng_listentry380 + __twr_v381;
    *(uint64_t*)(__twr_v385) = _mng_last384;
    *(uint64_t*)(_mng_listentry380) = _mng_listhead379;
    *(uint64_t*)(_mng_last384) = _mng_listentry380;
    *(uint64_t*)(__twr_v382) = _mng_listentry380;
    __twr_l40:;
    _jkl_epilogue:;
}
void BtTargetInfoJklInclude() {
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t _mng_token388[4];
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t _mng_string398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t _mng_filepath401[11];
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    __twr_v386 = (uint64_t)(&LexMatchToken);
    __twr_v387 = (uint64_t)(&_mng_token388);
    __twr_v389 = 4ULL;
    __twr_v390 = 0ULL;
    __twr_v391 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v386)(__twr_v387, __twr_v389, __twr_v390);
    if (__twr_v391) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v392 = (uint64_t)(&LexTokenError);
    __twr_v393 = (uint64_t)(&_mng_token388);
    __twr_v394 = (uint64_t)(&"Expected a string");
    __twr_v395 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v392)(__twr_v393, __twr_v394, __twr_v395, __twr_v395, __twr_v395);
    __twr_l50:;
    __twr_v396 = (uint64_t)(&_mng_token388);
    __twr_v397 = *(uint64_t*)(__twr_v396);
    _mng_string398 = __twr_v397;
    __twr_v399 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v400 = (uint64_t)(&_mng_filepath401);
    ((void (*)(uint64_t))__twr_v399)(__twr_v400);
    __twr_v402 = (uint64_t)(&BtParseStandardPath);
    __twr_v403 = 48ULL;
    __twr_v404 = _mng_string398 + __twr_v403;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v402)(__twr_v404, __twr_v400, __twr_v396);
    __twr_v405 = (uint64_t)(&TlIsPathDirectory);
    __twr_v406 = 16ULL;
    __twr_v407 = __twr_v400 + __twr_v406;
    __twr_v408 = *(uint64_t*)(__twr_v407);
    __twr_v409 = ((uint64_t (*)(uint64_t))__twr_v405)(__twr_v408);
    if (__twr_v409) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v410 = (uint64_t)(&LexTokenError);
    __twr_v411 = (uint64_t)(&_mng_token388);
    __twr_v412 = (uint64_t)(&"Doesn't exist or not a directory");
    __twr_v413 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v410)(__twr_v411, __twr_v412, __twr_v413, __twr_v413, __twr_v413);
    __twr_l52:;
    __twr_v414 = (uint64_t)(&BtCurrentTarget);
    __twr_v415 = *(uint64_t*)(__twr_v414);
    __twr_v416 = 400ULL;
    __twr_v417 = __twr_v415 + __twr_v416;
    __twr_v418 = *(uint64_t*)(__twr_v417);
    if (!(__twr_v418)) { goto __twr_l54; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v419 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v420 = (uint64_t)(&BtCurrentTarget);
    __twr_v421 = *(uint64_t*)(__twr_v420);
    __twr_v422 = 400ULL;
    __twr_v423 = __twr_v421 + __twr_v422;
    __twr_v424 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v419)(__twr_v423, __twr_v424);
    __twr_l54:;
    __twr_v425 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v426 = (uint64_t)(&BtCurrentTarget);
    __twr_v427 = *(uint64_t*)(__twr_v426);
    __twr_v428 = 400ULL;
    __twr_v429 = __twr_v427 + __twr_v428;
    __twr_v430 = (uint64_t)(&_mng_filepath401);
    __twr_v431 = 16ULL;
    __twr_v432 = __twr_v430 + __twr_v431;
    __twr_v433 = *(uint64_t*)(__twr_v432);
    __twr_v434 = *(uint64_t*)(__twr_v430);
    __twr_v435 = 1ULL;
    __twr_v436 = __twr_v434 - __twr_v435;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v425)(__twr_v429, __twr_v433, __twr_v436);
    __twr_v437 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v437)(__twr_v430);
    __twr_l49:;
    _jkl_epilogue:;
}
void BtTargetInfoLinkOpt() {
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t _mng_token440[4];
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t _mng_string450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t _mng_str453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    __twr_v438 = (uint64_t)(&LexMatchToken);
    __twr_v439 = (uint64_t)(&_mng_token440);
    __twr_v441 = 4ULL;
    __twr_v442 = 0ULL;
    __twr_v443 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v438)(__twr_v439, __twr_v441, __twr_v442);
    if (__twr_v443) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v444 = (uint64_t)(&LexTokenError);
    __twr_v445 = (uint64_t)(&_mng_token440);
    __twr_v446 = (uint64_t)(&"Expected a string");
    __twr_v447 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v444)(__twr_v445, __twr_v446, __twr_v447, __twr_v447, __twr_v447);
    __twr_l57:;
    __twr_v448 = (uint64_t)(&_mng_token440);
    __twr_v449 = *(uint64_t*)(__twr_v448);
    _mng_string450 = __twr_v449;
    __twr_v451 = 48ULL;
    __twr_v452 = _mng_string450 + __twr_v451;
    _mng_str453 = __twr_v452;
    __twr_v454 = (uint64_t)(&BtCurrentTarget);
    __twr_v455 = *(uint64_t*)(__twr_v454);
    __twr_v456 = __twr_v455 + __twr_v451;
    __twr_v457 = *(uint64_t*)(__twr_v456);
    if (!(__twr_v457)) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v458 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v459 = (uint64_t)(&BtCurrentTarget);
    __twr_v460 = *(uint64_t*)(__twr_v459);
    __twr_v461 = 48ULL;
    __twr_v462 = __twr_v460 + __twr_v461;
    __twr_v463 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v458)(__twr_v462, __twr_v463);
    __twr_l59:;
    __twr_v464 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v465 = (uint64_t)(&BtCurrentTarget);
    __twr_v466 = *(uint64_t*)(__twr_v465);
    __twr_v467 = 48ULL;
    __twr_v468 = __twr_v466 + __twr_v467;
    __twr_v469 = 16ULL;
    __twr_v470 = _mng_str453 + __twr_v469;
    __twr_v471 = *(uint64_t*)(__twr_v470);
    __twr_v472 = *(uint64_t*)(_mng_str453);
    __twr_v473 = 1ULL;
    __twr_v474 = __twr_v472 - __twr_v473;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v464)(__twr_v468, __twr_v471, __twr_v474);
    __twr_l56:;
    _jkl_epilogue:;
}
void BtTargetInfoJklOpt() {
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t _mng_token477[4];
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t _mng_string487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t _mng_str490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    __twr_v475 = (uint64_t)(&LexMatchToken);
    __twr_v476 = (uint64_t)(&_mng_token477);
    __twr_v478 = 4ULL;
    __twr_v479 = 0ULL;
    __twr_v480 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v475)(__twr_v476, __twr_v478, __twr_v479);
    if (__twr_v480) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v481 = (uint64_t)(&LexTokenError);
    __twr_v482 = (uint64_t)(&_mng_token477);
    __twr_v483 = (uint64_t)(&"Expected a string");
    __twr_v484 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v481)(__twr_v482, __twr_v483, __twr_v484, __twr_v484, __twr_v484);
    __twr_l62:;
    __twr_v485 = (uint64_t)(&_mng_token477);
    __twr_v486 = *(uint64_t*)(__twr_v485);
    _mng_string487 = __twr_v486;
    __twr_v488 = 48ULL;
    __twr_v489 = _mng_string487 + __twr_v488;
    _mng_str490 = __twr_v489;
    __twr_v491 = (uint64_t)(&BtCurrentTarget);
    __twr_v492 = *(uint64_t*)(__twr_v491);
    __twr_v493 = 312ULL;
    __twr_v494 = __twr_v492 + __twr_v493;
    __twr_v495 = *(uint64_t*)(__twr_v494);
    if (!(__twr_v495)) { goto __twr_l64; } else { goto __twr_l65; }
    __twr_l65:;
    __twr_v496 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v497 = (uint64_t)(&BtCurrentTarget);
    __twr_v498 = *(uint64_t*)(__twr_v497);
    __twr_v499 = 312ULL;
    __twr_v500 = __twr_v498 + __twr_v499;
    __twr_v501 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v496)(__twr_v500, __twr_v501);
    __twr_l64:;
    __twr_v502 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v503 = (uint64_t)(&BtCurrentTarget);
    __twr_v504 = *(uint64_t*)(__twr_v503);
    __twr_v505 = 312ULL;
    __twr_v506 = __twr_v504 + __twr_v505;
    __twr_v507 = 16ULL;
    __twr_v508 = _mng_str490 + __twr_v507;
    __twr_v509 = *(uint64_t*)(__twr_v508);
    __twr_v510 = *(uint64_t*)(_mng_str490);
    __twr_v511 = 1ULL;
    __twr_v512 = __twr_v510 - __twr_v511;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v502)(__twr_v506, __twr_v509, __twr_v512);
    __twr_l61:;
    _jkl_epilogue:;
}
void BtTargetInfoLink() {
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t _mng_token515[4];
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t _mng_string525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t _mng_filepath528[11];
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    __twr_v513 = (uint64_t)(&LexMatchToken);
    __twr_v514 = (uint64_t)(&_mng_token515);
    __twr_v516 = 4ULL;
    __twr_v517 = 0ULL;
    __twr_v518 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v513)(__twr_v514, __twr_v516, __twr_v517);
    if (__twr_v518) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v519 = (uint64_t)(&LexTokenError);
    __twr_v520 = (uint64_t)(&_mng_token515);
    __twr_v521 = (uint64_t)(&"Expected a string");
    __twr_v522 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v519)(__twr_v520, __twr_v521, __twr_v522, __twr_v522, __twr_v522);
    __twr_l67:;
    __twr_v523 = (uint64_t)(&_mng_token515);
    __twr_v524 = *(uint64_t*)(__twr_v523);
    _mng_string525 = __twr_v524;
    __twr_v526 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v527 = (uint64_t)(&_mng_filepath528);
    ((void (*)(uint64_t))__twr_v526)(__twr_v527);
    __twr_v529 = (uint64_t)(&BtParseStandardPath);
    __twr_v530 = 48ULL;
    __twr_v531 = _mng_string525 + __twr_v530;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v529)(__twr_v531, __twr_v527, __twr_v523);
    __twr_v532 = (uint64_t)(&BtCurrentTarget);
    __twr_v533 = *(uint64_t*)(__twr_v532);
    __twr_v534 = 136ULL;
    __twr_v535 = __twr_v533 + __twr_v534;
    __twr_v536 = *(uint64_t*)(__twr_v535);
    if (!(__twr_v536)) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v537 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v538 = (uint64_t)(&BtCurrentTarget);
    __twr_v539 = *(uint64_t*)(__twr_v538);
    __twr_v540 = 136ULL;
    __twr_v541 = __twr_v539 + __twr_v540;
    __twr_v542 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v537)(__twr_v541, __twr_v542);
    __twr_l69:;
    __twr_v543 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v544 = (uint64_t)(&BtCurrentTarget);
    __twr_v545 = *(uint64_t*)(__twr_v544);
    __twr_v546 = 136ULL;
    __twr_v547 = __twr_v545 + __twr_v546;
    __twr_v548 = (uint64_t)(&_mng_filepath528);
    __twr_v549 = 16ULL;
    __twr_v550 = __twr_v548 + __twr_v549;
    __twr_v551 = *(uint64_t*)(__twr_v550);
    __twr_v552 = *(uint64_t*)(__twr_v548);
    __twr_v553 = 1ULL;
    __twr_v554 = __twr_v552 - __twr_v553;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v543)(__twr_v547, __twr_v551, __twr_v554);
    __twr_v555 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v555)(__twr_v548);
    __twr_l66:;
    _jkl_epilogue:;
}
void BtTargetInfoDyLink() {
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t _mng_token558[4];
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t _mng_rtstring569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t _mng_ctpathtoken572[4];
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t _mng_ctstring581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t _mng_filepath584[11];
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    __twr_v556 = (uint64_t)(&LexMatchToken);
    __twr_v557 = (uint64_t)(&_mng_token558);
    __twr_v559 = 4ULL;
    __twr_v560 = 0ULL;
    __twr_v561 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v556)(__twr_v557, __twr_v559, __twr_v560);
    if (__twr_v561) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v562 = (uint64_t)(&LexTokenError);
    __twr_v563 = (uint64_t)(&_mng_token558);
    __twr_v564 = (uint64_t)(&"Expected a string");
    __twr_v565 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v562)(__twr_v563, __twr_v564, __twr_v565, __twr_v565, __twr_v565);
    __twr_l72:;
    __twr_v566 = (uint64_t)(&_mng_token558);
    __twr_v567 = 0ULL;
    __twr_v568 = *(uint64_t*)(__twr_v566);
    _mng_rtstring569 = __twr_v568;
    __twr_v570 = (uint64_t)(&LexMatchToken);
    __twr_v571 = (uint64_t)(&_mng_ctpathtoken572);
    __twr_v573 = 4ULL;
    __twr_v574 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v570)(__twr_v571, __twr_v573, __twr_v567);
    if (__twr_v574) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v575 = (uint64_t)(&LexTokenError);
    __twr_v576 = (uint64_t)(&_mng_ctpathtoken572);
    __twr_v577 = (uint64_t)(&"Expected a string");
    __twr_v578 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v575)(__twr_v576, __twr_v577, __twr_v578, __twr_v578, __twr_v578);
    __twr_l74:;
    __twr_v579 = (uint64_t)(&_mng_ctpathtoken572);
    __twr_v580 = *(uint64_t*)(__twr_v579);
    _mng_ctstring581 = __twr_v580;
    __twr_v582 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v583 = (uint64_t)(&_mng_filepath584);
    ((void (*)(uint64_t))__twr_v582)(__twr_v583);
    __twr_v585 = (uint64_t)(&BtParseStandardPath);
    __twr_v586 = 48ULL;
    __twr_v587 = _mng_ctstring581 + __twr_v586;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v585)(__twr_v587, __twr_v583, __twr_v579);
    __twr_v588 = (uint64_t)(&BtCurrentTarget);
    __twr_v589 = *(uint64_t*)(__twr_v588);
    __twr_v590 = 224ULL;
    __twr_v591 = __twr_v589 + __twr_v590;
    __twr_v592 = *(uint64_t*)(__twr_v591);
    if (!(__twr_v592)) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v593 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v594 = (uint64_t)(&BtCurrentTarget);
    __twr_v595 = *(uint64_t*)(__twr_v594);
    __twr_v596 = 224ULL;
    __twr_v597 = __twr_v595 + __twr_v596;
    __twr_v598 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v593)(__twr_v597, __twr_v598);
    __twr_l76:;
    __twr_v599 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v600 = (uint64_t)(&BtCurrentTarget);
    __twr_v601 = *(uint64_t*)(__twr_v600);
    __twr_v602 = 224ULL;
    __twr_v603 = __twr_v601 + __twr_v602;
    __twr_v604 = 48ULL;
    __twr_v605 = _mng_rtstring569 + __twr_v604;
    __twr_v606 = 16ULL;
    __twr_v607 = 64ULL;
    __twr_v608 = _mng_rtstring569 + __twr_v607;
    __twr_v609 = *(uint64_t*)(__twr_v608);
    __twr_v610 = *(uint64_t*)(__twr_v605);
    __twr_v611 = 1ULL;
    __twr_v612 = __twr_v610 - __twr_v611;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v599)(__twr_v603, __twr_v609, __twr_v612);
    __twr_v613 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v614 = *(uint64_t*)(__twr_v600);
    __twr_v615 = __twr_v614 + __twr_v602;
    __twr_v616 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v613)(__twr_v615, __twr_v616);
    __twr_v617 = *(uint64_t*)(__twr_v600);
    __twr_v618 = __twr_v617 + __twr_v602;
    __twr_v619 = (uint64_t)(&_mng_filepath584);
    __twr_v620 = __twr_v619 + __twr_v606;
    __twr_v621 = *(uint64_t*)(__twr_v620);
    __twr_v622 = *(uint64_t*)(__twr_v619);
    __twr_v623 = __twr_v622 - __twr_v611;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v599)(__twr_v618, __twr_v621, __twr_v623);
    __twr_v624 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v624)(__twr_v619);
    __twr_l71:;
    _jkl_epilogue:;
}
uint64_t BtTargetInfoSpecifiers[8] = {
    (uint64_t)(&BtTargetInfoFile),
    (uint64_t)(&BtTargetInfoDepend),
    (uint64_t)(&BtTargetInfoSources),
    (uint64_t)(&BtTargetInfoJklInclude),
    (uint64_t)(&BtTargetInfoLinkOpt),
    (uint64_t)(&BtTargetInfoJklOpt),
    (uint64_t)(&BtTargetInfoLink),
    (uint64_t)(&BtTargetInfoDyLink),
};
uint64_t BtParseTarget() {
    uint64_t _jkl_retv;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t _mng_token627[4];
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t _mng_nametoken644[4];
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t _mng_namestring654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t _mng_target668;
    uint64_t _mng_status669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t _mng_listhead693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t _mng_listhead698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    __twr_v625 = (uint64_t)(&LexGetToken);
    __twr_v626 = (uint64_t)(&_mng_token627);
    ((void (*)(uint64_t))__twr_v625)(__twr_v626);
    __twr_v628 = 24ULL;
    __twr_v629 = __twr_v626 + __twr_v628;
    __twr_v630 = *(uint8_t*)(__twr_v629);
    __twr_v631 = 6ULL;
    if (__twr_v630 != __twr_v631) { goto __twr_l79; } else { goto __twr_l80; }
    __twr_l80:;
    __twr_v632 = 0ULL;
    _jkl_retv = __twr_v632;
    goto _jkl_epilogue;
    __twr_l79:;
    __twr_v633 = (uint64_t)(&_mng_token627);
    __twr_v634 = 24ULL;
    __twr_v635 = __twr_v633 + __twr_v634;
    __twr_v636 = *(uint8_t*)(__twr_v635);
    __twr_v637 = 1ULL;
    if (__twr_v636 == __twr_v637) { goto __twr_l81; } else { goto __twr_l82; }
    __twr_l82:;
    __twr_v638 = (uint64_t)(&LexTokenError);
    __twr_v639 = (uint64_t)(&_mng_token627);
    __twr_v640 = (uint64_t)(&"Expected TARGET");
    __twr_v641 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v638)(__twr_v639, __twr_v640, __twr_v641, __twr_v641, __twr_v641);
    __twr_l81:;
    __twr_v642 = (uint64_t)(&LexMatchToken);
    __twr_v643 = (uint64_t)(&_mng_nametoken644);
    __twr_v645 = 4ULL;
    __twr_v646 = 0ULL;
    __twr_v647 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v642)(__twr_v643, __twr_v645, __twr_v646);
    if (__twr_v647) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v648 = (uint64_t)(&LexTokenError);
    __twr_v649 = (uint64_t)(&_mng_nametoken644);
    __twr_v650 = (uint64_t)(&"Expected a string");
    __twr_v651 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v648)(__twr_v649, __twr_v650, __twr_v651, __twr_v651, __twr_v651);
    __twr_l83:;
    __twr_v652 = (uint64_t)(&_mng_nametoken644);
    __twr_v653 = *(uint64_t*)(__twr_v652);
    _mng_namestring654 = __twr_v653;
    __twr_v655 = (uint64_t)(&TlLookupHashTable);
    __twr_v656 = (uint64_t)(&BtTargetHashTable);
    __twr_v657 = 64ULL;
    __twr_v658 = _mng_namestring654 + __twr_v657;
    __twr_v659 = *(uint64_t*)(__twr_v658);
    __twr_v660 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v655)(__twr_v656, __twr_v659);
    if (!(__twr_v660)) { goto __twr_l85; } else { goto __twr_l86; }
    __twr_l86:;
    __twr_v661 = (uint64_t)(&LexTokenError);
    __twr_v662 = (uint64_t)(&_mng_nametoken644);
    __twr_v663 = (uint64_t)(&"Target already defined");
    __twr_v664 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v661)(__twr_v662, __twr_v663, __twr_v664, __twr_v664, __twr_v664);
    __twr_l85:;
    __twr_v665 = (uint64_t)(&TlBumpAlloc);
    __twr_v666 = 618ULL;
    __twr_v667 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v665)(__twr_v666, (uint64_t)(&_mng_target668));
    _mng_status669 = __twr_v667;
    if (!(_mng_status669)) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v670 = (uint64_t)(&TlInternalError);
    __twr_v671 = (uint64_t)(&"Failed to allocate target");
    __twr_v672 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v670)(__twr_v671, __twr_v672, __twr_v672, __twr_v672);
    __twr_l87:;
    __twr_v673 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v674 = 48ULL;
    __twr_v675 = _mng_target668 + __twr_v674;
    ((void (*)(uint64_t))__twr_v673)(__twr_v675);
    __twr_v676 = 312ULL;
    __twr_v677 = _mng_target668 + __twr_v676;
    ((void (*)(uint64_t))__twr_v673)(__twr_v677);
    __twr_v678 = 400ULL;
    __twr_v679 = _mng_target668 + __twr_v678;
    ((void (*)(uint64_t))__twr_v673)(__twr_v679);
    __twr_v680 = 136ULL;
    __twr_v681 = _mng_target668 + __twr_v680;
    ((void (*)(uint64_t))__twr_v673)(__twr_v681);
    __twr_v682 = 224ULL;
    __twr_v683 = _mng_target668 + __twr_v682;
    ((void (*)(uint64_t))__twr_v673)(__twr_v683);
    __twr_v684 = 520ULL;
    __twr_v685 = _mng_target668 + __twr_v684;
    ((void (*)(uint64_t))__twr_v673)(__twr_v685);
    __twr_v686 = 0ULL;
    __twr_v687 = 616ULL;
    __twr_v688 = _mng_target668 + __twr_v687;
    *(uint8_t*)(__twr_v688) = __twr_v686;
    __twr_v689 = 617ULL;
    __twr_v690 = _mng_target668 + __twr_v689;
    *(uint8_t*)(__twr_v690) = __twr_v686;
    __twr_v691 = 488ULL;
    __twr_v692 = _mng_target668 + __twr_v691;
    _mng_listhead693 = __twr_v692;
    __twr_v694 = 8ULL;
    __twr_v695 = _mng_listhead693 + __twr_v694;
    *(uint64_t*)(__twr_v695) = _mng_listhead693;
    *(uint64_t*)(_mng_listhead693) = _mng_listhead693;
    __twr_v696 = 504ULL;
    __twr_v697 = _mng_target668 + __twr_v696;
    _mng_listhead698 = __twr_v697;
    __twr_v699 = _mng_listhead698 + __twr_v694;
    *(uint64_t*)(__twr_v699) = _mng_listhead698;
    *(uint64_t*)(_mng_listhead698) = _mng_listhead698;
    __twr_v700 = (uint64_t)(&BtCurrentTarget);
    *(uint64_t*)(__twr_v700) = _mng_target668;
    __twr_v701 = (uint64_t)(&LexMatchToken);
    __twr_v702 = (uint64_t)(&_mng_token627);
    __twr_v703 = 3ULL;
    __twr_v704 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v701)(__twr_v702, __twr_v703, __twr_v686);
    if (__twr_v704) { goto __twr_l90; } else { goto __twr_l89; }
    __twr_l89:;
    __twr_v705 = (uint64_t)(&LexMatchToken);
    __twr_v706 = (uint64_t)(&_mng_token627);
    __twr_v707 = 2ULL;
    __twr_v708 = 0ULL;
    __twr_v709 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v705)(__twr_v706, __twr_v707, __twr_v708);
    if (__twr_v709) { goto __twr_l92; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v710 = (uint64_t)(&LexTokenError);
    __twr_v711 = (uint64_t)(&_mng_token627);
    __twr_v712 = (uint64_t)(&"Expected a target info specifier");
    __twr_v713 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v710)(__twr_v711, __twr_v712, __twr_v713, __twr_v713, __twr_v713);
    __twr_l92:;
    __twr_v714 = (uint64_t)(&BtTargetInfoSpecifiers);
    __twr_v715 = (uint64_t)(&_mng_token627);
    __twr_v716 = 25ULL;
    __twr_v717 = __twr_v715 + __twr_v716;
    __twr_v718 = *(uint8_t*)(__twr_v717);
    __twr_v719 = 3ULL;
    __twr_v720 = __twr_v718 << __twr_v719;
    __twr_v721 = __twr_v714 + __twr_v720;
    __twr_v722 = *(uint64_t*)(__twr_v721);
    ((void (*)())__twr_v722)();
    __twr_l91:;
    __twr_v723 = (uint64_t)(&LexMatchToken);
    __twr_v724 = (uint64_t)(&_mng_token627);
    __twr_v725 = 3ULL;
    __twr_v726 = 0ULL;
    __twr_v727 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v723)(__twr_v724, __twr_v725, __twr_v726);
    if (!(__twr_v727)) { goto __twr_l89; } else { goto __twr_l90; }
    __twr_l90:;
    __twr_v728 = (uint64_t)(&TlInsertHashTable);
    __twr_v729 = (uint64_t)(&BtTargetHashTable);
    __twr_v730 = 64ULL;
    __twr_v731 = _mng_namestring654 + __twr_v730;
    __twr_v732 = *(uint64_t*)(__twr_v731);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v728)(__twr_v729, _mng_target668, __twr_v732);
    __twr_v733 = 1ULL;
    _jkl_retv = __twr_v733;
    goto _jkl_epilogue;
    __twr_l78:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtParse() {
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t _mng_target744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    __twr_v734 = (uint64_t)(&TlInitializeHashTable);
    __twr_v735 = (uint64_t)(&BtTargetHashTable);
    ((void (*)(uint64_t))__twr_v734)(__twr_v735);
    __twr_v736 = (uint64_t)(&BtParseTarget);
    __twr_v737 = ((uint64_t (*)())__twr_v736)();
    if (!(__twr_v737)) { goto __twr_l96; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_l97:;
    __twr_v738 = (uint64_t)(&BtParseTarget);
    __twr_v739 = ((uint64_t (*)())__twr_v738)();
    if (__twr_v739) { goto __twr_l95; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v740 = (uint64_t)(&TlLookupHashTable);
    __twr_v741 = (uint64_t)(&BtTargetHashTable);
    __twr_v742 = (uint64_t)(&FeTargetName);
    __twr_v743 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v740)(__twr_v741, __twr_v742);
    _mng_target744 = __twr_v743;
    if (_mng_target744) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v745 = (uint64_t)(&TlUserError);
    __twr_v746 = (uint64_t)(&"Target not defined");
    __twr_v747 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v745)(__twr_v746, __twr_v747, __twr_v747, __twr_v747);
    __twr_l98:;
    __twr_v748 = (uint64_t)(&BtSelectedTarget);
    *(uint64_t*)(__twr_v748) = _mng_target744;
    __twr_l94:;
    _jkl_epilogue:;
}

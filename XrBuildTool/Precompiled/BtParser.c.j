#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern void TlInitializeZone(uint64_t _mng_zone88, uint64_t _mng_blocksize89);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone90);
extern void TlFreeToZone(uint64_t _mng_zone91, uint64_t _mng_block92);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant93);
extern void TlPunchValue(uint64_t _mng_ptr94, uint64_t _mng_value95, uint64_t _mng_bytes96);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg97);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename98, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock99, uint64_t _mng_filepath100);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope101);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg102);
extern void LexExpandMacro(uint64_t _mng_macro103, uint64_t _mng_token104);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream105, uint64_t _mng_macro106);
extern void LexUninitializeStream(uint64_t _mng_stream107);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream108);
extern void LexPushStream(uint64_t _mng_stream109);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream110, uint64_t _mng_fileblock111, uint64_t _mng_handle112);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock113, uint64_t _mng_handle114);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest115, uint64_t _mng_src116);
extern void LexGetToken(uint64_t _mng_token117);
extern void LexPutbackToken(uint64_t _mng_token118);
extern uint64_t LexMatchToken(uint64_t _mng_token119, uint64_t _mng_type120, uint64_t _mng_subtype121);
extern void LexStreamError(uint64_t _mng_str122, uint64_t _mng_err1123, uint64_t _mng_err2124, uint64_t _mng_err3125);
extern void LexTokenError(uint64_t _mng_token126, uint64_t _mng_str127, uint64_t _mng_err1128, uint64_t _mng_err2129, uint64_t _mng_err3130);
extern uint64_t LexCrunchNumber(uint64_t _mng_token131, uint64_t _mng_buffer132);
uint64_t BtTargetHashTable[196];
uint64_t BtCurrentTarget;
extern uint64_t FeTargetName[32];
uint64_t BtSelectedTarget;
void BtParseStandardPath(uint64_t _mng_stdpath133, uint64_t _mng_fullpath134, uint64_t _mng_errtoken135) {
    uint64_t __twr_v136;
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    uint64_t _mng_stdpathstr139;
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t _mng_macro168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t _mng_macro198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    __twr_v136 = 16ULL;
    __twr_v137 = _mng_stdpath133 + __twr_v136;
    __twr_v138 = *(uint64_t*)(__twr_v137);
    _mng_stdpathstr139 = __twr_v138;
    __twr_v140 = *(uint8_t*)(_mng_stdpathstr139);
    if (__twr_v140) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v141 = (uint64_t)(&LexTokenError);
    __twr_v142 = (uint64_t)(&"Empty path string");
    __twr_v143 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v141)(_mng_errtoken135, __twr_v142, __twr_v143, __twr_v143, __twr_v143);
    __twr_l2:;
    __twr_v144 = *(uint8_t*)(_mng_stdpathstr139);
    __twr_v145 = 47ULL;
    if (__twr_v144 != __twr_v145) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v146 = (uint64_t)(&LexTokenError);
    __twr_v147 = (uint64_t)(&"Expected a relative path, found an absolute path");
    __twr_v148 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v146)(_mng_errtoken135, __twr_v147, __twr_v148, __twr_v148, __twr_v148);
    __twr_l4:;
    __twr_v149 = *(uint8_t*)(_mng_stdpathstr139);
    __twr_v150 = 60ULL;
    if (__twr_v149 == __twr_v150) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v151 = (uint64_t)(&TlCopyParentPath);
    __twr_v152 = (uint64_t)(&LexCurrentStream);
    __twr_v153 = *(uint64_t*)(__twr_v152);
    __twr_v154 = 8ULL;
    __twr_v155 = __twr_v153 + __twr_v154;
    __twr_v156 = *(uint64_t*)(__twr_v155);
    __twr_v157 = 48ULL;
    __twr_v158 = __twr_v156 + __twr_v157;
    ((void (*)(uint64_t, uint64_t))__twr_v151)(__twr_v158, _mng_fullpath134);
    goto __twr_l6;
    __twr_l8:;
    __twr_v159 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v160 = (uint64_t)(&"<sdk>/");
    __twr_v161 = 5ULL;
    __twr_v162 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v159)(_mng_stdpathstr139, __twr_v160, __twr_v161);
    if (__twr_v162) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v163 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v164 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v165 = *(uint64_t*)(__twr_v164);
    __twr_v166 = (uint64_t)(&"SDK_BASE");
    __twr_v167 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v163)(__twr_v165, __twr_v166);
    _mng_macro168 = __twr_v167;
    if (_mng_macro168) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v169 = (uint64_t)(&LexTokenError);
    __twr_v170 = (uint64_t)(&"SDK_BASE isn't defined");
    __twr_v171 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v169)(_mng_errtoken135, __twr_v170, __twr_v171, __twr_v171, __twr_v171);
    __twr_l11:;
    __twr_v172 = 248ULL;
    __twr_v173 = _mng_macro168 + __twr_v172;
    __twr_v174 = *(uint8_t*)(__twr_v173);
    if (!(__twr_v174)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v175 = (uint64_t)(&LexTokenError);
    __twr_v176 = (uint64_t)(&"SDK_BASE is a function macro for some reason");
    __twr_v177 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v175)(_mng_errtoken135, __twr_v176, __twr_v177, __twr_v177, __twr_v177);
    __twr_l13:;
    __twr_v178 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v179 = 80ULL;
    __twr_v180 = _mng_macro168 + __twr_v179;
    __twr_v181 = 96ULL;
    __twr_v182 = _mng_macro168 + __twr_v181;
    __twr_v183 = *(uint64_t*)(__twr_v182);
    __twr_v184 = 1ULL;
    __twr_v185 = *(uint64_t*)(__twr_v180);
    __twr_v186 = __twr_v185 - __twr_v184;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v178)(_mng_fullpath134, __twr_v183, __twr_v186);
    __twr_v187 = 5ULL;
    __twr_v188 = _mng_stdpathstr139 + __twr_v187;
    _mng_stdpathstr139 = __twr_v188;
    goto __twr_l6;
    __twr_l10:;
    __twr_v189 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v190 = (uint64_t)(&"<bld>/");
    __twr_v191 = 5ULL;
    __twr_v192 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v189)(_mng_stdpathstr139, __twr_v190, __twr_v191);
    if (__twr_v192) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v193 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v194 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v195 = *(uint64_t*)(__twr_v194);
    __twr_v196 = (uint64_t)(&"BUILD_BASE");
    __twr_v197 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v193)(__twr_v195, __twr_v196);
    _mng_macro198 = __twr_v197;
    if (_mng_macro198) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v199 = (uint64_t)(&LexTokenError);
    __twr_v200 = (uint64_t)(&"BUILD_BASE isn't defined");
    __twr_v201 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v199)(_mng_errtoken135, __twr_v200, __twr_v201, __twr_v201, __twr_v201);
    __twr_l17:;
    __twr_v202 = 248ULL;
    __twr_v203 = _mng_macro198 + __twr_v202;
    __twr_v204 = *(uint8_t*)(__twr_v203);
    if (!(__twr_v204)) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v205 = (uint64_t)(&LexTokenError);
    __twr_v206 = (uint64_t)(&"BUILD_BASE is a function macro for some reason");
    __twr_v207 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v205)(_mng_errtoken135, __twr_v206, __twr_v207, __twr_v207, __twr_v207);
    __twr_l19:;
    __twr_v208 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v209 = 80ULL;
    __twr_v210 = _mng_macro198 + __twr_v209;
    __twr_v211 = 96ULL;
    __twr_v212 = _mng_macro198 + __twr_v211;
    __twr_v213 = *(uint64_t*)(__twr_v212);
    __twr_v214 = 1ULL;
    __twr_v215 = *(uint64_t*)(__twr_v210);
    __twr_v216 = __twr_v215 - __twr_v214;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v208)(_mng_fullpath134, __twr_v213, __twr_v216);
    __twr_v217 = 5ULL;
    __twr_v218 = _mng_stdpathstr139 + __twr_v217;
    _mng_stdpathstr139 = __twr_v218;
    goto __twr_l6;
    __twr_l16:;
    __twr_v219 = (uint64_t)(&LexTokenError);
    __twr_v220 = (uint64_t)(&"Unknown path prefix");
    __twr_v221 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v219)(_mng_errtoken135, __twr_v220, __twr_v221, __twr_v221, __twr_v221);
    __twr_l6:;
    __twr_v222 = *(uint64_t*)(_mng_fullpath134);
    if (__twr_v222) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v223 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v224 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v223)(_mng_fullpath134, __twr_v224);
    __twr_v225 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v223)(_mng_fullpath134, __twr_v225);
    goto __twr_l21;
    __twr_l23:;
    __twr_v226 = 16ULL;
    __twr_v227 = _mng_fullpath134 + __twr_v226;
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = *(uint64_t*)(_mng_fullpath134);
    __twr_v230 = 1ULL;
    __twr_v231 = __twr_v229 - __twr_v230;
    __twr_v232 = __twr_v228 + __twr_v231;
    __twr_v233 = *(uint8_t*)(__twr_v232);
    __twr_v234 = 47ULL;
    if (__twr_v233 == __twr_v234) { goto __twr_l21; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v235 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v236 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v235)(_mng_fullpath134, __twr_v236);
    __twr_l21:;
    __twr_v237 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v238 = *(uint64_t*)(_mng_stdpath133);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v237)(_mng_fullpath134, _mng_stdpathstr139, __twr_v238);
    __twr_l1:;
    _jkl_epilogue:;
}
void BtTargetInfoFile() {
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t _mng_token241[4];
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t _mng_string251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    __twr_v239 = (uint64_t)(&LexMatchToken);
    __twr_v240 = (uint64_t)(&_mng_token241);
    __twr_v242 = 4ULL;
    __twr_v243 = 0ULL;
    __twr_v244 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v239)(__twr_v240, __twr_v242, __twr_v243);
    if (__twr_v244) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v245 = (uint64_t)(&LexTokenError);
    __twr_v246 = (uint64_t)(&_mng_token241);
    __twr_v247 = (uint64_t)(&"Expected a string");
    __twr_v248 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v245)(__twr_v246, __twr_v247, __twr_v248, __twr_v248, __twr_v248);
    __twr_l26:;
    __twr_v249 = (uint64_t)(&_mng_token241);
    __twr_v250 = *(uint64_t*)(__twr_v249);
    _mng_string251 = __twr_v250;
    __twr_v252 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v253 = (uint64_t)(&BtCurrentTarget);
    __twr_v254 = *(uint64_t*)(__twr_v253);
    __twr_v255 = 520ULL;
    __twr_v256 = __twr_v254 + __twr_v255;
    ((void (*)(uint64_t))__twr_v252)(__twr_v256);
    __twr_v257 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v258 = *(uint64_t*)(__twr_v253);
    __twr_v259 = __twr_v258 + __twr_v255;
    ((void (*)(uint64_t))__twr_v257)(__twr_v259);
    __twr_v260 = (uint64_t)(&BtParseStandardPath);
    __twr_v261 = 48ULL;
    __twr_v262 = _mng_string251 + __twr_v261;
    __twr_v263 = *(uint64_t*)(__twr_v253);
    __twr_v264 = __twr_v263 + __twr_v255;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v260)(__twr_v262, __twr_v264, __twr_v249);
    __twr_l25:;
    _jkl_epilogue:;
}
void BtTargetInfoDepend() {
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t _mng_token267[4];
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_string277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t _mng_target284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t _mng_head293;
    uint64_t __twr_v294;
    uint64_t _mng_listentry295;
    uint64_t _mng_entry296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t _mng_entry304;
    uint64_t _mng_status305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t _mng_listhead315;
    uint64_t _mng_listentry316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t _mng_last320;
    uint64_t __twr_v321;
    __twr_v265 = (uint64_t)(&LexMatchToken);
    __twr_v266 = (uint64_t)(&_mng_token267);
    __twr_v268 = 4ULL;
    __twr_v269 = 0ULL;
    __twr_v270 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v265)(__twr_v266, __twr_v268, __twr_v269);
    if (__twr_v270) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v271 = (uint64_t)(&LexTokenError);
    __twr_v272 = (uint64_t)(&_mng_token267);
    __twr_v273 = (uint64_t)(&"Expected a string");
    __twr_v274 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v271)(__twr_v272, __twr_v273, __twr_v274, __twr_v274, __twr_v274);
    __twr_l29:;
    __twr_v275 = (uint64_t)(&_mng_token267);
    __twr_v276 = *(uint64_t*)(__twr_v275);
    _mng_string277 = __twr_v276;
    __twr_v278 = (uint64_t)(&TlLookupHashTable);
    __twr_v279 = (uint64_t)(&BtTargetHashTable);
    __twr_v280 = 64ULL;
    __twr_v281 = _mng_string277 + __twr_v280;
    __twr_v282 = *(uint64_t*)(__twr_v281);
    __twr_v283 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v278)(__twr_v279, __twr_v282);
    _mng_target284 = __twr_v283;
    if (_mng_target284) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v285 = (uint64_t)(&LexTokenError);
    __twr_v286 = (uint64_t)(&_mng_token267);
    __twr_v287 = (uint64_t)(&"Target not defined");
    __twr_v288 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v286, __twr_v287, __twr_v288, __twr_v288, __twr_v288);
    __twr_l31:;
    __twr_v289 = (uint64_t)(&BtCurrentTarget);
    __twr_v290 = *(uint64_t*)(__twr_v289);
    __twr_v291 = 488ULL;
    __twr_v292 = __twr_v290 + __twr_v291;
    _mng_head293 = __twr_v292;
    __twr_v294 = *(uint64_t*)(_mng_head293);
    _mng_listentry295 = __twr_v294;
    if (_mng_head293 == _mng_listentry295) { goto __twr_l34; } else { goto __twr_l33; }
    __twr_l33:;
    _mng_entry296 = _mng_listentry295;
    __twr_v297 = 16ULL;
    __twr_v298 = _mng_entry296 + __twr_v297;
    __twr_v299 = *(uint64_t*)(__twr_v298);
    if (__twr_v299 != _mng_target284) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    goto _jkl_epilogue;
    __twr_l36:;
    __twr_v300 = *(uint64_t*)(_mng_listentry295);
    _mng_listentry295 = __twr_v300;
    __twr_l35:;
    if (_mng_head293 != _mng_listentry295) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    __twr_v301 = (uint64_t)(&TlBumpAlloc);
    __twr_v302 = 24ULL;
    __twr_v303 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v301)(__twr_v302, (uint64_t)(&_mng_entry304));
    _mng_status305 = __twr_v303;
    if (!(_mng_status305)) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v306 = (uint64_t)(&TlInternalError);
    __twr_v307 = (uint64_t)(&"Failed to allocate depends list entry");
    __twr_v308 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v306)(__twr_v307, __twr_v308, __twr_v308, __twr_v308);
    __twr_l38:;
    __twr_v309 = 16ULL;
    __twr_v310 = _mng_entry304 + __twr_v309;
    *(uint64_t*)(__twr_v310) = _mng_target284;
    __twr_v311 = (uint64_t)(&BtCurrentTarget);
    __twr_v312 = *(uint64_t*)(__twr_v311);
    __twr_v313 = 488ULL;
    __twr_v314 = __twr_v312 + __twr_v313;
    _mng_listhead315 = __twr_v314;
    _mng_listentry316 = _mng_entry304;
    __twr_v317 = 8ULL;
    __twr_v318 = _mng_listhead315 + __twr_v317;
    __twr_v319 = *(uint64_t*)(__twr_v318);
    _mng_last320 = __twr_v319;
    __twr_v321 = _mng_listentry316 + __twr_v317;
    *(uint64_t*)(__twr_v321) = _mng_last320;
    *(uint64_t*)(_mng_listentry316) = _mng_listhead315;
    *(uint64_t*)(_mng_last320) = _mng_listentry316;
    *(uint64_t*)(__twr_v318) = _mng_listentry316;
    __twr_l28:;
    _jkl_epilogue:;
}
void BtTargetInfoSources() {
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t _mng_token324[4];
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t _mng_string334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t _mng_entry338;
    uint64_t _mng_status339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t _mng_filepath345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t _mng_listhead363;
    uint64_t _mng_listentry364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t _mng_last368;
    uint64_t __twr_v369;
    __twr_v322 = (uint64_t)(&LexMatchToken);
    __twr_v323 = (uint64_t)(&_mng_token324);
    __twr_v325 = 4ULL;
    __twr_v326 = 0ULL;
    __twr_v327 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v322)(__twr_v323, __twr_v325, __twr_v326);
    if (__twr_v327) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v328 = (uint64_t)(&LexTokenError);
    __twr_v329 = (uint64_t)(&_mng_token324);
    __twr_v330 = (uint64_t)(&"Expected a string");
    __twr_v331 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v328)(__twr_v329, __twr_v330, __twr_v331, __twr_v331, __twr_v331);
    __twr_l41:;
    __twr_v332 = (uint64_t)(&_mng_token324);
    __twr_v333 = *(uint64_t*)(__twr_v332);
    _mng_string334 = __twr_v333;
    __twr_v335 = (uint64_t)(&TlBumpAlloc);
    __twr_v336 = 104ULL;
    __twr_v337 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v335)(__twr_v336, (uint64_t)(&_mng_entry338));
    _mng_status339 = __twr_v337;
    if (!(_mng_status339)) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v340 = (uint64_t)(&TlInternalError);
    __twr_v341 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v342 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v340)(__twr_v341, __twr_v342, __twr_v342, __twr_v342);
    __twr_l43:;
    __twr_v343 = 16ULL;
    __twr_v344 = _mng_entry338 + __twr_v343;
    _mng_filepath345 = __twr_v344;
    __twr_v346 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v346)(_mng_filepath345);
    __twr_v347 = (uint64_t)(&BtParseStandardPath);
    __twr_v348 = 48ULL;
    __twr_v349 = _mng_string334 + __twr_v348;
    __twr_v350 = (uint64_t)(&_mng_token324);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v347)(__twr_v349, _mng_filepath345, __twr_v350);
    __twr_v351 = (uint64_t)(&TlIsPathDirectory);
    __twr_v352 = _mng_filepath345 + __twr_v343;
    __twr_v353 = *(uint64_t*)(__twr_v352);
    __twr_v354 = ((uint64_t (*)(uint64_t))__twr_v351)(__twr_v353);
    if (__twr_v354) { goto __twr_l45; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v355 = (uint64_t)(&LexTokenError);
    __twr_v356 = (uint64_t)(&_mng_token324);
    __twr_v357 = (uint64_t)(&"Doesn't exist or not a directory");
    __twr_v358 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v355)(__twr_v356, __twr_v357, __twr_v358, __twr_v358, __twr_v358);
    __twr_l45:;
    __twr_v359 = (uint64_t)(&BtCurrentTarget);
    __twr_v360 = *(uint64_t*)(__twr_v359);
    __twr_v361 = 504ULL;
    __twr_v362 = __twr_v360 + __twr_v361;
    _mng_listhead363 = __twr_v362;
    _mng_listentry364 = _mng_entry338;
    __twr_v365 = 8ULL;
    __twr_v366 = _mng_listhead363 + __twr_v365;
    __twr_v367 = *(uint64_t*)(__twr_v366);
    _mng_last368 = __twr_v367;
    __twr_v369 = _mng_listentry364 + __twr_v365;
    *(uint64_t*)(__twr_v369) = _mng_last368;
    *(uint64_t*)(_mng_listentry364) = _mng_listhead363;
    *(uint64_t*)(_mng_last368) = _mng_listentry364;
    *(uint64_t*)(__twr_v366) = _mng_listentry364;
    __twr_l40:;
    _jkl_epilogue:;
}
void BtTargetInfoJklInclude() {
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t _mng_token372[4];
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t _mng_string382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t _mng_filepath385[11];
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    __twr_v370 = (uint64_t)(&LexMatchToken);
    __twr_v371 = (uint64_t)(&_mng_token372);
    __twr_v373 = 4ULL;
    __twr_v374 = 0ULL;
    __twr_v375 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v370)(__twr_v371, __twr_v373, __twr_v374);
    if (__twr_v375) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v376 = (uint64_t)(&LexTokenError);
    __twr_v377 = (uint64_t)(&_mng_token372);
    __twr_v378 = (uint64_t)(&"Expected a string");
    __twr_v379 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v376)(__twr_v377, __twr_v378, __twr_v379, __twr_v379, __twr_v379);
    __twr_l48:;
    __twr_v380 = (uint64_t)(&_mng_token372);
    __twr_v381 = *(uint64_t*)(__twr_v380);
    _mng_string382 = __twr_v381;
    __twr_v383 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v384 = (uint64_t)(&_mng_filepath385);
    ((void (*)(uint64_t))__twr_v383)(__twr_v384);
    __twr_v386 = (uint64_t)(&BtParseStandardPath);
    __twr_v387 = 48ULL;
    __twr_v388 = _mng_string382 + __twr_v387;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v386)(__twr_v388, __twr_v384, __twr_v380);
    __twr_v389 = (uint64_t)(&TlIsPathDirectory);
    __twr_v390 = 16ULL;
    __twr_v391 = __twr_v384 + __twr_v390;
    __twr_v392 = *(uint64_t*)(__twr_v391);
    __twr_v393 = ((uint64_t (*)(uint64_t))__twr_v389)(__twr_v392);
    if (__twr_v393) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v394 = (uint64_t)(&LexTokenError);
    __twr_v395 = (uint64_t)(&_mng_token372);
    __twr_v396 = (uint64_t)(&"Doesn't exist or not a directory");
    __twr_v397 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v394)(__twr_v395, __twr_v396, __twr_v397, __twr_v397, __twr_v397);
    __twr_l50:;
    __twr_v398 = (uint64_t)(&BtCurrentTarget);
    __twr_v399 = *(uint64_t*)(__twr_v398);
    __twr_v400 = 400ULL;
    __twr_v401 = __twr_v399 + __twr_v400;
    __twr_v402 = *(uint64_t*)(__twr_v401);
    if (!(__twr_v402)) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v403 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v404 = (uint64_t)(&BtCurrentTarget);
    __twr_v405 = *(uint64_t*)(__twr_v404);
    __twr_v406 = 400ULL;
    __twr_v407 = __twr_v405 + __twr_v406;
    __twr_v408 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v403)(__twr_v407, __twr_v408);
    __twr_l52:;
    __twr_v409 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v410 = (uint64_t)(&BtCurrentTarget);
    __twr_v411 = *(uint64_t*)(__twr_v410);
    __twr_v412 = 400ULL;
    __twr_v413 = __twr_v411 + __twr_v412;
    __twr_v414 = (uint64_t)(&_mng_filepath385);
    __twr_v415 = 16ULL;
    __twr_v416 = __twr_v414 + __twr_v415;
    __twr_v417 = *(uint64_t*)(__twr_v416);
    __twr_v418 = *(uint64_t*)(__twr_v414);
    __twr_v419 = 1ULL;
    __twr_v420 = __twr_v418 - __twr_v419;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v409)(__twr_v413, __twr_v417, __twr_v420);
    __twr_v421 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v421)(__twr_v414);
    __twr_l47:;
    _jkl_epilogue:;
}
void BtTargetInfoLinkOpt() {
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t _mng_token424[4];
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t _mng_string434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t _mng_str437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    __twr_v422 = (uint64_t)(&LexMatchToken);
    __twr_v423 = (uint64_t)(&_mng_token424);
    __twr_v425 = 4ULL;
    __twr_v426 = 0ULL;
    __twr_v427 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v422)(__twr_v423, __twr_v425, __twr_v426);
    if (__twr_v427) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v428 = (uint64_t)(&LexTokenError);
    __twr_v429 = (uint64_t)(&_mng_token424);
    __twr_v430 = (uint64_t)(&"Expected a string");
    __twr_v431 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v428)(__twr_v429, __twr_v430, __twr_v431, __twr_v431, __twr_v431);
    __twr_l55:;
    __twr_v432 = (uint64_t)(&_mng_token424);
    __twr_v433 = *(uint64_t*)(__twr_v432);
    _mng_string434 = __twr_v433;
    __twr_v435 = 48ULL;
    __twr_v436 = _mng_string434 + __twr_v435;
    _mng_str437 = __twr_v436;
    __twr_v438 = (uint64_t)(&BtCurrentTarget);
    __twr_v439 = *(uint64_t*)(__twr_v438);
    __twr_v440 = __twr_v439 + __twr_v435;
    __twr_v441 = *(uint64_t*)(__twr_v440);
    if (!(__twr_v441)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v442 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v443 = (uint64_t)(&BtCurrentTarget);
    __twr_v444 = *(uint64_t*)(__twr_v443);
    __twr_v445 = 48ULL;
    __twr_v446 = __twr_v444 + __twr_v445;
    __twr_v447 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v442)(__twr_v446, __twr_v447);
    __twr_l57:;
    __twr_v448 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v449 = (uint64_t)(&BtCurrentTarget);
    __twr_v450 = *(uint64_t*)(__twr_v449);
    __twr_v451 = 48ULL;
    __twr_v452 = __twr_v450 + __twr_v451;
    __twr_v453 = 16ULL;
    __twr_v454 = _mng_str437 + __twr_v453;
    __twr_v455 = *(uint64_t*)(__twr_v454);
    __twr_v456 = *(uint64_t*)(_mng_str437);
    __twr_v457 = 1ULL;
    __twr_v458 = __twr_v456 - __twr_v457;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v448)(__twr_v452, __twr_v455, __twr_v458);
    __twr_l54:;
    _jkl_epilogue:;
}
void BtTargetInfoJklOpt() {
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t _mng_token461[4];
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t _mng_string471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t _mng_str474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    __twr_v459 = (uint64_t)(&LexMatchToken);
    __twr_v460 = (uint64_t)(&_mng_token461);
    __twr_v462 = 4ULL;
    __twr_v463 = 0ULL;
    __twr_v464 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v459)(__twr_v460, __twr_v462, __twr_v463);
    if (__twr_v464) { goto __twr_l60; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v465 = (uint64_t)(&LexTokenError);
    __twr_v466 = (uint64_t)(&_mng_token461);
    __twr_v467 = (uint64_t)(&"Expected a string");
    __twr_v468 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v465)(__twr_v466, __twr_v467, __twr_v468, __twr_v468, __twr_v468);
    __twr_l60:;
    __twr_v469 = (uint64_t)(&_mng_token461);
    __twr_v470 = *(uint64_t*)(__twr_v469);
    _mng_string471 = __twr_v470;
    __twr_v472 = 48ULL;
    __twr_v473 = _mng_string471 + __twr_v472;
    _mng_str474 = __twr_v473;
    __twr_v475 = (uint64_t)(&BtCurrentTarget);
    __twr_v476 = *(uint64_t*)(__twr_v475);
    __twr_v477 = 312ULL;
    __twr_v478 = __twr_v476 + __twr_v477;
    __twr_v479 = *(uint64_t*)(__twr_v478);
    if (!(__twr_v479)) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v480 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v481 = (uint64_t)(&BtCurrentTarget);
    __twr_v482 = *(uint64_t*)(__twr_v481);
    __twr_v483 = 312ULL;
    __twr_v484 = __twr_v482 + __twr_v483;
    __twr_v485 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v480)(__twr_v484, __twr_v485);
    __twr_l62:;
    __twr_v486 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v487 = (uint64_t)(&BtCurrentTarget);
    __twr_v488 = *(uint64_t*)(__twr_v487);
    __twr_v489 = 312ULL;
    __twr_v490 = __twr_v488 + __twr_v489;
    __twr_v491 = 16ULL;
    __twr_v492 = _mng_str474 + __twr_v491;
    __twr_v493 = *(uint64_t*)(__twr_v492);
    __twr_v494 = *(uint64_t*)(_mng_str474);
    __twr_v495 = 1ULL;
    __twr_v496 = __twr_v494 - __twr_v495;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v486)(__twr_v490, __twr_v493, __twr_v496);
    __twr_l59:;
    _jkl_epilogue:;
}
void BtTargetInfoLink() {
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t _mng_token499[4];
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t _mng_string509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t _mng_filepath512[11];
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    __twr_v497 = (uint64_t)(&LexMatchToken);
    __twr_v498 = (uint64_t)(&_mng_token499);
    __twr_v500 = 4ULL;
    __twr_v501 = 0ULL;
    __twr_v502 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v497)(__twr_v498, __twr_v500, __twr_v501);
    if (__twr_v502) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v503 = (uint64_t)(&LexTokenError);
    __twr_v504 = (uint64_t)(&_mng_token499);
    __twr_v505 = (uint64_t)(&"Expected a string");
    __twr_v506 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v503)(__twr_v504, __twr_v505, __twr_v506, __twr_v506, __twr_v506);
    __twr_l65:;
    __twr_v507 = (uint64_t)(&_mng_token499);
    __twr_v508 = *(uint64_t*)(__twr_v507);
    _mng_string509 = __twr_v508;
    __twr_v510 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v511 = (uint64_t)(&_mng_filepath512);
    ((void (*)(uint64_t))__twr_v510)(__twr_v511);
    __twr_v513 = (uint64_t)(&BtParseStandardPath);
    __twr_v514 = 48ULL;
    __twr_v515 = _mng_string509 + __twr_v514;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v513)(__twr_v515, __twr_v511, __twr_v507);
    __twr_v516 = (uint64_t)(&BtCurrentTarget);
    __twr_v517 = *(uint64_t*)(__twr_v516);
    __twr_v518 = 136ULL;
    __twr_v519 = __twr_v517 + __twr_v518;
    __twr_v520 = *(uint64_t*)(__twr_v519);
    if (!(__twr_v520)) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v521 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v522 = (uint64_t)(&BtCurrentTarget);
    __twr_v523 = *(uint64_t*)(__twr_v522);
    __twr_v524 = 136ULL;
    __twr_v525 = __twr_v523 + __twr_v524;
    __twr_v526 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v521)(__twr_v525, __twr_v526);
    __twr_l67:;
    __twr_v527 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v528 = (uint64_t)(&BtCurrentTarget);
    __twr_v529 = *(uint64_t*)(__twr_v528);
    __twr_v530 = 136ULL;
    __twr_v531 = __twr_v529 + __twr_v530;
    __twr_v532 = (uint64_t)(&_mng_filepath512);
    __twr_v533 = 16ULL;
    __twr_v534 = __twr_v532 + __twr_v533;
    __twr_v535 = *(uint64_t*)(__twr_v534);
    __twr_v536 = *(uint64_t*)(__twr_v532);
    __twr_v537 = 1ULL;
    __twr_v538 = __twr_v536 - __twr_v537;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v527)(__twr_v531, __twr_v535, __twr_v538);
    __twr_v539 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v539)(__twr_v532);
    __twr_l64:;
    _jkl_epilogue:;
}
void BtTargetInfoDyLink() {
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t _mng_token542[4];
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t _mng_rtstring553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t _mng_ctpathtoken556[4];
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t _mng_ctstring565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t _mng_filepath568[11];
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    __twr_v540 = (uint64_t)(&LexMatchToken);
    __twr_v541 = (uint64_t)(&_mng_token542);
    __twr_v543 = 4ULL;
    __twr_v544 = 0ULL;
    __twr_v545 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v540)(__twr_v541, __twr_v543, __twr_v544);
    if (__twr_v545) { goto __twr_l70; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v546 = (uint64_t)(&LexTokenError);
    __twr_v547 = (uint64_t)(&_mng_token542);
    __twr_v548 = (uint64_t)(&"Expected a string");
    __twr_v549 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v546)(__twr_v547, __twr_v548, __twr_v549, __twr_v549, __twr_v549);
    __twr_l70:;
    __twr_v550 = (uint64_t)(&_mng_token542);
    __twr_v551 = 0ULL;
    __twr_v552 = *(uint64_t*)(__twr_v550);
    _mng_rtstring553 = __twr_v552;
    __twr_v554 = (uint64_t)(&LexMatchToken);
    __twr_v555 = (uint64_t)(&_mng_ctpathtoken556);
    __twr_v557 = 4ULL;
    __twr_v558 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v554)(__twr_v555, __twr_v557, __twr_v551);
    if (__twr_v558) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v559 = (uint64_t)(&LexTokenError);
    __twr_v560 = (uint64_t)(&_mng_ctpathtoken556);
    __twr_v561 = (uint64_t)(&"Expected a string");
    __twr_v562 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v559)(__twr_v560, __twr_v561, __twr_v562, __twr_v562, __twr_v562);
    __twr_l72:;
    __twr_v563 = (uint64_t)(&_mng_ctpathtoken556);
    __twr_v564 = *(uint64_t*)(__twr_v563);
    _mng_ctstring565 = __twr_v564;
    __twr_v566 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v567 = (uint64_t)(&_mng_filepath568);
    ((void (*)(uint64_t))__twr_v566)(__twr_v567);
    __twr_v569 = (uint64_t)(&BtParseStandardPath);
    __twr_v570 = 48ULL;
    __twr_v571 = _mng_ctstring565 + __twr_v570;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v569)(__twr_v571, __twr_v567, __twr_v563);
    __twr_v572 = (uint64_t)(&BtCurrentTarget);
    __twr_v573 = *(uint64_t*)(__twr_v572);
    __twr_v574 = 224ULL;
    __twr_v575 = __twr_v573 + __twr_v574;
    __twr_v576 = *(uint64_t*)(__twr_v575);
    if (!(__twr_v576)) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v577 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v578 = (uint64_t)(&BtCurrentTarget);
    __twr_v579 = *(uint64_t*)(__twr_v578);
    __twr_v580 = 224ULL;
    __twr_v581 = __twr_v579 + __twr_v580;
    __twr_v582 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v577)(__twr_v581, __twr_v582);
    __twr_l74:;
    __twr_v583 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v584 = (uint64_t)(&BtCurrentTarget);
    __twr_v585 = *(uint64_t*)(__twr_v584);
    __twr_v586 = 224ULL;
    __twr_v587 = __twr_v585 + __twr_v586;
    __twr_v588 = 48ULL;
    __twr_v589 = _mng_rtstring553 + __twr_v588;
    __twr_v590 = 16ULL;
    __twr_v591 = 64ULL;
    __twr_v592 = _mng_rtstring553 + __twr_v591;
    __twr_v593 = *(uint64_t*)(__twr_v592);
    __twr_v594 = *(uint64_t*)(__twr_v589);
    __twr_v595 = 1ULL;
    __twr_v596 = __twr_v594 - __twr_v595;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v583)(__twr_v587, __twr_v593, __twr_v596);
    __twr_v597 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v598 = *(uint64_t*)(__twr_v584);
    __twr_v599 = __twr_v598 + __twr_v586;
    __twr_v600 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v597)(__twr_v599, __twr_v600);
    __twr_v601 = *(uint64_t*)(__twr_v584);
    __twr_v602 = __twr_v601 + __twr_v586;
    __twr_v603 = (uint64_t)(&_mng_filepath568);
    __twr_v604 = __twr_v603 + __twr_v590;
    __twr_v605 = *(uint64_t*)(__twr_v604);
    __twr_v606 = *(uint64_t*)(__twr_v603);
    __twr_v607 = __twr_v606 - __twr_v595;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v583)(__twr_v602, __twr_v605, __twr_v607);
    __twr_v608 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v608)(__twr_v603);
    __twr_l69:;
    _jkl_epilogue:;
}
uint64_t BtTargetInfoSpecifiers[8] = {
    (uint64_t)(&BtTargetInfoFile),
    (uint64_t)(&BtTargetInfoDepend),
    (uint64_t)(&BtTargetInfoSources),
    (uint64_t)(&BtTargetInfoJklInclude),
    (uint64_t)(&BtTargetInfoLinkOpt),
    (uint64_t)(&BtTargetInfoJklOpt),
    (uint64_t)(&BtTargetInfoLink),
    (uint64_t)(&BtTargetInfoDyLink),
};
uint64_t BtParseTarget() {
    uint64_t _jkl_retv;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t _mng_token611[4];
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t _mng_nametoken628[4];
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t _mng_namestring638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t _mng_target652;
    uint64_t _mng_status653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t _mng_listhead672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t _mng_listhead678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    __twr_v609 = (uint64_t)(&LexGetToken);
    __twr_v610 = (uint64_t)(&_mng_token611);
    ((void (*)(uint64_t))__twr_v609)(__twr_v610);
    __twr_v612 = 24ULL;
    __twr_v613 = __twr_v610 + __twr_v612;
    __twr_v614 = *(uint8_t*)(__twr_v613);
    __twr_v615 = 6ULL;
    if (__twr_v614 != __twr_v615) { goto __twr_l77; } else { goto __twr_l78; }
    __twr_l78:;
    __twr_v616 = 0ULL;
    _jkl_retv = __twr_v616;
    goto _jkl_epilogue;
    __twr_l77:;
    __twr_v617 = (uint64_t)(&_mng_token611);
    __twr_v618 = 24ULL;
    __twr_v619 = __twr_v617 + __twr_v618;
    __twr_v620 = *(uint8_t*)(__twr_v619);
    __twr_v621 = 1ULL;
    if (__twr_v620 == __twr_v621) { goto __twr_l79; } else { goto __twr_l80; }
    __twr_l80:;
    __twr_v622 = (uint64_t)(&LexTokenError);
    __twr_v623 = (uint64_t)(&_mng_token611);
    __twr_v624 = (uint64_t)(&"Expected TARGET");
    __twr_v625 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v622)(__twr_v623, __twr_v624, __twr_v625, __twr_v625, __twr_v625);
    __twr_l79:;
    __twr_v626 = (uint64_t)(&LexMatchToken);
    __twr_v627 = (uint64_t)(&_mng_nametoken628);
    __twr_v629 = 4ULL;
    __twr_v630 = 0ULL;
    __twr_v631 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v626)(__twr_v627, __twr_v629, __twr_v630);
    if (__twr_v631) { goto __twr_l81; } else { goto __twr_l82; }
    __twr_l82:;
    __twr_v632 = (uint64_t)(&LexTokenError);
    __twr_v633 = (uint64_t)(&_mng_nametoken628);
    __twr_v634 = (uint64_t)(&"Expected a string");
    __twr_v635 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v632)(__twr_v633, __twr_v634, __twr_v635, __twr_v635, __twr_v635);
    __twr_l81:;
    __twr_v636 = (uint64_t)(&_mng_nametoken628);
    __twr_v637 = *(uint64_t*)(__twr_v636);
    _mng_namestring638 = __twr_v637;
    __twr_v639 = (uint64_t)(&TlLookupHashTable);
    __twr_v640 = (uint64_t)(&BtTargetHashTable);
    __twr_v641 = 64ULL;
    __twr_v642 = _mng_namestring638 + __twr_v641;
    __twr_v643 = *(uint64_t*)(__twr_v642);
    __twr_v644 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v639)(__twr_v640, __twr_v643);
    if (!(__twr_v644)) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v645 = (uint64_t)(&LexTokenError);
    __twr_v646 = (uint64_t)(&_mng_nametoken628);
    __twr_v647 = (uint64_t)(&"Target already defined");
    __twr_v648 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v645)(__twr_v646, __twr_v647, __twr_v648, __twr_v648, __twr_v648);
    __twr_l83:;
    __twr_v649 = (uint64_t)(&TlBumpAlloc);
    __twr_v650 = 608ULL;
    __twr_v651 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v649)(__twr_v650, (uint64_t)(&_mng_target652));
    _mng_status653 = __twr_v651;
    if (!(_mng_status653)) { goto __twr_l85; } else { goto __twr_l86; }
    __twr_l86:;
    __twr_v654 = (uint64_t)(&TlInternalError);
    __twr_v655 = (uint64_t)(&"Failed to allocate target");
    __twr_v656 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v654)(__twr_v655, __twr_v656, __twr_v656, __twr_v656);
    __twr_l85:;
    __twr_v657 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v658 = 48ULL;
    __twr_v659 = _mng_target652 + __twr_v658;
    ((void (*)(uint64_t))__twr_v657)(__twr_v659);
    __twr_v660 = 312ULL;
    __twr_v661 = _mng_target652 + __twr_v660;
    ((void (*)(uint64_t))__twr_v657)(__twr_v661);
    __twr_v662 = 400ULL;
    __twr_v663 = _mng_target652 + __twr_v662;
    ((void (*)(uint64_t))__twr_v657)(__twr_v663);
    __twr_v664 = 136ULL;
    __twr_v665 = _mng_target652 + __twr_v664;
    ((void (*)(uint64_t))__twr_v657)(__twr_v665);
    __twr_v666 = 224ULL;
    __twr_v667 = _mng_target652 + __twr_v666;
    ((void (*)(uint64_t))__twr_v657)(__twr_v667);
    __twr_v668 = 520ULL;
    __twr_v669 = _mng_target652 + __twr_v668;
    ((void (*)(uint64_t))__twr_v657)(__twr_v669);
    __twr_v670 = 488ULL;
    __twr_v671 = _mng_target652 + __twr_v670;
    _mng_listhead672 = __twr_v671;
    __twr_v673 = 8ULL;
    __twr_v674 = _mng_listhead672 + __twr_v673;
    *(uint64_t*)(__twr_v674) = _mng_listhead672;
    __twr_v675 = 0ULL;
    *(uint64_t*)(_mng_listhead672) = _mng_listhead672;
    __twr_v676 = 504ULL;
    __twr_v677 = _mng_target652 + __twr_v676;
    _mng_listhead678 = __twr_v677;
    __twr_v679 = _mng_listhead678 + __twr_v673;
    *(uint64_t*)(__twr_v679) = _mng_listhead678;
    *(uint64_t*)(_mng_listhead678) = _mng_listhead678;
    __twr_v680 = (uint64_t)(&BtCurrentTarget);
    *(uint64_t*)(__twr_v680) = _mng_target652;
    __twr_v681 = (uint64_t)(&LexMatchToken);
    __twr_v682 = (uint64_t)(&_mng_token611);
    __twr_v683 = 3ULL;
    __twr_v684 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v681)(__twr_v682, __twr_v683, __twr_v675);
    if (__twr_v684) { goto __twr_l88; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v685 = (uint64_t)(&LexMatchToken);
    __twr_v686 = (uint64_t)(&_mng_token611);
    __twr_v687 = 2ULL;
    __twr_v688 = 0ULL;
    __twr_v689 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v685)(__twr_v686, __twr_v687, __twr_v688);
    if (__twr_v689) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v690 = (uint64_t)(&LexTokenError);
    __twr_v691 = (uint64_t)(&_mng_token611);
    __twr_v692 = (uint64_t)(&"Expected a target info specifier");
    __twr_v693 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v690)(__twr_v691, __twr_v692, __twr_v693, __twr_v693, __twr_v693);
    __twr_l90:;
    __twr_v694 = (uint64_t)(&BtTargetInfoSpecifiers);
    __twr_v695 = (uint64_t)(&_mng_token611);
    __twr_v696 = 25ULL;
    __twr_v697 = __twr_v695 + __twr_v696;
    __twr_v698 = *(uint8_t*)(__twr_v697);
    __twr_v699 = 3ULL;
    __twr_v700 = __twr_v698 << __twr_v699;
    __twr_v701 = __twr_v694 + __twr_v700;
    __twr_v702 = *(uint64_t*)(__twr_v701);
    ((void (*)())__twr_v702)();
    __twr_l89:;
    __twr_v703 = (uint64_t)(&LexMatchToken);
    __twr_v704 = (uint64_t)(&_mng_token611);
    __twr_v705 = 3ULL;
    __twr_v706 = 0ULL;
    __twr_v707 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v703)(__twr_v704, __twr_v705, __twr_v706);
    if (!(__twr_v707)) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v708 = (uint64_t)(&TlInsertHashTable);
    __twr_v709 = (uint64_t)(&BtTargetHashTable);
    __twr_v710 = 64ULL;
    __twr_v711 = _mng_namestring638 + __twr_v710;
    __twr_v712 = *(uint64_t*)(__twr_v711);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v708)(__twr_v709, _mng_target652, __twr_v712);
    __twr_v713 = 1ULL;
    _jkl_retv = __twr_v713;
    goto _jkl_epilogue;
    __twr_l76:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtParse() {
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t _mng_target724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    __twr_v714 = (uint64_t)(&TlInitializeHashTable);
    __twr_v715 = (uint64_t)(&BtTargetHashTable);
    ((void (*)(uint64_t))__twr_v714)(__twr_v715);
    __twr_v716 = (uint64_t)(&BtParseTarget);
    __twr_v717 = ((uint64_t (*)())__twr_v716)();
    if (!(__twr_v717)) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_l95:;
    __twr_v718 = (uint64_t)(&BtParseTarget);
    __twr_v719 = ((uint64_t (*)())__twr_v718)();
    if (__twr_v719) { goto __twr_l93; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v720 = (uint64_t)(&TlLookupHashTable);
    __twr_v721 = (uint64_t)(&BtTargetHashTable);
    __twr_v722 = (uint64_t)(&FeTargetName);
    __twr_v723 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v720)(__twr_v721, __twr_v722);
    _mng_target724 = __twr_v723;
    if (_mng_target724) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v725 = (uint64_t)(&TlUserError);
    __twr_v726 = (uint64_t)(&"Target not defined");
    __twr_v727 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v725)(__twr_v726, __twr_v727, __twr_v727, __twr_v727);
    __twr_l96:;
    __twr_v728 = (uint64_t)(&BtSelectedTarget);
    *(uint64_t*)(__twr_v728) = _mng_target724;
    __twr_l92:;
    _jkl_epilogue:;
}

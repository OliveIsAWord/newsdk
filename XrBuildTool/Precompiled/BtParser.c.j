#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlStringToNumber(uint64_t _mng_src110, uint64_t _mng_bufsize111, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler112);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine113, uint64_t _mng_arg114, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread115);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex116);
extern void TlReleaseMutex(uint64_t _mng_mutex117);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue118);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore119);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore120);
extern uint64_t TlSystem(uint64_t _mng_cmdline121);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg122);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename123, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock124, uint64_t _mng_filepath125);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope126);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg127);
extern void LexExpandMacro(uint64_t _mng_macro128, uint64_t _mng_token129);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream130, uint64_t _mng_macro131);
extern void LexUninitializeStream(uint64_t _mng_stream132);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream133);
extern void LexPushStream(uint64_t _mng_stream134);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream135, uint64_t _mng_fileblock136, uint64_t _mng_handle137);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock138, uint64_t _mng_handle139);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest140, uint64_t _mng_src141);
extern void LexGetToken(uint64_t _mng_token142);
extern void LexPutbackToken(uint64_t _mng_token143);
extern uint64_t LexMatchToken(uint64_t _mng_token144, uint64_t _mng_type145, uint64_t _mng_subtype146);
extern void LexStreamError(uint64_t _mng_str147, uint64_t _mng_err1148, uint64_t _mng_err2149, uint64_t _mng_err3150);
extern void LexTokenError(uint64_t _mng_token151, uint64_t _mng_str152, uint64_t _mng_err1153, uint64_t _mng_err2154, uint64_t _mng_err3155);
extern uint64_t LexCrunchNumber(uint64_t _mng_token156, uint64_t _mng_buffer157);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtStatFile(uint64_t _mng_fullpath158);
uint64_t BtTargetHashTable[196];
uint64_t BtCurrentTarget;
uint64_t BtCHost = 0ULL;
uint64_t BtPrebuiltCopies = 0ULL;
uint64_t BtTargetArchitectureName[8];
uint64_t BtSdkBase[32];
uint64_t BtPrebuiltCopiesPath[32];
extern uint64_t FeTargetName[32];
uint64_t BtSelectedTarget;
void BtParseStandardPath(uint64_t _mng_stdpath159, uint64_t _mng_fullpath160, uint64_t _mng_errtoken161) {
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t _mng_stdpathstr165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t _mng_macro194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t _mng_macro224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    __twr_v162 = 16ULL;
    __twr_v163 = _mng_stdpath159 + __twr_v162;
    __twr_v164 = *(uint64_t*)(__twr_v163);
    _mng_stdpathstr165 = __twr_v164;
    __twr_v166 = *(uint8_t*)(_mng_stdpathstr165);
    if (__twr_v166) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v167 = (uint64_t)(&LexTokenError);
    __twr_v168 = (uint64_t)(&"Empty path string");
    __twr_v169 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v167)(_mng_errtoken161, __twr_v168, __twr_v169, __twr_v169, __twr_v169);
    __twr_l2:;
    __twr_v170 = *(uint8_t*)(_mng_stdpathstr165);
    __twr_v171 = 47ULL;
    if (__twr_v170 != __twr_v171) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v172 = (uint64_t)(&LexTokenError);
    __twr_v173 = (uint64_t)(&"Expected a relative path, found an absolute path");
    __twr_v174 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v172)(_mng_errtoken161, __twr_v173, __twr_v174, __twr_v174, __twr_v174);
    __twr_l4:;
    __twr_v175 = *(uint8_t*)(_mng_stdpathstr165);
    __twr_v176 = 60ULL;
    if (__twr_v175 == __twr_v176) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v177 = (uint64_t)(&TlCopyParentPath);
    __twr_v178 = (uint64_t)(&LexCurrentStream);
    __twr_v179 = *(uint64_t*)(__twr_v178);
    __twr_v180 = 8ULL;
    __twr_v181 = __twr_v179 + __twr_v180;
    __twr_v182 = *(uint64_t*)(__twr_v181);
    __twr_v183 = 48ULL;
    __twr_v184 = __twr_v182 + __twr_v183;
    ((void (*)(uint64_t, uint64_t))__twr_v177)(__twr_v184, _mng_fullpath160);
    goto __twr_l6;
    __twr_l8:;
    __twr_v185 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v186 = (uint64_t)(&"<sdk>/");
    __twr_v187 = 5ULL;
    __twr_v188 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v185)(_mng_stdpathstr165, __twr_v186, __twr_v187);
    if (__twr_v188) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v189 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v190 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v191 = *(uint64_t*)(__twr_v190);
    __twr_v192 = (uint64_t)(&"SDK_BASE");
    __twr_v193 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v189)(__twr_v191, __twr_v192);
    _mng_macro194 = __twr_v193;
    if (_mng_macro194) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v195 = (uint64_t)(&LexTokenError);
    __twr_v196 = (uint64_t)(&"SDK_BASE isn't defined");
    __twr_v197 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v195)(_mng_errtoken161, __twr_v196, __twr_v197, __twr_v197, __twr_v197);
    __twr_l11:;
    __twr_v198 = 264ULL;
    __twr_v199 = _mng_macro194 + __twr_v198;
    __twr_v200 = *(uint8_t*)(__twr_v199);
    if (!(__twr_v200)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v201 = (uint64_t)(&LexTokenError);
    __twr_v202 = (uint64_t)(&"SDK_BASE is a function macro for some reason");
    __twr_v203 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(_mng_errtoken161, __twr_v202, __twr_v203, __twr_v203, __twr_v203);
    __twr_l13:;
    __twr_v204 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v205 = 80ULL;
    __twr_v206 = _mng_macro194 + __twr_v205;
    __twr_v207 = 96ULL;
    __twr_v208 = _mng_macro194 + __twr_v207;
    __twr_v209 = *(uint64_t*)(__twr_v208);
    __twr_v210 = 1ULL;
    __twr_v211 = *(uint64_t*)(__twr_v206);
    __twr_v212 = __twr_v211 - __twr_v210;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v204)(_mng_fullpath160, __twr_v209, __twr_v212);
    __twr_v213 = 5ULL;
    __twr_v214 = _mng_stdpathstr165 + __twr_v213;
    _mng_stdpathstr165 = __twr_v214;
    goto __twr_l6;
    __twr_l10:;
    __twr_v215 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v216 = (uint64_t)(&"<bld>/");
    __twr_v217 = 5ULL;
    __twr_v218 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v215)(_mng_stdpathstr165, __twr_v216, __twr_v217);
    if (__twr_v218) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v219 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v220 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v221 = *(uint64_t*)(__twr_v220);
    __twr_v222 = (uint64_t)(&"BUILD_BASE");
    __twr_v223 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v219)(__twr_v221, __twr_v222);
    _mng_macro224 = __twr_v223;
    if (_mng_macro224) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v225 = (uint64_t)(&LexTokenError);
    __twr_v226 = (uint64_t)(&"BUILD_BASE isn't defined");
    __twr_v227 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v225)(_mng_errtoken161, __twr_v226, __twr_v227, __twr_v227, __twr_v227);
    __twr_l17:;
    __twr_v228 = 264ULL;
    __twr_v229 = _mng_macro224 + __twr_v228;
    __twr_v230 = *(uint8_t*)(__twr_v229);
    if (!(__twr_v230)) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v231 = (uint64_t)(&LexTokenError);
    __twr_v232 = (uint64_t)(&"BUILD_BASE is a function macro for some reason");
    __twr_v233 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v231)(_mng_errtoken161, __twr_v232, __twr_v233, __twr_v233, __twr_v233);
    __twr_l19:;
    __twr_v234 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v235 = 80ULL;
    __twr_v236 = _mng_macro224 + __twr_v235;
    __twr_v237 = 96ULL;
    __twr_v238 = _mng_macro224 + __twr_v237;
    __twr_v239 = *(uint64_t*)(__twr_v238);
    __twr_v240 = 1ULL;
    __twr_v241 = *(uint64_t*)(__twr_v236);
    __twr_v242 = __twr_v241 - __twr_v240;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v234)(_mng_fullpath160, __twr_v239, __twr_v242);
    __twr_v243 = 5ULL;
    __twr_v244 = _mng_stdpathstr165 + __twr_v243;
    _mng_stdpathstr165 = __twr_v244;
    goto __twr_l6;
    __twr_l16:;
    __twr_v245 = (uint64_t)(&LexTokenError);
    __twr_v246 = (uint64_t)(&"Unknown path prefix");
    __twr_v247 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v245)(_mng_errtoken161, __twr_v246, __twr_v247, __twr_v247, __twr_v247);
    __twr_l6:;
    __twr_v248 = *(uint64_t*)(_mng_fullpath160);
    if (__twr_v248) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v249 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v250 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v249)(_mng_fullpath160, __twr_v250);
    __twr_v251 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v249)(_mng_fullpath160, __twr_v251);
    goto __twr_l21;
    __twr_l23:;
    __twr_v252 = 16ULL;
    __twr_v253 = _mng_fullpath160 + __twr_v252;
    __twr_v254 = *(uint64_t*)(__twr_v253);
    __twr_v255 = *(uint64_t*)(_mng_fullpath160);
    __twr_v256 = 1ULL;
    __twr_v257 = __twr_v255 - __twr_v256;
    __twr_v258 = __twr_v254 + __twr_v257;
    __twr_v259 = *(uint8_t*)(__twr_v258);
    __twr_v260 = 47ULL;
    if (__twr_v259 == __twr_v260) { goto __twr_l21; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v261 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v262 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v261)(_mng_fullpath160, __twr_v262);
    __twr_l21:;
    __twr_v263 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v264 = *(uint64_t*)(_mng_stdpath159);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v263)(_mng_fullpath160, _mng_stdpathstr165, __twr_v264);
    __twr_l1:;
    _jkl_epilogue:;
}
void BtTargetInfoFile() {
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t _mng_token267[4];
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_string277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    __twr_v265 = (uint64_t)(&LexMatchToken);
    __twr_v266 = (uint64_t)(&_mng_token267);
    __twr_v268 = 4ULL;
    __twr_v269 = 0ULL;
    __twr_v270 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v265)(__twr_v266, __twr_v268, __twr_v269);
    if (__twr_v270) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v271 = (uint64_t)(&LexTokenError);
    __twr_v272 = (uint64_t)(&_mng_token267);
    __twr_v273 = (uint64_t)(&"Expected a string");
    __twr_v274 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v271)(__twr_v272, __twr_v273, __twr_v274, __twr_v274, __twr_v274);
    __twr_l26:;
    __twr_v275 = (uint64_t)(&_mng_token267);
    __twr_v276 = *(uint64_t*)(__twr_v275);
    _mng_string277 = __twr_v276;
    __twr_v278 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v279 = (uint64_t)(&BtCurrentTarget);
    __twr_v280 = *(uint64_t*)(__twr_v279);
    __twr_v281 = 520ULL;
    __twr_v282 = __twr_v280 + __twr_v281;
    ((void (*)(uint64_t))__twr_v278)(__twr_v282);
    __twr_v283 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v284 = *(uint64_t*)(__twr_v279);
    __twr_v285 = __twr_v284 + __twr_v281;
    ((void (*)(uint64_t))__twr_v283)(__twr_v285);
    __twr_v286 = (uint64_t)(&BtParseStandardPath);
    __twr_v287 = 48ULL;
    __twr_v288 = _mng_string277 + __twr_v287;
    __twr_v289 = *(uint64_t*)(__twr_v279);
    __twr_v290 = __twr_v289 + __twr_v281;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v286)(__twr_v288, __twr_v290, __twr_v275);
    __twr_v291 = 1ULL;
    __twr_v292 = *(uint64_t*)(__twr_v279);
    __twr_v293 = 633ULL;
    __twr_v294 = __twr_v292 + __twr_v293;
    *(uint8_t*)(__twr_v294) = __twr_v291;
    __twr_l25:;
    _jkl_epilogue:;
}
void BtTargetInfoDepend() {
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t _mng_token297[4];
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t _mng_string307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t _mng_target314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t _mng_head323;
    uint64_t __twr_v324;
    uint64_t _mng_listentry325;
    uint64_t _mng_entry326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t _mng_entry334;
    uint64_t _mng_status335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t _mng_listhead345;
    uint64_t _mng_listentry346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t _mng_last350;
    uint64_t __twr_v351;
    __twr_v295 = (uint64_t)(&LexMatchToken);
    __twr_v296 = (uint64_t)(&_mng_token297);
    __twr_v298 = 4ULL;
    __twr_v299 = 0ULL;
    __twr_v300 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v295)(__twr_v296, __twr_v298, __twr_v299);
    if (__twr_v300) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v301 = (uint64_t)(&LexTokenError);
    __twr_v302 = (uint64_t)(&_mng_token297);
    __twr_v303 = (uint64_t)(&"Expected a string");
    __twr_v304 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v301)(__twr_v302, __twr_v303, __twr_v304, __twr_v304, __twr_v304);
    __twr_l29:;
    __twr_v305 = (uint64_t)(&_mng_token297);
    __twr_v306 = *(uint64_t*)(__twr_v305);
    _mng_string307 = __twr_v306;
    __twr_v308 = (uint64_t)(&TlLookupHashTable);
    __twr_v309 = (uint64_t)(&BtTargetHashTable);
    __twr_v310 = 64ULL;
    __twr_v311 = _mng_string307 + __twr_v310;
    __twr_v312 = *(uint64_t*)(__twr_v311);
    __twr_v313 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v308)(__twr_v309, __twr_v312);
    _mng_target314 = __twr_v313;
    if (_mng_target314) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v315 = (uint64_t)(&LexTokenError);
    __twr_v316 = (uint64_t)(&_mng_token297);
    __twr_v317 = (uint64_t)(&"Target not defined");
    __twr_v318 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v315)(__twr_v316, __twr_v317, __twr_v318, __twr_v318, __twr_v318);
    __twr_l31:;
    __twr_v319 = (uint64_t)(&BtCurrentTarget);
    __twr_v320 = *(uint64_t*)(__twr_v319);
    __twr_v321 = 488ULL;
    __twr_v322 = __twr_v320 + __twr_v321;
    _mng_head323 = __twr_v322;
    __twr_v324 = *(uint64_t*)(_mng_head323);
    _mng_listentry325 = __twr_v324;
    if (_mng_head323 == _mng_listentry325) { goto __twr_l34; } else { goto __twr_l33; }
    __twr_l33:;
    _mng_entry326 = _mng_listentry325;
    __twr_v327 = 16ULL;
    __twr_v328 = _mng_entry326 + __twr_v327;
    __twr_v329 = *(uint64_t*)(__twr_v328);
    if (__twr_v329 != _mng_target314) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    goto _jkl_epilogue;
    __twr_l36:;
    __twr_v330 = *(uint64_t*)(_mng_listentry325);
    _mng_listentry325 = __twr_v330;
    __twr_l35:;
    if (_mng_head323 != _mng_listentry325) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    __twr_v331 = (uint64_t)(&TlBumpAlloc);
    __twr_v332 = 24ULL;
    __twr_v333 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v331)(__twr_v332, (uint64_t)(&_mng_entry334));
    _mng_status335 = __twr_v333;
    if (!(_mng_status335)) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v336 = (uint64_t)(&TlInternalError);
    __twr_v337 = (uint64_t)(&"Failed to allocate depends list entry");
    __twr_v338 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v336)(__twr_v337, __twr_v338, __twr_v338, __twr_v338);
    __twr_l38:;
    __twr_v339 = 16ULL;
    __twr_v340 = _mng_entry334 + __twr_v339;
    *(uint64_t*)(__twr_v340) = _mng_target314;
    __twr_v341 = (uint64_t)(&BtCurrentTarget);
    __twr_v342 = *(uint64_t*)(__twr_v341);
    __twr_v343 = 488ULL;
    __twr_v344 = __twr_v342 + __twr_v343;
    _mng_listhead345 = __twr_v344;
    _mng_listentry346 = _mng_entry334;
    __twr_v347 = 8ULL;
    __twr_v348 = _mng_listhead345 + __twr_v347;
    __twr_v349 = *(uint64_t*)(__twr_v348);
    _mng_last350 = __twr_v349;
    __twr_v351 = _mng_listentry346 + __twr_v347;
    *(uint64_t*)(__twr_v351) = _mng_last350;
    *(uint64_t*)(_mng_listentry346) = _mng_listhead345;
    *(uint64_t*)(_mng_last350) = _mng_listentry346;
    *(uint64_t*)(__twr_v348) = _mng_listentry346;
    __twr_l28:;
    _jkl_epilogue:;
}
void BtTargetInfoSources() {
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t _mng_token354[4];
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t _mng_string364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t _mng_entry377;
    uint64_t _mng_status378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t _mng_filepath384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t _mng_listhead402;
    uint64_t _mng_listentry403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t _mng_last407;
    uint64_t __twr_v408;
    __twr_v352 = (uint64_t)(&LexMatchToken);
    __twr_v353 = (uint64_t)(&_mng_token354);
    __twr_v355 = 4ULL;
    __twr_v356 = 0ULL;
    __twr_v357 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v352)(__twr_v353, __twr_v355, __twr_v356);
    if (__twr_v357) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v358 = (uint64_t)(&LexTokenError);
    __twr_v359 = (uint64_t)(&_mng_token354);
    __twr_v360 = (uint64_t)(&"Expected a string");
    __twr_v361 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v358)(__twr_v359, __twr_v360, __twr_v361, __twr_v361, __twr_v361);
    __twr_l41:;
    __twr_v362 = (uint64_t)(&_mng_token354);
    __twr_v363 = *(uint64_t*)(__twr_v362);
    _mng_string364 = __twr_v363;
    __twr_v365 = (uint64_t)(&BtCurrentTarget);
    __twr_v366 = *(uint64_t*)(__twr_v365);
    __twr_v367 = 633ULL;
    __twr_v368 = __twr_v366 + __twr_v367;
    __twr_v369 = *(uint8_t*)(__twr_v368);
    if (__twr_v369) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v370 = (uint64_t)(&LexTokenError);
    __twr_v371 = (uint64_t)(&_mng_token354);
    __twr_v372 = (uint64_t)(&"Sourceful target needs FILE name");
    __twr_v373 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v370)(__twr_v371, __twr_v372, __twr_v373, __twr_v373, __twr_v373);
    __twr_l43:;
    __twr_v374 = (uint64_t)(&TlBumpAlloc);
    __twr_v375 = 104ULL;
    __twr_v376 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v374)(__twr_v375, (uint64_t)(&_mng_entry377));
    _mng_status378 = __twr_v376;
    if (!(_mng_status378)) { goto __twr_l45; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v379 = (uint64_t)(&TlInternalError);
    __twr_v380 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v381 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v379)(__twr_v380, __twr_v381, __twr_v381, __twr_v381);
    __twr_l45:;
    __twr_v382 = 16ULL;
    __twr_v383 = _mng_entry377 + __twr_v382;
    _mng_filepath384 = __twr_v383;
    __twr_v385 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v385)(_mng_filepath384);
    __twr_v386 = (uint64_t)(&BtParseStandardPath);
    __twr_v387 = 48ULL;
    __twr_v388 = _mng_string364 + __twr_v387;
    __twr_v389 = (uint64_t)(&_mng_token354);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v386)(__twr_v388, _mng_filepath384, __twr_v389);
    __twr_v390 = (uint64_t)(&TlIsPathDirectory);
    __twr_v391 = _mng_filepath384 + __twr_v382;
    __twr_v392 = *(uint64_t*)(__twr_v391);
    __twr_v393 = ((uint64_t (*)(uint64_t))__twr_v390)(__twr_v392);
    if (__twr_v393) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v394 = (uint64_t)(&LexTokenError);
    __twr_v395 = (uint64_t)(&_mng_token354);
    __twr_v396 = (uint64_t)(&"Doesn't exist or not a directory");
    __twr_v397 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v394)(__twr_v395, __twr_v396, __twr_v397, __twr_v397, __twr_v397);
    __twr_l47:;
    __twr_v398 = (uint64_t)(&BtCurrentTarget);
    __twr_v399 = *(uint64_t*)(__twr_v398);
    __twr_v400 = 504ULL;
    __twr_v401 = __twr_v399 + __twr_v400;
    _mng_listhead402 = __twr_v401;
    _mng_listentry403 = _mng_entry377;
    __twr_v404 = 8ULL;
    __twr_v405 = _mng_listhead402 + __twr_v404;
    __twr_v406 = *(uint64_t*)(__twr_v405);
    _mng_last407 = __twr_v406;
    __twr_v408 = _mng_listentry403 + __twr_v404;
    *(uint64_t*)(__twr_v408) = _mng_last407;
    *(uint64_t*)(_mng_listentry403) = _mng_listhead402;
    *(uint64_t*)(_mng_last407) = _mng_listentry403;
    *(uint64_t*)(__twr_v405) = _mng_listentry403;
    __twr_l40:;
    _jkl_epilogue:;
}
void BtTargetInfoJklInclude() {
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t _mng_token411[4];
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t _mng_string421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t _mng_filepath424[11];
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    __twr_v409 = (uint64_t)(&LexMatchToken);
    __twr_v410 = (uint64_t)(&_mng_token411);
    __twr_v412 = 4ULL;
    __twr_v413 = 0ULL;
    __twr_v414 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v409)(__twr_v410, __twr_v412, __twr_v413);
    if (__twr_v414) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v415 = (uint64_t)(&LexTokenError);
    __twr_v416 = (uint64_t)(&_mng_token411);
    __twr_v417 = (uint64_t)(&"Expected a string");
    __twr_v418 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v415)(__twr_v416, __twr_v417, __twr_v418, __twr_v418, __twr_v418);
    __twr_l50:;
    __twr_v419 = (uint64_t)(&_mng_token411);
    __twr_v420 = *(uint64_t*)(__twr_v419);
    _mng_string421 = __twr_v420;
    __twr_v422 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v423 = (uint64_t)(&_mng_filepath424);
    ((void (*)(uint64_t))__twr_v422)(__twr_v423);
    __twr_v425 = (uint64_t)(&BtParseStandardPath);
    __twr_v426 = 48ULL;
    __twr_v427 = _mng_string421 + __twr_v426;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v425)(__twr_v427, __twr_v423, __twr_v419);
    __twr_v428 = (uint64_t)(&BtCurrentTarget);
    __twr_v429 = *(uint64_t*)(__twr_v428);
    __twr_v430 = 400ULL;
    __twr_v431 = __twr_v429 + __twr_v430;
    __twr_v432 = *(uint64_t*)(__twr_v431);
    if (!(__twr_v432)) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v433 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v434 = (uint64_t)(&BtCurrentTarget);
    __twr_v435 = *(uint64_t*)(__twr_v434);
    __twr_v436 = 400ULL;
    __twr_v437 = __twr_v435 + __twr_v436;
    __twr_v438 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v433)(__twr_v437, __twr_v438);
    __twr_l52:;
    __twr_v439 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v440 = (uint64_t)(&BtCurrentTarget);
    __twr_v441 = *(uint64_t*)(__twr_v440);
    __twr_v442 = 400ULL;
    __twr_v443 = __twr_v441 + __twr_v442;
    __twr_v444 = (uint64_t)(&_mng_filepath424);
    __twr_v445 = 16ULL;
    __twr_v446 = __twr_v444 + __twr_v445;
    __twr_v447 = *(uint64_t*)(__twr_v446);
    __twr_v448 = *(uint64_t*)(__twr_v444);
    __twr_v449 = 1ULL;
    __twr_v450 = __twr_v448 - __twr_v449;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v439)(__twr_v443, __twr_v447, __twr_v450);
    __twr_v451 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v451)(__twr_v444);
    __twr_l49:;
    _jkl_epilogue:;
}
void BtTargetInfoLinkOpt() {
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t _mng_token454[4];
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t _mng_string464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t _mng_str467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    __twr_v452 = (uint64_t)(&LexMatchToken);
    __twr_v453 = (uint64_t)(&_mng_token454);
    __twr_v455 = 4ULL;
    __twr_v456 = 0ULL;
    __twr_v457 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v452)(__twr_v453, __twr_v455, __twr_v456);
    if (__twr_v457) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v458 = (uint64_t)(&LexTokenError);
    __twr_v459 = (uint64_t)(&_mng_token454);
    __twr_v460 = (uint64_t)(&"Expected a string");
    __twr_v461 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v458)(__twr_v459, __twr_v460, __twr_v461, __twr_v461, __twr_v461);
    __twr_l55:;
    __twr_v462 = (uint64_t)(&_mng_token454);
    __twr_v463 = *(uint64_t*)(__twr_v462);
    _mng_string464 = __twr_v463;
    __twr_v465 = 48ULL;
    __twr_v466 = _mng_string464 + __twr_v465;
    _mng_str467 = __twr_v466;
    __twr_v468 = (uint64_t)(&BtCurrentTarget);
    __twr_v469 = *(uint64_t*)(__twr_v468);
    __twr_v470 = __twr_v469 + __twr_v465;
    __twr_v471 = *(uint64_t*)(__twr_v470);
    if (!(__twr_v471)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v472 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v473 = (uint64_t)(&BtCurrentTarget);
    __twr_v474 = *(uint64_t*)(__twr_v473);
    __twr_v475 = 48ULL;
    __twr_v476 = __twr_v474 + __twr_v475;
    __twr_v477 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v472)(__twr_v476, __twr_v477);
    __twr_l57:;
    __twr_v478 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v479 = (uint64_t)(&BtCurrentTarget);
    __twr_v480 = *(uint64_t*)(__twr_v479);
    __twr_v481 = 48ULL;
    __twr_v482 = __twr_v480 + __twr_v481;
    __twr_v483 = 16ULL;
    __twr_v484 = _mng_str467 + __twr_v483;
    __twr_v485 = *(uint64_t*)(__twr_v484);
    __twr_v486 = *(uint64_t*)(_mng_str467);
    __twr_v487 = 1ULL;
    __twr_v488 = __twr_v486 - __twr_v487;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v478)(__twr_v482, __twr_v485, __twr_v488);
    __twr_l54:;
    _jkl_epilogue:;
}
void BtTargetInfoJklOpt() {
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t _mng_token491[4];
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t _mng_string501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t _mng_str504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    __twr_v489 = (uint64_t)(&LexMatchToken);
    __twr_v490 = (uint64_t)(&_mng_token491);
    __twr_v492 = 4ULL;
    __twr_v493 = 0ULL;
    __twr_v494 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v489)(__twr_v490, __twr_v492, __twr_v493);
    if (__twr_v494) { goto __twr_l60; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v495 = (uint64_t)(&LexTokenError);
    __twr_v496 = (uint64_t)(&_mng_token491);
    __twr_v497 = (uint64_t)(&"Expected a string");
    __twr_v498 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v495)(__twr_v496, __twr_v497, __twr_v498, __twr_v498, __twr_v498);
    __twr_l60:;
    __twr_v499 = (uint64_t)(&_mng_token491);
    __twr_v500 = *(uint64_t*)(__twr_v499);
    _mng_string501 = __twr_v500;
    __twr_v502 = 48ULL;
    __twr_v503 = _mng_string501 + __twr_v502;
    _mng_str504 = __twr_v503;
    __twr_v505 = (uint64_t)(&BtCurrentTarget);
    __twr_v506 = *(uint64_t*)(__twr_v505);
    __twr_v507 = 312ULL;
    __twr_v508 = __twr_v506 + __twr_v507;
    __twr_v509 = *(uint64_t*)(__twr_v508);
    if (!(__twr_v509)) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v510 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v511 = (uint64_t)(&BtCurrentTarget);
    __twr_v512 = *(uint64_t*)(__twr_v511);
    __twr_v513 = 312ULL;
    __twr_v514 = __twr_v512 + __twr_v513;
    __twr_v515 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v510)(__twr_v514, __twr_v515);
    __twr_l62:;
    __twr_v516 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v517 = (uint64_t)(&BtCurrentTarget);
    __twr_v518 = *(uint64_t*)(__twr_v517);
    __twr_v519 = 312ULL;
    __twr_v520 = __twr_v518 + __twr_v519;
    __twr_v521 = 16ULL;
    __twr_v522 = _mng_str504 + __twr_v521;
    __twr_v523 = *(uint64_t*)(__twr_v522);
    __twr_v524 = *(uint64_t*)(_mng_str504);
    __twr_v525 = 1ULL;
    __twr_v526 = __twr_v524 - __twr_v525;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v516)(__twr_v520, __twr_v523, __twr_v526);
    __twr_l59:;
    _jkl_epilogue:;
}
void BtTargetInfoLink() {
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t _mng_token529[4];
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t _mng_string539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t _mng_filepath542[11];
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    __twr_v527 = (uint64_t)(&LexMatchToken);
    __twr_v528 = (uint64_t)(&_mng_token529);
    __twr_v530 = 4ULL;
    __twr_v531 = 0ULL;
    __twr_v532 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v527)(__twr_v528, __twr_v530, __twr_v531);
    if (__twr_v532) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v533 = (uint64_t)(&LexTokenError);
    __twr_v534 = (uint64_t)(&_mng_token529);
    __twr_v535 = (uint64_t)(&"Expected a string");
    __twr_v536 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v533)(__twr_v534, __twr_v535, __twr_v536, __twr_v536, __twr_v536);
    __twr_l65:;
    __twr_v537 = (uint64_t)(&_mng_token529);
    __twr_v538 = *(uint64_t*)(__twr_v537);
    _mng_string539 = __twr_v538;
    __twr_v540 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v541 = (uint64_t)(&_mng_filepath542);
    ((void (*)(uint64_t))__twr_v540)(__twr_v541);
    __twr_v543 = (uint64_t)(&BtParseStandardPath);
    __twr_v544 = 48ULL;
    __twr_v545 = _mng_string539 + __twr_v544;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v543)(__twr_v545, __twr_v541, __twr_v537);
    __twr_v546 = (uint64_t)(&BtCurrentTarget);
    __twr_v547 = *(uint64_t*)(__twr_v546);
    __twr_v548 = 136ULL;
    __twr_v549 = __twr_v547 + __twr_v548;
    __twr_v550 = *(uint64_t*)(__twr_v549);
    if (!(__twr_v550)) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v551 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v552 = (uint64_t)(&BtCurrentTarget);
    __twr_v553 = *(uint64_t*)(__twr_v552);
    __twr_v554 = 136ULL;
    __twr_v555 = __twr_v553 + __twr_v554;
    __twr_v556 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v551)(__twr_v555, __twr_v556);
    __twr_l67:;
    __twr_v557 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v558 = (uint64_t)(&BtCurrentTarget);
    __twr_v559 = *(uint64_t*)(__twr_v558);
    __twr_v560 = 136ULL;
    __twr_v561 = __twr_v559 + __twr_v560;
    __twr_v562 = (uint64_t)(&_mng_filepath542);
    __twr_v563 = 16ULL;
    __twr_v564 = __twr_v562 + __twr_v563;
    __twr_v565 = *(uint64_t*)(__twr_v564);
    __twr_v566 = *(uint64_t*)(__twr_v562);
    __twr_v567 = 1ULL;
    __twr_v568 = __twr_v566 - __twr_v567;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v557)(__twr_v561, __twr_v565, __twr_v568);
    __twr_v569 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v569)(__twr_v562);
    __twr_l64:;
    _jkl_epilogue:;
}
void BtTargetInfoDyLink() {
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t _mng_token572[4];
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t _mng_rtstring583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t _mng_ctpathtoken586[4];
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t _mng_ctstring595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t _mng_filepath598[11];
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    __twr_v570 = (uint64_t)(&LexMatchToken);
    __twr_v571 = (uint64_t)(&_mng_token572);
    __twr_v573 = 4ULL;
    __twr_v574 = 0ULL;
    __twr_v575 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v570)(__twr_v571, __twr_v573, __twr_v574);
    if (__twr_v575) { goto __twr_l70; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v576 = (uint64_t)(&LexTokenError);
    __twr_v577 = (uint64_t)(&_mng_token572);
    __twr_v578 = (uint64_t)(&"Expected a string");
    __twr_v579 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v576)(__twr_v577, __twr_v578, __twr_v579, __twr_v579, __twr_v579);
    __twr_l70:;
    __twr_v580 = (uint64_t)(&_mng_token572);
    __twr_v581 = 0ULL;
    __twr_v582 = *(uint64_t*)(__twr_v580);
    _mng_rtstring583 = __twr_v582;
    __twr_v584 = (uint64_t)(&LexMatchToken);
    __twr_v585 = (uint64_t)(&_mng_ctpathtoken586);
    __twr_v587 = 4ULL;
    __twr_v588 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v584)(__twr_v585, __twr_v587, __twr_v581);
    if (__twr_v588) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v589 = (uint64_t)(&LexTokenError);
    __twr_v590 = (uint64_t)(&_mng_ctpathtoken586);
    __twr_v591 = (uint64_t)(&"Expected a string");
    __twr_v592 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v589)(__twr_v590, __twr_v591, __twr_v592, __twr_v592, __twr_v592);
    __twr_l72:;
    __twr_v593 = (uint64_t)(&_mng_ctpathtoken586);
    __twr_v594 = *(uint64_t*)(__twr_v593);
    _mng_ctstring595 = __twr_v594;
    __twr_v596 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v597 = (uint64_t)(&_mng_filepath598);
    ((void (*)(uint64_t))__twr_v596)(__twr_v597);
    __twr_v599 = (uint64_t)(&BtParseStandardPath);
    __twr_v600 = 48ULL;
    __twr_v601 = _mng_ctstring595 + __twr_v600;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v599)(__twr_v601, __twr_v597, __twr_v593);
    __twr_v602 = (uint64_t)(&BtCurrentTarget);
    __twr_v603 = *(uint64_t*)(__twr_v602);
    __twr_v604 = 224ULL;
    __twr_v605 = __twr_v603 + __twr_v604;
    __twr_v606 = *(uint64_t*)(__twr_v605);
    if (!(__twr_v606)) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v607 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v608 = (uint64_t)(&BtCurrentTarget);
    __twr_v609 = *(uint64_t*)(__twr_v608);
    __twr_v610 = 224ULL;
    __twr_v611 = __twr_v609 + __twr_v610;
    __twr_v612 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v607)(__twr_v611, __twr_v612);
    __twr_l74:;
    __twr_v613 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v614 = (uint64_t)(&BtCurrentTarget);
    __twr_v615 = *(uint64_t*)(__twr_v614);
    __twr_v616 = 224ULL;
    __twr_v617 = __twr_v615 + __twr_v616;
    __twr_v618 = 48ULL;
    __twr_v619 = _mng_rtstring583 + __twr_v618;
    __twr_v620 = 16ULL;
    __twr_v621 = 64ULL;
    __twr_v622 = _mng_rtstring583 + __twr_v621;
    __twr_v623 = *(uint64_t*)(__twr_v622);
    __twr_v624 = *(uint64_t*)(__twr_v619);
    __twr_v625 = 1ULL;
    __twr_v626 = __twr_v624 - __twr_v625;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v613)(__twr_v617, __twr_v623, __twr_v626);
    __twr_v627 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v628 = *(uint64_t*)(__twr_v614);
    __twr_v629 = __twr_v628 + __twr_v616;
    __twr_v630 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v627)(__twr_v629, __twr_v630);
    __twr_v631 = *(uint64_t*)(__twr_v614);
    __twr_v632 = __twr_v631 + __twr_v616;
    __twr_v633 = (uint64_t)(&_mng_filepath598);
    __twr_v634 = __twr_v633 + __twr_v620;
    __twr_v635 = *(uint64_t*)(__twr_v634);
    __twr_v636 = *(uint64_t*)(__twr_v633);
    __twr_v637 = __twr_v636 - __twr_v625;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v613)(__twr_v632, __twr_v635, __twr_v637);
    __twr_v638 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v638)(__twr_v633);
    __twr_l69:;
    _jkl_epilogue:;
}
uint64_t BtTargetInfoSpecifiers[8] = {
    (uint64_t)(&BtTargetInfoFile),
    (uint64_t)(&BtTargetInfoDepend),
    (uint64_t)(&BtTargetInfoSources),
    (uint64_t)(&BtTargetInfoJklInclude),
    (uint64_t)(&BtTargetInfoLinkOpt),
    (uint64_t)(&BtTargetInfoJklOpt),
    (uint64_t)(&BtTargetInfoLink),
    (uint64_t)(&BtTargetInfoDyLink),
};
uint64_t BtParseTarget() {
    uint64_t _jkl_retv;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t _mng_token641[4];
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t _mng_nametoken658[4];
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t _mng_namestring668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t _mng_target682;
    uint64_t _mng_status683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t _mng_listhead707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t _mng_listhead712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t _mng_listhead716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    __twr_v639 = (uint64_t)(&LexGetToken);
    __twr_v640 = (uint64_t)(&_mng_token641);
    ((void (*)(uint64_t))__twr_v639)(__twr_v640);
    __twr_v642 = 24ULL;
    __twr_v643 = __twr_v640 + __twr_v642;
    __twr_v644 = *(uint8_t*)(__twr_v643);
    __twr_v645 = 6ULL;
    if (__twr_v644 != __twr_v645) { goto __twr_l77; } else { goto __twr_l78; }
    __twr_l78:;
    __twr_v646 = 0ULL;
    _jkl_retv = __twr_v646;
    goto _jkl_epilogue;
    __twr_l77:;
    __twr_v647 = (uint64_t)(&_mng_token641);
    __twr_v648 = 24ULL;
    __twr_v649 = __twr_v647 + __twr_v648;
    __twr_v650 = *(uint8_t*)(__twr_v649);
    __twr_v651 = 1ULL;
    if (__twr_v650 == __twr_v651) { goto __twr_l79; } else { goto __twr_l80; }
    __twr_l80:;
    __twr_v652 = (uint64_t)(&LexTokenError);
    __twr_v653 = (uint64_t)(&_mng_token641);
    __twr_v654 = (uint64_t)(&"Expected TARGET");
    __twr_v655 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v652)(__twr_v653, __twr_v654, __twr_v655, __twr_v655, __twr_v655);
    __twr_l79:;
    __twr_v656 = (uint64_t)(&LexMatchToken);
    __twr_v657 = (uint64_t)(&_mng_nametoken658);
    __twr_v659 = 4ULL;
    __twr_v660 = 0ULL;
    __twr_v661 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v656)(__twr_v657, __twr_v659, __twr_v660);
    if (__twr_v661) { goto __twr_l81; } else { goto __twr_l82; }
    __twr_l82:;
    __twr_v662 = (uint64_t)(&LexTokenError);
    __twr_v663 = (uint64_t)(&_mng_nametoken658);
    __twr_v664 = (uint64_t)(&"Expected a string");
    __twr_v665 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v662)(__twr_v663, __twr_v664, __twr_v665, __twr_v665, __twr_v665);
    __twr_l81:;
    __twr_v666 = (uint64_t)(&_mng_nametoken658);
    __twr_v667 = *(uint64_t*)(__twr_v666);
    _mng_namestring668 = __twr_v667;
    __twr_v669 = (uint64_t)(&TlLookupHashTable);
    __twr_v670 = (uint64_t)(&BtTargetHashTable);
    __twr_v671 = 64ULL;
    __twr_v672 = _mng_namestring668 + __twr_v671;
    __twr_v673 = *(uint64_t*)(__twr_v672);
    __twr_v674 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v669)(__twr_v670, __twr_v673);
    if (!(__twr_v674)) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v675 = (uint64_t)(&LexTokenError);
    __twr_v676 = (uint64_t)(&_mng_nametoken658);
    __twr_v677 = (uint64_t)(&"Target already defined");
    __twr_v678 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v675)(__twr_v676, __twr_v677, __twr_v678, __twr_v678, __twr_v678);
    __twr_l83:;
    __twr_v679 = (uint64_t)(&TlBumpAlloc);
    __twr_v680 = 634ULL;
    __twr_v681 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v679)(__twr_v680, (uint64_t)(&_mng_target682));
    _mng_status683 = __twr_v681;
    if (!(_mng_status683)) { goto __twr_l85; } else { goto __twr_l86; }
    __twr_l86:;
    __twr_v684 = (uint64_t)(&TlInternalError);
    __twr_v685 = (uint64_t)(&"Failed to allocate target");
    __twr_v686 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v684)(__twr_v685, __twr_v686, __twr_v686, __twr_v686);
    __twr_l85:;
    __twr_v687 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v688 = 48ULL;
    __twr_v689 = _mng_target682 + __twr_v688;
    ((void (*)(uint64_t))__twr_v687)(__twr_v689);
    __twr_v690 = 312ULL;
    __twr_v691 = _mng_target682 + __twr_v690;
    ((void (*)(uint64_t))__twr_v687)(__twr_v691);
    __twr_v692 = 400ULL;
    __twr_v693 = _mng_target682 + __twr_v692;
    ((void (*)(uint64_t))__twr_v687)(__twr_v693);
    __twr_v694 = 136ULL;
    __twr_v695 = _mng_target682 + __twr_v694;
    ((void (*)(uint64_t))__twr_v687)(__twr_v695);
    __twr_v696 = 224ULL;
    __twr_v697 = _mng_target682 + __twr_v696;
    ((void (*)(uint64_t))__twr_v687)(__twr_v697);
    __twr_v698 = 520ULL;
    __twr_v699 = _mng_target682 + __twr_v698;
    ((void (*)(uint64_t))__twr_v687)(__twr_v699);
    __twr_v700 = 0ULL;
    __twr_v701 = 632ULL;
    __twr_v702 = _mng_target682 + __twr_v701;
    *(uint8_t*)(__twr_v702) = __twr_v700;
    __twr_v703 = 633ULL;
    __twr_v704 = _mng_target682 + __twr_v703;
    *(uint8_t*)(__twr_v704) = __twr_v700;
    __twr_v705 = 488ULL;
    __twr_v706 = _mng_target682 + __twr_v705;
    _mng_listhead707 = __twr_v706;
    __twr_v708 = 8ULL;
    __twr_v709 = _mng_listhead707 + __twr_v708;
    *(uint64_t*)(__twr_v709) = _mng_listhead707;
    *(uint64_t*)(_mng_listhead707) = _mng_listhead707;
    __twr_v710 = 504ULL;
    __twr_v711 = _mng_target682 + __twr_v710;
    _mng_listhead712 = __twr_v711;
    __twr_v713 = _mng_listhead712 + __twr_v708;
    *(uint64_t*)(__twr_v713) = _mng_listhead712;
    *(uint64_t*)(_mng_listhead712) = _mng_listhead712;
    __twr_v714 = 608ULL;
    __twr_v715 = _mng_target682 + __twr_v714;
    _mng_listhead716 = __twr_v715;
    __twr_v717 = _mng_listhead716 + __twr_v708;
    *(uint64_t*)(__twr_v717) = _mng_listhead716;
    *(uint64_t*)(_mng_listhead716) = _mng_listhead716;
    __twr_v718 = (uint64_t)(&BtCurrentTarget);
    *(uint64_t*)(__twr_v718) = _mng_target682;
    __twr_v719 = (uint64_t)(&LexMatchToken);
    __twr_v720 = (uint64_t)(&_mng_token641);
    __twr_v721 = 3ULL;
    __twr_v722 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v719)(__twr_v720, __twr_v721, __twr_v700);
    if (__twr_v722) { goto __twr_l88; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v723 = (uint64_t)(&LexMatchToken);
    __twr_v724 = (uint64_t)(&_mng_token641);
    __twr_v725 = 2ULL;
    __twr_v726 = 0ULL;
    __twr_v727 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v723)(__twr_v724, __twr_v725, __twr_v726);
    if (__twr_v727) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v728 = (uint64_t)(&LexTokenError);
    __twr_v729 = (uint64_t)(&_mng_token641);
    __twr_v730 = (uint64_t)(&"Expected a target info specifier");
    __twr_v731 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v728)(__twr_v729, __twr_v730, __twr_v731, __twr_v731, __twr_v731);
    __twr_l90:;
    __twr_v732 = (uint64_t)(&BtTargetInfoSpecifiers);
    __twr_v733 = (uint64_t)(&_mng_token641);
    __twr_v734 = 25ULL;
    __twr_v735 = __twr_v733 + __twr_v734;
    __twr_v736 = *(uint8_t*)(__twr_v735);
    __twr_v737 = 3ULL;
    __twr_v738 = __twr_v736 << __twr_v737;
    __twr_v739 = __twr_v732 + __twr_v738;
    __twr_v740 = *(uint64_t*)(__twr_v739);
    ((void (*)())__twr_v740)();
    __twr_l89:;
    __twr_v741 = (uint64_t)(&LexMatchToken);
    __twr_v742 = (uint64_t)(&_mng_token641);
    __twr_v743 = 3ULL;
    __twr_v744 = 0ULL;
    __twr_v745 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v741)(__twr_v742, __twr_v743, __twr_v744);
    if (!(__twr_v745)) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v746 = (uint64_t)(&TlInsertHashTable);
    __twr_v747 = (uint64_t)(&BtTargetHashTable);
    __twr_v748 = 64ULL;
    __twr_v749 = _mng_namestring668 + __twr_v748;
    __twr_v750 = *(uint64_t*)(__twr_v749);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v746)(__twr_v747, _mng_target682, __twr_v750);
    __twr_v751 = 1ULL;
    _jkl_retv = __twr_v751;
    goto _jkl_epilogue;
    __twr_l76:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtParse() {
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t _mng_target762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    __twr_v752 = (uint64_t)(&TlInitializeHashTable);
    __twr_v753 = (uint64_t)(&BtTargetHashTable);
    ((void (*)(uint64_t))__twr_v752)(__twr_v753);
    __twr_v754 = (uint64_t)(&BtParseTarget);
    __twr_v755 = ((uint64_t (*)())__twr_v754)();
    if (!(__twr_v755)) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_l95:;
    __twr_v756 = (uint64_t)(&BtParseTarget);
    __twr_v757 = ((uint64_t (*)())__twr_v756)();
    if (__twr_v757) { goto __twr_l93; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v758 = (uint64_t)(&TlLookupHashTable);
    __twr_v759 = (uint64_t)(&BtTargetHashTable);
    __twr_v760 = (uint64_t)(&FeTargetName);
    __twr_v761 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v758)(__twr_v759, __twr_v760);
    _mng_target762 = __twr_v761;
    if (_mng_target762) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v763 = (uint64_t)(&TlUserError);
    __twr_v764 = (uint64_t)(&"Target not defined");
    __twr_v765 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v763)(__twr_v764, __twr_v765, __twr_v765, __twr_v765);
    __twr_l96:;
    __twr_v766 = (uint64_t)(&BtSelectedTarget);
    *(uint64_t*)(__twr_v766) = _mng_target762;
    __twr_l92:;
    _jkl_epilogue:;
}
void BtLookupConfigMacros() {
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t _mng_macro772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    __twr_v767 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v768 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v769 = *(uint64_t*)(__twr_v768);
    __twr_v770 = (uint64_t)(&"ARCHITECTURE");
    __twr_v771 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v767)(__twr_v769, __twr_v770);
    _mng_macro772 = __twr_v771;
    if (_mng_macro772) { goto __twr_l99; } else { goto __twr_l100; }
    __twr_l100:;
    __twr_v773 = (uint64_t)(&TlUserError);
    __twr_v774 = (uint64_t)(&"ARCHITECTURE wasn't defined in the config");
    __twr_v775 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v773)(__twr_v774, __twr_v775, __twr_v775, __twr_v775);
    __twr_l99:;
    __twr_v776 = 264ULL;
    __twr_v777 = _mng_macro772 + __twr_v776;
    __twr_v778 = *(uint8_t*)(__twr_v777);
    if (!(__twr_v778)) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v779 = (uint64_t)(&TlUserError);
    __twr_v780 = (uint64_t)(&"ARCHITECTURE is a function macro for some reason");
    __twr_v781 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v779)(__twr_v780, __twr_v781, __twr_v781, __twr_v781);
    __twr_l101:;
    __twr_v782 = (uint64_t)(&TlCopyString);
    __twr_v783 = (uint64_t)(&BtTargetArchitectureName);
    __twr_v784 = 96ULL;
    __twr_v785 = _mng_macro772 + __twr_v784;
    __twr_v786 = *(uint64_t*)(__twr_v785);
    __twr_v787 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v782)(__twr_v783, __twr_v786, __twr_v787);
    __twr_v788 = (uint64_t)(&TlCompareString);
    __twr_v789 = (uint64_t)(&"CHost");
    __twr_v790 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v788)(__twr_v783, __twr_v789);
    if (__twr_v790) { goto __twr_l103; } else { goto __twr_l104; }
    __twr_l104:;
    __twr_v791 = 1ULL;
    __twr_v792 = (uint64_t)(&BtCHost);
    *(uint64_t*)(__twr_v792) = __twr_v791;
    __twr_l103:;
    __twr_v793 = 1ULL;
    __twr_v794 = (uint64_t)(&BtJobCount);
    *(uint64_t*)(__twr_v794) = __twr_v793;
    __twr_v795 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v796 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v797 = *(uint64_t*)(__twr_v796);
    __twr_v798 = (uint64_t)(&"JOBS");
    __twr_v799 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v795)(__twr_v797, __twr_v798);
    _mng_macro772 = __twr_v799;
    if (!(_mng_macro772)) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v800 = 264ULL;
    __twr_v801 = _mng_macro772 + __twr_v800;
    __twr_v802 = *(uint8_t*)(__twr_v801);
    if (!(__twr_v802)) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v803 = (uint64_t)(&TlUserError);
    __twr_v804 = (uint64_t)(&"JOBS is a function macro for some reason");
    __twr_v805 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v803)(__twr_v804, __twr_v805, __twr_v805, __twr_v805);
    __twr_l107:;
    __twr_v806 = (uint64_t)(&TlStringToNumber);
    __twr_v807 = 96ULL;
    __twr_v808 = _mng_macro772 + __twr_v807;
    __twr_v809 = *(uint64_t*)(__twr_v808);
    __twr_v810 = 18446744073709551615ULL;
    __twr_v811 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v806)(__twr_v809, __twr_v810, (uint64_t)(&__twr_v812));
    __twr_v813 = (uint64_t)(&BtJobCount);
    *(uint64_t*)(__twr_v813) = __twr_v812;
    if (__twr_v811) { goto __twr_l109; } else { goto __twr_l110; }
    __twr_l110:;
    __twr_v814 = (uint64_t)(&TlUserError);
    __twr_v815 = (uint64_t)(&"JOBS wasn't a numeric value");
    __twr_v816 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v814)(__twr_v815, __twr_v816, __twr_v816, __twr_v816);
    __twr_l109:;
    __twr_v817 = (uint64_t)(&BtJobCount);
    __twr_v818 = *(uint64_t*)(__twr_v817);
    if (__twr_v818) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v819 = (uint64_t)(&TlUserError);
    __twr_v820 = (uint64_t)(&"Zero JOBS specified");
    __twr_v821 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v819)(__twr_v820, __twr_v821, __twr_v821, __twr_v821);
    __twr_l111:;
    __twr_l105:;
    __twr_v822 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v823 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v824 = *(uint64_t*)(__twr_v823);
    __twr_v825 = (uint64_t)(&"SDK_BASE");
    __twr_v826 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v822)(__twr_v824, __twr_v825);
    _mng_macro772 = __twr_v826;
    if (_mng_macro772) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v827 = (uint64_t)(&TlUserError);
    __twr_v828 = (uint64_t)(&"SDK_BASE wasn't defined in the config");
    __twr_v829 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v827)(__twr_v828, __twr_v829, __twr_v829, __twr_v829);
    __twr_l113:;
    __twr_v830 = 264ULL;
    __twr_v831 = _mng_macro772 + __twr_v830;
    __twr_v832 = *(uint8_t*)(__twr_v831);
    if (!(__twr_v832)) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v833 = (uint64_t)(&TlUserError);
    __twr_v834 = (uint64_t)(&"SDK_BASE is a function macro for some reason");
    __twr_v835 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v833)(__twr_v834, __twr_v835, __twr_v835, __twr_v835);
    __twr_l115:;
    __twr_v836 = (uint64_t)(&TlCopyString);
    __twr_v837 = (uint64_t)(&BtSdkBase);
    __twr_v838 = 96ULL;
    __twr_v839 = _mng_macro772 + __twr_v838;
    __twr_v840 = *(uint64_t*)(__twr_v839);
    __twr_v841 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v836)(__twr_v837, __twr_v840, __twr_v841);
    __twr_v842 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v843 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v844 = *(uint64_t*)(__twr_v843);
    __twr_v845 = (uint64_t)(&"PREBUILT_COPIES");
    __twr_v846 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v842)(__twr_v844, __twr_v845);
    _mng_macro772 = __twr_v846;
    if (!(_mng_macro772)) { goto __twr_l117; } else { goto __twr_l118; }
    __twr_l118:;
    __twr_v847 = 264ULL;
    __twr_v848 = _mng_macro772 + __twr_v847;
    __twr_v849 = *(uint8_t*)(__twr_v848);
    if (!(__twr_v849)) { goto __twr_l119; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v850 = (uint64_t)(&TlUserError);
    __twr_v851 = (uint64_t)(&"PREBUILT_COPIES is a function macro for some reason");
    __twr_v852 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v850)(__twr_v851, __twr_v852, __twr_v852, __twr_v852);
    __twr_l119:;
    __twr_v853 = (uint64_t)(&TlCopyString);
    __twr_v854 = (uint64_t)(&BtPrebuiltCopiesPath);
    __twr_v855 = 1ULL;
    __twr_v856 = 96ULL;
    __twr_v857 = _mng_macro772 + __twr_v856;
    __twr_v858 = *(uint64_t*)(__twr_v857);
    __twr_v859 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v853)(__twr_v854, __twr_v858, __twr_v859);
    __twr_v860 = (uint64_t)(&BtPrebuiltCopies);
    *(uint64_t*)(__twr_v860) = __twr_v855;
    __twr_l117:;
    __twr_l98:;
    _jkl_epilogue:;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlIterateDirectory(uint64_t _mng_path88, uint64_t _mng_callback89, uint64_t _mng_context90);
extern uint64_t TlGetPathExtension(uint64_t _mng_path91);
extern uint64_t TlStatFile(uint64_t _mng_path92, uint64_t _mng_statrecord93);
extern void TlInitializeZone(uint64_t _mng_zone94, uint64_t _mng_blocksize95);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone96);
extern void TlFreeToZone(uint64_t _mng_zone97, uint64_t _mng_block98);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant99);
extern void TlPunchValue(uint64_t _mng_ptr100, uint64_t _mng_value101, uint64_t _mng_bytes102);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg103);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename104, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock105, uint64_t _mng_filepath106);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope107);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg108);
extern void LexExpandMacro(uint64_t _mng_macro109, uint64_t _mng_token110);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream111, uint64_t _mng_macro112);
extern void LexUninitializeStream(uint64_t _mng_stream113);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream114);
extern void LexPushStream(uint64_t _mng_stream115);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream116, uint64_t _mng_fileblock117, uint64_t _mng_handle118);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock119, uint64_t _mng_handle120);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest121, uint64_t _mng_src122);
extern void LexGetToken(uint64_t _mng_token123);
extern void LexPutbackToken(uint64_t _mng_token124);
extern uint64_t LexMatchToken(uint64_t _mng_token125, uint64_t _mng_type126, uint64_t _mng_subtype127);
extern void LexStreamError(uint64_t _mng_str128, uint64_t _mng_err1129, uint64_t _mng_err2130, uint64_t _mng_err3131);
extern void LexTokenError(uint64_t _mng_token132, uint64_t _mng_str133, uint64_t _mng_err1134, uint64_t _mng_err2135, uint64_t _mng_err3136);
extern uint64_t LexCrunchNumber(uint64_t _mng_token137, uint64_t _mng_buffer138);
extern uint64_t BtStatFile(uint64_t _mng_fullpath139);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name140, uint64_t _mng_type141, uint64_t _mng_subtype142, uint64_t _mng_context143) {
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t _mng_keyword150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    __twr_v144 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v145 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v146 = *(uint64_t*)(__twr_v145);
    __twr_v147 = 56ULL;
    __twr_v148 = __twr_v146 * __twr_v147;
    __twr_v149 = __twr_v144 + __twr_v148;
    _mng_keyword150 = __twr_v149;
    __twr_v151 = 1ULL;
    __twr_v152 = __twr_v146 + __twr_v151;
    *(uint64_t*)(__twr_v145) = __twr_v152;
    __twr_v153 = 48ULL;
    __twr_v154 = _mng_keyword150 + __twr_v153;
    *(uint8_t*)(__twr_v154) = _mng_type141;
    __twr_v155 = 49ULL;
    __twr_v156 = _mng_keyword150 + __twr_v155;
    *(uint8_t*)(__twr_v156) = _mng_subtype142;
    __twr_v157 = 50ULL;
    __twr_v158 = _mng_keyword150 + __twr_v157;
    *(uint8_t*)(__twr_v158) = _mng_context143;
    __twr_v159 = (uint64_t)(&TlInsertHashTable);
    __twr_v160 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v159)(__twr_v160, _mng_keyword150, _mng_name140);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t _mng_dumpster166;
    uint64_t _mng_fileblock167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t _mng_filestream174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    __twr_v161 = (uint64_t)(&FeCreateFileBlock);
    __twr_v162 = (uint64_t)(&FeInputFile);
    __twr_v163 = 0ULL;
    __twr_v164 = 1ULL;
    __twr_v165 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v161)(__twr_v162, (uint64_t)(&_mng_dumpster166));
    _mng_fileblock167 = __twr_v165;
    __twr_v168 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v168)(_mng_fileblock167, __twr_v162);
    __twr_v169 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v169)();
    __twr_v170 = (uint64_t)(&LexCreateFileStream);
    __twr_v171 = (uint64_t)(&FeInputFileHandle);
    __twr_v172 = *(uint64_t*)(__twr_v171);
    __twr_v173 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v170)(_mng_fileblock167, __twr_v172);
    _mng_filestream174 = __twr_v173;
    __twr_v175 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v175)(_mng_filestream174);
    __twr_v176 = (uint64_t)(&TlInitializeZone);
    __twr_v177 = (uint64_t)(&LexInternedStringZone);
    __twr_v178 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v176)(__twr_v177, __twr_v178);
    __twr_v179 = (uint64_t)(&TlInitializeHashTable);
    __twr_v180 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v179)(__twr_v180);
    __twr_v181 = (uint64_t)(&LexInsertKeyword);
    __twr_v182 = (uint64_t)(&"END");
    __twr_v183 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v182, __twr_v183, __twr_v163, __twr_v163);
    __twr_v184 = (uint64_t)(&"TARGET");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v184, __twr_v164, __twr_v163, __twr_v163);
    __twr_v185 = (uint64_t)(&"FILE");
    __twr_v186 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v185, __twr_v186, __twr_v163, __twr_v163);
    __twr_v187 = (uint64_t)(&"DEPEND");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v187, __twr_v186, __twr_v164, __twr_v163);
    __twr_v188 = (uint64_t)(&"SOURCES");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v188, __twr_v186, __twr_v186, __twr_v163);
    __twr_v189 = (uint64_t)(&"JKLINCLUDE");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v189, __twr_v186, __twr_v183, __twr_v163);
    __twr_v190 = (uint64_t)(&"LINKOPT");
    __twr_v191 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v190, __twr_v186, __twr_v191, __twr_v163);
    __twr_v192 = (uint64_t)(&"JKLOPT");
    __twr_v193 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v192, __twr_v186, __twr_v193, __twr_v163);
    __twr_v194 = (uint64_t)(&"LINK");
    __twr_v195 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v194, __twr_v186, __twr_v195, __twr_v163);
    __twr_v196 = (uint64_t)(&"DYLINK");
    __twr_v197 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v196, __twr_v186, __twr_v197, __twr_v163);
    __twr_l2:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t _mng_byte201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t _mng_nextbyte246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    _mng_comment198 = 0ULL;
    __twr_l4:;
    __twr_v199 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v200 = ((uint64_t (*)())__twr_v199)();
    _mng_byte201 = __twr_v200;
    if (_mng_byte201) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    goto __twr_l5;
    __twr_l6:;
    if (!(_mng_comment198)) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v202 = 10ULL;
    if (_mng_byte201 == __twr_v202) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    goto __twr_l4;
    __twr_l11:;
    _mng_comment198 = 0ULL;
    goto __twr_l8;
    __twr_l10:;
    __twr_v203 = (uint64_t)(&LexCurrentStream);
    __twr_v204 = *(uint64_t*)(__twr_v203);
    __twr_v205 = 80ULL;
    __twr_v206 = __twr_v204 + __twr_v205;
    __twr_v207 = *(uint8_t*)(__twr_v206);
    if (!(__twr_v207)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v208 = 0ULL;
    __twr_v209 = (uint64_t)(&LexCurrentStream);
    __twr_v210 = *(uint64_t*)(__twr_v209);
    __twr_v211 = 80ULL;
    __twr_v212 = __twr_v210 + __twr_v211;
    *(uint8_t*)(__twr_v212) = __twr_v208;
    goto __twr_l8;
    __twr_l14:;
    __twr_v213 = 92ULL;
    if (_mng_byte201 != __twr_v213) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v214 = 1ULL;
    __twr_v215 = (uint64_t)(&LexCurrentStream);
    __twr_v216 = *(uint64_t*)(__twr_v215);
    __twr_v217 = 80ULL;
    __twr_v218 = __twr_v216 + __twr_v217;
    *(uint8_t*)(__twr_v218) = __twr_v214;
    goto __twr_l8;
    __twr_l16:;
    __twr_v219 = (uint64_t)(&LexCurrentStream);
    __twr_v220 = *(uint64_t*)(__twr_v219);
    __twr_v221 = 81ULL;
    __twr_v222 = __twr_v220 + __twr_v221;
    __twr_v223 = *(uint8_t*)(__twr_v222);
    if (!(__twr_v223)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v224 = 34ULL;
    __twr_v225 = (_mng_byte201 == __twr_v224);
    __twr_v226 = !__twr_v225;
    __twr_v227 = (uint64_t)(&LexCurrentStream);
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = 81ULL;
    __twr_v230 = __twr_v228 + __twr_v229;
    *(uint8_t*)(__twr_v230) = __twr_v226;
    goto __twr_l8;
    __twr_l18:;
    __twr_v231 = (uint64_t)(&LexCurrentStream);
    __twr_v232 = *(uint64_t*)(__twr_v231);
    __twr_v233 = 82ULL;
    __twr_v234 = __twr_v232 + __twr_v233;
    __twr_v235 = *(uint8_t*)(__twr_v234);
    if (!(__twr_v235)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v236 = 39ULL;
    __twr_v237 = (_mng_byte201 == __twr_v236);
    __twr_v238 = !__twr_v237;
    __twr_v239 = (uint64_t)(&LexCurrentStream);
    __twr_v240 = *(uint64_t*)(__twr_v239);
    __twr_v241 = 82ULL;
    __twr_v242 = __twr_v240 + __twr_v241;
    *(uint8_t*)(__twr_v242) = __twr_v238;
    goto __twr_l8;
    __twr_l20:;
    __twr_v243 = 47ULL;
    if (_mng_byte201 != __twr_v243) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v244 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v245 = ((uint64_t (*)())__twr_v244)();
    _mng_nextbyte246 = __twr_v245;
    __twr_v247 = 47ULL;
    if (_mng_nextbyte246 != __twr_v247) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    _mng_comment198 = 1ULL;
    goto __twr_l4;
    __twr_l23:;
    __twr_v248 = (uint64_t)(&LexCurrentStream);
    __twr_v249 = *(uint64_t*)(__twr_v248);
    __twr_v250 = 83ULL;
    __twr_v251 = __twr_v249 + __twr_v250;
    *(uint8_t*)(__twr_v251) = _mng_nextbyte246;
    goto __twr_l8;
    __twr_l22:;
    __twr_v252 = 34ULL;
    if (_mng_byte201 != __twr_v252) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v253 = 1ULL;
    __twr_v254 = (uint64_t)(&LexCurrentStream);
    __twr_v255 = *(uint64_t*)(__twr_v254);
    __twr_v256 = 81ULL;
    __twr_v257 = __twr_v255 + __twr_v256;
    *(uint8_t*)(__twr_v257) = __twr_v253;
    goto __twr_l8;
    __twr_l26:;
    __twr_v258 = 39ULL;
    if (_mng_byte201 != __twr_v258) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v259 = 1ULL;
    __twr_v260 = (uint64_t)(&LexCurrentStream);
    __twr_v261 = *(uint64_t*)(__twr_v260);
    __twr_v262 = 82ULL;
    __twr_v263 = __twr_v261 + __twr_v262;
    *(uint8_t*)(__twr_v263) = __twr_v259;
    goto __twr_l8;
    __twr_l28:;
    __twr_v264 = 35ULL;
    if (_mng_byte201 != __twr_v264) { goto __twr_l8; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v265 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v265)();
    _mng_byte201 = 10ULL;
    __twr_l8:;
    __twr_v266 = (uint64_t)(&LexFalseCount);
    __twr_v267 = *(uint32_t*)(__twr_v266);
    if (!(__twr_v267)) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto __twr_l4;
    __twr_l30:;
    goto __twr_l5;
    goto __twr_l4;
    __twr_l5:;
    _jkl_retv = _mng_byte201;
    goto _jkl_epilogue;
    __twr_l3:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token268, uint64_t _mng_terminator269, uint64_t _mng_dynamicbuffer270, uint64_t _mng_buffer271, uint64_t _mng_o_length) {
    uint64_t _mng_len272;
    uint64_t _mng_isbackslash273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t _mng_byte276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t _mng_length298;
    _mng_len272 = 0ULL;
    _mng_isbackslash273 = 0ULL;
    __twr_l33:;
    __twr_v274 = (uint64_t)(&LexGetCharacter);
    __twr_v275 = ((uint64_t (*)())__twr_v274)();
    _mng_byte276 = __twr_v275;
    if (_mng_byte276) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v277 = (uint64_t)(&LexTokenError);
    __twr_v278 = (uint64_t)(&"String token terminated by EOF!");
    __twr_v279 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v277)(_mng_token268, __twr_v278, __twr_v279, __twr_v279, __twr_v279);
    __twr_l35:;
    if (_mng_isbackslash273) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    if (_mng_byte276 != _mng_terminator269) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    goto __twr_l34;
    goto __twr_l40;
    __twr_l42:;
    __twr_v280 = 92ULL;
    if (_mng_byte276 != __twr_v280) { goto __twr_l40; } else { goto __twr_l43; }
    __twr_l43:;
    _mng_isbackslash273 = 1ULL;
    goto __twr_l33;
    __twr_l40:;
    goto __twr_l37;
    __twr_l39:;
    _mng_isbackslash273 = 0ULL;
    __twr_v281 = 110ULL;
    if (_mng_byte276 != __twr_v281) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    _mng_byte276 = 10ULL;
    goto __twr_l44;
    __twr_l46:;
    __twr_v282 = 116ULL;
    if (_mng_byte276 != __twr_v282) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_byte276 = 9ULL;
    goto __twr_l44;
    __twr_l48:;
    __twr_v283 = 114ULL;
    if (_mng_byte276 != __twr_v283) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_byte276 = 13ULL;
    goto __twr_l44;
    __twr_l50:;
    __twr_v284 = 98ULL;
    if (_mng_byte276 != __twr_v284) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_byte276 = 8ULL;
    goto __twr_l44;
    __twr_l52:;
    __twr_v285 = 91ULL;
    if (_mng_byte276 != __twr_v285) { goto __twr_l44; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_byte276 = 27ULL;
    __twr_l44:;
    __twr_l37:;
    if (!(_mng_dynamicbuffer270)) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v286 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v286)(_mng_dynamicbuffer270, _mng_byte276);
    goto __twr_l54;
    __twr_l56:;
    __twr_v287 = 127ULL;
    if (_mng_len272 != __twr_v287) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v288 = (uint64_t)(&LexTokenError);
    __twr_v289 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v290 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v288)(_mng_token268, __twr_v289, __twr_v290, __twr_v290, __twr_v290);
    goto __twr_l54;
    __twr_l58:;
    __twr_v291 = 1ULL;
    __twr_v292 = _mng_buffer271 + _mng_len272;
    *(uint8_t*)(__twr_v292) = _mng_byte276;
    __twr_v293 = _mng_len272 + __twr_v291;
    _mng_len272 = __twr_v293;
    __twr_l54:;
    goto __twr_l33;
    __twr_l34:;
    if (!(_mng_dynamicbuffer270)) { goto __twr_l61; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v294 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v295 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v294)(_mng_dynamicbuffer270, __twr_v295);
    goto __twr_l59;
    __twr_l61:;
    __twr_v296 = 0ULL;
    __twr_v297 = _mng_buffer271 + _mng_len272;
    *(uint8_t*)(__twr_v297) = __twr_v296;
    _mng_length298 = _mng_len272;
    __twr_l59:;
    __twr_l32:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length298;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token299, uint64_t _mng_buffer300) {
    uint64_t _jkl_retv;
    uint64_t _mng_num301;
    uint64_t _mng_i302;
    uint64_t __twr_v303;
    uint64_t _mng_lastnum304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    _mng_num301 = 0ULL;
    _mng_i302 = 0ULL;
    __twr_v303 = *(uint8_t*)(_mng_buffer300);
    if (!(__twr_v303)) { goto __twr_l64; } else { goto __twr_l63; }
    __twr_l63:;
    _mng_lastnum304 = _mng_num301;
    __twr_v305 = 8ULL;
    __twr_v306 = _mng_num301 << __twr_v305;
    _mng_num301 = __twr_v306;
    if (!(_mng_lastnum304)) { goto __twr_l66; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v307 = _mng_num301 / _mng_lastnum304;
    __twr_v308 = 256ULL;
    if (__twr_v307 == __twr_v308) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v309 = (uint64_t)(&LexTokenError);
    __twr_v310 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v311 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v309)(_mng_token299, __twr_v310, __twr_v311, __twr_v311, __twr_v311);
    __twr_l66:;
    __twr_v312 = _mng_buffer300 + _mng_i302;
    __twr_v313 = *(uint8_t*)(__twr_v312);
    __twr_v314 = _mng_num301 + __twr_v313;
    _mng_num301 = __twr_v314;
    if (_mng_num301 >= _mng_lastnum304) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v315 = (uint64_t)(&LexTokenError);
    __twr_v316 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v317 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v315)(_mng_token299, __twr_v316, __twr_v317, __twr_v317, __twr_v317);
    __twr_l69:;
    __twr_v318 = 1ULL;
    __twr_v319 = _mng_i302 + __twr_v318;
    _mng_i302 = __twr_v319;
    __twr_l65:;
    __twr_v320 = _mng_buffer300 + _mng_i302;
    __twr_v321 = *(uint8_t*)(__twr_v320);
    if (__twr_v321) { goto __twr_l63; } else { goto __twr_l64; }
    __twr_l64:;
    _jkl_retv = _mng_num301;
    goto _jkl_epilogue;
    __twr_l62:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token322, uint64_t _mng_buffer323) {
    uint64_t _jkl_retv;
    uint64_t _mng_num324;
    uint64_t _mng_i325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t _mng_lastnum345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t _mng_lastnum408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t _mng_lastnum439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    _mng_num324 = 0ULL;
    _mng_i325 = 0ULL;
    __twr_v326 = *(uint8_t*)(_mng_buffer323);
    __twr_v327 = 48ULL;
    if (__twr_v326 != __twr_v327) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v328 = 1ULL;
    __twr_v329 = _mng_buffer323 + __twr_v328;
    __twr_v330 = *(uint8_t*)(__twr_v329);
    if (__twr_v330) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v331 = 0ULL;
    _jkl_retv = __twr_v331;
    goto _jkl_epilogue;
    __twr_l74:;
    __twr_v332 = 1ULL;
    __twr_v333 = _mng_buffer323 + __twr_v332;
    __twr_v334 = *(uint8_t*)(__twr_v333);
    __twr_v335 = 120ULL;
    if (__twr_v334 != __twr_v335) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v336 = 2ULL;
    __twr_v337 = _mng_buffer323 + __twr_v336;
    __twr_v338 = *(uint8_t*)(__twr_v337);
    if (__twr_v338) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v339 = (uint64_t)(&LexTokenError);
    __twr_v340 = (uint64_t)(&"Unfinished hex number.");
    __twr_v341 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v339)(_mng_token322, __twr_v340, __twr_v341, __twr_v341, __twr_v341);
    __twr_l78:;
    _mng_i325 = 2ULL;
    __twr_v342 = 2ULL;
    __twr_v343 = _mng_buffer323 + __twr_v342;
    __twr_v344 = *(uint8_t*)(__twr_v343);
    if (!(__twr_v344)) { goto __twr_l81; } else { goto __twr_l80; }
    __twr_l80:;
    _mng_lastnum345 = _mng_num324;
    __twr_v346 = 4ULL;
    __twr_v347 = _mng_num324 << __twr_v346;
    _mng_num324 = __twr_v347;
    if (!(_mng_lastnum345)) { goto __twr_l83; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v348 = _mng_num324 / _mng_lastnum345;
    __twr_v349 = 16ULL;
    if (__twr_v348 == __twr_v349) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v350 = (uint64_t)(&LexTokenError);
    __twr_v351 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v352 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v350)(_mng_token322, __twr_v351, __twr_v352, __twr_v352, __twr_v352);
    __twr_l83:;
    __twr_v353 = _mng_buffer323 + _mng_i325;
    __twr_v354 = *(uint8_t*)(__twr_v353);
    __twr_v355 = 48ULL;
    if (__twr_v354 < __twr_v355) { goto __twr_l88; } else { goto __twr_l89; }
    __twr_l89:;
    __twr_v356 = _mng_buffer323 + _mng_i325;
    __twr_v357 = *(uint8_t*)(__twr_v356);
    __twr_v358 = 57ULL;
    if (__twr_v357 > __twr_v358) { goto __twr_l88; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v359 = _mng_buffer323 + _mng_i325;
    __twr_v360 = *(uint8_t*)(__twr_v359);
    __twr_v361 = 48ULL;
    __twr_v362 = __twr_v360 - __twr_v361;
    __twr_v363 = _mng_num324 + __twr_v362;
    _mng_num324 = __twr_v363;
    goto __twr_l86;
    __twr_l88:;
    __twr_v364 = _mng_buffer323 + _mng_i325;
    __twr_v365 = *(uint8_t*)(__twr_v364);
    __twr_v366 = 65ULL;
    if (__twr_v365 < __twr_v366) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v367 = _mng_buffer323 + _mng_i325;
    __twr_v368 = *(uint8_t*)(__twr_v367);
    __twr_v369 = 70ULL;
    if (__twr_v368 > __twr_v369) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    __twr_v370 = _mng_buffer323 + _mng_i325;
    __twr_v371 = *(uint8_t*)(__twr_v370);
    __twr_v372 = 55ULL;
    __twr_v373 = __twr_v371 - __twr_v372;
    __twr_v374 = _mng_num324 + __twr_v373;
    _mng_num324 = __twr_v374;
    goto __twr_l86;
    __twr_l91:;
    __twr_v375 = _mng_buffer323 + _mng_i325;
    __twr_v376 = *(uint8_t*)(__twr_v375);
    __twr_v377 = 97ULL;
    if (__twr_v376 < __twr_v377) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v378 = _mng_buffer323 + _mng_i325;
    __twr_v379 = *(uint8_t*)(__twr_v378);
    __twr_v380 = 102ULL;
    if (__twr_v379 > __twr_v380) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v381 = _mng_buffer323 + _mng_i325;
    __twr_v382 = *(uint8_t*)(__twr_v381);
    __twr_v383 = 87ULL;
    __twr_v384 = __twr_v382 - __twr_v383;
    __twr_v385 = _mng_num324 + __twr_v384;
    _mng_num324 = __twr_v385;
    goto __twr_l86;
    __twr_l94:;
    __twr_v386 = (uint64_t)(&LexTokenError);
    __twr_v387 = (uint64_t)(&"Malformed hex number.");
    __twr_v388 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v386)(_mng_token322, __twr_v387, __twr_v388, __twr_v388, __twr_v388);
    __twr_l86:;
    if (_mng_num324 >= _mng_lastnum345) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v389 = (uint64_t)(&LexTokenError);
    __twr_v390 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v391 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v389)(_mng_token322, __twr_v390, __twr_v391, __twr_v391, __twr_v391);
    __twr_l96:;
    __twr_v392 = 1ULL;
    __twr_v393 = _mng_i325 + __twr_v392;
    _mng_i325 = __twr_v393;
    __twr_l82:;
    __twr_v394 = _mng_buffer323 + _mng_i325;
    __twr_v395 = *(uint8_t*)(__twr_v394);
    if (__twr_v395) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    _jkl_retv = _mng_num324;
    goto _jkl_epilogue;
    __twr_l76:;
    _mng_i325 = 1ULL;
    __twr_v396 = 1ULL;
    __twr_v397 = _mng_buffer323 + __twr_v396;
    __twr_v398 = *(uint8_t*)(__twr_v397);
    if (!(__twr_v398)) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    __twr_v399 = _mng_buffer323 + _mng_i325;
    __twr_v400 = *(uint8_t*)(__twr_v399);
    __twr_v401 = 48ULL;
    if (__twr_v400 < __twr_v401) { goto __twr_l102; } else { goto __twr_l103; }
    __twr_l103:;
    __twr_v402 = _mng_buffer323 + _mng_i325;
    __twr_v403 = *(uint8_t*)(__twr_v402);
    __twr_v404 = 55ULL;
    if (__twr_v403 <= __twr_v404) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v405 = (uint64_t)(&LexTokenError);
    __twr_v406 = (uint64_t)(&"Malformed octal number.");
    __twr_v407 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v405)(_mng_token322, __twr_v406, __twr_v407, __twr_v407, __twr_v407);
    __twr_l101:;
    _mng_lastnum408 = _mng_num324;
    __twr_v409 = 3ULL;
    __twr_v410 = _mng_num324 << __twr_v409;
    _mng_num324 = __twr_v410;
    if (!(_mng_lastnum408)) { goto __twr_l104; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v411 = _mng_num324 / _mng_lastnum408;
    __twr_v412 = 8ULL;
    if (__twr_v411 == __twr_v412) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v413 = (uint64_t)(&LexTokenError);
    __twr_v414 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v415 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v413)(_mng_token322, __twr_v414, __twr_v415, __twr_v415, __twr_v415);
    __twr_l104:;
    __twr_v416 = _mng_buffer323 + _mng_i325;
    __twr_v417 = *(uint8_t*)(__twr_v416);
    __twr_v418 = 48ULL;
    __twr_v419 = __twr_v417 - __twr_v418;
    __twr_v420 = _mng_num324 + __twr_v419;
    _mng_num324 = __twr_v420;
    if (_mng_num324 >= _mng_lastnum408) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v421 = (uint64_t)(&LexTokenError);
    __twr_v422 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v423 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v421)(_mng_token322, __twr_v422, __twr_v423, __twr_v423, __twr_v423);
    __twr_l107:;
    __twr_v424 = 1ULL;
    __twr_v425 = _mng_i325 + __twr_v424;
    _mng_i325 = __twr_v425;
    __twr_l100:;
    __twr_v426 = _mng_buffer323 + _mng_i325;
    __twr_v427 = *(uint8_t*)(__twr_v426);
    if (__twr_v427) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    _jkl_retv = _mng_num324;
    goto _jkl_epilogue;
    __twr_l72:;
    __twr_v428 = _mng_buffer323 + _mng_i325;
    __twr_v429 = *(uint8_t*)(__twr_v428);
    if (!(__twr_v429)) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v430 = _mng_buffer323 + _mng_i325;
    __twr_v431 = *(uint8_t*)(__twr_v430);
    __twr_v432 = 48ULL;
    if (__twr_v431 < __twr_v432) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v433 = _mng_buffer323 + _mng_i325;
    __twr_v434 = *(uint8_t*)(__twr_v433);
    __twr_v435 = 57ULL;
    if (__twr_v434 <= __twr_v435) { goto __twr_l112; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_v436 = (uint64_t)(&LexTokenError);
    __twr_v437 = (uint64_t)(&"Malformed decimal number.");
    __twr_v438 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v436)(_mng_token322, __twr_v437, __twr_v438, __twr_v438, __twr_v438);
    __twr_l112:;
    _mng_lastnum439 = _mng_num324;
    __twr_v440 = 10ULL;
    __twr_v441 = _mng_num324 * __twr_v440;
    _mng_num324 = __twr_v441;
    if (!(_mng_lastnum439)) { goto __twr_l115; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v442 = _mng_num324 / _mng_lastnum439;
    __twr_v443 = 10ULL;
    if (__twr_v442 == __twr_v443) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v444 = (uint64_t)(&LexTokenError);
    __twr_v445 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v446 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v444)(_mng_token322, __twr_v445, __twr_v446, __twr_v446, __twr_v446);
    __twr_l115:;
    __twr_v447 = _mng_buffer323 + _mng_i325;
    __twr_v448 = *(uint8_t*)(__twr_v447);
    __twr_v449 = 48ULL;
    __twr_v450 = __twr_v448 - __twr_v449;
    __twr_v451 = _mng_num324 + __twr_v450;
    _mng_num324 = __twr_v451;
    if (_mng_num324 >= _mng_lastnum439) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v452 = (uint64_t)(&LexTokenError);
    __twr_v453 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v454 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v452)(_mng_token322, __twr_v453, __twr_v454, __twr_v454, __twr_v454);
    __twr_l118:;
    __twr_v455 = 1ULL;
    __twr_v456 = _mng_i325 + __twr_v455;
    _mng_i325 = __twr_v456;
    __twr_l111:;
    __twr_v457 = _mng_buffer323 + _mng_i325;
    __twr_v458 = *(uint8_t*)(__twr_v457);
    if (__twr_v458) { goto __twr_l109; } else { goto __twr_l110; }
    __twr_l110:;
    _jkl_retv = _mng_num324;
    goto _jkl_epilogue;
    __twr_l71:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token459, uint64_t _mng_buffer460, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t _mng_stream464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t _mng_byte481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t _mng_internedstring513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t _mng_dynamicbuffer516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t _mng_dumpster521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t _mng_len540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t _mng_uppercaseonly572;
    uint64_t _mng_len573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t _mng_macro612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    __twr_lLoopOnMacro:;
    _mng_length461 = 0ULL;
    __twr_v462 = (uint64_t)(&LexCurrentStream);
    __twr_v463 = *(uint64_t*)(__twr_v462);
    _mng_stream464 = __twr_v463;
    if (!(_mng_stream464)) { goto __twr_l122; } else { goto __twr_l123; }
    __twr_l123:;
    __twr_v465 = 8ULL;
    __twr_v466 = _mng_stream464 + __twr_v465;
    __twr_v467 = *(uint64_t*)(__twr_v466);
    __twr_v468 = _mng_token459 + __twr_v465;
    *(uint64_t*)(__twr_v468) = __twr_v467;
    __twr_v469 = 44ULL;
    __twr_v470 = _mng_stream464 + __twr_v469;
    __twr_v471 = *(uint32_t*)(__twr_v470);
    __twr_v472 = 16ULL;
    __twr_v473 = _mng_token459 + __twr_v472;
    *(uint32_t*)(__twr_v473) = __twr_v471;
    __twr_v474 = 48ULL;
    __twr_v475 = _mng_stream464 + __twr_v474;
    __twr_v476 = *(uint32_t*)(__twr_v475);
    __twr_v477 = 20ULL;
    __twr_v478 = _mng_token459 + __twr_v477;
    *(uint32_t*)(__twr_v478) = __twr_v476;
    __twr_l122:;
    __twr_v479 = (uint64_t)(&LexGetCharacter);
    __twr_v480 = ((uint64_t (*)())__twr_v479)();
    _mng_byte481 = __twr_v480;
    __twr_v482 = (uint64_t)(&LexCharTreatment);
    __twr_v483 = __twr_v482 + _mng_byte481;
    __twr_v484 = *(uint8_t*)(__twr_v483);
    __twr_v485 = 3ULL;
    if (__twr_v484 != __twr_v485) { goto __twr_l125; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v486 = (uint64_t)(&LexCurrentStream);
    __twr_v487 = *(uint64_t*)(__twr_v486);
    _mng_stream464 = __twr_v487;
    if (!(_mng_stream464)) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v488 = 8ULL;
    __twr_v489 = _mng_stream464 + __twr_v488;
    __twr_v490 = *(uint64_t*)(__twr_v489);
    __twr_v491 = _mng_token459 + __twr_v488;
    *(uint64_t*)(__twr_v491) = __twr_v490;
    __twr_v492 = 44ULL;
    __twr_v493 = _mng_stream464 + __twr_v492;
    __twr_v494 = *(uint32_t*)(__twr_v493);
    __twr_v495 = 16ULL;
    __twr_v496 = _mng_token459 + __twr_v495;
    *(uint32_t*)(__twr_v496) = __twr_v494;
    __twr_v497 = 48ULL;
    __twr_v498 = _mng_stream464 + __twr_v497;
    __twr_v499 = *(uint32_t*)(__twr_v498);
    __twr_v500 = 20ULL;
    __twr_v501 = _mng_token459 + __twr_v500;
    *(uint32_t*)(__twr_v501) = __twr_v499;
    __twr_l127:;
    __twr_v502 = (uint64_t)(&LexGetCharacter);
    __twr_v503 = ((uint64_t (*)())__twr_v502)();
    _mng_byte481 = __twr_v503;
    __twr_l126:;
    __twr_v504 = (uint64_t)(&LexCharTreatment);
    __twr_v505 = __twr_v504 + _mng_byte481;
    __twr_v506 = *(uint8_t*)(__twr_v505);
    __twr_v507 = 3ULL;
    if (__twr_v506 == __twr_v507) { goto __twr_l124; } else { goto __twr_l125; }
    __twr_l125:;
    if (_mng_byte481) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v508 = 0ULL;
    _jkl_retv = __twr_v508;
    goto _jkl_epilogue;
    __twr_l129:;
    __twr_v509 = 34ULL;
    if (_mng_byte481 != __twr_v509) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v510 = (uint64_t)(&TlAllocateFromZone);
    __twr_v511 = (uint64_t)(&LexInternedStringZone);
    __twr_v512 = ((uint64_t (*)(uint64_t))__twr_v510)(__twr_v511);
    _mng_internedstring513 = __twr_v512;
    __twr_v514 = 48ULL;
    __twr_v515 = _mng_internedstring513 + __twr_v514;
    _mng_dynamicbuffer516 = __twr_v515;
    __twr_v517 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v517)(_mng_dynamicbuffer516);
    __twr_v518 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v519 = 34ULL;
    __twr_v520 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v518)(_mng_token459, __twr_v519, _mng_dynamicbuffer516, __twr_v520, (uint64_t)(&_mng_dumpster521));
    __twr_v522 = 4ULL;
    _jkl_retv = __twr_v522;
    goto _jkl_epilogue;
    __twr_l131:;
    __twr_v523 = 39ULL;
    if (_mng_byte481 != __twr_v523) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v524 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v525 = 39ULL;
    __twr_v526 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v524)(_mng_token459, __twr_v525, __twr_v526, _mng_buffer460, (uint64_t)(&_mng_length461));
    __twr_v527 = 8ULL;
    _jkl_retv = __twr_v527;
    goto _jkl_epilogue;
    __twr_l133:;
    __twr_v528 = (uint64_t)(&LexCharTreatment);
    __twr_v529 = 1ULL;
    __twr_v530 = __twr_v528 + _mng_byte481;
    __twr_v531 = *(uint8_t*)(__twr_v530);
    if (__twr_v531 != __twr_v529) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    _mng_length461 = 1ULL;
    __twr_v532 = 0ULL;
    __twr_v533 = 1ULL;
    *(uint8_t*)(_mng_buffer460) = _mng_byte481;
    __twr_v534 = 1ULL;
    __twr_v535 = _mng_buffer460 + __twr_v534;
    *(uint8_t*)(__twr_v535) = __twr_v532;
    _jkl_retv = __twr_v533;
    goto _jkl_epilogue;
    __twr_l135:;
    __twr_v536 = (uint64_t)(&LexCharTreatment);
    __twr_v537 = __twr_v536 + _mng_byte481;
    __twr_v538 = *(uint8_t*)(__twr_v537);
    __twr_v539 = 2ULL;
    if (__twr_v538 != __twr_v539) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    _mng_len540 = 0ULL;
    __twr_v541 = (uint64_t)(&LexCharTreatment);
    __twr_v542 = __twr_v541 + _mng_byte481;
    __twr_v543 = *(uint8_t*)(__twr_v542);
    __twr_v544 = 2ULL;
    if (__twr_v543 != __twr_v544) { goto __twr_l140; } else { goto __twr_l139; }
    __twr_l139:;
    __twr_v545 = 127ULL;
    if (_mng_len540 != __twr_v545) { goto __twr_l142; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v546 = (uint64_t)(&LexTokenError);
    __twr_v547 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v548 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v546)(_mng_token459, __twr_v547, __twr_v548, __twr_v548, __twr_v548);
    __twr_l142:;
    __twr_v549 = 1ULL;
    __twr_v550 = _mng_buffer460 + _mng_len540;
    *(uint8_t*)(__twr_v550) = _mng_byte481;
    __twr_v551 = _mng_len540 + __twr_v549;
    _mng_len540 = __twr_v551;
    __twr_v552 = (uint64_t)(&LexGetCharacter);
    __twr_v553 = ((uint64_t (*)())__twr_v552)();
    _mng_byte481 = __twr_v553;
    __twr_l141:;
    __twr_v554 = (uint64_t)(&LexCharTreatment);
    __twr_v555 = __twr_v554 + _mng_byte481;
    __twr_v556 = *(uint8_t*)(__twr_v555);
    __twr_v557 = 2ULL;
    if (__twr_v556 == __twr_v557) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v558 = 0ULL;
    __twr_v559 = _mng_buffer460 + _mng_len540;
    *(uint8_t*)(__twr_v559) = __twr_v558;
    _mng_length461 = _mng_len540;
    __twr_v560 = (uint64_t)(&LexCharTreatment);
    __twr_v561 = __twr_v560 + _mng_byte481;
    __twr_v562 = *(uint8_t*)(__twr_v561);
    __twr_v563 = 3ULL;
    if (__twr_v562 == __twr_v563) { goto __twr_l144; } else { goto __twr_l145; }
    __twr_l145:;
    __twr_v564 = (uint64_t)(&LexCurrentStream);
    __twr_v565 = *(uint64_t*)(__twr_v564);
    __twr_v566 = 84ULL;
    __twr_v567 = __twr_v565 + __twr_v566;
    *(uint8_t*)(__twr_v567) = _mng_byte481;
    __twr_l144:;
    __twr_v568 = 2ULL;
    _jkl_retv = __twr_v568;
    goto _jkl_epilogue;
    __twr_l137:;
    __twr_v569 = 65ULL;
    if (_mng_byte481 < __twr_v569) { goto __twr_l148; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v570 = 90ULL;
    if (_mng_byte481 > __twr_v570) { goto __twr_l148; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v571 = 1ULL;
    goto __twr_l149;
    __twr_l148:;
    __twr_v571 = 0ULL;
    __twr_l149:;
    _mng_uppercaseonly572 = __twr_v571;
    _mng_len573 = 0ULL;
    __twr_v574 = (uint64_t)(&LexCharTreatment);
    __twr_v575 = __twr_v574 + _mng_byte481;
    __twr_v576 = *(uint8_t*)(__twr_v575);
    if (__twr_v576) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v577 = 127ULL;
    if (_mng_len573 != __twr_v577) { goto __twr_l153; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v578 = (uint64_t)(&LexTokenError);
    __twr_v579 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v580 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v578)(_mng_token459, __twr_v579, __twr_v580, __twr_v580, __twr_v580);
    __twr_l153:;
    if (!(_mng_uppercaseonly572)) { goto __twr_l155; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v581 = 65ULL;
    if (_mng_byte481 < __twr_v581) { goto __twr_l159; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v582 = 90ULL;
    if (_mng_byte481 > __twr_v582) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v583 = 1ULL;
    goto __twr_l160;
    __twr_l159:;
    __twr_v583 = 0ULL;
    __twr_l160:;
    _mng_uppercaseonly572 = __twr_v583;
    __twr_l155:;
    __twr_v584 = 1ULL;
    __twr_v585 = _mng_buffer460 + _mng_len573;
    *(uint8_t*)(__twr_v585) = _mng_byte481;
    __twr_v586 = _mng_len573 + __twr_v584;
    _mng_len573 = __twr_v586;
    __twr_v587 = (uint64_t)(&LexGetCharacter);
    __twr_v588 = ((uint64_t (*)())__twr_v587)();
    _mng_byte481 = __twr_v588;
    __twr_l152:;
    __twr_v589 = (uint64_t)(&LexCharTreatment);
    __twr_v590 = __twr_v589 + _mng_byte481;
    __twr_v591 = *(uint8_t*)(__twr_v590);
    if (!(__twr_v591)) { goto __twr_l150; } else { goto __twr_l151; }
    __twr_l151:;
    __twr_v592 = 0ULL;
    __twr_v593 = _mng_buffer460 + _mng_len573;
    *(uint8_t*)(__twr_v593) = __twr_v592;
    _mng_length461 = _mng_len573;
    __twr_v594 = (uint64_t)(&LexCharTreatment);
    __twr_v595 = 1ULL;
    __twr_v596 = __twr_v594 + _mng_byte481;
    __twr_v597 = *(uint8_t*)(__twr_v596);
    if (__twr_v597 == __twr_v595) { goto __twr_l162; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v598 = (uint64_t)(&LexCharTreatment);
    __twr_v599 = __twr_v598 + _mng_byte481;
    __twr_v600 = *(uint8_t*)(__twr_v599);
    __twr_v601 = 2ULL;
    if (__twr_v600 != __twr_v601) { goto __twr_l161; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v602 = (uint64_t)(&LexCurrentStream);
    __twr_v603 = *(uint64_t*)(__twr_v602);
    __twr_v604 = 84ULL;
    __twr_v605 = __twr_v603 + __twr_v604;
    *(uint8_t*)(__twr_v605) = _mng_byte481;
    __twr_l161:;
    if (!(_mng_uppercaseonly572)) { goto __twr_l164; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v606 = 1ULL;
    if (_mng_len573 <= __twr_v606) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v607 = 16ULL;
    _jkl_retv = __twr_v607;
    goto _jkl_epilogue;
    __twr_l164:;
    __twr_v608 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v609 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v610 = *(uint64_t*)(__twr_v609);
    __twr_v611 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v608)(__twr_v610, _mng_buffer460);
    _mng_macro612 = __twr_v611;
    if (_mng_macro612) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v613 = 0ULL;
    _jkl_retv = __twr_v613;
    goto _jkl_epilogue;
    __twr_l167:;
    __twr_v614 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v614)(_mng_macro612, _mng_token459);
    goto __twr_lLoopOnMacro;
    __twr_l120:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length461;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring513;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token615) {
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t _mng_buffer618[16];
    uint64_t __twr_v619;
    uint64_t _mng_length620;
    uint64_t _mng_internedstring621;
    uint64_t _mng_tokenflag622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t _mng_keyword629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    __twr_v616 = (uint64_t)(&LexGetTokenContents);
    __twr_v617 = (uint64_t)(&_mng_buffer618);
    __twr_v619 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v616)(_mng_token615, __twr_v617, (uint64_t)(&_mng_length620), (uint64_t)(&_mng_internedstring621));
    _mng_tokenflag622 = __twr_v619;
    __twr_v623 = 19ULL;
    __twr_v624 = _mng_tokenflag622 & __twr_v623;
    if (!(__twr_v624)) { goto __twr_l170; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v625 = (uint64_t)(&TlLookupHashTable);
    __twr_v626 = (uint64_t)(&LexKeywordHashTable);
    __twr_v627 = (uint64_t)(&_mng_buffer618);
    __twr_v628 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v625)(__twr_v626, __twr_v627);
    _mng_keyword629 = __twr_v628;
    if (_mng_keyword629) { goto __twr_l172; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v630 = 16ULL;
    __twr_v631 = _mng_tokenflag622 & __twr_v630;
    if (!(__twr_v631)) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    __twr_v632 = (uint64_t)(&LexTokenError);
    __twr_v633 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).");
    __twr_v634 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v632)(_mng_token615, __twr_v633, __twr_v634, __twr_v634, __twr_v634);
    __twr_l174:;
    __twr_v635 = (uint64_t)(&LexTokenError);
    __twr_v636 = (uint64_t)(&"Unknown keyword");
    __twr_v637 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v635)(_mng_token615, __twr_v636, __twr_v637, __twr_v637, __twr_v637);
    __twr_l172:;
    __twr_v638 = 48ULL;
    __twr_v639 = _mng_keyword629 + __twr_v638;
    __twr_v640 = *(uint8_t*)(__twr_v639);
    __twr_v641 = 24ULL;
    __twr_v642 = _mng_token615 + __twr_v641;
    *(uint8_t*)(__twr_v642) = __twr_v640;
    __twr_v643 = 49ULL;
    __twr_v644 = _mng_keyword629 + __twr_v643;
    __twr_v645 = *(uint8_t*)(__twr_v644);
    __twr_v646 = 25ULL;
    __twr_v647 = _mng_token615 + __twr_v646;
    *(uint8_t*)(__twr_v647) = __twr_v645;
    __twr_v648 = 50ULL;
    __twr_v649 = _mng_keyword629 + __twr_v648;
    __twr_v650 = *(uint8_t*)(__twr_v649);
    __twr_v651 = 26ULL;
    __twr_v652 = _mng_token615 + __twr_v651;
    *(uint8_t*)(__twr_v652) = __twr_v650;
    goto _jkl_epilogue;
    __twr_l170:;
    __twr_v653 = 8ULL;
    __twr_v654 = _mng_tokenflag622 & __twr_v653;
    if (!(__twr_v654)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v655 = 5ULL;
    __twr_v656 = 24ULL;
    __twr_v657 = _mng_token615 + __twr_v656;
    *(uint8_t*)(__twr_v657) = __twr_v655;
    __twr_v658 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v659 = (uint64_t)(&_mng_buffer618);
    __twr_v660 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v658)(_mng_token615, __twr_v659);
    *(uint64_t*)(_mng_token615) = __twr_v660;
    goto _jkl_epilogue;
    __twr_l176:;
    __twr_v661 = 4ULL;
    __twr_v662 = _mng_tokenflag622 & __twr_v661;
    if (!(__twr_v662)) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v663 = 4ULL;
    __twr_v664 = 24ULL;
    __twr_v665 = _mng_token615 + __twr_v664;
    *(uint8_t*)(__twr_v665) = __twr_v663;
    *(uint64_t*)(_mng_token615) = _mng_internedstring621;
    goto _jkl_epilogue;
    __twr_l178:;
    __twr_v666 = 32ULL;
    __twr_v667 = _mng_tokenflag622 & __twr_v666;
    if (!(__twr_v667)) { goto __twr_l180; } else { goto __twr_l181; }
    __twr_l181:;
    __twr_v668 = 6ULL;
    __twr_v669 = 24ULL;
    __twr_v670 = _mng_token615 + __twr_v669;
    *(uint8_t*)(__twr_v670) = __twr_v668;
    goto _jkl_epilogue;
    __twr_l180:;
    if (_mng_length620) { goto __twr_l182; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v671 = 6ULL;
    __twr_v672 = 24ULL;
    __twr_v673 = _mng_token615 + __twr_v672;
    *(uint8_t*)(__twr_v673) = __twr_v671;
    goto _jkl_epilogue;
    __twr_l182:;
    __twr_v674 = (uint64_t)(&_mng_buffer618);
    __twr_v675 = *(uint8_t*)(__twr_v674);
    __twr_v676 = 48ULL;
    if (__twr_v675 < __twr_v676) { goto __twr_l184; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v677 = (uint64_t)(&_mng_buffer618);
    __twr_v678 = *(uint8_t*)(__twr_v677);
    __twr_v679 = 57ULL;
    if (__twr_v678 > __twr_v679) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v680 = 5ULL;
    __twr_v681 = 24ULL;
    __twr_v682 = _mng_token615 + __twr_v681;
    *(uint8_t*)(__twr_v682) = __twr_v680;
    __twr_v683 = (uint64_t)(&LexCrunchNumber);
    __twr_v684 = (uint64_t)(&_mng_buffer618);
    __twr_v685 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v683)(_mng_token615, __twr_v684);
    *(uint64_t*)(_mng_token615) = __twr_v685;
    goto _jkl_epilogue;
    __twr_l184:;
    __twr_v686 = (uint64_t)(&LexTokenError);
    __twr_v687 = (uint64_t)(&"Unknown token");
    __twr_v688 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v686)(_mng_token615, __twr_v687, __twr_v688, __twr_v688, __twr_v688);
    __twr_l169:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest689, uint64_t _mng_src690) {
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    __twr_v691 = *(uint64_t*)(_mng_src690);
    *(uint64_t*)(_mng_dest689) = __twr_v691;
    __twr_v692 = 8ULL;
    __twr_v693 = _mng_src690 + __twr_v692;
    __twr_v694 = *(uint64_t*)(__twr_v693);
    __twr_v695 = _mng_dest689 + __twr_v692;
    *(uint64_t*)(__twr_v695) = __twr_v694;
    __twr_v696 = 16ULL;
    __twr_v697 = _mng_src690 + __twr_v696;
    __twr_v698 = *(uint32_t*)(__twr_v697);
    __twr_v699 = _mng_dest689 + __twr_v696;
    *(uint32_t*)(__twr_v699) = __twr_v698;
    __twr_v700 = 20ULL;
    __twr_v701 = _mng_src690 + __twr_v700;
    __twr_v702 = *(uint32_t*)(__twr_v701);
    __twr_v703 = _mng_dest689 + __twr_v700;
    *(uint32_t*)(__twr_v703) = __twr_v702;
    __twr_v704 = 24ULL;
    __twr_v705 = _mng_src690 + __twr_v704;
    __twr_v706 = *(uint8_t*)(__twr_v705);
    __twr_v707 = _mng_dest689 + __twr_v704;
    *(uint8_t*)(__twr_v707) = __twr_v706;
    __twr_v708 = 25ULL;
    __twr_v709 = _mng_src690 + __twr_v708;
    __twr_v710 = *(uint8_t*)(__twr_v709);
    __twr_v711 = _mng_dest689 + __twr_v708;
    *(uint8_t*)(__twr_v711) = __twr_v710;
    __twr_v712 = 26ULL;
    __twr_v713 = _mng_src690 + __twr_v712;
    __twr_v714 = *(uint8_t*)(__twr_v713);
    __twr_v715 = _mng_dest689 + __twr_v712;
    *(uint8_t*)(__twr_v715) = __twr_v714;
    __twr_l187:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token716) {
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t _mng_index719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    __twr_v717 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v718 = *(uint32_t*)(__twr_v717);
    _mng_index719 = __twr_v718;
    if (!(_mng_index719)) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v720 = (uint64_t)(&LexCopyToken);
    __twr_v721 = (uint64_t)(&LexPutbackStack);
    __twr_v722 = 1ULL;
    __twr_v723 = _mng_index719 - __twr_v722;
    __twr_v724 = 5ULL;
    __twr_v725 = __twr_v723 << __twr_v724;
    __twr_v726 = __twr_v721 + __twr_v725;
    ((void (*)(uint64_t, uint64_t))__twr_v720)(_mng_token716, __twr_v726);
    __twr_v727 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v727) = __twr_v723;
    goto _jkl_epilogue;
    __twr_l189:;
    __twr_v728 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v728)(_mng_token716);
    __twr_l188:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token729) {
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t _mng_index732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    __twr_v730 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v731 = *(uint32_t*)(__twr_v730);
    _mng_index732 = __twr_v731;
    __twr_v733 = 256ULL;
    if (_mng_index732 != __twr_v733) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v734 = (uint64_t)(&TlInternalError);
    __twr_v735 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v736 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v734)(__twr_v735, __twr_v736, __twr_v736, __twr_v736);
    __twr_l192:;
    __twr_v737 = (uint64_t)(&LexCopyToken);
    __twr_v738 = (uint64_t)(&LexPutbackStack);
    __twr_v739 = 5ULL;
    __twr_v740 = _mng_index732 << __twr_v739;
    __twr_v741 = __twr_v738 + __twr_v740;
    ((void (*)(uint64_t, uint64_t))__twr_v737)(__twr_v741, _mng_token729);
    __twr_v742 = 1ULL;
    __twr_v743 = _mng_index732 + __twr_v742;
    __twr_v744 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v744) = __twr_v743;
    __twr_l191:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token745, uint64_t _mng_type746, uint64_t _mng_subtype747) {
    uint64_t _jkl_retv;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t _mng_index750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t _mng_matchtoken761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    __twr_v748 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v749 = *(uint32_t*)(__twr_v748);
    _mng_index750 = __twr_v749;
    if (_mng_index750) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    __twr_v751 = (uint64_t)(&LexNextToken);
    __twr_v752 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v751)(__twr_v752);
    __twr_v753 = 1ULL;
    __twr_v754 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v754) = __twr_v753;
    _mng_index750 = 1ULL;
    __twr_l195:;
    __twr_v755 = (uint64_t)(&LexPutbackStack);
    __twr_v756 = 1ULL;
    __twr_v757 = _mng_index750 - __twr_v756;
    __twr_v758 = 5ULL;
    __twr_v759 = __twr_v757 << __twr_v758;
    __twr_v760 = __twr_v755 + __twr_v759;
    _mng_matchtoken761 = __twr_v760;
    if (!(_mng_token745)) { goto __twr_l197; } else { goto __twr_l198; }
    __twr_l198:;
    __twr_v762 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v762)(_mng_token745, _mng_matchtoken761);
    __twr_l197:;
    __twr_v763 = 24ULL;
    __twr_v764 = _mng_matchtoken761 + __twr_v763;
    __twr_v765 = *(uint8_t*)(__twr_v764);
    if (__twr_v765 == _mng_type746) { goto __twr_l199; } else { goto __twr_l200; }
    __twr_l200:;
    __twr_v766 = 24ULL;
    __twr_v767 = _mng_matchtoken761 + __twr_v766;
    __twr_v768 = *(uint8_t*)(__twr_v767);
    __twr_v769 = 6ULL;
    if (__twr_v768 != __twr_v769) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v770 = 1ULL;
    __twr_v771 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v772 = *(uint32_t*)(__twr_v771);
    __twr_v773 = __twr_v772 - __twr_v770;
    *(uint32_t*)(__twr_v771) = __twr_v773;
    __twr_l201:;
    __twr_v774 = 0ULL;
    _jkl_retv = __twr_v774;
    goto _jkl_epilogue;
    __twr_l199:;
    if (!(_mng_subtype747)) { goto __twr_l204; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v775 = 25ULL;
    __twr_v776 = _mng_matchtoken761 + __twr_v775;
    __twr_v777 = *(uint8_t*)(__twr_v776);
    if (__twr_v777 != _mng_subtype747) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v778 = 1ULL;
    __twr_v779 = _mng_index750 - __twr_v778;
    __twr_v780 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v780) = __twr_v779;
    _jkl_retv = __twr_v778;
    goto _jkl_epilogue;
    __twr_l203:;
    __twr_v781 = 0ULL;
    _jkl_retv = __twr_v781;
    goto _jkl_epilogue;
    __twr_l194:;
    _jkl_epilogue:;
    return _jkl_retv;
}

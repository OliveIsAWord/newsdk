#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern void TlInitializeZone(uint64_t _mng_zone87, uint64_t _mng_blocksize88);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone89);
extern void TlFreeToZone(uint64_t _mng_zone90, uint64_t _mng_block91);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant92);
extern void TlPunchValue(uint64_t _mng_ptr93, uint64_t _mng_value94, uint64_t _mng_bytes95);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg96);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename97, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock98, uint64_t _mng_filepath99);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope100);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg101);
extern void LexExpandMacro(uint64_t _mng_macro102, uint64_t _mng_token103);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream104, uint64_t _mng_macro105);
extern void LexUninitializeStream(uint64_t _mng_stream106);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream107);
extern void LexPushStream(uint64_t _mng_stream108);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream109, uint64_t _mng_fileblock110, uint64_t _mng_handle111);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock112, uint64_t _mng_handle113);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest114, uint64_t _mng_src115);
extern void LexGetToken(uint64_t _mng_token116);
extern void LexPutbackToken(uint64_t _mng_token117);
extern uint64_t LexMatchToken(uint64_t _mng_token118, uint64_t _mng_type119, uint64_t _mng_subtype120);
extern void LexStreamError(uint64_t _mng_str121, uint64_t _mng_err1122, uint64_t _mng_err2123, uint64_t _mng_err3124);
extern void LexTokenError(uint64_t _mng_token125, uint64_t _mng_str126, uint64_t _mng_err1127, uint64_t _mng_err2128, uint64_t _mng_err3129);
extern uint64_t LexCrunchNumber(uint64_t _mng_token130, uint64_t _mng_buffer131);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name132, uint64_t _mng_type133, uint64_t _mng_subtype134, uint64_t _mng_context135) {
    uint64_t __twr_v136;
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    uint64_t __twr_v139;
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    uint64_t _mng_keyword142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    __twr_v136 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v137 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v138 = *(uint64_t*)(__twr_v137);
    __twr_v139 = 56ULL;
    __twr_v140 = __twr_v138 * __twr_v139;
    __twr_v141 = __twr_v136 + __twr_v140;
    _mng_keyword142 = __twr_v141;
    __twr_v143 = 1ULL;
    __twr_v144 = __twr_v138 + __twr_v143;
    *(uint64_t*)(__twr_v137) = __twr_v144;
    __twr_v145 = 48ULL;
    __twr_v146 = _mng_keyword142 + __twr_v145;
    *(uint8_t*)(__twr_v146) = _mng_type133;
    __twr_v147 = 49ULL;
    __twr_v148 = _mng_keyword142 + __twr_v147;
    *(uint8_t*)(__twr_v148) = _mng_subtype134;
    __twr_v149 = 50ULL;
    __twr_v150 = _mng_keyword142 + __twr_v149;
    *(uint8_t*)(__twr_v150) = _mng_context135;
    __twr_v151 = (uint64_t)(&TlInsertHashTable);
    __twr_v152 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v151)(__twr_v152, _mng_keyword142, _mng_name132);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t _mng_dumpster156;
    uint64_t _mng_fileblock157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t _mng_filestream164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    __twr_v153 = (uint64_t)(&FeCreateFileBlock);
    __twr_v154 = (uint64_t)(&FeInputFile);
    __twr_v155 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v153)(__twr_v154, (uint64_t)(&_mng_dumpster156));
    _mng_fileblock157 = __twr_v155;
    __twr_v158 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v158)(_mng_fileblock157, __twr_v154);
    __twr_v159 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v159)();
    __twr_v160 = (uint64_t)(&LexCreateFileStream);
    __twr_v161 = (uint64_t)(&FeInputFileHandle);
    __twr_v162 = *(uint64_t*)(__twr_v161);
    __twr_v163 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v160)(_mng_fileblock157, __twr_v162);
    _mng_filestream164 = __twr_v163;
    __twr_v165 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v165)(_mng_filestream164);
    __twr_v166 = (uint64_t)(&TlInitializeZone);
    __twr_v167 = (uint64_t)(&LexInternedStringZone);
    __twr_v168 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v166)(__twr_v167, __twr_v168);
    __twr_v169 = (uint64_t)(&TlInitializeHashTable);
    __twr_v170 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v169)(__twr_v170);
    __twr_l2:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t _mng_byte174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t _mng_nextbyte219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    _mng_comment171 = 0ULL;
    __twr_l4:;
    __twr_v172 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v173 = ((uint64_t (*)())__twr_v172)();
    _mng_byte174 = __twr_v173;
    if (_mng_byte174) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    goto __twr_l5;
    __twr_l6:;
    if (!(_mng_comment171)) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v175 = 10ULL;
    if (_mng_byte174 == __twr_v175) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    goto __twr_l4;
    __twr_l11:;
    _mng_comment171 = 0ULL;
    goto __twr_l8;
    __twr_l10:;
    __twr_v176 = (uint64_t)(&LexCurrentStream);
    __twr_v177 = *(uint64_t*)(__twr_v176);
    __twr_v178 = 80ULL;
    __twr_v179 = __twr_v177 + __twr_v178;
    __twr_v180 = *(uint8_t*)(__twr_v179);
    if (!(__twr_v180)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v181 = 0ULL;
    __twr_v182 = (uint64_t)(&LexCurrentStream);
    __twr_v183 = *(uint64_t*)(__twr_v182);
    __twr_v184 = 80ULL;
    __twr_v185 = __twr_v183 + __twr_v184;
    *(uint8_t*)(__twr_v185) = __twr_v181;
    goto __twr_l8;
    __twr_l14:;
    __twr_v186 = 92ULL;
    if (_mng_byte174 != __twr_v186) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v187 = 1ULL;
    __twr_v188 = (uint64_t)(&LexCurrentStream);
    __twr_v189 = *(uint64_t*)(__twr_v188);
    __twr_v190 = 80ULL;
    __twr_v191 = __twr_v189 + __twr_v190;
    *(uint8_t*)(__twr_v191) = __twr_v187;
    goto __twr_l8;
    __twr_l16:;
    __twr_v192 = (uint64_t)(&LexCurrentStream);
    __twr_v193 = *(uint64_t*)(__twr_v192);
    __twr_v194 = 81ULL;
    __twr_v195 = __twr_v193 + __twr_v194;
    __twr_v196 = *(uint8_t*)(__twr_v195);
    if (!(__twr_v196)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v197 = 34ULL;
    __twr_v198 = (_mng_byte174 == __twr_v197);
    __twr_v199 = !__twr_v198;
    __twr_v200 = (uint64_t)(&LexCurrentStream);
    __twr_v201 = *(uint64_t*)(__twr_v200);
    __twr_v202 = 81ULL;
    __twr_v203 = __twr_v201 + __twr_v202;
    *(uint8_t*)(__twr_v203) = __twr_v199;
    goto __twr_l8;
    __twr_l18:;
    __twr_v204 = (uint64_t)(&LexCurrentStream);
    __twr_v205 = *(uint64_t*)(__twr_v204);
    __twr_v206 = 82ULL;
    __twr_v207 = __twr_v205 + __twr_v206;
    __twr_v208 = *(uint8_t*)(__twr_v207);
    if (!(__twr_v208)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v209 = 39ULL;
    __twr_v210 = (_mng_byte174 == __twr_v209);
    __twr_v211 = !__twr_v210;
    __twr_v212 = (uint64_t)(&LexCurrentStream);
    __twr_v213 = *(uint64_t*)(__twr_v212);
    __twr_v214 = 82ULL;
    __twr_v215 = __twr_v213 + __twr_v214;
    *(uint8_t*)(__twr_v215) = __twr_v211;
    goto __twr_l8;
    __twr_l20:;
    __twr_v216 = 47ULL;
    if (_mng_byte174 != __twr_v216) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v217 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v218 = ((uint64_t (*)())__twr_v217)();
    _mng_nextbyte219 = __twr_v218;
    __twr_v220 = 47ULL;
    if (_mng_nextbyte219 != __twr_v220) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    _mng_comment171 = 1ULL;
    goto __twr_l4;
    __twr_l23:;
    __twr_v221 = (uint64_t)(&LexCurrentStream);
    __twr_v222 = *(uint64_t*)(__twr_v221);
    __twr_v223 = 83ULL;
    __twr_v224 = __twr_v222 + __twr_v223;
    *(uint8_t*)(__twr_v224) = _mng_nextbyte219;
    goto __twr_l8;
    __twr_l22:;
    __twr_v225 = 34ULL;
    if (_mng_byte174 != __twr_v225) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v226 = 1ULL;
    __twr_v227 = (uint64_t)(&LexCurrentStream);
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = 81ULL;
    __twr_v230 = __twr_v228 + __twr_v229;
    *(uint8_t*)(__twr_v230) = __twr_v226;
    goto __twr_l8;
    __twr_l26:;
    __twr_v231 = 39ULL;
    if (_mng_byte174 != __twr_v231) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v232 = 1ULL;
    __twr_v233 = (uint64_t)(&LexCurrentStream);
    __twr_v234 = *(uint64_t*)(__twr_v233);
    __twr_v235 = 82ULL;
    __twr_v236 = __twr_v234 + __twr_v235;
    *(uint8_t*)(__twr_v236) = __twr_v232;
    goto __twr_l8;
    __twr_l28:;
    __twr_v237 = 35ULL;
    if (_mng_byte174 != __twr_v237) { goto __twr_l8; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v238 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v238)();
    _mng_byte174 = 10ULL;
    __twr_l8:;
    __twr_v239 = (uint64_t)(&LexFalseCount);
    __twr_v240 = *(uint32_t*)(__twr_v239);
    if (!(__twr_v240)) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto __twr_l4;
    __twr_l30:;
    goto __twr_l5;
    goto __twr_l4;
    __twr_l5:;
    _jkl_retv = _mng_byte174;
    goto _jkl_epilogue;
    __twr_l3:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token241, uint64_t _mng_terminator242, uint64_t _mng_dynamicbuffer243, uint64_t _mng_buffer244, uint64_t _mng_o_length) {
    uint64_t _mng_len245;
    uint64_t _mng_isbackslash246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t _mng_byte249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t _mng_length271;
    _mng_len245 = 0ULL;
    _mng_isbackslash246 = 0ULL;
    __twr_l33:;
    __twr_v247 = (uint64_t)(&LexGetCharacter);
    __twr_v248 = ((uint64_t (*)())__twr_v247)();
    _mng_byte249 = __twr_v248;
    if (_mng_byte249) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v250 = (uint64_t)(&LexTokenError);
    __twr_v251 = (uint64_t)(&"String token terminated by EOF!");
    __twr_v252 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v250)(_mng_token241, __twr_v251, __twr_v252, __twr_v252, __twr_v252);
    __twr_l35:;
    if (_mng_isbackslash246) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    if (_mng_byte249 != _mng_terminator242) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    goto __twr_l34;
    goto __twr_l40;
    __twr_l42:;
    __twr_v253 = 92ULL;
    if (_mng_byte249 != __twr_v253) { goto __twr_l40; } else { goto __twr_l43; }
    __twr_l43:;
    _mng_isbackslash246 = 1ULL;
    goto __twr_l33;
    __twr_l40:;
    goto __twr_l37;
    __twr_l39:;
    _mng_isbackslash246 = 0ULL;
    __twr_v254 = 110ULL;
    if (_mng_byte249 != __twr_v254) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    _mng_byte249 = 10ULL;
    goto __twr_l44;
    __twr_l46:;
    __twr_v255 = 116ULL;
    if (_mng_byte249 != __twr_v255) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_byte249 = 9ULL;
    goto __twr_l44;
    __twr_l48:;
    __twr_v256 = 114ULL;
    if (_mng_byte249 != __twr_v256) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_byte249 = 13ULL;
    goto __twr_l44;
    __twr_l50:;
    __twr_v257 = 98ULL;
    if (_mng_byte249 != __twr_v257) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_byte249 = 8ULL;
    goto __twr_l44;
    __twr_l52:;
    __twr_v258 = 91ULL;
    if (_mng_byte249 != __twr_v258) { goto __twr_l44; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_byte249 = 27ULL;
    __twr_l44:;
    __twr_l37:;
    if (!(_mng_dynamicbuffer243)) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v259 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v259)(_mng_dynamicbuffer243, _mng_byte249);
    goto __twr_l54;
    __twr_l56:;
    __twr_v260 = 127ULL;
    if (_mng_len245 != __twr_v260) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v261 = (uint64_t)(&LexTokenError);
    __twr_v262 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v263 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v261)(_mng_token241, __twr_v262, __twr_v263, __twr_v263, __twr_v263);
    goto __twr_l54;
    __twr_l58:;
    __twr_v264 = 1ULL;
    __twr_v265 = _mng_buffer244 + _mng_len245;
    *(uint8_t*)(__twr_v265) = _mng_byte249;
    __twr_v266 = _mng_len245 + __twr_v264;
    _mng_len245 = __twr_v266;
    __twr_l54:;
    goto __twr_l33;
    __twr_l34:;
    if (!(_mng_dynamicbuffer243)) { goto __twr_l61; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v267 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v268 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v267)(_mng_dynamicbuffer243, __twr_v268);
    goto __twr_l59;
    __twr_l61:;
    __twr_v269 = 0ULL;
    __twr_v270 = _mng_buffer244 + _mng_len245;
    *(uint8_t*)(__twr_v270) = __twr_v269;
    _mng_length271 = _mng_len245;
    __twr_l59:;
    __twr_l32:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length271;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token272, uint64_t _mng_buffer273) {
    uint64_t _jkl_retv;
    uint64_t _mng_num274;
    uint64_t _mng_i275;
    uint64_t __twr_v276;
    uint64_t _mng_lastnum277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    _mng_num274 = 0ULL;
    _mng_i275 = 0ULL;
    __twr_v276 = *(uint8_t*)(_mng_buffer273);
    if (!(__twr_v276)) { goto __twr_l64; } else { goto __twr_l63; }
    __twr_l63:;
    _mng_lastnum277 = _mng_num274;
    __twr_v278 = 8ULL;
    __twr_v279 = _mng_num274 << __twr_v278;
    _mng_num274 = __twr_v279;
    if (!(_mng_lastnum277)) { goto __twr_l66; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v280 = _mng_num274 / _mng_lastnum277;
    __twr_v281 = 256ULL;
    if (__twr_v280 == __twr_v281) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v282 = (uint64_t)(&LexTokenError);
    __twr_v283 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v284 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v282)(_mng_token272, __twr_v283, __twr_v284, __twr_v284, __twr_v284);
    __twr_l66:;
    __twr_v285 = _mng_buffer273 + _mng_i275;
    __twr_v286 = *(uint8_t*)(__twr_v285);
    __twr_v287 = _mng_num274 + __twr_v286;
    _mng_num274 = __twr_v287;
    if (_mng_num274 >= _mng_lastnum277) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v288 = (uint64_t)(&LexTokenError);
    __twr_v289 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v290 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v288)(_mng_token272, __twr_v289, __twr_v290, __twr_v290, __twr_v290);
    __twr_l69:;
    __twr_v291 = 1ULL;
    __twr_v292 = _mng_i275 + __twr_v291;
    _mng_i275 = __twr_v292;
    __twr_l65:;
    __twr_v293 = _mng_buffer273 + _mng_i275;
    __twr_v294 = *(uint8_t*)(__twr_v293);
    if (__twr_v294) { goto __twr_l63; } else { goto __twr_l64; }
    __twr_l64:;
    _jkl_retv = _mng_num274;
    goto _jkl_epilogue;
    __twr_l62:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token295, uint64_t _mng_buffer296) {
    uint64_t _jkl_retv;
    uint64_t _mng_num297;
    uint64_t _mng_i298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t _mng_lastnum318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t _mng_lastnum381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t _mng_lastnum412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    _mng_num297 = 0ULL;
    _mng_i298 = 0ULL;
    __twr_v299 = *(uint8_t*)(_mng_buffer296);
    __twr_v300 = 48ULL;
    if (__twr_v299 != __twr_v300) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v301 = 1ULL;
    __twr_v302 = _mng_buffer296 + __twr_v301;
    __twr_v303 = *(uint8_t*)(__twr_v302);
    if (__twr_v303) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v304 = 0ULL;
    _jkl_retv = __twr_v304;
    goto _jkl_epilogue;
    __twr_l74:;
    __twr_v305 = 1ULL;
    __twr_v306 = _mng_buffer296 + __twr_v305;
    __twr_v307 = *(uint8_t*)(__twr_v306);
    __twr_v308 = 120ULL;
    if (__twr_v307 != __twr_v308) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v309 = 2ULL;
    __twr_v310 = _mng_buffer296 + __twr_v309;
    __twr_v311 = *(uint8_t*)(__twr_v310);
    if (__twr_v311) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v312 = (uint64_t)(&LexTokenError);
    __twr_v313 = (uint64_t)(&"Unfinished hex number.");
    __twr_v314 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v312)(_mng_token295, __twr_v313, __twr_v314, __twr_v314, __twr_v314);
    __twr_l78:;
    _mng_i298 = 2ULL;
    __twr_v315 = 2ULL;
    __twr_v316 = _mng_buffer296 + __twr_v315;
    __twr_v317 = *(uint8_t*)(__twr_v316);
    if (!(__twr_v317)) { goto __twr_l81; } else { goto __twr_l80; }
    __twr_l80:;
    _mng_lastnum318 = _mng_num297;
    __twr_v319 = 4ULL;
    __twr_v320 = _mng_num297 << __twr_v319;
    _mng_num297 = __twr_v320;
    if (!(_mng_lastnum318)) { goto __twr_l83; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v321 = _mng_num297 / _mng_lastnum318;
    __twr_v322 = 16ULL;
    if (__twr_v321 == __twr_v322) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v323 = (uint64_t)(&LexTokenError);
    __twr_v324 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v325 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v323)(_mng_token295, __twr_v324, __twr_v325, __twr_v325, __twr_v325);
    __twr_l83:;
    __twr_v326 = _mng_buffer296 + _mng_i298;
    __twr_v327 = *(uint8_t*)(__twr_v326);
    __twr_v328 = 48ULL;
    if (__twr_v327 < __twr_v328) { goto __twr_l88; } else { goto __twr_l89; }
    __twr_l89:;
    __twr_v329 = _mng_buffer296 + _mng_i298;
    __twr_v330 = *(uint8_t*)(__twr_v329);
    __twr_v331 = 57ULL;
    if (__twr_v330 > __twr_v331) { goto __twr_l88; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v332 = _mng_buffer296 + _mng_i298;
    __twr_v333 = *(uint8_t*)(__twr_v332);
    __twr_v334 = 48ULL;
    __twr_v335 = __twr_v333 - __twr_v334;
    __twr_v336 = _mng_num297 + __twr_v335;
    _mng_num297 = __twr_v336;
    goto __twr_l86;
    __twr_l88:;
    __twr_v337 = _mng_buffer296 + _mng_i298;
    __twr_v338 = *(uint8_t*)(__twr_v337);
    __twr_v339 = 65ULL;
    if (__twr_v338 < __twr_v339) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v340 = _mng_buffer296 + _mng_i298;
    __twr_v341 = *(uint8_t*)(__twr_v340);
    __twr_v342 = 70ULL;
    if (__twr_v341 > __twr_v342) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    __twr_v343 = _mng_buffer296 + _mng_i298;
    __twr_v344 = *(uint8_t*)(__twr_v343);
    __twr_v345 = 55ULL;
    __twr_v346 = __twr_v344 - __twr_v345;
    __twr_v347 = _mng_num297 + __twr_v346;
    _mng_num297 = __twr_v347;
    goto __twr_l86;
    __twr_l91:;
    __twr_v348 = _mng_buffer296 + _mng_i298;
    __twr_v349 = *(uint8_t*)(__twr_v348);
    __twr_v350 = 97ULL;
    if (__twr_v349 < __twr_v350) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v351 = _mng_buffer296 + _mng_i298;
    __twr_v352 = *(uint8_t*)(__twr_v351);
    __twr_v353 = 102ULL;
    if (__twr_v352 > __twr_v353) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v354 = _mng_buffer296 + _mng_i298;
    __twr_v355 = *(uint8_t*)(__twr_v354);
    __twr_v356 = 87ULL;
    __twr_v357 = __twr_v355 - __twr_v356;
    __twr_v358 = _mng_num297 + __twr_v357;
    _mng_num297 = __twr_v358;
    goto __twr_l86;
    __twr_l94:;
    __twr_v359 = (uint64_t)(&LexTokenError);
    __twr_v360 = (uint64_t)(&"Malformed hex number.");
    __twr_v361 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v359)(_mng_token295, __twr_v360, __twr_v361, __twr_v361, __twr_v361);
    __twr_l86:;
    if (_mng_num297 >= _mng_lastnum318) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v362 = (uint64_t)(&LexTokenError);
    __twr_v363 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v364 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v362)(_mng_token295, __twr_v363, __twr_v364, __twr_v364, __twr_v364);
    __twr_l96:;
    __twr_v365 = 1ULL;
    __twr_v366 = _mng_i298 + __twr_v365;
    _mng_i298 = __twr_v366;
    __twr_l82:;
    __twr_v367 = _mng_buffer296 + _mng_i298;
    __twr_v368 = *(uint8_t*)(__twr_v367);
    if (__twr_v368) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    _jkl_retv = _mng_num297;
    goto _jkl_epilogue;
    __twr_l76:;
    _mng_i298 = 1ULL;
    __twr_v369 = 1ULL;
    __twr_v370 = _mng_buffer296 + __twr_v369;
    __twr_v371 = *(uint8_t*)(__twr_v370);
    if (!(__twr_v371)) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    __twr_v372 = _mng_buffer296 + _mng_i298;
    __twr_v373 = *(uint8_t*)(__twr_v372);
    __twr_v374 = 48ULL;
    if (__twr_v373 < __twr_v374) { goto __twr_l102; } else { goto __twr_l103; }
    __twr_l103:;
    __twr_v375 = _mng_buffer296 + _mng_i298;
    __twr_v376 = *(uint8_t*)(__twr_v375);
    __twr_v377 = 55ULL;
    if (__twr_v376 <= __twr_v377) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v378 = (uint64_t)(&LexTokenError);
    __twr_v379 = (uint64_t)(&"Malformed octal number.");
    __twr_v380 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v378)(_mng_token295, __twr_v379, __twr_v380, __twr_v380, __twr_v380);
    __twr_l101:;
    _mng_lastnum381 = _mng_num297;
    __twr_v382 = 3ULL;
    __twr_v383 = _mng_num297 << __twr_v382;
    _mng_num297 = __twr_v383;
    if (!(_mng_lastnum381)) { goto __twr_l104; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v384 = _mng_num297 / _mng_lastnum381;
    __twr_v385 = 8ULL;
    if (__twr_v384 == __twr_v385) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v386 = (uint64_t)(&LexTokenError);
    __twr_v387 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v388 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v386)(_mng_token295, __twr_v387, __twr_v388, __twr_v388, __twr_v388);
    __twr_l104:;
    __twr_v389 = _mng_buffer296 + _mng_i298;
    __twr_v390 = *(uint8_t*)(__twr_v389);
    __twr_v391 = 48ULL;
    __twr_v392 = __twr_v390 - __twr_v391;
    __twr_v393 = _mng_num297 + __twr_v392;
    _mng_num297 = __twr_v393;
    if (_mng_num297 >= _mng_lastnum381) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v394 = (uint64_t)(&LexTokenError);
    __twr_v395 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v396 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v394)(_mng_token295, __twr_v395, __twr_v396, __twr_v396, __twr_v396);
    __twr_l107:;
    __twr_v397 = 1ULL;
    __twr_v398 = _mng_i298 + __twr_v397;
    _mng_i298 = __twr_v398;
    __twr_l100:;
    __twr_v399 = _mng_buffer296 + _mng_i298;
    __twr_v400 = *(uint8_t*)(__twr_v399);
    if (__twr_v400) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    _jkl_retv = _mng_num297;
    goto _jkl_epilogue;
    __twr_l72:;
    __twr_v401 = _mng_buffer296 + _mng_i298;
    __twr_v402 = *(uint8_t*)(__twr_v401);
    if (!(__twr_v402)) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v403 = _mng_buffer296 + _mng_i298;
    __twr_v404 = *(uint8_t*)(__twr_v403);
    __twr_v405 = 48ULL;
    if (__twr_v404 < __twr_v405) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v406 = _mng_buffer296 + _mng_i298;
    __twr_v407 = *(uint8_t*)(__twr_v406);
    __twr_v408 = 57ULL;
    if (__twr_v407 <= __twr_v408) { goto __twr_l112; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_v409 = (uint64_t)(&LexTokenError);
    __twr_v410 = (uint64_t)(&"Malformed decimal number.");
    __twr_v411 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v409)(_mng_token295, __twr_v410, __twr_v411, __twr_v411, __twr_v411);
    __twr_l112:;
    _mng_lastnum412 = _mng_num297;
    __twr_v413 = 10ULL;
    __twr_v414 = _mng_num297 * __twr_v413;
    _mng_num297 = __twr_v414;
    if (!(_mng_lastnum412)) { goto __twr_l115; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v415 = _mng_num297 / _mng_lastnum412;
    __twr_v416 = 10ULL;
    if (__twr_v415 == __twr_v416) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v417 = (uint64_t)(&LexTokenError);
    __twr_v418 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v419 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v417)(_mng_token295, __twr_v418, __twr_v419, __twr_v419, __twr_v419);
    __twr_l115:;
    __twr_v420 = _mng_buffer296 + _mng_i298;
    __twr_v421 = *(uint8_t*)(__twr_v420);
    __twr_v422 = 48ULL;
    __twr_v423 = __twr_v421 - __twr_v422;
    __twr_v424 = _mng_num297 + __twr_v423;
    _mng_num297 = __twr_v424;
    if (_mng_num297 >= _mng_lastnum412) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v425 = (uint64_t)(&LexTokenError);
    __twr_v426 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v427 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v425)(_mng_token295, __twr_v426, __twr_v427, __twr_v427, __twr_v427);
    __twr_l118:;
    __twr_v428 = 1ULL;
    __twr_v429 = _mng_i298 + __twr_v428;
    _mng_i298 = __twr_v429;
    __twr_l111:;
    __twr_v430 = _mng_buffer296 + _mng_i298;
    __twr_v431 = *(uint8_t*)(__twr_v430);
    if (__twr_v431) { goto __twr_l109; } else { goto __twr_l110; }
    __twr_l110:;
    _jkl_retv = _mng_num297;
    goto _jkl_epilogue;
    __twr_l71:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token432, uint64_t _mng_buffer433, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t _mng_stream437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t _mng_byte454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t _mng_internedstring486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t _mng_dynamicbuffer489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t _mng_dumpster494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t _mng_len513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t _mng_uppercaseonly545;
    uint64_t _mng_len546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t _mng_macro585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    __twr_lLoopOnMacro:;
    _mng_length434 = 0ULL;
    __twr_v435 = (uint64_t)(&LexCurrentStream);
    __twr_v436 = *(uint64_t*)(__twr_v435);
    _mng_stream437 = __twr_v436;
    if (!(_mng_stream437)) { goto __twr_l122; } else { goto __twr_l123; }
    __twr_l123:;
    __twr_v438 = 8ULL;
    __twr_v439 = _mng_stream437 + __twr_v438;
    __twr_v440 = *(uint64_t*)(__twr_v439);
    __twr_v441 = _mng_token432 + __twr_v438;
    *(uint64_t*)(__twr_v441) = __twr_v440;
    __twr_v442 = 44ULL;
    __twr_v443 = _mng_stream437 + __twr_v442;
    __twr_v444 = *(uint32_t*)(__twr_v443);
    __twr_v445 = 16ULL;
    __twr_v446 = _mng_token432 + __twr_v445;
    *(uint32_t*)(__twr_v446) = __twr_v444;
    __twr_v447 = 48ULL;
    __twr_v448 = _mng_stream437 + __twr_v447;
    __twr_v449 = *(uint32_t*)(__twr_v448);
    __twr_v450 = 20ULL;
    __twr_v451 = _mng_token432 + __twr_v450;
    *(uint32_t*)(__twr_v451) = __twr_v449;
    __twr_l122:;
    __twr_v452 = (uint64_t)(&LexGetCharacter);
    __twr_v453 = ((uint64_t (*)())__twr_v452)();
    _mng_byte454 = __twr_v453;
    __twr_v455 = (uint64_t)(&LexCharTreatment);
    __twr_v456 = __twr_v455 + _mng_byte454;
    __twr_v457 = *(uint8_t*)(__twr_v456);
    __twr_v458 = 3ULL;
    if (__twr_v457 != __twr_v458) { goto __twr_l125; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v459 = (uint64_t)(&LexCurrentStream);
    __twr_v460 = *(uint64_t*)(__twr_v459);
    _mng_stream437 = __twr_v460;
    if (!(_mng_stream437)) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v461 = 8ULL;
    __twr_v462 = _mng_stream437 + __twr_v461;
    __twr_v463 = *(uint64_t*)(__twr_v462);
    __twr_v464 = _mng_token432 + __twr_v461;
    *(uint64_t*)(__twr_v464) = __twr_v463;
    __twr_v465 = 44ULL;
    __twr_v466 = _mng_stream437 + __twr_v465;
    __twr_v467 = *(uint32_t*)(__twr_v466);
    __twr_v468 = 16ULL;
    __twr_v469 = _mng_token432 + __twr_v468;
    *(uint32_t*)(__twr_v469) = __twr_v467;
    __twr_v470 = 48ULL;
    __twr_v471 = _mng_stream437 + __twr_v470;
    __twr_v472 = *(uint32_t*)(__twr_v471);
    __twr_v473 = 20ULL;
    __twr_v474 = _mng_token432 + __twr_v473;
    *(uint32_t*)(__twr_v474) = __twr_v472;
    __twr_l127:;
    __twr_v475 = (uint64_t)(&LexGetCharacter);
    __twr_v476 = ((uint64_t (*)())__twr_v475)();
    _mng_byte454 = __twr_v476;
    __twr_l126:;
    __twr_v477 = (uint64_t)(&LexCharTreatment);
    __twr_v478 = __twr_v477 + _mng_byte454;
    __twr_v479 = *(uint8_t*)(__twr_v478);
    __twr_v480 = 3ULL;
    if (__twr_v479 == __twr_v480) { goto __twr_l124; } else { goto __twr_l125; }
    __twr_l125:;
    if (_mng_byte454) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v481 = 0ULL;
    _jkl_retv = __twr_v481;
    goto _jkl_epilogue;
    __twr_l129:;
    __twr_v482 = 34ULL;
    if (_mng_byte454 != __twr_v482) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v483 = (uint64_t)(&TlAllocateFromZone);
    __twr_v484 = (uint64_t)(&LexInternedStringZone);
    __twr_v485 = ((uint64_t (*)(uint64_t))__twr_v483)(__twr_v484);
    _mng_internedstring486 = __twr_v485;
    __twr_v487 = 48ULL;
    __twr_v488 = _mng_internedstring486 + __twr_v487;
    _mng_dynamicbuffer489 = __twr_v488;
    __twr_v490 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v490)(_mng_dynamicbuffer489);
    __twr_v491 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v492 = 34ULL;
    __twr_v493 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v491)(_mng_token432, __twr_v492, _mng_dynamicbuffer489, __twr_v493, (uint64_t)(&_mng_dumpster494));
    __twr_v495 = 4ULL;
    _jkl_retv = __twr_v495;
    goto _jkl_epilogue;
    __twr_l131:;
    __twr_v496 = 39ULL;
    if (_mng_byte454 != __twr_v496) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v497 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v498 = 39ULL;
    __twr_v499 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v497)(_mng_token432, __twr_v498, __twr_v499, _mng_buffer433, (uint64_t)(&_mng_length434));
    __twr_v500 = 8ULL;
    _jkl_retv = __twr_v500;
    goto _jkl_epilogue;
    __twr_l133:;
    __twr_v501 = (uint64_t)(&LexCharTreatment);
    __twr_v502 = 1ULL;
    __twr_v503 = __twr_v501 + _mng_byte454;
    __twr_v504 = *(uint8_t*)(__twr_v503);
    if (__twr_v504 != __twr_v502) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    _mng_length434 = 1ULL;
    __twr_v505 = 0ULL;
    __twr_v506 = 1ULL;
    *(uint8_t*)(_mng_buffer433) = _mng_byte454;
    __twr_v507 = 1ULL;
    __twr_v508 = _mng_buffer433 + __twr_v507;
    *(uint8_t*)(__twr_v508) = __twr_v505;
    _jkl_retv = __twr_v506;
    goto _jkl_epilogue;
    __twr_l135:;
    __twr_v509 = (uint64_t)(&LexCharTreatment);
    __twr_v510 = __twr_v509 + _mng_byte454;
    __twr_v511 = *(uint8_t*)(__twr_v510);
    __twr_v512 = 2ULL;
    if (__twr_v511 != __twr_v512) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    _mng_len513 = 0ULL;
    __twr_v514 = (uint64_t)(&LexCharTreatment);
    __twr_v515 = __twr_v514 + _mng_byte454;
    __twr_v516 = *(uint8_t*)(__twr_v515);
    __twr_v517 = 2ULL;
    if (__twr_v516 != __twr_v517) { goto __twr_l140; } else { goto __twr_l139; }
    __twr_l139:;
    __twr_v518 = 127ULL;
    if (_mng_len513 != __twr_v518) { goto __twr_l142; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v519 = (uint64_t)(&LexTokenError);
    __twr_v520 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v521 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v519)(_mng_token432, __twr_v520, __twr_v521, __twr_v521, __twr_v521);
    __twr_l142:;
    __twr_v522 = 1ULL;
    __twr_v523 = _mng_buffer433 + _mng_len513;
    *(uint8_t*)(__twr_v523) = _mng_byte454;
    __twr_v524 = _mng_len513 + __twr_v522;
    _mng_len513 = __twr_v524;
    __twr_v525 = (uint64_t)(&LexGetCharacter);
    __twr_v526 = ((uint64_t (*)())__twr_v525)();
    _mng_byte454 = __twr_v526;
    __twr_l141:;
    __twr_v527 = (uint64_t)(&LexCharTreatment);
    __twr_v528 = __twr_v527 + _mng_byte454;
    __twr_v529 = *(uint8_t*)(__twr_v528);
    __twr_v530 = 2ULL;
    if (__twr_v529 == __twr_v530) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v531 = 0ULL;
    __twr_v532 = _mng_buffer433 + _mng_len513;
    *(uint8_t*)(__twr_v532) = __twr_v531;
    _mng_length434 = _mng_len513;
    __twr_v533 = (uint64_t)(&LexCharTreatment);
    __twr_v534 = __twr_v533 + _mng_byte454;
    __twr_v535 = *(uint8_t*)(__twr_v534);
    __twr_v536 = 3ULL;
    if (__twr_v535 == __twr_v536) { goto __twr_l144; } else { goto __twr_l145; }
    __twr_l145:;
    __twr_v537 = (uint64_t)(&LexCurrentStream);
    __twr_v538 = *(uint64_t*)(__twr_v537);
    __twr_v539 = 84ULL;
    __twr_v540 = __twr_v538 + __twr_v539;
    *(uint8_t*)(__twr_v540) = _mng_byte454;
    __twr_l144:;
    __twr_v541 = 2ULL;
    _jkl_retv = __twr_v541;
    goto _jkl_epilogue;
    __twr_l137:;
    __twr_v542 = 65ULL;
    if (_mng_byte454 < __twr_v542) { goto __twr_l148; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v543 = 90ULL;
    if (_mng_byte454 > __twr_v543) { goto __twr_l148; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v544 = 1ULL;
    goto __twr_l149;
    __twr_l148:;
    __twr_v544 = 0ULL;
    __twr_l149:;
    _mng_uppercaseonly545 = __twr_v544;
    _mng_len546 = 0ULL;
    __twr_v547 = (uint64_t)(&LexCharTreatment);
    __twr_v548 = __twr_v547 + _mng_byte454;
    __twr_v549 = *(uint8_t*)(__twr_v548);
    if (__twr_v549) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v550 = 127ULL;
    if (_mng_len546 != __twr_v550) { goto __twr_l153; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v551 = (uint64_t)(&LexTokenError);
    __twr_v552 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v553 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v551)(_mng_token432, __twr_v552, __twr_v553, __twr_v553, __twr_v553);
    __twr_l153:;
    if (!(_mng_uppercaseonly545)) { goto __twr_l155; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v554 = 65ULL;
    if (_mng_byte454 < __twr_v554) { goto __twr_l159; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v555 = 90ULL;
    if (_mng_byte454 > __twr_v555) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v556 = 1ULL;
    goto __twr_l160;
    __twr_l159:;
    __twr_v556 = 0ULL;
    __twr_l160:;
    _mng_uppercaseonly545 = __twr_v556;
    __twr_l155:;
    __twr_v557 = 1ULL;
    __twr_v558 = _mng_buffer433 + _mng_len546;
    *(uint8_t*)(__twr_v558) = _mng_byte454;
    __twr_v559 = _mng_len546 + __twr_v557;
    _mng_len546 = __twr_v559;
    __twr_v560 = (uint64_t)(&LexGetCharacter);
    __twr_v561 = ((uint64_t (*)())__twr_v560)();
    _mng_byte454 = __twr_v561;
    __twr_l152:;
    __twr_v562 = (uint64_t)(&LexCharTreatment);
    __twr_v563 = __twr_v562 + _mng_byte454;
    __twr_v564 = *(uint8_t*)(__twr_v563);
    if (!(__twr_v564)) { goto __twr_l150; } else { goto __twr_l151; }
    __twr_l151:;
    __twr_v565 = 0ULL;
    __twr_v566 = _mng_buffer433 + _mng_len546;
    *(uint8_t*)(__twr_v566) = __twr_v565;
    _mng_length434 = _mng_len546;
    __twr_v567 = (uint64_t)(&LexCharTreatment);
    __twr_v568 = 1ULL;
    __twr_v569 = __twr_v567 + _mng_byte454;
    __twr_v570 = *(uint8_t*)(__twr_v569);
    if (__twr_v570 == __twr_v568) { goto __twr_l162; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v571 = (uint64_t)(&LexCharTreatment);
    __twr_v572 = __twr_v571 + _mng_byte454;
    __twr_v573 = *(uint8_t*)(__twr_v572);
    __twr_v574 = 2ULL;
    if (__twr_v573 != __twr_v574) { goto __twr_l161; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v575 = (uint64_t)(&LexCurrentStream);
    __twr_v576 = *(uint64_t*)(__twr_v575);
    __twr_v577 = 84ULL;
    __twr_v578 = __twr_v576 + __twr_v577;
    *(uint8_t*)(__twr_v578) = _mng_byte454;
    __twr_l161:;
    if (!(_mng_uppercaseonly545)) { goto __twr_l164; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v579 = 1ULL;
    if (_mng_len546 <= __twr_v579) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v580 = 16ULL;
    _jkl_retv = __twr_v580;
    goto _jkl_epilogue;
    __twr_l164:;
    __twr_v581 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v582 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v583 = *(uint64_t*)(__twr_v582);
    __twr_v584 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v581)(__twr_v583, _mng_buffer433);
    _mng_macro585 = __twr_v584;
    if (_mng_macro585) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v586 = 0ULL;
    _jkl_retv = __twr_v586;
    goto _jkl_epilogue;
    __twr_l167:;
    __twr_v587 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v587)(_mng_macro585, _mng_token432);
    goto __twr_lLoopOnMacro;
    __twr_l120:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length434;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring486;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token588) {
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t _mng_buffer591[16];
    uint64_t __twr_v592;
    uint64_t _mng_length593;
    uint64_t _mng_internedstring594;
    uint64_t _mng_tokenflag595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t _mng_keyword602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    __twr_v589 = (uint64_t)(&LexGetTokenContents);
    __twr_v590 = (uint64_t)(&_mng_buffer591);
    __twr_v592 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v589)(_mng_token588, __twr_v590, (uint64_t)(&_mng_length593), (uint64_t)(&_mng_internedstring594));
    _mng_tokenflag595 = __twr_v592;
    __twr_v596 = 19ULL;
    __twr_v597 = _mng_tokenflag595 & __twr_v596;
    if (!(__twr_v597)) { goto __twr_l170; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v598 = (uint64_t)(&TlLookupHashTable);
    __twr_v599 = (uint64_t)(&LexKeywordHashTable);
    __twr_v600 = (uint64_t)(&_mng_buffer591);
    __twr_v601 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v598)(__twr_v599, __twr_v600);
    _mng_keyword602 = __twr_v601;
    if (_mng_keyword602) { goto __twr_l172; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v603 = 16ULL;
    __twr_v604 = _mng_tokenflag595 & __twr_v603;
    if (!(__twr_v604)) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    __twr_v605 = (uint64_t)(&LexTokenError);
    __twr_v606 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).");
    __twr_v607 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v605)(_mng_token588, __twr_v606, __twr_v607, __twr_v607, __twr_v607);
    __twr_l174:;
    __twr_v608 = (uint64_t)(&LexTokenError);
    __twr_v609 = (uint64_t)(&"Unknown keyword");
    __twr_v610 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v608)(_mng_token588, __twr_v609, __twr_v610, __twr_v610, __twr_v610);
    __twr_l172:;
    __twr_v611 = 48ULL;
    __twr_v612 = _mng_keyword602 + __twr_v611;
    __twr_v613 = *(uint8_t*)(__twr_v612);
    __twr_v614 = 24ULL;
    __twr_v615 = _mng_token588 + __twr_v614;
    *(uint8_t*)(__twr_v615) = __twr_v613;
    __twr_v616 = 49ULL;
    __twr_v617 = _mng_keyword602 + __twr_v616;
    __twr_v618 = *(uint8_t*)(__twr_v617);
    __twr_v619 = 25ULL;
    __twr_v620 = _mng_token588 + __twr_v619;
    *(uint8_t*)(__twr_v620) = __twr_v618;
    __twr_v621 = 50ULL;
    __twr_v622 = _mng_keyword602 + __twr_v621;
    __twr_v623 = *(uint8_t*)(__twr_v622);
    __twr_v624 = 26ULL;
    __twr_v625 = _mng_token588 + __twr_v624;
    *(uint8_t*)(__twr_v625) = __twr_v623;
    goto _jkl_epilogue;
    __twr_l170:;
    __twr_v626 = 8ULL;
    __twr_v627 = _mng_tokenflag595 & __twr_v626;
    if (!(__twr_v627)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v628 = 3ULL;
    __twr_v629 = 24ULL;
    __twr_v630 = _mng_token588 + __twr_v629;
    *(uint8_t*)(__twr_v630) = __twr_v628;
    __twr_v631 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v632 = (uint64_t)(&_mng_buffer591);
    __twr_v633 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v631)(_mng_token588, __twr_v632);
    *(uint64_t*)(_mng_token588) = __twr_v633;
    goto _jkl_epilogue;
    __twr_l176:;
    __twr_v634 = 4ULL;
    __twr_v635 = _mng_tokenflag595 & __twr_v634;
    if (!(__twr_v635)) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v636 = 2ULL;
    __twr_v637 = 24ULL;
    __twr_v638 = _mng_token588 + __twr_v637;
    *(uint8_t*)(__twr_v638) = __twr_v636;
    *(uint64_t*)(_mng_token588) = _mng_internedstring594;
    goto _jkl_epilogue;
    __twr_l178:;
    __twr_v639 = 32ULL;
    __twr_v640 = _mng_tokenflag595 & __twr_v639;
    if (!(__twr_v640)) { goto __twr_l180; } else { goto __twr_l181; }
    __twr_l181:;
    __twr_v641 = 4ULL;
    __twr_v642 = 24ULL;
    __twr_v643 = _mng_token588 + __twr_v642;
    *(uint8_t*)(__twr_v643) = __twr_v641;
    goto _jkl_epilogue;
    __twr_l180:;
    if (_mng_length593) { goto __twr_l182; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v644 = 4ULL;
    __twr_v645 = 24ULL;
    __twr_v646 = _mng_token588 + __twr_v645;
    *(uint8_t*)(__twr_v646) = __twr_v644;
    goto _jkl_epilogue;
    __twr_l182:;
    __twr_v647 = (uint64_t)(&_mng_buffer591);
    __twr_v648 = *(uint8_t*)(__twr_v647);
    __twr_v649 = 48ULL;
    if (__twr_v648 < __twr_v649) { goto __twr_l184; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v650 = (uint64_t)(&_mng_buffer591);
    __twr_v651 = *(uint8_t*)(__twr_v650);
    __twr_v652 = 57ULL;
    if (__twr_v651 > __twr_v652) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v653 = 3ULL;
    __twr_v654 = 24ULL;
    __twr_v655 = _mng_token588 + __twr_v654;
    *(uint8_t*)(__twr_v655) = __twr_v653;
    __twr_v656 = (uint64_t)(&LexCrunchNumber);
    __twr_v657 = (uint64_t)(&_mng_buffer591);
    __twr_v658 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v656)(_mng_token588, __twr_v657);
    *(uint64_t*)(_mng_token588) = __twr_v658;
    goto _jkl_epilogue;
    __twr_l184:;
    __twr_v659 = (uint64_t)(&LexTokenError);
    __twr_v660 = (uint64_t)(&"Unknown token");
    __twr_v661 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v659)(_mng_token588, __twr_v660, __twr_v661, __twr_v661, __twr_v661);
    __twr_l169:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest662, uint64_t _mng_src663) {
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    __twr_v664 = *(uint64_t*)(_mng_src663);
    *(uint64_t*)(_mng_dest662) = __twr_v664;
    __twr_v665 = 8ULL;
    __twr_v666 = _mng_src663 + __twr_v665;
    __twr_v667 = *(uint64_t*)(__twr_v666);
    __twr_v668 = _mng_dest662 + __twr_v665;
    *(uint64_t*)(__twr_v668) = __twr_v667;
    __twr_v669 = 16ULL;
    __twr_v670 = _mng_src663 + __twr_v669;
    __twr_v671 = *(uint32_t*)(__twr_v670);
    __twr_v672 = _mng_dest662 + __twr_v669;
    *(uint32_t*)(__twr_v672) = __twr_v671;
    __twr_v673 = 20ULL;
    __twr_v674 = _mng_src663 + __twr_v673;
    __twr_v675 = *(uint32_t*)(__twr_v674);
    __twr_v676 = _mng_dest662 + __twr_v673;
    *(uint32_t*)(__twr_v676) = __twr_v675;
    __twr_v677 = 24ULL;
    __twr_v678 = _mng_src663 + __twr_v677;
    __twr_v679 = *(uint8_t*)(__twr_v678);
    __twr_v680 = _mng_dest662 + __twr_v677;
    *(uint8_t*)(__twr_v680) = __twr_v679;
    __twr_v681 = 25ULL;
    __twr_v682 = _mng_src663 + __twr_v681;
    __twr_v683 = *(uint8_t*)(__twr_v682);
    __twr_v684 = _mng_dest662 + __twr_v681;
    *(uint8_t*)(__twr_v684) = __twr_v683;
    __twr_v685 = 26ULL;
    __twr_v686 = _mng_src663 + __twr_v685;
    __twr_v687 = *(uint8_t*)(__twr_v686);
    __twr_v688 = _mng_dest662 + __twr_v685;
    *(uint8_t*)(__twr_v688) = __twr_v687;
    __twr_l187:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token689) {
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t _mng_index692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    __twr_v690 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v691 = *(uint32_t*)(__twr_v690);
    _mng_index692 = __twr_v691;
    if (!(_mng_index692)) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v693 = (uint64_t)(&LexCopyToken);
    __twr_v694 = (uint64_t)(&LexPutbackStack);
    __twr_v695 = 1ULL;
    __twr_v696 = _mng_index692 - __twr_v695;
    __twr_v697 = 5ULL;
    __twr_v698 = __twr_v696 << __twr_v697;
    __twr_v699 = __twr_v694 + __twr_v698;
    ((void (*)(uint64_t, uint64_t))__twr_v693)(_mng_token689, __twr_v699);
    __twr_v700 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v700) = __twr_v696;
    goto _jkl_epilogue;
    __twr_l189:;
    __twr_v701 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v701)(_mng_token689);
    __twr_l188:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token702) {
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t _mng_index705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    __twr_v703 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v704 = *(uint32_t*)(__twr_v703);
    _mng_index705 = __twr_v704;
    __twr_v706 = 256ULL;
    if (_mng_index705 != __twr_v706) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v707 = (uint64_t)(&TlInternalError);
    __twr_v708 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v709 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v707)(__twr_v708, __twr_v709, __twr_v709, __twr_v709);
    __twr_l192:;
    __twr_v710 = (uint64_t)(&LexCopyToken);
    __twr_v711 = (uint64_t)(&LexPutbackStack);
    __twr_v712 = 5ULL;
    __twr_v713 = _mng_index705 << __twr_v712;
    __twr_v714 = __twr_v711 + __twr_v713;
    ((void (*)(uint64_t, uint64_t))__twr_v710)(__twr_v714, _mng_token702);
    __twr_v715 = 1ULL;
    __twr_v716 = _mng_index705 + __twr_v715;
    __twr_v717 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v717) = __twr_v716;
    __twr_l191:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token718, uint64_t _mng_type719, uint64_t _mng_subtype720) {
    uint64_t _jkl_retv;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t _mng_index723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t _mng_matchtoken734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    __twr_v721 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v722 = *(uint32_t*)(__twr_v721);
    _mng_index723 = __twr_v722;
    if (_mng_index723) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    __twr_v724 = (uint64_t)(&LexNextToken);
    __twr_v725 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v724)(__twr_v725);
    __twr_v726 = 1ULL;
    __twr_v727 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v727) = __twr_v726;
    _mng_index723 = 1ULL;
    __twr_l195:;
    __twr_v728 = (uint64_t)(&LexPutbackStack);
    __twr_v729 = 1ULL;
    __twr_v730 = _mng_index723 - __twr_v729;
    __twr_v731 = 5ULL;
    __twr_v732 = __twr_v730 << __twr_v731;
    __twr_v733 = __twr_v728 + __twr_v732;
    _mng_matchtoken734 = __twr_v733;
    if (!(_mng_token718)) { goto __twr_l197; } else { goto __twr_l198; }
    __twr_l198:;
    __twr_v735 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v735)(_mng_token718, _mng_matchtoken734);
    __twr_l197:;
    __twr_v736 = 24ULL;
    __twr_v737 = _mng_matchtoken734 + __twr_v736;
    __twr_v738 = *(uint8_t*)(__twr_v737);
    if (__twr_v738 == _mng_type719) { goto __twr_l199; } else { goto __twr_l200; }
    __twr_l200:;
    __twr_v739 = 24ULL;
    __twr_v740 = _mng_matchtoken734 + __twr_v739;
    __twr_v741 = *(uint8_t*)(__twr_v740);
    __twr_v742 = 4ULL;
    if (__twr_v741 != __twr_v742) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v743 = 1ULL;
    __twr_v744 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v745 = *(uint32_t*)(__twr_v744);
    __twr_v746 = __twr_v745 - __twr_v743;
    *(uint32_t*)(__twr_v744) = __twr_v746;
    __twr_l201:;
    __twr_v747 = 0ULL;
    _jkl_retv = __twr_v747;
    goto _jkl_epilogue;
    __twr_l199:;
    if (!(_mng_subtype720)) { goto __twr_l204; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v748 = 25ULL;
    __twr_v749 = _mng_matchtoken734 + __twr_v748;
    __twr_v750 = *(uint8_t*)(__twr_v749);
    if (__twr_v750 != _mng_subtype720) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v751 = 1ULL;
    __twr_v752 = _mng_index723 - __twr_v751;
    __twr_v753 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v753) = __twr_v752;
    _jkl_retv = __twr_v751;
    goto _jkl_epilogue;
    __twr_l203:;
    __twr_v754 = 0ULL;
    _jkl_retv = __twr_v754;
    goto _jkl_epilogue;
    __twr_l194:;
    _jkl_epilogue:;
    return _jkl_retv;
}

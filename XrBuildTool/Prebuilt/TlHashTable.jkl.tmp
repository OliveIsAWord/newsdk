#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
void TlInitializeHashTable(uint64_t _mng_hashtable123) {
    uint64_t _mng_listhead124;
    uint64_t __twr_v125;
    uint64_t __twr_v126;
    uint64_t _mng_i127;
    uint64_t __twr_v128;
    uint64_t __twr_v129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t _mng_listhead133;
    uint64_t __twr_v134;
    uint64_t __twr_v135;
    uint64_t __twr_v136;
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    _mng_listhead124 = _mng_hashtable123;
    __twr_v125 = 8ULL;
    __twr_v126 = _mng_listhead124 + __twr_v125;
    *(uint64_t*)(__twr_v126) = _mng_listhead124;
    *(uint64_t*)(_mng_listhead124) = _mng_listhead124;
    _mng_i127 = 0ULL;
    __twr_l2:;
    __twr_v128 = 16ULL;
    __twr_v129 = _mng_hashtable123 + __twr_v128;
    __twr_v130 = 4ULL;
    __twr_v131 = _mng_i127 << __twr_v130;
    __twr_v132 = __twr_v129 + __twr_v131;
    _mng_listhead133 = __twr_v132;
    __twr_v134 = 8ULL;
    __twr_v135 = _mng_listhead133 + __twr_v134;
    *(uint64_t*)(__twr_v135) = _mng_listhead133;
    *(uint64_t*)(_mng_listhead133) = _mng_listhead133;
    __twr_v136 = 1ULL;
    __twr_v137 = _mng_i127 + __twr_v136;
    _mng_i127 = __twr_v137;
    __twr_l4:;
    __twr_v138 = 97ULL;
    if (_mng_i127 < __twr_v138) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable139) {
    uint64_t _mng_i140;
    uint64_t _mng_entries141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t _mng_head147;
    uint64_t __twr_v148;
    uint64_t _mng_listentry149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    _mng_i140 = 0ULL;
    __twr_l6:;
    _mng_entries141 = 0ULL;
    __twr_v142 = 16ULL;
    __twr_v143 = _mng_hashtable139 + __twr_v142;
    __twr_v144 = 4ULL;
    __twr_v145 = _mng_i140 << __twr_v144;
    __twr_v146 = __twr_v143 + __twr_v145;
    _mng_head147 = __twr_v146;
    __twr_v148 = *(uint64_t*)(_mng_head147);
    _mng_listentry149 = __twr_v148;
    if (_mng_listentry149 == _mng_head147) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v150 = 1ULL;
    __twr_v151 = _mng_entries141 + __twr_v150;
    _mng_entries141 = __twr_v151;
    __twr_v152 = *(uint64_t*)(_mng_listentry149);
    _mng_listentry149 = __twr_v152;
    __twr_l11:;
    if (_mng_listentry149 != _mng_head147) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (!(_mng_entries141)) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v153 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v153)(_mng_i140);
    __twr_v154 = (uint64_t)(&TlPrintString);
    __twr_v155 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v154)(__twr_v155);
    ((void (*)(uint64_t))__twr_v153)(_mng_entries141);
    __twr_v156 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v154)(__twr_v156);
    __twr_l12:;
    __twr_v157 = 1ULL;
    __twr_v158 = _mng_i140 + __twr_v157;
    _mng_i140 = __twr_v158;
    __twr_l8:;
    __twr_v159 = 97ULL;
    if (_mng_i140 < __twr_v159) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_l5:;
    _jkl_epilogue:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable160, uint64_t _mng_entry161, uint64_t _mng_key162, uint64_t _mng_hash163) {
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t _mng_listhead173;
    uint64_t _mng_listentry174;
    uint64_t __twr_v175;
    uint64_t _mng_first176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t _mng_listhead180;
    uint64_t __twr_v181;
    uint64_t _mng_listentry182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t _mng_last185;
    uint64_t __twr_v186;
    __twr_v164 = 32ULL;
    __twr_v165 = _mng_entry161 + __twr_v164;
    *(uint64_t*)(__twr_v165) = _mng_hashtable160;
    __twr_v166 = 40ULL;
    __twr_v167 = _mng_entry161 + __twr_v166;
    *(uint64_t*)(__twr_v167) = _mng_key162;
    __twr_v168 = 16ULL;
    __twr_v169 = _mng_hashtable160 + __twr_v168;
    __twr_v170 = 4ULL;
    __twr_v171 = _mng_hash163 << __twr_v170;
    __twr_v172 = __twr_v169 + __twr_v171;
    _mng_listhead173 = __twr_v172;
    _mng_listentry174 = _mng_entry161;
    __twr_v175 = *(uint64_t*)(_mng_listhead173);
    _mng_first176 = __twr_v175;
    *(uint64_t*)(_mng_listentry174) = _mng_first176;
    __twr_v177 = 8ULL;
    __twr_v178 = _mng_listentry174 + __twr_v177;
    *(uint64_t*)(__twr_v178) = _mng_listhead173;
    __twr_v179 = _mng_first176 + __twr_v177;
    *(uint64_t*)(__twr_v179) = _mng_entry161;
    *(uint64_t*)(_mng_listhead173) = _mng_entry161;
    _mng_listhead180 = _mng_hashtable160;
    __twr_v181 = _mng_entry161 + __twr_v168;
    _mng_listentry182 = __twr_v181;
    __twr_v183 = _mng_listhead180 + __twr_v177;
    __twr_v184 = *(uint64_t*)(__twr_v183);
    _mng_last185 = __twr_v184;
    __twr_v186 = _mng_listentry182 + __twr_v177;
    *(uint64_t*)(__twr_v186) = _mng_last185;
    *(uint64_t*)(_mng_listentry182) = _mng_listhead180;
    *(uint64_t*)(_mng_last185) = _mng_listentry182;
    *(uint64_t*)(__twr_v183) = _mng_listentry182;
    __twr_l14:;
    _jkl_epilogue:;
}
void TlInsertHashTable(uint64_t _mng_hashtable187, uint64_t _mng_entry188, uint64_t _mng_key189) {
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t _mng_hash192;
    uint64_t __twr_v193;
    __twr_v190 = (uint64_t)(&TlHashString);
    __twr_v191 = ((uint64_t (*)(uint64_t))__twr_v190)(_mng_key189);
    _mng_hash192 = __twr_v191;
    __twr_v193 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v193)(_mng_hashtable187, _mng_entry188, _mng_key189, _mng_hash192);
    __twr_l15:;
    _jkl_epilogue:;
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable194, uint64_t _mng_entrysize195, uint64_t _mng_key196, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t _mng_hash199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t _mng_head205;
    uint64_t __twr_v206;
    uint64_t _mng_listentry207;
    uint64_t _mng_entry208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t _mng_created214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t _mng_status218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    __twr_v197 = (uint64_t)(&TlHashString);
    __twr_v198 = ((uint64_t (*)(uint64_t))__twr_v197)(_mng_key196);
    _mng_hash199 = __twr_v198;
    __twr_v200 = 16ULL;
    __twr_v201 = _mng_hashtable194 + __twr_v200;
    __twr_v202 = 4ULL;
    __twr_v203 = _mng_hash199 << __twr_v202;
    __twr_v204 = __twr_v201 + __twr_v203;
    _mng_head205 = __twr_v204;
    __twr_v206 = *(uint64_t*)(_mng_head205);
    _mng_listentry207 = __twr_v206;
    if (_mng_listentry207 == _mng_head205) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    _mng_entry208 = _mng_listentry207;
    __twr_v209 = (uint64_t)(&TlCompareString);
    __twr_v210 = 40ULL;
    __twr_v211 = _mng_entry208 + __twr_v210;
    __twr_v212 = *(uint64_t*)(__twr_v211);
    __twr_v213 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v209)(_mng_key196, __twr_v212);
    if (__twr_v213) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    _mng_created214 = 0ULL;
    _jkl_retv = _mng_entry208;
    goto _jkl_epilogue;
    __twr_l20:;
    __twr_v215 = *(uint64_t*)(_mng_listentry207);
    _mng_listentry207 = __twr_v215;
    __twr_l19:;
    if (_mng_listentry207 != _mng_head205) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v216 = (uint64_t)(&TlBumpAlloc);
    __twr_v217 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v216)(_mng_entrysize195, (uint64_t)(&_mng_entry208));
    _mng_status218 = __twr_v217;
    if (!(_mng_status218)) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v219 = (uint64_t)(&TlInternalError);
    __twr_v220 = (uint64_t)(&"Failed to allocate entry");
    __twr_v221 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v219)(__twr_v220, __twr_v221, __twr_v221, __twr_v221);
    __twr_l22:;
    __twr_v222 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v222)(_mng_hashtable194, _mng_entry208, _mng_key196, _mng_hash199);
    _mng_created214 = 1ULL;
    _jkl_retv = _mng_entry208;
    goto _jkl_epilogue;
    __twr_l16:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created214;
    return _jkl_retv;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable223, uint64_t _mng_entry224, uint64_t _mng_key225) {
    uint64_t _jkl_retv;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t _mng_hash228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t _mng_head234;
    uint64_t __twr_v235;
    uint64_t _mng_listentry236;
    uint64_t _mng_oldentry237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    __twr_v226 = (uint64_t)(&TlHashString);
    __twr_v227 = ((uint64_t (*)(uint64_t))__twr_v226)(_mng_key225);
    _mng_hash228 = __twr_v227;
    __twr_v229 = 16ULL;
    __twr_v230 = _mng_hashtable223 + __twr_v229;
    __twr_v231 = 4ULL;
    __twr_v232 = _mng_hash228 << __twr_v231;
    __twr_v233 = __twr_v230 + __twr_v232;
    _mng_head234 = __twr_v233;
    __twr_v235 = *(uint64_t*)(_mng_head234);
    _mng_listentry236 = __twr_v235;
    if (_mng_listentry236 == _mng_head234) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    _mng_oldentry237 = _mng_listentry236;
    __twr_v238 = (uint64_t)(&TlCompareString);
    __twr_v239 = 40ULL;
    __twr_v240 = _mng_oldentry237 + __twr_v239;
    __twr_v241 = *(uint64_t*)(__twr_v240);
    __twr_v242 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v238)(_mng_key225, __twr_v241);
    if (__twr_v242) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    _jkl_retv = _mng_oldentry237;
    goto _jkl_epilogue;
    __twr_l28:;
    __twr_v243 = *(uint64_t*)(_mng_listentry236);
    _mng_listentry236 = __twr_v243;
    __twr_l27:;
    if (_mng_listentry236 != _mng_head234) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v244 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v244)(_mng_hashtable223, _mng_entry224, _mng_key225, _mng_hash228);
    _jkl_retv = _mng_entry224;
    goto _jkl_epilogue;
    __twr_l24:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable245, uint64_t _mng_key246, uint64_t _mng_hash247) {
    uint64_t _jkl_retv;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t _mng_head253;
    uint64_t __twr_v254;
    uint64_t _mng_listentry255;
    uint64_t _mng_entry256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    __twr_v248 = 16ULL;
    __twr_v249 = _mng_hashtable245 + __twr_v248;
    __twr_v250 = 4ULL;
    __twr_v251 = _mng_hash247 << __twr_v250;
    __twr_v252 = __twr_v249 + __twr_v251;
    _mng_head253 = __twr_v252;
    __twr_v254 = *(uint64_t*)(_mng_head253);
    _mng_listentry255 = __twr_v254;
    if (_mng_listentry255 == _mng_head253) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    _mng_entry256 = _mng_listentry255;
    __twr_v257 = (uint64_t)(&TlCompareString);
    __twr_v258 = 40ULL;
    __twr_v259 = _mng_entry256 + __twr_v258;
    __twr_v260 = *(uint64_t*)(__twr_v259);
    __twr_v261 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v257)(_mng_key246, __twr_v260);
    if (__twr_v261) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_entry256;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v262 = *(uint64_t*)(_mng_listentry255);
    _mng_listentry255 = __twr_v262;
    __twr_l33:;
    if (_mng_listentry255 != _mng_head253) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v263 = 0ULL;
    _jkl_retv = __twr_v263;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable264, uint64_t _mng_key265) {
    uint64_t _jkl_retv;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t _mng_hash268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    __twr_v266 = (uint64_t)(&TlHashString);
    __twr_v267 = ((uint64_t (*)(uint64_t))__twr_v266)(_mng_key265);
    _mng_hash268 = __twr_v267;
    __twr_v269 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v270 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v269)(_mng_hashtable264, _mng_key265, _mng_hash268);
    _jkl_retv = __twr_v270;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void TlRemoveHashTable(uint64_t _mng_entry271) {
    uint64_t _mng_listentry272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t _mng_prev276;
    uint64_t __twr_v277;
    uint64_t _mng_next278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t _mng_listentry282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_prev285;
    uint64_t __twr_v286;
    uint64_t _mng_next287;
    uint64_t __twr_v288;
    _mng_listentry272 = _mng_entry271;
    __twr_v273 = 8ULL;
    __twr_v274 = _mng_listentry272 + __twr_v273;
    __twr_v275 = *(uint64_t*)(__twr_v274);
    _mng_prev276 = __twr_v275;
    __twr_v277 = *(uint64_t*)(_mng_listentry272);
    _mng_next278 = __twr_v277;
    *(uint64_t*)(_mng_prev276) = _mng_next278;
    __twr_v279 = _mng_next278 + __twr_v273;
    *(uint64_t*)(__twr_v279) = _mng_prev276;
    __twr_v280 = 16ULL;
    __twr_v281 = _mng_entry271 + __twr_v280;
    _mng_listentry282 = __twr_v281;
    __twr_v283 = _mng_listentry282 + __twr_v273;
    __twr_v284 = *(uint64_t*)(__twr_v283);
    _mng_prev285 = __twr_v284;
    __twr_v286 = *(uint64_t*)(_mng_listentry282);
    _mng_next287 = __twr_v286;
    *(uint64_t*)(_mng_prev285) = _mng_next287;
    __twr_v288 = _mng_next287 + __twr_v273;
    *(uint64_t*)(__twr_v288) = _mng_prev285;
    __twr_l37:;
    _jkl_epilogue:;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable289, uint64_t _mng_enumfunc290) {
    uint64_t _mng_head291;
    uint64_t __twr_v292;
    uint64_t _mng_listentry293;
    uint64_t __twr_v294;
    uint64_t _mng_nextentry295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t _mng_entry298;
    _mng_head291 = _mng_hashtable289;
    __twr_v292 = *(uint64_t*)(_mng_head291);
    _mng_listentry293 = __twr_v292;
    if (_mng_listentry293 == _mng_head291) { goto __twr_l40; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v294 = *(uint64_t*)(_mng_listentry293);
    _mng_nextentry295 = __twr_v294;
    __twr_v296 = 16ULL;
    __twr_v297 = _mng_listentry293 - __twr_v296;
    _mng_entry298 = __twr_v297;
    ((void (*)(uint64_t))_mng_enumfunc290)(_mng_entry298);
    _mng_listentry293 = _mng_nextentry295;
    __twr_l41:;
    if (_mng_listentry293 != _mng_head291) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t TlHashString(uint64_t _mng_str299) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    _mng_hash300 = 0ULL;
    __twr_v301 = *(uint8_t*)(_mng_str299);
    if (!(__twr_v301)) { goto __twr_l44; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v302 = *(uint8_t*)(_mng_str299);
    __twr_v303 = _mng_hash300 + __twr_v302;
    _mng_hash300 = __twr_v303;
    __twr_v304 = 10ULL;
    __twr_v305 = _mng_hash300 << __twr_v304;
    __twr_v306 = _mng_hash300 + __twr_v305;
    _mng_hash300 = __twr_v306;
    __twr_v307 = 6ULL;
    __twr_v308 = _mng_hash300 >> __twr_v307;
    __twr_v309 = _mng_hash300 ^ __twr_v308;
    _mng_hash300 = __twr_v309;
    __twr_v310 = 1ULL;
    __twr_v311 = _mng_str299 + __twr_v310;
    _mng_str299 = __twr_v311;
    __twr_l45:;
    __twr_v312 = *(uint8_t*)(_mng_str299);
    if (__twr_v312) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v313 = 3ULL;
    __twr_v314 = _mng_hash300 << __twr_v313;
    __twr_v315 = _mng_hash300 + __twr_v314;
    _mng_hash300 = __twr_v315;
    __twr_v316 = 11ULL;
    __twr_v317 = _mng_hash300 >> __twr_v316;
    __twr_v318 = _mng_hash300 ^ __twr_v317;
    _mng_hash300 = __twr_v318;
    __twr_v319 = 15ULL;
    __twr_v320 = _mng_hash300 << __twr_v319;
    __twr_v321 = _mng_hash300 + __twr_v320;
    _mng_hash300 = __twr_v321;
    __twr_v322 = 97ULL;
    __twr_v323 = _mng_hash300 % __twr_v322;
    _mng_hash300 = __twr_v323;
    _jkl_retv = _mng_hash300;
    goto _jkl_epilogue;
    __twr_l42:;
    _jkl_epilogue:;
    return _jkl_retv;
}

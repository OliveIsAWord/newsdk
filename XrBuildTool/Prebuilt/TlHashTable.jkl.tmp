#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintHex(uint64_t _mng_num10);
extern void TlPrintCharacter(uint64_t _mng_byte11);
extern void TlInternalError(uint64_t _mng_str12, uint64_t _mng_err113, uint64_t _mng_err214, uint64_t _mng_err315);
extern void TlUserError(uint64_t _mng_str16, uint64_t _mng_err117, uint64_t _mng_err218, uint64_t _mng_err319);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr22);
extern uint64_t TlCompareString(uint64_t _mng_str123, uint64_t _mng_str224);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str125, uint64_t _mng_str226, uint64_t _mng_count27);
extern void TlCopyString(uint64_t _mng_dest28, uint64_t _mng_src29, uint64_t _mng_bufsize30);
extern uint64_t TlOpenSource(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename32, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle33);
extern uint64_t TlReadFile(uint64_t _mng_handle34, uint64_t _mng_bytes35, uint64_t _mng_buffer36);
extern uint64_t TlWriteFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable40);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable41);
extern void TlInsertHashTable(uint64_t _mng_hashtable42, uint64_t _mng_entry43, uint64_t _mng_key44);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entrysize49, uint64_t _mng_key50, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable51, uint64_t _mng_key52);
extern void TlRemoveHashTable(uint64_t _mng_entry53);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable54, uint64_t _mng_enumfunc55);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable56, uint64_t _mng_key57, uint64_t _mng_hash58);
extern uint64_t TlHashString(uint64_t _mng_str59);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable60, uint64_t _mng_outerscope61, uint64_t _mng_deletefunc62);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable65);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable66, uint64_t _mng_name67);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_entry69, uint64_t _mng_name70);
extern void TlRemoveSymbolTable(uint64_t _mng_entry71);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array73);
extern void TlInsertDynamicBuffer(uint64_t _mng_array74, uint64_t _mng_byte75);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_srcbuf77, uint64_t _mng_length78);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_number80, uint64_t _mng_base81);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array82);
extern uint64_t TlMatchPath(uint64_t _mng_path83, uint64_t _mng_pathset84, uint64_t _mng_resultingpath85, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath86, uint64_t _mng_destpath87);
extern uint64_t TlGetFileName(uint64_t _mng_path88);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path89);
extern uint64_t TlPathExists(uint64_t _mng_path90);
extern uint64_t TlIterateDirectory(uint64_t _mng_path91, uint64_t _mng_callback92, uint64_t _mng_context93);
extern uint64_t TlGetPathExtension(uint64_t _mng_path94);
extern uint64_t TlStatFile(uint64_t _mng_path95, uint64_t _mng_statrecord96);
extern uint64_t TlCreateDirectory(uint64_t _mng_path97);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path98);
extern void TlInitializeZone(uint64_t _mng_zone99, uint64_t _mng_blocksize100);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone101);
extern void TlFreeToZone(uint64_t _mng_zone102, uint64_t _mng_block103);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant104);
extern void TlPunchValue(uint64_t _mng_ptr105, uint64_t _mng_value106, uint64_t _mng_bytes107);
extern uint64_t TlTokenize(uint64_t _mng_buffer108, uint64_t _mng_tokenbuffer109, uint64_t _mng_bufsize110, uint64_t _mng_delimiter111);
extern uint64_t TlStringToNumber(uint64_t _mng_src112, uint64_t _mng_bufsize113, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler114);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine115, uint64_t _mng_arg116, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread117);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex118);
extern void TlReleaseMutex(uint64_t _mng_mutex119);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue120);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore121);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore122);
extern uint64_t TlSystem(uint64_t _mng_cmdline123);
extern uint64_t TlCurrentEpochTime();
void TlInitializeHashTable(uint64_t _mng_hashtable124) {
    uint64_t _mng_listhead125;
    uint64_t __twr_v126;
    uint64_t __twr_v127;
    uint64_t _mng_i128;
    uint64_t __twr_v129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t __twr_v133;
    uint64_t _mng_listhead134;
    uint64_t __twr_v135;
    uint64_t __twr_v136;
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    uint64_t __twr_v139;
    _mng_listhead125 = _mng_hashtable124;
    __twr_v126 = 8ULL;
    __twr_v127 = _mng_listhead125 + __twr_v126;
    *(uint64_t*)(__twr_v127) = _mng_listhead125;
    *(uint64_t*)(_mng_listhead125) = _mng_listhead125;
    _mng_i128 = 0ULL;
    __twr_l2:;
    __twr_v129 = 16ULL;
    __twr_v130 = _mng_hashtable124 + __twr_v129;
    __twr_v131 = 4ULL;
    __twr_v132 = _mng_i128 << __twr_v131;
    __twr_v133 = __twr_v130 + __twr_v132;
    _mng_listhead134 = __twr_v133;
    __twr_v135 = 8ULL;
    __twr_v136 = _mng_listhead134 + __twr_v135;
    *(uint64_t*)(__twr_v136) = _mng_listhead134;
    *(uint64_t*)(_mng_listhead134) = _mng_listhead134;
    __twr_v137 = 1ULL;
    __twr_v138 = _mng_i128 + __twr_v137;
    _mng_i128 = __twr_v138;
    __twr_l4:;
    __twr_v139 = 97ULL;
    if (_mng_i128 < __twr_v139) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable140) {
    uint64_t _mng_i141;
    uint64_t _mng_entries142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t _mng_head148;
    uint64_t __twr_v149;
    uint64_t _mng_listentry150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    _mng_i141 = 0ULL;
    __twr_l6:;
    _mng_entries142 = 0ULL;
    __twr_v143 = 16ULL;
    __twr_v144 = _mng_hashtable140 + __twr_v143;
    __twr_v145 = 4ULL;
    __twr_v146 = _mng_i141 << __twr_v145;
    __twr_v147 = __twr_v144 + __twr_v146;
    _mng_head148 = __twr_v147;
    __twr_v149 = *(uint64_t*)(_mng_head148);
    _mng_listentry150 = __twr_v149;
    if (_mng_listentry150 == _mng_head148) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v151 = 1ULL;
    __twr_v152 = _mng_entries142 + __twr_v151;
    _mng_entries142 = __twr_v152;
    __twr_v153 = *(uint64_t*)(_mng_listentry150);
    _mng_listentry150 = __twr_v153;
    __twr_l11:;
    if (_mng_listentry150 != _mng_head148) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (!(_mng_entries142)) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v154 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v154)(_mng_i141);
    __twr_v155 = (uint64_t)(&TlPrintString);
    __twr_v156 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v155)(__twr_v156);
    ((void (*)(uint64_t))__twr_v154)(_mng_entries142);
    __twr_v157 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v155)(__twr_v157);
    __twr_l12:;
    __twr_v158 = 1ULL;
    __twr_v159 = _mng_i141 + __twr_v158;
    _mng_i141 = __twr_v159;
    __twr_l8:;
    __twr_v160 = 97ULL;
    if (_mng_i141 < __twr_v160) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_l5:;
    _jkl_epilogue:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable161, uint64_t _mng_entry162, uint64_t _mng_key163, uint64_t _mng_hash164) {
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t _mng_listhead174;
    uint64_t _mng_listentry175;
    uint64_t __twr_v176;
    uint64_t _mng_first177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t _mng_listhead181;
    uint64_t __twr_v182;
    uint64_t _mng_listentry183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t _mng_last186;
    uint64_t __twr_v187;
    __twr_v165 = 32ULL;
    __twr_v166 = _mng_entry162 + __twr_v165;
    *(uint64_t*)(__twr_v166) = _mng_hashtable161;
    __twr_v167 = 40ULL;
    __twr_v168 = _mng_entry162 + __twr_v167;
    *(uint64_t*)(__twr_v168) = _mng_key163;
    __twr_v169 = 16ULL;
    __twr_v170 = _mng_hashtable161 + __twr_v169;
    __twr_v171 = 4ULL;
    __twr_v172 = _mng_hash164 << __twr_v171;
    __twr_v173 = __twr_v170 + __twr_v172;
    _mng_listhead174 = __twr_v173;
    _mng_listentry175 = _mng_entry162;
    __twr_v176 = *(uint64_t*)(_mng_listhead174);
    _mng_first177 = __twr_v176;
    *(uint64_t*)(_mng_listentry175) = _mng_first177;
    __twr_v178 = 8ULL;
    __twr_v179 = _mng_listentry175 + __twr_v178;
    *(uint64_t*)(__twr_v179) = _mng_listhead174;
    __twr_v180 = _mng_first177 + __twr_v178;
    *(uint64_t*)(__twr_v180) = _mng_entry162;
    *(uint64_t*)(_mng_listhead174) = _mng_entry162;
    _mng_listhead181 = _mng_hashtable161;
    __twr_v182 = _mng_entry162 + __twr_v169;
    _mng_listentry183 = __twr_v182;
    __twr_v184 = _mng_listhead181 + __twr_v178;
    __twr_v185 = *(uint64_t*)(__twr_v184);
    _mng_last186 = __twr_v185;
    __twr_v187 = _mng_listentry183 + __twr_v178;
    *(uint64_t*)(__twr_v187) = _mng_last186;
    *(uint64_t*)(_mng_listentry183) = _mng_listhead181;
    *(uint64_t*)(_mng_last186) = _mng_listentry183;
    *(uint64_t*)(__twr_v184) = _mng_listentry183;
    __twr_l14:;
    _jkl_epilogue:;
}
void TlInsertHashTable(uint64_t _mng_hashtable188, uint64_t _mng_entry189, uint64_t _mng_key190) {
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t _mng_hash193;
    uint64_t __twr_v194;
    __twr_v191 = (uint64_t)(&TlHashString);
    __twr_v192 = ((uint64_t (*)(uint64_t))__twr_v191)(_mng_key190);
    _mng_hash193 = __twr_v192;
    __twr_v194 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v194)(_mng_hashtable188, _mng_entry189, _mng_key190, _mng_hash193);
    __twr_l15:;
    _jkl_epilogue:;
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable195, uint64_t _mng_entrysize196, uint64_t _mng_key197, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t _mng_hash200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t _mng_head206;
    uint64_t __twr_v207;
    uint64_t _mng_listentry208;
    uint64_t _mng_entry209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t _mng_created215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t _mng_status219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    __twr_v198 = (uint64_t)(&TlHashString);
    __twr_v199 = ((uint64_t (*)(uint64_t))__twr_v198)(_mng_key197);
    _mng_hash200 = __twr_v199;
    __twr_v201 = 16ULL;
    __twr_v202 = _mng_hashtable195 + __twr_v201;
    __twr_v203 = 4ULL;
    __twr_v204 = _mng_hash200 << __twr_v203;
    __twr_v205 = __twr_v202 + __twr_v204;
    _mng_head206 = __twr_v205;
    __twr_v207 = *(uint64_t*)(_mng_head206);
    _mng_listentry208 = __twr_v207;
    if (_mng_listentry208 == _mng_head206) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    _mng_entry209 = _mng_listentry208;
    __twr_v210 = (uint64_t)(&TlCompareString);
    __twr_v211 = 40ULL;
    __twr_v212 = _mng_entry209 + __twr_v211;
    __twr_v213 = *(uint64_t*)(__twr_v212);
    __twr_v214 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v210)(_mng_key197, __twr_v213);
    if (__twr_v214) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    _mng_created215 = 0ULL;
    _jkl_retv = _mng_entry209;
    goto _jkl_epilogue;
    __twr_l20:;
    __twr_v216 = *(uint64_t*)(_mng_listentry208);
    _mng_listentry208 = __twr_v216;
    __twr_l19:;
    if (_mng_listentry208 != _mng_head206) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v217 = (uint64_t)(&TlBumpAlloc);
    __twr_v218 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v217)(_mng_entrysize196, (uint64_t)(&_mng_entry209));
    _mng_status219 = __twr_v218;
    if (!(_mng_status219)) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v220 = (uint64_t)(&TlInternalError);
    __twr_v221 = (uint64_t)(&"Failed to allocate entry");
    __twr_v222 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v220)(__twr_v221, __twr_v222, __twr_v222, __twr_v222);
    __twr_l22:;
    __twr_v223 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v223)(_mng_hashtable195, _mng_entry209, _mng_key197, _mng_hash200);
    _mng_created215 = 1ULL;
    _jkl_retv = _mng_entry209;
    goto _jkl_epilogue;
    __twr_l16:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created215;
    return _jkl_retv;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable224, uint64_t _mng_entry225, uint64_t _mng_key226) {
    uint64_t _jkl_retv;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t _mng_hash229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t _mng_head235;
    uint64_t __twr_v236;
    uint64_t _mng_listentry237;
    uint64_t _mng_oldentry238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    __twr_v227 = (uint64_t)(&TlHashString);
    __twr_v228 = ((uint64_t (*)(uint64_t))__twr_v227)(_mng_key226);
    _mng_hash229 = __twr_v228;
    __twr_v230 = 16ULL;
    __twr_v231 = _mng_hashtable224 + __twr_v230;
    __twr_v232 = 4ULL;
    __twr_v233 = _mng_hash229 << __twr_v232;
    __twr_v234 = __twr_v231 + __twr_v233;
    _mng_head235 = __twr_v234;
    __twr_v236 = *(uint64_t*)(_mng_head235);
    _mng_listentry237 = __twr_v236;
    if (_mng_listentry237 == _mng_head235) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    _mng_oldentry238 = _mng_listentry237;
    __twr_v239 = (uint64_t)(&TlCompareString);
    __twr_v240 = 40ULL;
    __twr_v241 = _mng_oldentry238 + __twr_v240;
    __twr_v242 = *(uint64_t*)(__twr_v241);
    __twr_v243 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v239)(_mng_key226, __twr_v242);
    if (__twr_v243) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    _jkl_retv = _mng_oldentry238;
    goto _jkl_epilogue;
    __twr_l28:;
    __twr_v244 = *(uint64_t*)(_mng_listentry237);
    _mng_listentry237 = __twr_v244;
    __twr_l27:;
    if (_mng_listentry237 != _mng_head235) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v245 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v245)(_mng_hashtable224, _mng_entry225, _mng_key226, _mng_hash229);
    _jkl_retv = _mng_entry225;
    goto _jkl_epilogue;
    __twr_l24:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable246, uint64_t _mng_key247, uint64_t _mng_hash248) {
    uint64_t _jkl_retv;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t _mng_head254;
    uint64_t __twr_v255;
    uint64_t _mng_listentry256;
    uint64_t _mng_entry257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    __twr_v249 = 16ULL;
    __twr_v250 = _mng_hashtable246 + __twr_v249;
    __twr_v251 = 4ULL;
    __twr_v252 = _mng_hash248 << __twr_v251;
    __twr_v253 = __twr_v250 + __twr_v252;
    _mng_head254 = __twr_v253;
    __twr_v255 = *(uint64_t*)(_mng_head254);
    _mng_listentry256 = __twr_v255;
    if (_mng_listentry256 == _mng_head254) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    _mng_entry257 = _mng_listentry256;
    __twr_v258 = (uint64_t)(&TlCompareString);
    __twr_v259 = 40ULL;
    __twr_v260 = _mng_entry257 + __twr_v259;
    __twr_v261 = *(uint64_t*)(__twr_v260);
    __twr_v262 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v258)(_mng_key247, __twr_v261);
    if (__twr_v262) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_entry257;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v263 = *(uint64_t*)(_mng_listentry256);
    _mng_listentry256 = __twr_v263;
    __twr_l33:;
    if (_mng_listentry256 != _mng_head254) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v264 = 0ULL;
    _jkl_retv = __twr_v264;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable265, uint64_t _mng_key266) {
    uint64_t _jkl_retv;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t _mng_hash269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    __twr_v267 = (uint64_t)(&TlHashString);
    __twr_v268 = ((uint64_t (*)(uint64_t))__twr_v267)(_mng_key266);
    _mng_hash269 = __twr_v268;
    __twr_v270 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v271 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v270)(_mng_hashtable265, _mng_key266, _mng_hash269);
    _jkl_retv = __twr_v271;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void TlRemoveHashTable(uint64_t _mng_entry272) {
    uint64_t _mng_listentry273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_prev277;
    uint64_t __twr_v278;
    uint64_t _mng_next279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t _mng_listentry283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t _mng_prev286;
    uint64_t __twr_v287;
    uint64_t _mng_next288;
    uint64_t __twr_v289;
    _mng_listentry273 = _mng_entry272;
    __twr_v274 = 8ULL;
    __twr_v275 = _mng_listentry273 + __twr_v274;
    __twr_v276 = *(uint64_t*)(__twr_v275);
    _mng_prev277 = __twr_v276;
    __twr_v278 = *(uint64_t*)(_mng_listentry273);
    _mng_next279 = __twr_v278;
    *(uint64_t*)(_mng_prev277) = _mng_next279;
    __twr_v280 = _mng_next279 + __twr_v274;
    *(uint64_t*)(__twr_v280) = _mng_prev277;
    __twr_v281 = 16ULL;
    __twr_v282 = _mng_entry272 + __twr_v281;
    _mng_listentry283 = __twr_v282;
    __twr_v284 = _mng_listentry283 + __twr_v274;
    __twr_v285 = *(uint64_t*)(__twr_v284);
    _mng_prev286 = __twr_v285;
    __twr_v287 = *(uint64_t*)(_mng_listentry283);
    _mng_next288 = __twr_v287;
    *(uint64_t*)(_mng_prev286) = _mng_next288;
    __twr_v289 = _mng_next288 + __twr_v274;
    *(uint64_t*)(__twr_v289) = _mng_prev286;
    __twr_l37:;
    _jkl_epilogue:;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable290, uint64_t _mng_enumfunc291) {
    uint64_t _mng_head292;
    uint64_t __twr_v293;
    uint64_t _mng_listentry294;
    uint64_t __twr_v295;
    uint64_t _mng_nextentry296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t _mng_entry299;
    _mng_head292 = _mng_hashtable290;
    __twr_v293 = *(uint64_t*)(_mng_head292);
    _mng_listentry294 = __twr_v293;
    if (_mng_listentry294 == _mng_head292) { goto __twr_l40; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v295 = *(uint64_t*)(_mng_listentry294);
    _mng_nextentry296 = __twr_v295;
    __twr_v297 = 16ULL;
    __twr_v298 = _mng_listentry294 - __twr_v297;
    _mng_entry299 = __twr_v298;
    ((void (*)(uint64_t))_mng_enumfunc291)(_mng_entry299);
    _mng_listentry294 = _mng_nextentry296;
    __twr_l41:;
    if (_mng_listentry294 != _mng_head292) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t TlHashString(uint64_t _mng_str300) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    _mng_hash301 = 0ULL;
    __twr_v302 = *(uint8_t*)(_mng_str300);
    if (!(__twr_v302)) { goto __twr_l44; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v303 = *(uint8_t*)(_mng_str300);
    __twr_v304 = _mng_hash301 + __twr_v303;
    _mng_hash301 = __twr_v304;
    __twr_v305 = 10ULL;
    __twr_v306 = _mng_hash301 << __twr_v305;
    __twr_v307 = _mng_hash301 + __twr_v306;
    _mng_hash301 = __twr_v307;
    __twr_v308 = 6ULL;
    __twr_v309 = _mng_hash301 >> __twr_v308;
    __twr_v310 = _mng_hash301 ^ __twr_v309;
    _mng_hash301 = __twr_v310;
    __twr_v311 = 1ULL;
    __twr_v312 = _mng_str300 + __twr_v311;
    _mng_str300 = __twr_v312;
    __twr_l45:;
    __twr_v313 = *(uint8_t*)(_mng_str300);
    if (__twr_v313) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v314 = 3ULL;
    __twr_v315 = _mng_hash301 << __twr_v314;
    __twr_v316 = _mng_hash301 + __twr_v315;
    _mng_hash301 = __twr_v316;
    __twr_v317 = 11ULL;
    __twr_v318 = _mng_hash301 >> __twr_v317;
    __twr_v319 = _mng_hash301 ^ __twr_v318;
    _mng_hash301 = __twr_v319;
    __twr_v320 = 15ULL;
    __twr_v321 = _mng_hash301 << __twr_v320;
    __twr_v322 = _mng_hash301 + __twr_v321;
    _mng_hash301 = __twr_v322;
    __twr_v323 = 97ULL;
    __twr_v324 = _mng_hash301 % __twr_v323;
    _mng_hash301 = __twr_v324;
    _jkl_retv = _mng_hash301;
    goto _jkl_epilogue;
    __twr_l42:;
    _jkl_epilogue:;
    return _jkl_retv;
}

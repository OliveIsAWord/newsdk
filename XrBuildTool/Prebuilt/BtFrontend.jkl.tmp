#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str3);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr4, uint64_t _mng_sz5, uint64_t _mng_byte6);
extern void TlCopyMemory(uint64_t _mng_dest7, uint64_t _mng_src8, uint64_t _mng_sz9);
extern void TlPrintString(uint64_t _mng_str10);
extern void TlPrintNumber(uint64_t _mng_num11);
extern void TlPrintHex(uint64_t _mng_num12);
extern void TlPrintCharacter(uint64_t _mng_byte13);
extern void TlInternalError(uint64_t _mng_str14, uint64_t _mng_err115, uint64_t _mng_err216, uint64_t _mng_err317);
extern void TlUserError(uint64_t _mng_str18, uint64_t _mng_err119, uint64_t _mng_err220, uint64_t _mng_err321);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes22, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr24);
extern uint64_t TlCompareString(uint64_t _mng_str125, uint64_t _mng_str226);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str127, uint64_t _mng_str228, uint64_t _mng_count29);
extern void TlCopyString(uint64_t _mng_dest30, uint64_t _mng_src31, uint64_t _mng_bufsize32);
extern uint64_t TlOpenSource(uint64_t _mng_filename33, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle35);
extern uint64_t TlReadFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlWriteFile(uint64_t _mng_handle39, uint64_t _mng_bytes40, uint64_t _mng_buffer41);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable42);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable43);
extern void TlInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entry48, uint64_t _mng_key49);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable50, uint64_t _mng_entrysize51, uint64_t _mng_key52, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable53, uint64_t _mng_key54);
extern void TlRemoveHashTable(uint64_t _mng_entry55);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable56, uint64_t _mng_enumfunc57);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable58, uint64_t _mng_key59, uint64_t _mng_hash60);
extern uint64_t TlHashString(uint64_t _mng_str61);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable62, uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable67);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_name69);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_entry71, uint64_t _mng_name72);
extern void TlRemoveSymbolTable(uint64_t _mng_entry73);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array74);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlInsertDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_byte77);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_srcbuf79, uint64_t _mng_length80);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array81, uint64_t _mng_number82, uint64_t _mng_base83);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array84);
extern uint64_t TlMatchPath(uint64_t _mng_path85, uint64_t _mng_pathset86, uint64_t _mng_resultingpath87, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath88, uint64_t _mng_destpath89);
extern uint64_t TlGetFileName(uint64_t _mng_path90);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path91);
extern uint64_t TlPathExists(uint64_t _mng_path92);
extern uint64_t TlIterateDirectory(uint64_t _mng_path93, uint64_t _mng_callback94, uint64_t _mng_context95);
extern uint64_t TlGetPathExtension(uint64_t _mng_path96);
extern uint64_t TlStatFile(uint64_t _mng_path97, uint64_t _mng_statrecord98);
extern uint64_t TlCreateDirectory(uint64_t _mng_path99);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path100);
extern void TlInitializeZone(uint64_t _mng_zone101, uint64_t _mng_blocksize102);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone103);
extern void TlFreeToZone(uint64_t _mng_zone104, uint64_t _mng_block105);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant106);
extern void TlPunchValue(uint64_t _mng_ptr107, uint64_t _mng_value108, uint64_t _mng_bytes109);
extern uint64_t TlTokenize(uint64_t _mng_buffer110, uint64_t _mng_tokenbuffer111, uint64_t _mng_bufsize112, uint64_t _mng_delimiter113);
extern uint64_t TlStringToNumber(uint64_t _mng_src114, uint64_t _mng_bufsize115, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler116);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine117, uint64_t _mng_arg118, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread119);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex120);
extern void TlReleaseMutex(uint64_t _mng_mutex121);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue122);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore123);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore124);
extern uint64_t TlSystem(uint64_t _mng_cmdline125);
extern uint64_t TlCurrentEpochTime();
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg126);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename127, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock128, uint64_t _mng_filepath129);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope130);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg131);
extern void LexExpandMacro(uint64_t _mng_macro132, uint64_t _mng_token133);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream134, uint64_t _mng_macro135);
extern void LexUninitializeStream(uint64_t _mng_stream136);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream137);
extern void LexPushStream(uint64_t _mng_stream138);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream139, uint64_t _mng_fileblock140, uint64_t _mng_handle141);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock142, uint64_t _mng_handle143);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest144, uint64_t _mng_src145);
extern void LexGetToken(uint64_t _mng_token146);
extern void LexPutbackToken(uint64_t _mng_token147);
extern uint64_t LexMatchToken(uint64_t _mng_token148, uint64_t _mng_type149, uint64_t _mng_subtype150);
extern void LexStreamError(uint64_t _mng_str151, uint64_t _mng_err1152, uint64_t _mng_err2153, uint64_t _mng_err3154);
extern void LexTokenError(uint64_t _mng_token155, uint64_t _mng_str156, uint64_t _mng_err1157, uint64_t _mng_err2158, uint64_t _mng_err3159);
extern uint64_t LexCrunchNumber(uint64_t _mng_token160, uint64_t _mng_buffer161);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath162);
uint64_t FeInputFile[32];
uint64_t FeTargetName[32];
uint64_t FeInputFileHandle;
uint64_t BtBinaryName = 0ULL;
uint64_t BtJobCount = 1ULL;
void BtUsage() {
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    __twr_v163 = (uint64_t)(&TlPrintString);
    __twr_v164 = (uint64_t)(&"Usage: ");
    ((void (*)(uint64_t))__twr_v163)(__twr_v164);
    __twr_v165 = (uint64_t)(&BtBinaryName);
    __twr_v166 = *(uint64_t*)(__twr_v165);
    ((void (*)(uint64_t))__twr_v163)(__twr_v166);
    __twr_v167 = (uint64_t)(&" [configname] [targetname]\n");
    ((void (*)(uint64_t))__twr_v163)(__twr_v167);
    __twr_v168 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v168)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg169) {
    uint64_t _jkl_retv;
    uint64_t _mng_i170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    _mng_i170 = 0ULL;
    __twr_v171 = *(uint8_t*)(_mng_arg169);
    if (!(__twr_v171)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v172 = _mng_arg169 + _mng_i170;
    __twr_v173 = *(uint8_t*)(__twr_v172);
    __twr_v174 = 61ULL;
    if (__twr_v173 != __twr_v174) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v175 = _mng_arg169 + _mng_i170;
    _jkl_retv = __twr_v175;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v176 = 1ULL;
    __twr_v177 = _mng_i170 + __twr_v176;
    _mng_i170 = __twr_v177;
    __twr_l5:;
    __twr_v178 = _mng_arg169 + _mng_i170;
    __twr_v179 = *(uint8_t*)(__twr_v178);
    if (__twr_v179) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v180 = 0ULL;
    _jkl_retv = __twr_v180;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc181, uint64_t _mng_argv182) {
    uint64_t _mng_foundinput183;
    uint64_t _mng_foundtarget184;
    uint64_t _mng_i185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    _mng_foundinput183 = 0ULL;
    _mng_foundtarget184 = 0ULL;
    _mng_i185 = 1ULL;
    if (_mng_argc181 <= _mng_i185) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v186 = (uint64_t)(&FeIsMacroArgument);
    __twr_v187 = 3ULL;
    __twr_v188 = _mng_i185 << __twr_v187;
    __twr_v189 = _mng_argv182 + __twr_v188;
    __twr_v190 = *(uint64_t*)(__twr_v189);
    __twr_v191 = ((uint64_t (*)(uint64_t))__twr_v186)(__twr_v190);
    if (!(__twr_v191)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v192 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v193 = 3ULL;
    __twr_v194 = _mng_i185 << __twr_v193;
    __twr_v195 = _mng_argv182 + __twr_v194;
    __twr_v196 = *(uint64_t*)(__twr_v195);
    ((void (*)(uint64_t))__twr_v192)(__twr_v196);
    goto __twr_l12;
    __twr_l14:;
    if (!(_mng_foundinput183)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    if (!(_mng_foundtarget184)) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v197 = (uint64_t)(&TlPrintString);
    __twr_v198 = (uint64_t)(&"Too many arguments specified!\n");
    ((void (*)(uint64_t))__twr_v197)(__twr_v198);
    __twr_v199 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v199)();
    __twr_l17:;
    __twr_v200 = (uint64_t)(&TlCopyString);
    __twr_v201 = (uint64_t)(&FeTargetName);
    __twr_v202 = 3ULL;
    __twr_v203 = _mng_i185 << __twr_v202;
    __twr_v204 = _mng_argv182 + __twr_v203;
    __twr_v205 = *(uint64_t*)(__twr_v204);
    __twr_v206 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v200)(__twr_v201, __twr_v205, __twr_v206);
    _mng_foundtarget184 = 1ULL;
    goto __twr_l12;
    __twr_l16:;
    _mng_foundinput183 = 1ULL;
    __twr_v207 = (uint64_t)(&TlCopyString);
    __twr_v208 = (uint64_t)(&FeInputFile);
    __twr_v209 = 3ULL;
    __twr_v210 = _mng_i185 << __twr_v209;
    __twr_v211 = _mng_argv182 + __twr_v210;
    __twr_v212 = *(uint64_t*)(__twr_v211);
    __twr_v213 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v207)(__twr_v208, __twr_v212, __twr_v213);
    __twr_l12:;
    __twr_v214 = 1ULL;
    __twr_v215 = _mng_i185 + __twr_v214;
    _mng_i185 = __twr_v215;
    __twr_l11:;
    if (_mng_i185 < _mng_argc181) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput183) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v216 = (uint64_t)(&TlPrintString);
    __twr_v217 = (uint64_t)(&"Error: No config file specified.\n");
    ((void (*)(uint64_t))__twr_v216)(__twr_v217);
    __twr_v218 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v218)();
    __twr_l19:;
    if (_mng_foundtarget184) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v219 = (uint64_t)(&TlPrintString);
    __twr_v220 = (uint64_t)(&"Error: No target name specified.\n");
    ((void (*)(uint64_t))__twr_v219)(__twr_v220);
    __twr_v221 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v221)();
    __twr_l21:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename222, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t _mng_created227;
    uint64_t _mng_fileblock228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    __twr_v223 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v224 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v225 = 560ULL;
    __twr_v226 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v223)(__twr_v224, __twr_v225, _mng_includename222, (uint64_t)(&_mng_created227));
    _mng_fileblock228 = __twr_v226;
    if (!(_mng_created227)) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v229 = (uint64_t)(&TlCopyString);
    __twr_v230 = 304ULL;
    __twr_v231 = _mng_fileblock228 + __twr_v230;
    __twr_v232 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v229)(__twr_v231, _mng_includename222, __twr_v232);
    __twr_v233 = 40ULL;
    __twr_v234 = _mng_fileblock228 + __twr_v233;
    *(uint64_t*)(__twr_v234) = __twr_v231;
    __twr_l24:;
    _jkl_retv = _mng_fileblock228;
    goto _jkl_epilogue;
    __twr_l23:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created227;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock235, uint64_t _mng_filepath236) {
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    __twr_v237 = (uint64_t)(&TlCopyString);
    __twr_v238 = 48ULL;
    __twr_v239 = _mng_fileblock235 + __twr_v238;
    __twr_v240 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v237)(__twr_v239, _mng_filepath236, __twr_v240);
    __twr_l26:;
    _jkl_epilogue:;
}
extern void BtInitializeStatCache();
void FeInitialize(uint64_t _mng_argc241, uint64_t _mng_argv242) {
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t _mng_status252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t _mng_parentpath258[11];
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t _mng_parentlen262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    __twr_v243 = (uint64_t)(&TlInitializeHashTable);
    __twr_v244 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v243)(__twr_v244);
    __twr_v245 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v245)();
    __twr_v246 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v246)(_mng_argc241, _mng_argv242);
    __twr_v247 = (uint64_t)(&TlOpenSource);
    __twr_v248 = (uint64_t)(&FeInputFile);
    __twr_v249 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v247)(__twr_v248, (uint64_t)(&__twr_v250));
    __twr_v251 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v251) = __twr_v250;
    _mng_status252 = __twr_v249;
    if (!(_mng_status252)) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v253 = (uint64_t)(&TlUserError);
    __twr_v254 = (uint64_t)(&"Failed to open the config file.");
    __twr_v255 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v253)(__twr_v254, __twr_v255, __twr_v255, __twr_v255);
    __twr_l28:;
    __twr_v256 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v257 = (uint64_t)(&_mng_parentpath258);
    ((void (*)(uint64_t))__twr_v256)(__twr_v257);
    __twr_v259 = (uint64_t)(&TlCopyParentPath);
    __twr_v260 = (uint64_t)(&FeInputFile);
    ((void (*)(uint64_t, uint64_t))__twr_v259)(__twr_v260, __twr_v257);
    __twr_v261 = *(uint64_t*)(__twr_v257);
    _mng_parentlen262 = __twr_v261;
    if (__twr_v261) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v263 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v264 = (uint64_t)(&_mng_parentpath258);
    __twr_v265 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v263)(__twr_v264, __twr_v265);
    __twr_v266 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v263)(__twr_v264, __twr_v266);
    __twr_l30:;
    __twr_v267 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v268 = (uint64_t)(&_mng_parentpath258);
    __twr_v269 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v267)(__twr_v268, __twr_v269);
    __twr_v270 = (uint64_t)(&TlSwitchDirectory);
    __twr_v271 = 16ULL;
    __twr_v272 = __twr_v268 + __twr_v271;
    __twr_v273 = *(uint64_t*)(__twr_v272);
    __twr_v274 = ((uint64_t (*)(uint64_t))__twr_v270)(__twr_v273);
    if (__twr_v274) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v275 = (uint64_t)(&TlUserError);
    __twr_v276 = (uint64_t)(&"Failed to switch to config file directory");
    __twr_v277 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v275)(__twr_v276, __twr_v277, __twr_v277, __twr_v277);
    __twr_l32:;
    __twr_v278 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v279 = (uint64_t)(&_mng_parentpath258);
    ((void (*)(uint64_t))__twr_v278)(__twr_v279);
    __twr_v280 = (uint64_t)(&TlCopyString);
    __twr_v281 = (uint64_t)(&FeInputFile);
    __twr_v282 = __twr_v281 + _mng_parentlen262;
    __twr_v283 = 18446744073709551615ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v280)(__twr_v281, __twr_v282, __twr_v283);
    __twr_v284 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v284)();
    __twr_v285 = (uint64_t)(&BtInitializeStatCache);
    ((void (*)())__twr_v285)();
    __twr_l27:;
    _jkl_epilogue:;
}
extern void BtParse();
extern void BtBuildDag();
extern void BtLookupConfigMacros();
void TlMain(uint64_t _mng_argc286, uint64_t _mng_argv287) {
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    __twr_v288 = *(uint64_t*)(_mng_argv287);
    __twr_v289 = (uint64_t)(&BtBinaryName);
    *(uint64_t*)(__twr_v289) = __twr_v288;
    __twr_v290 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v290)(_mng_argc286, _mng_argv287);
    __twr_v291 = (uint64_t)(&BtParse);
    ((void (*)())__twr_v291)();
    __twr_v292 = (uint64_t)(&BtLookupConfigMacros);
    ((void (*)())__twr_v292)();
    __twr_v293 = (uint64_t)(&BtBuildDag);
    ((void (*)())__twr_v293)();
    __twr_l34:;
    _jkl_epilogue:;
}

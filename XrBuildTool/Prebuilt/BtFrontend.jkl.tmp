#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg123);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename124, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock125, uint64_t _mng_filepath126);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope127);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg128);
extern void LexExpandMacro(uint64_t _mng_macro129, uint64_t _mng_token130);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream131, uint64_t _mng_macro132);
extern void LexUninitializeStream(uint64_t _mng_stream133);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream134);
extern void LexPushStream(uint64_t _mng_stream135);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream136, uint64_t _mng_fileblock137, uint64_t _mng_handle138);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock139, uint64_t _mng_handle140);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest141, uint64_t _mng_src142);
extern void LexGetToken(uint64_t _mng_token143);
extern void LexPutbackToken(uint64_t _mng_token144);
extern uint64_t LexMatchToken(uint64_t _mng_token145, uint64_t _mng_type146, uint64_t _mng_subtype147);
extern void LexStreamError(uint64_t _mng_str148, uint64_t _mng_err1149, uint64_t _mng_err2150, uint64_t _mng_err3151);
extern void LexTokenError(uint64_t _mng_token152, uint64_t _mng_str153, uint64_t _mng_err1154, uint64_t _mng_err2155, uint64_t _mng_err3156);
extern uint64_t LexCrunchNumber(uint64_t _mng_token157, uint64_t _mng_buffer158);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtStatFile(uint64_t _mng_fullpath159);
uint64_t FeInputFile[32];
uint64_t FeTargetName[32];
uint64_t FeInputFileHandle;
uint64_t BtBinaryName = 0ULL;
uint64_t BtJobCount = 1ULL;
void BtUsage() {
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    __twr_v160 = (uint64_t)(&TlPrintString);
    __twr_v161 = (uint64_t)(&"Usage: ");
    ((void (*)(uint64_t))__twr_v160)(__twr_v161);
    __twr_v162 = (uint64_t)(&BtBinaryName);
    __twr_v163 = *(uint64_t*)(__twr_v162);
    ((void (*)(uint64_t))__twr_v160)(__twr_v163);
    __twr_v164 = (uint64_t)(&" [configname] [targetname]\n");
    ((void (*)(uint64_t))__twr_v160)(__twr_v164);
    __twr_v165 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v165)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg166) {
    uint64_t _jkl_retv;
    uint64_t _mng_i167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    _mng_i167 = 0ULL;
    __twr_v168 = *(uint8_t*)(_mng_arg166);
    if (!(__twr_v168)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v169 = _mng_arg166 + _mng_i167;
    __twr_v170 = *(uint8_t*)(__twr_v169);
    __twr_v171 = 61ULL;
    if (__twr_v170 != __twr_v171) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v172 = _mng_arg166 + _mng_i167;
    _jkl_retv = __twr_v172;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v173 = 1ULL;
    __twr_v174 = _mng_i167 + __twr_v173;
    _mng_i167 = __twr_v174;
    __twr_l5:;
    __twr_v175 = _mng_arg166 + _mng_i167;
    __twr_v176 = *(uint8_t*)(__twr_v175);
    if (__twr_v176) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v177 = 0ULL;
    _jkl_retv = __twr_v177;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc178, uint64_t _mng_argv179) {
    uint64_t _mng_foundinput180;
    uint64_t _mng_foundtarget181;
    uint64_t _mng_i182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    _mng_foundinput180 = 0ULL;
    _mng_foundtarget181 = 0ULL;
    _mng_i182 = 1ULL;
    if (_mng_argc178 <= _mng_i182) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v183 = (uint64_t)(&FeIsMacroArgument);
    __twr_v184 = 3ULL;
    __twr_v185 = _mng_i182 << __twr_v184;
    __twr_v186 = _mng_argv179 + __twr_v185;
    __twr_v187 = *(uint64_t*)(__twr_v186);
    __twr_v188 = ((uint64_t (*)(uint64_t))__twr_v183)(__twr_v187);
    if (!(__twr_v188)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v189 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v190 = 3ULL;
    __twr_v191 = _mng_i182 << __twr_v190;
    __twr_v192 = _mng_argv179 + __twr_v191;
    __twr_v193 = *(uint64_t*)(__twr_v192);
    ((void (*)(uint64_t))__twr_v189)(__twr_v193);
    goto __twr_l12;
    __twr_l14:;
    if (!(_mng_foundinput180)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    if (!(_mng_foundtarget181)) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v194 = (uint64_t)(&TlPrintString);
    __twr_v195 = (uint64_t)(&"Too many arguments specified!\n");
    ((void (*)(uint64_t))__twr_v194)(__twr_v195);
    __twr_v196 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v196)();
    __twr_l17:;
    __twr_v197 = (uint64_t)(&TlCopyString);
    __twr_v198 = (uint64_t)(&FeTargetName);
    __twr_v199 = 3ULL;
    __twr_v200 = _mng_i182 << __twr_v199;
    __twr_v201 = _mng_argv179 + __twr_v200;
    __twr_v202 = *(uint64_t*)(__twr_v201);
    __twr_v203 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v197)(__twr_v198, __twr_v202, __twr_v203);
    _mng_foundtarget181 = 1ULL;
    goto __twr_l12;
    __twr_l16:;
    _mng_foundinput180 = 1ULL;
    __twr_v204 = (uint64_t)(&TlCopyString);
    __twr_v205 = (uint64_t)(&FeInputFile);
    __twr_v206 = 3ULL;
    __twr_v207 = _mng_i182 << __twr_v206;
    __twr_v208 = _mng_argv179 + __twr_v207;
    __twr_v209 = *(uint64_t*)(__twr_v208);
    __twr_v210 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v204)(__twr_v205, __twr_v209, __twr_v210);
    __twr_l12:;
    __twr_v211 = 1ULL;
    __twr_v212 = _mng_i182 + __twr_v211;
    _mng_i182 = __twr_v212;
    __twr_l11:;
    if (_mng_i182 < _mng_argc178) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput180) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v213 = (uint64_t)(&TlPrintString);
    __twr_v214 = (uint64_t)(&"Error: No config file specified.\n");
    ((void (*)(uint64_t))__twr_v213)(__twr_v214);
    __twr_v215 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v215)();
    __twr_l19:;
    if (_mng_foundtarget181) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v216 = (uint64_t)(&TlPrintString);
    __twr_v217 = (uint64_t)(&"Error: No target name specified.\n");
    ((void (*)(uint64_t))__twr_v216)(__twr_v217);
    __twr_v218 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v218)();
    __twr_l21:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename219, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t _mng_created224;
    uint64_t _mng_fileblock225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    __twr_v220 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v221 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v222 = 560ULL;
    __twr_v223 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v220)(__twr_v221, __twr_v222, _mng_includename219, (uint64_t)(&_mng_created224));
    _mng_fileblock225 = __twr_v223;
    if (!(_mng_created224)) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v226 = (uint64_t)(&TlCopyString);
    __twr_v227 = 304ULL;
    __twr_v228 = _mng_fileblock225 + __twr_v227;
    __twr_v229 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v226)(__twr_v228, _mng_includename219, __twr_v229);
    __twr_v230 = 40ULL;
    __twr_v231 = _mng_fileblock225 + __twr_v230;
    *(uint64_t*)(__twr_v231) = __twr_v228;
    __twr_l24:;
    _jkl_retv = _mng_fileblock225;
    goto _jkl_epilogue;
    __twr_l23:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created224;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock232, uint64_t _mng_filepath233) {
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    __twr_v234 = (uint64_t)(&TlCopyString);
    __twr_v235 = 48ULL;
    __twr_v236 = _mng_fileblock232 + __twr_v235;
    __twr_v237 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v234)(__twr_v236, _mng_filepath233, __twr_v237);
    __twr_l26:;
    _jkl_epilogue:;
}
extern void BtInitializeStatCache();
void FeInitialize(uint64_t _mng_argc238, uint64_t _mng_argv239) {
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t _mng_status249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t _mng_parentpath255[11];
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t _mng_parentlen259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    __twr_v240 = (uint64_t)(&TlInitializeHashTable);
    __twr_v241 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v240)(__twr_v241);
    __twr_v242 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v242)();
    __twr_v243 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v243)(_mng_argc238, _mng_argv239);
    __twr_v244 = (uint64_t)(&TlOpenSource);
    __twr_v245 = (uint64_t)(&FeInputFile);
    __twr_v246 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v244)(__twr_v245, (uint64_t)(&__twr_v247));
    __twr_v248 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v248) = __twr_v247;
    _mng_status249 = __twr_v246;
    if (!(_mng_status249)) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v250 = (uint64_t)(&TlUserError);
    __twr_v251 = (uint64_t)(&"Failed to open the config file.");
    __twr_v252 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v250)(__twr_v251, __twr_v252, __twr_v252, __twr_v252);
    __twr_l28:;
    __twr_v253 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v254 = (uint64_t)(&_mng_parentpath255);
    ((void (*)(uint64_t))__twr_v253)(__twr_v254);
    __twr_v256 = (uint64_t)(&TlCopyParentPath);
    __twr_v257 = (uint64_t)(&FeInputFile);
    ((void (*)(uint64_t, uint64_t))__twr_v256)(__twr_v257, __twr_v254);
    __twr_v258 = *(uint64_t*)(__twr_v254);
    _mng_parentlen259 = __twr_v258;
    if (__twr_v258) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v260 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v261 = (uint64_t)(&_mng_parentpath255);
    __twr_v262 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v260)(__twr_v261, __twr_v262);
    __twr_v263 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v260)(__twr_v261, __twr_v263);
    __twr_l30:;
    __twr_v264 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v265 = (uint64_t)(&_mng_parentpath255);
    __twr_v266 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v264)(__twr_v265, __twr_v266);
    __twr_v267 = (uint64_t)(&TlSwitchDirectory);
    __twr_v268 = 16ULL;
    __twr_v269 = __twr_v265 + __twr_v268;
    __twr_v270 = *(uint64_t*)(__twr_v269);
    __twr_v271 = ((uint64_t (*)(uint64_t))__twr_v267)(__twr_v270);
    if (__twr_v271) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v272 = (uint64_t)(&TlUserError);
    __twr_v273 = (uint64_t)(&"Failed to switch to config file directory");
    __twr_v274 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v272)(__twr_v273, __twr_v274, __twr_v274, __twr_v274);
    __twr_l32:;
    __twr_v275 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v276 = (uint64_t)(&_mng_parentpath255);
    ((void (*)(uint64_t))__twr_v275)(__twr_v276);
    __twr_v277 = (uint64_t)(&TlCopyString);
    __twr_v278 = (uint64_t)(&FeInputFile);
    __twr_v279 = __twr_v278 + _mng_parentlen259;
    __twr_v280 = 18446744073709551615ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v277)(__twr_v278, __twr_v279, __twr_v280);
    __twr_v281 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v281)();
    __twr_v282 = (uint64_t)(&BtInitializeStatCache);
    ((void (*)())__twr_v282)();
    __twr_l27:;
    _jkl_epilogue:;
}
extern void BtParse();
extern void BtBuildDag();
extern void BtLookupConfigMacros();
void BtBuild(uint64_t _mng_argc283, uint64_t _mng_argv284) {
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    __twr_v285 = *(uint64_t*)(_mng_argv284);
    __twr_v286 = (uint64_t)(&BtBinaryName);
    *(uint64_t*)(__twr_v286) = __twr_v285;
    __twr_v287 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v287)(_mng_argc283, _mng_argv284);
    __twr_v288 = (uint64_t)(&BtParse);
    ((void (*)())__twr_v288)();
    __twr_v289 = (uint64_t)(&BtLookupConfigMacros);
    ((void (*)())__twr_v289)();
    __twr_v290 = (uint64_t)(&BtBuildDag);
    ((void (*)())__twr_v290)();
    __twr_l34:;
    _jkl_epilogue:;
}

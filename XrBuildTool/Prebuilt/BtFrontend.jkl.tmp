#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg161);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename162, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock163, uint64_t _mng_filepath164);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope165);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg166);
extern void LexExpandMacro(uint64_t _mng_macro167, uint64_t _mng_token168);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream169, uint64_t _mng_macro170);
extern void LexUninitializeStream(uint64_t _mng_stream171);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream172);
extern void LexPushStream(uint64_t _mng_stream173);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream174, uint64_t _mng_fileblock175, uint64_t _mng_handle176);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock177, uint64_t _mng_handle178);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest179, uint64_t _mng_src180);
extern void LexGetToken(uint64_t _mng_token181);
extern void LexPutbackToken(uint64_t _mng_token182);
extern uint64_t LexMatchToken(uint64_t _mng_token183, uint64_t _mng_type184, uint64_t _mng_subtype185);
extern void LexError(uint64_t _mng_token186, uint64_t _mng_fmt187, uint64_t _mng_argv188, uint64_t _mng_argc189);
extern uint64_t LexCrunchNumber(uint64_t _mng_token190, uint64_t _mng_buffer191);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath192);
uint64_t FeInputFile[32];
uint64_t FeTargetName[32];
uint64_t FeInputFileHandle;
uint64_t BtJobCount = 1ULL;
void BtUsage() {
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t _mng_VARTABLE198[1];
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    __twr_v193 = (uint64_t)(&TlPrintByHandle);
    __twr_v194 = (uint64_t)(&TlStdErr);
    __twr_v195 = *(uint64_t*)(__twr_v194);
    __twr_v196 = (uint64_t)(&"Usage: %s [configname] [targetname]\n");
    __twr_v197 = (uint64_t)(&_mng_VARTABLE198);
    __twr_v199 = (uint64_t)(&TlProgramName);
    __twr_v200 = *(uint64_t*)(__twr_v199);
    *(uint64_t*)(__twr_v197) = __twr_v200;
    __twr_v201 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v193)(__twr_v195, __twr_v196, __twr_v197, __twr_v201);
    __twr_v202 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v202)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg203) {
    uint64_t _jkl_retv;
    uint64_t _mng_i204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    _mng_i204 = 0ULL;
    __twr_v205 = *(uint8_t*)(_mng_arg203);
    if (!(__twr_v205)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v206 = _mng_arg203 + _mng_i204;
    __twr_v207 = *(uint8_t*)(__twr_v206);
    __twr_v208 = 61ULL;
    if (__twr_v207 != __twr_v208) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v209 = _mng_arg203 + _mng_i204;
    _jkl_retv = __twr_v209;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v210 = 1ULL;
    __twr_v211 = _mng_i204 + __twr_v210;
    _mng_i204 = __twr_v211;
    __twr_l5:;
    __twr_v212 = _mng_arg203 + _mng_i204;
    __twr_v213 = *(uint8_t*)(__twr_v212);
    if (__twr_v213) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v214 = 0ULL;
    _jkl_retv = __twr_v214;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc215, uint64_t _mng_argv216) {
    uint64_t _mng_foundinput217;
    uint64_t _mng_foundtarget218;
    uint64_t _mng_i219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    _mng_foundinput217 = 0ULL;
    _mng_foundtarget218 = 0ULL;
    _mng_i219 = 1ULL;
    if (_mng_argc215 <= _mng_i219) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v220 = (uint64_t)(&FeIsMacroArgument);
    __twr_v221 = 3ULL;
    __twr_v222 = _mng_i219 << __twr_v221;
    __twr_v223 = _mng_argv216 + __twr_v222;
    __twr_v224 = *(uint64_t*)(__twr_v223);
    __twr_v225 = ((uint64_t (*)(uint64_t))__twr_v220)(__twr_v224);
    if (!(__twr_v225)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v226 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v227 = 3ULL;
    __twr_v228 = _mng_i219 << __twr_v227;
    __twr_v229 = _mng_argv216 + __twr_v228;
    __twr_v230 = *(uint64_t*)(__twr_v229);
    ((void (*)(uint64_t))__twr_v226)(__twr_v230);
    goto __twr_l12;
    __twr_l14:;
    if (!(_mng_foundinput217)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    if (!(_mng_foundtarget218)) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v231 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v231)();
    __twr_l17:;
    __twr_v232 = (uint64_t)(&TlCopyString);
    __twr_v233 = (uint64_t)(&FeTargetName);
    __twr_v234 = 3ULL;
    __twr_v235 = _mng_i219 << __twr_v234;
    __twr_v236 = _mng_argv216 + __twr_v235;
    __twr_v237 = *(uint64_t*)(__twr_v236);
    __twr_v238 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v232)(__twr_v233, __twr_v237, __twr_v238);
    _mng_foundtarget218 = 1ULL;
    goto __twr_l12;
    __twr_l16:;
    _mng_foundinput217 = 1ULL;
    __twr_v239 = (uint64_t)(&TlCopyString);
    __twr_v240 = (uint64_t)(&FeInputFile);
    __twr_v241 = 3ULL;
    __twr_v242 = _mng_i219 << __twr_v241;
    __twr_v243 = _mng_argv216 + __twr_v242;
    __twr_v244 = *(uint64_t*)(__twr_v243);
    __twr_v245 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v239)(__twr_v240, __twr_v244, __twr_v245);
    __twr_l12:;
    __twr_v246 = 1ULL;
    __twr_v247 = _mng_i219 + __twr_v246;
    _mng_i219 = __twr_v247;
    __twr_l11:;
    if (_mng_i219 < _mng_argc215) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput217) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v248 = (uint64_t)(&TlError);
    __twr_v249 = (uint64_t)(&"No config file specified.\n");
    __twr_v250 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v248)(__twr_v249, __twr_v250, __twr_v250);
    __twr_l19:;
    if (_mng_foundtarget218) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v251 = (uint64_t)(&TlError);
    __twr_v252 = (uint64_t)(&"No target name specified.\n");
    __twr_v253 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v251)(__twr_v252, __twr_v253, __twr_v253);
    __twr_l21:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename254, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t _mng_created259;
    uint64_t _mng_fileblock260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    __twr_v255 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v256 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v257 = 560ULL;
    __twr_v258 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v256, __twr_v257, _mng_includename254, (uint64_t)(&_mng_created259));
    _mng_fileblock260 = __twr_v258;
    if (!(_mng_created259)) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v261 = (uint64_t)(&TlCopyString);
    __twr_v262 = 304ULL;
    __twr_v263 = _mng_fileblock260 + __twr_v262;
    __twr_v264 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v261)(__twr_v263, _mng_includename254, __twr_v264);
    __twr_v265 = 40ULL;
    __twr_v266 = _mng_fileblock260 + __twr_v265;
    *(uint64_t*)(__twr_v266) = __twr_v263;
    __twr_l24:;
    _jkl_retv = _mng_fileblock260;
    goto _jkl_epilogue;
    __twr_l23:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created259;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock267, uint64_t _mng_filepath268) {
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    __twr_v269 = (uint64_t)(&TlCopyString);
    __twr_v270 = 48ULL;
    __twr_v271 = _mng_fileblock267 + __twr_v270;
    __twr_v272 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v269)(__twr_v271, _mng_filepath268, __twr_v272);
    __twr_l26:;
    _jkl_epilogue:;
}
extern void BtInitializeStatCache();
void FeInitialize(uint64_t _mng_argc273, uint64_t _mng_argv274) {
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t _mng_status284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t _mng_VARTABLE288[1];
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t _mng_parentpath293[11];
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t _mng_parentlen297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    __twr_v275 = (uint64_t)(&TlInitializeHashTable);
    __twr_v276 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v275)(__twr_v276);
    __twr_v277 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v277)();
    __twr_v278 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v278)(_mng_argc273, _mng_argv274);
    __twr_v279 = (uint64_t)(&TlOpenSource);
    __twr_v280 = (uint64_t)(&FeInputFile);
    __twr_v281 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v279)(__twr_v280, (uint64_t)(&__twr_v282));
    __twr_v283 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v283) = __twr_v282;
    _mng_status284 = __twr_v281;
    if (!(_mng_status284)) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v285 = (uint64_t)(&TlError);
    __twr_v286 = (uint64_t)(&"%s: Failed to open config file\n");
    __twr_v287 = (uint64_t)(&_mng_VARTABLE288);
    __twr_v289 = (uint64_t)(&FeInputFile);
    __twr_v290 = 1ULL;
    *(uint64_t*)(__twr_v287) = __twr_v289;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v286, __twr_v287, __twr_v290);
    __twr_l28:;
    __twr_v291 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v292 = (uint64_t)(&_mng_parentpath293);
    ((void (*)(uint64_t))__twr_v291)(__twr_v292);
    __twr_v294 = (uint64_t)(&TlCopyParentPath);
    __twr_v295 = (uint64_t)(&FeInputFile);
    ((void (*)(uint64_t, uint64_t))__twr_v294)(__twr_v295, __twr_v292);
    __twr_v296 = *(uint64_t*)(__twr_v292);
    _mng_parentlen297 = __twr_v296;
    if (__twr_v296) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v298 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v299 = (uint64_t)(&_mng_parentpath293);
    __twr_v300 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v298)(__twr_v299, __twr_v300);
    __twr_v301 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v298)(__twr_v299, __twr_v301);
    __twr_l30:;
    __twr_v302 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v303 = (uint64_t)(&_mng_parentpath293);
    __twr_v304 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v302)(__twr_v303, __twr_v304);
    __twr_v305 = (uint64_t)(&TlSwitchDirectory);
    __twr_v306 = 16ULL;
    __twr_v307 = __twr_v303 + __twr_v306;
    __twr_v308 = *(uint64_t*)(__twr_v307);
    __twr_v309 = ((uint64_t (*)(uint64_t))__twr_v305)(__twr_v308);
    if (__twr_v309) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v310 = (uint64_t)(&TlError);
    __twr_v311 = (uint64_t)(&"%s: Failed to change directory\n");
    __twr_v312 = (uint64_t)(&_mng_VARTABLE288);
    __twr_v313 = (uint64_t)(&_mng_parentpath293);
    __twr_v314 = 16ULL;
    __twr_v315 = __twr_v313 + __twr_v314;
    __twr_v316 = *(uint64_t*)(__twr_v315);
    *(uint64_t*)(__twr_v312) = __twr_v316;
    __twr_v317 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v310)(__twr_v311, __twr_v312, __twr_v317);
    __twr_l32:;
    __twr_v318 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v319 = (uint64_t)(&_mng_parentpath293);
    ((void (*)(uint64_t))__twr_v318)(__twr_v319);
    __twr_v320 = (uint64_t)(&TlCopyString);
    __twr_v321 = (uint64_t)(&FeInputFile);
    __twr_v322 = __twr_v321 + _mng_parentlen297;
    __twr_v323 = 18446744073709551615ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v320)(__twr_v321, __twr_v322, __twr_v323);
    __twr_v324 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v324)();
    __twr_v325 = (uint64_t)(&BtInitializeStatCache);
    ((void (*)())__twr_v325)();
    __twr_l27:;
    _jkl_epilogue:;
}
extern void BtParse();
extern void BtBuildDag();
extern void BtLookupConfigMacros();
void TlMain(uint64_t _mng_argc326, uint64_t _mng_argv327) {
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    __twr_v328 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v328)(_mng_argc326, _mng_argv327);
    __twr_v329 = (uint64_t)(&BtParse);
    ((void (*)())__twr_v329)();
    __twr_v330 = (uint64_t)(&BtLookupConfigMacros);
    ((void (*)())__twr_v330)();
    __twr_v331 = (uint64_t)(&BtBuildDag);
    ((void (*)())__twr_v331)();
    __twr_l34:;
    _jkl_epilogue:;
}

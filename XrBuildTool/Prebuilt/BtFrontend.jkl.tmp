#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback123, uint64_t _mng_context124, uint64_t _mng_fmt125, uint64_t _mng_argv126, uint64_t _mng_argc127);
extern void TlPrintByCallback(uint64_t _mng_callback128, uint64_t _mng_context129, uint64_t _mng_fmt130, uint64_t _mng_argv131, uint64_t _mng_argc132);
extern void TlPrintByVarTable(uint64_t _mng_handle133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByHandle(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrint(uint64_t _mng_fmt141, uint64_t _mng_argv142, uint64_t _mng_argc143);
extern void TlFormatByVarTable(uint64_t _mng_dest144, uint64_t _mng_bufsize145, uint64_t _mng_fmt146, uint64_t _mng_argv147, uint64_t _mng_argc148);
extern void TlFormat(uint64_t _mng_dest149, uint64_t _mng_bufsize150, uint64_t _mng_fmt151, uint64_t _mng_argv152, uint64_t _mng_argc153);
extern void TlError(uint64_t _mng_fmt154, uint64_t _mng_argv155, uint64_t _mng_argc156);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg157);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename158, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock159, uint64_t _mng_filepath160);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope161);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg162);
extern void LexExpandMacro(uint64_t _mng_macro163, uint64_t _mng_token164);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream165, uint64_t _mng_macro166);
extern void LexUninitializeStream(uint64_t _mng_stream167);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream168);
extern void LexPushStream(uint64_t _mng_stream169);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream170, uint64_t _mng_fileblock171, uint64_t _mng_handle172);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock173, uint64_t _mng_handle174);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest175, uint64_t _mng_src176);
extern void LexGetToken(uint64_t _mng_token177);
extern void LexPutbackToken(uint64_t _mng_token178);
extern uint64_t LexMatchToken(uint64_t _mng_token179, uint64_t _mng_type180, uint64_t _mng_subtype181);
extern void LexError(uint64_t _mng_token182, uint64_t _mng_fmt183, uint64_t _mng_argv184, uint64_t _mng_argc185);
extern uint64_t LexCrunchNumber(uint64_t _mng_token186, uint64_t _mng_buffer187);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath188);
uint64_t FeInputFile[32];
uint64_t FeTargetName[32];
uint64_t FeInputFileHandle;
uint64_t BtJobCount = 1ULL;
void BtUsage() {
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t _mng_VARTABLE194[1];
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    __twr_v189 = (uint64_t)(&TlPrintByHandle);
    __twr_v190 = (uint64_t)(&TlStdErr);
    __twr_v191 = *(uint64_t*)(__twr_v190);
    __twr_v192 = (uint64_t)(&"Usage: %s [configname] [targetname]\n");
    __twr_v193 = (uint64_t)(&_mng_VARTABLE194);
    __twr_v195 = (uint64_t)(&TlProgramName);
    __twr_v196 = *(uint64_t*)(__twr_v195);
    *(uint64_t*)(__twr_v193) = __twr_v196;
    __twr_v197 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v189)(__twr_v191, __twr_v192, __twr_v193, __twr_v197);
    __twr_v198 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v198)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg199) {
    uint64_t _jkl_retv;
    uint64_t _mng_i200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    _mng_i200 = 0ULL;
    __twr_v201 = *(uint8_t*)(_mng_arg199);
    if (!(__twr_v201)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v202 = _mng_arg199 + _mng_i200;
    __twr_v203 = *(uint8_t*)(__twr_v202);
    __twr_v204 = 61ULL;
    if (__twr_v203 != __twr_v204) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v205 = _mng_arg199 + _mng_i200;
    _jkl_retv = __twr_v205;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v206 = 1ULL;
    __twr_v207 = _mng_i200 + __twr_v206;
    _mng_i200 = __twr_v207;
    __twr_l5:;
    __twr_v208 = _mng_arg199 + _mng_i200;
    __twr_v209 = *(uint8_t*)(__twr_v208);
    if (__twr_v209) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v210 = 0ULL;
    _jkl_retv = __twr_v210;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc211, uint64_t _mng_argv212) {
    uint64_t _mng_foundinput213;
    uint64_t _mng_foundtarget214;
    uint64_t _mng_i215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    _mng_foundinput213 = 0ULL;
    _mng_foundtarget214 = 0ULL;
    _mng_i215 = 1ULL;
    if (_mng_argc211 <= _mng_i215) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v216 = (uint64_t)(&FeIsMacroArgument);
    __twr_v217 = 3ULL;
    __twr_v218 = _mng_i215 << __twr_v217;
    __twr_v219 = _mng_argv212 + __twr_v218;
    __twr_v220 = *(uint64_t*)(__twr_v219);
    __twr_v221 = ((uint64_t (*)(uint64_t))__twr_v216)(__twr_v220);
    if (!(__twr_v221)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v222 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v223 = 3ULL;
    __twr_v224 = _mng_i215 << __twr_v223;
    __twr_v225 = _mng_argv212 + __twr_v224;
    __twr_v226 = *(uint64_t*)(__twr_v225);
    ((void (*)(uint64_t))__twr_v222)(__twr_v226);
    goto __twr_l12;
    __twr_l14:;
    if (!(_mng_foundinput213)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    if (!(_mng_foundtarget214)) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v227 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v227)();
    __twr_l17:;
    __twr_v228 = (uint64_t)(&TlCopyString);
    __twr_v229 = (uint64_t)(&FeTargetName);
    __twr_v230 = 3ULL;
    __twr_v231 = _mng_i215 << __twr_v230;
    __twr_v232 = _mng_argv212 + __twr_v231;
    __twr_v233 = *(uint64_t*)(__twr_v232);
    __twr_v234 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v228)(__twr_v229, __twr_v233, __twr_v234);
    _mng_foundtarget214 = 1ULL;
    goto __twr_l12;
    __twr_l16:;
    _mng_foundinput213 = 1ULL;
    __twr_v235 = (uint64_t)(&TlCopyString);
    __twr_v236 = (uint64_t)(&FeInputFile);
    __twr_v237 = 3ULL;
    __twr_v238 = _mng_i215 << __twr_v237;
    __twr_v239 = _mng_argv212 + __twr_v238;
    __twr_v240 = *(uint64_t*)(__twr_v239);
    __twr_v241 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v235)(__twr_v236, __twr_v240, __twr_v241);
    __twr_l12:;
    __twr_v242 = 1ULL;
    __twr_v243 = _mng_i215 + __twr_v242;
    _mng_i215 = __twr_v243;
    __twr_l11:;
    if (_mng_i215 < _mng_argc211) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput213) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v244 = (uint64_t)(&TlError);
    __twr_v245 = (uint64_t)(&"No config file specified.\n");
    __twr_v246 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v244)(__twr_v245, __twr_v246, __twr_v246);
    __twr_l19:;
    if (_mng_foundtarget214) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v247 = (uint64_t)(&TlError);
    __twr_v248 = (uint64_t)(&"No target name specified.\n");
    __twr_v249 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v247)(__twr_v248, __twr_v249, __twr_v249);
    __twr_l21:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename250, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t _mng_created255;
    uint64_t _mng_fileblock256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    __twr_v251 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v252 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v253 = 560ULL;
    __twr_v254 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v251)(__twr_v252, __twr_v253, _mng_includename250, (uint64_t)(&_mng_created255));
    _mng_fileblock256 = __twr_v254;
    if (!(_mng_created255)) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v257 = (uint64_t)(&TlCopyString);
    __twr_v258 = 304ULL;
    __twr_v259 = _mng_fileblock256 + __twr_v258;
    __twr_v260 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v259, _mng_includename250, __twr_v260);
    __twr_v261 = 40ULL;
    __twr_v262 = _mng_fileblock256 + __twr_v261;
    *(uint64_t*)(__twr_v262) = __twr_v259;
    __twr_l24:;
    _jkl_retv = _mng_fileblock256;
    goto _jkl_epilogue;
    __twr_l23:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created255;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock263, uint64_t _mng_filepath264) {
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    __twr_v265 = (uint64_t)(&TlCopyString);
    __twr_v266 = 48ULL;
    __twr_v267 = _mng_fileblock263 + __twr_v266;
    __twr_v268 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v265)(__twr_v267, _mng_filepath264, __twr_v268);
    __twr_l26:;
    _jkl_epilogue:;
}
extern void BtInitializeStatCache();
void FeInitialize(uint64_t _mng_argc269, uint64_t _mng_argv270) {
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t _mng_status280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t _mng_VARTABLE284[1];
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t _mng_parentpath289[11];
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t _mng_parentlen293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    __twr_v271 = (uint64_t)(&TlInitializeHashTable);
    __twr_v272 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v271)(__twr_v272);
    __twr_v273 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v273)();
    __twr_v274 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v274)(_mng_argc269, _mng_argv270);
    __twr_v275 = (uint64_t)(&TlOpenSource);
    __twr_v276 = (uint64_t)(&FeInputFile);
    __twr_v277 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v275)(__twr_v276, (uint64_t)(&__twr_v278));
    __twr_v279 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v279) = __twr_v278;
    _mng_status280 = __twr_v277;
    if (!(_mng_status280)) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v281 = (uint64_t)(&TlError);
    __twr_v282 = (uint64_t)(&"%s: Failed to open config file\n");
    __twr_v283 = (uint64_t)(&_mng_VARTABLE284);
    __twr_v285 = (uint64_t)(&FeInputFile);
    __twr_v286 = 1ULL;
    *(uint64_t*)(__twr_v283) = __twr_v285;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v282, __twr_v283, __twr_v286);
    __twr_l28:;
    __twr_v287 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v288 = (uint64_t)(&_mng_parentpath289);
    ((void (*)(uint64_t))__twr_v287)(__twr_v288);
    __twr_v290 = (uint64_t)(&TlCopyParentPath);
    __twr_v291 = (uint64_t)(&FeInputFile);
    ((void (*)(uint64_t, uint64_t))__twr_v290)(__twr_v291, __twr_v288);
    __twr_v292 = *(uint64_t*)(__twr_v288);
    _mng_parentlen293 = __twr_v292;
    if (__twr_v292) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v294 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v295 = (uint64_t)(&_mng_parentpath289);
    __twr_v296 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v294)(__twr_v295, __twr_v296);
    __twr_v297 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v294)(__twr_v295, __twr_v297);
    __twr_l30:;
    __twr_v298 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v299 = (uint64_t)(&_mng_parentpath289);
    __twr_v300 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v298)(__twr_v299, __twr_v300);
    __twr_v301 = (uint64_t)(&TlSwitchDirectory);
    __twr_v302 = 16ULL;
    __twr_v303 = __twr_v299 + __twr_v302;
    __twr_v304 = *(uint64_t*)(__twr_v303);
    __twr_v305 = ((uint64_t (*)(uint64_t))__twr_v301)(__twr_v304);
    if (__twr_v305) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v306 = (uint64_t)(&TlError);
    __twr_v307 = (uint64_t)(&"%s: Failed to change directory\n");
    __twr_v308 = (uint64_t)(&_mng_VARTABLE284);
    __twr_v309 = (uint64_t)(&_mng_parentpath289);
    __twr_v310 = 16ULL;
    __twr_v311 = __twr_v309 + __twr_v310;
    __twr_v312 = *(uint64_t*)(__twr_v311);
    *(uint64_t*)(__twr_v308) = __twr_v312;
    __twr_v313 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v306)(__twr_v307, __twr_v308, __twr_v313);
    __twr_l32:;
    __twr_v314 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v315 = (uint64_t)(&_mng_parentpath289);
    ((void (*)(uint64_t))__twr_v314)(__twr_v315);
    __twr_v316 = (uint64_t)(&TlCopyString);
    __twr_v317 = (uint64_t)(&FeInputFile);
    __twr_v318 = __twr_v317 + _mng_parentlen293;
    __twr_v319 = 18446744073709551615ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v316)(__twr_v317, __twr_v318, __twr_v319);
    __twr_v320 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v320)();
    __twr_v321 = (uint64_t)(&BtInitializeStatCache);
    ((void (*)())__twr_v321)();
    __twr_l27:;
    _jkl_epilogue:;
}
extern void BtParse();
extern void BtBuildDag();
extern void BtLookupConfigMacros();
void TlMain(uint64_t _mng_argc322, uint64_t _mng_argv323) {
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    __twr_v324 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v324)(_mng_argc322, _mng_argv323);
    __twr_v325 = (uint64_t)(&BtParse);
    ((void (*)())__twr_v325)();
    __twr_v326 = (uint64_t)(&BtLookupConfigMacros);
    ((void (*)())__twr_v326)();
    __twr_v327 = (uint64_t)(&BtBuildDag);
    ((void (*)())__twr_v327)();
    __twr_l34:;
    _jkl_epilogue:;
}

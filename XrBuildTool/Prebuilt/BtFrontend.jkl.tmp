#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintHex(uint64_t _mng_num10);
extern void TlPrintCharacter(uint64_t _mng_byte11);
extern void TlInternalError(uint64_t _mng_str12, uint64_t _mng_err113, uint64_t _mng_err214, uint64_t _mng_err315);
extern void TlUserError(uint64_t _mng_str16, uint64_t _mng_err117, uint64_t _mng_err218, uint64_t _mng_err319);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr22);
extern uint64_t TlCompareString(uint64_t _mng_str123, uint64_t _mng_str224);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str125, uint64_t _mng_str226, uint64_t _mng_count27);
extern void TlCopyString(uint64_t _mng_dest28, uint64_t _mng_src29, uint64_t _mng_bufsize30);
extern uint64_t TlOpenSource(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename32, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle33);
extern uint64_t TlReadFile(uint64_t _mng_handle34, uint64_t _mng_bytes35, uint64_t _mng_buffer36);
extern uint64_t TlWriteFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable40);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable41);
extern void TlInsertHashTable(uint64_t _mng_hashtable42, uint64_t _mng_entry43, uint64_t _mng_key44);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entrysize49, uint64_t _mng_key50, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable51, uint64_t _mng_key52);
extern void TlRemoveHashTable(uint64_t _mng_entry53);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable54, uint64_t _mng_enumfunc55);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable56, uint64_t _mng_key57, uint64_t _mng_hash58);
extern uint64_t TlHashString(uint64_t _mng_str59);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable60, uint64_t _mng_outerscope61, uint64_t _mng_deletefunc62);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable65);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable66, uint64_t _mng_name67);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_entry69, uint64_t _mng_name70);
extern void TlRemoveSymbolTable(uint64_t _mng_entry71);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array73);
extern void TlInsertDynamicBuffer(uint64_t _mng_array74, uint64_t _mng_byte75);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_srcbuf77, uint64_t _mng_length78);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_number80, uint64_t _mng_base81);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array82);
extern uint64_t TlMatchPath(uint64_t _mng_path83, uint64_t _mng_pathset84, uint64_t _mng_resultingpath85, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath86, uint64_t _mng_destpath87);
extern uint64_t TlGetFileName(uint64_t _mng_path88);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path89);
extern uint64_t TlPathExists(uint64_t _mng_path90);
extern uint64_t TlIterateDirectory(uint64_t _mng_path91, uint64_t _mng_callback92, uint64_t _mng_context93);
extern uint64_t TlGetPathExtension(uint64_t _mng_path94);
extern uint64_t TlStatFile(uint64_t _mng_path95, uint64_t _mng_statrecord96);
extern uint64_t TlCreateDirectory(uint64_t _mng_path97);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path98);
extern void TlInitializeZone(uint64_t _mng_zone99, uint64_t _mng_blocksize100);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone101);
extern void TlFreeToZone(uint64_t _mng_zone102, uint64_t _mng_block103);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant104);
extern void TlPunchValue(uint64_t _mng_ptr105, uint64_t _mng_value106, uint64_t _mng_bytes107);
extern uint64_t TlTokenize(uint64_t _mng_buffer108, uint64_t _mng_tokenbuffer109, uint64_t _mng_bufsize110, uint64_t _mng_delimiter111);
extern uint64_t TlStringToNumber(uint64_t _mng_src112, uint64_t _mng_bufsize113, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler114);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine115, uint64_t _mng_arg116, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread117);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex118);
extern void TlReleaseMutex(uint64_t _mng_mutex119);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue120);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore121);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore122);
extern uint64_t TlSystem(uint64_t _mng_cmdline123);
extern uint64_t TlCurrentEpochTime();
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg124);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename125, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock126, uint64_t _mng_filepath127);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope128);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg129);
extern void LexExpandMacro(uint64_t _mng_macro130, uint64_t _mng_token131);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream132, uint64_t _mng_macro133);
extern void LexUninitializeStream(uint64_t _mng_stream134);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream135);
extern void LexPushStream(uint64_t _mng_stream136);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream137, uint64_t _mng_fileblock138, uint64_t _mng_handle139);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock140, uint64_t _mng_handle141);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest142, uint64_t _mng_src143);
extern void LexGetToken(uint64_t _mng_token144);
extern void LexPutbackToken(uint64_t _mng_token145);
extern uint64_t LexMatchToken(uint64_t _mng_token146, uint64_t _mng_type147, uint64_t _mng_subtype148);
extern void LexStreamError(uint64_t _mng_str149, uint64_t _mng_err1150, uint64_t _mng_err2151, uint64_t _mng_err3152);
extern void LexTokenError(uint64_t _mng_token153, uint64_t _mng_str154, uint64_t _mng_err1155, uint64_t _mng_err2156, uint64_t _mng_err3157);
extern uint64_t LexCrunchNumber(uint64_t _mng_token158, uint64_t _mng_buffer159);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtStatFile(uint64_t _mng_fullpath160);
uint64_t FeInputFile[32];
uint64_t FeTargetName[32];
uint64_t FeInputFileHandle;
uint64_t BtBinaryName = 0ULL;
uint64_t BtJobCount = 1ULL;
void BtUsage() {
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    __twr_v161 = (uint64_t)(&TlPrintString);
    __twr_v162 = (uint64_t)(&"Usage: ");
    ((void (*)(uint64_t))__twr_v161)(__twr_v162);
    __twr_v163 = (uint64_t)(&BtBinaryName);
    __twr_v164 = *(uint64_t*)(__twr_v163);
    ((void (*)(uint64_t))__twr_v161)(__twr_v164);
    __twr_v165 = (uint64_t)(&" [configname] [targetname]\n");
    ((void (*)(uint64_t))__twr_v161)(__twr_v165);
    __twr_v166 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v166)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg167) {
    uint64_t _jkl_retv;
    uint64_t _mng_i168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    _mng_i168 = 0ULL;
    __twr_v169 = *(uint8_t*)(_mng_arg167);
    if (!(__twr_v169)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v170 = _mng_arg167 + _mng_i168;
    __twr_v171 = *(uint8_t*)(__twr_v170);
    __twr_v172 = 61ULL;
    if (__twr_v171 != __twr_v172) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v173 = _mng_arg167 + _mng_i168;
    _jkl_retv = __twr_v173;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v174 = 1ULL;
    __twr_v175 = _mng_i168 + __twr_v174;
    _mng_i168 = __twr_v175;
    __twr_l5:;
    __twr_v176 = _mng_arg167 + _mng_i168;
    __twr_v177 = *(uint8_t*)(__twr_v176);
    if (__twr_v177) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v178 = 0ULL;
    _jkl_retv = __twr_v178;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc179, uint64_t _mng_argv180) {
    uint64_t _mng_foundinput181;
    uint64_t _mng_foundtarget182;
    uint64_t _mng_i183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    _mng_foundinput181 = 0ULL;
    _mng_foundtarget182 = 0ULL;
    _mng_i183 = 1ULL;
    if (_mng_argc179 <= _mng_i183) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v184 = (uint64_t)(&FeIsMacroArgument);
    __twr_v185 = 3ULL;
    __twr_v186 = _mng_i183 << __twr_v185;
    __twr_v187 = _mng_argv180 + __twr_v186;
    __twr_v188 = *(uint64_t*)(__twr_v187);
    __twr_v189 = ((uint64_t (*)(uint64_t))__twr_v184)(__twr_v188);
    if (!(__twr_v189)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v190 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v191 = 3ULL;
    __twr_v192 = _mng_i183 << __twr_v191;
    __twr_v193 = _mng_argv180 + __twr_v192;
    __twr_v194 = *(uint64_t*)(__twr_v193);
    ((void (*)(uint64_t))__twr_v190)(__twr_v194);
    goto __twr_l12;
    __twr_l14:;
    if (!(_mng_foundinput181)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    if (!(_mng_foundtarget182)) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v195 = (uint64_t)(&TlPrintString);
    __twr_v196 = (uint64_t)(&"Too many arguments specified!\n");
    ((void (*)(uint64_t))__twr_v195)(__twr_v196);
    __twr_v197 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v197)();
    __twr_l17:;
    __twr_v198 = (uint64_t)(&TlCopyString);
    __twr_v199 = (uint64_t)(&FeTargetName);
    __twr_v200 = 3ULL;
    __twr_v201 = _mng_i183 << __twr_v200;
    __twr_v202 = _mng_argv180 + __twr_v201;
    __twr_v203 = *(uint64_t*)(__twr_v202);
    __twr_v204 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v198)(__twr_v199, __twr_v203, __twr_v204);
    _mng_foundtarget182 = 1ULL;
    goto __twr_l12;
    __twr_l16:;
    _mng_foundinput181 = 1ULL;
    __twr_v205 = (uint64_t)(&TlCopyString);
    __twr_v206 = (uint64_t)(&FeInputFile);
    __twr_v207 = 3ULL;
    __twr_v208 = _mng_i183 << __twr_v207;
    __twr_v209 = _mng_argv180 + __twr_v208;
    __twr_v210 = *(uint64_t*)(__twr_v209);
    __twr_v211 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v205)(__twr_v206, __twr_v210, __twr_v211);
    __twr_l12:;
    __twr_v212 = 1ULL;
    __twr_v213 = _mng_i183 + __twr_v212;
    _mng_i183 = __twr_v213;
    __twr_l11:;
    if (_mng_i183 < _mng_argc179) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput181) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v214 = (uint64_t)(&TlPrintString);
    __twr_v215 = (uint64_t)(&"Error: No config file specified.\n");
    ((void (*)(uint64_t))__twr_v214)(__twr_v215);
    __twr_v216 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v216)();
    __twr_l19:;
    if (_mng_foundtarget182) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v217 = (uint64_t)(&TlPrintString);
    __twr_v218 = (uint64_t)(&"Error: No target name specified.\n");
    ((void (*)(uint64_t))__twr_v217)(__twr_v218);
    __twr_v219 = (uint64_t)(&BtUsage);
    ((void (*)())__twr_v219)();
    __twr_l21:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename220, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t _mng_created225;
    uint64_t _mng_fileblock226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    __twr_v221 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v222 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v223 = 560ULL;
    __twr_v224 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v221)(__twr_v222, __twr_v223, _mng_includename220, (uint64_t)(&_mng_created225));
    _mng_fileblock226 = __twr_v224;
    if (!(_mng_created225)) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v227 = (uint64_t)(&TlCopyString);
    __twr_v228 = 304ULL;
    __twr_v229 = _mng_fileblock226 + __twr_v228;
    __twr_v230 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v227)(__twr_v229, _mng_includename220, __twr_v230);
    __twr_v231 = 40ULL;
    __twr_v232 = _mng_fileblock226 + __twr_v231;
    *(uint64_t*)(__twr_v232) = __twr_v229;
    __twr_l24:;
    _jkl_retv = _mng_fileblock226;
    goto _jkl_epilogue;
    __twr_l23:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created225;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock233, uint64_t _mng_filepath234) {
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    __twr_v235 = (uint64_t)(&TlCopyString);
    __twr_v236 = 48ULL;
    __twr_v237 = _mng_fileblock233 + __twr_v236;
    __twr_v238 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v235)(__twr_v237, _mng_filepath234, __twr_v238);
    __twr_l26:;
    _jkl_epilogue:;
}
extern void BtInitializeStatCache();
void FeInitialize(uint64_t _mng_argc239, uint64_t _mng_argv240) {
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t _mng_status250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t _mng_parentpath256[11];
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t _mng_parentlen260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    __twr_v241 = (uint64_t)(&TlInitializeHashTable);
    __twr_v242 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v241)(__twr_v242);
    __twr_v243 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v243)();
    __twr_v244 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v244)(_mng_argc239, _mng_argv240);
    __twr_v245 = (uint64_t)(&TlOpenSource);
    __twr_v246 = (uint64_t)(&FeInputFile);
    __twr_v247 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v245)(__twr_v246, (uint64_t)(&__twr_v248));
    __twr_v249 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v249) = __twr_v248;
    _mng_status250 = __twr_v247;
    if (!(_mng_status250)) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v251 = (uint64_t)(&TlUserError);
    __twr_v252 = (uint64_t)(&"Failed to open the config file.");
    __twr_v253 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v251)(__twr_v252, __twr_v253, __twr_v253, __twr_v253);
    __twr_l28:;
    __twr_v254 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v255 = (uint64_t)(&_mng_parentpath256);
    ((void (*)(uint64_t))__twr_v254)(__twr_v255);
    __twr_v257 = (uint64_t)(&TlCopyParentPath);
    __twr_v258 = (uint64_t)(&FeInputFile);
    ((void (*)(uint64_t, uint64_t))__twr_v257)(__twr_v258, __twr_v255);
    __twr_v259 = *(uint64_t*)(__twr_v255);
    _mng_parentlen260 = __twr_v259;
    if (__twr_v259) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v261 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v262 = (uint64_t)(&_mng_parentpath256);
    __twr_v263 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v261)(__twr_v262, __twr_v263);
    __twr_v264 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v261)(__twr_v262, __twr_v264);
    __twr_l30:;
    __twr_v265 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v266 = (uint64_t)(&_mng_parentpath256);
    __twr_v267 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v265)(__twr_v266, __twr_v267);
    __twr_v268 = (uint64_t)(&TlSwitchDirectory);
    __twr_v269 = 16ULL;
    __twr_v270 = __twr_v266 + __twr_v269;
    __twr_v271 = *(uint64_t*)(__twr_v270);
    __twr_v272 = ((uint64_t (*)(uint64_t))__twr_v268)(__twr_v271);
    if (__twr_v272) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v273 = (uint64_t)(&TlUserError);
    __twr_v274 = (uint64_t)(&"Failed to switch to config file directory");
    __twr_v275 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v273)(__twr_v274, __twr_v275, __twr_v275, __twr_v275);
    __twr_l32:;
    __twr_v276 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v277 = (uint64_t)(&_mng_parentpath256);
    ((void (*)(uint64_t))__twr_v276)(__twr_v277);
    __twr_v278 = (uint64_t)(&TlCopyString);
    __twr_v279 = (uint64_t)(&FeInputFile);
    __twr_v280 = __twr_v279 + _mng_parentlen260;
    __twr_v281 = 18446744073709551615ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v278)(__twr_v279, __twr_v280, __twr_v281);
    __twr_v282 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v282)();
    __twr_v283 = (uint64_t)(&BtInitializeStatCache);
    ((void (*)())__twr_v283)();
    __twr_l27:;
    _jkl_epilogue:;
}
extern void BtParse();
extern void BtBuildDag();
extern void BtLookupConfigMacros();
void BtBuild(uint64_t _mng_argc284, uint64_t _mng_argv285) {
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    __twr_v286 = *(uint64_t*)(_mng_argv285);
    __twr_v287 = (uint64_t)(&BtBinaryName);
    *(uint64_t*)(__twr_v287) = __twr_v286;
    __twr_v288 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v288)(_mng_argc284, _mng_argv285);
    __twr_v289 = (uint64_t)(&BtParse);
    ((void (*)())__twr_v289)();
    __twr_v290 = (uint64_t)(&BtLookupConfigMacros);
    ((void (*)())__twr_v290)();
    __twr_v291 = (uint64_t)(&BtBuildDag);
    ((void (*)())__twr_v291)();
    __twr_l34:;
    _jkl_epilogue:;
}

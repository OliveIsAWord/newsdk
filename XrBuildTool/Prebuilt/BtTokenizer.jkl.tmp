#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintHex(uint64_t _mng_num10);
extern void TlPrintCharacter(uint64_t _mng_byte11);
extern void TlInternalError(uint64_t _mng_str12, uint64_t _mng_err113, uint64_t _mng_err214, uint64_t _mng_err315);
extern void TlUserError(uint64_t _mng_str16, uint64_t _mng_err117, uint64_t _mng_err218, uint64_t _mng_err319);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr22);
extern uint64_t TlCompareString(uint64_t _mng_str123, uint64_t _mng_str224);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str125, uint64_t _mng_str226, uint64_t _mng_count27);
extern void TlCopyString(uint64_t _mng_dest28, uint64_t _mng_src29, uint64_t _mng_bufsize30);
extern uint64_t TlOpenSource(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename32, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle33);
extern uint64_t TlReadFile(uint64_t _mng_handle34, uint64_t _mng_bytes35, uint64_t _mng_buffer36);
extern uint64_t TlWriteFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable40);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable41);
extern void TlInsertHashTable(uint64_t _mng_hashtable42, uint64_t _mng_entry43, uint64_t _mng_key44);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entrysize49, uint64_t _mng_key50, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable51, uint64_t _mng_key52);
extern void TlRemoveHashTable(uint64_t _mng_entry53);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable54, uint64_t _mng_enumfunc55);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable56, uint64_t _mng_key57, uint64_t _mng_hash58);
extern uint64_t TlHashString(uint64_t _mng_str59);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable60, uint64_t _mng_outerscope61, uint64_t _mng_deletefunc62);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable65);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable66, uint64_t _mng_name67);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_entry69, uint64_t _mng_name70);
extern void TlRemoveSymbolTable(uint64_t _mng_entry71);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array73);
extern void TlInsertDynamicBuffer(uint64_t _mng_array74, uint64_t _mng_byte75);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_srcbuf77, uint64_t _mng_length78);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_number80, uint64_t _mng_base81);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array82);
extern uint64_t TlMatchPath(uint64_t _mng_path83, uint64_t _mng_pathset84, uint64_t _mng_resultingpath85, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath86, uint64_t _mng_destpath87);
extern uint64_t TlGetFileName(uint64_t _mng_path88);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path89);
extern uint64_t TlPathExists(uint64_t _mng_path90);
extern uint64_t TlIterateDirectory(uint64_t _mng_path91, uint64_t _mng_callback92, uint64_t _mng_context93);
extern uint64_t TlGetPathExtension(uint64_t _mng_path94);
extern uint64_t TlStatFile(uint64_t _mng_path95, uint64_t _mng_statrecord96);
extern uint64_t TlCreateDirectory(uint64_t _mng_path97);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path98);
extern void TlInitializeZone(uint64_t _mng_zone99, uint64_t _mng_blocksize100);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone101);
extern void TlFreeToZone(uint64_t _mng_zone102, uint64_t _mng_block103);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant104);
extern void TlPunchValue(uint64_t _mng_ptr105, uint64_t _mng_value106, uint64_t _mng_bytes107);
extern uint64_t TlTokenize(uint64_t _mng_buffer108, uint64_t _mng_tokenbuffer109, uint64_t _mng_bufsize110, uint64_t _mng_delimiter111);
extern uint64_t TlStringToNumber(uint64_t _mng_src112, uint64_t _mng_bufsize113, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler114);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine115, uint64_t _mng_arg116, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread117);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex118);
extern void TlReleaseMutex(uint64_t _mng_mutex119);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue120);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore121);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore122);
extern uint64_t TlSystem(uint64_t _mng_cmdline123);
extern uint64_t TlCurrentEpochTime();
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg124);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename125, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock126, uint64_t _mng_filepath127);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope128);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg129);
extern void LexExpandMacro(uint64_t _mng_macro130, uint64_t _mng_token131);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream132, uint64_t _mng_macro133);
extern void LexUninitializeStream(uint64_t _mng_stream134);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream135);
extern void LexPushStream(uint64_t _mng_stream136);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream137, uint64_t _mng_fileblock138, uint64_t _mng_handle139);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock140, uint64_t _mng_handle141);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest142, uint64_t _mng_src143);
extern void LexGetToken(uint64_t _mng_token144);
extern void LexPutbackToken(uint64_t _mng_token145);
extern uint64_t LexMatchToken(uint64_t _mng_token146, uint64_t _mng_type147, uint64_t _mng_subtype148);
extern void LexStreamError(uint64_t _mng_str149, uint64_t _mng_err1150, uint64_t _mng_err2151, uint64_t _mng_err3152);
extern void LexTokenError(uint64_t _mng_token153, uint64_t _mng_str154, uint64_t _mng_err1155, uint64_t _mng_err2156, uint64_t _mng_err3157);
extern uint64_t LexCrunchNumber(uint64_t _mng_token158, uint64_t _mng_buffer159);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtStatFile(uint64_t _mng_fullpath160);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name161, uint64_t _mng_type162, uint64_t _mng_subtype163, uint64_t _mng_context164) {
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t _mng_keyword171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    __twr_v165 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v166 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v167 = *(uint64_t*)(__twr_v166);
    __twr_v168 = 56ULL;
    __twr_v169 = __twr_v167 * __twr_v168;
    __twr_v170 = __twr_v165 + __twr_v169;
    _mng_keyword171 = __twr_v170;
    __twr_v172 = 1ULL;
    __twr_v173 = __twr_v167 + __twr_v172;
    *(uint64_t*)(__twr_v166) = __twr_v173;
    __twr_v174 = 48ULL;
    __twr_v175 = _mng_keyword171 + __twr_v174;
    *(uint8_t*)(__twr_v175) = _mng_type162;
    __twr_v176 = 49ULL;
    __twr_v177 = _mng_keyword171 + __twr_v176;
    *(uint8_t*)(__twr_v177) = _mng_subtype163;
    __twr_v178 = 50ULL;
    __twr_v179 = _mng_keyword171 + __twr_v178;
    *(uint8_t*)(__twr_v179) = _mng_context164;
    __twr_v180 = (uint64_t)(&TlInsertHashTable);
    __twr_v181 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v180)(__twr_v181, _mng_keyword171, _mng_name161);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t _mng_dumpster187;
    uint64_t _mng_fileblock188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_filestream195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    __twr_v182 = (uint64_t)(&FeCreateFileBlock);
    __twr_v183 = (uint64_t)(&FeInputFile);
    __twr_v184 = 0ULL;
    __twr_v185 = 1ULL;
    __twr_v186 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v182)(__twr_v183, (uint64_t)(&_mng_dumpster187));
    _mng_fileblock188 = __twr_v186;
    __twr_v189 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v189)(_mng_fileblock188, __twr_v183);
    __twr_v190 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v190)();
    __twr_v191 = (uint64_t)(&LexCreateFileStream);
    __twr_v192 = (uint64_t)(&FeInputFileHandle);
    __twr_v193 = *(uint64_t*)(__twr_v192);
    __twr_v194 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v191)(_mng_fileblock188, __twr_v193);
    _mng_filestream195 = __twr_v194;
    __twr_v196 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v196)(_mng_filestream195);
    __twr_v197 = (uint64_t)(&TlInitializeZone);
    __twr_v198 = (uint64_t)(&LexInternedStringZone);
    __twr_v199 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v197)(__twr_v198, __twr_v199);
    __twr_v200 = (uint64_t)(&TlInitializeHashTable);
    __twr_v201 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v200)(__twr_v201);
    __twr_v202 = (uint64_t)(&LexInsertKeyword);
    __twr_v203 = (uint64_t)(&"END");
    __twr_v204 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v203, __twr_v204, __twr_v184, __twr_v184);
    __twr_v205 = (uint64_t)(&"TARGET");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v205, __twr_v185, __twr_v184, __twr_v184);
    __twr_v206 = (uint64_t)(&"FILE");
    __twr_v207 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v206, __twr_v207, __twr_v184, __twr_v184);
    __twr_v208 = (uint64_t)(&"DEPEND");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v208, __twr_v207, __twr_v185, __twr_v184);
    __twr_v209 = (uint64_t)(&"SOURCES");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v209, __twr_v207, __twr_v207, __twr_v184);
    __twr_v210 = (uint64_t)(&"INCDIR");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v210, __twr_v207, __twr_v204, __twr_v184);
    __twr_v211 = (uint64_t)(&"LIBDIR");
    __twr_v212 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v211, __twr_v207, __twr_v212, __twr_v184);
    __twr_v213 = (uint64_t)(&"LINKOPT");
    __twr_v214 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v213, __twr_v207, __twr_v214, __twr_v184);
    __twr_v215 = (uint64_t)(&"JKLOPT");
    __twr_v216 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v215, __twr_v207, __twr_v216, __twr_v184);
    __twr_v217 = (uint64_t)(&"LINK");
    __twr_v218 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v217, __twr_v207, __twr_v218, __twr_v184);
    __twr_v219 = (uint64_t)(&"DYLINK");
    __twr_v220 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v219, __twr_v207, __twr_v220, __twr_v184);
    __twr_v221 = (uint64_t)(&"PREBUILT");
    __twr_v222 = 9ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v221, __twr_v207, __twr_v222, __twr_v184);
    __twr_l2:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t _mng_byte226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t _mng_nextbyte271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    _mng_comment223 = 0ULL;
    __twr_l4:;
    __twr_v224 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v225 = ((uint64_t (*)())__twr_v224)();
    _mng_byte226 = __twr_v225;
    if (_mng_byte226) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    goto __twr_l5;
    __twr_l6:;
    if (!(_mng_comment223)) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v227 = 10ULL;
    if (_mng_byte226 == __twr_v227) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    goto __twr_l4;
    __twr_l11:;
    _mng_comment223 = 0ULL;
    goto __twr_l8;
    __twr_l10:;
    __twr_v228 = (uint64_t)(&LexCurrentStream);
    __twr_v229 = *(uint64_t*)(__twr_v228);
    __twr_v230 = 80ULL;
    __twr_v231 = __twr_v229 + __twr_v230;
    __twr_v232 = *(uint8_t*)(__twr_v231);
    if (!(__twr_v232)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v233 = 0ULL;
    __twr_v234 = (uint64_t)(&LexCurrentStream);
    __twr_v235 = *(uint64_t*)(__twr_v234);
    __twr_v236 = 80ULL;
    __twr_v237 = __twr_v235 + __twr_v236;
    *(uint8_t*)(__twr_v237) = __twr_v233;
    goto __twr_l8;
    __twr_l14:;
    __twr_v238 = 92ULL;
    if (_mng_byte226 != __twr_v238) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v239 = 1ULL;
    __twr_v240 = (uint64_t)(&LexCurrentStream);
    __twr_v241 = *(uint64_t*)(__twr_v240);
    __twr_v242 = 80ULL;
    __twr_v243 = __twr_v241 + __twr_v242;
    *(uint8_t*)(__twr_v243) = __twr_v239;
    goto __twr_l8;
    __twr_l16:;
    __twr_v244 = (uint64_t)(&LexCurrentStream);
    __twr_v245 = *(uint64_t*)(__twr_v244);
    __twr_v246 = 81ULL;
    __twr_v247 = __twr_v245 + __twr_v246;
    __twr_v248 = *(uint8_t*)(__twr_v247);
    if (!(__twr_v248)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v249 = 34ULL;
    __twr_v250 = (_mng_byte226 == __twr_v249);
    __twr_v251 = !__twr_v250;
    __twr_v252 = (uint64_t)(&LexCurrentStream);
    __twr_v253 = *(uint64_t*)(__twr_v252);
    __twr_v254 = 81ULL;
    __twr_v255 = __twr_v253 + __twr_v254;
    *(uint8_t*)(__twr_v255) = __twr_v251;
    goto __twr_l8;
    __twr_l18:;
    __twr_v256 = (uint64_t)(&LexCurrentStream);
    __twr_v257 = *(uint64_t*)(__twr_v256);
    __twr_v258 = 82ULL;
    __twr_v259 = __twr_v257 + __twr_v258;
    __twr_v260 = *(uint8_t*)(__twr_v259);
    if (!(__twr_v260)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v261 = 39ULL;
    __twr_v262 = (_mng_byte226 == __twr_v261);
    __twr_v263 = !__twr_v262;
    __twr_v264 = (uint64_t)(&LexCurrentStream);
    __twr_v265 = *(uint64_t*)(__twr_v264);
    __twr_v266 = 82ULL;
    __twr_v267 = __twr_v265 + __twr_v266;
    *(uint8_t*)(__twr_v267) = __twr_v263;
    goto __twr_l8;
    __twr_l20:;
    __twr_v268 = 47ULL;
    if (_mng_byte226 != __twr_v268) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v269 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v270 = ((uint64_t (*)())__twr_v269)();
    _mng_nextbyte271 = __twr_v270;
    __twr_v272 = 47ULL;
    if (_mng_nextbyte271 != __twr_v272) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    _mng_comment223 = 1ULL;
    goto __twr_l4;
    __twr_l23:;
    __twr_v273 = (uint64_t)(&LexCurrentStream);
    __twr_v274 = *(uint64_t*)(__twr_v273);
    __twr_v275 = 83ULL;
    __twr_v276 = __twr_v274 + __twr_v275;
    *(uint8_t*)(__twr_v276) = _mng_nextbyte271;
    goto __twr_l8;
    __twr_l22:;
    __twr_v277 = 34ULL;
    if (_mng_byte226 != __twr_v277) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v278 = 1ULL;
    __twr_v279 = (uint64_t)(&LexCurrentStream);
    __twr_v280 = *(uint64_t*)(__twr_v279);
    __twr_v281 = 81ULL;
    __twr_v282 = __twr_v280 + __twr_v281;
    *(uint8_t*)(__twr_v282) = __twr_v278;
    goto __twr_l8;
    __twr_l26:;
    __twr_v283 = 39ULL;
    if (_mng_byte226 != __twr_v283) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v284 = 1ULL;
    __twr_v285 = (uint64_t)(&LexCurrentStream);
    __twr_v286 = *(uint64_t*)(__twr_v285);
    __twr_v287 = 82ULL;
    __twr_v288 = __twr_v286 + __twr_v287;
    *(uint8_t*)(__twr_v288) = __twr_v284;
    goto __twr_l8;
    __twr_l28:;
    __twr_v289 = 35ULL;
    if (_mng_byte226 != __twr_v289) { goto __twr_l8; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v290 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v290)();
    _mng_byte226 = 10ULL;
    __twr_l8:;
    __twr_v291 = (uint64_t)(&LexFalseCount);
    __twr_v292 = *(uint32_t*)(__twr_v291);
    if (!(__twr_v292)) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto __twr_l4;
    __twr_l30:;
    goto __twr_l5;
    goto __twr_l4;
    __twr_l5:;
    _jkl_retv = _mng_byte226;
    goto _jkl_epilogue;
    __twr_l3:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token293, uint64_t _mng_terminator294, uint64_t _mng_dynamicbuffer295, uint64_t _mng_buffer296, uint64_t _mng_o_length) {
    uint64_t _mng_len297;
    uint64_t _mng_isbackslash298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t _mng_byte301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t _mng_length323;
    _mng_len297 = 0ULL;
    _mng_isbackslash298 = 0ULL;
    __twr_l33:;
    __twr_v299 = (uint64_t)(&LexGetCharacter);
    __twr_v300 = ((uint64_t (*)())__twr_v299)();
    _mng_byte301 = __twr_v300;
    if (_mng_byte301) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v302 = (uint64_t)(&LexTokenError);
    __twr_v303 = (uint64_t)(&"String token terminated by EOF!");
    __twr_v304 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v302)(_mng_token293, __twr_v303, __twr_v304, __twr_v304, __twr_v304);
    __twr_l35:;
    if (_mng_isbackslash298) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    if (_mng_byte301 != _mng_terminator294) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    goto __twr_l34;
    goto __twr_l40;
    __twr_l42:;
    __twr_v305 = 92ULL;
    if (_mng_byte301 != __twr_v305) { goto __twr_l40; } else { goto __twr_l43; }
    __twr_l43:;
    _mng_isbackslash298 = 1ULL;
    goto __twr_l33;
    __twr_l40:;
    goto __twr_l37;
    __twr_l39:;
    _mng_isbackslash298 = 0ULL;
    __twr_v306 = 110ULL;
    if (_mng_byte301 != __twr_v306) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    _mng_byte301 = 10ULL;
    goto __twr_l44;
    __twr_l46:;
    __twr_v307 = 116ULL;
    if (_mng_byte301 != __twr_v307) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_byte301 = 9ULL;
    goto __twr_l44;
    __twr_l48:;
    __twr_v308 = 114ULL;
    if (_mng_byte301 != __twr_v308) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_byte301 = 13ULL;
    goto __twr_l44;
    __twr_l50:;
    __twr_v309 = 98ULL;
    if (_mng_byte301 != __twr_v309) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_byte301 = 8ULL;
    goto __twr_l44;
    __twr_l52:;
    __twr_v310 = 91ULL;
    if (_mng_byte301 != __twr_v310) { goto __twr_l44; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_byte301 = 27ULL;
    __twr_l44:;
    __twr_l37:;
    if (!(_mng_dynamicbuffer295)) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v311 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v311)(_mng_dynamicbuffer295, _mng_byte301);
    goto __twr_l54;
    __twr_l56:;
    __twr_v312 = 127ULL;
    if (_mng_len297 != __twr_v312) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v313 = (uint64_t)(&LexTokenError);
    __twr_v314 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v315 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v313)(_mng_token293, __twr_v314, __twr_v315, __twr_v315, __twr_v315);
    goto __twr_l54;
    __twr_l58:;
    __twr_v316 = 1ULL;
    __twr_v317 = _mng_buffer296 + _mng_len297;
    *(uint8_t*)(__twr_v317) = _mng_byte301;
    __twr_v318 = _mng_len297 + __twr_v316;
    _mng_len297 = __twr_v318;
    __twr_l54:;
    goto __twr_l33;
    __twr_l34:;
    if (!(_mng_dynamicbuffer295)) { goto __twr_l61; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v319 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v320 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v319)(_mng_dynamicbuffer295, __twr_v320);
    goto __twr_l59;
    __twr_l61:;
    __twr_v321 = 0ULL;
    __twr_v322 = _mng_buffer296 + _mng_len297;
    *(uint8_t*)(__twr_v322) = __twr_v321;
    _mng_length323 = _mng_len297;
    __twr_l59:;
    __twr_l32:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length323;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token324, uint64_t _mng_buffer325) {
    uint64_t _jkl_retv;
    uint64_t _mng_num326;
    uint64_t _mng_i327;
    uint64_t __twr_v328;
    uint64_t _mng_lastnum329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    _mng_num326 = 0ULL;
    _mng_i327 = 0ULL;
    __twr_v328 = *(uint8_t*)(_mng_buffer325);
    if (!(__twr_v328)) { goto __twr_l64; } else { goto __twr_l63; }
    __twr_l63:;
    _mng_lastnum329 = _mng_num326;
    __twr_v330 = 8ULL;
    __twr_v331 = _mng_num326 << __twr_v330;
    _mng_num326 = __twr_v331;
    if (!(_mng_lastnum329)) { goto __twr_l66; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v332 = _mng_num326 / _mng_lastnum329;
    __twr_v333 = 256ULL;
    if (__twr_v332 == __twr_v333) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v334 = (uint64_t)(&LexTokenError);
    __twr_v335 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v336 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v334)(_mng_token324, __twr_v335, __twr_v336, __twr_v336, __twr_v336);
    __twr_l66:;
    __twr_v337 = _mng_buffer325 + _mng_i327;
    __twr_v338 = *(uint8_t*)(__twr_v337);
    __twr_v339 = _mng_num326 + __twr_v338;
    _mng_num326 = __twr_v339;
    if (_mng_num326 >= _mng_lastnum329) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v340 = (uint64_t)(&LexTokenError);
    __twr_v341 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v342 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v340)(_mng_token324, __twr_v341, __twr_v342, __twr_v342, __twr_v342);
    __twr_l69:;
    __twr_v343 = 1ULL;
    __twr_v344 = _mng_i327 + __twr_v343;
    _mng_i327 = __twr_v344;
    __twr_l65:;
    __twr_v345 = _mng_buffer325 + _mng_i327;
    __twr_v346 = *(uint8_t*)(__twr_v345);
    if (__twr_v346) { goto __twr_l63; } else { goto __twr_l64; }
    __twr_l64:;
    _jkl_retv = _mng_num326;
    goto _jkl_epilogue;
    __twr_l62:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token347, uint64_t _mng_buffer348) {
    uint64_t _jkl_retv;
    uint64_t _mng_num349;
    uint64_t _mng_i350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t _mng_lastnum370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t _mng_lastnum433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t _mng_lastnum464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    _mng_num349 = 0ULL;
    _mng_i350 = 0ULL;
    __twr_v351 = *(uint8_t*)(_mng_buffer348);
    __twr_v352 = 48ULL;
    if (__twr_v351 != __twr_v352) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v353 = 1ULL;
    __twr_v354 = _mng_buffer348 + __twr_v353;
    __twr_v355 = *(uint8_t*)(__twr_v354);
    if (__twr_v355) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v356 = 0ULL;
    _jkl_retv = __twr_v356;
    goto _jkl_epilogue;
    __twr_l74:;
    __twr_v357 = 1ULL;
    __twr_v358 = _mng_buffer348 + __twr_v357;
    __twr_v359 = *(uint8_t*)(__twr_v358);
    __twr_v360 = 120ULL;
    if (__twr_v359 != __twr_v360) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v361 = 2ULL;
    __twr_v362 = _mng_buffer348 + __twr_v361;
    __twr_v363 = *(uint8_t*)(__twr_v362);
    if (__twr_v363) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v364 = (uint64_t)(&LexTokenError);
    __twr_v365 = (uint64_t)(&"Unfinished hex number.");
    __twr_v366 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v364)(_mng_token347, __twr_v365, __twr_v366, __twr_v366, __twr_v366);
    __twr_l78:;
    _mng_i350 = 2ULL;
    __twr_v367 = 2ULL;
    __twr_v368 = _mng_buffer348 + __twr_v367;
    __twr_v369 = *(uint8_t*)(__twr_v368);
    if (!(__twr_v369)) { goto __twr_l81; } else { goto __twr_l80; }
    __twr_l80:;
    _mng_lastnum370 = _mng_num349;
    __twr_v371 = 4ULL;
    __twr_v372 = _mng_num349 << __twr_v371;
    _mng_num349 = __twr_v372;
    if (!(_mng_lastnum370)) { goto __twr_l83; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v373 = _mng_num349 / _mng_lastnum370;
    __twr_v374 = 16ULL;
    if (__twr_v373 == __twr_v374) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v375 = (uint64_t)(&LexTokenError);
    __twr_v376 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v377 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v375)(_mng_token347, __twr_v376, __twr_v377, __twr_v377, __twr_v377);
    __twr_l83:;
    __twr_v378 = _mng_buffer348 + _mng_i350;
    __twr_v379 = *(uint8_t*)(__twr_v378);
    __twr_v380 = 48ULL;
    if (__twr_v379 < __twr_v380) { goto __twr_l88; } else { goto __twr_l89; }
    __twr_l89:;
    __twr_v381 = _mng_buffer348 + _mng_i350;
    __twr_v382 = *(uint8_t*)(__twr_v381);
    __twr_v383 = 57ULL;
    if (__twr_v382 > __twr_v383) { goto __twr_l88; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v384 = _mng_buffer348 + _mng_i350;
    __twr_v385 = *(uint8_t*)(__twr_v384);
    __twr_v386 = 48ULL;
    __twr_v387 = __twr_v385 - __twr_v386;
    __twr_v388 = _mng_num349 + __twr_v387;
    _mng_num349 = __twr_v388;
    goto __twr_l86;
    __twr_l88:;
    __twr_v389 = _mng_buffer348 + _mng_i350;
    __twr_v390 = *(uint8_t*)(__twr_v389);
    __twr_v391 = 65ULL;
    if (__twr_v390 < __twr_v391) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v392 = _mng_buffer348 + _mng_i350;
    __twr_v393 = *(uint8_t*)(__twr_v392);
    __twr_v394 = 70ULL;
    if (__twr_v393 > __twr_v394) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    __twr_v395 = _mng_buffer348 + _mng_i350;
    __twr_v396 = *(uint8_t*)(__twr_v395);
    __twr_v397 = 55ULL;
    __twr_v398 = __twr_v396 - __twr_v397;
    __twr_v399 = _mng_num349 + __twr_v398;
    _mng_num349 = __twr_v399;
    goto __twr_l86;
    __twr_l91:;
    __twr_v400 = _mng_buffer348 + _mng_i350;
    __twr_v401 = *(uint8_t*)(__twr_v400);
    __twr_v402 = 97ULL;
    if (__twr_v401 < __twr_v402) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v403 = _mng_buffer348 + _mng_i350;
    __twr_v404 = *(uint8_t*)(__twr_v403);
    __twr_v405 = 102ULL;
    if (__twr_v404 > __twr_v405) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v406 = _mng_buffer348 + _mng_i350;
    __twr_v407 = *(uint8_t*)(__twr_v406);
    __twr_v408 = 87ULL;
    __twr_v409 = __twr_v407 - __twr_v408;
    __twr_v410 = _mng_num349 + __twr_v409;
    _mng_num349 = __twr_v410;
    goto __twr_l86;
    __twr_l94:;
    __twr_v411 = (uint64_t)(&LexTokenError);
    __twr_v412 = (uint64_t)(&"Malformed hex number.");
    __twr_v413 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v411)(_mng_token347, __twr_v412, __twr_v413, __twr_v413, __twr_v413);
    __twr_l86:;
    if (_mng_num349 >= _mng_lastnum370) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v414 = (uint64_t)(&LexTokenError);
    __twr_v415 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v416 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v414)(_mng_token347, __twr_v415, __twr_v416, __twr_v416, __twr_v416);
    __twr_l96:;
    __twr_v417 = 1ULL;
    __twr_v418 = _mng_i350 + __twr_v417;
    _mng_i350 = __twr_v418;
    __twr_l82:;
    __twr_v419 = _mng_buffer348 + _mng_i350;
    __twr_v420 = *(uint8_t*)(__twr_v419);
    if (__twr_v420) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    _jkl_retv = _mng_num349;
    goto _jkl_epilogue;
    __twr_l76:;
    _mng_i350 = 1ULL;
    __twr_v421 = 1ULL;
    __twr_v422 = _mng_buffer348 + __twr_v421;
    __twr_v423 = *(uint8_t*)(__twr_v422);
    if (!(__twr_v423)) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    __twr_v424 = _mng_buffer348 + _mng_i350;
    __twr_v425 = *(uint8_t*)(__twr_v424);
    __twr_v426 = 48ULL;
    if (__twr_v425 < __twr_v426) { goto __twr_l102; } else { goto __twr_l103; }
    __twr_l103:;
    __twr_v427 = _mng_buffer348 + _mng_i350;
    __twr_v428 = *(uint8_t*)(__twr_v427);
    __twr_v429 = 55ULL;
    if (__twr_v428 <= __twr_v429) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v430 = (uint64_t)(&LexTokenError);
    __twr_v431 = (uint64_t)(&"Malformed octal number.");
    __twr_v432 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v430)(_mng_token347, __twr_v431, __twr_v432, __twr_v432, __twr_v432);
    __twr_l101:;
    _mng_lastnum433 = _mng_num349;
    __twr_v434 = 3ULL;
    __twr_v435 = _mng_num349 << __twr_v434;
    _mng_num349 = __twr_v435;
    if (!(_mng_lastnum433)) { goto __twr_l104; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v436 = _mng_num349 / _mng_lastnum433;
    __twr_v437 = 8ULL;
    if (__twr_v436 == __twr_v437) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v438 = (uint64_t)(&LexTokenError);
    __twr_v439 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v440 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v438)(_mng_token347, __twr_v439, __twr_v440, __twr_v440, __twr_v440);
    __twr_l104:;
    __twr_v441 = _mng_buffer348 + _mng_i350;
    __twr_v442 = *(uint8_t*)(__twr_v441);
    __twr_v443 = 48ULL;
    __twr_v444 = __twr_v442 - __twr_v443;
    __twr_v445 = _mng_num349 + __twr_v444;
    _mng_num349 = __twr_v445;
    if (_mng_num349 >= _mng_lastnum433) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v446 = (uint64_t)(&LexTokenError);
    __twr_v447 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v448 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v446)(_mng_token347, __twr_v447, __twr_v448, __twr_v448, __twr_v448);
    __twr_l107:;
    __twr_v449 = 1ULL;
    __twr_v450 = _mng_i350 + __twr_v449;
    _mng_i350 = __twr_v450;
    __twr_l100:;
    __twr_v451 = _mng_buffer348 + _mng_i350;
    __twr_v452 = *(uint8_t*)(__twr_v451);
    if (__twr_v452) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    _jkl_retv = _mng_num349;
    goto _jkl_epilogue;
    __twr_l72:;
    __twr_v453 = _mng_buffer348 + _mng_i350;
    __twr_v454 = *(uint8_t*)(__twr_v453);
    if (!(__twr_v454)) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v455 = _mng_buffer348 + _mng_i350;
    __twr_v456 = *(uint8_t*)(__twr_v455);
    __twr_v457 = 48ULL;
    if (__twr_v456 < __twr_v457) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v458 = _mng_buffer348 + _mng_i350;
    __twr_v459 = *(uint8_t*)(__twr_v458);
    __twr_v460 = 57ULL;
    if (__twr_v459 <= __twr_v460) { goto __twr_l112; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_v461 = (uint64_t)(&LexTokenError);
    __twr_v462 = (uint64_t)(&"Malformed decimal number.");
    __twr_v463 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v461)(_mng_token347, __twr_v462, __twr_v463, __twr_v463, __twr_v463);
    __twr_l112:;
    _mng_lastnum464 = _mng_num349;
    __twr_v465 = 10ULL;
    __twr_v466 = _mng_num349 * __twr_v465;
    _mng_num349 = __twr_v466;
    if (!(_mng_lastnum464)) { goto __twr_l115; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v467 = _mng_num349 / _mng_lastnum464;
    __twr_v468 = 10ULL;
    if (__twr_v467 == __twr_v468) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v469 = (uint64_t)(&LexTokenError);
    __twr_v470 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v471 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v469)(_mng_token347, __twr_v470, __twr_v471, __twr_v471, __twr_v471);
    __twr_l115:;
    __twr_v472 = _mng_buffer348 + _mng_i350;
    __twr_v473 = *(uint8_t*)(__twr_v472);
    __twr_v474 = 48ULL;
    __twr_v475 = __twr_v473 - __twr_v474;
    __twr_v476 = _mng_num349 + __twr_v475;
    _mng_num349 = __twr_v476;
    if (_mng_num349 >= _mng_lastnum464) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v477 = (uint64_t)(&LexTokenError);
    __twr_v478 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v479 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v477)(_mng_token347, __twr_v478, __twr_v479, __twr_v479, __twr_v479);
    __twr_l118:;
    __twr_v480 = 1ULL;
    __twr_v481 = _mng_i350 + __twr_v480;
    _mng_i350 = __twr_v481;
    __twr_l111:;
    __twr_v482 = _mng_buffer348 + _mng_i350;
    __twr_v483 = *(uint8_t*)(__twr_v482);
    if (__twr_v483) { goto __twr_l109; } else { goto __twr_l110; }
    __twr_l110:;
    _jkl_retv = _mng_num349;
    goto _jkl_epilogue;
    __twr_l71:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token484, uint64_t _mng_buffer485, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t _mng_stream489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t _mng_byte506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t _mng_internedstring538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t _mng_dynamicbuffer541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t _mng_dumpster546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t _mng_len565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t _mng_uppercaseonly597;
    uint64_t _mng_len598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t _mng_macro637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    __twr_lLoopOnMacro:;
    _mng_length486 = 0ULL;
    __twr_v487 = (uint64_t)(&LexCurrentStream);
    __twr_v488 = *(uint64_t*)(__twr_v487);
    _mng_stream489 = __twr_v488;
    if (!(_mng_stream489)) { goto __twr_l122; } else { goto __twr_l123; }
    __twr_l123:;
    __twr_v490 = 8ULL;
    __twr_v491 = _mng_stream489 + __twr_v490;
    __twr_v492 = *(uint64_t*)(__twr_v491);
    __twr_v493 = _mng_token484 + __twr_v490;
    *(uint64_t*)(__twr_v493) = __twr_v492;
    __twr_v494 = 44ULL;
    __twr_v495 = _mng_stream489 + __twr_v494;
    __twr_v496 = *(uint32_t*)(__twr_v495);
    __twr_v497 = 16ULL;
    __twr_v498 = _mng_token484 + __twr_v497;
    *(uint32_t*)(__twr_v498) = __twr_v496;
    __twr_v499 = 48ULL;
    __twr_v500 = _mng_stream489 + __twr_v499;
    __twr_v501 = *(uint32_t*)(__twr_v500);
    __twr_v502 = 20ULL;
    __twr_v503 = _mng_token484 + __twr_v502;
    *(uint32_t*)(__twr_v503) = __twr_v501;
    __twr_l122:;
    __twr_v504 = (uint64_t)(&LexGetCharacter);
    __twr_v505 = ((uint64_t (*)())__twr_v504)();
    _mng_byte506 = __twr_v505;
    __twr_v507 = (uint64_t)(&LexCharTreatment);
    __twr_v508 = __twr_v507 + _mng_byte506;
    __twr_v509 = *(uint8_t*)(__twr_v508);
    __twr_v510 = 3ULL;
    if (__twr_v509 != __twr_v510) { goto __twr_l125; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v511 = (uint64_t)(&LexCurrentStream);
    __twr_v512 = *(uint64_t*)(__twr_v511);
    _mng_stream489 = __twr_v512;
    if (!(_mng_stream489)) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v513 = 8ULL;
    __twr_v514 = _mng_stream489 + __twr_v513;
    __twr_v515 = *(uint64_t*)(__twr_v514);
    __twr_v516 = _mng_token484 + __twr_v513;
    *(uint64_t*)(__twr_v516) = __twr_v515;
    __twr_v517 = 44ULL;
    __twr_v518 = _mng_stream489 + __twr_v517;
    __twr_v519 = *(uint32_t*)(__twr_v518);
    __twr_v520 = 16ULL;
    __twr_v521 = _mng_token484 + __twr_v520;
    *(uint32_t*)(__twr_v521) = __twr_v519;
    __twr_v522 = 48ULL;
    __twr_v523 = _mng_stream489 + __twr_v522;
    __twr_v524 = *(uint32_t*)(__twr_v523);
    __twr_v525 = 20ULL;
    __twr_v526 = _mng_token484 + __twr_v525;
    *(uint32_t*)(__twr_v526) = __twr_v524;
    __twr_l127:;
    __twr_v527 = (uint64_t)(&LexGetCharacter);
    __twr_v528 = ((uint64_t (*)())__twr_v527)();
    _mng_byte506 = __twr_v528;
    __twr_l126:;
    __twr_v529 = (uint64_t)(&LexCharTreatment);
    __twr_v530 = __twr_v529 + _mng_byte506;
    __twr_v531 = *(uint8_t*)(__twr_v530);
    __twr_v532 = 3ULL;
    if (__twr_v531 == __twr_v532) { goto __twr_l124; } else { goto __twr_l125; }
    __twr_l125:;
    if (_mng_byte506) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v533 = 0ULL;
    _jkl_retv = __twr_v533;
    goto _jkl_epilogue;
    __twr_l129:;
    __twr_v534 = 34ULL;
    if (_mng_byte506 != __twr_v534) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v535 = (uint64_t)(&TlAllocateFromZone);
    __twr_v536 = (uint64_t)(&LexInternedStringZone);
    __twr_v537 = ((uint64_t (*)(uint64_t))__twr_v535)(__twr_v536);
    _mng_internedstring538 = __twr_v537;
    __twr_v539 = 48ULL;
    __twr_v540 = _mng_internedstring538 + __twr_v539;
    _mng_dynamicbuffer541 = __twr_v540;
    __twr_v542 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v542)(_mng_dynamicbuffer541);
    __twr_v543 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v544 = 34ULL;
    __twr_v545 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v543)(_mng_token484, __twr_v544, _mng_dynamicbuffer541, __twr_v545, (uint64_t)(&_mng_dumpster546));
    __twr_v547 = 4ULL;
    _jkl_retv = __twr_v547;
    goto _jkl_epilogue;
    __twr_l131:;
    __twr_v548 = 39ULL;
    if (_mng_byte506 != __twr_v548) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v549 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v550 = 39ULL;
    __twr_v551 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v549)(_mng_token484, __twr_v550, __twr_v551, _mng_buffer485, (uint64_t)(&_mng_length486));
    __twr_v552 = 8ULL;
    _jkl_retv = __twr_v552;
    goto _jkl_epilogue;
    __twr_l133:;
    __twr_v553 = (uint64_t)(&LexCharTreatment);
    __twr_v554 = 1ULL;
    __twr_v555 = __twr_v553 + _mng_byte506;
    __twr_v556 = *(uint8_t*)(__twr_v555);
    if (__twr_v556 != __twr_v554) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    _mng_length486 = 1ULL;
    __twr_v557 = 0ULL;
    __twr_v558 = 1ULL;
    *(uint8_t*)(_mng_buffer485) = _mng_byte506;
    __twr_v559 = 1ULL;
    __twr_v560 = _mng_buffer485 + __twr_v559;
    *(uint8_t*)(__twr_v560) = __twr_v557;
    _jkl_retv = __twr_v558;
    goto _jkl_epilogue;
    __twr_l135:;
    __twr_v561 = (uint64_t)(&LexCharTreatment);
    __twr_v562 = __twr_v561 + _mng_byte506;
    __twr_v563 = *(uint8_t*)(__twr_v562);
    __twr_v564 = 2ULL;
    if (__twr_v563 != __twr_v564) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    _mng_len565 = 0ULL;
    __twr_v566 = (uint64_t)(&LexCharTreatment);
    __twr_v567 = __twr_v566 + _mng_byte506;
    __twr_v568 = *(uint8_t*)(__twr_v567);
    __twr_v569 = 2ULL;
    if (__twr_v568 != __twr_v569) { goto __twr_l140; } else { goto __twr_l139; }
    __twr_l139:;
    __twr_v570 = 127ULL;
    if (_mng_len565 != __twr_v570) { goto __twr_l142; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v571 = (uint64_t)(&LexTokenError);
    __twr_v572 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v573 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v571)(_mng_token484, __twr_v572, __twr_v573, __twr_v573, __twr_v573);
    __twr_l142:;
    __twr_v574 = 1ULL;
    __twr_v575 = _mng_buffer485 + _mng_len565;
    *(uint8_t*)(__twr_v575) = _mng_byte506;
    __twr_v576 = _mng_len565 + __twr_v574;
    _mng_len565 = __twr_v576;
    __twr_v577 = (uint64_t)(&LexGetCharacter);
    __twr_v578 = ((uint64_t (*)())__twr_v577)();
    _mng_byte506 = __twr_v578;
    __twr_l141:;
    __twr_v579 = (uint64_t)(&LexCharTreatment);
    __twr_v580 = __twr_v579 + _mng_byte506;
    __twr_v581 = *(uint8_t*)(__twr_v580);
    __twr_v582 = 2ULL;
    if (__twr_v581 == __twr_v582) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v583 = 0ULL;
    __twr_v584 = _mng_buffer485 + _mng_len565;
    *(uint8_t*)(__twr_v584) = __twr_v583;
    _mng_length486 = _mng_len565;
    __twr_v585 = (uint64_t)(&LexCharTreatment);
    __twr_v586 = __twr_v585 + _mng_byte506;
    __twr_v587 = *(uint8_t*)(__twr_v586);
    __twr_v588 = 3ULL;
    if (__twr_v587 == __twr_v588) { goto __twr_l144; } else { goto __twr_l145; }
    __twr_l145:;
    __twr_v589 = (uint64_t)(&LexCurrentStream);
    __twr_v590 = *(uint64_t*)(__twr_v589);
    __twr_v591 = 84ULL;
    __twr_v592 = __twr_v590 + __twr_v591;
    *(uint8_t*)(__twr_v592) = _mng_byte506;
    __twr_l144:;
    __twr_v593 = 2ULL;
    _jkl_retv = __twr_v593;
    goto _jkl_epilogue;
    __twr_l137:;
    __twr_v594 = 65ULL;
    if (_mng_byte506 < __twr_v594) { goto __twr_l148; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v595 = 90ULL;
    if (_mng_byte506 > __twr_v595) { goto __twr_l148; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v596 = 1ULL;
    goto __twr_l149;
    __twr_l148:;
    __twr_v596 = 0ULL;
    __twr_l149:;
    _mng_uppercaseonly597 = __twr_v596;
    _mng_len598 = 0ULL;
    __twr_v599 = (uint64_t)(&LexCharTreatment);
    __twr_v600 = __twr_v599 + _mng_byte506;
    __twr_v601 = *(uint8_t*)(__twr_v600);
    if (__twr_v601) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v602 = 127ULL;
    if (_mng_len598 != __twr_v602) { goto __twr_l153; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v603 = (uint64_t)(&LexTokenError);
    __twr_v604 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v605 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v603)(_mng_token484, __twr_v604, __twr_v605, __twr_v605, __twr_v605);
    __twr_l153:;
    if (!(_mng_uppercaseonly597)) { goto __twr_l155; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v606 = 65ULL;
    if (_mng_byte506 < __twr_v606) { goto __twr_l159; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v607 = 90ULL;
    if (_mng_byte506 > __twr_v607) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v608 = 1ULL;
    goto __twr_l160;
    __twr_l159:;
    __twr_v608 = 0ULL;
    __twr_l160:;
    _mng_uppercaseonly597 = __twr_v608;
    __twr_l155:;
    __twr_v609 = 1ULL;
    __twr_v610 = _mng_buffer485 + _mng_len598;
    *(uint8_t*)(__twr_v610) = _mng_byte506;
    __twr_v611 = _mng_len598 + __twr_v609;
    _mng_len598 = __twr_v611;
    __twr_v612 = (uint64_t)(&LexGetCharacter);
    __twr_v613 = ((uint64_t (*)())__twr_v612)();
    _mng_byte506 = __twr_v613;
    __twr_l152:;
    __twr_v614 = (uint64_t)(&LexCharTreatment);
    __twr_v615 = __twr_v614 + _mng_byte506;
    __twr_v616 = *(uint8_t*)(__twr_v615);
    if (!(__twr_v616)) { goto __twr_l150; } else { goto __twr_l151; }
    __twr_l151:;
    __twr_v617 = 0ULL;
    __twr_v618 = _mng_buffer485 + _mng_len598;
    *(uint8_t*)(__twr_v618) = __twr_v617;
    _mng_length486 = _mng_len598;
    __twr_v619 = (uint64_t)(&LexCharTreatment);
    __twr_v620 = 1ULL;
    __twr_v621 = __twr_v619 + _mng_byte506;
    __twr_v622 = *(uint8_t*)(__twr_v621);
    if (__twr_v622 == __twr_v620) { goto __twr_l162; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v623 = (uint64_t)(&LexCharTreatment);
    __twr_v624 = __twr_v623 + _mng_byte506;
    __twr_v625 = *(uint8_t*)(__twr_v624);
    __twr_v626 = 2ULL;
    if (__twr_v625 != __twr_v626) { goto __twr_l161; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v627 = (uint64_t)(&LexCurrentStream);
    __twr_v628 = *(uint64_t*)(__twr_v627);
    __twr_v629 = 84ULL;
    __twr_v630 = __twr_v628 + __twr_v629;
    *(uint8_t*)(__twr_v630) = _mng_byte506;
    __twr_l161:;
    if (!(_mng_uppercaseonly597)) { goto __twr_l164; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v631 = 1ULL;
    if (_mng_len598 <= __twr_v631) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v632 = 16ULL;
    _jkl_retv = __twr_v632;
    goto _jkl_epilogue;
    __twr_l164:;
    __twr_v633 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v634 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v635 = *(uint64_t*)(__twr_v634);
    __twr_v636 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v633)(__twr_v635, _mng_buffer485);
    _mng_macro637 = __twr_v636;
    if (_mng_macro637) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v638 = 0ULL;
    _jkl_retv = __twr_v638;
    goto _jkl_epilogue;
    __twr_l167:;
    __twr_v639 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v639)(_mng_macro637, _mng_token484);
    goto __twr_lLoopOnMacro;
    __twr_l120:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length486;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring538;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token640) {
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t _mng_buffer643[16];
    uint64_t __twr_v644;
    uint64_t _mng_length645;
    uint64_t _mng_internedstring646;
    uint64_t _mng_tokenflag647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t _mng_keyword654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    __twr_v641 = (uint64_t)(&LexGetTokenContents);
    __twr_v642 = (uint64_t)(&_mng_buffer643);
    __twr_v644 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v641)(_mng_token640, __twr_v642, (uint64_t)(&_mng_length645), (uint64_t)(&_mng_internedstring646));
    _mng_tokenflag647 = __twr_v644;
    __twr_v648 = 19ULL;
    __twr_v649 = _mng_tokenflag647 & __twr_v648;
    if (!(__twr_v649)) { goto __twr_l170; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v650 = (uint64_t)(&TlLookupHashTable);
    __twr_v651 = (uint64_t)(&LexKeywordHashTable);
    __twr_v652 = (uint64_t)(&_mng_buffer643);
    __twr_v653 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v650)(__twr_v651, __twr_v652);
    _mng_keyword654 = __twr_v653;
    if (_mng_keyword654) { goto __twr_l172; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v655 = 16ULL;
    __twr_v656 = _mng_tokenflag647 & __twr_v655;
    if (!(__twr_v656)) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    __twr_v657 = (uint64_t)(&LexTokenError);
    __twr_v658 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).");
    __twr_v659 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v657)(_mng_token640, __twr_v658, __twr_v659, __twr_v659, __twr_v659);
    __twr_l174:;
    __twr_v660 = (uint64_t)(&LexTokenError);
    __twr_v661 = (uint64_t)(&"Unknown keyword");
    __twr_v662 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v660)(_mng_token640, __twr_v661, __twr_v662, __twr_v662, __twr_v662);
    __twr_l172:;
    __twr_v663 = 48ULL;
    __twr_v664 = _mng_keyword654 + __twr_v663;
    __twr_v665 = *(uint8_t*)(__twr_v664);
    __twr_v666 = 24ULL;
    __twr_v667 = _mng_token640 + __twr_v666;
    *(uint8_t*)(__twr_v667) = __twr_v665;
    __twr_v668 = 49ULL;
    __twr_v669 = _mng_keyword654 + __twr_v668;
    __twr_v670 = *(uint8_t*)(__twr_v669);
    __twr_v671 = 25ULL;
    __twr_v672 = _mng_token640 + __twr_v671;
    *(uint8_t*)(__twr_v672) = __twr_v670;
    __twr_v673 = 50ULL;
    __twr_v674 = _mng_keyword654 + __twr_v673;
    __twr_v675 = *(uint8_t*)(__twr_v674);
    __twr_v676 = 26ULL;
    __twr_v677 = _mng_token640 + __twr_v676;
    *(uint8_t*)(__twr_v677) = __twr_v675;
    goto _jkl_epilogue;
    __twr_l170:;
    __twr_v678 = 8ULL;
    __twr_v679 = _mng_tokenflag647 & __twr_v678;
    if (!(__twr_v679)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v680 = 5ULL;
    __twr_v681 = 24ULL;
    __twr_v682 = _mng_token640 + __twr_v681;
    *(uint8_t*)(__twr_v682) = __twr_v680;
    __twr_v683 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v684 = (uint64_t)(&_mng_buffer643);
    __twr_v685 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v683)(_mng_token640, __twr_v684);
    *(uint64_t*)(_mng_token640) = __twr_v685;
    goto _jkl_epilogue;
    __twr_l176:;
    __twr_v686 = 4ULL;
    __twr_v687 = _mng_tokenflag647 & __twr_v686;
    if (!(__twr_v687)) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v688 = 4ULL;
    __twr_v689 = 24ULL;
    __twr_v690 = _mng_token640 + __twr_v689;
    *(uint8_t*)(__twr_v690) = __twr_v688;
    *(uint64_t*)(_mng_token640) = _mng_internedstring646;
    goto _jkl_epilogue;
    __twr_l178:;
    __twr_v691 = 32ULL;
    __twr_v692 = _mng_tokenflag647 & __twr_v691;
    if (!(__twr_v692)) { goto __twr_l180; } else { goto __twr_l181; }
    __twr_l181:;
    __twr_v693 = 6ULL;
    __twr_v694 = 24ULL;
    __twr_v695 = _mng_token640 + __twr_v694;
    *(uint8_t*)(__twr_v695) = __twr_v693;
    goto _jkl_epilogue;
    __twr_l180:;
    if (_mng_length645) { goto __twr_l182; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v696 = 6ULL;
    __twr_v697 = 24ULL;
    __twr_v698 = _mng_token640 + __twr_v697;
    *(uint8_t*)(__twr_v698) = __twr_v696;
    goto _jkl_epilogue;
    __twr_l182:;
    __twr_v699 = (uint64_t)(&_mng_buffer643);
    __twr_v700 = *(uint8_t*)(__twr_v699);
    __twr_v701 = 48ULL;
    if (__twr_v700 < __twr_v701) { goto __twr_l184; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v702 = (uint64_t)(&_mng_buffer643);
    __twr_v703 = *(uint8_t*)(__twr_v702);
    __twr_v704 = 57ULL;
    if (__twr_v703 > __twr_v704) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v705 = 5ULL;
    __twr_v706 = 24ULL;
    __twr_v707 = _mng_token640 + __twr_v706;
    *(uint8_t*)(__twr_v707) = __twr_v705;
    __twr_v708 = (uint64_t)(&LexCrunchNumber);
    __twr_v709 = (uint64_t)(&_mng_buffer643);
    __twr_v710 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v708)(_mng_token640, __twr_v709);
    *(uint64_t*)(_mng_token640) = __twr_v710;
    goto _jkl_epilogue;
    __twr_l184:;
    __twr_v711 = (uint64_t)(&LexTokenError);
    __twr_v712 = (uint64_t)(&"Unknown token");
    __twr_v713 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v711)(_mng_token640, __twr_v712, __twr_v713, __twr_v713, __twr_v713);
    __twr_l169:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest714, uint64_t _mng_src715) {
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    __twr_v716 = *(uint64_t*)(_mng_src715);
    *(uint64_t*)(_mng_dest714) = __twr_v716;
    __twr_v717 = 8ULL;
    __twr_v718 = _mng_src715 + __twr_v717;
    __twr_v719 = *(uint64_t*)(__twr_v718);
    __twr_v720 = _mng_dest714 + __twr_v717;
    *(uint64_t*)(__twr_v720) = __twr_v719;
    __twr_v721 = 16ULL;
    __twr_v722 = _mng_src715 + __twr_v721;
    __twr_v723 = *(uint32_t*)(__twr_v722);
    __twr_v724 = _mng_dest714 + __twr_v721;
    *(uint32_t*)(__twr_v724) = __twr_v723;
    __twr_v725 = 20ULL;
    __twr_v726 = _mng_src715 + __twr_v725;
    __twr_v727 = *(uint32_t*)(__twr_v726);
    __twr_v728 = _mng_dest714 + __twr_v725;
    *(uint32_t*)(__twr_v728) = __twr_v727;
    __twr_v729 = 24ULL;
    __twr_v730 = _mng_src715 + __twr_v729;
    __twr_v731 = *(uint8_t*)(__twr_v730);
    __twr_v732 = _mng_dest714 + __twr_v729;
    *(uint8_t*)(__twr_v732) = __twr_v731;
    __twr_v733 = 25ULL;
    __twr_v734 = _mng_src715 + __twr_v733;
    __twr_v735 = *(uint8_t*)(__twr_v734);
    __twr_v736 = _mng_dest714 + __twr_v733;
    *(uint8_t*)(__twr_v736) = __twr_v735;
    __twr_v737 = 26ULL;
    __twr_v738 = _mng_src715 + __twr_v737;
    __twr_v739 = *(uint8_t*)(__twr_v738);
    __twr_v740 = _mng_dest714 + __twr_v737;
    *(uint8_t*)(__twr_v740) = __twr_v739;
    __twr_l187:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token741) {
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t _mng_index744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    __twr_v742 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v743 = *(uint32_t*)(__twr_v742);
    _mng_index744 = __twr_v743;
    if (!(_mng_index744)) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v745 = (uint64_t)(&LexCopyToken);
    __twr_v746 = (uint64_t)(&LexPutbackStack);
    __twr_v747 = 1ULL;
    __twr_v748 = _mng_index744 - __twr_v747;
    __twr_v749 = 5ULL;
    __twr_v750 = __twr_v748 << __twr_v749;
    __twr_v751 = __twr_v746 + __twr_v750;
    ((void (*)(uint64_t, uint64_t))__twr_v745)(_mng_token741, __twr_v751);
    __twr_v752 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v752) = __twr_v748;
    goto _jkl_epilogue;
    __twr_l189:;
    __twr_v753 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v753)(_mng_token741);
    __twr_l188:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token754) {
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t _mng_index757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    __twr_v755 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v756 = *(uint32_t*)(__twr_v755);
    _mng_index757 = __twr_v756;
    __twr_v758 = 256ULL;
    if (_mng_index757 != __twr_v758) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v759 = (uint64_t)(&TlInternalError);
    __twr_v760 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v761 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v759)(__twr_v760, __twr_v761, __twr_v761, __twr_v761);
    __twr_l192:;
    __twr_v762 = (uint64_t)(&LexCopyToken);
    __twr_v763 = (uint64_t)(&LexPutbackStack);
    __twr_v764 = 5ULL;
    __twr_v765 = _mng_index757 << __twr_v764;
    __twr_v766 = __twr_v763 + __twr_v765;
    ((void (*)(uint64_t, uint64_t))__twr_v762)(__twr_v766, _mng_token754);
    __twr_v767 = 1ULL;
    __twr_v768 = _mng_index757 + __twr_v767;
    __twr_v769 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v769) = __twr_v768;
    __twr_l191:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token770, uint64_t _mng_type771, uint64_t _mng_subtype772) {
    uint64_t _jkl_retv;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t _mng_index775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t _mng_matchtoken786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    __twr_v773 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v774 = *(uint32_t*)(__twr_v773);
    _mng_index775 = __twr_v774;
    if (_mng_index775) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    __twr_v776 = (uint64_t)(&LexNextToken);
    __twr_v777 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v776)(__twr_v777);
    __twr_v778 = 1ULL;
    __twr_v779 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v779) = __twr_v778;
    _mng_index775 = 1ULL;
    __twr_l195:;
    __twr_v780 = (uint64_t)(&LexPutbackStack);
    __twr_v781 = 1ULL;
    __twr_v782 = _mng_index775 - __twr_v781;
    __twr_v783 = 5ULL;
    __twr_v784 = __twr_v782 << __twr_v783;
    __twr_v785 = __twr_v780 + __twr_v784;
    _mng_matchtoken786 = __twr_v785;
    if (!(_mng_token770)) { goto __twr_l197; } else { goto __twr_l198; }
    __twr_l198:;
    __twr_v787 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v787)(_mng_token770, _mng_matchtoken786);
    __twr_l197:;
    __twr_v788 = 24ULL;
    __twr_v789 = _mng_matchtoken786 + __twr_v788;
    __twr_v790 = *(uint8_t*)(__twr_v789);
    if (__twr_v790 == _mng_type771) { goto __twr_l199; } else { goto __twr_l200; }
    __twr_l200:;
    __twr_v791 = 24ULL;
    __twr_v792 = _mng_matchtoken786 + __twr_v791;
    __twr_v793 = *(uint8_t*)(__twr_v792);
    __twr_v794 = 6ULL;
    if (__twr_v793 != __twr_v794) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v795 = 1ULL;
    __twr_v796 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v797 = *(uint32_t*)(__twr_v796);
    __twr_v798 = __twr_v797 - __twr_v795;
    *(uint32_t*)(__twr_v796) = __twr_v798;
    __twr_l201:;
    __twr_v799 = 0ULL;
    _jkl_retv = __twr_v799;
    goto _jkl_epilogue;
    __twr_l199:;
    if (!(_mng_subtype772)) { goto __twr_l204; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v800 = 25ULL;
    __twr_v801 = _mng_matchtoken786 + __twr_v800;
    __twr_v802 = *(uint8_t*)(__twr_v801);
    if (__twr_v802 != _mng_subtype772) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v803 = 1ULL;
    __twr_v804 = _mng_index775 - __twr_v803;
    __twr_v805 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v805) = __twr_v804;
    _jkl_retv = __twr_v803;
    goto _jkl_epilogue;
    __twr_l203:;
    __twr_v806 = 0ULL;
    _jkl_retv = __twr_v806;
    goto _jkl_epilogue;
    __twr_l194:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback123, uint64_t _mng_context124, uint64_t _mng_fmt125, uint64_t _mng_argv126, uint64_t _mng_argc127);
extern void TlPrintByCallback(uint64_t _mng_callback128, uint64_t _mng_context129, uint64_t _mng_fmt130, uint64_t _mng_argv131, uint64_t _mng_argc132);
extern void TlPrintByVarTable(uint64_t _mng_handle133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByHandle(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrint(uint64_t _mng_fmt141, uint64_t _mng_argv142, uint64_t _mng_argc143);
extern void TlFormatByVarTable(uint64_t _mng_dest144, uint64_t _mng_bufsize145, uint64_t _mng_fmt146, uint64_t _mng_argv147, uint64_t _mng_argc148);
extern void TlFormat(uint64_t _mng_dest149, uint64_t _mng_bufsize150, uint64_t _mng_fmt151, uint64_t _mng_argv152, uint64_t _mng_argc153);
extern void TlError(uint64_t _mng_fmt154, uint64_t _mng_argv155, uint64_t _mng_argc156);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg157);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename158, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock159, uint64_t _mng_filepath160);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope161);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg162);
extern void LexExpandMacro(uint64_t _mng_macro163, uint64_t _mng_token164);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream165, uint64_t _mng_macro166);
extern void LexUninitializeStream(uint64_t _mng_stream167);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream168);
extern void LexPushStream(uint64_t _mng_stream169);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream170, uint64_t _mng_fileblock171, uint64_t _mng_handle172);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock173, uint64_t _mng_handle174);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest175, uint64_t _mng_src176);
extern void LexGetToken(uint64_t _mng_token177);
extern void LexPutbackToken(uint64_t _mng_token178);
extern uint64_t LexMatchToken(uint64_t _mng_token179, uint64_t _mng_type180, uint64_t _mng_subtype181);
extern void LexError(uint64_t _mng_token182, uint64_t _mng_fmt183, uint64_t _mng_argv184, uint64_t _mng_argc185);
extern uint64_t LexCrunchNumber(uint64_t _mng_token186, uint64_t _mng_buffer187);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath188);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name189, uint64_t _mng_type190, uint64_t _mng_subtype191, uint64_t _mng_context192) {
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t _mng_keyword199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    __twr_v193 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v194 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v195 = *(uint64_t*)(__twr_v194);
    __twr_v196 = 56ULL;
    __twr_v197 = __twr_v195 * __twr_v196;
    __twr_v198 = __twr_v193 + __twr_v197;
    _mng_keyword199 = __twr_v198;
    __twr_v200 = 1ULL;
    __twr_v201 = __twr_v195 + __twr_v200;
    *(uint64_t*)(__twr_v194) = __twr_v201;
    __twr_v202 = 48ULL;
    __twr_v203 = _mng_keyword199 + __twr_v202;
    *(uint8_t*)(__twr_v203) = _mng_type190;
    __twr_v204 = 49ULL;
    __twr_v205 = _mng_keyword199 + __twr_v204;
    *(uint8_t*)(__twr_v205) = _mng_subtype191;
    __twr_v206 = 50ULL;
    __twr_v207 = _mng_keyword199 + __twr_v206;
    *(uint8_t*)(__twr_v207) = _mng_context192;
    __twr_v208 = (uint64_t)(&TlInsertHashTable);
    __twr_v209 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v208)(__twr_v209, _mng_keyword199, _mng_name189);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexError(uint64_t _mng_token210, uint64_t _mng_fmt211, uint64_t _mng_argv212, uint64_t _mng_argc213) {
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t _mng_VARTABLE219[3];
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t _mng_stream236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    if (!(_mng_token210)) { goto __twr_l5; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v214 = (uint64_t)(&TlPrintByHandle);
    __twr_v215 = (uint64_t)(&TlStdErr);
    __twr_v216 = *(uint64_t*)(__twr_v215);
    __twr_v217 = (uint64_t)(&"%s:%d:%d: ");
    __twr_v218 = (uint64_t)(&_mng_VARTABLE219);
    __twr_v220 = 8ULL;
    __twr_v221 = _mng_token210 + __twr_v220;
    __twr_v222 = *(uint64_t*)(__twr_v221);
    __twr_v223 = 304ULL;
    __twr_v224 = __twr_v222 + __twr_v223;
    *(uint64_t*)(__twr_v218) = __twr_v224;
    __twr_v225 = 16ULL;
    __twr_v226 = _mng_token210 + __twr_v225;
    __twr_v227 = *(uint32_t*)(__twr_v226);
    __twr_v228 = __twr_v218 + __twr_v220;
    *(uint64_t*)(__twr_v228) = __twr_v227;
    __twr_v229 = 20ULL;
    __twr_v230 = _mng_token210 + __twr_v229;
    __twr_v231 = *(uint32_t*)(__twr_v230);
    __twr_v232 = __twr_v218 + __twr_v225;
    *(uint64_t*)(__twr_v232) = __twr_v231;
    __twr_v233 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v214)(__twr_v216, __twr_v217, __twr_v218, __twr_v233);
    goto __twr_l3;
    __twr_l5:;
    __twr_v234 = (uint64_t)(&LexCurrentStream);
    __twr_v235 = *(uint64_t*)(__twr_v234);
    _mng_stream236 = __twr_v235;
    __twr_v237 = (uint64_t)(&TlPrintByHandle);
    __twr_v238 = (uint64_t)(&TlStdErr);
    __twr_v239 = *(uint64_t*)(__twr_v238);
    __twr_v240 = (uint64_t)(&"%s:%d:%d: ");
    __twr_v241 = (uint64_t)(&_mng_VARTABLE219);
    __twr_v242 = 8ULL;
    __twr_v243 = _mng_stream236 + __twr_v242;
    __twr_v244 = *(uint64_t*)(__twr_v243);
    __twr_v245 = 304ULL;
    __twr_v246 = __twr_v244 + __twr_v245;
    *(uint64_t*)(__twr_v241) = __twr_v246;
    __twr_v247 = 44ULL;
    __twr_v248 = _mng_stream236 + __twr_v247;
    __twr_v249 = *(uint32_t*)(__twr_v248);
    __twr_v250 = __twr_v241 + __twr_v242;
    *(uint64_t*)(__twr_v250) = __twr_v249;
    __twr_v251 = 48ULL;
    __twr_v252 = _mng_stream236 + __twr_v251;
    __twr_v253 = *(uint32_t*)(__twr_v252);
    __twr_v254 = 16ULL;
    __twr_v255 = __twr_v241 + __twr_v254;
    *(uint64_t*)(__twr_v255) = __twr_v253;
    __twr_v256 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v237)(__twr_v239, __twr_v240, __twr_v241, __twr_v256);
    __twr_l3:;
    __twr_v257 = (uint64_t)(&TlPrintByVarTable);
    __twr_v258 = (uint64_t)(&TlStdErr);
    __twr_v259 = *(uint64_t*)(__twr_v258);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v259, _mng_fmt211, _mng_argv212, _mng_argc213);
    __twr_v260 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v260)();
    __twr_l2:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t _mng_dumpster266;
    uint64_t _mng_fileblock267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t _mng_filestream274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    __twr_v261 = (uint64_t)(&FeCreateFileBlock);
    __twr_v262 = (uint64_t)(&FeInputFile);
    __twr_v263 = 0ULL;
    __twr_v264 = 1ULL;
    __twr_v265 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v261)(__twr_v262, (uint64_t)(&_mng_dumpster266));
    _mng_fileblock267 = __twr_v265;
    __twr_v268 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v268)(_mng_fileblock267, __twr_v262);
    __twr_v269 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v269)();
    __twr_v270 = (uint64_t)(&LexCreateFileStream);
    __twr_v271 = (uint64_t)(&FeInputFileHandle);
    __twr_v272 = *(uint64_t*)(__twr_v271);
    __twr_v273 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v270)(_mng_fileblock267, __twr_v272);
    _mng_filestream274 = __twr_v273;
    __twr_v275 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v275)(_mng_filestream274);
    __twr_v276 = (uint64_t)(&TlInitializeZone);
    __twr_v277 = (uint64_t)(&LexInternedStringZone);
    __twr_v278 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v276)(__twr_v277, __twr_v278);
    __twr_v279 = (uint64_t)(&TlInitializeHashTable);
    __twr_v280 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v279)(__twr_v280);
    __twr_v281 = (uint64_t)(&LexInsertKeyword);
    __twr_v282 = (uint64_t)(&"END");
    __twr_v283 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v282, __twr_v283, __twr_v263, __twr_v263);
    __twr_v284 = (uint64_t)(&"TARGET");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v284, __twr_v264, __twr_v263, __twr_v263);
    __twr_v285 = (uint64_t)(&"FILE");
    __twr_v286 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v285, __twr_v286, __twr_v263, __twr_v263);
    __twr_v287 = (uint64_t)(&"DEPEND");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v287, __twr_v286, __twr_v264, __twr_v263);
    __twr_v288 = (uint64_t)(&"SOURCES");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v288, __twr_v286, __twr_v286, __twr_v263);
    __twr_v289 = (uint64_t)(&"INCDIR");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v289, __twr_v286, __twr_v283, __twr_v263);
    __twr_v290 = (uint64_t)(&"LIBDIR");
    __twr_v291 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v290, __twr_v286, __twr_v291, __twr_v263);
    __twr_v292 = (uint64_t)(&"LINKOPT");
    __twr_v293 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v292, __twr_v286, __twr_v293, __twr_v263);
    __twr_v294 = (uint64_t)(&"JKLOPT");
    __twr_v295 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v294, __twr_v286, __twr_v295, __twr_v263);
    __twr_v296 = (uint64_t)(&"LINK");
    __twr_v297 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v296, __twr_v286, __twr_v297, __twr_v263);
    __twr_v298 = (uint64_t)(&"DYLINK");
    __twr_v299 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v298, __twr_v286, __twr_v299, __twr_v263);
    __twr_v300 = (uint64_t)(&"PREBUILT");
    __twr_v301 = 9ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v300, __twr_v286, __twr_v301, __twr_v263);
    __twr_v302 = (uint64_t)(&"OBJECTS");
    __twr_v303 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v302, __twr_v286, __twr_v303, __twr_v263);
    __twr_l6:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t _mng_byte307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t _mng_nextbyte352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    _mng_comment304 = 0ULL;
    __twr_l8:;
    __twr_v305 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v306 = ((uint64_t (*)())__twr_v305)();
    _mng_byte307 = __twr_v306;
    if (_mng_byte307) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    goto __twr_l9;
    __twr_l10:;
    if (!(_mng_comment304)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v308 = 10ULL;
    if (_mng_byte307 == __twr_v308) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    goto __twr_l8;
    __twr_l15:;
    _mng_comment304 = 0ULL;
    goto __twr_l12;
    __twr_l14:;
    __twr_v309 = (uint64_t)(&LexCurrentStream);
    __twr_v310 = *(uint64_t*)(__twr_v309);
    __twr_v311 = 80ULL;
    __twr_v312 = __twr_v310 + __twr_v311;
    __twr_v313 = *(uint8_t*)(__twr_v312);
    if (!(__twr_v313)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v314 = 0ULL;
    __twr_v315 = (uint64_t)(&LexCurrentStream);
    __twr_v316 = *(uint64_t*)(__twr_v315);
    __twr_v317 = 80ULL;
    __twr_v318 = __twr_v316 + __twr_v317;
    *(uint8_t*)(__twr_v318) = __twr_v314;
    goto __twr_l12;
    __twr_l18:;
    __twr_v319 = 92ULL;
    if (_mng_byte307 != __twr_v319) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v320 = 1ULL;
    __twr_v321 = (uint64_t)(&LexCurrentStream);
    __twr_v322 = *(uint64_t*)(__twr_v321);
    __twr_v323 = 80ULL;
    __twr_v324 = __twr_v322 + __twr_v323;
    *(uint8_t*)(__twr_v324) = __twr_v320;
    goto __twr_l12;
    __twr_l20:;
    __twr_v325 = (uint64_t)(&LexCurrentStream);
    __twr_v326 = *(uint64_t*)(__twr_v325);
    __twr_v327 = 81ULL;
    __twr_v328 = __twr_v326 + __twr_v327;
    __twr_v329 = *(uint8_t*)(__twr_v328);
    if (!(__twr_v329)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v330 = 34ULL;
    __twr_v331 = (_mng_byte307 == __twr_v330);
    __twr_v332 = !__twr_v331;
    __twr_v333 = (uint64_t)(&LexCurrentStream);
    __twr_v334 = *(uint64_t*)(__twr_v333);
    __twr_v335 = 81ULL;
    __twr_v336 = __twr_v334 + __twr_v335;
    *(uint8_t*)(__twr_v336) = __twr_v332;
    goto __twr_l12;
    __twr_l22:;
    __twr_v337 = (uint64_t)(&LexCurrentStream);
    __twr_v338 = *(uint64_t*)(__twr_v337);
    __twr_v339 = 82ULL;
    __twr_v340 = __twr_v338 + __twr_v339;
    __twr_v341 = *(uint8_t*)(__twr_v340);
    if (!(__twr_v341)) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v342 = 39ULL;
    __twr_v343 = (_mng_byte307 == __twr_v342);
    __twr_v344 = !__twr_v343;
    __twr_v345 = (uint64_t)(&LexCurrentStream);
    __twr_v346 = *(uint64_t*)(__twr_v345);
    __twr_v347 = 82ULL;
    __twr_v348 = __twr_v346 + __twr_v347;
    *(uint8_t*)(__twr_v348) = __twr_v344;
    goto __twr_l12;
    __twr_l24:;
    __twr_v349 = 47ULL;
    if (_mng_byte307 != __twr_v349) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v350 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v351 = ((uint64_t (*)())__twr_v350)();
    _mng_nextbyte352 = __twr_v351;
    __twr_v353 = 47ULL;
    if (_mng_nextbyte352 != __twr_v353) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    _mng_comment304 = 1ULL;
    goto __twr_l8;
    __twr_l27:;
    __twr_v354 = (uint64_t)(&LexCurrentStream);
    __twr_v355 = *(uint64_t*)(__twr_v354);
    __twr_v356 = 83ULL;
    __twr_v357 = __twr_v355 + __twr_v356;
    *(uint8_t*)(__twr_v357) = _mng_nextbyte352;
    goto __twr_l12;
    __twr_l26:;
    __twr_v358 = 34ULL;
    if (_mng_byte307 != __twr_v358) { goto __twr_l30; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v359 = 1ULL;
    __twr_v360 = (uint64_t)(&LexCurrentStream);
    __twr_v361 = *(uint64_t*)(__twr_v360);
    __twr_v362 = 81ULL;
    __twr_v363 = __twr_v361 + __twr_v362;
    *(uint8_t*)(__twr_v363) = __twr_v359;
    goto __twr_l12;
    __twr_l30:;
    __twr_v364 = 39ULL;
    if (_mng_byte307 != __twr_v364) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v365 = 1ULL;
    __twr_v366 = (uint64_t)(&LexCurrentStream);
    __twr_v367 = *(uint64_t*)(__twr_v366);
    __twr_v368 = 82ULL;
    __twr_v369 = __twr_v367 + __twr_v368;
    *(uint8_t*)(__twr_v369) = __twr_v365;
    goto __twr_l12;
    __twr_l32:;
    __twr_v370 = 35ULL;
    if (_mng_byte307 != __twr_v370) { goto __twr_l12; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v371 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v371)();
    _mng_byte307 = 10ULL;
    __twr_l12:;
    __twr_v372 = (uint64_t)(&LexFalseCount);
    __twr_v373 = *(uint32_t*)(__twr_v372);
    if (!(__twr_v373)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    goto __twr_l8;
    __twr_l34:;
    goto __twr_l9;
    goto __twr_l8;
    __twr_l9:;
    _jkl_retv = _mng_byte307;
    goto _jkl_epilogue;
    __twr_l7:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token374, uint64_t _mng_terminator375, uint64_t _mng_dynamicbuffer376, uint64_t _mng_buffer377, uint64_t _mng_o_length) {
    uint64_t _mng_len378;
    uint64_t _mng_isbackslash379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t _mng_byte382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t _mng_length404;
    _mng_len378 = 0ULL;
    _mng_isbackslash379 = 0ULL;
    __twr_l37:;
    __twr_v380 = (uint64_t)(&LexGetCharacter);
    __twr_v381 = ((uint64_t (*)())__twr_v380)();
    _mng_byte382 = __twr_v381;
    if (_mng_byte382) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v383 = (uint64_t)(&LexError);
    __twr_v384 = (uint64_t)(&"String token terminated by EOF!\n");
    __twr_v385 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v383)(_mng_token374, __twr_v384, __twr_v385, __twr_v385);
    __twr_l39:;
    if (_mng_isbackslash379) { goto __twr_l43; } else { goto __twr_l42; }
    __twr_l42:;
    if (_mng_byte382 != _mng_terminator375) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    goto __twr_l38;
    goto __twr_l44;
    __twr_l46:;
    __twr_v386 = 92ULL;
    if (_mng_byte382 != __twr_v386) { goto __twr_l44; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_isbackslash379 = 1ULL;
    goto __twr_l37;
    __twr_l44:;
    goto __twr_l41;
    __twr_l43:;
    _mng_isbackslash379 = 0ULL;
    __twr_v387 = 110ULL;
    if (_mng_byte382 != __twr_v387) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_byte382 = 10ULL;
    goto __twr_l48;
    __twr_l50:;
    __twr_v388 = 116ULL;
    if (_mng_byte382 != __twr_v388) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_byte382 = 9ULL;
    goto __twr_l48;
    __twr_l52:;
    __twr_v389 = 114ULL;
    if (_mng_byte382 != __twr_v389) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_byte382 = 13ULL;
    goto __twr_l48;
    __twr_l54:;
    __twr_v390 = 98ULL;
    if (_mng_byte382 != __twr_v390) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    _mng_byte382 = 8ULL;
    goto __twr_l48;
    __twr_l56:;
    __twr_v391 = 91ULL;
    if (_mng_byte382 != __twr_v391) { goto __twr_l48; } else { goto __twr_l57; }
    __twr_l57:;
    _mng_byte382 = 27ULL;
    __twr_l48:;
    __twr_l41:;
    if (!(_mng_dynamicbuffer376)) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v392 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v392)(_mng_dynamicbuffer376, _mng_byte382);
    goto __twr_l58;
    __twr_l60:;
    __twr_v393 = 127ULL;
    if (_mng_len378 != __twr_v393) { goto __twr_l62; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v394 = (uint64_t)(&LexError);
    __twr_v395 = (uint64_t)(&"Token length exceeds maximum.\n");
    __twr_v396 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v394)(_mng_token374, __twr_v395, __twr_v396, __twr_v396);
    goto __twr_l58;
    __twr_l62:;
    __twr_v397 = 1ULL;
    __twr_v398 = _mng_buffer377 + _mng_len378;
    *(uint8_t*)(__twr_v398) = _mng_byte382;
    __twr_v399 = _mng_len378 + __twr_v397;
    _mng_len378 = __twr_v399;
    __twr_l58:;
    goto __twr_l37;
    __twr_l38:;
    if (!(_mng_dynamicbuffer376)) { goto __twr_l65; } else { goto __twr_l64; }
    __twr_l64:;
    __twr_v400 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v401 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v400)(_mng_dynamicbuffer376, __twr_v401);
    goto __twr_l63;
    __twr_l65:;
    __twr_v402 = 0ULL;
    __twr_v403 = _mng_buffer377 + _mng_len378;
    *(uint8_t*)(__twr_v403) = __twr_v402;
    _mng_length404 = _mng_len378;
    __twr_l63:;
    __twr_l36:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length404;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token405, uint64_t _mng_buffer406) {
    uint64_t _jkl_retv;
    uint64_t _mng_num407;
    uint64_t _mng_i408;
    uint64_t __twr_v409;
    uint64_t _mng_lastnum410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    _mng_num407 = 0ULL;
    _mng_i408 = 0ULL;
    __twr_v409 = *(uint8_t*)(_mng_buffer406);
    if (!(__twr_v409)) { goto __twr_l68; } else { goto __twr_l67; }
    __twr_l67:;
    _mng_lastnum410 = _mng_num407;
    __twr_v411 = 8ULL;
    __twr_v412 = _mng_num407 << __twr_v411;
    _mng_num407 = __twr_v412;
    if (!(_mng_lastnum410)) { goto __twr_l70; } else { goto __twr_l72; }
    __twr_l72:;
    __twr_v413 = _mng_num407 / _mng_lastnum410;
    __twr_v414 = 256ULL;
    if (__twr_v413 == __twr_v414) { goto __twr_l70; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v415 = (uint64_t)(&LexError);
    __twr_v416 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v417 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v415)(_mng_token405, __twr_v416, __twr_v417, __twr_v417);
    __twr_l70:;
    __twr_v418 = _mng_buffer406 + _mng_i408;
    __twr_v419 = *(uint8_t*)(__twr_v418);
    __twr_v420 = _mng_num407 + __twr_v419;
    _mng_num407 = __twr_v420;
    if (_mng_num407 >= _mng_lastnum410) { goto __twr_l73; } else { goto __twr_l74; }
    __twr_l74:;
    __twr_v421 = (uint64_t)(&LexError);
    __twr_v422 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v423 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v421)(_mng_token405, __twr_v422, __twr_v423, __twr_v423);
    __twr_l73:;
    __twr_v424 = 1ULL;
    __twr_v425 = _mng_i408 + __twr_v424;
    _mng_i408 = __twr_v425;
    __twr_l69:;
    __twr_v426 = _mng_buffer406 + _mng_i408;
    __twr_v427 = *(uint8_t*)(__twr_v426);
    if (__twr_v427) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    _jkl_retv = _mng_num407;
    goto _jkl_epilogue;
    __twr_l66:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token428, uint64_t _mng_buffer429) {
    uint64_t _jkl_retv;
    uint64_t _mng_num430;
    uint64_t _mng_i431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t _mng_lastnum451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t _mng_lastnum514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t _mng_lastnum545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    _mng_num430 = 0ULL;
    _mng_i431 = 0ULL;
    __twr_v432 = *(uint8_t*)(_mng_buffer429);
    __twr_v433 = 48ULL;
    if (__twr_v432 != __twr_v433) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v434 = 1ULL;
    __twr_v435 = _mng_buffer429 + __twr_v434;
    __twr_v436 = *(uint8_t*)(__twr_v435);
    if (__twr_v436) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v437 = 0ULL;
    _jkl_retv = __twr_v437;
    goto _jkl_epilogue;
    __twr_l78:;
    __twr_v438 = 1ULL;
    __twr_v439 = _mng_buffer429 + __twr_v438;
    __twr_v440 = *(uint8_t*)(__twr_v439);
    __twr_v441 = 120ULL;
    if (__twr_v440 != __twr_v441) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v442 = 2ULL;
    __twr_v443 = _mng_buffer429 + __twr_v442;
    __twr_v444 = *(uint8_t*)(__twr_v443);
    if (__twr_v444) { goto __twr_l82; } else { goto __twr_l83; }
    __twr_l83:;
    __twr_v445 = (uint64_t)(&LexError);
    __twr_v446 = (uint64_t)(&"Unfinished hex number.\n");
    __twr_v447 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v445)(_mng_token428, __twr_v446, __twr_v447, __twr_v447);
    __twr_l82:;
    _mng_i431 = 2ULL;
    __twr_v448 = 2ULL;
    __twr_v449 = _mng_buffer429 + __twr_v448;
    __twr_v450 = *(uint8_t*)(__twr_v449);
    if (!(__twr_v450)) { goto __twr_l85; } else { goto __twr_l84; }
    __twr_l84:;
    _mng_lastnum451 = _mng_num430;
    __twr_v452 = 4ULL;
    __twr_v453 = _mng_num430 << __twr_v452;
    _mng_num430 = __twr_v453;
    if (!(_mng_lastnum451)) { goto __twr_l87; } else { goto __twr_l89; }
    __twr_l89:;
    __twr_v454 = _mng_num430 / _mng_lastnum451;
    __twr_v455 = 16ULL;
    if (__twr_v454 == __twr_v455) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v456 = (uint64_t)(&LexError);
    __twr_v457 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v458 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v456)(_mng_token428, __twr_v457, __twr_v458, __twr_v458);
    __twr_l87:;
    __twr_v459 = _mng_buffer429 + _mng_i431;
    __twr_v460 = *(uint8_t*)(__twr_v459);
    __twr_v461 = 48ULL;
    if (__twr_v460 < __twr_v461) { goto __twr_l92; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v462 = _mng_buffer429 + _mng_i431;
    __twr_v463 = *(uint8_t*)(__twr_v462);
    __twr_v464 = 57ULL;
    if (__twr_v463 > __twr_v464) { goto __twr_l92; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v465 = _mng_buffer429 + _mng_i431;
    __twr_v466 = *(uint8_t*)(__twr_v465);
    __twr_v467 = 48ULL;
    __twr_v468 = __twr_v466 - __twr_v467;
    __twr_v469 = _mng_num430 + __twr_v468;
    _mng_num430 = __twr_v469;
    goto __twr_l90;
    __twr_l92:;
    __twr_v470 = _mng_buffer429 + _mng_i431;
    __twr_v471 = *(uint8_t*)(__twr_v470);
    __twr_v472 = 65ULL;
    if (__twr_v471 < __twr_v472) { goto __twr_l95; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v473 = _mng_buffer429 + _mng_i431;
    __twr_v474 = *(uint8_t*)(__twr_v473);
    __twr_v475 = 70ULL;
    if (__twr_v474 > __twr_v475) { goto __twr_l95; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v476 = _mng_buffer429 + _mng_i431;
    __twr_v477 = *(uint8_t*)(__twr_v476);
    __twr_v478 = 55ULL;
    __twr_v479 = __twr_v477 - __twr_v478;
    __twr_v480 = _mng_num430 + __twr_v479;
    _mng_num430 = __twr_v480;
    goto __twr_l90;
    __twr_l95:;
    __twr_v481 = _mng_buffer429 + _mng_i431;
    __twr_v482 = *(uint8_t*)(__twr_v481);
    __twr_v483 = 97ULL;
    if (__twr_v482 < __twr_v483) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v484 = _mng_buffer429 + _mng_i431;
    __twr_v485 = *(uint8_t*)(__twr_v484);
    __twr_v486 = 102ULL;
    if (__twr_v485 > __twr_v486) { goto __twr_l98; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v487 = _mng_buffer429 + _mng_i431;
    __twr_v488 = *(uint8_t*)(__twr_v487);
    __twr_v489 = 87ULL;
    __twr_v490 = __twr_v488 - __twr_v489;
    __twr_v491 = _mng_num430 + __twr_v490;
    _mng_num430 = __twr_v491;
    goto __twr_l90;
    __twr_l98:;
    __twr_v492 = (uint64_t)(&LexError);
    __twr_v493 = (uint64_t)(&"Malformed hex number.\n");
    __twr_v494 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v492)(_mng_token428, __twr_v493, __twr_v494, __twr_v494);
    __twr_l90:;
    if (_mng_num430 >= _mng_lastnum451) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v495 = (uint64_t)(&LexError);
    __twr_v496 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v497 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v495)(_mng_token428, __twr_v496, __twr_v497, __twr_v497);
    __twr_l100:;
    __twr_v498 = 1ULL;
    __twr_v499 = _mng_i431 + __twr_v498;
    _mng_i431 = __twr_v499;
    __twr_l86:;
    __twr_v500 = _mng_buffer429 + _mng_i431;
    __twr_v501 = *(uint8_t*)(__twr_v500);
    if (__twr_v501) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    _jkl_retv = _mng_num430;
    goto _jkl_epilogue;
    __twr_l80:;
    _mng_i431 = 1ULL;
    __twr_v502 = 1ULL;
    __twr_v503 = _mng_buffer429 + __twr_v502;
    __twr_v504 = *(uint8_t*)(__twr_v503);
    if (!(__twr_v504)) { goto __twr_l103; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v505 = _mng_buffer429 + _mng_i431;
    __twr_v506 = *(uint8_t*)(__twr_v505);
    __twr_v507 = 48ULL;
    if (__twr_v506 < __twr_v507) { goto __twr_l106; } else { goto __twr_l107; }
    __twr_l107:;
    __twr_v508 = _mng_buffer429 + _mng_i431;
    __twr_v509 = *(uint8_t*)(__twr_v508);
    __twr_v510 = 55ULL;
    if (__twr_v509 <= __twr_v510) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v511 = (uint64_t)(&LexError);
    __twr_v512 = (uint64_t)(&"Malformed octal number.\n");
    __twr_v513 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v511)(_mng_token428, __twr_v512, __twr_v513, __twr_v513);
    __twr_l105:;
    _mng_lastnum514 = _mng_num430;
    __twr_v515 = 3ULL;
    __twr_v516 = _mng_num430 << __twr_v515;
    _mng_num430 = __twr_v516;
    if (!(_mng_lastnum514)) { goto __twr_l108; } else { goto __twr_l110; }
    __twr_l110:;
    __twr_v517 = _mng_num430 / _mng_lastnum514;
    __twr_v518 = 8ULL;
    if (__twr_v517 == __twr_v518) { goto __twr_l108; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v519 = (uint64_t)(&LexError);
    __twr_v520 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v521 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v519)(_mng_token428, __twr_v520, __twr_v521, __twr_v521);
    __twr_l108:;
    __twr_v522 = _mng_buffer429 + _mng_i431;
    __twr_v523 = *(uint8_t*)(__twr_v522);
    __twr_v524 = 48ULL;
    __twr_v525 = __twr_v523 - __twr_v524;
    __twr_v526 = _mng_num430 + __twr_v525;
    _mng_num430 = __twr_v526;
    if (_mng_num430 >= _mng_lastnum514) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v527 = (uint64_t)(&LexError);
    __twr_v528 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v529 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v527)(_mng_token428, __twr_v528, __twr_v529, __twr_v529);
    __twr_l111:;
    __twr_v530 = 1ULL;
    __twr_v531 = _mng_i431 + __twr_v530;
    _mng_i431 = __twr_v531;
    __twr_l104:;
    __twr_v532 = _mng_buffer429 + _mng_i431;
    __twr_v533 = *(uint8_t*)(__twr_v532);
    if (__twr_v533) { goto __twr_l102; } else { goto __twr_l103; }
    __twr_l103:;
    _jkl_retv = _mng_num430;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v534 = _mng_buffer429 + _mng_i431;
    __twr_v535 = *(uint8_t*)(__twr_v534);
    if (!(__twr_v535)) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_v536 = _mng_buffer429 + _mng_i431;
    __twr_v537 = *(uint8_t*)(__twr_v536);
    __twr_v538 = 48ULL;
    if (__twr_v537 < __twr_v538) { goto __twr_l117; } else { goto __twr_l118; }
    __twr_l118:;
    __twr_v539 = _mng_buffer429 + _mng_i431;
    __twr_v540 = *(uint8_t*)(__twr_v539);
    __twr_v541 = 57ULL;
    if (__twr_v540 <= __twr_v541) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v542 = (uint64_t)(&LexError);
    __twr_v543 = (uint64_t)(&"Malformed decimal number.\n");
    __twr_v544 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v542)(_mng_token428, __twr_v543, __twr_v544, __twr_v544);
    __twr_l116:;
    _mng_lastnum545 = _mng_num430;
    __twr_v546 = 10ULL;
    __twr_v547 = _mng_num430 * __twr_v546;
    _mng_num430 = __twr_v547;
    if (!(_mng_lastnum545)) { goto __twr_l119; } else { goto __twr_l121; }
    __twr_l121:;
    __twr_v548 = _mng_num430 / _mng_lastnum545;
    __twr_v549 = 10ULL;
    if (__twr_v548 == __twr_v549) { goto __twr_l119; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v550 = (uint64_t)(&LexError);
    __twr_v551 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v552 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v550)(_mng_token428, __twr_v551, __twr_v552, __twr_v552);
    __twr_l119:;
    __twr_v553 = _mng_buffer429 + _mng_i431;
    __twr_v554 = *(uint8_t*)(__twr_v553);
    __twr_v555 = 48ULL;
    __twr_v556 = __twr_v554 - __twr_v555;
    __twr_v557 = _mng_num430 + __twr_v556;
    _mng_num430 = __twr_v557;
    if (_mng_num430 >= _mng_lastnum545) { goto __twr_l122; } else { goto __twr_l123; }
    __twr_l123:;
    __twr_v558 = (uint64_t)(&LexError);
    __twr_v559 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v560 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v558)(_mng_token428, __twr_v559, __twr_v560, __twr_v560);
    __twr_l122:;
    __twr_v561 = 1ULL;
    __twr_v562 = _mng_i431 + __twr_v561;
    _mng_i431 = __twr_v562;
    __twr_l115:;
    __twr_v563 = _mng_buffer429 + _mng_i431;
    __twr_v564 = *(uint8_t*)(__twr_v563);
    if (__twr_v564) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    _jkl_retv = _mng_num430;
    goto _jkl_epilogue;
    __twr_l75:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token565, uint64_t _mng_buffer566, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t _mng_stream570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t _mng_byte587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t _mng_internedstring619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t _mng_dynamicbuffer622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t _mng_dumpster627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t _mng_len646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t _mng_uppercaseonly678;
    uint64_t _mng_len679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t _mng_macro718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    __twr_lLoopOnMacro:;
    _mng_length567 = 0ULL;
    __twr_v568 = (uint64_t)(&LexCurrentStream);
    __twr_v569 = *(uint64_t*)(__twr_v568);
    _mng_stream570 = __twr_v569;
    if (!(_mng_stream570)) { goto __twr_l126; } else { goto __twr_l127; }
    __twr_l127:;
    __twr_v571 = 8ULL;
    __twr_v572 = _mng_stream570 + __twr_v571;
    __twr_v573 = *(uint64_t*)(__twr_v572);
    __twr_v574 = _mng_token565 + __twr_v571;
    *(uint64_t*)(__twr_v574) = __twr_v573;
    __twr_v575 = 44ULL;
    __twr_v576 = _mng_stream570 + __twr_v575;
    __twr_v577 = *(uint32_t*)(__twr_v576);
    __twr_v578 = 16ULL;
    __twr_v579 = _mng_token565 + __twr_v578;
    *(uint32_t*)(__twr_v579) = __twr_v577;
    __twr_v580 = 48ULL;
    __twr_v581 = _mng_stream570 + __twr_v580;
    __twr_v582 = *(uint32_t*)(__twr_v581);
    __twr_v583 = 20ULL;
    __twr_v584 = _mng_token565 + __twr_v583;
    *(uint32_t*)(__twr_v584) = __twr_v582;
    __twr_l126:;
    __twr_v585 = (uint64_t)(&LexGetCharacter);
    __twr_v586 = ((uint64_t (*)())__twr_v585)();
    _mng_byte587 = __twr_v586;
    __twr_v588 = (uint64_t)(&LexCharTreatment);
    __twr_v589 = __twr_v588 + _mng_byte587;
    __twr_v590 = *(uint8_t*)(__twr_v589);
    __twr_v591 = 3ULL;
    if (__twr_v590 != __twr_v591) { goto __twr_l129; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v592 = (uint64_t)(&LexCurrentStream);
    __twr_v593 = *(uint64_t*)(__twr_v592);
    _mng_stream570 = __twr_v593;
    if (!(_mng_stream570)) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v594 = 8ULL;
    __twr_v595 = _mng_stream570 + __twr_v594;
    __twr_v596 = *(uint64_t*)(__twr_v595);
    __twr_v597 = _mng_token565 + __twr_v594;
    *(uint64_t*)(__twr_v597) = __twr_v596;
    __twr_v598 = 44ULL;
    __twr_v599 = _mng_stream570 + __twr_v598;
    __twr_v600 = *(uint32_t*)(__twr_v599);
    __twr_v601 = 16ULL;
    __twr_v602 = _mng_token565 + __twr_v601;
    *(uint32_t*)(__twr_v602) = __twr_v600;
    __twr_v603 = 48ULL;
    __twr_v604 = _mng_stream570 + __twr_v603;
    __twr_v605 = *(uint32_t*)(__twr_v604);
    __twr_v606 = 20ULL;
    __twr_v607 = _mng_token565 + __twr_v606;
    *(uint32_t*)(__twr_v607) = __twr_v605;
    __twr_l131:;
    __twr_v608 = (uint64_t)(&LexGetCharacter);
    __twr_v609 = ((uint64_t (*)())__twr_v608)();
    _mng_byte587 = __twr_v609;
    __twr_l130:;
    __twr_v610 = (uint64_t)(&LexCharTreatment);
    __twr_v611 = __twr_v610 + _mng_byte587;
    __twr_v612 = *(uint8_t*)(__twr_v611);
    __twr_v613 = 3ULL;
    if (__twr_v612 == __twr_v613) { goto __twr_l128; } else { goto __twr_l129; }
    __twr_l129:;
    if (_mng_byte587) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v614 = 0ULL;
    _jkl_retv = __twr_v614;
    goto _jkl_epilogue;
    __twr_l133:;
    __twr_v615 = 34ULL;
    if (_mng_byte587 != __twr_v615) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    __twr_v616 = (uint64_t)(&TlAllocateFromZone);
    __twr_v617 = (uint64_t)(&LexInternedStringZone);
    __twr_v618 = ((uint64_t (*)(uint64_t))__twr_v616)(__twr_v617);
    _mng_internedstring619 = __twr_v618;
    __twr_v620 = 48ULL;
    __twr_v621 = _mng_internedstring619 + __twr_v620;
    _mng_dynamicbuffer622 = __twr_v621;
    __twr_v623 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v623)(_mng_dynamicbuffer622);
    __twr_v624 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v625 = 34ULL;
    __twr_v626 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v624)(_mng_token565, __twr_v625, _mng_dynamicbuffer622, __twr_v626, (uint64_t)(&_mng_dumpster627));
    __twr_v628 = 4ULL;
    _jkl_retv = __twr_v628;
    goto _jkl_epilogue;
    __twr_l135:;
    __twr_v629 = 39ULL;
    if (_mng_byte587 != __twr_v629) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v630 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v631 = 39ULL;
    __twr_v632 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v630)(_mng_token565, __twr_v631, __twr_v632, _mng_buffer566, (uint64_t)(&_mng_length567));
    __twr_v633 = 8ULL;
    _jkl_retv = __twr_v633;
    goto _jkl_epilogue;
    __twr_l137:;
    __twr_v634 = (uint64_t)(&LexCharTreatment);
    __twr_v635 = 1ULL;
    __twr_v636 = __twr_v634 + _mng_byte587;
    __twr_v637 = *(uint8_t*)(__twr_v636);
    if (__twr_v637 != __twr_v635) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    _mng_length567 = 1ULL;
    __twr_v638 = 0ULL;
    __twr_v639 = 1ULL;
    *(uint8_t*)(_mng_buffer566) = _mng_byte587;
    __twr_v640 = 1ULL;
    __twr_v641 = _mng_buffer566 + __twr_v640;
    *(uint8_t*)(__twr_v641) = __twr_v638;
    _jkl_retv = __twr_v639;
    goto _jkl_epilogue;
    __twr_l139:;
    __twr_v642 = (uint64_t)(&LexCharTreatment);
    __twr_v643 = __twr_v642 + _mng_byte587;
    __twr_v644 = *(uint8_t*)(__twr_v643);
    __twr_v645 = 2ULL;
    if (__twr_v644 != __twr_v645) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    _mng_len646 = 0ULL;
    __twr_v647 = (uint64_t)(&LexCharTreatment);
    __twr_v648 = __twr_v647 + _mng_byte587;
    __twr_v649 = *(uint8_t*)(__twr_v648);
    __twr_v650 = 2ULL;
    if (__twr_v649 != __twr_v650) { goto __twr_l144; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v651 = 127ULL;
    if (_mng_len646 != __twr_v651) { goto __twr_l146; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v652 = (uint64_t)(&LexError);
    __twr_v653 = (uint64_t)(&"Token length exceeds maximum.\n");
    __twr_v654 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v652)(_mng_token565, __twr_v653, __twr_v654, __twr_v654);
    __twr_l146:;
    __twr_v655 = 1ULL;
    __twr_v656 = _mng_buffer566 + _mng_len646;
    *(uint8_t*)(__twr_v656) = _mng_byte587;
    __twr_v657 = _mng_len646 + __twr_v655;
    _mng_len646 = __twr_v657;
    __twr_v658 = (uint64_t)(&LexGetCharacter);
    __twr_v659 = ((uint64_t (*)())__twr_v658)();
    _mng_byte587 = __twr_v659;
    __twr_l145:;
    __twr_v660 = (uint64_t)(&LexCharTreatment);
    __twr_v661 = __twr_v660 + _mng_byte587;
    __twr_v662 = *(uint8_t*)(__twr_v661);
    __twr_v663 = 2ULL;
    if (__twr_v662 == __twr_v663) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v664 = 0ULL;
    __twr_v665 = _mng_buffer566 + _mng_len646;
    *(uint8_t*)(__twr_v665) = __twr_v664;
    _mng_length567 = _mng_len646;
    __twr_v666 = (uint64_t)(&LexCharTreatment);
    __twr_v667 = __twr_v666 + _mng_byte587;
    __twr_v668 = *(uint8_t*)(__twr_v667);
    __twr_v669 = 3ULL;
    if (__twr_v668 == __twr_v669) { goto __twr_l148; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v670 = (uint64_t)(&LexCurrentStream);
    __twr_v671 = *(uint64_t*)(__twr_v670);
    __twr_v672 = 84ULL;
    __twr_v673 = __twr_v671 + __twr_v672;
    *(uint8_t*)(__twr_v673) = _mng_byte587;
    __twr_l148:;
    __twr_v674 = 2ULL;
    _jkl_retv = __twr_v674;
    goto _jkl_epilogue;
    __twr_l141:;
    __twr_v675 = 65ULL;
    if (_mng_byte587 < __twr_v675) { goto __twr_l152; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v676 = 90ULL;
    if (_mng_byte587 > __twr_v676) { goto __twr_l152; } else { goto __twr_l151; }
    __twr_l151:;
    __twr_v677 = 1ULL;
    goto __twr_l153;
    __twr_l152:;
    __twr_v677 = 0ULL;
    __twr_l153:;
    _mng_uppercaseonly678 = __twr_v677;
    _mng_len679 = 0ULL;
    __twr_v680 = (uint64_t)(&LexCharTreatment);
    __twr_v681 = __twr_v680 + _mng_byte587;
    __twr_v682 = *(uint8_t*)(__twr_v681);
    if (__twr_v682) { goto __twr_l155; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v683 = 127ULL;
    if (_mng_len679 != __twr_v683) { goto __twr_l157; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v684 = (uint64_t)(&LexError);
    __twr_v685 = (uint64_t)(&"Token length exceeds maximum.\n");
    __twr_v686 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v684)(_mng_token565, __twr_v685, __twr_v686, __twr_v686);
    __twr_l157:;
    if (!(_mng_uppercaseonly678)) { goto __twr_l159; } else { goto __twr_l160; }
    __twr_l160:;
    __twr_v687 = 65ULL;
    if (_mng_byte587 < __twr_v687) { goto __twr_l163; } else { goto __twr_l161; }
    __twr_l161:;
    __twr_v688 = 90ULL;
    if (_mng_byte587 > __twr_v688) { goto __twr_l163; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v689 = 1ULL;
    goto __twr_l164;
    __twr_l163:;
    __twr_v689 = 0ULL;
    __twr_l164:;
    _mng_uppercaseonly678 = __twr_v689;
    __twr_l159:;
    __twr_v690 = 1ULL;
    __twr_v691 = _mng_buffer566 + _mng_len679;
    *(uint8_t*)(__twr_v691) = _mng_byte587;
    __twr_v692 = _mng_len679 + __twr_v690;
    _mng_len679 = __twr_v692;
    __twr_v693 = (uint64_t)(&LexGetCharacter);
    __twr_v694 = ((uint64_t (*)())__twr_v693)();
    _mng_byte587 = __twr_v694;
    __twr_l156:;
    __twr_v695 = (uint64_t)(&LexCharTreatment);
    __twr_v696 = __twr_v695 + _mng_byte587;
    __twr_v697 = *(uint8_t*)(__twr_v696);
    if (!(__twr_v697)) { goto __twr_l154; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v698 = 0ULL;
    __twr_v699 = _mng_buffer566 + _mng_len679;
    *(uint8_t*)(__twr_v699) = __twr_v698;
    _mng_length567 = _mng_len679;
    __twr_v700 = (uint64_t)(&LexCharTreatment);
    __twr_v701 = 1ULL;
    __twr_v702 = __twr_v700 + _mng_byte587;
    __twr_v703 = *(uint8_t*)(__twr_v702);
    if (__twr_v703 == __twr_v701) { goto __twr_l166; } else { goto __twr_l167; }
    __twr_l167:;
    __twr_v704 = (uint64_t)(&LexCharTreatment);
    __twr_v705 = __twr_v704 + _mng_byte587;
    __twr_v706 = *(uint8_t*)(__twr_v705);
    __twr_v707 = 2ULL;
    if (__twr_v706 != __twr_v707) { goto __twr_l165; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v708 = (uint64_t)(&LexCurrentStream);
    __twr_v709 = *(uint64_t*)(__twr_v708);
    __twr_v710 = 84ULL;
    __twr_v711 = __twr_v709 + __twr_v710;
    *(uint8_t*)(__twr_v711) = _mng_byte587;
    __twr_l165:;
    if (!(_mng_uppercaseonly678)) { goto __twr_l168; } else { goto __twr_l170; }
    __twr_l170:;
    __twr_v712 = 1ULL;
    if (_mng_len679 <= __twr_v712) { goto __twr_l168; } else { goto __twr_l169; }
    __twr_l169:;
    __twr_v713 = 16ULL;
    _jkl_retv = __twr_v713;
    goto _jkl_epilogue;
    __twr_l168:;
    __twr_v714 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v715 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v716 = *(uint64_t*)(__twr_v715);
    __twr_v717 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v714)(__twr_v716, _mng_buffer566);
    _mng_macro718 = __twr_v717;
    if (_mng_macro718) { goto __twr_l171; } else { goto __twr_l172; }
    __twr_l172:;
    __twr_v719 = 0ULL;
    _jkl_retv = __twr_v719;
    goto _jkl_epilogue;
    __twr_l171:;
    __twr_v720 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v720)(_mng_macro718, _mng_token565);
    goto __twr_lLoopOnMacro;
    __twr_l124:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length567;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring619;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token721) {
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t _mng_buffer724[16];
    uint64_t __twr_v725;
    uint64_t _mng_length726;
    uint64_t _mng_internedstring727;
    uint64_t _mng_tokenflag728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t _mng_keyword735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    __twr_v722 = (uint64_t)(&LexGetTokenContents);
    __twr_v723 = (uint64_t)(&_mng_buffer724);
    __twr_v725 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v722)(_mng_token721, __twr_v723, (uint64_t)(&_mng_length726), (uint64_t)(&_mng_internedstring727));
    _mng_tokenflag728 = __twr_v725;
    __twr_v729 = 19ULL;
    __twr_v730 = _mng_tokenflag728 & __twr_v729;
    if (!(__twr_v730)) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    __twr_v731 = (uint64_t)(&TlLookupHashTable);
    __twr_v732 = (uint64_t)(&LexKeywordHashTable);
    __twr_v733 = (uint64_t)(&_mng_buffer724);
    __twr_v734 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v731)(__twr_v732, __twr_v733);
    _mng_keyword735 = __twr_v734;
    if (_mng_keyword735) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v736 = 16ULL;
    __twr_v737 = _mng_tokenflag728 & __twr_v736;
    if (!(__twr_v737)) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v738 = (uint64_t)(&LexError);
    __twr_v739 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).\n");
    __twr_v740 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v738)(_mng_token721, __twr_v739, __twr_v740, __twr_v740);
    __twr_l178:;
    __twr_v741 = (uint64_t)(&LexError);
    __twr_v742 = (uint64_t)(&"Unknown keyword\n");
    __twr_v743 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v741)(_mng_token721, __twr_v742, __twr_v743, __twr_v743);
    __twr_l176:;
    __twr_v744 = 48ULL;
    __twr_v745 = _mng_keyword735 + __twr_v744;
    __twr_v746 = *(uint8_t*)(__twr_v745);
    __twr_v747 = 24ULL;
    __twr_v748 = _mng_token721 + __twr_v747;
    *(uint8_t*)(__twr_v748) = __twr_v746;
    __twr_v749 = 49ULL;
    __twr_v750 = _mng_keyword735 + __twr_v749;
    __twr_v751 = *(uint8_t*)(__twr_v750);
    __twr_v752 = 25ULL;
    __twr_v753 = _mng_token721 + __twr_v752;
    *(uint8_t*)(__twr_v753) = __twr_v751;
    __twr_v754 = 50ULL;
    __twr_v755 = _mng_keyword735 + __twr_v754;
    __twr_v756 = *(uint8_t*)(__twr_v755);
    __twr_v757 = 26ULL;
    __twr_v758 = _mng_token721 + __twr_v757;
    *(uint8_t*)(__twr_v758) = __twr_v756;
    goto _jkl_epilogue;
    __twr_l174:;
    __twr_v759 = 8ULL;
    __twr_v760 = _mng_tokenflag728 & __twr_v759;
    if (!(__twr_v760)) { goto __twr_l180; } else { goto __twr_l181; }
    __twr_l181:;
    __twr_v761 = 5ULL;
    __twr_v762 = 24ULL;
    __twr_v763 = _mng_token721 + __twr_v762;
    *(uint8_t*)(__twr_v763) = __twr_v761;
    __twr_v764 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v765 = (uint64_t)(&_mng_buffer724);
    __twr_v766 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v764)(_mng_token721, __twr_v765);
    *(uint64_t*)(_mng_token721) = __twr_v766;
    goto _jkl_epilogue;
    __twr_l180:;
    __twr_v767 = 4ULL;
    __twr_v768 = _mng_tokenflag728 & __twr_v767;
    if (!(__twr_v768)) { goto __twr_l182; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v769 = 4ULL;
    __twr_v770 = 24ULL;
    __twr_v771 = _mng_token721 + __twr_v770;
    *(uint8_t*)(__twr_v771) = __twr_v769;
    *(uint64_t*)(_mng_token721) = _mng_internedstring727;
    goto _jkl_epilogue;
    __twr_l182:;
    __twr_v772 = 32ULL;
    __twr_v773 = _mng_tokenflag728 & __twr_v772;
    if (!(__twr_v773)) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v774 = 6ULL;
    __twr_v775 = 24ULL;
    __twr_v776 = _mng_token721 + __twr_v775;
    *(uint8_t*)(__twr_v776) = __twr_v774;
    goto _jkl_epilogue;
    __twr_l184:;
    if (_mng_length726) { goto __twr_l186; } else { goto __twr_l187; }
    __twr_l187:;
    __twr_v777 = 6ULL;
    __twr_v778 = 24ULL;
    __twr_v779 = _mng_token721 + __twr_v778;
    *(uint8_t*)(__twr_v779) = __twr_v777;
    goto _jkl_epilogue;
    __twr_l186:;
    __twr_v780 = (uint64_t)(&_mng_buffer724);
    __twr_v781 = *(uint8_t*)(__twr_v780);
    __twr_v782 = 48ULL;
    if (__twr_v781 < __twr_v782) { goto __twr_l188; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v783 = (uint64_t)(&_mng_buffer724);
    __twr_v784 = *(uint8_t*)(__twr_v783);
    __twr_v785 = 57ULL;
    if (__twr_v784 > __twr_v785) { goto __twr_l188; } else { goto __twr_l189; }
    __twr_l189:;
    __twr_v786 = 5ULL;
    __twr_v787 = 24ULL;
    __twr_v788 = _mng_token721 + __twr_v787;
    *(uint8_t*)(__twr_v788) = __twr_v786;
    __twr_v789 = (uint64_t)(&LexCrunchNumber);
    __twr_v790 = (uint64_t)(&_mng_buffer724);
    __twr_v791 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v789)(_mng_token721, __twr_v790);
    *(uint64_t*)(_mng_token721) = __twr_v791;
    goto _jkl_epilogue;
    __twr_l188:;
    __twr_v792 = (uint64_t)(&LexError);
    __twr_v793 = (uint64_t)(&"Unknown token\n");
    __twr_v794 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v792)(_mng_token721, __twr_v793, __twr_v794, __twr_v794);
    __twr_l173:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest795, uint64_t _mng_src796) {
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    __twr_v797 = *(uint64_t*)(_mng_src796);
    *(uint64_t*)(_mng_dest795) = __twr_v797;
    __twr_v798 = 8ULL;
    __twr_v799 = _mng_src796 + __twr_v798;
    __twr_v800 = *(uint64_t*)(__twr_v799);
    __twr_v801 = _mng_dest795 + __twr_v798;
    *(uint64_t*)(__twr_v801) = __twr_v800;
    __twr_v802 = 16ULL;
    __twr_v803 = _mng_src796 + __twr_v802;
    __twr_v804 = *(uint32_t*)(__twr_v803);
    __twr_v805 = _mng_dest795 + __twr_v802;
    *(uint32_t*)(__twr_v805) = __twr_v804;
    __twr_v806 = 20ULL;
    __twr_v807 = _mng_src796 + __twr_v806;
    __twr_v808 = *(uint32_t*)(__twr_v807);
    __twr_v809 = _mng_dest795 + __twr_v806;
    *(uint32_t*)(__twr_v809) = __twr_v808;
    __twr_v810 = 24ULL;
    __twr_v811 = _mng_src796 + __twr_v810;
    __twr_v812 = *(uint8_t*)(__twr_v811);
    __twr_v813 = _mng_dest795 + __twr_v810;
    *(uint8_t*)(__twr_v813) = __twr_v812;
    __twr_v814 = 25ULL;
    __twr_v815 = _mng_src796 + __twr_v814;
    __twr_v816 = *(uint8_t*)(__twr_v815);
    __twr_v817 = _mng_dest795 + __twr_v814;
    *(uint8_t*)(__twr_v817) = __twr_v816;
    __twr_v818 = 26ULL;
    __twr_v819 = _mng_src796 + __twr_v818;
    __twr_v820 = *(uint8_t*)(__twr_v819);
    __twr_v821 = _mng_dest795 + __twr_v818;
    *(uint8_t*)(__twr_v821) = __twr_v820;
    __twr_l191:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token822) {
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t _mng_index825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    __twr_v823 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v824 = *(uint32_t*)(__twr_v823);
    _mng_index825 = __twr_v824;
    if (!(_mng_index825)) { goto __twr_l193; } else { goto __twr_l194; }
    __twr_l194:;
    __twr_v826 = (uint64_t)(&LexCopyToken);
    __twr_v827 = (uint64_t)(&LexPutbackStack);
    __twr_v828 = 1ULL;
    __twr_v829 = _mng_index825 - __twr_v828;
    __twr_v830 = 5ULL;
    __twr_v831 = __twr_v829 << __twr_v830;
    __twr_v832 = __twr_v827 + __twr_v831;
    ((void (*)(uint64_t, uint64_t))__twr_v826)(_mng_token822, __twr_v832);
    __twr_v833 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v833) = __twr_v829;
    goto _jkl_epilogue;
    __twr_l193:;
    __twr_v834 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v834)(_mng_token822);
    __twr_l192:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token835) {
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t _mng_index838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    __twr_v836 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v837 = *(uint32_t*)(__twr_v836);
    _mng_index838 = __twr_v837;
    __twr_v839 = 256ULL;
    if (_mng_index838 != __twr_v839) { goto __twr_l196; } else { goto __twr_l197; }
    __twr_l197:;
    __twr_v840 = (uint64_t)(&TlInternalError);
    __twr_v841 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v842 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v840)(__twr_v841, __twr_v842, __twr_v842, __twr_v842);
    __twr_l196:;
    __twr_v843 = (uint64_t)(&LexCopyToken);
    __twr_v844 = (uint64_t)(&LexPutbackStack);
    __twr_v845 = 5ULL;
    __twr_v846 = _mng_index838 << __twr_v845;
    __twr_v847 = __twr_v844 + __twr_v846;
    ((void (*)(uint64_t, uint64_t))__twr_v843)(__twr_v847, _mng_token835);
    __twr_v848 = 1ULL;
    __twr_v849 = _mng_index838 + __twr_v848;
    __twr_v850 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v850) = __twr_v849;
    __twr_l195:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token851, uint64_t _mng_type852, uint64_t _mng_subtype853) {
    uint64_t _jkl_retv;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t _mng_index856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t _mng_matchtoken867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t __twr_v886;
    uint64_t __twr_v887;
    __twr_v854 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v855 = *(uint32_t*)(__twr_v854);
    _mng_index856 = __twr_v855;
    if (_mng_index856) { goto __twr_l199; } else { goto __twr_l200; }
    __twr_l200:;
    __twr_v857 = (uint64_t)(&LexNextToken);
    __twr_v858 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v857)(__twr_v858);
    __twr_v859 = 1ULL;
    __twr_v860 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v860) = __twr_v859;
    _mng_index856 = 1ULL;
    __twr_l199:;
    __twr_v861 = (uint64_t)(&LexPutbackStack);
    __twr_v862 = 1ULL;
    __twr_v863 = _mng_index856 - __twr_v862;
    __twr_v864 = 5ULL;
    __twr_v865 = __twr_v863 << __twr_v864;
    __twr_v866 = __twr_v861 + __twr_v865;
    _mng_matchtoken867 = __twr_v866;
    if (!(_mng_token851)) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v868 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v868)(_mng_token851, _mng_matchtoken867);
    __twr_l201:;
    __twr_v869 = 24ULL;
    __twr_v870 = _mng_matchtoken867 + __twr_v869;
    __twr_v871 = *(uint8_t*)(__twr_v870);
    if (__twr_v871 == _mng_type852) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v872 = 24ULL;
    __twr_v873 = _mng_matchtoken867 + __twr_v872;
    __twr_v874 = *(uint8_t*)(__twr_v873);
    __twr_v875 = 6ULL;
    if (__twr_v874 != __twr_v875) { goto __twr_l205; } else { goto __twr_l206; }
    __twr_l206:;
    __twr_v876 = 1ULL;
    __twr_v877 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v878 = *(uint32_t*)(__twr_v877);
    __twr_v879 = __twr_v878 - __twr_v876;
    *(uint32_t*)(__twr_v877) = __twr_v879;
    __twr_l205:;
    __twr_v880 = 0ULL;
    _jkl_retv = __twr_v880;
    goto _jkl_epilogue;
    __twr_l203:;
    if (!(_mng_subtype853)) { goto __twr_l208; } else { goto __twr_l209; }
    __twr_l209:;
    __twr_v881 = 25ULL;
    __twr_v882 = _mng_matchtoken867 + __twr_v881;
    __twr_v883 = *(uint8_t*)(__twr_v882);
    if (__twr_v883 != _mng_subtype853) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v884 = 1ULL;
    __twr_v885 = _mng_index856 - __twr_v884;
    __twr_v886 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v886) = __twr_v885;
    _jkl_retv = __twr_v884;
    goto _jkl_epilogue;
    __twr_l207:;
    __twr_v887 = 0ULL;
    _jkl_retv = __twr_v887;
    goto _jkl_epilogue;
    __twr_l198:;
    _jkl_epilogue:;
    return _jkl_retv;
}

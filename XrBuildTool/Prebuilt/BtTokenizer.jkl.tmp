#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str3);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr4, uint64_t _mng_sz5, uint64_t _mng_byte6);
extern void TlCopyMemory(uint64_t _mng_dest7, uint64_t _mng_src8, uint64_t _mng_sz9);
extern void TlPrintString(uint64_t _mng_str10);
extern void TlPrintNumber(uint64_t _mng_num11);
extern void TlPrintHex(uint64_t _mng_num12);
extern void TlPrintCharacter(uint64_t _mng_byte13);
extern void TlInternalError(uint64_t _mng_str14, uint64_t _mng_err115, uint64_t _mng_err216, uint64_t _mng_err317);
extern void TlUserError(uint64_t _mng_str18, uint64_t _mng_err119, uint64_t _mng_err220, uint64_t _mng_err321);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes22, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr24);
extern uint64_t TlCompareString(uint64_t _mng_str125, uint64_t _mng_str226);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str127, uint64_t _mng_str228, uint64_t _mng_count29);
extern void TlCopyString(uint64_t _mng_dest30, uint64_t _mng_src31, uint64_t _mng_bufsize32);
extern uint64_t TlOpenSource(uint64_t _mng_filename33, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle35);
extern uint64_t TlReadFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlWriteFile(uint64_t _mng_handle39, uint64_t _mng_bytes40, uint64_t _mng_buffer41);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable42);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable43);
extern void TlInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entry48, uint64_t _mng_key49);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable50, uint64_t _mng_entrysize51, uint64_t _mng_key52, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable53, uint64_t _mng_key54);
extern void TlRemoveHashTable(uint64_t _mng_entry55);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable56, uint64_t _mng_enumfunc57);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable58, uint64_t _mng_key59, uint64_t _mng_hash60);
extern uint64_t TlHashString(uint64_t _mng_str61);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable62, uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable67);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_name69);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_entry71, uint64_t _mng_name72);
extern void TlRemoveSymbolTable(uint64_t _mng_entry73);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array74);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlInsertDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_byte77);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_srcbuf79, uint64_t _mng_length80);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array81, uint64_t _mng_number82, uint64_t _mng_base83);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array84);
extern uint64_t TlMatchPath(uint64_t _mng_path85, uint64_t _mng_pathset86, uint64_t _mng_resultingpath87, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath88, uint64_t _mng_destpath89);
extern uint64_t TlGetFileName(uint64_t _mng_path90);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path91);
extern uint64_t TlPathExists(uint64_t _mng_path92);
extern uint64_t TlIterateDirectory(uint64_t _mng_path93, uint64_t _mng_callback94, uint64_t _mng_context95);
extern uint64_t TlGetPathExtension(uint64_t _mng_path96);
extern uint64_t TlStatFile(uint64_t _mng_path97, uint64_t _mng_statrecord98);
extern uint64_t TlCreateDirectory(uint64_t _mng_path99);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path100);
extern void TlInitializeZone(uint64_t _mng_zone101, uint64_t _mng_blocksize102);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone103);
extern void TlFreeToZone(uint64_t _mng_zone104, uint64_t _mng_block105);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant106);
extern void TlPunchValue(uint64_t _mng_ptr107, uint64_t _mng_value108, uint64_t _mng_bytes109);
extern uint64_t TlTokenize(uint64_t _mng_buffer110, uint64_t _mng_tokenbuffer111, uint64_t _mng_bufsize112, uint64_t _mng_delimiter113);
extern uint64_t TlStringToNumber(uint64_t _mng_src114, uint64_t _mng_bufsize115, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler116);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine117, uint64_t _mng_arg118, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread119);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex120);
extern void TlReleaseMutex(uint64_t _mng_mutex121);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue122);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore123);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore124);
extern uint64_t TlSystem(uint64_t _mng_cmdline125);
extern uint64_t TlCurrentEpochTime();
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg126);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename127, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock128, uint64_t _mng_filepath129);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope130);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg131);
extern void LexExpandMacro(uint64_t _mng_macro132, uint64_t _mng_token133);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream134, uint64_t _mng_macro135);
extern void LexUninitializeStream(uint64_t _mng_stream136);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream137);
extern void LexPushStream(uint64_t _mng_stream138);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream139, uint64_t _mng_fileblock140, uint64_t _mng_handle141);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock142, uint64_t _mng_handle143);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest144, uint64_t _mng_src145);
extern void LexGetToken(uint64_t _mng_token146);
extern void LexPutbackToken(uint64_t _mng_token147);
extern uint64_t LexMatchToken(uint64_t _mng_token148, uint64_t _mng_type149, uint64_t _mng_subtype150);
extern void LexStreamError(uint64_t _mng_str151, uint64_t _mng_err1152, uint64_t _mng_err2153, uint64_t _mng_err3154);
extern void LexTokenError(uint64_t _mng_token155, uint64_t _mng_str156, uint64_t _mng_err1157, uint64_t _mng_err2158, uint64_t _mng_err3159);
extern uint64_t LexCrunchNumber(uint64_t _mng_token160, uint64_t _mng_buffer161);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath162);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name163, uint64_t _mng_type164, uint64_t _mng_subtype165, uint64_t _mng_context166) {
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t _mng_keyword173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    __twr_v167 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v168 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v169 = *(uint64_t*)(__twr_v168);
    __twr_v170 = 56ULL;
    __twr_v171 = __twr_v169 * __twr_v170;
    __twr_v172 = __twr_v167 + __twr_v171;
    _mng_keyword173 = __twr_v172;
    __twr_v174 = 1ULL;
    __twr_v175 = __twr_v169 + __twr_v174;
    *(uint64_t*)(__twr_v168) = __twr_v175;
    __twr_v176 = 48ULL;
    __twr_v177 = _mng_keyword173 + __twr_v176;
    *(uint8_t*)(__twr_v177) = _mng_type164;
    __twr_v178 = 49ULL;
    __twr_v179 = _mng_keyword173 + __twr_v178;
    *(uint8_t*)(__twr_v179) = _mng_subtype165;
    __twr_v180 = 50ULL;
    __twr_v181 = _mng_keyword173 + __twr_v180;
    *(uint8_t*)(__twr_v181) = _mng_context166;
    __twr_v182 = (uint64_t)(&TlInsertHashTable);
    __twr_v183 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v182)(__twr_v183, _mng_keyword173, _mng_name163);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexPrintError(uint64_t _mng_filename184, uint64_t _mng_linenumber185, uint64_t _mng_linepos186, uint64_t _mng_str187, uint64_t _mng_err1188, uint64_t _mng_err2189, uint64_t _mng_err3190) {
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    __twr_v191 = (uint64_t)(&TlPrintString);
    ((void (*)(uint64_t))__twr_v191)(_mng_filename184);
    __twr_v192 = (uint64_t)(&":");
    ((void (*)(uint64_t))__twr_v191)(__twr_v192);
    __twr_v193 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v193)(_mng_linenumber185);
    __twr_v194 = (uint64_t)(&":");
    ((void (*)(uint64_t))__twr_v191)(__twr_v194);
    ((void (*)(uint64_t))__twr_v193)(_mng_linepos186);
    __twr_v195 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v191)(__twr_v195);
    ((void (*)(uint64_t))__twr_v191)(_mng_str187);
    __twr_v196 = (uint64_t)(&" (");
    ((void (*)(uint64_t))__twr_v191)(__twr_v196);
    ((void (*)(uint64_t))__twr_v193)(_mng_err1188);
    __twr_v197 = (uint64_t)(&" ");
    ((void (*)(uint64_t))__twr_v191)(__twr_v197);
    ((void (*)(uint64_t))__twr_v193)(_mng_err2189);
    __twr_v198 = (uint64_t)(&" ");
    ((void (*)(uint64_t))__twr_v191)(__twr_v198);
    ((void (*)(uint64_t))__twr_v193)(_mng_err3190);
    __twr_v199 = (uint64_t)(&")\n");
    ((void (*)(uint64_t))__twr_v191)(__twr_v199);
    __twr_v200 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v200)();
    __twr_l2:;
    _jkl_epilogue:;
}
void LexStreamError(uint64_t _mng_str201, uint64_t _mng_err1202, uint64_t _mng_err2203, uint64_t _mng_err3204) {
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t _mng_stream207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    __twr_v205 = (uint64_t)(&LexCurrentStream);
    __twr_v206 = *(uint64_t*)(__twr_v205);
    _mng_stream207 = __twr_v206;
    __twr_v208 = (uint64_t)(&LexPrintError);
    __twr_v209 = 8ULL;
    __twr_v210 = _mng_stream207 + __twr_v209;
    __twr_v211 = *(uint64_t*)(__twr_v210);
    __twr_v212 = 304ULL;
    __twr_v213 = __twr_v211 + __twr_v212;
    __twr_v214 = 44ULL;
    __twr_v215 = _mng_stream207 + __twr_v214;
    __twr_v216 = *(uint32_t*)(__twr_v215);
    __twr_v217 = 48ULL;
    __twr_v218 = _mng_stream207 + __twr_v217;
    __twr_v219 = *(uint32_t*)(__twr_v218);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v208)(__twr_v213, __twr_v216, __twr_v219, _mng_str201, _mng_err1202, _mng_err2203, _mng_err3204);
    __twr_l3:;
    _jkl_epilogue:;
}
void LexTokenError(uint64_t _mng_token220, uint64_t _mng_str221, uint64_t _mng_err1222, uint64_t _mng_err2223, uint64_t _mng_err3224) {
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    __twr_v225 = (uint64_t)(&LexPrintError);
    __twr_v226 = 8ULL;
    __twr_v227 = _mng_token220 + __twr_v226;
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = 304ULL;
    __twr_v230 = __twr_v228 + __twr_v229;
    __twr_v231 = 16ULL;
    __twr_v232 = _mng_token220 + __twr_v231;
    __twr_v233 = *(uint32_t*)(__twr_v232);
    __twr_v234 = 20ULL;
    __twr_v235 = _mng_token220 + __twr_v234;
    __twr_v236 = *(uint32_t*)(__twr_v235);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v225)(__twr_v230, __twr_v233, __twr_v236, _mng_str221, _mng_err1222, _mng_err2223, _mng_err3224);
    __twr_l4:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t _mng_dumpster242;
    uint64_t _mng_fileblock243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t _mng_filestream250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    __twr_v237 = (uint64_t)(&FeCreateFileBlock);
    __twr_v238 = (uint64_t)(&FeInputFile);
    __twr_v239 = 0ULL;
    __twr_v240 = 1ULL;
    __twr_v241 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v237)(__twr_v238, (uint64_t)(&_mng_dumpster242));
    _mng_fileblock243 = __twr_v241;
    __twr_v244 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v244)(_mng_fileblock243, __twr_v238);
    __twr_v245 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v245)();
    __twr_v246 = (uint64_t)(&LexCreateFileStream);
    __twr_v247 = (uint64_t)(&FeInputFileHandle);
    __twr_v248 = *(uint64_t*)(__twr_v247);
    __twr_v249 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v246)(_mng_fileblock243, __twr_v248);
    _mng_filestream250 = __twr_v249;
    __twr_v251 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v251)(_mng_filestream250);
    __twr_v252 = (uint64_t)(&TlInitializeZone);
    __twr_v253 = (uint64_t)(&LexInternedStringZone);
    __twr_v254 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v252)(__twr_v253, __twr_v254);
    __twr_v255 = (uint64_t)(&TlInitializeHashTable);
    __twr_v256 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v255)(__twr_v256);
    __twr_v257 = (uint64_t)(&LexInsertKeyword);
    __twr_v258 = (uint64_t)(&"END");
    __twr_v259 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v258, __twr_v259, __twr_v239, __twr_v239);
    __twr_v260 = (uint64_t)(&"TARGET");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v260, __twr_v240, __twr_v239, __twr_v239);
    __twr_v261 = (uint64_t)(&"FILE");
    __twr_v262 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v261, __twr_v262, __twr_v239, __twr_v239);
    __twr_v263 = (uint64_t)(&"DEPEND");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v263, __twr_v262, __twr_v240, __twr_v239);
    __twr_v264 = (uint64_t)(&"SOURCES");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v264, __twr_v262, __twr_v262, __twr_v239);
    __twr_v265 = (uint64_t)(&"INCDIR");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v265, __twr_v262, __twr_v259, __twr_v239);
    __twr_v266 = (uint64_t)(&"LIBDIR");
    __twr_v267 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v266, __twr_v262, __twr_v267, __twr_v239);
    __twr_v268 = (uint64_t)(&"LINKOPT");
    __twr_v269 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v268, __twr_v262, __twr_v269, __twr_v239);
    __twr_v270 = (uint64_t)(&"JKLOPT");
    __twr_v271 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v270, __twr_v262, __twr_v271, __twr_v239);
    __twr_v272 = (uint64_t)(&"LINK");
    __twr_v273 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v272, __twr_v262, __twr_v273, __twr_v239);
    __twr_v274 = (uint64_t)(&"DYLINK");
    __twr_v275 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v274, __twr_v262, __twr_v275, __twr_v239);
    __twr_v276 = (uint64_t)(&"PREBUILT");
    __twr_v277 = 9ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v276, __twr_v262, __twr_v277, __twr_v239);
    __twr_v278 = (uint64_t)(&"OBJECTS");
    __twr_v279 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v278, __twr_v262, __twr_v279, __twr_v239);
    __twr_l5:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t _mng_byte283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t _mng_nextbyte328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    _mng_comment280 = 0ULL;
    __twr_l7:;
    __twr_v281 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v282 = ((uint64_t (*)())__twr_v281)();
    _mng_byte283 = __twr_v282;
    if (_mng_byte283) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    goto __twr_l8;
    __twr_l9:;
    if (!(_mng_comment280)) { goto __twr_l13; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v284 = 10ULL;
    if (_mng_byte283 == __twr_v284) { goto __twr_l14; } else { goto __twr_l15; }
    __twr_l15:;
    goto __twr_l7;
    __twr_l14:;
    _mng_comment280 = 0ULL;
    goto __twr_l11;
    __twr_l13:;
    __twr_v285 = (uint64_t)(&LexCurrentStream);
    __twr_v286 = *(uint64_t*)(__twr_v285);
    __twr_v287 = 80ULL;
    __twr_v288 = __twr_v286 + __twr_v287;
    __twr_v289 = *(uint8_t*)(__twr_v288);
    if (!(__twr_v289)) { goto __twr_l17; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v290 = 0ULL;
    __twr_v291 = (uint64_t)(&LexCurrentStream);
    __twr_v292 = *(uint64_t*)(__twr_v291);
    __twr_v293 = 80ULL;
    __twr_v294 = __twr_v292 + __twr_v293;
    *(uint8_t*)(__twr_v294) = __twr_v290;
    goto __twr_l11;
    __twr_l17:;
    __twr_v295 = 92ULL;
    if (_mng_byte283 != __twr_v295) { goto __twr_l19; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v296 = 1ULL;
    __twr_v297 = (uint64_t)(&LexCurrentStream);
    __twr_v298 = *(uint64_t*)(__twr_v297);
    __twr_v299 = 80ULL;
    __twr_v300 = __twr_v298 + __twr_v299;
    *(uint8_t*)(__twr_v300) = __twr_v296;
    goto __twr_l11;
    __twr_l19:;
    __twr_v301 = (uint64_t)(&LexCurrentStream);
    __twr_v302 = *(uint64_t*)(__twr_v301);
    __twr_v303 = 81ULL;
    __twr_v304 = __twr_v302 + __twr_v303;
    __twr_v305 = *(uint8_t*)(__twr_v304);
    if (!(__twr_v305)) { goto __twr_l21; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v306 = 34ULL;
    __twr_v307 = (_mng_byte283 == __twr_v306);
    __twr_v308 = !__twr_v307;
    __twr_v309 = (uint64_t)(&LexCurrentStream);
    __twr_v310 = *(uint64_t*)(__twr_v309);
    __twr_v311 = 81ULL;
    __twr_v312 = __twr_v310 + __twr_v311;
    *(uint8_t*)(__twr_v312) = __twr_v308;
    goto __twr_l11;
    __twr_l21:;
    __twr_v313 = (uint64_t)(&LexCurrentStream);
    __twr_v314 = *(uint64_t*)(__twr_v313);
    __twr_v315 = 82ULL;
    __twr_v316 = __twr_v314 + __twr_v315;
    __twr_v317 = *(uint8_t*)(__twr_v316);
    if (!(__twr_v317)) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v318 = 39ULL;
    __twr_v319 = (_mng_byte283 == __twr_v318);
    __twr_v320 = !__twr_v319;
    __twr_v321 = (uint64_t)(&LexCurrentStream);
    __twr_v322 = *(uint64_t*)(__twr_v321);
    __twr_v323 = 82ULL;
    __twr_v324 = __twr_v322 + __twr_v323;
    *(uint8_t*)(__twr_v324) = __twr_v320;
    goto __twr_l11;
    __twr_l23:;
    __twr_v325 = 47ULL;
    if (_mng_byte283 != __twr_v325) { goto __twr_l25; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v326 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v327 = ((uint64_t (*)())__twr_v326)();
    _mng_nextbyte328 = __twr_v327;
    __twr_v329 = 47ULL;
    if (_mng_nextbyte328 != __twr_v329) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    _mng_comment280 = 1ULL;
    goto __twr_l7;
    __twr_l26:;
    __twr_v330 = (uint64_t)(&LexCurrentStream);
    __twr_v331 = *(uint64_t*)(__twr_v330);
    __twr_v332 = 83ULL;
    __twr_v333 = __twr_v331 + __twr_v332;
    *(uint8_t*)(__twr_v333) = _mng_nextbyte328;
    goto __twr_l11;
    __twr_l25:;
    __twr_v334 = 34ULL;
    if (_mng_byte283 != __twr_v334) { goto __twr_l29; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v335 = 1ULL;
    __twr_v336 = (uint64_t)(&LexCurrentStream);
    __twr_v337 = *(uint64_t*)(__twr_v336);
    __twr_v338 = 81ULL;
    __twr_v339 = __twr_v337 + __twr_v338;
    *(uint8_t*)(__twr_v339) = __twr_v335;
    goto __twr_l11;
    __twr_l29:;
    __twr_v340 = 39ULL;
    if (_mng_byte283 != __twr_v340) { goto __twr_l31; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v341 = 1ULL;
    __twr_v342 = (uint64_t)(&LexCurrentStream);
    __twr_v343 = *(uint64_t*)(__twr_v342);
    __twr_v344 = 82ULL;
    __twr_v345 = __twr_v343 + __twr_v344;
    *(uint8_t*)(__twr_v345) = __twr_v341;
    goto __twr_l11;
    __twr_l31:;
    __twr_v346 = 35ULL;
    if (_mng_byte283 != __twr_v346) { goto __twr_l11; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v347 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v347)();
    _mng_byte283 = 10ULL;
    __twr_l11:;
    __twr_v348 = (uint64_t)(&LexFalseCount);
    __twr_v349 = *(uint32_t*)(__twr_v348);
    if (!(__twr_v349)) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    goto __twr_l7;
    __twr_l33:;
    goto __twr_l8;
    goto __twr_l7;
    __twr_l8:;
    _jkl_retv = _mng_byte283;
    goto _jkl_epilogue;
    __twr_l6:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token350, uint64_t _mng_terminator351, uint64_t _mng_dynamicbuffer352, uint64_t _mng_buffer353, uint64_t _mng_o_length) {
    uint64_t _mng_len354;
    uint64_t _mng_isbackslash355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t _mng_byte358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t _mng_length380;
    _mng_len354 = 0ULL;
    _mng_isbackslash355 = 0ULL;
    __twr_l36:;
    __twr_v356 = (uint64_t)(&LexGetCharacter);
    __twr_v357 = ((uint64_t (*)())__twr_v356)();
    _mng_byte358 = __twr_v357;
    if (_mng_byte358) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v359 = (uint64_t)(&LexTokenError);
    __twr_v360 = (uint64_t)(&"String token terminated by EOF!");
    __twr_v361 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v359)(_mng_token350, __twr_v360, __twr_v361, __twr_v361, __twr_v361);
    __twr_l38:;
    if (_mng_isbackslash355) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    if (_mng_byte358 != _mng_terminator351) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    goto __twr_l37;
    goto __twr_l43;
    __twr_l45:;
    __twr_v362 = 92ULL;
    if (_mng_byte358 != __twr_v362) { goto __twr_l43; } else { goto __twr_l46; }
    __twr_l46:;
    _mng_isbackslash355 = 1ULL;
    goto __twr_l36;
    __twr_l43:;
    goto __twr_l40;
    __twr_l42:;
    _mng_isbackslash355 = 0ULL;
    __twr_v363 = 110ULL;
    if (_mng_byte358 != __twr_v363) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    _mng_byte358 = 10ULL;
    goto __twr_l47;
    __twr_l49:;
    __twr_v364 = 116ULL;
    if (_mng_byte358 != __twr_v364) { goto __twr_l51; } else { goto __twr_l50; }
    __twr_l50:;
    _mng_byte358 = 9ULL;
    goto __twr_l47;
    __twr_l51:;
    __twr_v365 = 114ULL;
    if (_mng_byte358 != __twr_v365) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    _mng_byte358 = 13ULL;
    goto __twr_l47;
    __twr_l53:;
    __twr_v366 = 98ULL;
    if (_mng_byte358 != __twr_v366) { goto __twr_l55; } else { goto __twr_l54; }
    __twr_l54:;
    _mng_byte358 = 8ULL;
    goto __twr_l47;
    __twr_l55:;
    __twr_v367 = 91ULL;
    if (_mng_byte358 != __twr_v367) { goto __twr_l47; } else { goto __twr_l56; }
    __twr_l56:;
    _mng_byte358 = 27ULL;
    __twr_l47:;
    __twr_l40:;
    if (!(_mng_dynamicbuffer352)) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v368 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v368)(_mng_dynamicbuffer352, _mng_byte358);
    goto __twr_l57;
    __twr_l59:;
    __twr_v369 = 127ULL;
    if (_mng_len354 != __twr_v369) { goto __twr_l61; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v370 = (uint64_t)(&LexTokenError);
    __twr_v371 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v372 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v370)(_mng_token350, __twr_v371, __twr_v372, __twr_v372, __twr_v372);
    goto __twr_l57;
    __twr_l61:;
    __twr_v373 = 1ULL;
    __twr_v374 = _mng_buffer353 + _mng_len354;
    *(uint8_t*)(__twr_v374) = _mng_byte358;
    __twr_v375 = _mng_len354 + __twr_v373;
    _mng_len354 = __twr_v375;
    __twr_l57:;
    goto __twr_l36;
    __twr_l37:;
    if (!(_mng_dynamicbuffer352)) { goto __twr_l64; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v376 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v377 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v376)(_mng_dynamicbuffer352, __twr_v377);
    goto __twr_l62;
    __twr_l64:;
    __twr_v378 = 0ULL;
    __twr_v379 = _mng_buffer353 + _mng_len354;
    *(uint8_t*)(__twr_v379) = __twr_v378;
    _mng_length380 = _mng_len354;
    __twr_l62:;
    __twr_l35:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length380;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token381, uint64_t _mng_buffer382) {
    uint64_t _jkl_retv;
    uint64_t _mng_num383;
    uint64_t _mng_i384;
    uint64_t __twr_v385;
    uint64_t _mng_lastnum386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    _mng_num383 = 0ULL;
    _mng_i384 = 0ULL;
    __twr_v385 = *(uint8_t*)(_mng_buffer382);
    if (!(__twr_v385)) { goto __twr_l67; } else { goto __twr_l66; }
    __twr_l66:;
    _mng_lastnum386 = _mng_num383;
    __twr_v387 = 8ULL;
    __twr_v388 = _mng_num383 << __twr_v387;
    _mng_num383 = __twr_v388;
    if (!(_mng_lastnum386)) { goto __twr_l69; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v389 = _mng_num383 / _mng_lastnum386;
    __twr_v390 = 256ULL;
    if (__twr_v389 == __twr_v390) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v391 = (uint64_t)(&LexTokenError);
    __twr_v392 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v393 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v391)(_mng_token381, __twr_v392, __twr_v393, __twr_v393, __twr_v393);
    __twr_l69:;
    __twr_v394 = _mng_buffer382 + _mng_i384;
    __twr_v395 = *(uint8_t*)(__twr_v394);
    __twr_v396 = _mng_num383 + __twr_v395;
    _mng_num383 = __twr_v396;
    if (_mng_num383 >= _mng_lastnum386) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v397 = (uint64_t)(&LexTokenError);
    __twr_v398 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v399 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v397)(_mng_token381, __twr_v398, __twr_v399, __twr_v399, __twr_v399);
    __twr_l72:;
    __twr_v400 = 1ULL;
    __twr_v401 = _mng_i384 + __twr_v400;
    _mng_i384 = __twr_v401;
    __twr_l68:;
    __twr_v402 = _mng_buffer382 + _mng_i384;
    __twr_v403 = *(uint8_t*)(__twr_v402);
    if (__twr_v403) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    _jkl_retv = _mng_num383;
    goto _jkl_epilogue;
    __twr_l65:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token404, uint64_t _mng_buffer405) {
    uint64_t _jkl_retv;
    uint64_t _mng_num406;
    uint64_t _mng_i407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t _mng_lastnum427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t _mng_lastnum490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t _mng_lastnum521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    _mng_num406 = 0ULL;
    _mng_i407 = 0ULL;
    __twr_v408 = *(uint8_t*)(_mng_buffer405);
    __twr_v409 = 48ULL;
    if (__twr_v408 != __twr_v409) { goto __twr_l75; } else { goto __twr_l76; }
    __twr_l76:;
    __twr_v410 = 1ULL;
    __twr_v411 = _mng_buffer405 + __twr_v410;
    __twr_v412 = *(uint8_t*)(__twr_v411);
    if (__twr_v412) { goto __twr_l77; } else { goto __twr_l78; }
    __twr_l78:;
    __twr_v413 = 0ULL;
    _jkl_retv = __twr_v413;
    goto _jkl_epilogue;
    __twr_l77:;
    __twr_v414 = 1ULL;
    __twr_v415 = _mng_buffer405 + __twr_v414;
    __twr_v416 = *(uint8_t*)(__twr_v415);
    __twr_v417 = 120ULL;
    if (__twr_v416 != __twr_v417) { goto __twr_l79; } else { goto __twr_l80; }
    __twr_l80:;
    __twr_v418 = 2ULL;
    __twr_v419 = _mng_buffer405 + __twr_v418;
    __twr_v420 = *(uint8_t*)(__twr_v419);
    if (__twr_v420) { goto __twr_l81; } else { goto __twr_l82; }
    __twr_l82:;
    __twr_v421 = (uint64_t)(&LexTokenError);
    __twr_v422 = (uint64_t)(&"Unfinished hex number.");
    __twr_v423 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v421)(_mng_token404, __twr_v422, __twr_v423, __twr_v423, __twr_v423);
    __twr_l81:;
    _mng_i407 = 2ULL;
    __twr_v424 = 2ULL;
    __twr_v425 = _mng_buffer405 + __twr_v424;
    __twr_v426 = *(uint8_t*)(__twr_v425);
    if (!(__twr_v426)) { goto __twr_l84; } else { goto __twr_l83; }
    __twr_l83:;
    _mng_lastnum427 = _mng_num406;
    __twr_v428 = 4ULL;
    __twr_v429 = _mng_num406 << __twr_v428;
    _mng_num406 = __twr_v429;
    if (!(_mng_lastnum427)) { goto __twr_l86; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v430 = _mng_num406 / _mng_lastnum427;
    __twr_v431 = 16ULL;
    if (__twr_v430 == __twr_v431) { goto __twr_l86; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v432 = (uint64_t)(&LexTokenError);
    __twr_v433 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v434 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v432)(_mng_token404, __twr_v433, __twr_v434, __twr_v434, __twr_v434);
    __twr_l86:;
    __twr_v435 = _mng_buffer405 + _mng_i407;
    __twr_v436 = *(uint8_t*)(__twr_v435);
    __twr_v437 = 48ULL;
    if (__twr_v436 < __twr_v437) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v438 = _mng_buffer405 + _mng_i407;
    __twr_v439 = *(uint8_t*)(__twr_v438);
    __twr_v440 = 57ULL;
    if (__twr_v439 > __twr_v440) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    __twr_v441 = _mng_buffer405 + _mng_i407;
    __twr_v442 = *(uint8_t*)(__twr_v441);
    __twr_v443 = 48ULL;
    __twr_v444 = __twr_v442 - __twr_v443;
    __twr_v445 = _mng_num406 + __twr_v444;
    _mng_num406 = __twr_v445;
    goto __twr_l89;
    __twr_l91:;
    __twr_v446 = _mng_buffer405 + _mng_i407;
    __twr_v447 = *(uint8_t*)(__twr_v446);
    __twr_v448 = 65ULL;
    if (__twr_v447 < __twr_v448) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v449 = _mng_buffer405 + _mng_i407;
    __twr_v450 = *(uint8_t*)(__twr_v449);
    __twr_v451 = 70ULL;
    if (__twr_v450 > __twr_v451) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v452 = _mng_buffer405 + _mng_i407;
    __twr_v453 = *(uint8_t*)(__twr_v452);
    __twr_v454 = 55ULL;
    __twr_v455 = __twr_v453 - __twr_v454;
    __twr_v456 = _mng_num406 + __twr_v455;
    _mng_num406 = __twr_v456;
    goto __twr_l89;
    __twr_l94:;
    __twr_v457 = _mng_buffer405 + _mng_i407;
    __twr_v458 = *(uint8_t*)(__twr_v457);
    __twr_v459 = 97ULL;
    if (__twr_v458 < __twr_v459) { goto __twr_l97; } else { goto __twr_l98; }
    __twr_l98:;
    __twr_v460 = _mng_buffer405 + _mng_i407;
    __twr_v461 = *(uint8_t*)(__twr_v460);
    __twr_v462 = 102ULL;
    if (__twr_v461 > __twr_v462) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v463 = _mng_buffer405 + _mng_i407;
    __twr_v464 = *(uint8_t*)(__twr_v463);
    __twr_v465 = 87ULL;
    __twr_v466 = __twr_v464 - __twr_v465;
    __twr_v467 = _mng_num406 + __twr_v466;
    _mng_num406 = __twr_v467;
    goto __twr_l89;
    __twr_l97:;
    __twr_v468 = (uint64_t)(&LexTokenError);
    __twr_v469 = (uint64_t)(&"Malformed hex number.");
    __twr_v470 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v468)(_mng_token404, __twr_v469, __twr_v470, __twr_v470, __twr_v470);
    __twr_l89:;
    if (_mng_num406 >= _mng_lastnum427) { goto __twr_l99; } else { goto __twr_l100; }
    __twr_l100:;
    __twr_v471 = (uint64_t)(&LexTokenError);
    __twr_v472 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v473 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v471)(_mng_token404, __twr_v472, __twr_v473, __twr_v473, __twr_v473);
    __twr_l99:;
    __twr_v474 = 1ULL;
    __twr_v475 = _mng_i407 + __twr_v474;
    _mng_i407 = __twr_v475;
    __twr_l85:;
    __twr_v476 = _mng_buffer405 + _mng_i407;
    __twr_v477 = *(uint8_t*)(__twr_v476);
    if (__twr_v477) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    _jkl_retv = _mng_num406;
    goto _jkl_epilogue;
    __twr_l79:;
    _mng_i407 = 1ULL;
    __twr_v478 = 1ULL;
    __twr_v479 = _mng_buffer405 + __twr_v478;
    __twr_v480 = *(uint8_t*)(__twr_v479);
    if (!(__twr_v480)) { goto __twr_l102; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v481 = _mng_buffer405 + _mng_i407;
    __twr_v482 = *(uint8_t*)(__twr_v481);
    __twr_v483 = 48ULL;
    if (__twr_v482 < __twr_v483) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v484 = _mng_buffer405 + _mng_i407;
    __twr_v485 = *(uint8_t*)(__twr_v484);
    __twr_v486 = 55ULL;
    if (__twr_v485 <= __twr_v486) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v487 = (uint64_t)(&LexTokenError);
    __twr_v488 = (uint64_t)(&"Malformed octal number.");
    __twr_v489 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v487)(_mng_token404, __twr_v488, __twr_v489, __twr_v489, __twr_v489);
    __twr_l104:;
    _mng_lastnum490 = _mng_num406;
    __twr_v491 = 3ULL;
    __twr_v492 = _mng_num406 << __twr_v491;
    _mng_num406 = __twr_v492;
    if (!(_mng_lastnum490)) { goto __twr_l107; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v493 = _mng_num406 / _mng_lastnum490;
    __twr_v494 = 8ULL;
    if (__twr_v493 == __twr_v494) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v495 = (uint64_t)(&LexTokenError);
    __twr_v496 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v497 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v495)(_mng_token404, __twr_v496, __twr_v497, __twr_v497, __twr_v497);
    __twr_l107:;
    __twr_v498 = _mng_buffer405 + _mng_i407;
    __twr_v499 = *(uint8_t*)(__twr_v498);
    __twr_v500 = 48ULL;
    __twr_v501 = __twr_v499 - __twr_v500;
    __twr_v502 = _mng_num406 + __twr_v501;
    _mng_num406 = __twr_v502;
    if (_mng_num406 >= _mng_lastnum490) { goto __twr_l110; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v503 = (uint64_t)(&LexTokenError);
    __twr_v504 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v505 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v503)(_mng_token404, __twr_v504, __twr_v505, __twr_v505, __twr_v505);
    __twr_l110:;
    __twr_v506 = 1ULL;
    __twr_v507 = _mng_i407 + __twr_v506;
    _mng_i407 = __twr_v507;
    __twr_l103:;
    __twr_v508 = _mng_buffer405 + _mng_i407;
    __twr_v509 = *(uint8_t*)(__twr_v508);
    if (__twr_v509) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    _jkl_retv = _mng_num406;
    goto _jkl_epilogue;
    __twr_l75:;
    __twr_v510 = _mng_buffer405 + _mng_i407;
    __twr_v511 = *(uint8_t*)(__twr_v510);
    if (!(__twr_v511)) { goto __twr_l113; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v512 = _mng_buffer405 + _mng_i407;
    __twr_v513 = *(uint8_t*)(__twr_v512);
    __twr_v514 = 48ULL;
    if (__twr_v513 < __twr_v514) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v515 = _mng_buffer405 + _mng_i407;
    __twr_v516 = *(uint8_t*)(__twr_v515);
    __twr_v517 = 57ULL;
    if (__twr_v516 <= __twr_v517) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v518 = (uint64_t)(&LexTokenError);
    __twr_v519 = (uint64_t)(&"Malformed decimal number.");
    __twr_v520 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v518)(_mng_token404, __twr_v519, __twr_v520, __twr_v520, __twr_v520);
    __twr_l115:;
    _mng_lastnum521 = _mng_num406;
    __twr_v522 = 10ULL;
    __twr_v523 = _mng_num406 * __twr_v522;
    _mng_num406 = __twr_v523;
    if (!(_mng_lastnum521)) { goto __twr_l118; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v524 = _mng_num406 / _mng_lastnum521;
    __twr_v525 = 10ULL;
    if (__twr_v524 == __twr_v525) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v526 = (uint64_t)(&LexTokenError);
    __twr_v527 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v528 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v526)(_mng_token404, __twr_v527, __twr_v528, __twr_v528, __twr_v528);
    __twr_l118:;
    __twr_v529 = _mng_buffer405 + _mng_i407;
    __twr_v530 = *(uint8_t*)(__twr_v529);
    __twr_v531 = 48ULL;
    __twr_v532 = __twr_v530 - __twr_v531;
    __twr_v533 = _mng_num406 + __twr_v532;
    _mng_num406 = __twr_v533;
    if (_mng_num406 >= _mng_lastnum521) { goto __twr_l121; } else { goto __twr_l122; }
    __twr_l122:;
    __twr_v534 = (uint64_t)(&LexTokenError);
    __twr_v535 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v536 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v534)(_mng_token404, __twr_v535, __twr_v536, __twr_v536, __twr_v536);
    __twr_l121:;
    __twr_v537 = 1ULL;
    __twr_v538 = _mng_i407 + __twr_v537;
    _mng_i407 = __twr_v538;
    __twr_l114:;
    __twr_v539 = _mng_buffer405 + _mng_i407;
    __twr_v540 = *(uint8_t*)(__twr_v539);
    if (__twr_v540) { goto __twr_l112; } else { goto __twr_l113; }
    __twr_l113:;
    _jkl_retv = _mng_num406;
    goto _jkl_epilogue;
    __twr_l74:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token541, uint64_t _mng_buffer542, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t _mng_stream546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t _mng_byte563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t _mng_internedstring595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t _mng_dynamicbuffer598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t _mng_dumpster603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t _mng_len622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t _mng_uppercaseonly654;
    uint64_t _mng_len655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t _mng_macro694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    __twr_lLoopOnMacro:;
    _mng_length543 = 0ULL;
    __twr_v544 = (uint64_t)(&LexCurrentStream);
    __twr_v545 = *(uint64_t*)(__twr_v544);
    _mng_stream546 = __twr_v545;
    if (!(_mng_stream546)) { goto __twr_l125; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v547 = 8ULL;
    __twr_v548 = _mng_stream546 + __twr_v547;
    __twr_v549 = *(uint64_t*)(__twr_v548);
    __twr_v550 = _mng_token541 + __twr_v547;
    *(uint64_t*)(__twr_v550) = __twr_v549;
    __twr_v551 = 44ULL;
    __twr_v552 = _mng_stream546 + __twr_v551;
    __twr_v553 = *(uint32_t*)(__twr_v552);
    __twr_v554 = 16ULL;
    __twr_v555 = _mng_token541 + __twr_v554;
    *(uint32_t*)(__twr_v555) = __twr_v553;
    __twr_v556 = 48ULL;
    __twr_v557 = _mng_stream546 + __twr_v556;
    __twr_v558 = *(uint32_t*)(__twr_v557);
    __twr_v559 = 20ULL;
    __twr_v560 = _mng_token541 + __twr_v559;
    *(uint32_t*)(__twr_v560) = __twr_v558;
    __twr_l125:;
    __twr_v561 = (uint64_t)(&LexGetCharacter);
    __twr_v562 = ((uint64_t (*)())__twr_v561)();
    _mng_byte563 = __twr_v562;
    __twr_v564 = (uint64_t)(&LexCharTreatment);
    __twr_v565 = __twr_v564 + _mng_byte563;
    __twr_v566 = *(uint8_t*)(__twr_v565);
    __twr_v567 = 3ULL;
    if (__twr_v566 != __twr_v567) { goto __twr_l128; } else { goto __twr_l127; }
    __twr_l127:;
    __twr_v568 = (uint64_t)(&LexCurrentStream);
    __twr_v569 = *(uint64_t*)(__twr_v568);
    _mng_stream546 = __twr_v569;
    if (!(_mng_stream546)) { goto __twr_l130; } else { goto __twr_l131; }
    __twr_l131:;
    __twr_v570 = 8ULL;
    __twr_v571 = _mng_stream546 + __twr_v570;
    __twr_v572 = *(uint64_t*)(__twr_v571);
    __twr_v573 = _mng_token541 + __twr_v570;
    *(uint64_t*)(__twr_v573) = __twr_v572;
    __twr_v574 = 44ULL;
    __twr_v575 = _mng_stream546 + __twr_v574;
    __twr_v576 = *(uint32_t*)(__twr_v575);
    __twr_v577 = 16ULL;
    __twr_v578 = _mng_token541 + __twr_v577;
    *(uint32_t*)(__twr_v578) = __twr_v576;
    __twr_v579 = 48ULL;
    __twr_v580 = _mng_stream546 + __twr_v579;
    __twr_v581 = *(uint32_t*)(__twr_v580);
    __twr_v582 = 20ULL;
    __twr_v583 = _mng_token541 + __twr_v582;
    *(uint32_t*)(__twr_v583) = __twr_v581;
    __twr_l130:;
    __twr_v584 = (uint64_t)(&LexGetCharacter);
    __twr_v585 = ((uint64_t (*)())__twr_v584)();
    _mng_byte563 = __twr_v585;
    __twr_l129:;
    __twr_v586 = (uint64_t)(&LexCharTreatment);
    __twr_v587 = __twr_v586 + _mng_byte563;
    __twr_v588 = *(uint8_t*)(__twr_v587);
    __twr_v589 = 3ULL;
    if (__twr_v588 == __twr_v589) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    if (_mng_byte563) { goto __twr_l132; } else { goto __twr_l133; }
    __twr_l133:;
    __twr_v590 = 0ULL;
    _jkl_retv = __twr_v590;
    goto _jkl_epilogue;
    __twr_l132:;
    __twr_v591 = 34ULL;
    if (_mng_byte563 != __twr_v591) { goto __twr_l134; } else { goto __twr_l135; }
    __twr_l135:;
    __twr_v592 = (uint64_t)(&TlAllocateFromZone);
    __twr_v593 = (uint64_t)(&LexInternedStringZone);
    __twr_v594 = ((uint64_t (*)(uint64_t))__twr_v592)(__twr_v593);
    _mng_internedstring595 = __twr_v594;
    __twr_v596 = 48ULL;
    __twr_v597 = _mng_internedstring595 + __twr_v596;
    _mng_dynamicbuffer598 = __twr_v597;
    __twr_v599 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v599)(_mng_dynamicbuffer598);
    __twr_v600 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v601 = 34ULL;
    __twr_v602 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v600)(_mng_token541, __twr_v601, _mng_dynamicbuffer598, __twr_v602, (uint64_t)(&_mng_dumpster603));
    __twr_v604 = 4ULL;
    _jkl_retv = __twr_v604;
    goto _jkl_epilogue;
    __twr_l134:;
    __twr_v605 = 39ULL;
    if (_mng_byte563 != __twr_v605) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v606 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v607 = 39ULL;
    __twr_v608 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v606)(_mng_token541, __twr_v607, __twr_v608, _mng_buffer542, (uint64_t)(&_mng_length543));
    __twr_v609 = 8ULL;
    _jkl_retv = __twr_v609;
    goto _jkl_epilogue;
    __twr_l136:;
    __twr_v610 = (uint64_t)(&LexCharTreatment);
    __twr_v611 = 1ULL;
    __twr_v612 = __twr_v610 + _mng_byte563;
    __twr_v613 = *(uint8_t*)(__twr_v612);
    if (__twr_v613 != __twr_v611) { goto __twr_l138; } else { goto __twr_l139; }
    __twr_l139:;
    _mng_length543 = 1ULL;
    __twr_v614 = 0ULL;
    __twr_v615 = 1ULL;
    *(uint8_t*)(_mng_buffer542) = _mng_byte563;
    __twr_v616 = 1ULL;
    __twr_v617 = _mng_buffer542 + __twr_v616;
    *(uint8_t*)(__twr_v617) = __twr_v614;
    _jkl_retv = __twr_v615;
    goto _jkl_epilogue;
    __twr_l138:;
    __twr_v618 = (uint64_t)(&LexCharTreatment);
    __twr_v619 = __twr_v618 + _mng_byte563;
    __twr_v620 = *(uint8_t*)(__twr_v619);
    __twr_v621 = 2ULL;
    if (__twr_v620 != __twr_v621) { goto __twr_l140; } else { goto __twr_l141; }
    __twr_l141:;
    _mng_len622 = 0ULL;
    __twr_v623 = (uint64_t)(&LexCharTreatment);
    __twr_v624 = __twr_v623 + _mng_byte563;
    __twr_v625 = *(uint8_t*)(__twr_v624);
    __twr_v626 = 2ULL;
    if (__twr_v625 != __twr_v626) { goto __twr_l143; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v627 = 127ULL;
    if (_mng_len622 != __twr_v627) { goto __twr_l145; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v628 = (uint64_t)(&LexTokenError);
    __twr_v629 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v630 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v628)(_mng_token541, __twr_v629, __twr_v630, __twr_v630, __twr_v630);
    __twr_l145:;
    __twr_v631 = 1ULL;
    __twr_v632 = _mng_buffer542 + _mng_len622;
    *(uint8_t*)(__twr_v632) = _mng_byte563;
    __twr_v633 = _mng_len622 + __twr_v631;
    _mng_len622 = __twr_v633;
    __twr_v634 = (uint64_t)(&LexGetCharacter);
    __twr_v635 = ((uint64_t (*)())__twr_v634)();
    _mng_byte563 = __twr_v635;
    __twr_l144:;
    __twr_v636 = (uint64_t)(&LexCharTreatment);
    __twr_v637 = __twr_v636 + _mng_byte563;
    __twr_v638 = *(uint8_t*)(__twr_v637);
    __twr_v639 = 2ULL;
    if (__twr_v638 == __twr_v639) { goto __twr_l142; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v640 = 0ULL;
    __twr_v641 = _mng_buffer542 + _mng_len622;
    *(uint8_t*)(__twr_v641) = __twr_v640;
    _mng_length543 = _mng_len622;
    __twr_v642 = (uint64_t)(&LexCharTreatment);
    __twr_v643 = __twr_v642 + _mng_byte563;
    __twr_v644 = *(uint8_t*)(__twr_v643);
    __twr_v645 = 3ULL;
    if (__twr_v644 == __twr_v645) { goto __twr_l147; } else { goto __twr_l148; }
    __twr_l148:;
    __twr_v646 = (uint64_t)(&LexCurrentStream);
    __twr_v647 = *(uint64_t*)(__twr_v646);
    __twr_v648 = 84ULL;
    __twr_v649 = __twr_v647 + __twr_v648;
    *(uint8_t*)(__twr_v649) = _mng_byte563;
    __twr_l147:;
    __twr_v650 = 2ULL;
    _jkl_retv = __twr_v650;
    goto _jkl_epilogue;
    __twr_l140:;
    __twr_v651 = 65ULL;
    if (_mng_byte563 < __twr_v651) { goto __twr_l151; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v652 = 90ULL;
    if (_mng_byte563 > __twr_v652) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v653 = 1ULL;
    goto __twr_l152;
    __twr_l151:;
    __twr_v653 = 0ULL;
    __twr_l152:;
    _mng_uppercaseonly654 = __twr_v653;
    _mng_len655 = 0ULL;
    __twr_v656 = (uint64_t)(&LexCharTreatment);
    __twr_v657 = __twr_v656 + _mng_byte563;
    __twr_v658 = *(uint8_t*)(__twr_v657);
    if (__twr_v658) { goto __twr_l154; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v659 = 127ULL;
    if (_mng_len655 != __twr_v659) { goto __twr_l156; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v660 = (uint64_t)(&LexTokenError);
    __twr_v661 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v662 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v660)(_mng_token541, __twr_v661, __twr_v662, __twr_v662, __twr_v662);
    __twr_l156:;
    if (!(_mng_uppercaseonly654)) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_v663 = 65ULL;
    if (_mng_byte563 < __twr_v663) { goto __twr_l162; } else { goto __twr_l160; }
    __twr_l160:;
    __twr_v664 = 90ULL;
    if (_mng_byte563 > __twr_v664) { goto __twr_l162; } else { goto __twr_l161; }
    __twr_l161:;
    __twr_v665 = 1ULL;
    goto __twr_l163;
    __twr_l162:;
    __twr_v665 = 0ULL;
    __twr_l163:;
    _mng_uppercaseonly654 = __twr_v665;
    __twr_l158:;
    __twr_v666 = 1ULL;
    __twr_v667 = _mng_buffer542 + _mng_len655;
    *(uint8_t*)(__twr_v667) = _mng_byte563;
    __twr_v668 = _mng_len655 + __twr_v666;
    _mng_len655 = __twr_v668;
    __twr_v669 = (uint64_t)(&LexGetCharacter);
    __twr_v670 = ((uint64_t (*)())__twr_v669)();
    _mng_byte563 = __twr_v670;
    __twr_l155:;
    __twr_v671 = (uint64_t)(&LexCharTreatment);
    __twr_v672 = __twr_v671 + _mng_byte563;
    __twr_v673 = *(uint8_t*)(__twr_v672);
    if (!(__twr_v673)) { goto __twr_l153; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v674 = 0ULL;
    __twr_v675 = _mng_buffer542 + _mng_len655;
    *(uint8_t*)(__twr_v675) = __twr_v674;
    _mng_length543 = _mng_len655;
    __twr_v676 = (uint64_t)(&LexCharTreatment);
    __twr_v677 = 1ULL;
    __twr_v678 = __twr_v676 + _mng_byte563;
    __twr_v679 = *(uint8_t*)(__twr_v678);
    if (__twr_v679 == __twr_v677) { goto __twr_l165; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v680 = (uint64_t)(&LexCharTreatment);
    __twr_v681 = __twr_v680 + _mng_byte563;
    __twr_v682 = *(uint8_t*)(__twr_v681);
    __twr_v683 = 2ULL;
    if (__twr_v682 != __twr_v683) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v684 = (uint64_t)(&LexCurrentStream);
    __twr_v685 = *(uint64_t*)(__twr_v684);
    __twr_v686 = 84ULL;
    __twr_v687 = __twr_v685 + __twr_v686;
    *(uint8_t*)(__twr_v687) = _mng_byte563;
    __twr_l164:;
    if (!(_mng_uppercaseonly654)) { goto __twr_l167; } else { goto __twr_l169; }
    __twr_l169:;
    __twr_v688 = 1ULL;
    if (_mng_len655 <= __twr_v688) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v689 = 16ULL;
    _jkl_retv = __twr_v689;
    goto _jkl_epilogue;
    __twr_l167:;
    __twr_v690 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v691 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v692 = *(uint64_t*)(__twr_v691);
    __twr_v693 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v690)(__twr_v692, _mng_buffer542);
    _mng_macro694 = __twr_v693;
    if (_mng_macro694) { goto __twr_l170; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v695 = 0ULL;
    _jkl_retv = __twr_v695;
    goto _jkl_epilogue;
    __twr_l170:;
    __twr_v696 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v696)(_mng_macro694, _mng_token541);
    goto __twr_lLoopOnMacro;
    __twr_l123:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length543;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring595;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token697) {
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t _mng_buffer700[16];
    uint64_t __twr_v701;
    uint64_t _mng_length702;
    uint64_t _mng_internedstring703;
    uint64_t _mng_tokenflag704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t _mng_keyword711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    __twr_v698 = (uint64_t)(&LexGetTokenContents);
    __twr_v699 = (uint64_t)(&_mng_buffer700);
    __twr_v701 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v698)(_mng_token697, __twr_v699, (uint64_t)(&_mng_length702), (uint64_t)(&_mng_internedstring703));
    _mng_tokenflag704 = __twr_v701;
    __twr_v705 = 19ULL;
    __twr_v706 = _mng_tokenflag704 & __twr_v705;
    if (!(__twr_v706)) { goto __twr_l173; } else { goto __twr_l174; }
    __twr_l174:;
    __twr_v707 = (uint64_t)(&TlLookupHashTable);
    __twr_v708 = (uint64_t)(&LexKeywordHashTable);
    __twr_v709 = (uint64_t)(&_mng_buffer700);
    __twr_v710 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v707)(__twr_v708, __twr_v709);
    _mng_keyword711 = __twr_v710;
    if (_mng_keyword711) { goto __twr_l175; } else { goto __twr_l176; }
    __twr_l176:;
    __twr_v712 = 16ULL;
    __twr_v713 = _mng_tokenflag704 & __twr_v712;
    if (!(__twr_v713)) { goto __twr_l177; } else { goto __twr_l178; }
    __twr_l178:;
    __twr_v714 = (uint64_t)(&LexTokenError);
    __twr_v715 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).");
    __twr_v716 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v714)(_mng_token697, __twr_v715, __twr_v716, __twr_v716, __twr_v716);
    __twr_l177:;
    __twr_v717 = (uint64_t)(&LexTokenError);
    __twr_v718 = (uint64_t)(&"Unknown keyword");
    __twr_v719 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v717)(_mng_token697, __twr_v718, __twr_v719, __twr_v719, __twr_v719);
    __twr_l175:;
    __twr_v720 = 48ULL;
    __twr_v721 = _mng_keyword711 + __twr_v720;
    __twr_v722 = *(uint8_t*)(__twr_v721);
    __twr_v723 = 24ULL;
    __twr_v724 = _mng_token697 + __twr_v723;
    *(uint8_t*)(__twr_v724) = __twr_v722;
    __twr_v725 = 49ULL;
    __twr_v726 = _mng_keyword711 + __twr_v725;
    __twr_v727 = *(uint8_t*)(__twr_v726);
    __twr_v728 = 25ULL;
    __twr_v729 = _mng_token697 + __twr_v728;
    *(uint8_t*)(__twr_v729) = __twr_v727;
    __twr_v730 = 50ULL;
    __twr_v731 = _mng_keyword711 + __twr_v730;
    __twr_v732 = *(uint8_t*)(__twr_v731);
    __twr_v733 = 26ULL;
    __twr_v734 = _mng_token697 + __twr_v733;
    *(uint8_t*)(__twr_v734) = __twr_v732;
    goto _jkl_epilogue;
    __twr_l173:;
    __twr_v735 = 8ULL;
    __twr_v736 = _mng_tokenflag704 & __twr_v735;
    if (!(__twr_v736)) { goto __twr_l179; } else { goto __twr_l180; }
    __twr_l180:;
    __twr_v737 = 5ULL;
    __twr_v738 = 24ULL;
    __twr_v739 = _mng_token697 + __twr_v738;
    *(uint8_t*)(__twr_v739) = __twr_v737;
    __twr_v740 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v741 = (uint64_t)(&_mng_buffer700);
    __twr_v742 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v740)(_mng_token697, __twr_v741);
    *(uint64_t*)(_mng_token697) = __twr_v742;
    goto _jkl_epilogue;
    __twr_l179:;
    __twr_v743 = 4ULL;
    __twr_v744 = _mng_tokenflag704 & __twr_v743;
    if (!(__twr_v744)) { goto __twr_l181; } else { goto __twr_l182; }
    __twr_l182:;
    __twr_v745 = 4ULL;
    __twr_v746 = 24ULL;
    __twr_v747 = _mng_token697 + __twr_v746;
    *(uint8_t*)(__twr_v747) = __twr_v745;
    *(uint64_t*)(_mng_token697) = _mng_internedstring703;
    goto _jkl_epilogue;
    __twr_l181:;
    __twr_v748 = 32ULL;
    __twr_v749 = _mng_tokenflag704 & __twr_v748;
    if (!(__twr_v749)) { goto __twr_l183; } else { goto __twr_l184; }
    __twr_l184:;
    __twr_v750 = 6ULL;
    __twr_v751 = 24ULL;
    __twr_v752 = _mng_token697 + __twr_v751;
    *(uint8_t*)(__twr_v752) = __twr_v750;
    goto _jkl_epilogue;
    __twr_l183:;
    if (_mng_length702) { goto __twr_l185; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v753 = 6ULL;
    __twr_v754 = 24ULL;
    __twr_v755 = _mng_token697 + __twr_v754;
    *(uint8_t*)(__twr_v755) = __twr_v753;
    goto _jkl_epilogue;
    __twr_l185:;
    __twr_v756 = (uint64_t)(&_mng_buffer700);
    __twr_v757 = *(uint8_t*)(__twr_v756);
    __twr_v758 = 48ULL;
    if (__twr_v757 < __twr_v758) { goto __twr_l187; } else { goto __twr_l189; }
    __twr_l189:;
    __twr_v759 = (uint64_t)(&_mng_buffer700);
    __twr_v760 = *(uint8_t*)(__twr_v759);
    __twr_v761 = 57ULL;
    if (__twr_v760 > __twr_v761) { goto __twr_l187; } else { goto __twr_l188; }
    __twr_l188:;
    __twr_v762 = 5ULL;
    __twr_v763 = 24ULL;
    __twr_v764 = _mng_token697 + __twr_v763;
    *(uint8_t*)(__twr_v764) = __twr_v762;
    __twr_v765 = (uint64_t)(&LexCrunchNumber);
    __twr_v766 = (uint64_t)(&_mng_buffer700);
    __twr_v767 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v765)(_mng_token697, __twr_v766);
    *(uint64_t*)(_mng_token697) = __twr_v767;
    goto _jkl_epilogue;
    __twr_l187:;
    __twr_v768 = (uint64_t)(&LexTokenError);
    __twr_v769 = (uint64_t)(&"Unknown token");
    __twr_v770 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v768)(_mng_token697, __twr_v769, __twr_v770, __twr_v770, __twr_v770);
    __twr_l172:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest771, uint64_t _mng_src772) {
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    __twr_v773 = *(uint64_t*)(_mng_src772);
    *(uint64_t*)(_mng_dest771) = __twr_v773;
    __twr_v774 = 8ULL;
    __twr_v775 = _mng_src772 + __twr_v774;
    __twr_v776 = *(uint64_t*)(__twr_v775);
    __twr_v777 = _mng_dest771 + __twr_v774;
    *(uint64_t*)(__twr_v777) = __twr_v776;
    __twr_v778 = 16ULL;
    __twr_v779 = _mng_src772 + __twr_v778;
    __twr_v780 = *(uint32_t*)(__twr_v779);
    __twr_v781 = _mng_dest771 + __twr_v778;
    *(uint32_t*)(__twr_v781) = __twr_v780;
    __twr_v782 = 20ULL;
    __twr_v783 = _mng_src772 + __twr_v782;
    __twr_v784 = *(uint32_t*)(__twr_v783);
    __twr_v785 = _mng_dest771 + __twr_v782;
    *(uint32_t*)(__twr_v785) = __twr_v784;
    __twr_v786 = 24ULL;
    __twr_v787 = _mng_src772 + __twr_v786;
    __twr_v788 = *(uint8_t*)(__twr_v787);
    __twr_v789 = _mng_dest771 + __twr_v786;
    *(uint8_t*)(__twr_v789) = __twr_v788;
    __twr_v790 = 25ULL;
    __twr_v791 = _mng_src772 + __twr_v790;
    __twr_v792 = *(uint8_t*)(__twr_v791);
    __twr_v793 = _mng_dest771 + __twr_v790;
    *(uint8_t*)(__twr_v793) = __twr_v792;
    __twr_v794 = 26ULL;
    __twr_v795 = _mng_src772 + __twr_v794;
    __twr_v796 = *(uint8_t*)(__twr_v795);
    __twr_v797 = _mng_dest771 + __twr_v794;
    *(uint8_t*)(__twr_v797) = __twr_v796;
    __twr_l190:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token798) {
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t _mng_index801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    __twr_v799 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v800 = *(uint32_t*)(__twr_v799);
    _mng_index801 = __twr_v800;
    if (!(_mng_index801)) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v802 = (uint64_t)(&LexCopyToken);
    __twr_v803 = (uint64_t)(&LexPutbackStack);
    __twr_v804 = 1ULL;
    __twr_v805 = _mng_index801 - __twr_v804;
    __twr_v806 = 5ULL;
    __twr_v807 = __twr_v805 << __twr_v806;
    __twr_v808 = __twr_v803 + __twr_v807;
    ((void (*)(uint64_t, uint64_t))__twr_v802)(_mng_token798, __twr_v808);
    __twr_v809 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v809) = __twr_v805;
    goto _jkl_epilogue;
    __twr_l192:;
    __twr_v810 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v810)(_mng_token798);
    __twr_l191:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token811) {
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t _mng_index814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    __twr_v812 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v813 = *(uint32_t*)(__twr_v812);
    _mng_index814 = __twr_v813;
    __twr_v815 = 256ULL;
    if (_mng_index814 != __twr_v815) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    __twr_v816 = (uint64_t)(&TlInternalError);
    __twr_v817 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v818 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v816)(__twr_v817, __twr_v818, __twr_v818, __twr_v818);
    __twr_l195:;
    __twr_v819 = (uint64_t)(&LexCopyToken);
    __twr_v820 = (uint64_t)(&LexPutbackStack);
    __twr_v821 = 5ULL;
    __twr_v822 = _mng_index814 << __twr_v821;
    __twr_v823 = __twr_v820 + __twr_v822;
    ((void (*)(uint64_t, uint64_t))__twr_v819)(__twr_v823, _mng_token811);
    __twr_v824 = 1ULL;
    __twr_v825 = _mng_index814 + __twr_v824;
    __twr_v826 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v826) = __twr_v825;
    __twr_l194:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token827, uint64_t _mng_type828, uint64_t _mng_subtype829) {
    uint64_t _jkl_retv;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t _mng_index832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t _mng_matchtoken843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    __twr_v830 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v831 = *(uint32_t*)(__twr_v830);
    _mng_index832 = __twr_v831;
    if (_mng_index832) { goto __twr_l198; } else { goto __twr_l199; }
    __twr_l199:;
    __twr_v833 = (uint64_t)(&LexNextToken);
    __twr_v834 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v833)(__twr_v834);
    __twr_v835 = 1ULL;
    __twr_v836 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v836) = __twr_v835;
    _mng_index832 = 1ULL;
    __twr_l198:;
    __twr_v837 = (uint64_t)(&LexPutbackStack);
    __twr_v838 = 1ULL;
    __twr_v839 = _mng_index832 - __twr_v838;
    __twr_v840 = 5ULL;
    __twr_v841 = __twr_v839 << __twr_v840;
    __twr_v842 = __twr_v837 + __twr_v841;
    _mng_matchtoken843 = __twr_v842;
    if (!(_mng_token827)) { goto __twr_l200; } else { goto __twr_l201; }
    __twr_l201:;
    __twr_v844 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v844)(_mng_token827, _mng_matchtoken843);
    __twr_l200:;
    __twr_v845 = 24ULL;
    __twr_v846 = _mng_matchtoken843 + __twr_v845;
    __twr_v847 = *(uint8_t*)(__twr_v846);
    if (__twr_v847 == _mng_type828) { goto __twr_l202; } else { goto __twr_l203; }
    __twr_l203:;
    __twr_v848 = 24ULL;
    __twr_v849 = _mng_matchtoken843 + __twr_v848;
    __twr_v850 = *(uint8_t*)(__twr_v849);
    __twr_v851 = 6ULL;
    if (__twr_v850 != __twr_v851) { goto __twr_l204; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v852 = 1ULL;
    __twr_v853 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v854 = *(uint32_t*)(__twr_v853);
    __twr_v855 = __twr_v854 - __twr_v852;
    *(uint32_t*)(__twr_v853) = __twr_v855;
    __twr_l204:;
    __twr_v856 = 0ULL;
    _jkl_retv = __twr_v856;
    goto _jkl_epilogue;
    __twr_l202:;
    if (!(_mng_subtype829)) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v857 = 25ULL;
    __twr_v858 = _mng_matchtoken843 + __twr_v857;
    __twr_v859 = *(uint8_t*)(__twr_v858);
    if (__twr_v859 != _mng_subtype829) { goto __twr_l206; } else { goto __twr_l207; }
    __twr_l207:;
    __twr_v860 = 1ULL;
    __twr_v861 = _mng_index832 - __twr_v860;
    __twr_v862 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v862) = __twr_v861;
    _jkl_retv = __twr_v860;
    goto _jkl_epilogue;
    __twr_l206:;
    __twr_v863 = 0ULL;
    _jkl_retv = __twr_v863;
    goto _jkl_epilogue;
    __twr_l197:;
    _jkl_epilogue:;
    return _jkl_retv;
}

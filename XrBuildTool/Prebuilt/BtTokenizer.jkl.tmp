#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintHex(uint64_t _mng_num10);
extern void TlPrintCharacter(uint64_t _mng_byte11);
extern void TlInternalError(uint64_t _mng_str12, uint64_t _mng_err113, uint64_t _mng_err214, uint64_t _mng_err315);
extern void TlUserError(uint64_t _mng_str16, uint64_t _mng_err117, uint64_t _mng_err218, uint64_t _mng_err319);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr22);
extern uint64_t TlCompareString(uint64_t _mng_str123, uint64_t _mng_str224);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str125, uint64_t _mng_str226, uint64_t _mng_count27);
extern void TlCopyString(uint64_t _mng_dest28, uint64_t _mng_src29, uint64_t _mng_bufsize30);
extern uint64_t TlOpenSource(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename32, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle33);
extern uint64_t TlReadFile(uint64_t _mng_handle34, uint64_t _mng_bytes35, uint64_t _mng_buffer36);
extern uint64_t TlWriteFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable40);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable41);
extern void TlInsertHashTable(uint64_t _mng_hashtable42, uint64_t _mng_entry43, uint64_t _mng_key44);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entrysize49, uint64_t _mng_key50, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable51, uint64_t _mng_key52);
extern void TlRemoveHashTable(uint64_t _mng_entry53);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable54, uint64_t _mng_enumfunc55);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable56, uint64_t _mng_key57, uint64_t _mng_hash58);
extern uint64_t TlHashString(uint64_t _mng_str59);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable60, uint64_t _mng_outerscope61, uint64_t _mng_deletefunc62);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable65);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable66, uint64_t _mng_name67);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_entry69, uint64_t _mng_name70);
extern void TlRemoveSymbolTable(uint64_t _mng_entry71);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array73);
extern void TlInsertDynamicBuffer(uint64_t _mng_array74, uint64_t _mng_byte75);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_srcbuf77, uint64_t _mng_length78);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_number80, uint64_t _mng_base81);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array82);
extern uint64_t TlMatchPath(uint64_t _mng_path83, uint64_t _mng_pathset84, uint64_t _mng_resultingpath85, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath86, uint64_t _mng_destpath87);
extern uint64_t TlGetFileName(uint64_t _mng_path88);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path89);
extern uint64_t TlPathExists(uint64_t _mng_path90);
extern uint64_t TlIterateDirectory(uint64_t _mng_path91, uint64_t _mng_callback92, uint64_t _mng_context93);
extern uint64_t TlGetPathExtension(uint64_t _mng_path94);
extern uint64_t TlStatFile(uint64_t _mng_path95, uint64_t _mng_statrecord96);
extern uint64_t TlCreateDirectory(uint64_t _mng_path97);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path98);
extern void TlInitializeZone(uint64_t _mng_zone99, uint64_t _mng_blocksize100);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone101);
extern void TlFreeToZone(uint64_t _mng_zone102, uint64_t _mng_block103);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant104);
extern void TlPunchValue(uint64_t _mng_ptr105, uint64_t _mng_value106, uint64_t _mng_bytes107);
extern uint64_t TlTokenize(uint64_t _mng_buffer108, uint64_t _mng_tokenbuffer109, uint64_t _mng_bufsize110, uint64_t _mng_delimiter111);
extern uint64_t TlStringToNumber(uint64_t _mng_src112, uint64_t _mng_bufsize113, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler114);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine115, uint64_t _mng_arg116, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread117);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex118);
extern void TlReleaseMutex(uint64_t _mng_mutex119);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue120);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore121);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore122);
extern uint64_t TlSystem(uint64_t _mng_cmdline123);
extern uint64_t TlCurrentEpochTime();
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg124);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename125, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock126, uint64_t _mng_filepath127);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope128);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg129);
extern void LexExpandMacro(uint64_t _mng_macro130, uint64_t _mng_token131);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream132, uint64_t _mng_macro133);
extern void LexUninitializeStream(uint64_t _mng_stream134);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream135);
extern void LexPushStream(uint64_t _mng_stream136);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream137, uint64_t _mng_fileblock138, uint64_t _mng_handle139);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock140, uint64_t _mng_handle141);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest142, uint64_t _mng_src143);
extern void LexGetToken(uint64_t _mng_token144);
extern void LexPutbackToken(uint64_t _mng_token145);
extern uint64_t LexMatchToken(uint64_t _mng_token146, uint64_t _mng_type147, uint64_t _mng_subtype148);
extern void LexStreamError(uint64_t _mng_str149, uint64_t _mng_err1150, uint64_t _mng_err2151, uint64_t _mng_err3152);
extern void LexTokenError(uint64_t _mng_token153, uint64_t _mng_str154, uint64_t _mng_err1155, uint64_t _mng_err2156, uint64_t _mng_err3157);
extern uint64_t LexCrunchNumber(uint64_t _mng_token158, uint64_t _mng_buffer159);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath160);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name161, uint64_t _mng_type162, uint64_t _mng_subtype163, uint64_t _mng_context164) {
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t _mng_keyword171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    __twr_v165 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v166 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v167 = *(uint64_t*)(__twr_v166);
    __twr_v168 = 56ULL;
    __twr_v169 = __twr_v167 * __twr_v168;
    __twr_v170 = __twr_v165 + __twr_v169;
    _mng_keyword171 = __twr_v170;
    __twr_v172 = 1ULL;
    __twr_v173 = __twr_v167 + __twr_v172;
    *(uint64_t*)(__twr_v166) = __twr_v173;
    __twr_v174 = 48ULL;
    __twr_v175 = _mng_keyword171 + __twr_v174;
    *(uint8_t*)(__twr_v175) = _mng_type162;
    __twr_v176 = 49ULL;
    __twr_v177 = _mng_keyword171 + __twr_v176;
    *(uint8_t*)(__twr_v177) = _mng_subtype163;
    __twr_v178 = 50ULL;
    __twr_v179 = _mng_keyword171 + __twr_v178;
    *(uint8_t*)(__twr_v179) = _mng_context164;
    __twr_v180 = (uint64_t)(&TlInsertHashTable);
    __twr_v181 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v180)(__twr_v181, _mng_keyword171, _mng_name161);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexPrintError(uint64_t _mng_filename182, uint64_t _mng_linenumber183, uint64_t _mng_linepos184, uint64_t _mng_str185, uint64_t _mng_err1186, uint64_t _mng_err2187, uint64_t _mng_err3188) {
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    __twr_v189 = (uint64_t)(&TlPrintString);
    ((void (*)(uint64_t))__twr_v189)(_mng_filename182);
    __twr_v190 = (uint64_t)(&":");
    ((void (*)(uint64_t))__twr_v189)(__twr_v190);
    __twr_v191 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v191)(_mng_linenumber183);
    __twr_v192 = (uint64_t)(&":");
    ((void (*)(uint64_t))__twr_v189)(__twr_v192);
    ((void (*)(uint64_t))__twr_v191)(_mng_linepos184);
    __twr_v193 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v189)(__twr_v193);
    ((void (*)(uint64_t))__twr_v189)(_mng_str185);
    __twr_v194 = (uint64_t)(&" (");
    ((void (*)(uint64_t))__twr_v189)(__twr_v194);
    ((void (*)(uint64_t))__twr_v191)(_mng_err1186);
    __twr_v195 = (uint64_t)(&" ");
    ((void (*)(uint64_t))__twr_v189)(__twr_v195);
    ((void (*)(uint64_t))__twr_v191)(_mng_err2187);
    __twr_v196 = (uint64_t)(&" ");
    ((void (*)(uint64_t))__twr_v189)(__twr_v196);
    ((void (*)(uint64_t))__twr_v191)(_mng_err3188);
    __twr_v197 = (uint64_t)(&")\n");
    ((void (*)(uint64_t))__twr_v189)(__twr_v197);
    __twr_v198 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v198)();
    __twr_l2:;
    _jkl_epilogue:;
}
void LexStreamError(uint64_t _mng_str199, uint64_t _mng_err1200, uint64_t _mng_err2201, uint64_t _mng_err3202) {
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t _mng_stream205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    __twr_v203 = (uint64_t)(&LexCurrentStream);
    __twr_v204 = *(uint64_t*)(__twr_v203);
    _mng_stream205 = __twr_v204;
    __twr_v206 = (uint64_t)(&LexPrintError);
    __twr_v207 = 8ULL;
    __twr_v208 = _mng_stream205 + __twr_v207;
    __twr_v209 = *(uint64_t*)(__twr_v208);
    __twr_v210 = 304ULL;
    __twr_v211 = __twr_v209 + __twr_v210;
    __twr_v212 = 44ULL;
    __twr_v213 = _mng_stream205 + __twr_v212;
    __twr_v214 = *(uint32_t*)(__twr_v213);
    __twr_v215 = 48ULL;
    __twr_v216 = _mng_stream205 + __twr_v215;
    __twr_v217 = *(uint32_t*)(__twr_v216);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v206)(__twr_v211, __twr_v214, __twr_v217, _mng_str199, _mng_err1200, _mng_err2201, _mng_err3202);
    __twr_l3:;
    _jkl_epilogue:;
}
void LexTokenError(uint64_t _mng_token218, uint64_t _mng_str219, uint64_t _mng_err1220, uint64_t _mng_err2221, uint64_t _mng_err3222) {
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    __twr_v223 = (uint64_t)(&LexPrintError);
    __twr_v224 = 8ULL;
    __twr_v225 = _mng_token218 + __twr_v224;
    __twr_v226 = *(uint64_t*)(__twr_v225);
    __twr_v227 = 304ULL;
    __twr_v228 = __twr_v226 + __twr_v227;
    __twr_v229 = 16ULL;
    __twr_v230 = _mng_token218 + __twr_v229;
    __twr_v231 = *(uint32_t*)(__twr_v230);
    __twr_v232 = 20ULL;
    __twr_v233 = _mng_token218 + __twr_v232;
    __twr_v234 = *(uint32_t*)(__twr_v233);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v223)(__twr_v228, __twr_v231, __twr_v234, _mng_str219, _mng_err1220, _mng_err2221, _mng_err3222);
    __twr_l4:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t _mng_dumpster240;
    uint64_t _mng_fileblock241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t _mng_filestream248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    __twr_v235 = (uint64_t)(&FeCreateFileBlock);
    __twr_v236 = (uint64_t)(&FeInputFile);
    __twr_v237 = 0ULL;
    __twr_v238 = 1ULL;
    __twr_v239 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v235)(__twr_v236, (uint64_t)(&_mng_dumpster240));
    _mng_fileblock241 = __twr_v239;
    __twr_v242 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v242)(_mng_fileblock241, __twr_v236);
    __twr_v243 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v243)();
    __twr_v244 = (uint64_t)(&LexCreateFileStream);
    __twr_v245 = (uint64_t)(&FeInputFileHandle);
    __twr_v246 = *(uint64_t*)(__twr_v245);
    __twr_v247 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v244)(_mng_fileblock241, __twr_v246);
    _mng_filestream248 = __twr_v247;
    __twr_v249 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v249)(_mng_filestream248);
    __twr_v250 = (uint64_t)(&TlInitializeZone);
    __twr_v251 = (uint64_t)(&LexInternedStringZone);
    __twr_v252 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v250)(__twr_v251, __twr_v252);
    __twr_v253 = (uint64_t)(&TlInitializeHashTable);
    __twr_v254 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v253)(__twr_v254);
    __twr_v255 = (uint64_t)(&LexInsertKeyword);
    __twr_v256 = (uint64_t)(&"END");
    __twr_v257 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v256, __twr_v257, __twr_v237, __twr_v237);
    __twr_v258 = (uint64_t)(&"TARGET");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v258, __twr_v238, __twr_v237, __twr_v237);
    __twr_v259 = (uint64_t)(&"FILE");
    __twr_v260 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v259, __twr_v260, __twr_v237, __twr_v237);
    __twr_v261 = (uint64_t)(&"DEPEND");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v261, __twr_v260, __twr_v238, __twr_v237);
    __twr_v262 = (uint64_t)(&"SOURCES");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v262, __twr_v260, __twr_v260, __twr_v237);
    __twr_v263 = (uint64_t)(&"INCDIR");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v263, __twr_v260, __twr_v257, __twr_v237);
    __twr_v264 = (uint64_t)(&"LIBDIR");
    __twr_v265 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v264, __twr_v260, __twr_v265, __twr_v237);
    __twr_v266 = (uint64_t)(&"LINKOPT");
    __twr_v267 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v266, __twr_v260, __twr_v267, __twr_v237);
    __twr_v268 = (uint64_t)(&"JKLOPT");
    __twr_v269 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v268, __twr_v260, __twr_v269, __twr_v237);
    __twr_v270 = (uint64_t)(&"LINK");
    __twr_v271 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v270, __twr_v260, __twr_v271, __twr_v237);
    __twr_v272 = (uint64_t)(&"DYLINK");
    __twr_v273 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v272, __twr_v260, __twr_v273, __twr_v237);
    __twr_v274 = (uint64_t)(&"PREBUILT");
    __twr_v275 = 9ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v274, __twr_v260, __twr_v275, __twr_v237);
    __twr_v276 = (uint64_t)(&"OBJECTS");
    __twr_v277 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(__twr_v276, __twr_v260, __twr_v277, __twr_v237);
    __twr_l5:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t _mng_byte281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t _mng_nextbyte326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    _mng_comment278 = 0ULL;
    __twr_l7:;
    __twr_v279 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v280 = ((uint64_t (*)())__twr_v279)();
    _mng_byte281 = __twr_v280;
    if (_mng_byte281) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    goto __twr_l8;
    __twr_l9:;
    if (!(_mng_comment278)) { goto __twr_l13; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v282 = 10ULL;
    if (_mng_byte281 == __twr_v282) { goto __twr_l14; } else { goto __twr_l15; }
    __twr_l15:;
    goto __twr_l7;
    __twr_l14:;
    _mng_comment278 = 0ULL;
    goto __twr_l11;
    __twr_l13:;
    __twr_v283 = (uint64_t)(&LexCurrentStream);
    __twr_v284 = *(uint64_t*)(__twr_v283);
    __twr_v285 = 80ULL;
    __twr_v286 = __twr_v284 + __twr_v285;
    __twr_v287 = *(uint8_t*)(__twr_v286);
    if (!(__twr_v287)) { goto __twr_l17; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v288 = 0ULL;
    __twr_v289 = (uint64_t)(&LexCurrentStream);
    __twr_v290 = *(uint64_t*)(__twr_v289);
    __twr_v291 = 80ULL;
    __twr_v292 = __twr_v290 + __twr_v291;
    *(uint8_t*)(__twr_v292) = __twr_v288;
    goto __twr_l11;
    __twr_l17:;
    __twr_v293 = 92ULL;
    if (_mng_byte281 != __twr_v293) { goto __twr_l19; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v294 = 1ULL;
    __twr_v295 = (uint64_t)(&LexCurrentStream);
    __twr_v296 = *(uint64_t*)(__twr_v295);
    __twr_v297 = 80ULL;
    __twr_v298 = __twr_v296 + __twr_v297;
    *(uint8_t*)(__twr_v298) = __twr_v294;
    goto __twr_l11;
    __twr_l19:;
    __twr_v299 = (uint64_t)(&LexCurrentStream);
    __twr_v300 = *(uint64_t*)(__twr_v299);
    __twr_v301 = 81ULL;
    __twr_v302 = __twr_v300 + __twr_v301;
    __twr_v303 = *(uint8_t*)(__twr_v302);
    if (!(__twr_v303)) { goto __twr_l21; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v304 = 34ULL;
    __twr_v305 = (_mng_byte281 == __twr_v304);
    __twr_v306 = !__twr_v305;
    __twr_v307 = (uint64_t)(&LexCurrentStream);
    __twr_v308 = *(uint64_t*)(__twr_v307);
    __twr_v309 = 81ULL;
    __twr_v310 = __twr_v308 + __twr_v309;
    *(uint8_t*)(__twr_v310) = __twr_v306;
    goto __twr_l11;
    __twr_l21:;
    __twr_v311 = (uint64_t)(&LexCurrentStream);
    __twr_v312 = *(uint64_t*)(__twr_v311);
    __twr_v313 = 82ULL;
    __twr_v314 = __twr_v312 + __twr_v313;
    __twr_v315 = *(uint8_t*)(__twr_v314);
    if (!(__twr_v315)) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v316 = 39ULL;
    __twr_v317 = (_mng_byte281 == __twr_v316);
    __twr_v318 = !__twr_v317;
    __twr_v319 = (uint64_t)(&LexCurrentStream);
    __twr_v320 = *(uint64_t*)(__twr_v319);
    __twr_v321 = 82ULL;
    __twr_v322 = __twr_v320 + __twr_v321;
    *(uint8_t*)(__twr_v322) = __twr_v318;
    goto __twr_l11;
    __twr_l23:;
    __twr_v323 = 47ULL;
    if (_mng_byte281 != __twr_v323) { goto __twr_l25; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v324 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v325 = ((uint64_t (*)())__twr_v324)();
    _mng_nextbyte326 = __twr_v325;
    __twr_v327 = 47ULL;
    if (_mng_nextbyte326 != __twr_v327) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    _mng_comment278 = 1ULL;
    goto __twr_l7;
    __twr_l26:;
    __twr_v328 = (uint64_t)(&LexCurrentStream);
    __twr_v329 = *(uint64_t*)(__twr_v328);
    __twr_v330 = 83ULL;
    __twr_v331 = __twr_v329 + __twr_v330;
    *(uint8_t*)(__twr_v331) = _mng_nextbyte326;
    goto __twr_l11;
    __twr_l25:;
    __twr_v332 = 34ULL;
    if (_mng_byte281 != __twr_v332) { goto __twr_l29; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v333 = 1ULL;
    __twr_v334 = (uint64_t)(&LexCurrentStream);
    __twr_v335 = *(uint64_t*)(__twr_v334);
    __twr_v336 = 81ULL;
    __twr_v337 = __twr_v335 + __twr_v336;
    *(uint8_t*)(__twr_v337) = __twr_v333;
    goto __twr_l11;
    __twr_l29:;
    __twr_v338 = 39ULL;
    if (_mng_byte281 != __twr_v338) { goto __twr_l31; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v339 = 1ULL;
    __twr_v340 = (uint64_t)(&LexCurrentStream);
    __twr_v341 = *(uint64_t*)(__twr_v340);
    __twr_v342 = 82ULL;
    __twr_v343 = __twr_v341 + __twr_v342;
    *(uint8_t*)(__twr_v343) = __twr_v339;
    goto __twr_l11;
    __twr_l31:;
    __twr_v344 = 35ULL;
    if (_mng_byte281 != __twr_v344) { goto __twr_l11; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v345 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v345)();
    _mng_byte281 = 10ULL;
    __twr_l11:;
    __twr_v346 = (uint64_t)(&LexFalseCount);
    __twr_v347 = *(uint32_t*)(__twr_v346);
    if (!(__twr_v347)) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    goto __twr_l7;
    __twr_l33:;
    goto __twr_l8;
    goto __twr_l7;
    __twr_l8:;
    _jkl_retv = _mng_byte281;
    goto _jkl_epilogue;
    __twr_l6:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token348, uint64_t _mng_terminator349, uint64_t _mng_dynamicbuffer350, uint64_t _mng_buffer351, uint64_t _mng_o_length) {
    uint64_t _mng_len352;
    uint64_t _mng_isbackslash353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_byte356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t _mng_length378;
    _mng_len352 = 0ULL;
    _mng_isbackslash353 = 0ULL;
    __twr_l36:;
    __twr_v354 = (uint64_t)(&LexGetCharacter);
    __twr_v355 = ((uint64_t (*)())__twr_v354)();
    _mng_byte356 = __twr_v355;
    if (_mng_byte356) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v357 = (uint64_t)(&LexTokenError);
    __twr_v358 = (uint64_t)(&"String token terminated by EOF!");
    __twr_v359 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v357)(_mng_token348, __twr_v358, __twr_v359, __twr_v359, __twr_v359);
    __twr_l38:;
    if (_mng_isbackslash353) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    if (_mng_byte356 != _mng_terminator349) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    goto __twr_l37;
    goto __twr_l43;
    __twr_l45:;
    __twr_v360 = 92ULL;
    if (_mng_byte356 != __twr_v360) { goto __twr_l43; } else { goto __twr_l46; }
    __twr_l46:;
    _mng_isbackslash353 = 1ULL;
    goto __twr_l36;
    __twr_l43:;
    goto __twr_l40;
    __twr_l42:;
    _mng_isbackslash353 = 0ULL;
    __twr_v361 = 110ULL;
    if (_mng_byte356 != __twr_v361) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    _mng_byte356 = 10ULL;
    goto __twr_l47;
    __twr_l49:;
    __twr_v362 = 116ULL;
    if (_mng_byte356 != __twr_v362) { goto __twr_l51; } else { goto __twr_l50; }
    __twr_l50:;
    _mng_byte356 = 9ULL;
    goto __twr_l47;
    __twr_l51:;
    __twr_v363 = 114ULL;
    if (_mng_byte356 != __twr_v363) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    _mng_byte356 = 13ULL;
    goto __twr_l47;
    __twr_l53:;
    __twr_v364 = 98ULL;
    if (_mng_byte356 != __twr_v364) { goto __twr_l55; } else { goto __twr_l54; }
    __twr_l54:;
    _mng_byte356 = 8ULL;
    goto __twr_l47;
    __twr_l55:;
    __twr_v365 = 91ULL;
    if (_mng_byte356 != __twr_v365) { goto __twr_l47; } else { goto __twr_l56; }
    __twr_l56:;
    _mng_byte356 = 27ULL;
    __twr_l47:;
    __twr_l40:;
    if (!(_mng_dynamicbuffer350)) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v366 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v366)(_mng_dynamicbuffer350, _mng_byte356);
    goto __twr_l57;
    __twr_l59:;
    __twr_v367 = 127ULL;
    if (_mng_len352 != __twr_v367) { goto __twr_l61; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v368 = (uint64_t)(&LexTokenError);
    __twr_v369 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v370 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v368)(_mng_token348, __twr_v369, __twr_v370, __twr_v370, __twr_v370);
    goto __twr_l57;
    __twr_l61:;
    __twr_v371 = 1ULL;
    __twr_v372 = _mng_buffer351 + _mng_len352;
    *(uint8_t*)(__twr_v372) = _mng_byte356;
    __twr_v373 = _mng_len352 + __twr_v371;
    _mng_len352 = __twr_v373;
    __twr_l57:;
    goto __twr_l36;
    __twr_l37:;
    if (!(_mng_dynamicbuffer350)) { goto __twr_l64; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v374 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v375 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v374)(_mng_dynamicbuffer350, __twr_v375);
    goto __twr_l62;
    __twr_l64:;
    __twr_v376 = 0ULL;
    __twr_v377 = _mng_buffer351 + _mng_len352;
    *(uint8_t*)(__twr_v377) = __twr_v376;
    _mng_length378 = _mng_len352;
    __twr_l62:;
    __twr_l35:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length378;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token379, uint64_t _mng_buffer380) {
    uint64_t _jkl_retv;
    uint64_t _mng_num381;
    uint64_t _mng_i382;
    uint64_t __twr_v383;
    uint64_t _mng_lastnum384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    _mng_num381 = 0ULL;
    _mng_i382 = 0ULL;
    __twr_v383 = *(uint8_t*)(_mng_buffer380);
    if (!(__twr_v383)) { goto __twr_l67; } else { goto __twr_l66; }
    __twr_l66:;
    _mng_lastnum384 = _mng_num381;
    __twr_v385 = 8ULL;
    __twr_v386 = _mng_num381 << __twr_v385;
    _mng_num381 = __twr_v386;
    if (!(_mng_lastnum384)) { goto __twr_l69; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v387 = _mng_num381 / _mng_lastnum384;
    __twr_v388 = 256ULL;
    if (__twr_v387 == __twr_v388) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v389 = (uint64_t)(&LexTokenError);
    __twr_v390 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v391 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v389)(_mng_token379, __twr_v390, __twr_v391, __twr_v391, __twr_v391);
    __twr_l69:;
    __twr_v392 = _mng_buffer380 + _mng_i382;
    __twr_v393 = *(uint8_t*)(__twr_v392);
    __twr_v394 = _mng_num381 + __twr_v393;
    _mng_num381 = __twr_v394;
    if (_mng_num381 >= _mng_lastnum384) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v395 = (uint64_t)(&LexTokenError);
    __twr_v396 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v397 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v395)(_mng_token379, __twr_v396, __twr_v397, __twr_v397, __twr_v397);
    __twr_l72:;
    __twr_v398 = 1ULL;
    __twr_v399 = _mng_i382 + __twr_v398;
    _mng_i382 = __twr_v399;
    __twr_l68:;
    __twr_v400 = _mng_buffer380 + _mng_i382;
    __twr_v401 = *(uint8_t*)(__twr_v400);
    if (__twr_v401) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    _jkl_retv = _mng_num381;
    goto _jkl_epilogue;
    __twr_l65:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token402, uint64_t _mng_buffer403) {
    uint64_t _jkl_retv;
    uint64_t _mng_num404;
    uint64_t _mng_i405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t _mng_lastnum425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t _mng_lastnum488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t _mng_lastnum519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    _mng_num404 = 0ULL;
    _mng_i405 = 0ULL;
    __twr_v406 = *(uint8_t*)(_mng_buffer403);
    __twr_v407 = 48ULL;
    if (__twr_v406 != __twr_v407) { goto __twr_l75; } else { goto __twr_l76; }
    __twr_l76:;
    __twr_v408 = 1ULL;
    __twr_v409 = _mng_buffer403 + __twr_v408;
    __twr_v410 = *(uint8_t*)(__twr_v409);
    if (__twr_v410) { goto __twr_l77; } else { goto __twr_l78; }
    __twr_l78:;
    __twr_v411 = 0ULL;
    _jkl_retv = __twr_v411;
    goto _jkl_epilogue;
    __twr_l77:;
    __twr_v412 = 1ULL;
    __twr_v413 = _mng_buffer403 + __twr_v412;
    __twr_v414 = *(uint8_t*)(__twr_v413);
    __twr_v415 = 120ULL;
    if (__twr_v414 != __twr_v415) { goto __twr_l79; } else { goto __twr_l80; }
    __twr_l80:;
    __twr_v416 = 2ULL;
    __twr_v417 = _mng_buffer403 + __twr_v416;
    __twr_v418 = *(uint8_t*)(__twr_v417);
    if (__twr_v418) { goto __twr_l81; } else { goto __twr_l82; }
    __twr_l82:;
    __twr_v419 = (uint64_t)(&LexTokenError);
    __twr_v420 = (uint64_t)(&"Unfinished hex number.");
    __twr_v421 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v419)(_mng_token402, __twr_v420, __twr_v421, __twr_v421, __twr_v421);
    __twr_l81:;
    _mng_i405 = 2ULL;
    __twr_v422 = 2ULL;
    __twr_v423 = _mng_buffer403 + __twr_v422;
    __twr_v424 = *(uint8_t*)(__twr_v423);
    if (!(__twr_v424)) { goto __twr_l84; } else { goto __twr_l83; }
    __twr_l83:;
    _mng_lastnum425 = _mng_num404;
    __twr_v426 = 4ULL;
    __twr_v427 = _mng_num404 << __twr_v426;
    _mng_num404 = __twr_v427;
    if (!(_mng_lastnum425)) { goto __twr_l86; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v428 = _mng_num404 / _mng_lastnum425;
    __twr_v429 = 16ULL;
    if (__twr_v428 == __twr_v429) { goto __twr_l86; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v430 = (uint64_t)(&LexTokenError);
    __twr_v431 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v432 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v430)(_mng_token402, __twr_v431, __twr_v432, __twr_v432, __twr_v432);
    __twr_l86:;
    __twr_v433 = _mng_buffer403 + _mng_i405;
    __twr_v434 = *(uint8_t*)(__twr_v433);
    __twr_v435 = 48ULL;
    if (__twr_v434 < __twr_v435) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v436 = _mng_buffer403 + _mng_i405;
    __twr_v437 = *(uint8_t*)(__twr_v436);
    __twr_v438 = 57ULL;
    if (__twr_v437 > __twr_v438) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    __twr_v439 = _mng_buffer403 + _mng_i405;
    __twr_v440 = *(uint8_t*)(__twr_v439);
    __twr_v441 = 48ULL;
    __twr_v442 = __twr_v440 - __twr_v441;
    __twr_v443 = _mng_num404 + __twr_v442;
    _mng_num404 = __twr_v443;
    goto __twr_l89;
    __twr_l91:;
    __twr_v444 = _mng_buffer403 + _mng_i405;
    __twr_v445 = *(uint8_t*)(__twr_v444);
    __twr_v446 = 65ULL;
    if (__twr_v445 < __twr_v446) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v447 = _mng_buffer403 + _mng_i405;
    __twr_v448 = *(uint8_t*)(__twr_v447);
    __twr_v449 = 70ULL;
    if (__twr_v448 > __twr_v449) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v450 = _mng_buffer403 + _mng_i405;
    __twr_v451 = *(uint8_t*)(__twr_v450);
    __twr_v452 = 55ULL;
    __twr_v453 = __twr_v451 - __twr_v452;
    __twr_v454 = _mng_num404 + __twr_v453;
    _mng_num404 = __twr_v454;
    goto __twr_l89;
    __twr_l94:;
    __twr_v455 = _mng_buffer403 + _mng_i405;
    __twr_v456 = *(uint8_t*)(__twr_v455);
    __twr_v457 = 97ULL;
    if (__twr_v456 < __twr_v457) { goto __twr_l97; } else { goto __twr_l98; }
    __twr_l98:;
    __twr_v458 = _mng_buffer403 + _mng_i405;
    __twr_v459 = *(uint8_t*)(__twr_v458);
    __twr_v460 = 102ULL;
    if (__twr_v459 > __twr_v460) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v461 = _mng_buffer403 + _mng_i405;
    __twr_v462 = *(uint8_t*)(__twr_v461);
    __twr_v463 = 87ULL;
    __twr_v464 = __twr_v462 - __twr_v463;
    __twr_v465 = _mng_num404 + __twr_v464;
    _mng_num404 = __twr_v465;
    goto __twr_l89;
    __twr_l97:;
    __twr_v466 = (uint64_t)(&LexTokenError);
    __twr_v467 = (uint64_t)(&"Malformed hex number.");
    __twr_v468 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v466)(_mng_token402, __twr_v467, __twr_v468, __twr_v468, __twr_v468);
    __twr_l89:;
    if (_mng_num404 >= _mng_lastnum425) { goto __twr_l99; } else { goto __twr_l100; }
    __twr_l100:;
    __twr_v469 = (uint64_t)(&LexTokenError);
    __twr_v470 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v471 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v469)(_mng_token402, __twr_v470, __twr_v471, __twr_v471, __twr_v471);
    __twr_l99:;
    __twr_v472 = 1ULL;
    __twr_v473 = _mng_i405 + __twr_v472;
    _mng_i405 = __twr_v473;
    __twr_l85:;
    __twr_v474 = _mng_buffer403 + _mng_i405;
    __twr_v475 = *(uint8_t*)(__twr_v474);
    if (__twr_v475) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    _jkl_retv = _mng_num404;
    goto _jkl_epilogue;
    __twr_l79:;
    _mng_i405 = 1ULL;
    __twr_v476 = 1ULL;
    __twr_v477 = _mng_buffer403 + __twr_v476;
    __twr_v478 = *(uint8_t*)(__twr_v477);
    if (!(__twr_v478)) { goto __twr_l102; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v479 = _mng_buffer403 + _mng_i405;
    __twr_v480 = *(uint8_t*)(__twr_v479);
    __twr_v481 = 48ULL;
    if (__twr_v480 < __twr_v481) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v482 = _mng_buffer403 + _mng_i405;
    __twr_v483 = *(uint8_t*)(__twr_v482);
    __twr_v484 = 55ULL;
    if (__twr_v483 <= __twr_v484) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v485 = (uint64_t)(&LexTokenError);
    __twr_v486 = (uint64_t)(&"Malformed octal number.");
    __twr_v487 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v485)(_mng_token402, __twr_v486, __twr_v487, __twr_v487, __twr_v487);
    __twr_l104:;
    _mng_lastnum488 = _mng_num404;
    __twr_v489 = 3ULL;
    __twr_v490 = _mng_num404 << __twr_v489;
    _mng_num404 = __twr_v490;
    if (!(_mng_lastnum488)) { goto __twr_l107; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v491 = _mng_num404 / _mng_lastnum488;
    __twr_v492 = 8ULL;
    if (__twr_v491 == __twr_v492) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v493 = (uint64_t)(&LexTokenError);
    __twr_v494 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v495 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v493)(_mng_token402, __twr_v494, __twr_v495, __twr_v495, __twr_v495);
    __twr_l107:;
    __twr_v496 = _mng_buffer403 + _mng_i405;
    __twr_v497 = *(uint8_t*)(__twr_v496);
    __twr_v498 = 48ULL;
    __twr_v499 = __twr_v497 - __twr_v498;
    __twr_v500 = _mng_num404 + __twr_v499;
    _mng_num404 = __twr_v500;
    if (_mng_num404 >= _mng_lastnum488) { goto __twr_l110; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v501 = (uint64_t)(&LexTokenError);
    __twr_v502 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v503 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v501)(_mng_token402, __twr_v502, __twr_v503, __twr_v503, __twr_v503);
    __twr_l110:;
    __twr_v504 = 1ULL;
    __twr_v505 = _mng_i405 + __twr_v504;
    _mng_i405 = __twr_v505;
    __twr_l103:;
    __twr_v506 = _mng_buffer403 + _mng_i405;
    __twr_v507 = *(uint8_t*)(__twr_v506);
    if (__twr_v507) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    _jkl_retv = _mng_num404;
    goto _jkl_epilogue;
    __twr_l75:;
    __twr_v508 = _mng_buffer403 + _mng_i405;
    __twr_v509 = *(uint8_t*)(__twr_v508);
    if (!(__twr_v509)) { goto __twr_l113; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v510 = _mng_buffer403 + _mng_i405;
    __twr_v511 = *(uint8_t*)(__twr_v510);
    __twr_v512 = 48ULL;
    if (__twr_v511 < __twr_v512) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v513 = _mng_buffer403 + _mng_i405;
    __twr_v514 = *(uint8_t*)(__twr_v513);
    __twr_v515 = 57ULL;
    if (__twr_v514 <= __twr_v515) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v516 = (uint64_t)(&LexTokenError);
    __twr_v517 = (uint64_t)(&"Malformed decimal number.");
    __twr_v518 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v516)(_mng_token402, __twr_v517, __twr_v518, __twr_v518, __twr_v518);
    __twr_l115:;
    _mng_lastnum519 = _mng_num404;
    __twr_v520 = 10ULL;
    __twr_v521 = _mng_num404 * __twr_v520;
    _mng_num404 = __twr_v521;
    if (!(_mng_lastnum519)) { goto __twr_l118; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v522 = _mng_num404 / _mng_lastnum519;
    __twr_v523 = 10ULL;
    if (__twr_v522 == __twr_v523) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v524 = (uint64_t)(&LexTokenError);
    __twr_v525 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v526 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v524)(_mng_token402, __twr_v525, __twr_v526, __twr_v526, __twr_v526);
    __twr_l118:;
    __twr_v527 = _mng_buffer403 + _mng_i405;
    __twr_v528 = *(uint8_t*)(__twr_v527);
    __twr_v529 = 48ULL;
    __twr_v530 = __twr_v528 - __twr_v529;
    __twr_v531 = _mng_num404 + __twr_v530;
    _mng_num404 = __twr_v531;
    if (_mng_num404 >= _mng_lastnum519) { goto __twr_l121; } else { goto __twr_l122; }
    __twr_l122:;
    __twr_v532 = (uint64_t)(&LexTokenError);
    __twr_v533 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v534 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v532)(_mng_token402, __twr_v533, __twr_v534, __twr_v534, __twr_v534);
    __twr_l121:;
    __twr_v535 = 1ULL;
    __twr_v536 = _mng_i405 + __twr_v535;
    _mng_i405 = __twr_v536;
    __twr_l114:;
    __twr_v537 = _mng_buffer403 + _mng_i405;
    __twr_v538 = *(uint8_t*)(__twr_v537);
    if (__twr_v538) { goto __twr_l112; } else { goto __twr_l113; }
    __twr_l113:;
    _jkl_retv = _mng_num404;
    goto _jkl_epilogue;
    __twr_l74:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token539, uint64_t _mng_buffer540, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t _mng_stream544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t _mng_byte561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t _mng_internedstring593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t _mng_dynamicbuffer596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t _mng_dumpster601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t _mng_len620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t _mng_uppercaseonly652;
    uint64_t _mng_len653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t _mng_macro692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    __twr_lLoopOnMacro:;
    _mng_length541 = 0ULL;
    __twr_v542 = (uint64_t)(&LexCurrentStream);
    __twr_v543 = *(uint64_t*)(__twr_v542);
    _mng_stream544 = __twr_v543;
    if (!(_mng_stream544)) { goto __twr_l125; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v545 = 8ULL;
    __twr_v546 = _mng_stream544 + __twr_v545;
    __twr_v547 = *(uint64_t*)(__twr_v546);
    __twr_v548 = _mng_token539 + __twr_v545;
    *(uint64_t*)(__twr_v548) = __twr_v547;
    __twr_v549 = 44ULL;
    __twr_v550 = _mng_stream544 + __twr_v549;
    __twr_v551 = *(uint32_t*)(__twr_v550);
    __twr_v552 = 16ULL;
    __twr_v553 = _mng_token539 + __twr_v552;
    *(uint32_t*)(__twr_v553) = __twr_v551;
    __twr_v554 = 48ULL;
    __twr_v555 = _mng_stream544 + __twr_v554;
    __twr_v556 = *(uint32_t*)(__twr_v555);
    __twr_v557 = 20ULL;
    __twr_v558 = _mng_token539 + __twr_v557;
    *(uint32_t*)(__twr_v558) = __twr_v556;
    __twr_l125:;
    __twr_v559 = (uint64_t)(&LexGetCharacter);
    __twr_v560 = ((uint64_t (*)())__twr_v559)();
    _mng_byte561 = __twr_v560;
    __twr_v562 = (uint64_t)(&LexCharTreatment);
    __twr_v563 = __twr_v562 + _mng_byte561;
    __twr_v564 = *(uint8_t*)(__twr_v563);
    __twr_v565 = 3ULL;
    if (__twr_v564 != __twr_v565) { goto __twr_l128; } else { goto __twr_l127; }
    __twr_l127:;
    __twr_v566 = (uint64_t)(&LexCurrentStream);
    __twr_v567 = *(uint64_t*)(__twr_v566);
    _mng_stream544 = __twr_v567;
    if (!(_mng_stream544)) { goto __twr_l130; } else { goto __twr_l131; }
    __twr_l131:;
    __twr_v568 = 8ULL;
    __twr_v569 = _mng_stream544 + __twr_v568;
    __twr_v570 = *(uint64_t*)(__twr_v569);
    __twr_v571 = _mng_token539 + __twr_v568;
    *(uint64_t*)(__twr_v571) = __twr_v570;
    __twr_v572 = 44ULL;
    __twr_v573 = _mng_stream544 + __twr_v572;
    __twr_v574 = *(uint32_t*)(__twr_v573);
    __twr_v575 = 16ULL;
    __twr_v576 = _mng_token539 + __twr_v575;
    *(uint32_t*)(__twr_v576) = __twr_v574;
    __twr_v577 = 48ULL;
    __twr_v578 = _mng_stream544 + __twr_v577;
    __twr_v579 = *(uint32_t*)(__twr_v578);
    __twr_v580 = 20ULL;
    __twr_v581 = _mng_token539 + __twr_v580;
    *(uint32_t*)(__twr_v581) = __twr_v579;
    __twr_l130:;
    __twr_v582 = (uint64_t)(&LexGetCharacter);
    __twr_v583 = ((uint64_t (*)())__twr_v582)();
    _mng_byte561 = __twr_v583;
    __twr_l129:;
    __twr_v584 = (uint64_t)(&LexCharTreatment);
    __twr_v585 = __twr_v584 + _mng_byte561;
    __twr_v586 = *(uint8_t*)(__twr_v585);
    __twr_v587 = 3ULL;
    if (__twr_v586 == __twr_v587) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    if (_mng_byte561) { goto __twr_l132; } else { goto __twr_l133; }
    __twr_l133:;
    __twr_v588 = 0ULL;
    _jkl_retv = __twr_v588;
    goto _jkl_epilogue;
    __twr_l132:;
    __twr_v589 = 34ULL;
    if (_mng_byte561 != __twr_v589) { goto __twr_l134; } else { goto __twr_l135; }
    __twr_l135:;
    __twr_v590 = (uint64_t)(&TlAllocateFromZone);
    __twr_v591 = (uint64_t)(&LexInternedStringZone);
    __twr_v592 = ((uint64_t (*)(uint64_t))__twr_v590)(__twr_v591);
    _mng_internedstring593 = __twr_v592;
    __twr_v594 = 48ULL;
    __twr_v595 = _mng_internedstring593 + __twr_v594;
    _mng_dynamicbuffer596 = __twr_v595;
    __twr_v597 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v597)(_mng_dynamicbuffer596);
    __twr_v598 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v599 = 34ULL;
    __twr_v600 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v598)(_mng_token539, __twr_v599, _mng_dynamicbuffer596, __twr_v600, (uint64_t)(&_mng_dumpster601));
    __twr_v602 = 4ULL;
    _jkl_retv = __twr_v602;
    goto _jkl_epilogue;
    __twr_l134:;
    __twr_v603 = 39ULL;
    if (_mng_byte561 != __twr_v603) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v604 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v605 = 39ULL;
    __twr_v606 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v604)(_mng_token539, __twr_v605, __twr_v606, _mng_buffer540, (uint64_t)(&_mng_length541));
    __twr_v607 = 8ULL;
    _jkl_retv = __twr_v607;
    goto _jkl_epilogue;
    __twr_l136:;
    __twr_v608 = (uint64_t)(&LexCharTreatment);
    __twr_v609 = 1ULL;
    __twr_v610 = __twr_v608 + _mng_byte561;
    __twr_v611 = *(uint8_t*)(__twr_v610);
    if (__twr_v611 != __twr_v609) { goto __twr_l138; } else { goto __twr_l139; }
    __twr_l139:;
    _mng_length541 = 1ULL;
    __twr_v612 = 0ULL;
    __twr_v613 = 1ULL;
    *(uint8_t*)(_mng_buffer540) = _mng_byte561;
    __twr_v614 = 1ULL;
    __twr_v615 = _mng_buffer540 + __twr_v614;
    *(uint8_t*)(__twr_v615) = __twr_v612;
    _jkl_retv = __twr_v613;
    goto _jkl_epilogue;
    __twr_l138:;
    __twr_v616 = (uint64_t)(&LexCharTreatment);
    __twr_v617 = __twr_v616 + _mng_byte561;
    __twr_v618 = *(uint8_t*)(__twr_v617);
    __twr_v619 = 2ULL;
    if (__twr_v618 != __twr_v619) { goto __twr_l140; } else { goto __twr_l141; }
    __twr_l141:;
    _mng_len620 = 0ULL;
    __twr_v621 = (uint64_t)(&LexCharTreatment);
    __twr_v622 = __twr_v621 + _mng_byte561;
    __twr_v623 = *(uint8_t*)(__twr_v622);
    __twr_v624 = 2ULL;
    if (__twr_v623 != __twr_v624) { goto __twr_l143; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v625 = 127ULL;
    if (_mng_len620 != __twr_v625) { goto __twr_l145; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v626 = (uint64_t)(&LexTokenError);
    __twr_v627 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v628 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v626)(_mng_token539, __twr_v627, __twr_v628, __twr_v628, __twr_v628);
    __twr_l145:;
    __twr_v629 = 1ULL;
    __twr_v630 = _mng_buffer540 + _mng_len620;
    *(uint8_t*)(__twr_v630) = _mng_byte561;
    __twr_v631 = _mng_len620 + __twr_v629;
    _mng_len620 = __twr_v631;
    __twr_v632 = (uint64_t)(&LexGetCharacter);
    __twr_v633 = ((uint64_t (*)())__twr_v632)();
    _mng_byte561 = __twr_v633;
    __twr_l144:;
    __twr_v634 = (uint64_t)(&LexCharTreatment);
    __twr_v635 = __twr_v634 + _mng_byte561;
    __twr_v636 = *(uint8_t*)(__twr_v635);
    __twr_v637 = 2ULL;
    if (__twr_v636 == __twr_v637) { goto __twr_l142; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v638 = 0ULL;
    __twr_v639 = _mng_buffer540 + _mng_len620;
    *(uint8_t*)(__twr_v639) = __twr_v638;
    _mng_length541 = _mng_len620;
    __twr_v640 = (uint64_t)(&LexCharTreatment);
    __twr_v641 = __twr_v640 + _mng_byte561;
    __twr_v642 = *(uint8_t*)(__twr_v641);
    __twr_v643 = 3ULL;
    if (__twr_v642 == __twr_v643) { goto __twr_l147; } else { goto __twr_l148; }
    __twr_l148:;
    __twr_v644 = (uint64_t)(&LexCurrentStream);
    __twr_v645 = *(uint64_t*)(__twr_v644);
    __twr_v646 = 84ULL;
    __twr_v647 = __twr_v645 + __twr_v646;
    *(uint8_t*)(__twr_v647) = _mng_byte561;
    __twr_l147:;
    __twr_v648 = 2ULL;
    _jkl_retv = __twr_v648;
    goto _jkl_epilogue;
    __twr_l140:;
    __twr_v649 = 65ULL;
    if (_mng_byte561 < __twr_v649) { goto __twr_l151; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v650 = 90ULL;
    if (_mng_byte561 > __twr_v650) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v651 = 1ULL;
    goto __twr_l152;
    __twr_l151:;
    __twr_v651 = 0ULL;
    __twr_l152:;
    _mng_uppercaseonly652 = __twr_v651;
    _mng_len653 = 0ULL;
    __twr_v654 = (uint64_t)(&LexCharTreatment);
    __twr_v655 = __twr_v654 + _mng_byte561;
    __twr_v656 = *(uint8_t*)(__twr_v655);
    if (__twr_v656) { goto __twr_l154; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v657 = 127ULL;
    if (_mng_len653 != __twr_v657) { goto __twr_l156; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v658 = (uint64_t)(&LexTokenError);
    __twr_v659 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v660 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v658)(_mng_token539, __twr_v659, __twr_v660, __twr_v660, __twr_v660);
    __twr_l156:;
    if (!(_mng_uppercaseonly652)) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_v661 = 65ULL;
    if (_mng_byte561 < __twr_v661) { goto __twr_l162; } else { goto __twr_l160; }
    __twr_l160:;
    __twr_v662 = 90ULL;
    if (_mng_byte561 > __twr_v662) { goto __twr_l162; } else { goto __twr_l161; }
    __twr_l161:;
    __twr_v663 = 1ULL;
    goto __twr_l163;
    __twr_l162:;
    __twr_v663 = 0ULL;
    __twr_l163:;
    _mng_uppercaseonly652 = __twr_v663;
    __twr_l158:;
    __twr_v664 = 1ULL;
    __twr_v665 = _mng_buffer540 + _mng_len653;
    *(uint8_t*)(__twr_v665) = _mng_byte561;
    __twr_v666 = _mng_len653 + __twr_v664;
    _mng_len653 = __twr_v666;
    __twr_v667 = (uint64_t)(&LexGetCharacter);
    __twr_v668 = ((uint64_t (*)())__twr_v667)();
    _mng_byte561 = __twr_v668;
    __twr_l155:;
    __twr_v669 = (uint64_t)(&LexCharTreatment);
    __twr_v670 = __twr_v669 + _mng_byte561;
    __twr_v671 = *(uint8_t*)(__twr_v670);
    if (!(__twr_v671)) { goto __twr_l153; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v672 = 0ULL;
    __twr_v673 = _mng_buffer540 + _mng_len653;
    *(uint8_t*)(__twr_v673) = __twr_v672;
    _mng_length541 = _mng_len653;
    __twr_v674 = (uint64_t)(&LexCharTreatment);
    __twr_v675 = 1ULL;
    __twr_v676 = __twr_v674 + _mng_byte561;
    __twr_v677 = *(uint8_t*)(__twr_v676);
    if (__twr_v677 == __twr_v675) { goto __twr_l165; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v678 = (uint64_t)(&LexCharTreatment);
    __twr_v679 = __twr_v678 + _mng_byte561;
    __twr_v680 = *(uint8_t*)(__twr_v679);
    __twr_v681 = 2ULL;
    if (__twr_v680 != __twr_v681) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v682 = (uint64_t)(&LexCurrentStream);
    __twr_v683 = *(uint64_t*)(__twr_v682);
    __twr_v684 = 84ULL;
    __twr_v685 = __twr_v683 + __twr_v684;
    *(uint8_t*)(__twr_v685) = _mng_byte561;
    __twr_l164:;
    if (!(_mng_uppercaseonly652)) { goto __twr_l167; } else { goto __twr_l169; }
    __twr_l169:;
    __twr_v686 = 1ULL;
    if (_mng_len653 <= __twr_v686) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v687 = 16ULL;
    _jkl_retv = __twr_v687;
    goto _jkl_epilogue;
    __twr_l167:;
    __twr_v688 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v689 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v690 = *(uint64_t*)(__twr_v689);
    __twr_v691 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v688)(__twr_v690, _mng_buffer540);
    _mng_macro692 = __twr_v691;
    if (_mng_macro692) { goto __twr_l170; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v693 = 0ULL;
    _jkl_retv = __twr_v693;
    goto _jkl_epilogue;
    __twr_l170:;
    __twr_v694 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v694)(_mng_macro692, _mng_token539);
    goto __twr_lLoopOnMacro;
    __twr_l123:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length541;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring593;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token695) {
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t _mng_buffer698[16];
    uint64_t __twr_v699;
    uint64_t _mng_length700;
    uint64_t _mng_internedstring701;
    uint64_t _mng_tokenflag702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t _mng_keyword709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    __twr_v696 = (uint64_t)(&LexGetTokenContents);
    __twr_v697 = (uint64_t)(&_mng_buffer698);
    __twr_v699 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v696)(_mng_token695, __twr_v697, (uint64_t)(&_mng_length700), (uint64_t)(&_mng_internedstring701));
    _mng_tokenflag702 = __twr_v699;
    __twr_v703 = 19ULL;
    __twr_v704 = _mng_tokenflag702 & __twr_v703;
    if (!(__twr_v704)) { goto __twr_l173; } else { goto __twr_l174; }
    __twr_l174:;
    __twr_v705 = (uint64_t)(&TlLookupHashTable);
    __twr_v706 = (uint64_t)(&LexKeywordHashTable);
    __twr_v707 = (uint64_t)(&_mng_buffer698);
    __twr_v708 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v705)(__twr_v706, __twr_v707);
    _mng_keyword709 = __twr_v708;
    if (_mng_keyword709) { goto __twr_l175; } else { goto __twr_l176; }
    __twr_l176:;
    __twr_v710 = 16ULL;
    __twr_v711 = _mng_tokenflag702 & __twr_v710;
    if (!(__twr_v711)) { goto __twr_l177; } else { goto __twr_l178; }
    __twr_l178:;
    __twr_v712 = (uint64_t)(&LexTokenError);
    __twr_v713 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).");
    __twr_v714 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v712)(_mng_token695, __twr_v713, __twr_v714, __twr_v714, __twr_v714);
    __twr_l177:;
    __twr_v715 = (uint64_t)(&LexTokenError);
    __twr_v716 = (uint64_t)(&"Unknown keyword");
    __twr_v717 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v715)(_mng_token695, __twr_v716, __twr_v717, __twr_v717, __twr_v717);
    __twr_l175:;
    __twr_v718 = 48ULL;
    __twr_v719 = _mng_keyword709 + __twr_v718;
    __twr_v720 = *(uint8_t*)(__twr_v719);
    __twr_v721 = 24ULL;
    __twr_v722 = _mng_token695 + __twr_v721;
    *(uint8_t*)(__twr_v722) = __twr_v720;
    __twr_v723 = 49ULL;
    __twr_v724 = _mng_keyword709 + __twr_v723;
    __twr_v725 = *(uint8_t*)(__twr_v724);
    __twr_v726 = 25ULL;
    __twr_v727 = _mng_token695 + __twr_v726;
    *(uint8_t*)(__twr_v727) = __twr_v725;
    __twr_v728 = 50ULL;
    __twr_v729 = _mng_keyword709 + __twr_v728;
    __twr_v730 = *(uint8_t*)(__twr_v729);
    __twr_v731 = 26ULL;
    __twr_v732 = _mng_token695 + __twr_v731;
    *(uint8_t*)(__twr_v732) = __twr_v730;
    goto _jkl_epilogue;
    __twr_l173:;
    __twr_v733 = 8ULL;
    __twr_v734 = _mng_tokenflag702 & __twr_v733;
    if (!(__twr_v734)) { goto __twr_l179; } else { goto __twr_l180; }
    __twr_l180:;
    __twr_v735 = 5ULL;
    __twr_v736 = 24ULL;
    __twr_v737 = _mng_token695 + __twr_v736;
    *(uint8_t*)(__twr_v737) = __twr_v735;
    __twr_v738 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v739 = (uint64_t)(&_mng_buffer698);
    __twr_v740 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v738)(_mng_token695, __twr_v739);
    *(uint64_t*)(_mng_token695) = __twr_v740;
    goto _jkl_epilogue;
    __twr_l179:;
    __twr_v741 = 4ULL;
    __twr_v742 = _mng_tokenflag702 & __twr_v741;
    if (!(__twr_v742)) { goto __twr_l181; } else { goto __twr_l182; }
    __twr_l182:;
    __twr_v743 = 4ULL;
    __twr_v744 = 24ULL;
    __twr_v745 = _mng_token695 + __twr_v744;
    *(uint8_t*)(__twr_v745) = __twr_v743;
    *(uint64_t*)(_mng_token695) = _mng_internedstring701;
    goto _jkl_epilogue;
    __twr_l181:;
    __twr_v746 = 32ULL;
    __twr_v747 = _mng_tokenflag702 & __twr_v746;
    if (!(__twr_v747)) { goto __twr_l183; } else { goto __twr_l184; }
    __twr_l184:;
    __twr_v748 = 6ULL;
    __twr_v749 = 24ULL;
    __twr_v750 = _mng_token695 + __twr_v749;
    *(uint8_t*)(__twr_v750) = __twr_v748;
    goto _jkl_epilogue;
    __twr_l183:;
    if (_mng_length700) { goto __twr_l185; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v751 = 6ULL;
    __twr_v752 = 24ULL;
    __twr_v753 = _mng_token695 + __twr_v752;
    *(uint8_t*)(__twr_v753) = __twr_v751;
    goto _jkl_epilogue;
    __twr_l185:;
    __twr_v754 = (uint64_t)(&_mng_buffer698);
    __twr_v755 = *(uint8_t*)(__twr_v754);
    __twr_v756 = 48ULL;
    if (__twr_v755 < __twr_v756) { goto __twr_l187; } else { goto __twr_l189; }
    __twr_l189:;
    __twr_v757 = (uint64_t)(&_mng_buffer698);
    __twr_v758 = *(uint8_t*)(__twr_v757);
    __twr_v759 = 57ULL;
    if (__twr_v758 > __twr_v759) { goto __twr_l187; } else { goto __twr_l188; }
    __twr_l188:;
    __twr_v760 = 5ULL;
    __twr_v761 = 24ULL;
    __twr_v762 = _mng_token695 + __twr_v761;
    *(uint8_t*)(__twr_v762) = __twr_v760;
    __twr_v763 = (uint64_t)(&LexCrunchNumber);
    __twr_v764 = (uint64_t)(&_mng_buffer698);
    __twr_v765 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v763)(_mng_token695, __twr_v764);
    *(uint64_t*)(_mng_token695) = __twr_v765;
    goto _jkl_epilogue;
    __twr_l187:;
    __twr_v766 = (uint64_t)(&LexTokenError);
    __twr_v767 = (uint64_t)(&"Unknown token");
    __twr_v768 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v766)(_mng_token695, __twr_v767, __twr_v768, __twr_v768, __twr_v768);
    __twr_l172:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest769, uint64_t _mng_src770) {
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    __twr_v771 = *(uint64_t*)(_mng_src770);
    *(uint64_t*)(_mng_dest769) = __twr_v771;
    __twr_v772 = 8ULL;
    __twr_v773 = _mng_src770 + __twr_v772;
    __twr_v774 = *(uint64_t*)(__twr_v773);
    __twr_v775 = _mng_dest769 + __twr_v772;
    *(uint64_t*)(__twr_v775) = __twr_v774;
    __twr_v776 = 16ULL;
    __twr_v777 = _mng_src770 + __twr_v776;
    __twr_v778 = *(uint32_t*)(__twr_v777);
    __twr_v779 = _mng_dest769 + __twr_v776;
    *(uint32_t*)(__twr_v779) = __twr_v778;
    __twr_v780 = 20ULL;
    __twr_v781 = _mng_src770 + __twr_v780;
    __twr_v782 = *(uint32_t*)(__twr_v781);
    __twr_v783 = _mng_dest769 + __twr_v780;
    *(uint32_t*)(__twr_v783) = __twr_v782;
    __twr_v784 = 24ULL;
    __twr_v785 = _mng_src770 + __twr_v784;
    __twr_v786 = *(uint8_t*)(__twr_v785);
    __twr_v787 = _mng_dest769 + __twr_v784;
    *(uint8_t*)(__twr_v787) = __twr_v786;
    __twr_v788 = 25ULL;
    __twr_v789 = _mng_src770 + __twr_v788;
    __twr_v790 = *(uint8_t*)(__twr_v789);
    __twr_v791 = _mng_dest769 + __twr_v788;
    *(uint8_t*)(__twr_v791) = __twr_v790;
    __twr_v792 = 26ULL;
    __twr_v793 = _mng_src770 + __twr_v792;
    __twr_v794 = *(uint8_t*)(__twr_v793);
    __twr_v795 = _mng_dest769 + __twr_v792;
    *(uint8_t*)(__twr_v795) = __twr_v794;
    __twr_l190:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token796) {
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t _mng_index799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    __twr_v797 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v798 = *(uint32_t*)(__twr_v797);
    _mng_index799 = __twr_v798;
    if (!(_mng_index799)) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v800 = (uint64_t)(&LexCopyToken);
    __twr_v801 = (uint64_t)(&LexPutbackStack);
    __twr_v802 = 1ULL;
    __twr_v803 = _mng_index799 - __twr_v802;
    __twr_v804 = 5ULL;
    __twr_v805 = __twr_v803 << __twr_v804;
    __twr_v806 = __twr_v801 + __twr_v805;
    ((void (*)(uint64_t, uint64_t))__twr_v800)(_mng_token796, __twr_v806);
    __twr_v807 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v807) = __twr_v803;
    goto _jkl_epilogue;
    __twr_l192:;
    __twr_v808 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v808)(_mng_token796);
    __twr_l191:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token809) {
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t _mng_index812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    __twr_v810 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v811 = *(uint32_t*)(__twr_v810);
    _mng_index812 = __twr_v811;
    __twr_v813 = 256ULL;
    if (_mng_index812 != __twr_v813) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    __twr_v814 = (uint64_t)(&TlInternalError);
    __twr_v815 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v816 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v814)(__twr_v815, __twr_v816, __twr_v816, __twr_v816);
    __twr_l195:;
    __twr_v817 = (uint64_t)(&LexCopyToken);
    __twr_v818 = (uint64_t)(&LexPutbackStack);
    __twr_v819 = 5ULL;
    __twr_v820 = _mng_index812 << __twr_v819;
    __twr_v821 = __twr_v818 + __twr_v820;
    ((void (*)(uint64_t, uint64_t))__twr_v817)(__twr_v821, _mng_token809);
    __twr_v822 = 1ULL;
    __twr_v823 = _mng_index812 + __twr_v822;
    __twr_v824 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v824) = __twr_v823;
    __twr_l194:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token825, uint64_t _mng_type826, uint64_t _mng_subtype827) {
    uint64_t _jkl_retv;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t _mng_index830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t _mng_matchtoken841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    __twr_v828 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v829 = *(uint32_t*)(__twr_v828);
    _mng_index830 = __twr_v829;
    if (_mng_index830) { goto __twr_l198; } else { goto __twr_l199; }
    __twr_l199:;
    __twr_v831 = (uint64_t)(&LexNextToken);
    __twr_v832 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v831)(__twr_v832);
    __twr_v833 = 1ULL;
    __twr_v834 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v834) = __twr_v833;
    _mng_index830 = 1ULL;
    __twr_l198:;
    __twr_v835 = (uint64_t)(&LexPutbackStack);
    __twr_v836 = 1ULL;
    __twr_v837 = _mng_index830 - __twr_v836;
    __twr_v838 = 5ULL;
    __twr_v839 = __twr_v837 << __twr_v838;
    __twr_v840 = __twr_v835 + __twr_v839;
    _mng_matchtoken841 = __twr_v840;
    if (!(_mng_token825)) { goto __twr_l200; } else { goto __twr_l201; }
    __twr_l201:;
    __twr_v842 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v842)(_mng_token825, _mng_matchtoken841);
    __twr_l200:;
    __twr_v843 = 24ULL;
    __twr_v844 = _mng_matchtoken841 + __twr_v843;
    __twr_v845 = *(uint8_t*)(__twr_v844);
    if (__twr_v845 == _mng_type826) { goto __twr_l202; } else { goto __twr_l203; }
    __twr_l203:;
    __twr_v846 = 24ULL;
    __twr_v847 = _mng_matchtoken841 + __twr_v846;
    __twr_v848 = *(uint8_t*)(__twr_v847);
    __twr_v849 = 6ULL;
    if (__twr_v848 != __twr_v849) { goto __twr_l204; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v850 = 1ULL;
    __twr_v851 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v852 = *(uint32_t*)(__twr_v851);
    __twr_v853 = __twr_v852 - __twr_v850;
    *(uint32_t*)(__twr_v851) = __twr_v853;
    __twr_l204:;
    __twr_v854 = 0ULL;
    _jkl_retv = __twr_v854;
    goto _jkl_epilogue;
    __twr_l202:;
    if (!(_mng_subtype827)) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v855 = 25ULL;
    __twr_v856 = _mng_matchtoken841 + __twr_v855;
    __twr_v857 = *(uint8_t*)(__twr_v856);
    if (__twr_v857 != _mng_subtype827) { goto __twr_l206; } else { goto __twr_l207; }
    __twr_l207:;
    __twr_v858 = 1ULL;
    __twr_v859 = _mng_index830 - __twr_v858;
    __twr_v860 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v860) = __twr_v859;
    _jkl_retv = __twr_v858;
    goto _jkl_epilogue;
    __twr_l206:;
    __twr_v861 = 0ULL;
    _jkl_retv = __twr_v861;
    goto _jkl_epilogue;
    __twr_l197:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg161);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename162, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock163, uint64_t _mng_filepath164);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope165);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg166);
extern void LexExpandMacro(uint64_t _mng_macro167, uint64_t _mng_token168);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream169, uint64_t _mng_macro170);
extern void LexUninitializeStream(uint64_t _mng_stream171);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream172);
extern void LexPushStream(uint64_t _mng_stream173);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream174, uint64_t _mng_fileblock175, uint64_t _mng_handle176);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock177, uint64_t _mng_handle178);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest179, uint64_t _mng_src180);
extern void LexGetToken(uint64_t _mng_token181);
extern void LexPutbackToken(uint64_t _mng_token182);
extern uint64_t LexMatchToken(uint64_t _mng_token183, uint64_t _mng_type184, uint64_t _mng_subtype185);
extern void LexStreamError(uint64_t _mng_str186, uint64_t _mng_err1187, uint64_t _mng_err2188, uint64_t _mng_err3189);
extern void LexTokenError(uint64_t _mng_token190, uint64_t _mng_str191, uint64_t _mng_err1192, uint64_t _mng_err2193, uint64_t _mng_err3194);
extern uint64_t LexCrunchNumber(uint64_t _mng_token195, uint64_t _mng_buffer196);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath197);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name198, uint64_t _mng_type199, uint64_t _mng_subtype200, uint64_t _mng_context201) {
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t _mng_keyword208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    __twr_v202 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v203 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v204 = *(uint64_t*)(__twr_v203);
    __twr_v205 = 56ULL;
    __twr_v206 = __twr_v204 * __twr_v205;
    __twr_v207 = __twr_v202 + __twr_v206;
    _mng_keyword208 = __twr_v207;
    __twr_v209 = 1ULL;
    __twr_v210 = __twr_v204 + __twr_v209;
    *(uint64_t*)(__twr_v203) = __twr_v210;
    __twr_v211 = 48ULL;
    __twr_v212 = _mng_keyword208 + __twr_v211;
    *(uint8_t*)(__twr_v212) = _mng_type199;
    __twr_v213 = 49ULL;
    __twr_v214 = _mng_keyword208 + __twr_v213;
    *(uint8_t*)(__twr_v214) = _mng_subtype200;
    __twr_v215 = 50ULL;
    __twr_v216 = _mng_keyword208 + __twr_v215;
    *(uint8_t*)(__twr_v216) = _mng_context201;
    __twr_v217 = (uint64_t)(&TlInsertHashTable);
    __twr_v218 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v217)(__twr_v218, _mng_keyword208, _mng_name198);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexPrintError(uint64_t _mng_filename219, uint64_t _mng_linenumber220, uint64_t _mng_linepos221, uint64_t _mng_str222, uint64_t _mng_err1223, uint64_t _mng_err2224, uint64_t _mng_err3225) {
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    __twr_v226 = (uint64_t)(&TlPrintString);
    ((void (*)(uint64_t))__twr_v226)(_mng_filename219);
    __twr_v227 = (uint64_t)(&":");
    ((void (*)(uint64_t))__twr_v226)(__twr_v227);
    __twr_v228 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v228)(_mng_linenumber220);
    __twr_v229 = (uint64_t)(&":");
    ((void (*)(uint64_t))__twr_v226)(__twr_v229);
    ((void (*)(uint64_t))__twr_v228)(_mng_linepos221);
    __twr_v230 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v226)(__twr_v230);
    ((void (*)(uint64_t))__twr_v226)(_mng_str222);
    __twr_v231 = (uint64_t)(&" (");
    ((void (*)(uint64_t))__twr_v226)(__twr_v231);
    ((void (*)(uint64_t))__twr_v228)(_mng_err1223);
    __twr_v232 = (uint64_t)(&" ");
    ((void (*)(uint64_t))__twr_v226)(__twr_v232);
    ((void (*)(uint64_t))__twr_v228)(_mng_err2224);
    __twr_v233 = (uint64_t)(&" ");
    ((void (*)(uint64_t))__twr_v226)(__twr_v233);
    ((void (*)(uint64_t))__twr_v228)(_mng_err3225);
    __twr_v234 = (uint64_t)(&")\n");
    ((void (*)(uint64_t))__twr_v226)(__twr_v234);
    __twr_v235 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v235)();
    __twr_l2:;
    _jkl_epilogue:;
}
void LexStreamError(uint64_t _mng_str236, uint64_t _mng_err1237, uint64_t _mng_err2238, uint64_t _mng_err3239) {
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t _mng_stream242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    __twr_v240 = (uint64_t)(&LexCurrentStream);
    __twr_v241 = *(uint64_t*)(__twr_v240);
    _mng_stream242 = __twr_v241;
    __twr_v243 = (uint64_t)(&LexPrintError);
    __twr_v244 = 8ULL;
    __twr_v245 = _mng_stream242 + __twr_v244;
    __twr_v246 = *(uint64_t*)(__twr_v245);
    __twr_v247 = 304ULL;
    __twr_v248 = __twr_v246 + __twr_v247;
    __twr_v249 = 44ULL;
    __twr_v250 = _mng_stream242 + __twr_v249;
    __twr_v251 = *(uint32_t*)(__twr_v250);
    __twr_v252 = 48ULL;
    __twr_v253 = _mng_stream242 + __twr_v252;
    __twr_v254 = *(uint32_t*)(__twr_v253);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v243)(__twr_v248, __twr_v251, __twr_v254, _mng_str236, _mng_err1237, _mng_err2238, _mng_err3239);
    __twr_l3:;
    _jkl_epilogue:;
}
void LexTokenError(uint64_t _mng_token255, uint64_t _mng_str256, uint64_t _mng_err1257, uint64_t _mng_err2258, uint64_t _mng_err3259) {
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    __twr_v260 = (uint64_t)(&LexPrintError);
    __twr_v261 = 8ULL;
    __twr_v262 = _mng_token255 + __twr_v261;
    __twr_v263 = *(uint64_t*)(__twr_v262);
    __twr_v264 = 304ULL;
    __twr_v265 = __twr_v263 + __twr_v264;
    __twr_v266 = 16ULL;
    __twr_v267 = _mng_token255 + __twr_v266;
    __twr_v268 = *(uint32_t*)(__twr_v267);
    __twr_v269 = 20ULL;
    __twr_v270 = _mng_token255 + __twr_v269;
    __twr_v271 = *(uint32_t*)(__twr_v270);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v260)(__twr_v265, __twr_v268, __twr_v271, _mng_str256, _mng_err1257, _mng_err2258, _mng_err3259);
    __twr_l4:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_dumpster277;
    uint64_t _mng_fileblock278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_filestream285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    __twr_v272 = (uint64_t)(&FeCreateFileBlock);
    __twr_v273 = (uint64_t)(&FeInputFile);
    __twr_v274 = 0ULL;
    __twr_v275 = 1ULL;
    __twr_v276 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v272)(__twr_v273, (uint64_t)(&_mng_dumpster277));
    _mng_fileblock278 = __twr_v276;
    __twr_v279 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v279)(_mng_fileblock278, __twr_v273);
    __twr_v280 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v280)();
    __twr_v281 = (uint64_t)(&LexCreateFileStream);
    __twr_v282 = (uint64_t)(&FeInputFileHandle);
    __twr_v283 = *(uint64_t*)(__twr_v282);
    __twr_v284 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v281)(_mng_fileblock278, __twr_v283);
    _mng_filestream285 = __twr_v284;
    __twr_v286 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v286)(_mng_filestream285);
    __twr_v287 = (uint64_t)(&TlInitializeZone);
    __twr_v288 = (uint64_t)(&LexInternedStringZone);
    __twr_v289 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v287)(__twr_v288, __twr_v289);
    __twr_v290 = (uint64_t)(&TlInitializeHashTable);
    __twr_v291 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v290)(__twr_v291);
    __twr_v292 = (uint64_t)(&LexInsertKeyword);
    __twr_v293 = (uint64_t)(&"END");
    __twr_v294 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v293, __twr_v294, __twr_v274, __twr_v274);
    __twr_v295 = (uint64_t)(&"TARGET");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v295, __twr_v275, __twr_v274, __twr_v274);
    __twr_v296 = (uint64_t)(&"FILE");
    __twr_v297 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v296, __twr_v297, __twr_v274, __twr_v274);
    __twr_v298 = (uint64_t)(&"DEPEND");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v298, __twr_v297, __twr_v275, __twr_v274);
    __twr_v299 = (uint64_t)(&"SOURCES");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v299, __twr_v297, __twr_v297, __twr_v274);
    __twr_v300 = (uint64_t)(&"INCDIR");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v300, __twr_v297, __twr_v294, __twr_v274);
    __twr_v301 = (uint64_t)(&"LIBDIR");
    __twr_v302 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v301, __twr_v297, __twr_v302, __twr_v274);
    __twr_v303 = (uint64_t)(&"LINKOPT");
    __twr_v304 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v303, __twr_v297, __twr_v304, __twr_v274);
    __twr_v305 = (uint64_t)(&"JKLOPT");
    __twr_v306 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v305, __twr_v297, __twr_v306, __twr_v274);
    __twr_v307 = (uint64_t)(&"LINK");
    __twr_v308 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v307, __twr_v297, __twr_v308, __twr_v274);
    __twr_v309 = (uint64_t)(&"DYLINK");
    __twr_v310 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v309, __twr_v297, __twr_v310, __twr_v274);
    __twr_v311 = (uint64_t)(&"PREBUILT");
    __twr_v312 = 9ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v311, __twr_v297, __twr_v312, __twr_v274);
    __twr_v313 = (uint64_t)(&"OBJECTS");
    __twr_v314 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v292)(__twr_v313, __twr_v297, __twr_v314, __twr_v274);
    __twr_l5:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t _mng_byte318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t _mng_nextbyte363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    _mng_comment315 = 0ULL;
    __twr_l7:;
    __twr_v316 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v317 = ((uint64_t (*)())__twr_v316)();
    _mng_byte318 = __twr_v317;
    if (_mng_byte318) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    goto __twr_l8;
    __twr_l9:;
    if (!(_mng_comment315)) { goto __twr_l13; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v319 = 10ULL;
    if (_mng_byte318 == __twr_v319) { goto __twr_l14; } else { goto __twr_l15; }
    __twr_l15:;
    goto __twr_l7;
    __twr_l14:;
    _mng_comment315 = 0ULL;
    goto __twr_l11;
    __twr_l13:;
    __twr_v320 = (uint64_t)(&LexCurrentStream);
    __twr_v321 = *(uint64_t*)(__twr_v320);
    __twr_v322 = 80ULL;
    __twr_v323 = __twr_v321 + __twr_v322;
    __twr_v324 = *(uint8_t*)(__twr_v323);
    if (!(__twr_v324)) { goto __twr_l17; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v325 = 0ULL;
    __twr_v326 = (uint64_t)(&LexCurrentStream);
    __twr_v327 = *(uint64_t*)(__twr_v326);
    __twr_v328 = 80ULL;
    __twr_v329 = __twr_v327 + __twr_v328;
    *(uint8_t*)(__twr_v329) = __twr_v325;
    goto __twr_l11;
    __twr_l17:;
    __twr_v330 = 92ULL;
    if (_mng_byte318 != __twr_v330) { goto __twr_l19; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v331 = 1ULL;
    __twr_v332 = (uint64_t)(&LexCurrentStream);
    __twr_v333 = *(uint64_t*)(__twr_v332);
    __twr_v334 = 80ULL;
    __twr_v335 = __twr_v333 + __twr_v334;
    *(uint8_t*)(__twr_v335) = __twr_v331;
    goto __twr_l11;
    __twr_l19:;
    __twr_v336 = (uint64_t)(&LexCurrentStream);
    __twr_v337 = *(uint64_t*)(__twr_v336);
    __twr_v338 = 81ULL;
    __twr_v339 = __twr_v337 + __twr_v338;
    __twr_v340 = *(uint8_t*)(__twr_v339);
    if (!(__twr_v340)) { goto __twr_l21; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v341 = 34ULL;
    __twr_v342 = (_mng_byte318 == __twr_v341);
    __twr_v343 = !__twr_v342;
    __twr_v344 = (uint64_t)(&LexCurrentStream);
    __twr_v345 = *(uint64_t*)(__twr_v344);
    __twr_v346 = 81ULL;
    __twr_v347 = __twr_v345 + __twr_v346;
    *(uint8_t*)(__twr_v347) = __twr_v343;
    goto __twr_l11;
    __twr_l21:;
    __twr_v348 = (uint64_t)(&LexCurrentStream);
    __twr_v349 = *(uint64_t*)(__twr_v348);
    __twr_v350 = 82ULL;
    __twr_v351 = __twr_v349 + __twr_v350;
    __twr_v352 = *(uint8_t*)(__twr_v351);
    if (!(__twr_v352)) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v353 = 39ULL;
    __twr_v354 = (_mng_byte318 == __twr_v353);
    __twr_v355 = !__twr_v354;
    __twr_v356 = (uint64_t)(&LexCurrentStream);
    __twr_v357 = *(uint64_t*)(__twr_v356);
    __twr_v358 = 82ULL;
    __twr_v359 = __twr_v357 + __twr_v358;
    *(uint8_t*)(__twr_v359) = __twr_v355;
    goto __twr_l11;
    __twr_l23:;
    __twr_v360 = 47ULL;
    if (_mng_byte318 != __twr_v360) { goto __twr_l25; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v361 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v362 = ((uint64_t (*)())__twr_v361)();
    _mng_nextbyte363 = __twr_v362;
    __twr_v364 = 47ULL;
    if (_mng_nextbyte363 != __twr_v364) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    _mng_comment315 = 1ULL;
    goto __twr_l7;
    __twr_l26:;
    __twr_v365 = (uint64_t)(&LexCurrentStream);
    __twr_v366 = *(uint64_t*)(__twr_v365);
    __twr_v367 = 83ULL;
    __twr_v368 = __twr_v366 + __twr_v367;
    *(uint8_t*)(__twr_v368) = _mng_nextbyte363;
    goto __twr_l11;
    __twr_l25:;
    __twr_v369 = 34ULL;
    if (_mng_byte318 != __twr_v369) { goto __twr_l29; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v370 = 1ULL;
    __twr_v371 = (uint64_t)(&LexCurrentStream);
    __twr_v372 = *(uint64_t*)(__twr_v371);
    __twr_v373 = 81ULL;
    __twr_v374 = __twr_v372 + __twr_v373;
    *(uint8_t*)(__twr_v374) = __twr_v370;
    goto __twr_l11;
    __twr_l29:;
    __twr_v375 = 39ULL;
    if (_mng_byte318 != __twr_v375) { goto __twr_l31; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v376 = 1ULL;
    __twr_v377 = (uint64_t)(&LexCurrentStream);
    __twr_v378 = *(uint64_t*)(__twr_v377);
    __twr_v379 = 82ULL;
    __twr_v380 = __twr_v378 + __twr_v379;
    *(uint8_t*)(__twr_v380) = __twr_v376;
    goto __twr_l11;
    __twr_l31:;
    __twr_v381 = 35ULL;
    if (_mng_byte318 != __twr_v381) { goto __twr_l11; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v382 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v382)();
    _mng_byte318 = 10ULL;
    __twr_l11:;
    __twr_v383 = (uint64_t)(&LexFalseCount);
    __twr_v384 = *(uint32_t*)(__twr_v383);
    if (!(__twr_v384)) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    goto __twr_l7;
    __twr_l33:;
    goto __twr_l8;
    goto __twr_l7;
    __twr_l8:;
    _jkl_retv = _mng_byte318;
    goto _jkl_epilogue;
    __twr_l6:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token385, uint64_t _mng_terminator386, uint64_t _mng_dynamicbuffer387, uint64_t _mng_buffer388, uint64_t _mng_o_length) {
    uint64_t _mng_len389;
    uint64_t _mng_isbackslash390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t _mng_byte393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t _mng_length415;
    _mng_len389 = 0ULL;
    _mng_isbackslash390 = 0ULL;
    __twr_l36:;
    __twr_v391 = (uint64_t)(&LexGetCharacter);
    __twr_v392 = ((uint64_t (*)())__twr_v391)();
    _mng_byte393 = __twr_v392;
    if (_mng_byte393) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v394 = (uint64_t)(&LexTokenError);
    __twr_v395 = (uint64_t)(&"String token terminated by EOF!");
    __twr_v396 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v394)(_mng_token385, __twr_v395, __twr_v396, __twr_v396, __twr_v396);
    __twr_l38:;
    if (_mng_isbackslash390) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    if (_mng_byte393 != _mng_terminator386) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    goto __twr_l37;
    goto __twr_l43;
    __twr_l45:;
    __twr_v397 = 92ULL;
    if (_mng_byte393 != __twr_v397) { goto __twr_l43; } else { goto __twr_l46; }
    __twr_l46:;
    _mng_isbackslash390 = 1ULL;
    goto __twr_l36;
    __twr_l43:;
    goto __twr_l40;
    __twr_l42:;
    _mng_isbackslash390 = 0ULL;
    __twr_v398 = 110ULL;
    if (_mng_byte393 != __twr_v398) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    _mng_byte393 = 10ULL;
    goto __twr_l47;
    __twr_l49:;
    __twr_v399 = 116ULL;
    if (_mng_byte393 != __twr_v399) { goto __twr_l51; } else { goto __twr_l50; }
    __twr_l50:;
    _mng_byte393 = 9ULL;
    goto __twr_l47;
    __twr_l51:;
    __twr_v400 = 114ULL;
    if (_mng_byte393 != __twr_v400) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    _mng_byte393 = 13ULL;
    goto __twr_l47;
    __twr_l53:;
    __twr_v401 = 98ULL;
    if (_mng_byte393 != __twr_v401) { goto __twr_l55; } else { goto __twr_l54; }
    __twr_l54:;
    _mng_byte393 = 8ULL;
    goto __twr_l47;
    __twr_l55:;
    __twr_v402 = 91ULL;
    if (_mng_byte393 != __twr_v402) { goto __twr_l47; } else { goto __twr_l56; }
    __twr_l56:;
    _mng_byte393 = 27ULL;
    __twr_l47:;
    __twr_l40:;
    if (!(_mng_dynamicbuffer387)) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v403 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v403)(_mng_dynamicbuffer387, _mng_byte393);
    goto __twr_l57;
    __twr_l59:;
    __twr_v404 = 127ULL;
    if (_mng_len389 != __twr_v404) { goto __twr_l61; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v405 = (uint64_t)(&LexTokenError);
    __twr_v406 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v407 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v405)(_mng_token385, __twr_v406, __twr_v407, __twr_v407, __twr_v407);
    goto __twr_l57;
    __twr_l61:;
    __twr_v408 = 1ULL;
    __twr_v409 = _mng_buffer388 + _mng_len389;
    *(uint8_t*)(__twr_v409) = _mng_byte393;
    __twr_v410 = _mng_len389 + __twr_v408;
    _mng_len389 = __twr_v410;
    __twr_l57:;
    goto __twr_l36;
    __twr_l37:;
    if (!(_mng_dynamicbuffer387)) { goto __twr_l64; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v411 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v412 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v411)(_mng_dynamicbuffer387, __twr_v412);
    goto __twr_l62;
    __twr_l64:;
    __twr_v413 = 0ULL;
    __twr_v414 = _mng_buffer388 + _mng_len389;
    *(uint8_t*)(__twr_v414) = __twr_v413;
    _mng_length415 = _mng_len389;
    __twr_l62:;
    __twr_l35:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length415;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token416, uint64_t _mng_buffer417) {
    uint64_t _jkl_retv;
    uint64_t _mng_num418;
    uint64_t _mng_i419;
    uint64_t __twr_v420;
    uint64_t _mng_lastnum421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    _mng_num418 = 0ULL;
    _mng_i419 = 0ULL;
    __twr_v420 = *(uint8_t*)(_mng_buffer417);
    if (!(__twr_v420)) { goto __twr_l67; } else { goto __twr_l66; }
    __twr_l66:;
    _mng_lastnum421 = _mng_num418;
    __twr_v422 = 8ULL;
    __twr_v423 = _mng_num418 << __twr_v422;
    _mng_num418 = __twr_v423;
    if (!(_mng_lastnum421)) { goto __twr_l69; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v424 = _mng_num418 / _mng_lastnum421;
    __twr_v425 = 256ULL;
    if (__twr_v424 == __twr_v425) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v426 = (uint64_t)(&LexTokenError);
    __twr_v427 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v428 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v426)(_mng_token416, __twr_v427, __twr_v428, __twr_v428, __twr_v428);
    __twr_l69:;
    __twr_v429 = _mng_buffer417 + _mng_i419;
    __twr_v430 = *(uint8_t*)(__twr_v429);
    __twr_v431 = _mng_num418 + __twr_v430;
    _mng_num418 = __twr_v431;
    if (_mng_num418 >= _mng_lastnum421) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v432 = (uint64_t)(&LexTokenError);
    __twr_v433 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v434 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v432)(_mng_token416, __twr_v433, __twr_v434, __twr_v434, __twr_v434);
    __twr_l72:;
    __twr_v435 = 1ULL;
    __twr_v436 = _mng_i419 + __twr_v435;
    _mng_i419 = __twr_v436;
    __twr_l68:;
    __twr_v437 = _mng_buffer417 + _mng_i419;
    __twr_v438 = *(uint8_t*)(__twr_v437);
    if (__twr_v438) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    _jkl_retv = _mng_num418;
    goto _jkl_epilogue;
    __twr_l65:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token439, uint64_t _mng_buffer440) {
    uint64_t _jkl_retv;
    uint64_t _mng_num441;
    uint64_t _mng_i442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t _mng_lastnum462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t _mng_lastnum525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t _mng_lastnum556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    _mng_num441 = 0ULL;
    _mng_i442 = 0ULL;
    __twr_v443 = *(uint8_t*)(_mng_buffer440);
    __twr_v444 = 48ULL;
    if (__twr_v443 != __twr_v444) { goto __twr_l75; } else { goto __twr_l76; }
    __twr_l76:;
    __twr_v445 = 1ULL;
    __twr_v446 = _mng_buffer440 + __twr_v445;
    __twr_v447 = *(uint8_t*)(__twr_v446);
    if (__twr_v447) { goto __twr_l77; } else { goto __twr_l78; }
    __twr_l78:;
    __twr_v448 = 0ULL;
    _jkl_retv = __twr_v448;
    goto _jkl_epilogue;
    __twr_l77:;
    __twr_v449 = 1ULL;
    __twr_v450 = _mng_buffer440 + __twr_v449;
    __twr_v451 = *(uint8_t*)(__twr_v450);
    __twr_v452 = 120ULL;
    if (__twr_v451 != __twr_v452) { goto __twr_l79; } else { goto __twr_l80; }
    __twr_l80:;
    __twr_v453 = 2ULL;
    __twr_v454 = _mng_buffer440 + __twr_v453;
    __twr_v455 = *(uint8_t*)(__twr_v454);
    if (__twr_v455) { goto __twr_l81; } else { goto __twr_l82; }
    __twr_l82:;
    __twr_v456 = (uint64_t)(&LexTokenError);
    __twr_v457 = (uint64_t)(&"Unfinished hex number.");
    __twr_v458 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v456)(_mng_token439, __twr_v457, __twr_v458, __twr_v458, __twr_v458);
    __twr_l81:;
    _mng_i442 = 2ULL;
    __twr_v459 = 2ULL;
    __twr_v460 = _mng_buffer440 + __twr_v459;
    __twr_v461 = *(uint8_t*)(__twr_v460);
    if (!(__twr_v461)) { goto __twr_l84; } else { goto __twr_l83; }
    __twr_l83:;
    _mng_lastnum462 = _mng_num441;
    __twr_v463 = 4ULL;
    __twr_v464 = _mng_num441 << __twr_v463;
    _mng_num441 = __twr_v464;
    if (!(_mng_lastnum462)) { goto __twr_l86; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v465 = _mng_num441 / _mng_lastnum462;
    __twr_v466 = 16ULL;
    if (__twr_v465 == __twr_v466) { goto __twr_l86; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v467 = (uint64_t)(&LexTokenError);
    __twr_v468 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v469 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v467)(_mng_token439, __twr_v468, __twr_v469, __twr_v469, __twr_v469);
    __twr_l86:;
    __twr_v470 = _mng_buffer440 + _mng_i442;
    __twr_v471 = *(uint8_t*)(__twr_v470);
    __twr_v472 = 48ULL;
    if (__twr_v471 < __twr_v472) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v473 = _mng_buffer440 + _mng_i442;
    __twr_v474 = *(uint8_t*)(__twr_v473);
    __twr_v475 = 57ULL;
    if (__twr_v474 > __twr_v475) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    __twr_v476 = _mng_buffer440 + _mng_i442;
    __twr_v477 = *(uint8_t*)(__twr_v476);
    __twr_v478 = 48ULL;
    __twr_v479 = __twr_v477 - __twr_v478;
    __twr_v480 = _mng_num441 + __twr_v479;
    _mng_num441 = __twr_v480;
    goto __twr_l89;
    __twr_l91:;
    __twr_v481 = _mng_buffer440 + _mng_i442;
    __twr_v482 = *(uint8_t*)(__twr_v481);
    __twr_v483 = 65ULL;
    if (__twr_v482 < __twr_v483) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v484 = _mng_buffer440 + _mng_i442;
    __twr_v485 = *(uint8_t*)(__twr_v484);
    __twr_v486 = 70ULL;
    if (__twr_v485 > __twr_v486) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v487 = _mng_buffer440 + _mng_i442;
    __twr_v488 = *(uint8_t*)(__twr_v487);
    __twr_v489 = 55ULL;
    __twr_v490 = __twr_v488 - __twr_v489;
    __twr_v491 = _mng_num441 + __twr_v490;
    _mng_num441 = __twr_v491;
    goto __twr_l89;
    __twr_l94:;
    __twr_v492 = _mng_buffer440 + _mng_i442;
    __twr_v493 = *(uint8_t*)(__twr_v492);
    __twr_v494 = 97ULL;
    if (__twr_v493 < __twr_v494) { goto __twr_l97; } else { goto __twr_l98; }
    __twr_l98:;
    __twr_v495 = _mng_buffer440 + _mng_i442;
    __twr_v496 = *(uint8_t*)(__twr_v495);
    __twr_v497 = 102ULL;
    if (__twr_v496 > __twr_v497) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v498 = _mng_buffer440 + _mng_i442;
    __twr_v499 = *(uint8_t*)(__twr_v498);
    __twr_v500 = 87ULL;
    __twr_v501 = __twr_v499 - __twr_v500;
    __twr_v502 = _mng_num441 + __twr_v501;
    _mng_num441 = __twr_v502;
    goto __twr_l89;
    __twr_l97:;
    __twr_v503 = (uint64_t)(&LexTokenError);
    __twr_v504 = (uint64_t)(&"Malformed hex number.");
    __twr_v505 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v503)(_mng_token439, __twr_v504, __twr_v505, __twr_v505, __twr_v505);
    __twr_l89:;
    if (_mng_num441 >= _mng_lastnum462) { goto __twr_l99; } else { goto __twr_l100; }
    __twr_l100:;
    __twr_v506 = (uint64_t)(&LexTokenError);
    __twr_v507 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v508 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v506)(_mng_token439, __twr_v507, __twr_v508, __twr_v508, __twr_v508);
    __twr_l99:;
    __twr_v509 = 1ULL;
    __twr_v510 = _mng_i442 + __twr_v509;
    _mng_i442 = __twr_v510;
    __twr_l85:;
    __twr_v511 = _mng_buffer440 + _mng_i442;
    __twr_v512 = *(uint8_t*)(__twr_v511);
    if (__twr_v512) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    _jkl_retv = _mng_num441;
    goto _jkl_epilogue;
    __twr_l79:;
    _mng_i442 = 1ULL;
    __twr_v513 = 1ULL;
    __twr_v514 = _mng_buffer440 + __twr_v513;
    __twr_v515 = *(uint8_t*)(__twr_v514);
    if (!(__twr_v515)) { goto __twr_l102; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v516 = _mng_buffer440 + _mng_i442;
    __twr_v517 = *(uint8_t*)(__twr_v516);
    __twr_v518 = 48ULL;
    if (__twr_v517 < __twr_v518) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v519 = _mng_buffer440 + _mng_i442;
    __twr_v520 = *(uint8_t*)(__twr_v519);
    __twr_v521 = 55ULL;
    if (__twr_v520 <= __twr_v521) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v522 = (uint64_t)(&LexTokenError);
    __twr_v523 = (uint64_t)(&"Malformed octal number.");
    __twr_v524 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v522)(_mng_token439, __twr_v523, __twr_v524, __twr_v524, __twr_v524);
    __twr_l104:;
    _mng_lastnum525 = _mng_num441;
    __twr_v526 = 3ULL;
    __twr_v527 = _mng_num441 << __twr_v526;
    _mng_num441 = __twr_v527;
    if (!(_mng_lastnum525)) { goto __twr_l107; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v528 = _mng_num441 / _mng_lastnum525;
    __twr_v529 = 8ULL;
    if (__twr_v528 == __twr_v529) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v530 = (uint64_t)(&LexTokenError);
    __twr_v531 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v532 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v530)(_mng_token439, __twr_v531, __twr_v532, __twr_v532, __twr_v532);
    __twr_l107:;
    __twr_v533 = _mng_buffer440 + _mng_i442;
    __twr_v534 = *(uint8_t*)(__twr_v533);
    __twr_v535 = 48ULL;
    __twr_v536 = __twr_v534 - __twr_v535;
    __twr_v537 = _mng_num441 + __twr_v536;
    _mng_num441 = __twr_v537;
    if (_mng_num441 >= _mng_lastnum525) { goto __twr_l110; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v538 = (uint64_t)(&LexTokenError);
    __twr_v539 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v540 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v538)(_mng_token439, __twr_v539, __twr_v540, __twr_v540, __twr_v540);
    __twr_l110:;
    __twr_v541 = 1ULL;
    __twr_v542 = _mng_i442 + __twr_v541;
    _mng_i442 = __twr_v542;
    __twr_l103:;
    __twr_v543 = _mng_buffer440 + _mng_i442;
    __twr_v544 = *(uint8_t*)(__twr_v543);
    if (__twr_v544) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    _jkl_retv = _mng_num441;
    goto _jkl_epilogue;
    __twr_l75:;
    __twr_v545 = _mng_buffer440 + _mng_i442;
    __twr_v546 = *(uint8_t*)(__twr_v545);
    if (!(__twr_v546)) { goto __twr_l113; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v547 = _mng_buffer440 + _mng_i442;
    __twr_v548 = *(uint8_t*)(__twr_v547);
    __twr_v549 = 48ULL;
    if (__twr_v548 < __twr_v549) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v550 = _mng_buffer440 + _mng_i442;
    __twr_v551 = *(uint8_t*)(__twr_v550);
    __twr_v552 = 57ULL;
    if (__twr_v551 <= __twr_v552) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v553 = (uint64_t)(&LexTokenError);
    __twr_v554 = (uint64_t)(&"Malformed decimal number.");
    __twr_v555 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v553)(_mng_token439, __twr_v554, __twr_v555, __twr_v555, __twr_v555);
    __twr_l115:;
    _mng_lastnum556 = _mng_num441;
    __twr_v557 = 10ULL;
    __twr_v558 = _mng_num441 * __twr_v557;
    _mng_num441 = __twr_v558;
    if (!(_mng_lastnum556)) { goto __twr_l118; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v559 = _mng_num441 / _mng_lastnum556;
    __twr_v560 = 10ULL;
    if (__twr_v559 == __twr_v560) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v561 = (uint64_t)(&LexTokenError);
    __twr_v562 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v563 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v561)(_mng_token439, __twr_v562, __twr_v563, __twr_v563, __twr_v563);
    __twr_l118:;
    __twr_v564 = _mng_buffer440 + _mng_i442;
    __twr_v565 = *(uint8_t*)(__twr_v564);
    __twr_v566 = 48ULL;
    __twr_v567 = __twr_v565 - __twr_v566;
    __twr_v568 = _mng_num441 + __twr_v567;
    _mng_num441 = __twr_v568;
    if (_mng_num441 >= _mng_lastnum556) { goto __twr_l121; } else { goto __twr_l122; }
    __twr_l122:;
    __twr_v569 = (uint64_t)(&LexTokenError);
    __twr_v570 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v571 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v569)(_mng_token439, __twr_v570, __twr_v571, __twr_v571, __twr_v571);
    __twr_l121:;
    __twr_v572 = 1ULL;
    __twr_v573 = _mng_i442 + __twr_v572;
    _mng_i442 = __twr_v573;
    __twr_l114:;
    __twr_v574 = _mng_buffer440 + _mng_i442;
    __twr_v575 = *(uint8_t*)(__twr_v574);
    if (__twr_v575) { goto __twr_l112; } else { goto __twr_l113; }
    __twr_l113:;
    _jkl_retv = _mng_num441;
    goto _jkl_epilogue;
    __twr_l74:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token576, uint64_t _mng_buffer577, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t _mng_stream581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t _mng_byte598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t _mng_internedstring630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t _mng_dynamicbuffer633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t _mng_dumpster638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t _mng_len657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t _mng_uppercaseonly689;
    uint64_t _mng_len690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t _mng_macro729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    __twr_lLoopOnMacro:;
    _mng_length578 = 0ULL;
    __twr_v579 = (uint64_t)(&LexCurrentStream);
    __twr_v580 = *(uint64_t*)(__twr_v579);
    _mng_stream581 = __twr_v580;
    if (!(_mng_stream581)) { goto __twr_l125; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v582 = 8ULL;
    __twr_v583 = _mng_stream581 + __twr_v582;
    __twr_v584 = *(uint64_t*)(__twr_v583);
    __twr_v585 = _mng_token576 + __twr_v582;
    *(uint64_t*)(__twr_v585) = __twr_v584;
    __twr_v586 = 44ULL;
    __twr_v587 = _mng_stream581 + __twr_v586;
    __twr_v588 = *(uint32_t*)(__twr_v587);
    __twr_v589 = 16ULL;
    __twr_v590 = _mng_token576 + __twr_v589;
    *(uint32_t*)(__twr_v590) = __twr_v588;
    __twr_v591 = 48ULL;
    __twr_v592 = _mng_stream581 + __twr_v591;
    __twr_v593 = *(uint32_t*)(__twr_v592);
    __twr_v594 = 20ULL;
    __twr_v595 = _mng_token576 + __twr_v594;
    *(uint32_t*)(__twr_v595) = __twr_v593;
    __twr_l125:;
    __twr_v596 = (uint64_t)(&LexGetCharacter);
    __twr_v597 = ((uint64_t (*)())__twr_v596)();
    _mng_byte598 = __twr_v597;
    __twr_v599 = (uint64_t)(&LexCharTreatment);
    __twr_v600 = __twr_v599 + _mng_byte598;
    __twr_v601 = *(uint8_t*)(__twr_v600);
    __twr_v602 = 3ULL;
    if (__twr_v601 != __twr_v602) { goto __twr_l128; } else { goto __twr_l127; }
    __twr_l127:;
    __twr_v603 = (uint64_t)(&LexCurrentStream);
    __twr_v604 = *(uint64_t*)(__twr_v603);
    _mng_stream581 = __twr_v604;
    if (!(_mng_stream581)) { goto __twr_l130; } else { goto __twr_l131; }
    __twr_l131:;
    __twr_v605 = 8ULL;
    __twr_v606 = _mng_stream581 + __twr_v605;
    __twr_v607 = *(uint64_t*)(__twr_v606);
    __twr_v608 = _mng_token576 + __twr_v605;
    *(uint64_t*)(__twr_v608) = __twr_v607;
    __twr_v609 = 44ULL;
    __twr_v610 = _mng_stream581 + __twr_v609;
    __twr_v611 = *(uint32_t*)(__twr_v610);
    __twr_v612 = 16ULL;
    __twr_v613 = _mng_token576 + __twr_v612;
    *(uint32_t*)(__twr_v613) = __twr_v611;
    __twr_v614 = 48ULL;
    __twr_v615 = _mng_stream581 + __twr_v614;
    __twr_v616 = *(uint32_t*)(__twr_v615);
    __twr_v617 = 20ULL;
    __twr_v618 = _mng_token576 + __twr_v617;
    *(uint32_t*)(__twr_v618) = __twr_v616;
    __twr_l130:;
    __twr_v619 = (uint64_t)(&LexGetCharacter);
    __twr_v620 = ((uint64_t (*)())__twr_v619)();
    _mng_byte598 = __twr_v620;
    __twr_l129:;
    __twr_v621 = (uint64_t)(&LexCharTreatment);
    __twr_v622 = __twr_v621 + _mng_byte598;
    __twr_v623 = *(uint8_t*)(__twr_v622);
    __twr_v624 = 3ULL;
    if (__twr_v623 == __twr_v624) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    if (_mng_byte598) { goto __twr_l132; } else { goto __twr_l133; }
    __twr_l133:;
    __twr_v625 = 0ULL;
    _jkl_retv = __twr_v625;
    goto _jkl_epilogue;
    __twr_l132:;
    __twr_v626 = 34ULL;
    if (_mng_byte598 != __twr_v626) { goto __twr_l134; } else { goto __twr_l135; }
    __twr_l135:;
    __twr_v627 = (uint64_t)(&TlAllocateFromZone);
    __twr_v628 = (uint64_t)(&LexInternedStringZone);
    __twr_v629 = ((uint64_t (*)(uint64_t))__twr_v627)(__twr_v628);
    _mng_internedstring630 = __twr_v629;
    __twr_v631 = 48ULL;
    __twr_v632 = _mng_internedstring630 + __twr_v631;
    _mng_dynamicbuffer633 = __twr_v632;
    __twr_v634 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v634)(_mng_dynamicbuffer633);
    __twr_v635 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v636 = 34ULL;
    __twr_v637 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v635)(_mng_token576, __twr_v636, _mng_dynamicbuffer633, __twr_v637, (uint64_t)(&_mng_dumpster638));
    __twr_v639 = 4ULL;
    _jkl_retv = __twr_v639;
    goto _jkl_epilogue;
    __twr_l134:;
    __twr_v640 = 39ULL;
    if (_mng_byte598 != __twr_v640) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v641 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v642 = 39ULL;
    __twr_v643 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v641)(_mng_token576, __twr_v642, __twr_v643, _mng_buffer577, (uint64_t)(&_mng_length578));
    __twr_v644 = 8ULL;
    _jkl_retv = __twr_v644;
    goto _jkl_epilogue;
    __twr_l136:;
    __twr_v645 = (uint64_t)(&LexCharTreatment);
    __twr_v646 = 1ULL;
    __twr_v647 = __twr_v645 + _mng_byte598;
    __twr_v648 = *(uint8_t*)(__twr_v647);
    if (__twr_v648 != __twr_v646) { goto __twr_l138; } else { goto __twr_l139; }
    __twr_l139:;
    _mng_length578 = 1ULL;
    __twr_v649 = 0ULL;
    __twr_v650 = 1ULL;
    *(uint8_t*)(_mng_buffer577) = _mng_byte598;
    __twr_v651 = 1ULL;
    __twr_v652 = _mng_buffer577 + __twr_v651;
    *(uint8_t*)(__twr_v652) = __twr_v649;
    _jkl_retv = __twr_v650;
    goto _jkl_epilogue;
    __twr_l138:;
    __twr_v653 = (uint64_t)(&LexCharTreatment);
    __twr_v654 = __twr_v653 + _mng_byte598;
    __twr_v655 = *(uint8_t*)(__twr_v654);
    __twr_v656 = 2ULL;
    if (__twr_v655 != __twr_v656) { goto __twr_l140; } else { goto __twr_l141; }
    __twr_l141:;
    _mng_len657 = 0ULL;
    __twr_v658 = (uint64_t)(&LexCharTreatment);
    __twr_v659 = __twr_v658 + _mng_byte598;
    __twr_v660 = *(uint8_t*)(__twr_v659);
    __twr_v661 = 2ULL;
    if (__twr_v660 != __twr_v661) { goto __twr_l143; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v662 = 127ULL;
    if (_mng_len657 != __twr_v662) { goto __twr_l145; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v663 = (uint64_t)(&LexTokenError);
    __twr_v664 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v665 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v663)(_mng_token576, __twr_v664, __twr_v665, __twr_v665, __twr_v665);
    __twr_l145:;
    __twr_v666 = 1ULL;
    __twr_v667 = _mng_buffer577 + _mng_len657;
    *(uint8_t*)(__twr_v667) = _mng_byte598;
    __twr_v668 = _mng_len657 + __twr_v666;
    _mng_len657 = __twr_v668;
    __twr_v669 = (uint64_t)(&LexGetCharacter);
    __twr_v670 = ((uint64_t (*)())__twr_v669)();
    _mng_byte598 = __twr_v670;
    __twr_l144:;
    __twr_v671 = (uint64_t)(&LexCharTreatment);
    __twr_v672 = __twr_v671 + _mng_byte598;
    __twr_v673 = *(uint8_t*)(__twr_v672);
    __twr_v674 = 2ULL;
    if (__twr_v673 == __twr_v674) { goto __twr_l142; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v675 = 0ULL;
    __twr_v676 = _mng_buffer577 + _mng_len657;
    *(uint8_t*)(__twr_v676) = __twr_v675;
    _mng_length578 = _mng_len657;
    __twr_v677 = (uint64_t)(&LexCharTreatment);
    __twr_v678 = __twr_v677 + _mng_byte598;
    __twr_v679 = *(uint8_t*)(__twr_v678);
    __twr_v680 = 3ULL;
    if (__twr_v679 == __twr_v680) { goto __twr_l147; } else { goto __twr_l148; }
    __twr_l148:;
    __twr_v681 = (uint64_t)(&LexCurrentStream);
    __twr_v682 = *(uint64_t*)(__twr_v681);
    __twr_v683 = 84ULL;
    __twr_v684 = __twr_v682 + __twr_v683;
    *(uint8_t*)(__twr_v684) = _mng_byte598;
    __twr_l147:;
    __twr_v685 = 2ULL;
    _jkl_retv = __twr_v685;
    goto _jkl_epilogue;
    __twr_l140:;
    __twr_v686 = 65ULL;
    if (_mng_byte598 < __twr_v686) { goto __twr_l151; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v687 = 90ULL;
    if (_mng_byte598 > __twr_v687) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v688 = 1ULL;
    goto __twr_l152;
    __twr_l151:;
    __twr_v688 = 0ULL;
    __twr_l152:;
    _mng_uppercaseonly689 = __twr_v688;
    _mng_len690 = 0ULL;
    __twr_v691 = (uint64_t)(&LexCharTreatment);
    __twr_v692 = __twr_v691 + _mng_byte598;
    __twr_v693 = *(uint8_t*)(__twr_v692);
    if (__twr_v693) { goto __twr_l154; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v694 = 127ULL;
    if (_mng_len690 != __twr_v694) { goto __twr_l156; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v695 = (uint64_t)(&LexTokenError);
    __twr_v696 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v697 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v695)(_mng_token576, __twr_v696, __twr_v697, __twr_v697, __twr_v697);
    __twr_l156:;
    if (!(_mng_uppercaseonly689)) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_v698 = 65ULL;
    if (_mng_byte598 < __twr_v698) { goto __twr_l162; } else { goto __twr_l160; }
    __twr_l160:;
    __twr_v699 = 90ULL;
    if (_mng_byte598 > __twr_v699) { goto __twr_l162; } else { goto __twr_l161; }
    __twr_l161:;
    __twr_v700 = 1ULL;
    goto __twr_l163;
    __twr_l162:;
    __twr_v700 = 0ULL;
    __twr_l163:;
    _mng_uppercaseonly689 = __twr_v700;
    __twr_l158:;
    __twr_v701 = 1ULL;
    __twr_v702 = _mng_buffer577 + _mng_len690;
    *(uint8_t*)(__twr_v702) = _mng_byte598;
    __twr_v703 = _mng_len690 + __twr_v701;
    _mng_len690 = __twr_v703;
    __twr_v704 = (uint64_t)(&LexGetCharacter);
    __twr_v705 = ((uint64_t (*)())__twr_v704)();
    _mng_byte598 = __twr_v705;
    __twr_l155:;
    __twr_v706 = (uint64_t)(&LexCharTreatment);
    __twr_v707 = __twr_v706 + _mng_byte598;
    __twr_v708 = *(uint8_t*)(__twr_v707);
    if (!(__twr_v708)) { goto __twr_l153; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v709 = 0ULL;
    __twr_v710 = _mng_buffer577 + _mng_len690;
    *(uint8_t*)(__twr_v710) = __twr_v709;
    _mng_length578 = _mng_len690;
    __twr_v711 = (uint64_t)(&LexCharTreatment);
    __twr_v712 = 1ULL;
    __twr_v713 = __twr_v711 + _mng_byte598;
    __twr_v714 = *(uint8_t*)(__twr_v713);
    if (__twr_v714 == __twr_v712) { goto __twr_l165; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v715 = (uint64_t)(&LexCharTreatment);
    __twr_v716 = __twr_v715 + _mng_byte598;
    __twr_v717 = *(uint8_t*)(__twr_v716);
    __twr_v718 = 2ULL;
    if (__twr_v717 != __twr_v718) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v719 = (uint64_t)(&LexCurrentStream);
    __twr_v720 = *(uint64_t*)(__twr_v719);
    __twr_v721 = 84ULL;
    __twr_v722 = __twr_v720 + __twr_v721;
    *(uint8_t*)(__twr_v722) = _mng_byte598;
    __twr_l164:;
    if (!(_mng_uppercaseonly689)) { goto __twr_l167; } else { goto __twr_l169; }
    __twr_l169:;
    __twr_v723 = 1ULL;
    if (_mng_len690 <= __twr_v723) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v724 = 16ULL;
    _jkl_retv = __twr_v724;
    goto _jkl_epilogue;
    __twr_l167:;
    __twr_v725 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v726 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v727 = *(uint64_t*)(__twr_v726);
    __twr_v728 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v725)(__twr_v727, _mng_buffer577);
    _mng_macro729 = __twr_v728;
    if (_mng_macro729) { goto __twr_l170; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v730 = 0ULL;
    _jkl_retv = __twr_v730;
    goto _jkl_epilogue;
    __twr_l170:;
    __twr_v731 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v731)(_mng_macro729, _mng_token576);
    goto __twr_lLoopOnMacro;
    __twr_l123:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length578;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring630;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token732) {
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t _mng_buffer735[16];
    uint64_t __twr_v736;
    uint64_t _mng_length737;
    uint64_t _mng_internedstring738;
    uint64_t _mng_tokenflag739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t _mng_keyword746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    __twr_v733 = (uint64_t)(&LexGetTokenContents);
    __twr_v734 = (uint64_t)(&_mng_buffer735);
    __twr_v736 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v733)(_mng_token732, __twr_v734, (uint64_t)(&_mng_length737), (uint64_t)(&_mng_internedstring738));
    _mng_tokenflag739 = __twr_v736;
    __twr_v740 = 19ULL;
    __twr_v741 = _mng_tokenflag739 & __twr_v740;
    if (!(__twr_v741)) { goto __twr_l173; } else { goto __twr_l174; }
    __twr_l174:;
    __twr_v742 = (uint64_t)(&TlLookupHashTable);
    __twr_v743 = (uint64_t)(&LexKeywordHashTable);
    __twr_v744 = (uint64_t)(&_mng_buffer735);
    __twr_v745 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v742)(__twr_v743, __twr_v744);
    _mng_keyword746 = __twr_v745;
    if (_mng_keyword746) { goto __twr_l175; } else { goto __twr_l176; }
    __twr_l176:;
    __twr_v747 = 16ULL;
    __twr_v748 = _mng_tokenflag739 & __twr_v747;
    if (!(__twr_v748)) { goto __twr_l177; } else { goto __twr_l178; }
    __twr_l178:;
    __twr_v749 = (uint64_t)(&LexTokenError);
    __twr_v750 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).");
    __twr_v751 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v749)(_mng_token732, __twr_v750, __twr_v751, __twr_v751, __twr_v751);
    __twr_l177:;
    __twr_v752 = (uint64_t)(&LexTokenError);
    __twr_v753 = (uint64_t)(&"Unknown keyword");
    __twr_v754 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v752)(_mng_token732, __twr_v753, __twr_v754, __twr_v754, __twr_v754);
    __twr_l175:;
    __twr_v755 = 48ULL;
    __twr_v756 = _mng_keyword746 + __twr_v755;
    __twr_v757 = *(uint8_t*)(__twr_v756);
    __twr_v758 = 24ULL;
    __twr_v759 = _mng_token732 + __twr_v758;
    *(uint8_t*)(__twr_v759) = __twr_v757;
    __twr_v760 = 49ULL;
    __twr_v761 = _mng_keyword746 + __twr_v760;
    __twr_v762 = *(uint8_t*)(__twr_v761);
    __twr_v763 = 25ULL;
    __twr_v764 = _mng_token732 + __twr_v763;
    *(uint8_t*)(__twr_v764) = __twr_v762;
    __twr_v765 = 50ULL;
    __twr_v766 = _mng_keyword746 + __twr_v765;
    __twr_v767 = *(uint8_t*)(__twr_v766);
    __twr_v768 = 26ULL;
    __twr_v769 = _mng_token732 + __twr_v768;
    *(uint8_t*)(__twr_v769) = __twr_v767;
    goto _jkl_epilogue;
    __twr_l173:;
    __twr_v770 = 8ULL;
    __twr_v771 = _mng_tokenflag739 & __twr_v770;
    if (!(__twr_v771)) { goto __twr_l179; } else { goto __twr_l180; }
    __twr_l180:;
    __twr_v772 = 5ULL;
    __twr_v773 = 24ULL;
    __twr_v774 = _mng_token732 + __twr_v773;
    *(uint8_t*)(__twr_v774) = __twr_v772;
    __twr_v775 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v776 = (uint64_t)(&_mng_buffer735);
    __twr_v777 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v775)(_mng_token732, __twr_v776);
    *(uint64_t*)(_mng_token732) = __twr_v777;
    goto _jkl_epilogue;
    __twr_l179:;
    __twr_v778 = 4ULL;
    __twr_v779 = _mng_tokenflag739 & __twr_v778;
    if (!(__twr_v779)) { goto __twr_l181; } else { goto __twr_l182; }
    __twr_l182:;
    __twr_v780 = 4ULL;
    __twr_v781 = 24ULL;
    __twr_v782 = _mng_token732 + __twr_v781;
    *(uint8_t*)(__twr_v782) = __twr_v780;
    *(uint64_t*)(_mng_token732) = _mng_internedstring738;
    goto _jkl_epilogue;
    __twr_l181:;
    __twr_v783 = 32ULL;
    __twr_v784 = _mng_tokenflag739 & __twr_v783;
    if (!(__twr_v784)) { goto __twr_l183; } else { goto __twr_l184; }
    __twr_l184:;
    __twr_v785 = 6ULL;
    __twr_v786 = 24ULL;
    __twr_v787 = _mng_token732 + __twr_v786;
    *(uint8_t*)(__twr_v787) = __twr_v785;
    goto _jkl_epilogue;
    __twr_l183:;
    if (_mng_length737) { goto __twr_l185; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v788 = 6ULL;
    __twr_v789 = 24ULL;
    __twr_v790 = _mng_token732 + __twr_v789;
    *(uint8_t*)(__twr_v790) = __twr_v788;
    goto _jkl_epilogue;
    __twr_l185:;
    __twr_v791 = (uint64_t)(&_mng_buffer735);
    __twr_v792 = *(uint8_t*)(__twr_v791);
    __twr_v793 = 48ULL;
    if (__twr_v792 < __twr_v793) { goto __twr_l187; } else { goto __twr_l189; }
    __twr_l189:;
    __twr_v794 = (uint64_t)(&_mng_buffer735);
    __twr_v795 = *(uint8_t*)(__twr_v794);
    __twr_v796 = 57ULL;
    if (__twr_v795 > __twr_v796) { goto __twr_l187; } else { goto __twr_l188; }
    __twr_l188:;
    __twr_v797 = 5ULL;
    __twr_v798 = 24ULL;
    __twr_v799 = _mng_token732 + __twr_v798;
    *(uint8_t*)(__twr_v799) = __twr_v797;
    __twr_v800 = (uint64_t)(&LexCrunchNumber);
    __twr_v801 = (uint64_t)(&_mng_buffer735);
    __twr_v802 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v800)(_mng_token732, __twr_v801);
    *(uint64_t*)(_mng_token732) = __twr_v802;
    goto _jkl_epilogue;
    __twr_l187:;
    __twr_v803 = (uint64_t)(&LexTokenError);
    __twr_v804 = (uint64_t)(&"Unknown token");
    __twr_v805 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v803)(_mng_token732, __twr_v804, __twr_v805, __twr_v805, __twr_v805);
    __twr_l172:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest806, uint64_t _mng_src807) {
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    __twr_v808 = *(uint64_t*)(_mng_src807);
    *(uint64_t*)(_mng_dest806) = __twr_v808;
    __twr_v809 = 8ULL;
    __twr_v810 = _mng_src807 + __twr_v809;
    __twr_v811 = *(uint64_t*)(__twr_v810);
    __twr_v812 = _mng_dest806 + __twr_v809;
    *(uint64_t*)(__twr_v812) = __twr_v811;
    __twr_v813 = 16ULL;
    __twr_v814 = _mng_src807 + __twr_v813;
    __twr_v815 = *(uint32_t*)(__twr_v814);
    __twr_v816 = _mng_dest806 + __twr_v813;
    *(uint32_t*)(__twr_v816) = __twr_v815;
    __twr_v817 = 20ULL;
    __twr_v818 = _mng_src807 + __twr_v817;
    __twr_v819 = *(uint32_t*)(__twr_v818);
    __twr_v820 = _mng_dest806 + __twr_v817;
    *(uint32_t*)(__twr_v820) = __twr_v819;
    __twr_v821 = 24ULL;
    __twr_v822 = _mng_src807 + __twr_v821;
    __twr_v823 = *(uint8_t*)(__twr_v822);
    __twr_v824 = _mng_dest806 + __twr_v821;
    *(uint8_t*)(__twr_v824) = __twr_v823;
    __twr_v825 = 25ULL;
    __twr_v826 = _mng_src807 + __twr_v825;
    __twr_v827 = *(uint8_t*)(__twr_v826);
    __twr_v828 = _mng_dest806 + __twr_v825;
    *(uint8_t*)(__twr_v828) = __twr_v827;
    __twr_v829 = 26ULL;
    __twr_v830 = _mng_src807 + __twr_v829;
    __twr_v831 = *(uint8_t*)(__twr_v830);
    __twr_v832 = _mng_dest806 + __twr_v829;
    *(uint8_t*)(__twr_v832) = __twr_v831;
    __twr_l190:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token833) {
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t _mng_index836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    __twr_v834 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v835 = *(uint32_t*)(__twr_v834);
    _mng_index836 = __twr_v835;
    if (!(_mng_index836)) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v837 = (uint64_t)(&LexCopyToken);
    __twr_v838 = (uint64_t)(&LexPutbackStack);
    __twr_v839 = 1ULL;
    __twr_v840 = _mng_index836 - __twr_v839;
    __twr_v841 = 5ULL;
    __twr_v842 = __twr_v840 << __twr_v841;
    __twr_v843 = __twr_v838 + __twr_v842;
    ((void (*)(uint64_t, uint64_t))__twr_v837)(_mng_token833, __twr_v843);
    __twr_v844 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v844) = __twr_v840;
    goto _jkl_epilogue;
    __twr_l192:;
    __twr_v845 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v845)(_mng_token833);
    __twr_l191:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token846) {
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t _mng_index849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    __twr_v847 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v848 = *(uint32_t*)(__twr_v847);
    _mng_index849 = __twr_v848;
    __twr_v850 = 256ULL;
    if (_mng_index849 != __twr_v850) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    __twr_v851 = (uint64_t)(&TlInternalError);
    __twr_v852 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v853 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v851)(__twr_v852, __twr_v853, __twr_v853, __twr_v853);
    __twr_l195:;
    __twr_v854 = (uint64_t)(&LexCopyToken);
    __twr_v855 = (uint64_t)(&LexPutbackStack);
    __twr_v856 = 5ULL;
    __twr_v857 = _mng_index849 << __twr_v856;
    __twr_v858 = __twr_v855 + __twr_v857;
    ((void (*)(uint64_t, uint64_t))__twr_v854)(__twr_v858, _mng_token846);
    __twr_v859 = 1ULL;
    __twr_v860 = _mng_index849 + __twr_v859;
    __twr_v861 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v861) = __twr_v860;
    __twr_l194:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token862, uint64_t _mng_type863, uint64_t _mng_subtype864) {
    uint64_t _jkl_retv;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t _mng_index867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t _mng_matchtoken878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t __twr_v886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t __twr_v893;
    uint64_t __twr_v894;
    uint64_t __twr_v895;
    uint64_t __twr_v896;
    uint64_t __twr_v897;
    uint64_t __twr_v898;
    __twr_v865 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v866 = *(uint32_t*)(__twr_v865);
    _mng_index867 = __twr_v866;
    if (_mng_index867) { goto __twr_l198; } else { goto __twr_l199; }
    __twr_l199:;
    __twr_v868 = (uint64_t)(&LexNextToken);
    __twr_v869 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v868)(__twr_v869);
    __twr_v870 = 1ULL;
    __twr_v871 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v871) = __twr_v870;
    _mng_index867 = 1ULL;
    __twr_l198:;
    __twr_v872 = (uint64_t)(&LexPutbackStack);
    __twr_v873 = 1ULL;
    __twr_v874 = _mng_index867 - __twr_v873;
    __twr_v875 = 5ULL;
    __twr_v876 = __twr_v874 << __twr_v875;
    __twr_v877 = __twr_v872 + __twr_v876;
    _mng_matchtoken878 = __twr_v877;
    if (!(_mng_token862)) { goto __twr_l200; } else { goto __twr_l201; }
    __twr_l201:;
    __twr_v879 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v879)(_mng_token862, _mng_matchtoken878);
    __twr_l200:;
    __twr_v880 = 24ULL;
    __twr_v881 = _mng_matchtoken878 + __twr_v880;
    __twr_v882 = *(uint8_t*)(__twr_v881);
    if (__twr_v882 == _mng_type863) { goto __twr_l202; } else { goto __twr_l203; }
    __twr_l203:;
    __twr_v883 = 24ULL;
    __twr_v884 = _mng_matchtoken878 + __twr_v883;
    __twr_v885 = *(uint8_t*)(__twr_v884);
    __twr_v886 = 6ULL;
    if (__twr_v885 != __twr_v886) { goto __twr_l204; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v887 = 1ULL;
    __twr_v888 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v889 = *(uint32_t*)(__twr_v888);
    __twr_v890 = __twr_v889 - __twr_v887;
    *(uint32_t*)(__twr_v888) = __twr_v890;
    __twr_l204:;
    __twr_v891 = 0ULL;
    _jkl_retv = __twr_v891;
    goto _jkl_epilogue;
    __twr_l202:;
    if (!(_mng_subtype864)) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v892 = 25ULL;
    __twr_v893 = _mng_matchtoken878 + __twr_v892;
    __twr_v894 = *(uint8_t*)(__twr_v893);
    if (__twr_v894 != _mng_subtype864) { goto __twr_l206; } else { goto __twr_l207; }
    __twr_l207:;
    __twr_v895 = 1ULL;
    __twr_v896 = _mng_index867 - __twr_v895;
    __twr_v897 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v897) = __twr_v896;
    _jkl_retv = __twr_v895;
    goto _jkl_epilogue;
    __twr_l206:;
    __twr_v898 = 0ULL;
    _jkl_retv = __twr_v898;
    goto _jkl_epilogue;
    __twr_l197:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg161);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename162, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock163, uint64_t _mng_filepath164);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope165);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg166);
extern void LexExpandMacro(uint64_t _mng_macro167, uint64_t _mng_token168);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream169, uint64_t _mng_macro170);
extern void LexUninitializeStream(uint64_t _mng_stream171);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream172);
extern void LexPushStream(uint64_t _mng_stream173);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream174, uint64_t _mng_fileblock175, uint64_t _mng_handle176);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock177, uint64_t _mng_handle178);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest179, uint64_t _mng_src180);
extern void LexGetToken(uint64_t _mng_token181);
extern void LexPutbackToken(uint64_t _mng_token182);
extern uint64_t LexMatchToken(uint64_t _mng_token183, uint64_t _mng_type184, uint64_t _mng_subtype185);
extern void LexError(uint64_t _mng_token186, uint64_t _mng_fmt187, uint64_t _mng_argv188, uint64_t _mng_argc189);
extern uint64_t LexCrunchNumber(uint64_t _mng_token190, uint64_t _mng_buffer191);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath192);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name193, uint64_t _mng_type194, uint64_t _mng_subtype195, uint64_t _mng_context196) {
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t _mng_keyword203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    __twr_v197 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v198 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v199 = *(uint64_t*)(__twr_v198);
    __twr_v200 = 56ULL;
    __twr_v201 = __twr_v199 * __twr_v200;
    __twr_v202 = __twr_v197 + __twr_v201;
    _mng_keyword203 = __twr_v202;
    __twr_v204 = 1ULL;
    __twr_v205 = __twr_v199 + __twr_v204;
    *(uint64_t*)(__twr_v198) = __twr_v205;
    __twr_v206 = 48ULL;
    __twr_v207 = _mng_keyword203 + __twr_v206;
    *(uint8_t*)(__twr_v207) = _mng_type194;
    __twr_v208 = 49ULL;
    __twr_v209 = _mng_keyword203 + __twr_v208;
    *(uint8_t*)(__twr_v209) = _mng_subtype195;
    __twr_v210 = 50ULL;
    __twr_v211 = _mng_keyword203 + __twr_v210;
    *(uint8_t*)(__twr_v211) = _mng_context196;
    __twr_v212 = (uint64_t)(&TlInsertHashTable);
    __twr_v213 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v212)(__twr_v213, _mng_keyword203, _mng_name193);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexError(uint64_t _mng_token214, uint64_t _mng_fmt215, uint64_t _mng_argv216, uint64_t _mng_argc217) {
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t _mng_VARTABLE223[3];
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t _mng_stream240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    if (!(_mng_token214)) { goto __twr_l5; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v218 = (uint64_t)(&TlPrintByHandle);
    __twr_v219 = (uint64_t)(&TlStdErr);
    __twr_v220 = *(uint64_t*)(__twr_v219);
    __twr_v221 = (uint64_t)(&"%s:%d:%d: ");
    __twr_v222 = (uint64_t)(&_mng_VARTABLE223);
    __twr_v224 = 8ULL;
    __twr_v225 = _mng_token214 + __twr_v224;
    __twr_v226 = *(uint64_t*)(__twr_v225);
    __twr_v227 = 304ULL;
    __twr_v228 = __twr_v226 + __twr_v227;
    *(uint64_t*)(__twr_v222) = __twr_v228;
    __twr_v229 = 16ULL;
    __twr_v230 = _mng_token214 + __twr_v229;
    __twr_v231 = *(uint32_t*)(__twr_v230);
    __twr_v232 = __twr_v222 + __twr_v224;
    *(uint64_t*)(__twr_v232) = __twr_v231;
    __twr_v233 = 20ULL;
    __twr_v234 = _mng_token214 + __twr_v233;
    __twr_v235 = *(uint32_t*)(__twr_v234);
    __twr_v236 = __twr_v222 + __twr_v229;
    *(uint64_t*)(__twr_v236) = __twr_v235;
    __twr_v237 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v218)(__twr_v220, __twr_v221, __twr_v222, __twr_v237);
    goto __twr_l3;
    __twr_l5:;
    __twr_v238 = (uint64_t)(&LexCurrentStream);
    __twr_v239 = *(uint64_t*)(__twr_v238);
    _mng_stream240 = __twr_v239;
    __twr_v241 = (uint64_t)(&TlPrintByHandle);
    __twr_v242 = (uint64_t)(&TlStdErr);
    __twr_v243 = *(uint64_t*)(__twr_v242);
    __twr_v244 = (uint64_t)(&"%s:%d:%d: ");
    __twr_v245 = (uint64_t)(&_mng_VARTABLE223);
    __twr_v246 = 8ULL;
    __twr_v247 = _mng_stream240 + __twr_v246;
    __twr_v248 = *(uint64_t*)(__twr_v247);
    __twr_v249 = 304ULL;
    __twr_v250 = __twr_v248 + __twr_v249;
    *(uint64_t*)(__twr_v245) = __twr_v250;
    __twr_v251 = 44ULL;
    __twr_v252 = _mng_stream240 + __twr_v251;
    __twr_v253 = *(uint32_t*)(__twr_v252);
    __twr_v254 = __twr_v245 + __twr_v246;
    *(uint64_t*)(__twr_v254) = __twr_v253;
    __twr_v255 = 48ULL;
    __twr_v256 = _mng_stream240 + __twr_v255;
    __twr_v257 = *(uint32_t*)(__twr_v256);
    __twr_v258 = 16ULL;
    __twr_v259 = __twr_v245 + __twr_v258;
    *(uint64_t*)(__twr_v259) = __twr_v257;
    __twr_v260 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v241)(__twr_v243, __twr_v244, __twr_v245, __twr_v260);
    __twr_l3:;
    __twr_v261 = (uint64_t)(&TlPrintByVarTable);
    __twr_v262 = (uint64_t)(&TlStdErr);
    __twr_v263 = *(uint64_t*)(__twr_v262);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v261)(__twr_v263, _mng_fmt215, _mng_argv216, _mng_argc217);
    __twr_v264 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v264)();
    __twr_l2:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t _mng_dumpster270;
    uint64_t _mng_fileblock271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t _mng_filestream278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    __twr_v265 = (uint64_t)(&FeCreateFileBlock);
    __twr_v266 = (uint64_t)(&FeInputFile);
    __twr_v267 = 0ULL;
    __twr_v268 = 1ULL;
    __twr_v269 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v265)(__twr_v266, (uint64_t)(&_mng_dumpster270));
    _mng_fileblock271 = __twr_v269;
    __twr_v272 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v272)(_mng_fileblock271, __twr_v266);
    __twr_v273 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v273)();
    __twr_v274 = (uint64_t)(&LexCreateFileStream);
    __twr_v275 = (uint64_t)(&FeInputFileHandle);
    __twr_v276 = *(uint64_t*)(__twr_v275);
    __twr_v277 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v274)(_mng_fileblock271, __twr_v276);
    _mng_filestream278 = __twr_v277;
    __twr_v279 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v279)(_mng_filestream278);
    __twr_v280 = (uint64_t)(&TlInitializeZone);
    __twr_v281 = (uint64_t)(&LexInternedStringZone);
    __twr_v282 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v280)(__twr_v281, __twr_v282);
    __twr_v283 = (uint64_t)(&TlInitializeHashTable);
    __twr_v284 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v283)(__twr_v284);
    __twr_v285 = (uint64_t)(&LexInsertKeyword);
    __twr_v286 = (uint64_t)(&"END");
    __twr_v287 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v286, __twr_v287, __twr_v267, __twr_v267);
    __twr_v288 = (uint64_t)(&"TARGET");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v288, __twr_v268, __twr_v267, __twr_v267);
    __twr_v289 = (uint64_t)(&"FILE");
    __twr_v290 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v289, __twr_v290, __twr_v267, __twr_v267);
    __twr_v291 = (uint64_t)(&"DEPEND");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v291, __twr_v290, __twr_v268, __twr_v267);
    __twr_v292 = (uint64_t)(&"SOURCES");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v292, __twr_v290, __twr_v290, __twr_v267);
    __twr_v293 = (uint64_t)(&"INCDIR");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v293, __twr_v290, __twr_v287, __twr_v267);
    __twr_v294 = (uint64_t)(&"LIBDIR");
    __twr_v295 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v294, __twr_v290, __twr_v295, __twr_v267);
    __twr_v296 = (uint64_t)(&"LINKOPT");
    __twr_v297 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v296, __twr_v290, __twr_v297, __twr_v267);
    __twr_v298 = (uint64_t)(&"JKLOPT");
    __twr_v299 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v298, __twr_v290, __twr_v299, __twr_v267);
    __twr_v300 = (uint64_t)(&"LINK");
    __twr_v301 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v300, __twr_v290, __twr_v301, __twr_v267);
    __twr_v302 = (uint64_t)(&"DYLINK");
    __twr_v303 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v302, __twr_v290, __twr_v303, __twr_v267);
    __twr_v304 = (uint64_t)(&"PREBUILT");
    __twr_v305 = 9ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v304, __twr_v290, __twr_v305, __twr_v267);
    __twr_v306 = (uint64_t)(&"OBJECTS");
    __twr_v307 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(__twr_v306, __twr_v290, __twr_v307, __twr_v267);
    __twr_l6:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t _mng_byte311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_nextbyte356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    _mng_comment308 = 0ULL;
    __twr_l8:;
    __twr_v309 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v310 = ((uint64_t (*)())__twr_v309)();
    _mng_byte311 = __twr_v310;
    if (_mng_byte311) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    goto __twr_l9;
    __twr_l10:;
    if (!(_mng_comment308)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v312 = 10ULL;
    if (_mng_byte311 == __twr_v312) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    goto __twr_l8;
    __twr_l15:;
    _mng_comment308 = 0ULL;
    goto __twr_l12;
    __twr_l14:;
    __twr_v313 = (uint64_t)(&LexCurrentStream);
    __twr_v314 = *(uint64_t*)(__twr_v313);
    __twr_v315 = 80ULL;
    __twr_v316 = __twr_v314 + __twr_v315;
    __twr_v317 = *(uint8_t*)(__twr_v316);
    if (!(__twr_v317)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v318 = 0ULL;
    __twr_v319 = (uint64_t)(&LexCurrentStream);
    __twr_v320 = *(uint64_t*)(__twr_v319);
    __twr_v321 = 80ULL;
    __twr_v322 = __twr_v320 + __twr_v321;
    *(uint8_t*)(__twr_v322) = __twr_v318;
    goto __twr_l12;
    __twr_l18:;
    __twr_v323 = 92ULL;
    if (_mng_byte311 != __twr_v323) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v324 = 1ULL;
    __twr_v325 = (uint64_t)(&LexCurrentStream);
    __twr_v326 = *(uint64_t*)(__twr_v325);
    __twr_v327 = 80ULL;
    __twr_v328 = __twr_v326 + __twr_v327;
    *(uint8_t*)(__twr_v328) = __twr_v324;
    goto __twr_l12;
    __twr_l20:;
    __twr_v329 = (uint64_t)(&LexCurrentStream);
    __twr_v330 = *(uint64_t*)(__twr_v329);
    __twr_v331 = 81ULL;
    __twr_v332 = __twr_v330 + __twr_v331;
    __twr_v333 = *(uint8_t*)(__twr_v332);
    if (!(__twr_v333)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v334 = 34ULL;
    __twr_v335 = (_mng_byte311 == __twr_v334);
    __twr_v336 = !__twr_v335;
    __twr_v337 = (uint64_t)(&LexCurrentStream);
    __twr_v338 = *(uint64_t*)(__twr_v337);
    __twr_v339 = 81ULL;
    __twr_v340 = __twr_v338 + __twr_v339;
    *(uint8_t*)(__twr_v340) = __twr_v336;
    goto __twr_l12;
    __twr_l22:;
    __twr_v341 = (uint64_t)(&LexCurrentStream);
    __twr_v342 = *(uint64_t*)(__twr_v341);
    __twr_v343 = 82ULL;
    __twr_v344 = __twr_v342 + __twr_v343;
    __twr_v345 = *(uint8_t*)(__twr_v344);
    if (!(__twr_v345)) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v346 = 39ULL;
    __twr_v347 = (_mng_byte311 == __twr_v346);
    __twr_v348 = !__twr_v347;
    __twr_v349 = (uint64_t)(&LexCurrentStream);
    __twr_v350 = *(uint64_t*)(__twr_v349);
    __twr_v351 = 82ULL;
    __twr_v352 = __twr_v350 + __twr_v351;
    *(uint8_t*)(__twr_v352) = __twr_v348;
    goto __twr_l12;
    __twr_l24:;
    __twr_v353 = 47ULL;
    if (_mng_byte311 != __twr_v353) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v354 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v355 = ((uint64_t (*)())__twr_v354)();
    _mng_nextbyte356 = __twr_v355;
    __twr_v357 = 47ULL;
    if (_mng_nextbyte356 != __twr_v357) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    _mng_comment308 = 1ULL;
    goto __twr_l8;
    __twr_l27:;
    __twr_v358 = (uint64_t)(&LexCurrentStream);
    __twr_v359 = *(uint64_t*)(__twr_v358);
    __twr_v360 = 83ULL;
    __twr_v361 = __twr_v359 + __twr_v360;
    *(uint8_t*)(__twr_v361) = _mng_nextbyte356;
    goto __twr_l12;
    __twr_l26:;
    __twr_v362 = 34ULL;
    if (_mng_byte311 != __twr_v362) { goto __twr_l30; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v363 = 1ULL;
    __twr_v364 = (uint64_t)(&LexCurrentStream);
    __twr_v365 = *(uint64_t*)(__twr_v364);
    __twr_v366 = 81ULL;
    __twr_v367 = __twr_v365 + __twr_v366;
    *(uint8_t*)(__twr_v367) = __twr_v363;
    goto __twr_l12;
    __twr_l30:;
    __twr_v368 = 39ULL;
    if (_mng_byte311 != __twr_v368) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v369 = 1ULL;
    __twr_v370 = (uint64_t)(&LexCurrentStream);
    __twr_v371 = *(uint64_t*)(__twr_v370);
    __twr_v372 = 82ULL;
    __twr_v373 = __twr_v371 + __twr_v372;
    *(uint8_t*)(__twr_v373) = __twr_v369;
    goto __twr_l12;
    __twr_l32:;
    __twr_v374 = 35ULL;
    if (_mng_byte311 != __twr_v374) { goto __twr_l12; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v375 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v375)();
    _mng_byte311 = 10ULL;
    __twr_l12:;
    __twr_v376 = (uint64_t)(&LexFalseCount);
    __twr_v377 = *(uint32_t*)(__twr_v376);
    if (!(__twr_v377)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    goto __twr_l8;
    __twr_l34:;
    goto __twr_l9;
    goto __twr_l8;
    __twr_l9:;
    _jkl_retv = _mng_byte311;
    goto _jkl_epilogue;
    __twr_l7:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token378, uint64_t _mng_terminator379, uint64_t _mng_dynamicbuffer380, uint64_t _mng_buffer381, uint64_t _mng_o_length) {
    uint64_t _mng_len382;
    uint64_t _mng_isbackslash383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t _mng_byte386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t _mng_length408;
    _mng_len382 = 0ULL;
    _mng_isbackslash383 = 0ULL;
    __twr_l37:;
    __twr_v384 = (uint64_t)(&LexGetCharacter);
    __twr_v385 = ((uint64_t (*)())__twr_v384)();
    _mng_byte386 = __twr_v385;
    if (_mng_byte386) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v387 = (uint64_t)(&LexError);
    __twr_v388 = (uint64_t)(&"String token terminated by EOF!\n");
    __twr_v389 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v387)(_mng_token378, __twr_v388, __twr_v389, __twr_v389);
    __twr_l39:;
    if (_mng_isbackslash383) { goto __twr_l43; } else { goto __twr_l42; }
    __twr_l42:;
    if (_mng_byte386 != _mng_terminator379) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    goto __twr_l38;
    goto __twr_l44;
    __twr_l46:;
    __twr_v390 = 92ULL;
    if (_mng_byte386 != __twr_v390) { goto __twr_l44; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_isbackslash383 = 1ULL;
    goto __twr_l37;
    __twr_l44:;
    goto __twr_l41;
    __twr_l43:;
    _mng_isbackslash383 = 0ULL;
    __twr_v391 = 110ULL;
    if (_mng_byte386 != __twr_v391) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_byte386 = 10ULL;
    goto __twr_l48;
    __twr_l50:;
    __twr_v392 = 116ULL;
    if (_mng_byte386 != __twr_v392) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_byte386 = 9ULL;
    goto __twr_l48;
    __twr_l52:;
    __twr_v393 = 114ULL;
    if (_mng_byte386 != __twr_v393) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_byte386 = 13ULL;
    goto __twr_l48;
    __twr_l54:;
    __twr_v394 = 98ULL;
    if (_mng_byte386 != __twr_v394) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    _mng_byte386 = 8ULL;
    goto __twr_l48;
    __twr_l56:;
    __twr_v395 = 91ULL;
    if (_mng_byte386 != __twr_v395) { goto __twr_l48; } else { goto __twr_l57; }
    __twr_l57:;
    _mng_byte386 = 27ULL;
    __twr_l48:;
    __twr_l41:;
    if (!(_mng_dynamicbuffer380)) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v396 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v396)(_mng_dynamicbuffer380, _mng_byte386);
    goto __twr_l58;
    __twr_l60:;
    __twr_v397 = 127ULL;
    if (_mng_len382 != __twr_v397) { goto __twr_l62; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v398 = (uint64_t)(&LexError);
    __twr_v399 = (uint64_t)(&"Token length exceeds maximum.\n");
    __twr_v400 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v398)(_mng_token378, __twr_v399, __twr_v400, __twr_v400);
    goto __twr_l58;
    __twr_l62:;
    __twr_v401 = 1ULL;
    __twr_v402 = _mng_buffer381 + _mng_len382;
    *(uint8_t*)(__twr_v402) = _mng_byte386;
    __twr_v403 = _mng_len382 + __twr_v401;
    _mng_len382 = __twr_v403;
    __twr_l58:;
    goto __twr_l37;
    __twr_l38:;
    if (!(_mng_dynamicbuffer380)) { goto __twr_l65; } else { goto __twr_l64; }
    __twr_l64:;
    __twr_v404 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v405 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v404)(_mng_dynamicbuffer380, __twr_v405);
    goto __twr_l63;
    __twr_l65:;
    __twr_v406 = 0ULL;
    __twr_v407 = _mng_buffer381 + _mng_len382;
    *(uint8_t*)(__twr_v407) = __twr_v406;
    _mng_length408 = _mng_len382;
    __twr_l63:;
    __twr_l36:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length408;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token409, uint64_t _mng_buffer410) {
    uint64_t _jkl_retv;
    uint64_t _mng_num411;
    uint64_t _mng_i412;
    uint64_t __twr_v413;
    uint64_t _mng_lastnum414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    _mng_num411 = 0ULL;
    _mng_i412 = 0ULL;
    __twr_v413 = *(uint8_t*)(_mng_buffer410);
    if (!(__twr_v413)) { goto __twr_l68; } else { goto __twr_l67; }
    __twr_l67:;
    _mng_lastnum414 = _mng_num411;
    __twr_v415 = 8ULL;
    __twr_v416 = _mng_num411 << __twr_v415;
    _mng_num411 = __twr_v416;
    if (!(_mng_lastnum414)) { goto __twr_l70; } else { goto __twr_l72; }
    __twr_l72:;
    __twr_v417 = _mng_num411 / _mng_lastnum414;
    __twr_v418 = 256ULL;
    if (__twr_v417 == __twr_v418) { goto __twr_l70; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v419 = (uint64_t)(&LexError);
    __twr_v420 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v421 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v419)(_mng_token409, __twr_v420, __twr_v421, __twr_v421);
    __twr_l70:;
    __twr_v422 = _mng_buffer410 + _mng_i412;
    __twr_v423 = *(uint8_t*)(__twr_v422);
    __twr_v424 = _mng_num411 + __twr_v423;
    _mng_num411 = __twr_v424;
    if (_mng_num411 >= _mng_lastnum414) { goto __twr_l73; } else { goto __twr_l74; }
    __twr_l74:;
    __twr_v425 = (uint64_t)(&LexError);
    __twr_v426 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v427 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v425)(_mng_token409, __twr_v426, __twr_v427, __twr_v427);
    __twr_l73:;
    __twr_v428 = 1ULL;
    __twr_v429 = _mng_i412 + __twr_v428;
    _mng_i412 = __twr_v429;
    __twr_l69:;
    __twr_v430 = _mng_buffer410 + _mng_i412;
    __twr_v431 = *(uint8_t*)(__twr_v430);
    if (__twr_v431) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    _jkl_retv = _mng_num411;
    goto _jkl_epilogue;
    __twr_l66:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token432, uint64_t _mng_buffer433) {
    uint64_t _jkl_retv;
    uint64_t _mng_num434;
    uint64_t _mng_i435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t _mng_lastnum455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t _mng_lastnum518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t _mng_lastnum549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    _mng_num434 = 0ULL;
    _mng_i435 = 0ULL;
    __twr_v436 = *(uint8_t*)(_mng_buffer433);
    __twr_v437 = 48ULL;
    if (__twr_v436 != __twr_v437) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v438 = 1ULL;
    __twr_v439 = _mng_buffer433 + __twr_v438;
    __twr_v440 = *(uint8_t*)(__twr_v439);
    if (__twr_v440) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v441 = 0ULL;
    _jkl_retv = __twr_v441;
    goto _jkl_epilogue;
    __twr_l78:;
    __twr_v442 = 1ULL;
    __twr_v443 = _mng_buffer433 + __twr_v442;
    __twr_v444 = *(uint8_t*)(__twr_v443);
    __twr_v445 = 120ULL;
    if (__twr_v444 != __twr_v445) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v446 = 2ULL;
    __twr_v447 = _mng_buffer433 + __twr_v446;
    __twr_v448 = *(uint8_t*)(__twr_v447);
    if (__twr_v448) { goto __twr_l82; } else { goto __twr_l83; }
    __twr_l83:;
    __twr_v449 = (uint64_t)(&LexError);
    __twr_v450 = (uint64_t)(&"Unfinished hex number.\n");
    __twr_v451 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v449)(_mng_token432, __twr_v450, __twr_v451, __twr_v451);
    __twr_l82:;
    _mng_i435 = 2ULL;
    __twr_v452 = 2ULL;
    __twr_v453 = _mng_buffer433 + __twr_v452;
    __twr_v454 = *(uint8_t*)(__twr_v453);
    if (!(__twr_v454)) { goto __twr_l85; } else { goto __twr_l84; }
    __twr_l84:;
    _mng_lastnum455 = _mng_num434;
    __twr_v456 = 4ULL;
    __twr_v457 = _mng_num434 << __twr_v456;
    _mng_num434 = __twr_v457;
    if (!(_mng_lastnum455)) { goto __twr_l87; } else { goto __twr_l89; }
    __twr_l89:;
    __twr_v458 = _mng_num434 / _mng_lastnum455;
    __twr_v459 = 16ULL;
    if (__twr_v458 == __twr_v459) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v460 = (uint64_t)(&LexError);
    __twr_v461 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v462 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v460)(_mng_token432, __twr_v461, __twr_v462, __twr_v462);
    __twr_l87:;
    __twr_v463 = _mng_buffer433 + _mng_i435;
    __twr_v464 = *(uint8_t*)(__twr_v463);
    __twr_v465 = 48ULL;
    if (__twr_v464 < __twr_v465) { goto __twr_l92; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v466 = _mng_buffer433 + _mng_i435;
    __twr_v467 = *(uint8_t*)(__twr_v466);
    __twr_v468 = 57ULL;
    if (__twr_v467 > __twr_v468) { goto __twr_l92; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v469 = _mng_buffer433 + _mng_i435;
    __twr_v470 = *(uint8_t*)(__twr_v469);
    __twr_v471 = 48ULL;
    __twr_v472 = __twr_v470 - __twr_v471;
    __twr_v473 = _mng_num434 + __twr_v472;
    _mng_num434 = __twr_v473;
    goto __twr_l90;
    __twr_l92:;
    __twr_v474 = _mng_buffer433 + _mng_i435;
    __twr_v475 = *(uint8_t*)(__twr_v474);
    __twr_v476 = 65ULL;
    if (__twr_v475 < __twr_v476) { goto __twr_l95; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v477 = _mng_buffer433 + _mng_i435;
    __twr_v478 = *(uint8_t*)(__twr_v477);
    __twr_v479 = 70ULL;
    if (__twr_v478 > __twr_v479) { goto __twr_l95; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v480 = _mng_buffer433 + _mng_i435;
    __twr_v481 = *(uint8_t*)(__twr_v480);
    __twr_v482 = 55ULL;
    __twr_v483 = __twr_v481 - __twr_v482;
    __twr_v484 = _mng_num434 + __twr_v483;
    _mng_num434 = __twr_v484;
    goto __twr_l90;
    __twr_l95:;
    __twr_v485 = _mng_buffer433 + _mng_i435;
    __twr_v486 = *(uint8_t*)(__twr_v485);
    __twr_v487 = 97ULL;
    if (__twr_v486 < __twr_v487) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v488 = _mng_buffer433 + _mng_i435;
    __twr_v489 = *(uint8_t*)(__twr_v488);
    __twr_v490 = 102ULL;
    if (__twr_v489 > __twr_v490) { goto __twr_l98; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v491 = _mng_buffer433 + _mng_i435;
    __twr_v492 = *(uint8_t*)(__twr_v491);
    __twr_v493 = 87ULL;
    __twr_v494 = __twr_v492 - __twr_v493;
    __twr_v495 = _mng_num434 + __twr_v494;
    _mng_num434 = __twr_v495;
    goto __twr_l90;
    __twr_l98:;
    __twr_v496 = (uint64_t)(&LexError);
    __twr_v497 = (uint64_t)(&"Malformed hex number.\n");
    __twr_v498 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v496)(_mng_token432, __twr_v497, __twr_v498, __twr_v498);
    __twr_l90:;
    if (_mng_num434 >= _mng_lastnum455) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v499 = (uint64_t)(&LexError);
    __twr_v500 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v501 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v499)(_mng_token432, __twr_v500, __twr_v501, __twr_v501);
    __twr_l100:;
    __twr_v502 = 1ULL;
    __twr_v503 = _mng_i435 + __twr_v502;
    _mng_i435 = __twr_v503;
    __twr_l86:;
    __twr_v504 = _mng_buffer433 + _mng_i435;
    __twr_v505 = *(uint8_t*)(__twr_v504);
    if (__twr_v505) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    _jkl_retv = _mng_num434;
    goto _jkl_epilogue;
    __twr_l80:;
    _mng_i435 = 1ULL;
    __twr_v506 = 1ULL;
    __twr_v507 = _mng_buffer433 + __twr_v506;
    __twr_v508 = *(uint8_t*)(__twr_v507);
    if (!(__twr_v508)) { goto __twr_l103; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v509 = _mng_buffer433 + _mng_i435;
    __twr_v510 = *(uint8_t*)(__twr_v509);
    __twr_v511 = 48ULL;
    if (__twr_v510 < __twr_v511) { goto __twr_l106; } else { goto __twr_l107; }
    __twr_l107:;
    __twr_v512 = _mng_buffer433 + _mng_i435;
    __twr_v513 = *(uint8_t*)(__twr_v512);
    __twr_v514 = 55ULL;
    if (__twr_v513 <= __twr_v514) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v515 = (uint64_t)(&LexError);
    __twr_v516 = (uint64_t)(&"Malformed octal number.\n");
    __twr_v517 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v515)(_mng_token432, __twr_v516, __twr_v517, __twr_v517);
    __twr_l105:;
    _mng_lastnum518 = _mng_num434;
    __twr_v519 = 3ULL;
    __twr_v520 = _mng_num434 << __twr_v519;
    _mng_num434 = __twr_v520;
    if (!(_mng_lastnum518)) { goto __twr_l108; } else { goto __twr_l110; }
    __twr_l110:;
    __twr_v521 = _mng_num434 / _mng_lastnum518;
    __twr_v522 = 8ULL;
    if (__twr_v521 == __twr_v522) { goto __twr_l108; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v523 = (uint64_t)(&LexError);
    __twr_v524 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v525 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v523)(_mng_token432, __twr_v524, __twr_v525, __twr_v525);
    __twr_l108:;
    __twr_v526 = _mng_buffer433 + _mng_i435;
    __twr_v527 = *(uint8_t*)(__twr_v526);
    __twr_v528 = 48ULL;
    __twr_v529 = __twr_v527 - __twr_v528;
    __twr_v530 = _mng_num434 + __twr_v529;
    _mng_num434 = __twr_v530;
    if (_mng_num434 >= _mng_lastnum518) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v531 = (uint64_t)(&LexError);
    __twr_v532 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v533 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v531)(_mng_token432, __twr_v532, __twr_v533, __twr_v533);
    __twr_l111:;
    __twr_v534 = 1ULL;
    __twr_v535 = _mng_i435 + __twr_v534;
    _mng_i435 = __twr_v535;
    __twr_l104:;
    __twr_v536 = _mng_buffer433 + _mng_i435;
    __twr_v537 = *(uint8_t*)(__twr_v536);
    if (__twr_v537) { goto __twr_l102; } else { goto __twr_l103; }
    __twr_l103:;
    _jkl_retv = _mng_num434;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v538 = _mng_buffer433 + _mng_i435;
    __twr_v539 = *(uint8_t*)(__twr_v538);
    if (!(__twr_v539)) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_v540 = _mng_buffer433 + _mng_i435;
    __twr_v541 = *(uint8_t*)(__twr_v540);
    __twr_v542 = 48ULL;
    if (__twr_v541 < __twr_v542) { goto __twr_l117; } else { goto __twr_l118; }
    __twr_l118:;
    __twr_v543 = _mng_buffer433 + _mng_i435;
    __twr_v544 = *(uint8_t*)(__twr_v543);
    __twr_v545 = 57ULL;
    if (__twr_v544 <= __twr_v545) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v546 = (uint64_t)(&LexError);
    __twr_v547 = (uint64_t)(&"Malformed decimal number.\n");
    __twr_v548 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v546)(_mng_token432, __twr_v547, __twr_v548, __twr_v548);
    __twr_l116:;
    _mng_lastnum549 = _mng_num434;
    __twr_v550 = 10ULL;
    __twr_v551 = _mng_num434 * __twr_v550;
    _mng_num434 = __twr_v551;
    if (!(_mng_lastnum549)) { goto __twr_l119; } else { goto __twr_l121; }
    __twr_l121:;
    __twr_v552 = _mng_num434 / _mng_lastnum549;
    __twr_v553 = 10ULL;
    if (__twr_v552 == __twr_v553) { goto __twr_l119; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v554 = (uint64_t)(&LexError);
    __twr_v555 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v556 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v554)(_mng_token432, __twr_v555, __twr_v556, __twr_v556);
    __twr_l119:;
    __twr_v557 = _mng_buffer433 + _mng_i435;
    __twr_v558 = *(uint8_t*)(__twr_v557);
    __twr_v559 = 48ULL;
    __twr_v560 = __twr_v558 - __twr_v559;
    __twr_v561 = _mng_num434 + __twr_v560;
    _mng_num434 = __twr_v561;
    if (_mng_num434 >= _mng_lastnum549) { goto __twr_l122; } else { goto __twr_l123; }
    __twr_l123:;
    __twr_v562 = (uint64_t)(&LexError);
    __twr_v563 = (uint64_t)(&"Number does not fit in machine word.\n");
    __twr_v564 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v562)(_mng_token432, __twr_v563, __twr_v564, __twr_v564);
    __twr_l122:;
    __twr_v565 = 1ULL;
    __twr_v566 = _mng_i435 + __twr_v565;
    _mng_i435 = __twr_v566;
    __twr_l115:;
    __twr_v567 = _mng_buffer433 + _mng_i435;
    __twr_v568 = *(uint8_t*)(__twr_v567);
    if (__twr_v568) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    _jkl_retv = _mng_num434;
    goto _jkl_epilogue;
    __twr_l75:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token569, uint64_t _mng_buffer570, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t _mng_stream574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t _mng_byte591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t _mng_internedstring623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t _mng_dynamicbuffer626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t _mng_dumpster631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t _mng_len650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t _mng_uppercaseonly682;
    uint64_t _mng_len683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t _mng_macro722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    __twr_lLoopOnMacro:;
    _mng_length571 = 0ULL;
    __twr_v572 = (uint64_t)(&LexCurrentStream);
    __twr_v573 = *(uint64_t*)(__twr_v572);
    _mng_stream574 = __twr_v573;
    if (!(_mng_stream574)) { goto __twr_l126; } else { goto __twr_l127; }
    __twr_l127:;
    __twr_v575 = 8ULL;
    __twr_v576 = _mng_stream574 + __twr_v575;
    __twr_v577 = *(uint64_t*)(__twr_v576);
    __twr_v578 = _mng_token569 + __twr_v575;
    *(uint64_t*)(__twr_v578) = __twr_v577;
    __twr_v579 = 44ULL;
    __twr_v580 = _mng_stream574 + __twr_v579;
    __twr_v581 = *(uint32_t*)(__twr_v580);
    __twr_v582 = 16ULL;
    __twr_v583 = _mng_token569 + __twr_v582;
    *(uint32_t*)(__twr_v583) = __twr_v581;
    __twr_v584 = 48ULL;
    __twr_v585 = _mng_stream574 + __twr_v584;
    __twr_v586 = *(uint32_t*)(__twr_v585);
    __twr_v587 = 20ULL;
    __twr_v588 = _mng_token569 + __twr_v587;
    *(uint32_t*)(__twr_v588) = __twr_v586;
    __twr_l126:;
    __twr_v589 = (uint64_t)(&LexGetCharacter);
    __twr_v590 = ((uint64_t (*)())__twr_v589)();
    _mng_byte591 = __twr_v590;
    __twr_v592 = (uint64_t)(&LexCharTreatment);
    __twr_v593 = __twr_v592 + _mng_byte591;
    __twr_v594 = *(uint8_t*)(__twr_v593);
    __twr_v595 = 3ULL;
    if (__twr_v594 != __twr_v595) { goto __twr_l129; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v596 = (uint64_t)(&LexCurrentStream);
    __twr_v597 = *(uint64_t*)(__twr_v596);
    _mng_stream574 = __twr_v597;
    if (!(_mng_stream574)) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v598 = 8ULL;
    __twr_v599 = _mng_stream574 + __twr_v598;
    __twr_v600 = *(uint64_t*)(__twr_v599);
    __twr_v601 = _mng_token569 + __twr_v598;
    *(uint64_t*)(__twr_v601) = __twr_v600;
    __twr_v602 = 44ULL;
    __twr_v603 = _mng_stream574 + __twr_v602;
    __twr_v604 = *(uint32_t*)(__twr_v603);
    __twr_v605 = 16ULL;
    __twr_v606 = _mng_token569 + __twr_v605;
    *(uint32_t*)(__twr_v606) = __twr_v604;
    __twr_v607 = 48ULL;
    __twr_v608 = _mng_stream574 + __twr_v607;
    __twr_v609 = *(uint32_t*)(__twr_v608);
    __twr_v610 = 20ULL;
    __twr_v611 = _mng_token569 + __twr_v610;
    *(uint32_t*)(__twr_v611) = __twr_v609;
    __twr_l131:;
    __twr_v612 = (uint64_t)(&LexGetCharacter);
    __twr_v613 = ((uint64_t (*)())__twr_v612)();
    _mng_byte591 = __twr_v613;
    __twr_l130:;
    __twr_v614 = (uint64_t)(&LexCharTreatment);
    __twr_v615 = __twr_v614 + _mng_byte591;
    __twr_v616 = *(uint8_t*)(__twr_v615);
    __twr_v617 = 3ULL;
    if (__twr_v616 == __twr_v617) { goto __twr_l128; } else { goto __twr_l129; }
    __twr_l129:;
    if (_mng_byte591) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v618 = 0ULL;
    _jkl_retv = __twr_v618;
    goto _jkl_epilogue;
    __twr_l133:;
    __twr_v619 = 34ULL;
    if (_mng_byte591 != __twr_v619) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    __twr_v620 = (uint64_t)(&TlAllocateFromZone);
    __twr_v621 = (uint64_t)(&LexInternedStringZone);
    __twr_v622 = ((uint64_t (*)(uint64_t))__twr_v620)(__twr_v621);
    _mng_internedstring623 = __twr_v622;
    __twr_v624 = 48ULL;
    __twr_v625 = _mng_internedstring623 + __twr_v624;
    _mng_dynamicbuffer626 = __twr_v625;
    __twr_v627 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v627)(_mng_dynamicbuffer626);
    __twr_v628 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v629 = 34ULL;
    __twr_v630 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v628)(_mng_token569, __twr_v629, _mng_dynamicbuffer626, __twr_v630, (uint64_t)(&_mng_dumpster631));
    __twr_v632 = 4ULL;
    _jkl_retv = __twr_v632;
    goto _jkl_epilogue;
    __twr_l135:;
    __twr_v633 = 39ULL;
    if (_mng_byte591 != __twr_v633) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v634 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v635 = 39ULL;
    __twr_v636 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v634)(_mng_token569, __twr_v635, __twr_v636, _mng_buffer570, (uint64_t)(&_mng_length571));
    __twr_v637 = 8ULL;
    _jkl_retv = __twr_v637;
    goto _jkl_epilogue;
    __twr_l137:;
    __twr_v638 = (uint64_t)(&LexCharTreatment);
    __twr_v639 = 1ULL;
    __twr_v640 = __twr_v638 + _mng_byte591;
    __twr_v641 = *(uint8_t*)(__twr_v640);
    if (__twr_v641 != __twr_v639) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    _mng_length571 = 1ULL;
    __twr_v642 = 0ULL;
    __twr_v643 = 1ULL;
    *(uint8_t*)(_mng_buffer570) = _mng_byte591;
    __twr_v644 = 1ULL;
    __twr_v645 = _mng_buffer570 + __twr_v644;
    *(uint8_t*)(__twr_v645) = __twr_v642;
    _jkl_retv = __twr_v643;
    goto _jkl_epilogue;
    __twr_l139:;
    __twr_v646 = (uint64_t)(&LexCharTreatment);
    __twr_v647 = __twr_v646 + _mng_byte591;
    __twr_v648 = *(uint8_t*)(__twr_v647);
    __twr_v649 = 2ULL;
    if (__twr_v648 != __twr_v649) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    _mng_len650 = 0ULL;
    __twr_v651 = (uint64_t)(&LexCharTreatment);
    __twr_v652 = __twr_v651 + _mng_byte591;
    __twr_v653 = *(uint8_t*)(__twr_v652);
    __twr_v654 = 2ULL;
    if (__twr_v653 != __twr_v654) { goto __twr_l144; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v655 = 127ULL;
    if (_mng_len650 != __twr_v655) { goto __twr_l146; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v656 = (uint64_t)(&LexError);
    __twr_v657 = (uint64_t)(&"Token length exceeds maximum.\n");
    __twr_v658 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v656)(_mng_token569, __twr_v657, __twr_v658, __twr_v658);
    __twr_l146:;
    __twr_v659 = 1ULL;
    __twr_v660 = _mng_buffer570 + _mng_len650;
    *(uint8_t*)(__twr_v660) = _mng_byte591;
    __twr_v661 = _mng_len650 + __twr_v659;
    _mng_len650 = __twr_v661;
    __twr_v662 = (uint64_t)(&LexGetCharacter);
    __twr_v663 = ((uint64_t (*)())__twr_v662)();
    _mng_byte591 = __twr_v663;
    __twr_l145:;
    __twr_v664 = (uint64_t)(&LexCharTreatment);
    __twr_v665 = __twr_v664 + _mng_byte591;
    __twr_v666 = *(uint8_t*)(__twr_v665);
    __twr_v667 = 2ULL;
    if (__twr_v666 == __twr_v667) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v668 = 0ULL;
    __twr_v669 = _mng_buffer570 + _mng_len650;
    *(uint8_t*)(__twr_v669) = __twr_v668;
    _mng_length571 = _mng_len650;
    __twr_v670 = (uint64_t)(&LexCharTreatment);
    __twr_v671 = __twr_v670 + _mng_byte591;
    __twr_v672 = *(uint8_t*)(__twr_v671);
    __twr_v673 = 3ULL;
    if (__twr_v672 == __twr_v673) { goto __twr_l148; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v674 = (uint64_t)(&LexCurrentStream);
    __twr_v675 = *(uint64_t*)(__twr_v674);
    __twr_v676 = 84ULL;
    __twr_v677 = __twr_v675 + __twr_v676;
    *(uint8_t*)(__twr_v677) = _mng_byte591;
    __twr_l148:;
    __twr_v678 = 2ULL;
    _jkl_retv = __twr_v678;
    goto _jkl_epilogue;
    __twr_l141:;
    __twr_v679 = 65ULL;
    if (_mng_byte591 < __twr_v679) { goto __twr_l152; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v680 = 90ULL;
    if (_mng_byte591 > __twr_v680) { goto __twr_l152; } else { goto __twr_l151; }
    __twr_l151:;
    __twr_v681 = 1ULL;
    goto __twr_l153;
    __twr_l152:;
    __twr_v681 = 0ULL;
    __twr_l153:;
    _mng_uppercaseonly682 = __twr_v681;
    _mng_len683 = 0ULL;
    __twr_v684 = (uint64_t)(&LexCharTreatment);
    __twr_v685 = __twr_v684 + _mng_byte591;
    __twr_v686 = *(uint8_t*)(__twr_v685);
    if (__twr_v686) { goto __twr_l155; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v687 = 127ULL;
    if (_mng_len683 != __twr_v687) { goto __twr_l157; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v688 = (uint64_t)(&LexError);
    __twr_v689 = (uint64_t)(&"Token length exceeds maximum.\n");
    __twr_v690 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v688)(_mng_token569, __twr_v689, __twr_v690, __twr_v690);
    __twr_l157:;
    if (!(_mng_uppercaseonly682)) { goto __twr_l159; } else { goto __twr_l160; }
    __twr_l160:;
    __twr_v691 = 65ULL;
    if (_mng_byte591 < __twr_v691) { goto __twr_l163; } else { goto __twr_l161; }
    __twr_l161:;
    __twr_v692 = 90ULL;
    if (_mng_byte591 > __twr_v692) { goto __twr_l163; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v693 = 1ULL;
    goto __twr_l164;
    __twr_l163:;
    __twr_v693 = 0ULL;
    __twr_l164:;
    _mng_uppercaseonly682 = __twr_v693;
    __twr_l159:;
    __twr_v694 = 1ULL;
    __twr_v695 = _mng_buffer570 + _mng_len683;
    *(uint8_t*)(__twr_v695) = _mng_byte591;
    __twr_v696 = _mng_len683 + __twr_v694;
    _mng_len683 = __twr_v696;
    __twr_v697 = (uint64_t)(&LexGetCharacter);
    __twr_v698 = ((uint64_t (*)())__twr_v697)();
    _mng_byte591 = __twr_v698;
    __twr_l156:;
    __twr_v699 = (uint64_t)(&LexCharTreatment);
    __twr_v700 = __twr_v699 + _mng_byte591;
    __twr_v701 = *(uint8_t*)(__twr_v700);
    if (!(__twr_v701)) { goto __twr_l154; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v702 = 0ULL;
    __twr_v703 = _mng_buffer570 + _mng_len683;
    *(uint8_t*)(__twr_v703) = __twr_v702;
    _mng_length571 = _mng_len683;
    __twr_v704 = (uint64_t)(&LexCharTreatment);
    __twr_v705 = 1ULL;
    __twr_v706 = __twr_v704 + _mng_byte591;
    __twr_v707 = *(uint8_t*)(__twr_v706);
    if (__twr_v707 == __twr_v705) { goto __twr_l166; } else { goto __twr_l167; }
    __twr_l167:;
    __twr_v708 = (uint64_t)(&LexCharTreatment);
    __twr_v709 = __twr_v708 + _mng_byte591;
    __twr_v710 = *(uint8_t*)(__twr_v709);
    __twr_v711 = 2ULL;
    if (__twr_v710 != __twr_v711) { goto __twr_l165; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v712 = (uint64_t)(&LexCurrentStream);
    __twr_v713 = *(uint64_t*)(__twr_v712);
    __twr_v714 = 84ULL;
    __twr_v715 = __twr_v713 + __twr_v714;
    *(uint8_t*)(__twr_v715) = _mng_byte591;
    __twr_l165:;
    if (!(_mng_uppercaseonly682)) { goto __twr_l168; } else { goto __twr_l170; }
    __twr_l170:;
    __twr_v716 = 1ULL;
    if (_mng_len683 <= __twr_v716) { goto __twr_l168; } else { goto __twr_l169; }
    __twr_l169:;
    __twr_v717 = 16ULL;
    _jkl_retv = __twr_v717;
    goto _jkl_epilogue;
    __twr_l168:;
    __twr_v718 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v719 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v720 = *(uint64_t*)(__twr_v719);
    __twr_v721 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v718)(__twr_v720, _mng_buffer570);
    _mng_macro722 = __twr_v721;
    if (_mng_macro722) { goto __twr_l171; } else { goto __twr_l172; }
    __twr_l172:;
    __twr_v723 = 0ULL;
    _jkl_retv = __twr_v723;
    goto _jkl_epilogue;
    __twr_l171:;
    __twr_v724 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v724)(_mng_macro722, _mng_token569);
    goto __twr_lLoopOnMacro;
    __twr_l124:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length571;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring623;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token725) {
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t _mng_buffer728[16];
    uint64_t __twr_v729;
    uint64_t _mng_length730;
    uint64_t _mng_internedstring731;
    uint64_t _mng_tokenflag732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t _mng_keyword739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    __twr_v726 = (uint64_t)(&LexGetTokenContents);
    __twr_v727 = (uint64_t)(&_mng_buffer728);
    __twr_v729 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v726)(_mng_token725, __twr_v727, (uint64_t)(&_mng_length730), (uint64_t)(&_mng_internedstring731));
    _mng_tokenflag732 = __twr_v729;
    __twr_v733 = 19ULL;
    __twr_v734 = _mng_tokenflag732 & __twr_v733;
    if (!(__twr_v734)) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    __twr_v735 = (uint64_t)(&TlLookupHashTable);
    __twr_v736 = (uint64_t)(&LexKeywordHashTable);
    __twr_v737 = (uint64_t)(&_mng_buffer728);
    __twr_v738 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v735)(__twr_v736, __twr_v737);
    _mng_keyword739 = __twr_v738;
    if (_mng_keyword739) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v740 = 16ULL;
    __twr_v741 = _mng_tokenflag732 & __twr_v740;
    if (!(__twr_v741)) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v742 = (uint64_t)(&LexError);
    __twr_v743 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).\n");
    __twr_v744 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v742)(_mng_token725, __twr_v743, __twr_v744, __twr_v744);
    __twr_l178:;
    __twr_v745 = (uint64_t)(&LexError);
    __twr_v746 = (uint64_t)(&"Unknown keyword\n");
    __twr_v747 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v745)(_mng_token725, __twr_v746, __twr_v747, __twr_v747);
    __twr_l176:;
    __twr_v748 = 48ULL;
    __twr_v749 = _mng_keyword739 + __twr_v748;
    __twr_v750 = *(uint8_t*)(__twr_v749);
    __twr_v751 = 24ULL;
    __twr_v752 = _mng_token725 + __twr_v751;
    *(uint8_t*)(__twr_v752) = __twr_v750;
    __twr_v753 = 49ULL;
    __twr_v754 = _mng_keyword739 + __twr_v753;
    __twr_v755 = *(uint8_t*)(__twr_v754);
    __twr_v756 = 25ULL;
    __twr_v757 = _mng_token725 + __twr_v756;
    *(uint8_t*)(__twr_v757) = __twr_v755;
    __twr_v758 = 50ULL;
    __twr_v759 = _mng_keyword739 + __twr_v758;
    __twr_v760 = *(uint8_t*)(__twr_v759);
    __twr_v761 = 26ULL;
    __twr_v762 = _mng_token725 + __twr_v761;
    *(uint8_t*)(__twr_v762) = __twr_v760;
    goto _jkl_epilogue;
    __twr_l174:;
    __twr_v763 = 8ULL;
    __twr_v764 = _mng_tokenflag732 & __twr_v763;
    if (!(__twr_v764)) { goto __twr_l180; } else { goto __twr_l181; }
    __twr_l181:;
    __twr_v765 = 5ULL;
    __twr_v766 = 24ULL;
    __twr_v767 = _mng_token725 + __twr_v766;
    *(uint8_t*)(__twr_v767) = __twr_v765;
    __twr_v768 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v769 = (uint64_t)(&_mng_buffer728);
    __twr_v770 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v768)(_mng_token725, __twr_v769);
    *(uint64_t*)(_mng_token725) = __twr_v770;
    goto _jkl_epilogue;
    __twr_l180:;
    __twr_v771 = 4ULL;
    __twr_v772 = _mng_tokenflag732 & __twr_v771;
    if (!(__twr_v772)) { goto __twr_l182; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v773 = 4ULL;
    __twr_v774 = 24ULL;
    __twr_v775 = _mng_token725 + __twr_v774;
    *(uint8_t*)(__twr_v775) = __twr_v773;
    *(uint64_t*)(_mng_token725) = _mng_internedstring731;
    goto _jkl_epilogue;
    __twr_l182:;
    __twr_v776 = 32ULL;
    __twr_v777 = _mng_tokenflag732 & __twr_v776;
    if (!(__twr_v777)) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v778 = 6ULL;
    __twr_v779 = 24ULL;
    __twr_v780 = _mng_token725 + __twr_v779;
    *(uint8_t*)(__twr_v780) = __twr_v778;
    goto _jkl_epilogue;
    __twr_l184:;
    if (_mng_length730) { goto __twr_l186; } else { goto __twr_l187; }
    __twr_l187:;
    __twr_v781 = 6ULL;
    __twr_v782 = 24ULL;
    __twr_v783 = _mng_token725 + __twr_v782;
    *(uint8_t*)(__twr_v783) = __twr_v781;
    goto _jkl_epilogue;
    __twr_l186:;
    __twr_v784 = (uint64_t)(&_mng_buffer728);
    __twr_v785 = *(uint8_t*)(__twr_v784);
    __twr_v786 = 48ULL;
    if (__twr_v785 < __twr_v786) { goto __twr_l188; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v787 = (uint64_t)(&_mng_buffer728);
    __twr_v788 = *(uint8_t*)(__twr_v787);
    __twr_v789 = 57ULL;
    if (__twr_v788 > __twr_v789) { goto __twr_l188; } else { goto __twr_l189; }
    __twr_l189:;
    __twr_v790 = 5ULL;
    __twr_v791 = 24ULL;
    __twr_v792 = _mng_token725 + __twr_v791;
    *(uint8_t*)(__twr_v792) = __twr_v790;
    __twr_v793 = (uint64_t)(&LexCrunchNumber);
    __twr_v794 = (uint64_t)(&_mng_buffer728);
    __twr_v795 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v793)(_mng_token725, __twr_v794);
    *(uint64_t*)(_mng_token725) = __twr_v795;
    goto _jkl_epilogue;
    __twr_l188:;
    __twr_v796 = (uint64_t)(&LexError);
    __twr_v797 = (uint64_t)(&"Unknown token\n");
    __twr_v798 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v796)(_mng_token725, __twr_v797, __twr_v798, __twr_v798);
    __twr_l173:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest799, uint64_t _mng_src800) {
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    __twr_v801 = *(uint64_t*)(_mng_src800);
    *(uint64_t*)(_mng_dest799) = __twr_v801;
    __twr_v802 = 8ULL;
    __twr_v803 = _mng_src800 + __twr_v802;
    __twr_v804 = *(uint64_t*)(__twr_v803);
    __twr_v805 = _mng_dest799 + __twr_v802;
    *(uint64_t*)(__twr_v805) = __twr_v804;
    __twr_v806 = 16ULL;
    __twr_v807 = _mng_src800 + __twr_v806;
    __twr_v808 = *(uint32_t*)(__twr_v807);
    __twr_v809 = _mng_dest799 + __twr_v806;
    *(uint32_t*)(__twr_v809) = __twr_v808;
    __twr_v810 = 20ULL;
    __twr_v811 = _mng_src800 + __twr_v810;
    __twr_v812 = *(uint32_t*)(__twr_v811);
    __twr_v813 = _mng_dest799 + __twr_v810;
    *(uint32_t*)(__twr_v813) = __twr_v812;
    __twr_v814 = 24ULL;
    __twr_v815 = _mng_src800 + __twr_v814;
    __twr_v816 = *(uint8_t*)(__twr_v815);
    __twr_v817 = _mng_dest799 + __twr_v814;
    *(uint8_t*)(__twr_v817) = __twr_v816;
    __twr_v818 = 25ULL;
    __twr_v819 = _mng_src800 + __twr_v818;
    __twr_v820 = *(uint8_t*)(__twr_v819);
    __twr_v821 = _mng_dest799 + __twr_v818;
    *(uint8_t*)(__twr_v821) = __twr_v820;
    __twr_v822 = 26ULL;
    __twr_v823 = _mng_src800 + __twr_v822;
    __twr_v824 = *(uint8_t*)(__twr_v823);
    __twr_v825 = _mng_dest799 + __twr_v822;
    *(uint8_t*)(__twr_v825) = __twr_v824;
    __twr_l191:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token826) {
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t _mng_index829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    __twr_v827 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v828 = *(uint32_t*)(__twr_v827);
    _mng_index829 = __twr_v828;
    if (!(_mng_index829)) { goto __twr_l193; } else { goto __twr_l194; }
    __twr_l194:;
    __twr_v830 = (uint64_t)(&LexCopyToken);
    __twr_v831 = (uint64_t)(&LexPutbackStack);
    __twr_v832 = 1ULL;
    __twr_v833 = _mng_index829 - __twr_v832;
    __twr_v834 = 5ULL;
    __twr_v835 = __twr_v833 << __twr_v834;
    __twr_v836 = __twr_v831 + __twr_v835;
    ((void (*)(uint64_t, uint64_t))__twr_v830)(_mng_token826, __twr_v836);
    __twr_v837 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v837) = __twr_v833;
    goto _jkl_epilogue;
    __twr_l193:;
    __twr_v838 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v838)(_mng_token826);
    __twr_l192:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token839) {
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t _mng_index842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    __twr_v840 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v841 = *(uint32_t*)(__twr_v840);
    _mng_index842 = __twr_v841;
    __twr_v843 = 256ULL;
    if (_mng_index842 != __twr_v843) { goto __twr_l196; } else { goto __twr_l197; }
    __twr_l197:;
    __twr_v844 = (uint64_t)(&TlInternalError);
    __twr_v845 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v846 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v844)(__twr_v845, __twr_v846, __twr_v846, __twr_v846);
    __twr_l196:;
    __twr_v847 = (uint64_t)(&LexCopyToken);
    __twr_v848 = (uint64_t)(&LexPutbackStack);
    __twr_v849 = 5ULL;
    __twr_v850 = _mng_index842 << __twr_v849;
    __twr_v851 = __twr_v848 + __twr_v850;
    ((void (*)(uint64_t, uint64_t))__twr_v847)(__twr_v851, _mng_token839);
    __twr_v852 = 1ULL;
    __twr_v853 = _mng_index842 + __twr_v852;
    __twr_v854 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v854) = __twr_v853;
    __twr_l195:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token855, uint64_t _mng_type856, uint64_t _mng_subtype857) {
    uint64_t _jkl_retv;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t _mng_index860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t _mng_matchtoken871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t __twr_v886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    uint64_t __twr_v891;
    __twr_v858 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v859 = *(uint32_t*)(__twr_v858);
    _mng_index860 = __twr_v859;
    if (_mng_index860) { goto __twr_l199; } else { goto __twr_l200; }
    __twr_l200:;
    __twr_v861 = (uint64_t)(&LexNextToken);
    __twr_v862 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v861)(__twr_v862);
    __twr_v863 = 1ULL;
    __twr_v864 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v864) = __twr_v863;
    _mng_index860 = 1ULL;
    __twr_l199:;
    __twr_v865 = (uint64_t)(&LexPutbackStack);
    __twr_v866 = 1ULL;
    __twr_v867 = _mng_index860 - __twr_v866;
    __twr_v868 = 5ULL;
    __twr_v869 = __twr_v867 << __twr_v868;
    __twr_v870 = __twr_v865 + __twr_v869;
    _mng_matchtoken871 = __twr_v870;
    if (!(_mng_token855)) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v872 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v872)(_mng_token855, _mng_matchtoken871);
    __twr_l201:;
    __twr_v873 = 24ULL;
    __twr_v874 = _mng_matchtoken871 + __twr_v873;
    __twr_v875 = *(uint8_t*)(__twr_v874);
    if (__twr_v875 == _mng_type856) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v876 = 24ULL;
    __twr_v877 = _mng_matchtoken871 + __twr_v876;
    __twr_v878 = *(uint8_t*)(__twr_v877);
    __twr_v879 = 6ULL;
    if (__twr_v878 != __twr_v879) { goto __twr_l205; } else { goto __twr_l206; }
    __twr_l206:;
    __twr_v880 = 1ULL;
    __twr_v881 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v882 = *(uint32_t*)(__twr_v881);
    __twr_v883 = __twr_v882 - __twr_v880;
    *(uint32_t*)(__twr_v881) = __twr_v883;
    __twr_l205:;
    __twr_v884 = 0ULL;
    _jkl_retv = __twr_v884;
    goto _jkl_epilogue;
    __twr_l203:;
    if (!(_mng_subtype857)) { goto __twr_l208; } else { goto __twr_l209; }
    __twr_l209:;
    __twr_v885 = 25ULL;
    __twr_v886 = _mng_matchtoken871 + __twr_v885;
    __twr_v887 = *(uint8_t*)(__twr_v886);
    if (__twr_v887 != _mng_subtype857) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v888 = 1ULL;
    __twr_v889 = _mng_index860 - __twr_v888;
    __twr_v890 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v890) = __twr_v889;
    _jkl_retv = __twr_v888;
    goto _jkl_epilogue;
    __twr_l207:;
    __twr_v891 = 0ULL;
    _jkl_retv = __twr_v891;
    goto _jkl_epilogue;
    __twr_l198:;
    _jkl_epilogue:;
    return _jkl_retv;
}

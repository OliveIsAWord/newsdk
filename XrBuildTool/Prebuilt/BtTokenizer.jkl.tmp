#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg123);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename124, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock125, uint64_t _mng_filepath126);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope127);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg128);
extern void LexExpandMacro(uint64_t _mng_macro129, uint64_t _mng_token130);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream131, uint64_t _mng_macro132);
extern void LexUninitializeStream(uint64_t _mng_stream133);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream134);
extern void LexPushStream(uint64_t _mng_stream135);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream136, uint64_t _mng_fileblock137, uint64_t _mng_handle138);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock139, uint64_t _mng_handle140);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest141, uint64_t _mng_src142);
extern void LexGetToken(uint64_t _mng_token143);
extern void LexPutbackToken(uint64_t _mng_token144);
extern uint64_t LexMatchToken(uint64_t _mng_token145, uint64_t _mng_type146, uint64_t _mng_subtype147);
extern void LexStreamError(uint64_t _mng_str148, uint64_t _mng_err1149, uint64_t _mng_err2150, uint64_t _mng_err3151);
extern void LexTokenError(uint64_t _mng_token152, uint64_t _mng_str153, uint64_t _mng_err1154, uint64_t _mng_err2155, uint64_t _mng_err3156);
extern uint64_t LexCrunchNumber(uint64_t _mng_token157, uint64_t _mng_buffer158);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtStatFile(uint64_t _mng_fullpath159);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
uint64_t LexInternedStringZone[2];
void LexInsertKeyword(uint64_t _mng_name160, uint64_t _mng_type161, uint64_t _mng_subtype162, uint64_t _mng_context163) {
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t _mng_keyword170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    __twr_v164 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v165 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v166 = *(uint64_t*)(__twr_v165);
    __twr_v167 = 56ULL;
    __twr_v168 = __twr_v166 * __twr_v167;
    __twr_v169 = __twr_v164 + __twr_v168;
    _mng_keyword170 = __twr_v169;
    __twr_v171 = 1ULL;
    __twr_v172 = __twr_v166 + __twr_v171;
    *(uint64_t*)(__twr_v165) = __twr_v172;
    __twr_v173 = 48ULL;
    __twr_v174 = _mng_keyword170 + __twr_v173;
    *(uint8_t*)(__twr_v174) = _mng_type161;
    __twr_v175 = 49ULL;
    __twr_v176 = _mng_keyword170 + __twr_v175;
    *(uint8_t*)(__twr_v176) = _mng_subtype162;
    __twr_v177 = 50ULL;
    __twr_v178 = _mng_keyword170 + __twr_v177;
    *(uint8_t*)(__twr_v178) = _mng_context163;
    __twr_v179 = (uint64_t)(&TlInsertHashTable);
    __twr_v180 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v179)(__twr_v180, _mng_keyword170, _mng_name160);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexInitialize() {
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t _mng_dumpster186;
    uint64_t _mng_fileblock187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t _mng_filestream194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    __twr_v181 = (uint64_t)(&FeCreateFileBlock);
    __twr_v182 = (uint64_t)(&FeInputFile);
    __twr_v183 = 0ULL;
    __twr_v184 = 1ULL;
    __twr_v185 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v181)(__twr_v182, (uint64_t)(&_mng_dumpster186));
    _mng_fileblock187 = __twr_v185;
    __twr_v188 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v188)(_mng_fileblock187, __twr_v182);
    __twr_v189 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v189)();
    __twr_v190 = (uint64_t)(&LexCreateFileStream);
    __twr_v191 = (uint64_t)(&FeInputFileHandle);
    __twr_v192 = *(uint64_t*)(__twr_v191);
    __twr_v193 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v190)(_mng_fileblock187, __twr_v192);
    _mng_filestream194 = __twr_v193;
    __twr_v195 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v195)(_mng_filestream194);
    __twr_v196 = (uint64_t)(&TlInitializeZone);
    __twr_v197 = (uint64_t)(&LexInternedStringZone);
    __twr_v198 = 136ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v196)(__twr_v197, __twr_v198);
    __twr_v199 = (uint64_t)(&TlInitializeHashTable);
    __twr_v200 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v199)(__twr_v200);
    __twr_v201 = (uint64_t)(&LexInsertKeyword);
    __twr_v202 = (uint64_t)(&"END");
    __twr_v203 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v202, __twr_v203, __twr_v183, __twr_v183);
    __twr_v204 = (uint64_t)(&"TARGET");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v204, __twr_v184, __twr_v183, __twr_v183);
    __twr_v205 = (uint64_t)(&"FILE");
    __twr_v206 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v205, __twr_v206, __twr_v183, __twr_v183);
    __twr_v207 = (uint64_t)(&"DEPEND");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v207, __twr_v206, __twr_v184, __twr_v183);
    __twr_v208 = (uint64_t)(&"SOURCES");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v208, __twr_v206, __twr_v206, __twr_v183);
    __twr_v209 = (uint64_t)(&"JKLINCLUDE");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v209, __twr_v206, __twr_v203, __twr_v183);
    __twr_v210 = (uint64_t)(&"LINKOPT");
    __twr_v211 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v210, __twr_v206, __twr_v211, __twr_v183);
    __twr_v212 = (uint64_t)(&"JKLOPT");
    __twr_v213 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v212, __twr_v206, __twr_v213, __twr_v183);
    __twr_v214 = (uint64_t)(&"LINK");
    __twr_v215 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v214, __twr_v206, __twr_v215, __twr_v183);
    __twr_v216 = (uint64_t)(&"DYLINK");
    __twr_v217 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v216, __twr_v206, __twr_v217, __twr_v183);
    __twr_v218 = (uint64_t)(&"PREBUILT");
    __twr_v219 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(__twr_v218, __twr_v206, __twr_v219, __twr_v183);
    __twr_l2:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t _mng_byte223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t _mng_nextbyte268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    _mng_comment220 = 0ULL;
    __twr_l4:;
    __twr_v221 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v222 = ((uint64_t (*)())__twr_v221)();
    _mng_byte223 = __twr_v222;
    if (_mng_byte223) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    goto __twr_l5;
    __twr_l6:;
    if (!(_mng_comment220)) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v224 = 10ULL;
    if (_mng_byte223 == __twr_v224) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    goto __twr_l4;
    __twr_l11:;
    _mng_comment220 = 0ULL;
    goto __twr_l8;
    __twr_l10:;
    __twr_v225 = (uint64_t)(&LexCurrentStream);
    __twr_v226 = *(uint64_t*)(__twr_v225);
    __twr_v227 = 80ULL;
    __twr_v228 = __twr_v226 + __twr_v227;
    __twr_v229 = *(uint8_t*)(__twr_v228);
    if (!(__twr_v229)) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v230 = 0ULL;
    __twr_v231 = (uint64_t)(&LexCurrentStream);
    __twr_v232 = *(uint64_t*)(__twr_v231);
    __twr_v233 = 80ULL;
    __twr_v234 = __twr_v232 + __twr_v233;
    *(uint8_t*)(__twr_v234) = __twr_v230;
    goto __twr_l8;
    __twr_l14:;
    __twr_v235 = 92ULL;
    if (_mng_byte223 != __twr_v235) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v236 = 1ULL;
    __twr_v237 = (uint64_t)(&LexCurrentStream);
    __twr_v238 = *(uint64_t*)(__twr_v237);
    __twr_v239 = 80ULL;
    __twr_v240 = __twr_v238 + __twr_v239;
    *(uint8_t*)(__twr_v240) = __twr_v236;
    goto __twr_l8;
    __twr_l16:;
    __twr_v241 = (uint64_t)(&LexCurrentStream);
    __twr_v242 = *(uint64_t*)(__twr_v241);
    __twr_v243 = 81ULL;
    __twr_v244 = __twr_v242 + __twr_v243;
    __twr_v245 = *(uint8_t*)(__twr_v244);
    if (!(__twr_v245)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v246 = 34ULL;
    __twr_v247 = (_mng_byte223 == __twr_v246);
    __twr_v248 = !__twr_v247;
    __twr_v249 = (uint64_t)(&LexCurrentStream);
    __twr_v250 = *(uint64_t*)(__twr_v249);
    __twr_v251 = 81ULL;
    __twr_v252 = __twr_v250 + __twr_v251;
    *(uint8_t*)(__twr_v252) = __twr_v248;
    goto __twr_l8;
    __twr_l18:;
    __twr_v253 = (uint64_t)(&LexCurrentStream);
    __twr_v254 = *(uint64_t*)(__twr_v253);
    __twr_v255 = 82ULL;
    __twr_v256 = __twr_v254 + __twr_v255;
    __twr_v257 = *(uint8_t*)(__twr_v256);
    if (!(__twr_v257)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v258 = 39ULL;
    __twr_v259 = (_mng_byte223 == __twr_v258);
    __twr_v260 = !__twr_v259;
    __twr_v261 = (uint64_t)(&LexCurrentStream);
    __twr_v262 = *(uint64_t*)(__twr_v261);
    __twr_v263 = 82ULL;
    __twr_v264 = __twr_v262 + __twr_v263;
    *(uint8_t*)(__twr_v264) = __twr_v260;
    goto __twr_l8;
    __twr_l20:;
    __twr_v265 = 47ULL;
    if (_mng_byte223 != __twr_v265) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v266 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v267 = ((uint64_t (*)())__twr_v266)();
    _mng_nextbyte268 = __twr_v267;
    __twr_v269 = 47ULL;
    if (_mng_nextbyte268 != __twr_v269) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    _mng_comment220 = 1ULL;
    goto __twr_l4;
    __twr_l23:;
    __twr_v270 = (uint64_t)(&LexCurrentStream);
    __twr_v271 = *(uint64_t*)(__twr_v270);
    __twr_v272 = 83ULL;
    __twr_v273 = __twr_v271 + __twr_v272;
    *(uint8_t*)(__twr_v273) = _mng_nextbyte268;
    goto __twr_l8;
    __twr_l22:;
    __twr_v274 = 34ULL;
    if (_mng_byte223 != __twr_v274) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v275 = 1ULL;
    __twr_v276 = (uint64_t)(&LexCurrentStream);
    __twr_v277 = *(uint64_t*)(__twr_v276);
    __twr_v278 = 81ULL;
    __twr_v279 = __twr_v277 + __twr_v278;
    *(uint8_t*)(__twr_v279) = __twr_v275;
    goto __twr_l8;
    __twr_l26:;
    __twr_v280 = 39ULL;
    if (_mng_byte223 != __twr_v280) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v281 = 1ULL;
    __twr_v282 = (uint64_t)(&LexCurrentStream);
    __twr_v283 = *(uint64_t*)(__twr_v282);
    __twr_v284 = 82ULL;
    __twr_v285 = __twr_v283 + __twr_v284;
    *(uint8_t*)(__twr_v285) = __twr_v281;
    goto __twr_l8;
    __twr_l28:;
    __twr_v286 = 35ULL;
    if (_mng_byte223 != __twr_v286) { goto __twr_l8; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v287 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v287)();
    _mng_byte223 = 10ULL;
    __twr_l8:;
    __twr_v288 = (uint64_t)(&LexFalseCount);
    __twr_v289 = *(uint32_t*)(__twr_v288);
    if (!(__twr_v289)) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto __twr_l4;
    __twr_l30:;
    goto __twr_l5;
    goto __twr_l4;
    __twr_l5:;
    _jkl_retv = _mng_byte223;
    goto _jkl_epilogue;
    __twr_l3:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token290, uint64_t _mng_terminator291, uint64_t _mng_dynamicbuffer292, uint64_t _mng_buffer293, uint64_t _mng_o_length) {
    uint64_t _mng_len294;
    uint64_t _mng_isbackslash295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t _mng_byte298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t _mng_length320;
    _mng_len294 = 0ULL;
    _mng_isbackslash295 = 0ULL;
    __twr_l33:;
    __twr_v296 = (uint64_t)(&LexGetCharacter);
    __twr_v297 = ((uint64_t (*)())__twr_v296)();
    _mng_byte298 = __twr_v297;
    if (_mng_byte298) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v299 = (uint64_t)(&LexTokenError);
    __twr_v300 = (uint64_t)(&"String token terminated by EOF!");
    __twr_v301 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v299)(_mng_token290, __twr_v300, __twr_v301, __twr_v301, __twr_v301);
    __twr_l35:;
    if (_mng_isbackslash295) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    if (_mng_byte298 != _mng_terminator291) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    goto __twr_l34;
    goto __twr_l40;
    __twr_l42:;
    __twr_v302 = 92ULL;
    if (_mng_byte298 != __twr_v302) { goto __twr_l40; } else { goto __twr_l43; }
    __twr_l43:;
    _mng_isbackslash295 = 1ULL;
    goto __twr_l33;
    __twr_l40:;
    goto __twr_l37;
    __twr_l39:;
    _mng_isbackslash295 = 0ULL;
    __twr_v303 = 110ULL;
    if (_mng_byte298 != __twr_v303) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    _mng_byte298 = 10ULL;
    goto __twr_l44;
    __twr_l46:;
    __twr_v304 = 116ULL;
    if (_mng_byte298 != __twr_v304) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_byte298 = 9ULL;
    goto __twr_l44;
    __twr_l48:;
    __twr_v305 = 114ULL;
    if (_mng_byte298 != __twr_v305) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_byte298 = 13ULL;
    goto __twr_l44;
    __twr_l50:;
    __twr_v306 = 98ULL;
    if (_mng_byte298 != __twr_v306) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_byte298 = 8ULL;
    goto __twr_l44;
    __twr_l52:;
    __twr_v307 = 91ULL;
    if (_mng_byte298 != __twr_v307) { goto __twr_l44; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_byte298 = 27ULL;
    __twr_l44:;
    __twr_l37:;
    if (!(_mng_dynamicbuffer292)) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v308 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v308)(_mng_dynamicbuffer292, _mng_byte298);
    goto __twr_l54;
    __twr_l56:;
    __twr_v309 = 127ULL;
    if (_mng_len294 != __twr_v309) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v310 = (uint64_t)(&LexTokenError);
    __twr_v311 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v312 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v310)(_mng_token290, __twr_v311, __twr_v312, __twr_v312, __twr_v312);
    goto __twr_l54;
    __twr_l58:;
    __twr_v313 = 1ULL;
    __twr_v314 = _mng_buffer293 + _mng_len294;
    *(uint8_t*)(__twr_v314) = _mng_byte298;
    __twr_v315 = _mng_len294 + __twr_v313;
    _mng_len294 = __twr_v315;
    __twr_l54:;
    goto __twr_l33;
    __twr_l34:;
    if (!(_mng_dynamicbuffer292)) { goto __twr_l61; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v316 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v317 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v316)(_mng_dynamicbuffer292, __twr_v317);
    goto __twr_l59;
    __twr_l61:;
    __twr_v318 = 0ULL;
    __twr_v319 = _mng_buffer293 + _mng_len294;
    *(uint8_t*)(__twr_v319) = __twr_v318;
    _mng_length320 = _mng_len294;
    __twr_l59:;
    __twr_l32:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length320;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token321, uint64_t _mng_buffer322) {
    uint64_t _jkl_retv;
    uint64_t _mng_num323;
    uint64_t _mng_i324;
    uint64_t __twr_v325;
    uint64_t _mng_lastnum326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    _mng_num323 = 0ULL;
    _mng_i324 = 0ULL;
    __twr_v325 = *(uint8_t*)(_mng_buffer322);
    if (!(__twr_v325)) { goto __twr_l64; } else { goto __twr_l63; }
    __twr_l63:;
    _mng_lastnum326 = _mng_num323;
    __twr_v327 = 8ULL;
    __twr_v328 = _mng_num323 << __twr_v327;
    _mng_num323 = __twr_v328;
    if (!(_mng_lastnum326)) { goto __twr_l66; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v329 = _mng_num323 / _mng_lastnum326;
    __twr_v330 = 256ULL;
    if (__twr_v329 == __twr_v330) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v331 = (uint64_t)(&LexTokenError);
    __twr_v332 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v333 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v331)(_mng_token321, __twr_v332, __twr_v333, __twr_v333, __twr_v333);
    __twr_l66:;
    __twr_v334 = _mng_buffer322 + _mng_i324;
    __twr_v335 = *(uint8_t*)(__twr_v334);
    __twr_v336 = _mng_num323 + __twr_v335;
    _mng_num323 = __twr_v336;
    if (_mng_num323 >= _mng_lastnum326) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v337 = (uint64_t)(&LexTokenError);
    __twr_v338 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v339 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v337)(_mng_token321, __twr_v338, __twr_v339, __twr_v339, __twr_v339);
    __twr_l69:;
    __twr_v340 = 1ULL;
    __twr_v341 = _mng_i324 + __twr_v340;
    _mng_i324 = __twr_v341;
    __twr_l65:;
    __twr_v342 = _mng_buffer322 + _mng_i324;
    __twr_v343 = *(uint8_t*)(__twr_v342);
    if (__twr_v343) { goto __twr_l63; } else { goto __twr_l64; }
    __twr_l64:;
    _jkl_retv = _mng_num323;
    goto _jkl_epilogue;
    __twr_l62:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token344, uint64_t _mng_buffer345) {
    uint64_t _jkl_retv;
    uint64_t _mng_num346;
    uint64_t _mng_i347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t _mng_lastnum367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t _mng_lastnum430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t _mng_lastnum461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    _mng_num346 = 0ULL;
    _mng_i347 = 0ULL;
    __twr_v348 = *(uint8_t*)(_mng_buffer345);
    __twr_v349 = 48ULL;
    if (__twr_v348 != __twr_v349) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v350 = 1ULL;
    __twr_v351 = _mng_buffer345 + __twr_v350;
    __twr_v352 = *(uint8_t*)(__twr_v351);
    if (__twr_v352) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v353 = 0ULL;
    _jkl_retv = __twr_v353;
    goto _jkl_epilogue;
    __twr_l74:;
    __twr_v354 = 1ULL;
    __twr_v355 = _mng_buffer345 + __twr_v354;
    __twr_v356 = *(uint8_t*)(__twr_v355);
    __twr_v357 = 120ULL;
    if (__twr_v356 != __twr_v357) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v358 = 2ULL;
    __twr_v359 = _mng_buffer345 + __twr_v358;
    __twr_v360 = *(uint8_t*)(__twr_v359);
    if (__twr_v360) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v361 = (uint64_t)(&LexTokenError);
    __twr_v362 = (uint64_t)(&"Unfinished hex number.");
    __twr_v363 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v361)(_mng_token344, __twr_v362, __twr_v363, __twr_v363, __twr_v363);
    __twr_l78:;
    _mng_i347 = 2ULL;
    __twr_v364 = 2ULL;
    __twr_v365 = _mng_buffer345 + __twr_v364;
    __twr_v366 = *(uint8_t*)(__twr_v365);
    if (!(__twr_v366)) { goto __twr_l81; } else { goto __twr_l80; }
    __twr_l80:;
    _mng_lastnum367 = _mng_num346;
    __twr_v368 = 4ULL;
    __twr_v369 = _mng_num346 << __twr_v368;
    _mng_num346 = __twr_v369;
    if (!(_mng_lastnum367)) { goto __twr_l83; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v370 = _mng_num346 / _mng_lastnum367;
    __twr_v371 = 16ULL;
    if (__twr_v370 == __twr_v371) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v372 = (uint64_t)(&LexTokenError);
    __twr_v373 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v374 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v372)(_mng_token344, __twr_v373, __twr_v374, __twr_v374, __twr_v374);
    __twr_l83:;
    __twr_v375 = _mng_buffer345 + _mng_i347;
    __twr_v376 = *(uint8_t*)(__twr_v375);
    __twr_v377 = 48ULL;
    if (__twr_v376 < __twr_v377) { goto __twr_l88; } else { goto __twr_l89; }
    __twr_l89:;
    __twr_v378 = _mng_buffer345 + _mng_i347;
    __twr_v379 = *(uint8_t*)(__twr_v378);
    __twr_v380 = 57ULL;
    if (__twr_v379 > __twr_v380) { goto __twr_l88; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v381 = _mng_buffer345 + _mng_i347;
    __twr_v382 = *(uint8_t*)(__twr_v381);
    __twr_v383 = 48ULL;
    __twr_v384 = __twr_v382 - __twr_v383;
    __twr_v385 = _mng_num346 + __twr_v384;
    _mng_num346 = __twr_v385;
    goto __twr_l86;
    __twr_l88:;
    __twr_v386 = _mng_buffer345 + _mng_i347;
    __twr_v387 = *(uint8_t*)(__twr_v386);
    __twr_v388 = 65ULL;
    if (__twr_v387 < __twr_v388) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v389 = _mng_buffer345 + _mng_i347;
    __twr_v390 = *(uint8_t*)(__twr_v389);
    __twr_v391 = 70ULL;
    if (__twr_v390 > __twr_v391) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    __twr_v392 = _mng_buffer345 + _mng_i347;
    __twr_v393 = *(uint8_t*)(__twr_v392);
    __twr_v394 = 55ULL;
    __twr_v395 = __twr_v393 - __twr_v394;
    __twr_v396 = _mng_num346 + __twr_v395;
    _mng_num346 = __twr_v396;
    goto __twr_l86;
    __twr_l91:;
    __twr_v397 = _mng_buffer345 + _mng_i347;
    __twr_v398 = *(uint8_t*)(__twr_v397);
    __twr_v399 = 97ULL;
    if (__twr_v398 < __twr_v399) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v400 = _mng_buffer345 + _mng_i347;
    __twr_v401 = *(uint8_t*)(__twr_v400);
    __twr_v402 = 102ULL;
    if (__twr_v401 > __twr_v402) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v403 = _mng_buffer345 + _mng_i347;
    __twr_v404 = *(uint8_t*)(__twr_v403);
    __twr_v405 = 87ULL;
    __twr_v406 = __twr_v404 - __twr_v405;
    __twr_v407 = _mng_num346 + __twr_v406;
    _mng_num346 = __twr_v407;
    goto __twr_l86;
    __twr_l94:;
    __twr_v408 = (uint64_t)(&LexTokenError);
    __twr_v409 = (uint64_t)(&"Malformed hex number.");
    __twr_v410 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v408)(_mng_token344, __twr_v409, __twr_v410, __twr_v410, __twr_v410);
    __twr_l86:;
    if (_mng_num346 >= _mng_lastnum367) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v411 = (uint64_t)(&LexTokenError);
    __twr_v412 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v413 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v411)(_mng_token344, __twr_v412, __twr_v413, __twr_v413, __twr_v413);
    __twr_l96:;
    __twr_v414 = 1ULL;
    __twr_v415 = _mng_i347 + __twr_v414;
    _mng_i347 = __twr_v415;
    __twr_l82:;
    __twr_v416 = _mng_buffer345 + _mng_i347;
    __twr_v417 = *(uint8_t*)(__twr_v416);
    if (__twr_v417) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    _jkl_retv = _mng_num346;
    goto _jkl_epilogue;
    __twr_l76:;
    _mng_i347 = 1ULL;
    __twr_v418 = 1ULL;
    __twr_v419 = _mng_buffer345 + __twr_v418;
    __twr_v420 = *(uint8_t*)(__twr_v419);
    if (!(__twr_v420)) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    __twr_v421 = _mng_buffer345 + _mng_i347;
    __twr_v422 = *(uint8_t*)(__twr_v421);
    __twr_v423 = 48ULL;
    if (__twr_v422 < __twr_v423) { goto __twr_l102; } else { goto __twr_l103; }
    __twr_l103:;
    __twr_v424 = _mng_buffer345 + _mng_i347;
    __twr_v425 = *(uint8_t*)(__twr_v424);
    __twr_v426 = 55ULL;
    if (__twr_v425 <= __twr_v426) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v427 = (uint64_t)(&LexTokenError);
    __twr_v428 = (uint64_t)(&"Malformed octal number.");
    __twr_v429 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v427)(_mng_token344, __twr_v428, __twr_v429, __twr_v429, __twr_v429);
    __twr_l101:;
    _mng_lastnum430 = _mng_num346;
    __twr_v431 = 3ULL;
    __twr_v432 = _mng_num346 << __twr_v431;
    _mng_num346 = __twr_v432;
    if (!(_mng_lastnum430)) { goto __twr_l104; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v433 = _mng_num346 / _mng_lastnum430;
    __twr_v434 = 8ULL;
    if (__twr_v433 == __twr_v434) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v435 = (uint64_t)(&LexTokenError);
    __twr_v436 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v437 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v435)(_mng_token344, __twr_v436, __twr_v437, __twr_v437, __twr_v437);
    __twr_l104:;
    __twr_v438 = _mng_buffer345 + _mng_i347;
    __twr_v439 = *(uint8_t*)(__twr_v438);
    __twr_v440 = 48ULL;
    __twr_v441 = __twr_v439 - __twr_v440;
    __twr_v442 = _mng_num346 + __twr_v441;
    _mng_num346 = __twr_v442;
    if (_mng_num346 >= _mng_lastnum430) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v443 = (uint64_t)(&LexTokenError);
    __twr_v444 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v445 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v443)(_mng_token344, __twr_v444, __twr_v445, __twr_v445, __twr_v445);
    __twr_l107:;
    __twr_v446 = 1ULL;
    __twr_v447 = _mng_i347 + __twr_v446;
    _mng_i347 = __twr_v447;
    __twr_l100:;
    __twr_v448 = _mng_buffer345 + _mng_i347;
    __twr_v449 = *(uint8_t*)(__twr_v448);
    if (__twr_v449) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    _jkl_retv = _mng_num346;
    goto _jkl_epilogue;
    __twr_l72:;
    __twr_v450 = _mng_buffer345 + _mng_i347;
    __twr_v451 = *(uint8_t*)(__twr_v450);
    if (!(__twr_v451)) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v452 = _mng_buffer345 + _mng_i347;
    __twr_v453 = *(uint8_t*)(__twr_v452);
    __twr_v454 = 48ULL;
    if (__twr_v453 < __twr_v454) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v455 = _mng_buffer345 + _mng_i347;
    __twr_v456 = *(uint8_t*)(__twr_v455);
    __twr_v457 = 57ULL;
    if (__twr_v456 <= __twr_v457) { goto __twr_l112; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_v458 = (uint64_t)(&LexTokenError);
    __twr_v459 = (uint64_t)(&"Malformed decimal number.");
    __twr_v460 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v458)(_mng_token344, __twr_v459, __twr_v460, __twr_v460, __twr_v460);
    __twr_l112:;
    _mng_lastnum461 = _mng_num346;
    __twr_v462 = 10ULL;
    __twr_v463 = _mng_num346 * __twr_v462;
    _mng_num346 = __twr_v463;
    if (!(_mng_lastnum461)) { goto __twr_l115; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v464 = _mng_num346 / _mng_lastnum461;
    __twr_v465 = 10ULL;
    if (__twr_v464 == __twr_v465) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v466 = (uint64_t)(&LexTokenError);
    __twr_v467 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v468 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v466)(_mng_token344, __twr_v467, __twr_v468, __twr_v468, __twr_v468);
    __twr_l115:;
    __twr_v469 = _mng_buffer345 + _mng_i347;
    __twr_v470 = *(uint8_t*)(__twr_v469);
    __twr_v471 = 48ULL;
    __twr_v472 = __twr_v470 - __twr_v471;
    __twr_v473 = _mng_num346 + __twr_v472;
    _mng_num346 = __twr_v473;
    if (_mng_num346 >= _mng_lastnum461) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v474 = (uint64_t)(&LexTokenError);
    __twr_v475 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v476 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v474)(_mng_token344, __twr_v475, __twr_v476, __twr_v476, __twr_v476);
    __twr_l118:;
    __twr_v477 = 1ULL;
    __twr_v478 = _mng_i347 + __twr_v477;
    _mng_i347 = __twr_v478;
    __twr_l111:;
    __twr_v479 = _mng_buffer345 + _mng_i347;
    __twr_v480 = *(uint8_t*)(__twr_v479);
    if (__twr_v480) { goto __twr_l109; } else { goto __twr_l110; }
    __twr_l110:;
    _jkl_retv = _mng_num346;
    goto _jkl_epilogue;
    __twr_l71:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token481, uint64_t _mng_buffer482, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t _mng_length483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t _mng_stream486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t _mng_byte503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t _mng_internedstring535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t _mng_dynamicbuffer538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t _mng_dumpster543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t _mng_len562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t _mng_uppercaseonly594;
    uint64_t _mng_len595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t _mng_macro634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    __twr_lLoopOnMacro:;
    _mng_length483 = 0ULL;
    __twr_v484 = (uint64_t)(&LexCurrentStream);
    __twr_v485 = *(uint64_t*)(__twr_v484);
    _mng_stream486 = __twr_v485;
    if (!(_mng_stream486)) { goto __twr_l122; } else { goto __twr_l123; }
    __twr_l123:;
    __twr_v487 = 8ULL;
    __twr_v488 = _mng_stream486 + __twr_v487;
    __twr_v489 = *(uint64_t*)(__twr_v488);
    __twr_v490 = _mng_token481 + __twr_v487;
    *(uint64_t*)(__twr_v490) = __twr_v489;
    __twr_v491 = 44ULL;
    __twr_v492 = _mng_stream486 + __twr_v491;
    __twr_v493 = *(uint32_t*)(__twr_v492);
    __twr_v494 = 16ULL;
    __twr_v495 = _mng_token481 + __twr_v494;
    *(uint32_t*)(__twr_v495) = __twr_v493;
    __twr_v496 = 48ULL;
    __twr_v497 = _mng_stream486 + __twr_v496;
    __twr_v498 = *(uint32_t*)(__twr_v497);
    __twr_v499 = 20ULL;
    __twr_v500 = _mng_token481 + __twr_v499;
    *(uint32_t*)(__twr_v500) = __twr_v498;
    __twr_l122:;
    __twr_v501 = (uint64_t)(&LexGetCharacter);
    __twr_v502 = ((uint64_t (*)())__twr_v501)();
    _mng_byte503 = __twr_v502;
    __twr_v504 = (uint64_t)(&LexCharTreatment);
    __twr_v505 = __twr_v504 + _mng_byte503;
    __twr_v506 = *(uint8_t*)(__twr_v505);
    __twr_v507 = 3ULL;
    if (__twr_v506 != __twr_v507) { goto __twr_l125; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v508 = (uint64_t)(&LexCurrentStream);
    __twr_v509 = *(uint64_t*)(__twr_v508);
    _mng_stream486 = __twr_v509;
    if (!(_mng_stream486)) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v510 = 8ULL;
    __twr_v511 = _mng_stream486 + __twr_v510;
    __twr_v512 = *(uint64_t*)(__twr_v511);
    __twr_v513 = _mng_token481 + __twr_v510;
    *(uint64_t*)(__twr_v513) = __twr_v512;
    __twr_v514 = 44ULL;
    __twr_v515 = _mng_stream486 + __twr_v514;
    __twr_v516 = *(uint32_t*)(__twr_v515);
    __twr_v517 = 16ULL;
    __twr_v518 = _mng_token481 + __twr_v517;
    *(uint32_t*)(__twr_v518) = __twr_v516;
    __twr_v519 = 48ULL;
    __twr_v520 = _mng_stream486 + __twr_v519;
    __twr_v521 = *(uint32_t*)(__twr_v520);
    __twr_v522 = 20ULL;
    __twr_v523 = _mng_token481 + __twr_v522;
    *(uint32_t*)(__twr_v523) = __twr_v521;
    __twr_l127:;
    __twr_v524 = (uint64_t)(&LexGetCharacter);
    __twr_v525 = ((uint64_t (*)())__twr_v524)();
    _mng_byte503 = __twr_v525;
    __twr_l126:;
    __twr_v526 = (uint64_t)(&LexCharTreatment);
    __twr_v527 = __twr_v526 + _mng_byte503;
    __twr_v528 = *(uint8_t*)(__twr_v527);
    __twr_v529 = 3ULL;
    if (__twr_v528 == __twr_v529) { goto __twr_l124; } else { goto __twr_l125; }
    __twr_l125:;
    if (_mng_byte503) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v530 = 0ULL;
    _jkl_retv = __twr_v530;
    goto _jkl_epilogue;
    __twr_l129:;
    __twr_v531 = 34ULL;
    if (_mng_byte503 != __twr_v531) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v532 = (uint64_t)(&TlAllocateFromZone);
    __twr_v533 = (uint64_t)(&LexInternedStringZone);
    __twr_v534 = ((uint64_t (*)(uint64_t))__twr_v532)(__twr_v533);
    _mng_internedstring535 = __twr_v534;
    __twr_v536 = 48ULL;
    __twr_v537 = _mng_internedstring535 + __twr_v536;
    _mng_dynamicbuffer538 = __twr_v537;
    __twr_v539 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v539)(_mng_dynamicbuffer538);
    __twr_v540 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v541 = 34ULL;
    __twr_v542 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v540)(_mng_token481, __twr_v541, _mng_dynamicbuffer538, __twr_v542, (uint64_t)(&_mng_dumpster543));
    __twr_v544 = 4ULL;
    _jkl_retv = __twr_v544;
    goto _jkl_epilogue;
    __twr_l131:;
    __twr_v545 = 39ULL;
    if (_mng_byte503 != __twr_v545) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v546 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v547 = 39ULL;
    __twr_v548 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v546)(_mng_token481, __twr_v547, __twr_v548, _mng_buffer482, (uint64_t)(&_mng_length483));
    __twr_v549 = 8ULL;
    _jkl_retv = __twr_v549;
    goto _jkl_epilogue;
    __twr_l133:;
    __twr_v550 = (uint64_t)(&LexCharTreatment);
    __twr_v551 = 1ULL;
    __twr_v552 = __twr_v550 + _mng_byte503;
    __twr_v553 = *(uint8_t*)(__twr_v552);
    if (__twr_v553 != __twr_v551) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    _mng_length483 = 1ULL;
    __twr_v554 = 0ULL;
    __twr_v555 = 1ULL;
    *(uint8_t*)(_mng_buffer482) = _mng_byte503;
    __twr_v556 = 1ULL;
    __twr_v557 = _mng_buffer482 + __twr_v556;
    *(uint8_t*)(__twr_v557) = __twr_v554;
    _jkl_retv = __twr_v555;
    goto _jkl_epilogue;
    __twr_l135:;
    __twr_v558 = (uint64_t)(&LexCharTreatment);
    __twr_v559 = __twr_v558 + _mng_byte503;
    __twr_v560 = *(uint8_t*)(__twr_v559);
    __twr_v561 = 2ULL;
    if (__twr_v560 != __twr_v561) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    _mng_len562 = 0ULL;
    __twr_v563 = (uint64_t)(&LexCharTreatment);
    __twr_v564 = __twr_v563 + _mng_byte503;
    __twr_v565 = *(uint8_t*)(__twr_v564);
    __twr_v566 = 2ULL;
    if (__twr_v565 != __twr_v566) { goto __twr_l140; } else { goto __twr_l139; }
    __twr_l139:;
    __twr_v567 = 127ULL;
    if (_mng_len562 != __twr_v567) { goto __twr_l142; } else { goto __twr_l143; }
    __twr_l143:;
    __twr_v568 = (uint64_t)(&LexTokenError);
    __twr_v569 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v570 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v568)(_mng_token481, __twr_v569, __twr_v570, __twr_v570, __twr_v570);
    __twr_l142:;
    __twr_v571 = 1ULL;
    __twr_v572 = _mng_buffer482 + _mng_len562;
    *(uint8_t*)(__twr_v572) = _mng_byte503;
    __twr_v573 = _mng_len562 + __twr_v571;
    _mng_len562 = __twr_v573;
    __twr_v574 = (uint64_t)(&LexGetCharacter);
    __twr_v575 = ((uint64_t (*)())__twr_v574)();
    _mng_byte503 = __twr_v575;
    __twr_l141:;
    __twr_v576 = (uint64_t)(&LexCharTreatment);
    __twr_v577 = __twr_v576 + _mng_byte503;
    __twr_v578 = *(uint8_t*)(__twr_v577);
    __twr_v579 = 2ULL;
    if (__twr_v578 == __twr_v579) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v580 = 0ULL;
    __twr_v581 = _mng_buffer482 + _mng_len562;
    *(uint8_t*)(__twr_v581) = __twr_v580;
    _mng_length483 = _mng_len562;
    __twr_v582 = (uint64_t)(&LexCharTreatment);
    __twr_v583 = __twr_v582 + _mng_byte503;
    __twr_v584 = *(uint8_t*)(__twr_v583);
    __twr_v585 = 3ULL;
    if (__twr_v584 == __twr_v585) { goto __twr_l144; } else { goto __twr_l145; }
    __twr_l145:;
    __twr_v586 = (uint64_t)(&LexCurrentStream);
    __twr_v587 = *(uint64_t*)(__twr_v586);
    __twr_v588 = 84ULL;
    __twr_v589 = __twr_v587 + __twr_v588;
    *(uint8_t*)(__twr_v589) = _mng_byte503;
    __twr_l144:;
    __twr_v590 = 2ULL;
    _jkl_retv = __twr_v590;
    goto _jkl_epilogue;
    __twr_l137:;
    __twr_v591 = 65ULL;
    if (_mng_byte503 < __twr_v591) { goto __twr_l148; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v592 = 90ULL;
    if (_mng_byte503 > __twr_v592) { goto __twr_l148; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v593 = 1ULL;
    goto __twr_l149;
    __twr_l148:;
    __twr_v593 = 0ULL;
    __twr_l149:;
    _mng_uppercaseonly594 = __twr_v593;
    _mng_len595 = 0ULL;
    __twr_v596 = (uint64_t)(&LexCharTreatment);
    __twr_v597 = __twr_v596 + _mng_byte503;
    __twr_v598 = *(uint8_t*)(__twr_v597);
    if (__twr_v598) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v599 = 127ULL;
    if (_mng_len595 != __twr_v599) { goto __twr_l153; } else { goto __twr_l154; }
    __twr_l154:;
    __twr_v600 = (uint64_t)(&LexTokenError);
    __twr_v601 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v602 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v600)(_mng_token481, __twr_v601, __twr_v602, __twr_v602, __twr_v602);
    __twr_l153:;
    if (!(_mng_uppercaseonly594)) { goto __twr_l155; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v603 = 65ULL;
    if (_mng_byte503 < __twr_v603) { goto __twr_l159; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v604 = 90ULL;
    if (_mng_byte503 > __twr_v604) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v605 = 1ULL;
    goto __twr_l160;
    __twr_l159:;
    __twr_v605 = 0ULL;
    __twr_l160:;
    _mng_uppercaseonly594 = __twr_v605;
    __twr_l155:;
    __twr_v606 = 1ULL;
    __twr_v607 = _mng_buffer482 + _mng_len595;
    *(uint8_t*)(__twr_v607) = _mng_byte503;
    __twr_v608 = _mng_len595 + __twr_v606;
    _mng_len595 = __twr_v608;
    __twr_v609 = (uint64_t)(&LexGetCharacter);
    __twr_v610 = ((uint64_t (*)())__twr_v609)();
    _mng_byte503 = __twr_v610;
    __twr_l152:;
    __twr_v611 = (uint64_t)(&LexCharTreatment);
    __twr_v612 = __twr_v611 + _mng_byte503;
    __twr_v613 = *(uint8_t*)(__twr_v612);
    if (!(__twr_v613)) { goto __twr_l150; } else { goto __twr_l151; }
    __twr_l151:;
    __twr_v614 = 0ULL;
    __twr_v615 = _mng_buffer482 + _mng_len595;
    *(uint8_t*)(__twr_v615) = __twr_v614;
    _mng_length483 = _mng_len595;
    __twr_v616 = (uint64_t)(&LexCharTreatment);
    __twr_v617 = 1ULL;
    __twr_v618 = __twr_v616 + _mng_byte503;
    __twr_v619 = *(uint8_t*)(__twr_v618);
    if (__twr_v619 == __twr_v617) { goto __twr_l162; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v620 = (uint64_t)(&LexCharTreatment);
    __twr_v621 = __twr_v620 + _mng_byte503;
    __twr_v622 = *(uint8_t*)(__twr_v621);
    __twr_v623 = 2ULL;
    if (__twr_v622 != __twr_v623) { goto __twr_l161; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v624 = (uint64_t)(&LexCurrentStream);
    __twr_v625 = *(uint64_t*)(__twr_v624);
    __twr_v626 = 84ULL;
    __twr_v627 = __twr_v625 + __twr_v626;
    *(uint8_t*)(__twr_v627) = _mng_byte503;
    __twr_l161:;
    if (!(_mng_uppercaseonly594)) { goto __twr_l164; } else { goto __twr_l166; }
    __twr_l166:;
    __twr_v628 = 1ULL;
    if (_mng_len595 <= __twr_v628) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v629 = 16ULL;
    _jkl_retv = __twr_v629;
    goto _jkl_epilogue;
    __twr_l164:;
    __twr_v630 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v631 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v632 = *(uint64_t*)(__twr_v631);
    __twr_v633 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v630)(__twr_v632, _mng_buffer482);
    _mng_macro634 = __twr_v633;
    if (_mng_macro634) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v635 = 0ULL;
    _jkl_retv = __twr_v635;
    goto _jkl_epilogue;
    __twr_l167:;
    __twr_v636 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v636)(_mng_macro634, _mng_token481);
    goto __twr_lLoopOnMacro;
    __twr_l120:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length483;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring535;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token637) {
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t _mng_buffer640[16];
    uint64_t __twr_v641;
    uint64_t _mng_length642;
    uint64_t _mng_internedstring643;
    uint64_t _mng_tokenflag644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t _mng_keyword651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    __twr_v638 = (uint64_t)(&LexGetTokenContents);
    __twr_v639 = (uint64_t)(&_mng_buffer640);
    __twr_v641 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v638)(_mng_token637, __twr_v639, (uint64_t)(&_mng_length642), (uint64_t)(&_mng_internedstring643));
    _mng_tokenflag644 = __twr_v641;
    __twr_v645 = 19ULL;
    __twr_v646 = _mng_tokenflag644 & __twr_v645;
    if (!(__twr_v646)) { goto __twr_l170; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v647 = (uint64_t)(&TlLookupHashTable);
    __twr_v648 = (uint64_t)(&LexKeywordHashTable);
    __twr_v649 = (uint64_t)(&_mng_buffer640);
    __twr_v650 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v647)(__twr_v648, __twr_v649);
    _mng_keyword651 = __twr_v650;
    if (_mng_keyword651) { goto __twr_l172; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v652 = 16ULL;
    __twr_v653 = _mng_tokenflag644 & __twr_v652;
    if (!(__twr_v653)) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    __twr_v654 = (uint64_t)(&LexTokenError);
    __twr_v655 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).");
    __twr_v656 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v654)(_mng_token637, __twr_v655, __twr_v656, __twr_v656, __twr_v656);
    __twr_l174:;
    __twr_v657 = (uint64_t)(&LexTokenError);
    __twr_v658 = (uint64_t)(&"Unknown keyword");
    __twr_v659 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v657)(_mng_token637, __twr_v658, __twr_v659, __twr_v659, __twr_v659);
    __twr_l172:;
    __twr_v660 = 48ULL;
    __twr_v661 = _mng_keyword651 + __twr_v660;
    __twr_v662 = *(uint8_t*)(__twr_v661);
    __twr_v663 = 24ULL;
    __twr_v664 = _mng_token637 + __twr_v663;
    *(uint8_t*)(__twr_v664) = __twr_v662;
    __twr_v665 = 49ULL;
    __twr_v666 = _mng_keyword651 + __twr_v665;
    __twr_v667 = *(uint8_t*)(__twr_v666);
    __twr_v668 = 25ULL;
    __twr_v669 = _mng_token637 + __twr_v668;
    *(uint8_t*)(__twr_v669) = __twr_v667;
    __twr_v670 = 50ULL;
    __twr_v671 = _mng_keyword651 + __twr_v670;
    __twr_v672 = *(uint8_t*)(__twr_v671);
    __twr_v673 = 26ULL;
    __twr_v674 = _mng_token637 + __twr_v673;
    *(uint8_t*)(__twr_v674) = __twr_v672;
    goto _jkl_epilogue;
    __twr_l170:;
    __twr_v675 = 8ULL;
    __twr_v676 = _mng_tokenflag644 & __twr_v675;
    if (!(__twr_v676)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v677 = 5ULL;
    __twr_v678 = 24ULL;
    __twr_v679 = _mng_token637 + __twr_v678;
    *(uint8_t*)(__twr_v679) = __twr_v677;
    __twr_v680 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v681 = (uint64_t)(&_mng_buffer640);
    __twr_v682 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v680)(_mng_token637, __twr_v681);
    *(uint64_t*)(_mng_token637) = __twr_v682;
    goto _jkl_epilogue;
    __twr_l176:;
    __twr_v683 = 4ULL;
    __twr_v684 = _mng_tokenflag644 & __twr_v683;
    if (!(__twr_v684)) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v685 = 4ULL;
    __twr_v686 = 24ULL;
    __twr_v687 = _mng_token637 + __twr_v686;
    *(uint8_t*)(__twr_v687) = __twr_v685;
    *(uint64_t*)(_mng_token637) = _mng_internedstring643;
    goto _jkl_epilogue;
    __twr_l178:;
    __twr_v688 = 32ULL;
    __twr_v689 = _mng_tokenflag644 & __twr_v688;
    if (!(__twr_v689)) { goto __twr_l180; } else { goto __twr_l181; }
    __twr_l181:;
    __twr_v690 = 6ULL;
    __twr_v691 = 24ULL;
    __twr_v692 = _mng_token637 + __twr_v691;
    *(uint8_t*)(__twr_v692) = __twr_v690;
    goto _jkl_epilogue;
    __twr_l180:;
    if (_mng_length642) { goto __twr_l182; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v693 = 6ULL;
    __twr_v694 = 24ULL;
    __twr_v695 = _mng_token637 + __twr_v694;
    *(uint8_t*)(__twr_v695) = __twr_v693;
    goto _jkl_epilogue;
    __twr_l182:;
    __twr_v696 = (uint64_t)(&_mng_buffer640);
    __twr_v697 = *(uint8_t*)(__twr_v696);
    __twr_v698 = 48ULL;
    if (__twr_v697 < __twr_v698) { goto __twr_l184; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v699 = (uint64_t)(&_mng_buffer640);
    __twr_v700 = *(uint8_t*)(__twr_v699);
    __twr_v701 = 57ULL;
    if (__twr_v700 > __twr_v701) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v702 = 5ULL;
    __twr_v703 = 24ULL;
    __twr_v704 = _mng_token637 + __twr_v703;
    *(uint8_t*)(__twr_v704) = __twr_v702;
    __twr_v705 = (uint64_t)(&LexCrunchNumber);
    __twr_v706 = (uint64_t)(&_mng_buffer640);
    __twr_v707 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v705)(_mng_token637, __twr_v706);
    *(uint64_t*)(_mng_token637) = __twr_v707;
    goto _jkl_epilogue;
    __twr_l184:;
    __twr_v708 = (uint64_t)(&LexTokenError);
    __twr_v709 = (uint64_t)(&"Unknown token");
    __twr_v710 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v708)(_mng_token637, __twr_v709, __twr_v710, __twr_v710, __twr_v710);
    __twr_l169:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest711, uint64_t _mng_src712) {
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    __twr_v713 = *(uint64_t*)(_mng_src712);
    *(uint64_t*)(_mng_dest711) = __twr_v713;
    __twr_v714 = 8ULL;
    __twr_v715 = _mng_src712 + __twr_v714;
    __twr_v716 = *(uint64_t*)(__twr_v715);
    __twr_v717 = _mng_dest711 + __twr_v714;
    *(uint64_t*)(__twr_v717) = __twr_v716;
    __twr_v718 = 16ULL;
    __twr_v719 = _mng_src712 + __twr_v718;
    __twr_v720 = *(uint32_t*)(__twr_v719);
    __twr_v721 = _mng_dest711 + __twr_v718;
    *(uint32_t*)(__twr_v721) = __twr_v720;
    __twr_v722 = 20ULL;
    __twr_v723 = _mng_src712 + __twr_v722;
    __twr_v724 = *(uint32_t*)(__twr_v723);
    __twr_v725 = _mng_dest711 + __twr_v722;
    *(uint32_t*)(__twr_v725) = __twr_v724;
    __twr_v726 = 24ULL;
    __twr_v727 = _mng_src712 + __twr_v726;
    __twr_v728 = *(uint8_t*)(__twr_v727);
    __twr_v729 = _mng_dest711 + __twr_v726;
    *(uint8_t*)(__twr_v729) = __twr_v728;
    __twr_v730 = 25ULL;
    __twr_v731 = _mng_src712 + __twr_v730;
    __twr_v732 = *(uint8_t*)(__twr_v731);
    __twr_v733 = _mng_dest711 + __twr_v730;
    *(uint8_t*)(__twr_v733) = __twr_v732;
    __twr_v734 = 26ULL;
    __twr_v735 = _mng_src712 + __twr_v734;
    __twr_v736 = *(uint8_t*)(__twr_v735);
    __twr_v737 = _mng_dest711 + __twr_v734;
    *(uint8_t*)(__twr_v737) = __twr_v736;
    __twr_l187:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token738) {
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t _mng_index741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    __twr_v739 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v740 = *(uint32_t*)(__twr_v739);
    _mng_index741 = __twr_v740;
    if (!(_mng_index741)) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v742 = (uint64_t)(&LexCopyToken);
    __twr_v743 = (uint64_t)(&LexPutbackStack);
    __twr_v744 = 1ULL;
    __twr_v745 = _mng_index741 - __twr_v744;
    __twr_v746 = 5ULL;
    __twr_v747 = __twr_v745 << __twr_v746;
    __twr_v748 = __twr_v743 + __twr_v747;
    ((void (*)(uint64_t, uint64_t))__twr_v742)(_mng_token738, __twr_v748);
    __twr_v749 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v749) = __twr_v745;
    goto _jkl_epilogue;
    __twr_l189:;
    __twr_v750 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v750)(_mng_token738);
    __twr_l188:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token751) {
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t _mng_index754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    __twr_v752 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v753 = *(uint32_t*)(__twr_v752);
    _mng_index754 = __twr_v753;
    __twr_v755 = 256ULL;
    if (_mng_index754 != __twr_v755) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v756 = (uint64_t)(&TlInternalError);
    __twr_v757 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v758 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v756)(__twr_v757, __twr_v758, __twr_v758, __twr_v758);
    __twr_l192:;
    __twr_v759 = (uint64_t)(&LexCopyToken);
    __twr_v760 = (uint64_t)(&LexPutbackStack);
    __twr_v761 = 5ULL;
    __twr_v762 = _mng_index754 << __twr_v761;
    __twr_v763 = __twr_v760 + __twr_v762;
    ((void (*)(uint64_t, uint64_t))__twr_v759)(__twr_v763, _mng_token751);
    __twr_v764 = 1ULL;
    __twr_v765 = _mng_index754 + __twr_v764;
    __twr_v766 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v766) = __twr_v765;
    __twr_l191:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token767, uint64_t _mng_type768, uint64_t _mng_subtype769) {
    uint64_t _jkl_retv;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t _mng_index772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t _mng_matchtoken783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    __twr_v770 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v771 = *(uint32_t*)(__twr_v770);
    _mng_index772 = __twr_v771;
    if (_mng_index772) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    __twr_v773 = (uint64_t)(&LexNextToken);
    __twr_v774 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v773)(__twr_v774);
    __twr_v775 = 1ULL;
    __twr_v776 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v776) = __twr_v775;
    _mng_index772 = 1ULL;
    __twr_l195:;
    __twr_v777 = (uint64_t)(&LexPutbackStack);
    __twr_v778 = 1ULL;
    __twr_v779 = _mng_index772 - __twr_v778;
    __twr_v780 = 5ULL;
    __twr_v781 = __twr_v779 << __twr_v780;
    __twr_v782 = __twr_v777 + __twr_v781;
    _mng_matchtoken783 = __twr_v782;
    if (!(_mng_token767)) { goto __twr_l197; } else { goto __twr_l198; }
    __twr_l198:;
    __twr_v784 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v784)(_mng_token767, _mng_matchtoken783);
    __twr_l197:;
    __twr_v785 = 24ULL;
    __twr_v786 = _mng_matchtoken783 + __twr_v785;
    __twr_v787 = *(uint8_t*)(__twr_v786);
    if (__twr_v787 == _mng_type768) { goto __twr_l199; } else { goto __twr_l200; }
    __twr_l200:;
    __twr_v788 = 24ULL;
    __twr_v789 = _mng_matchtoken783 + __twr_v788;
    __twr_v790 = *(uint8_t*)(__twr_v789);
    __twr_v791 = 6ULL;
    if (__twr_v790 != __twr_v791) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v792 = 1ULL;
    __twr_v793 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v794 = *(uint32_t*)(__twr_v793);
    __twr_v795 = __twr_v794 - __twr_v792;
    *(uint32_t*)(__twr_v793) = __twr_v795;
    __twr_l201:;
    __twr_v796 = 0ULL;
    _jkl_retv = __twr_v796;
    goto _jkl_epilogue;
    __twr_l199:;
    if (!(_mng_subtype769)) { goto __twr_l204; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v797 = 25ULL;
    __twr_v798 = _mng_matchtoken783 + __twr_v797;
    __twr_v799 = *(uint8_t*)(__twr_v798);
    if (__twr_v799 != _mng_subtype769) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v800 = 1ULL;
    __twr_v801 = _mng_index772 - __twr_v800;
    __twr_v802 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v802) = __twr_v801;
    _jkl_retv = __twr_v800;
    goto _jkl_epilogue;
    __twr_l203:;
    __twr_v803 = 0ULL;
    _jkl_retv = __twr_v803;
    goto _jkl_epilogue;
    __twr_l194:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg161);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename162, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock163, uint64_t _mng_filepath164);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope165);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg166);
extern void LexExpandMacro(uint64_t _mng_macro167, uint64_t _mng_token168);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream169, uint64_t _mng_macro170);
extern void LexUninitializeStream(uint64_t _mng_stream171);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream172);
extern void LexPushStream(uint64_t _mng_stream173);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream174, uint64_t _mng_fileblock175, uint64_t _mng_handle176);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock177, uint64_t _mng_handle178);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest179, uint64_t _mng_src180);
extern void LexGetToken(uint64_t _mng_token181);
extern void LexPutbackToken(uint64_t _mng_token182);
extern uint64_t LexMatchToken(uint64_t _mng_token183, uint64_t _mng_type184, uint64_t _mng_subtype185);
extern void LexStreamError(uint64_t _mng_str186, uint64_t _mng_err1187, uint64_t _mng_err2188, uint64_t _mng_err3189);
extern void LexTokenError(uint64_t _mng_token190, uint64_t _mng_str191, uint64_t _mng_err1192, uint64_t _mng_err2193, uint64_t _mng_err3194);
extern uint64_t LexCrunchNumber(uint64_t _mng_token195, uint64_t _mng_buffer196);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath197);
uint64_t BtTargetHashTable[196];
uint64_t BtCurrentTarget;
uint64_t BtCHost = 0ULL;
uint64_t BtArchHasSuffix = 0ULL;
uint64_t BtCleanUp = 0ULL;
uint64_t BtVerbose = 0ULL;
uint64_t BtTargetArchitectureName[8];
uint64_t BtSdkBase[32];
uint64_t BtArchNameSuffix[32];
extern uint64_t FeTargetName[32];
uint64_t BtSelectedTarget;
void BtParseStandardPath(uint64_t _mng_stdpath198, uint64_t _mng_fullpath199, uint64_t _mng_errtoken200) {
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t _mng_stdpathstr204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t _mng_count215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t _mng_macro235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t _mng_macro266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    __twr_v201 = 16ULL;
    __twr_v202 = _mng_stdpath198 + __twr_v201;
    __twr_v203 = *(uint64_t*)(__twr_v202);
    _mng_stdpathstr204 = __twr_v203;
    __twr_v205 = *(uint8_t*)(_mng_stdpathstr204);
    if (__twr_v205) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v206 = (uint64_t)(&LexTokenError);
    __twr_v207 = (uint64_t)(&"Empty path string");
    __twr_v208 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v206)(_mng_errtoken200, __twr_v207, __twr_v208, __twr_v208, __twr_v208);
    __twr_l2:;
    __twr_v209 = *(uint8_t*)(_mng_stdpathstr204);
    __twr_v210 = 47ULL;
    if (__twr_v209 != __twr_v210) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v211 = (uint64_t)(&LexTokenError);
    __twr_v212 = (uint64_t)(&"Expected a relative path, found an absolute path");
    __twr_v213 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v211)(_mng_errtoken200, __twr_v212, __twr_v213, __twr_v213, __twr_v213);
    __twr_l4:;
    __twr_v214 = *(uint64_t*)(_mng_stdpath198);
    _mng_count215 = __twr_v214;
    __twr_v216 = *(uint8_t*)(_mng_stdpathstr204);
    __twr_v217 = 60ULL;
    if (__twr_v216 == __twr_v217) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v218 = (uint64_t)(&TlCopyParentPath);
    __twr_v219 = (uint64_t)(&LexCurrentStream);
    __twr_v220 = *(uint64_t*)(__twr_v219);
    __twr_v221 = 8ULL;
    __twr_v222 = __twr_v220 + __twr_v221;
    __twr_v223 = *(uint64_t*)(__twr_v222);
    __twr_v224 = 48ULL;
    __twr_v225 = __twr_v223 + __twr_v224;
    ((void (*)(uint64_t, uint64_t))__twr_v218)(__twr_v225, _mng_fullpath199);
    goto __twr_l6;
    __twr_l8:;
    __twr_v226 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v227 = (uint64_t)(&"<sdk>/");
    __twr_v228 = 5ULL;
    __twr_v229 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v226)(_mng_stdpathstr204, __twr_v227, __twr_v228);
    if (__twr_v229) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v230 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v231 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v232 = *(uint64_t*)(__twr_v231);
    __twr_v233 = (uint64_t)(&"SDK_BASE");
    __twr_v234 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v230)(__twr_v232, __twr_v233);
    _mng_macro235 = __twr_v234;
    if (_mng_macro235) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v236 = (uint64_t)(&LexTokenError);
    __twr_v237 = (uint64_t)(&"SDK_BASE isn't defined");
    __twr_v238 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v236)(_mng_errtoken200, __twr_v237, __twr_v238, __twr_v238, __twr_v238);
    __twr_l11:;
    __twr_v239 = 264ULL;
    __twr_v240 = _mng_macro235 + __twr_v239;
    __twr_v241 = *(uint8_t*)(__twr_v240);
    if (!(__twr_v241)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v242 = (uint64_t)(&LexTokenError);
    __twr_v243 = (uint64_t)(&"SDK_BASE is a function macro for some reason");
    __twr_v244 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v242)(_mng_errtoken200, __twr_v243, __twr_v244, __twr_v244, __twr_v244);
    __twr_l13:;
    __twr_v245 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v246 = 80ULL;
    __twr_v247 = _mng_macro235 + __twr_v246;
    __twr_v248 = 96ULL;
    __twr_v249 = _mng_macro235 + __twr_v248;
    __twr_v250 = *(uint64_t*)(__twr_v249);
    __twr_v251 = 1ULL;
    __twr_v252 = *(uint64_t*)(__twr_v247);
    __twr_v253 = __twr_v252 - __twr_v251;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v245)(_mng_fullpath199, __twr_v250, __twr_v253);
    __twr_v254 = 6ULL;
    __twr_v255 = _mng_stdpathstr204 + __twr_v254;
    _mng_stdpathstr204 = __twr_v255;
    __twr_v256 = _mng_count215 - __twr_v254;
    _mng_count215 = __twr_v256;
    goto __twr_l6;
    __twr_l10:;
    __twr_v257 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v258 = (uint64_t)(&"<bld>/");
    __twr_v259 = 5ULL;
    __twr_v260 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v257)(_mng_stdpathstr204, __twr_v258, __twr_v259);
    if (__twr_v260) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v261 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v262 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v263 = *(uint64_t*)(__twr_v262);
    __twr_v264 = (uint64_t)(&"BUILD_BASE");
    __twr_v265 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v261)(__twr_v263, __twr_v264);
    _mng_macro266 = __twr_v265;
    if (_mng_macro266) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v267 = (uint64_t)(&LexTokenError);
    __twr_v268 = (uint64_t)(&"BUILD_BASE isn't defined");
    __twr_v269 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v267)(_mng_errtoken200, __twr_v268, __twr_v269, __twr_v269, __twr_v269);
    __twr_l17:;
    __twr_v270 = 264ULL;
    __twr_v271 = _mng_macro266 + __twr_v270;
    __twr_v272 = *(uint8_t*)(__twr_v271);
    if (!(__twr_v272)) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v273 = (uint64_t)(&LexTokenError);
    __twr_v274 = (uint64_t)(&"BUILD_BASE is a function macro for some reason");
    __twr_v275 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v273)(_mng_errtoken200, __twr_v274, __twr_v275, __twr_v275, __twr_v275);
    __twr_l19:;
    __twr_v276 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v277 = 80ULL;
    __twr_v278 = _mng_macro266 + __twr_v277;
    __twr_v279 = 96ULL;
    __twr_v280 = _mng_macro266 + __twr_v279;
    __twr_v281 = *(uint64_t*)(__twr_v280);
    __twr_v282 = 1ULL;
    __twr_v283 = *(uint64_t*)(__twr_v278);
    __twr_v284 = __twr_v283 - __twr_v282;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v276)(_mng_fullpath199, __twr_v281, __twr_v284);
    __twr_v285 = 6ULL;
    __twr_v286 = _mng_stdpathstr204 + __twr_v285;
    _mng_stdpathstr204 = __twr_v286;
    __twr_v287 = _mng_count215 - __twr_v285;
    _mng_count215 = __twr_v287;
    goto __twr_l6;
    __twr_l16:;
    __twr_v288 = (uint64_t)(&LexTokenError);
    __twr_v289 = (uint64_t)(&"Unknown path prefix");
    __twr_v290 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v288)(_mng_errtoken200, __twr_v289, __twr_v290, __twr_v290, __twr_v290);
    __twr_l6:;
    __twr_v291 = *(uint64_t*)(_mng_fullpath199);
    if (__twr_v291) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v292 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v293 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v292)(_mng_fullpath199, __twr_v293);
    __twr_v294 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v292)(_mng_fullpath199, __twr_v294);
    goto __twr_l21;
    __twr_l23:;
    __twr_v295 = 16ULL;
    __twr_v296 = _mng_fullpath199 + __twr_v295;
    __twr_v297 = *(uint64_t*)(__twr_v296);
    __twr_v298 = *(uint64_t*)(_mng_fullpath199);
    __twr_v299 = 1ULL;
    __twr_v300 = __twr_v298 - __twr_v299;
    __twr_v301 = __twr_v297 + __twr_v300;
    __twr_v302 = *(uint8_t*)(__twr_v301);
    __twr_v303 = 47ULL;
    if (__twr_v302 == __twr_v303) { goto __twr_l21; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v304 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v305 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v304)(_mng_fullpath199, __twr_v305);
    __twr_l21:;
    __twr_v306 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v306)(_mng_fullpath199, _mng_stdpathstr204, _mng_count215);
    __twr_l1:;
    _jkl_epilogue:;
}
void BtTargetInfoFile() {
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t _mng_token309[4];
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t _mng_string319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    __twr_v307 = (uint64_t)(&LexMatchToken);
    __twr_v308 = (uint64_t)(&_mng_token309);
    __twr_v310 = 4ULL;
    __twr_v311 = 0ULL;
    __twr_v312 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v307)(__twr_v308, __twr_v310, __twr_v311);
    if (__twr_v312) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v313 = (uint64_t)(&LexTokenError);
    __twr_v314 = (uint64_t)(&_mng_token309);
    __twr_v315 = (uint64_t)(&"Expected a string");
    __twr_v316 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v313)(__twr_v314, __twr_v315, __twr_v316, __twr_v316, __twr_v316);
    __twr_l26:;
    __twr_v317 = (uint64_t)(&_mng_token309);
    __twr_v318 = *(uint64_t*)(__twr_v317);
    _mng_string319 = __twr_v318;
    __twr_v320 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v321 = (uint64_t)(&BtCurrentTarget);
    __twr_v322 = *(uint64_t*)(__twr_v321);
    __twr_v323 = 608ULL;
    __twr_v324 = __twr_v322 + __twr_v323;
    ((void (*)(uint64_t))__twr_v320)(__twr_v324);
    __twr_v325 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v326 = *(uint64_t*)(__twr_v321);
    __twr_v327 = __twr_v326 + __twr_v323;
    ((void (*)(uint64_t))__twr_v325)(__twr_v327);
    __twr_v328 = (uint64_t)(&BtParseStandardPath);
    __twr_v329 = 48ULL;
    __twr_v330 = _mng_string319 + __twr_v329;
    __twr_v331 = *(uint64_t*)(__twr_v321);
    __twr_v332 = __twr_v331 + __twr_v323;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v328)(__twr_v330, __twr_v332, __twr_v317);
    __twr_v333 = 1ULL;
    __twr_v334 = *(uint64_t*)(__twr_v321);
    __twr_v335 = 825ULL;
    __twr_v336 = __twr_v334 + __twr_v335;
    *(uint8_t*)(__twr_v336) = __twr_v333;
    __twr_l25:;
    _jkl_epilogue:;
}
void BtTargetInfoDepend() {
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t _mng_token339[4];
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t _mng_string349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_target356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t _mng_head365;
    uint64_t __twr_v366;
    uint64_t _mng_listentry367;
    uint64_t _mng_entry368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t _mng_entry376;
    uint64_t _mng_status377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t _mng_listhead387;
    uint64_t _mng_listentry388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t _mng_last392;
    uint64_t __twr_v393;
    __twr_v337 = (uint64_t)(&LexMatchToken);
    __twr_v338 = (uint64_t)(&_mng_token339);
    __twr_v340 = 4ULL;
    __twr_v341 = 0ULL;
    __twr_v342 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v337)(__twr_v338, __twr_v340, __twr_v341);
    if (__twr_v342) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v343 = (uint64_t)(&LexTokenError);
    __twr_v344 = (uint64_t)(&_mng_token339);
    __twr_v345 = (uint64_t)(&"Expected a string");
    __twr_v346 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v343)(__twr_v344, __twr_v345, __twr_v346, __twr_v346, __twr_v346);
    __twr_l29:;
    __twr_v347 = (uint64_t)(&_mng_token339);
    __twr_v348 = *(uint64_t*)(__twr_v347);
    _mng_string349 = __twr_v348;
    __twr_v350 = (uint64_t)(&TlLookupHashTable);
    __twr_v351 = (uint64_t)(&BtTargetHashTable);
    __twr_v352 = 64ULL;
    __twr_v353 = _mng_string349 + __twr_v352;
    __twr_v354 = *(uint64_t*)(__twr_v353);
    __twr_v355 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v350)(__twr_v351, __twr_v354);
    _mng_target356 = __twr_v355;
    if (_mng_target356) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v357 = (uint64_t)(&LexTokenError);
    __twr_v358 = (uint64_t)(&_mng_token339);
    __twr_v359 = (uint64_t)(&"Target not defined");
    __twr_v360 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v357)(__twr_v358, __twr_v359, __twr_v360, __twr_v360, __twr_v360);
    __twr_l31:;
    __twr_v361 = (uint64_t)(&BtCurrentTarget);
    __twr_v362 = *(uint64_t*)(__twr_v361);
    __twr_v363 = 576ULL;
    __twr_v364 = __twr_v362 + __twr_v363;
    _mng_head365 = __twr_v364;
    __twr_v366 = *(uint64_t*)(_mng_head365);
    _mng_listentry367 = __twr_v366;
    if (_mng_head365 == _mng_listentry367) { goto __twr_l34; } else { goto __twr_l33; }
    __twr_l33:;
    _mng_entry368 = _mng_listentry367;
    __twr_v369 = 16ULL;
    __twr_v370 = _mng_entry368 + __twr_v369;
    __twr_v371 = *(uint64_t*)(__twr_v370);
    if (__twr_v371 != _mng_target356) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    goto _jkl_epilogue;
    __twr_l36:;
    __twr_v372 = *(uint64_t*)(_mng_listentry367);
    _mng_listentry367 = __twr_v372;
    __twr_l35:;
    if (_mng_head365 != _mng_listentry367) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    __twr_v373 = (uint64_t)(&TlBumpAlloc);
    __twr_v374 = 24ULL;
    __twr_v375 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v373)(__twr_v374, (uint64_t)(&_mng_entry376));
    _mng_status377 = __twr_v375;
    if (!(_mng_status377)) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v378 = (uint64_t)(&TlInternalError);
    __twr_v379 = (uint64_t)(&"Failed to allocate depends list entry");
    __twr_v380 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v378)(__twr_v379, __twr_v380, __twr_v380, __twr_v380);
    __twr_l38:;
    __twr_v381 = 16ULL;
    __twr_v382 = _mng_entry376 + __twr_v381;
    *(uint64_t*)(__twr_v382) = _mng_target356;
    __twr_v383 = (uint64_t)(&BtCurrentTarget);
    __twr_v384 = *(uint64_t*)(__twr_v383);
    __twr_v385 = 576ULL;
    __twr_v386 = __twr_v384 + __twr_v385;
    _mng_listhead387 = __twr_v386;
    _mng_listentry388 = _mng_entry376;
    __twr_v389 = 8ULL;
    __twr_v390 = _mng_listhead387 + __twr_v389;
    __twr_v391 = *(uint64_t*)(__twr_v390);
    _mng_last392 = __twr_v391;
    __twr_v393 = _mng_listentry388 + __twr_v389;
    *(uint64_t*)(__twr_v393) = _mng_last392;
    *(uint64_t*)(_mng_listentry388) = _mng_listhead387;
    *(uint64_t*)(_mng_last392) = _mng_listentry388;
    *(uint64_t*)(__twr_v390) = _mng_listentry388;
    __twr_l28:;
    _jkl_epilogue:;
}
void BtTargetInfoSources() {
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t _mng_token396[4];
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t _mng_string406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t _mng_entry410;
    uint64_t _mng_status411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t _mng_filepath420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t _mng_listhead438;
    uint64_t _mng_listentry439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t _mng_last443;
    uint64_t __twr_v444;
    __twr_v394 = (uint64_t)(&LexMatchToken);
    __twr_v395 = (uint64_t)(&_mng_token396);
    __twr_v397 = 4ULL;
    __twr_v398 = 0ULL;
    __twr_v399 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v394)(__twr_v395, __twr_v397, __twr_v398);
    if (__twr_v399) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v400 = (uint64_t)(&LexTokenError);
    __twr_v401 = (uint64_t)(&_mng_token396);
    __twr_v402 = (uint64_t)(&"Expected a string");
    __twr_v403 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v400)(__twr_v401, __twr_v402, __twr_v403, __twr_v403, __twr_v403);
    __twr_l41:;
    __twr_v404 = (uint64_t)(&_mng_token396);
    __twr_v405 = *(uint64_t*)(__twr_v404);
    _mng_string406 = __twr_v405;
    __twr_v407 = (uint64_t)(&TlBumpAlloc);
    __twr_v408 = 105ULL;
    __twr_v409 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v407)(__twr_v408, (uint64_t)(&_mng_entry410));
    _mng_status411 = __twr_v409;
    if (!(_mng_status411)) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v412 = (uint64_t)(&TlInternalError);
    __twr_v413 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v414 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v412)(__twr_v413, __twr_v414, __twr_v414, __twr_v414);
    __twr_l43:;
    __twr_v415 = 0ULL;
    __twr_v416 = 104ULL;
    __twr_v417 = _mng_entry410 + __twr_v416;
    *(uint8_t*)(__twr_v417) = __twr_v415;
    __twr_v418 = 16ULL;
    __twr_v419 = _mng_entry410 + __twr_v418;
    _mng_filepath420 = __twr_v419;
    __twr_v421 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v421)(_mng_filepath420);
    __twr_v422 = (uint64_t)(&BtParseStandardPath);
    __twr_v423 = 48ULL;
    __twr_v424 = _mng_string406 + __twr_v423;
    __twr_v425 = (uint64_t)(&_mng_token396);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v422)(__twr_v424, _mng_filepath420, __twr_v425);
    __twr_v426 = (uint64_t)(&TlIsPathDirectory);
    __twr_v427 = _mng_filepath420 + __twr_v418;
    __twr_v428 = *(uint64_t*)(__twr_v427);
    __twr_v429 = ((uint64_t (*)(uint64_t))__twr_v426)(__twr_v428);
    if (__twr_v429) { goto __twr_l45; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v430 = (uint64_t)(&LexTokenError);
    __twr_v431 = (uint64_t)(&_mng_token396);
    __twr_v432 = (uint64_t)(&"Doesn't exist or not a directory");
    __twr_v433 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v430)(__twr_v431, __twr_v432, __twr_v433, __twr_v433, __twr_v433);
    __twr_l45:;
    __twr_v434 = (uint64_t)(&BtCurrentTarget);
    __twr_v435 = *(uint64_t*)(__twr_v434);
    __twr_v436 = 592ULL;
    __twr_v437 = __twr_v435 + __twr_v436;
    _mng_listhead438 = __twr_v437;
    _mng_listentry439 = _mng_entry410;
    __twr_v440 = 8ULL;
    __twr_v441 = _mng_listhead438 + __twr_v440;
    __twr_v442 = *(uint64_t*)(__twr_v441);
    _mng_last443 = __twr_v442;
    __twr_v444 = _mng_listentry439 + __twr_v440;
    *(uint64_t*)(__twr_v444) = _mng_last443;
    *(uint64_t*)(_mng_listentry439) = _mng_listhead438;
    *(uint64_t*)(_mng_last443) = _mng_listentry439;
    *(uint64_t*)(__twr_v441) = _mng_listentry439;
    __twr_l40:;
    _jkl_epilogue:;
}
void BtTargetInfoObjects() {
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t _mng_token447[4];
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t _mng_string457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t _mng_entry461;
    uint64_t _mng_status462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t _mng_filepath468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t _mng_listhead489;
    uint64_t _mng_listentry490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t _mng_last494;
    uint64_t __twr_v495;
    __twr_v445 = (uint64_t)(&LexMatchToken);
    __twr_v446 = (uint64_t)(&_mng_token447);
    __twr_v448 = 4ULL;
    __twr_v449 = 0ULL;
    __twr_v450 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v445)(__twr_v446, __twr_v448, __twr_v449);
    if (__twr_v450) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v451 = (uint64_t)(&LexTokenError);
    __twr_v452 = (uint64_t)(&_mng_token447);
    __twr_v453 = (uint64_t)(&"Expected a string");
    __twr_v454 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v451)(__twr_v452, __twr_v453, __twr_v454, __twr_v454, __twr_v454);
    __twr_l48:;
    __twr_v455 = (uint64_t)(&_mng_token447);
    __twr_v456 = *(uint64_t*)(__twr_v455);
    _mng_string457 = __twr_v456;
    __twr_v458 = (uint64_t)(&TlBumpAlloc);
    __twr_v459 = 105ULL;
    __twr_v460 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v458)(__twr_v459, (uint64_t)(&_mng_entry461));
    _mng_status462 = __twr_v460;
    if (!(_mng_status462)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v463 = (uint64_t)(&TlInternalError);
    __twr_v464 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v465 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v463)(__twr_v464, __twr_v465, __twr_v465, __twr_v465);
    __twr_l50:;
    __twr_v466 = 16ULL;
    __twr_v467 = _mng_entry461 + __twr_v466;
    _mng_filepath468 = __twr_v467;
    __twr_v469 = 1ULL;
    __twr_v470 = 104ULL;
    __twr_v471 = _mng_entry461 + __twr_v470;
    *(uint8_t*)(__twr_v471) = __twr_v469;
    __twr_v472 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v472)(_mng_filepath468);
    __twr_v473 = (uint64_t)(&BtParseStandardPath);
    __twr_v474 = 48ULL;
    __twr_v475 = _mng_string457 + __twr_v474;
    __twr_v476 = (uint64_t)(&_mng_token447);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v473)(__twr_v475, _mng_filepath468, __twr_v476);
    __twr_v477 = (uint64_t)(&TlIsPathDirectory);
    __twr_v478 = _mng_filepath468 + __twr_v466;
    __twr_v479 = *(uint64_t*)(__twr_v478);
    __twr_v480 = ((uint64_t (*)(uint64_t))__twr_v477)(__twr_v479);
    if (__twr_v480) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v481 = (uint64_t)(&LexTokenError);
    __twr_v482 = (uint64_t)(&_mng_token447);
    __twr_v483 = (uint64_t)(&"Doesn't exist or not a directory");
    __twr_v484 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v481)(__twr_v482, __twr_v483, __twr_v484, __twr_v484, __twr_v484);
    __twr_l52:;
    __twr_v485 = (uint64_t)(&BtCurrentTarget);
    __twr_v486 = *(uint64_t*)(__twr_v485);
    __twr_v487 = 592ULL;
    __twr_v488 = __twr_v486 + __twr_v487;
    _mng_listhead489 = __twr_v488;
    _mng_listentry490 = _mng_entry461;
    __twr_v491 = 8ULL;
    __twr_v492 = _mng_listhead489 + __twr_v491;
    __twr_v493 = *(uint64_t*)(__twr_v492);
    _mng_last494 = __twr_v493;
    __twr_v495 = _mng_listentry490 + __twr_v491;
    *(uint64_t*)(__twr_v495) = _mng_last494;
    *(uint64_t*)(_mng_listentry490) = _mng_listhead489;
    *(uint64_t*)(_mng_last494) = _mng_listentry490;
    *(uint64_t*)(__twr_v492) = _mng_listentry490;
    __twr_l47:;
    _jkl_epilogue:;
}
void BtTargetInfoJklInclude() {
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t _mng_token498[4];
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t _mng_string508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t _mng_filepath511[11];
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    __twr_v496 = (uint64_t)(&LexMatchToken);
    __twr_v497 = (uint64_t)(&_mng_token498);
    __twr_v499 = 4ULL;
    __twr_v500 = 0ULL;
    __twr_v501 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v496)(__twr_v497, __twr_v499, __twr_v500);
    if (__twr_v501) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v502 = (uint64_t)(&LexTokenError);
    __twr_v503 = (uint64_t)(&_mng_token498);
    __twr_v504 = (uint64_t)(&"Expected a string");
    __twr_v505 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v502)(__twr_v503, __twr_v504, __twr_v505, __twr_v505, __twr_v505);
    __twr_l55:;
    __twr_v506 = (uint64_t)(&_mng_token498);
    __twr_v507 = *(uint64_t*)(__twr_v506);
    _mng_string508 = __twr_v507;
    __twr_v509 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v510 = (uint64_t)(&_mng_filepath511);
    ((void (*)(uint64_t))__twr_v509)(__twr_v510);
    __twr_v512 = (uint64_t)(&BtParseStandardPath);
    __twr_v513 = 48ULL;
    __twr_v514 = _mng_string508 + __twr_v513;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v512)(__twr_v514, __twr_v510, __twr_v506);
    __twr_v515 = (uint64_t)(&BtCurrentTarget);
    __twr_v516 = *(uint64_t*)(__twr_v515);
    __twr_v517 = 400ULL;
    __twr_v518 = __twr_v516 + __twr_v517;
    __twr_v519 = *(uint64_t*)(__twr_v518);
    if (!(__twr_v519)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v520 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v521 = (uint64_t)(&BtCurrentTarget);
    __twr_v522 = *(uint64_t*)(__twr_v521);
    __twr_v523 = 400ULL;
    __twr_v524 = __twr_v522 + __twr_v523;
    __twr_v525 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v520)(__twr_v524, __twr_v525);
    __twr_l57:;
    __twr_v526 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v527 = (uint64_t)(&BtCurrentTarget);
    __twr_v528 = *(uint64_t*)(__twr_v527);
    __twr_v529 = 400ULL;
    __twr_v530 = __twr_v528 + __twr_v529;
    __twr_v531 = (uint64_t)(&_mng_filepath511);
    __twr_v532 = 16ULL;
    __twr_v533 = __twr_v531 + __twr_v532;
    __twr_v534 = *(uint64_t*)(__twr_v533);
    __twr_v535 = *(uint64_t*)(__twr_v531);
    __twr_v536 = 1ULL;
    __twr_v537 = __twr_v535 - __twr_v536;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v526)(__twr_v530, __twr_v534, __twr_v537);
    __twr_v538 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v538)(__twr_v531);
    __twr_l54:;
    _jkl_epilogue:;
}
void BtTargetInfoLibDir() {
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t _mng_token541[4];
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t _mng_string551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t _mng_filepath554[11];
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    __twr_v539 = (uint64_t)(&LexMatchToken);
    __twr_v540 = (uint64_t)(&_mng_token541);
    __twr_v542 = 4ULL;
    __twr_v543 = 0ULL;
    __twr_v544 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v539)(__twr_v540, __twr_v542, __twr_v543);
    if (__twr_v544) { goto __twr_l60; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v545 = (uint64_t)(&LexTokenError);
    __twr_v546 = (uint64_t)(&_mng_token541);
    __twr_v547 = (uint64_t)(&"Expected a string");
    __twr_v548 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v545)(__twr_v546, __twr_v547, __twr_v548, __twr_v548, __twr_v548);
    __twr_l60:;
    __twr_v549 = (uint64_t)(&_mng_token541);
    __twr_v550 = *(uint64_t*)(__twr_v549);
    _mng_string551 = __twr_v550;
    __twr_v552 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v553 = (uint64_t)(&_mng_filepath554);
    ((void (*)(uint64_t))__twr_v552)(__twr_v553);
    __twr_v555 = (uint64_t)(&BtParseStandardPath);
    __twr_v556 = 48ULL;
    __twr_v557 = _mng_string551 + __twr_v556;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v555)(__twr_v557, __twr_v553, __twr_v549);
    __twr_v558 = (uint64_t)(&BtCurrentTarget);
    __twr_v559 = *(uint64_t*)(__twr_v558);
    __twr_v560 = 488ULL;
    __twr_v561 = __twr_v559 + __twr_v560;
    __twr_v562 = *(uint64_t*)(__twr_v561);
    if (!(__twr_v562)) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v563 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v564 = (uint64_t)(&BtCurrentTarget);
    __twr_v565 = *(uint64_t*)(__twr_v564);
    __twr_v566 = 488ULL;
    __twr_v567 = __twr_v565 + __twr_v566;
    __twr_v568 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v563)(__twr_v567, __twr_v568);
    __twr_l62:;
    __twr_v569 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v570 = (uint64_t)(&BtCurrentTarget);
    __twr_v571 = *(uint64_t*)(__twr_v570);
    __twr_v572 = 488ULL;
    __twr_v573 = __twr_v571 + __twr_v572;
    __twr_v574 = (uint64_t)(&_mng_filepath554);
    __twr_v575 = 16ULL;
    __twr_v576 = __twr_v574 + __twr_v575;
    __twr_v577 = *(uint64_t*)(__twr_v576);
    __twr_v578 = *(uint64_t*)(__twr_v574);
    __twr_v579 = 1ULL;
    __twr_v580 = __twr_v578 - __twr_v579;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v569)(__twr_v573, __twr_v577, __twr_v580);
    __twr_v581 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v581)(__twr_v574);
    __twr_l59:;
    _jkl_epilogue:;
}
void BtTargetInfoLinkOpt() {
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t _mng_token584[4];
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t _mng_string594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t _mng_str597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    __twr_v582 = (uint64_t)(&LexMatchToken);
    __twr_v583 = (uint64_t)(&_mng_token584);
    __twr_v585 = 4ULL;
    __twr_v586 = 0ULL;
    __twr_v587 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v582)(__twr_v583, __twr_v585, __twr_v586);
    if (__twr_v587) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v588 = (uint64_t)(&LexTokenError);
    __twr_v589 = (uint64_t)(&_mng_token584);
    __twr_v590 = (uint64_t)(&"Expected a string");
    __twr_v591 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v588)(__twr_v589, __twr_v590, __twr_v591, __twr_v591, __twr_v591);
    __twr_l65:;
    __twr_v592 = (uint64_t)(&_mng_token584);
    __twr_v593 = *(uint64_t*)(__twr_v592);
    _mng_string594 = __twr_v593;
    __twr_v595 = 48ULL;
    __twr_v596 = _mng_string594 + __twr_v595;
    _mng_str597 = __twr_v596;
    __twr_v598 = (uint64_t)(&BtCurrentTarget);
    __twr_v599 = *(uint64_t*)(__twr_v598);
    __twr_v600 = __twr_v599 + __twr_v595;
    __twr_v601 = *(uint64_t*)(__twr_v600);
    if (!(__twr_v601)) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v602 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v603 = (uint64_t)(&BtCurrentTarget);
    __twr_v604 = *(uint64_t*)(__twr_v603);
    __twr_v605 = 48ULL;
    __twr_v606 = __twr_v604 + __twr_v605;
    __twr_v607 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v602)(__twr_v606, __twr_v607);
    __twr_l67:;
    __twr_v608 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v609 = (uint64_t)(&BtCurrentTarget);
    __twr_v610 = *(uint64_t*)(__twr_v609);
    __twr_v611 = 48ULL;
    __twr_v612 = __twr_v610 + __twr_v611;
    __twr_v613 = 16ULL;
    __twr_v614 = _mng_str597 + __twr_v613;
    __twr_v615 = *(uint64_t*)(__twr_v614);
    __twr_v616 = *(uint64_t*)(_mng_str597);
    __twr_v617 = 1ULL;
    __twr_v618 = __twr_v616 - __twr_v617;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v608)(__twr_v612, __twr_v615, __twr_v618);
    __twr_l64:;
    _jkl_epilogue:;
}
void BtTargetInfoJklOpt() {
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t _mng_token621[4];
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t _mng_string631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t _mng_str634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    __twr_v619 = (uint64_t)(&LexMatchToken);
    __twr_v620 = (uint64_t)(&_mng_token621);
    __twr_v622 = 4ULL;
    __twr_v623 = 0ULL;
    __twr_v624 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v619)(__twr_v620, __twr_v622, __twr_v623);
    if (__twr_v624) { goto __twr_l70; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v625 = (uint64_t)(&LexTokenError);
    __twr_v626 = (uint64_t)(&_mng_token621);
    __twr_v627 = (uint64_t)(&"Expected a string");
    __twr_v628 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v625)(__twr_v626, __twr_v627, __twr_v628, __twr_v628, __twr_v628);
    __twr_l70:;
    __twr_v629 = (uint64_t)(&_mng_token621);
    __twr_v630 = *(uint64_t*)(__twr_v629);
    _mng_string631 = __twr_v630;
    __twr_v632 = 48ULL;
    __twr_v633 = _mng_string631 + __twr_v632;
    _mng_str634 = __twr_v633;
    __twr_v635 = (uint64_t)(&BtCurrentTarget);
    __twr_v636 = *(uint64_t*)(__twr_v635);
    __twr_v637 = 312ULL;
    __twr_v638 = __twr_v636 + __twr_v637;
    __twr_v639 = *(uint64_t*)(__twr_v638);
    if (!(__twr_v639)) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v640 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v641 = (uint64_t)(&BtCurrentTarget);
    __twr_v642 = *(uint64_t*)(__twr_v641);
    __twr_v643 = 312ULL;
    __twr_v644 = __twr_v642 + __twr_v643;
    __twr_v645 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v640)(__twr_v644, __twr_v645);
    __twr_l72:;
    __twr_v646 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v647 = (uint64_t)(&BtCurrentTarget);
    __twr_v648 = *(uint64_t*)(__twr_v647);
    __twr_v649 = 312ULL;
    __twr_v650 = __twr_v648 + __twr_v649;
    __twr_v651 = 16ULL;
    __twr_v652 = _mng_str634 + __twr_v651;
    __twr_v653 = *(uint64_t*)(__twr_v652);
    __twr_v654 = *(uint64_t*)(_mng_str634);
    __twr_v655 = 1ULL;
    __twr_v656 = __twr_v654 - __twr_v655;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v646)(__twr_v650, __twr_v653, __twr_v656);
    __twr_l69:;
    _jkl_epilogue:;
}
void BtTargetInfoLink() {
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t _mng_token659[4];
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t _mng_string669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t _mng_filepath672[11];
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    __twr_v657 = (uint64_t)(&LexMatchToken);
    __twr_v658 = (uint64_t)(&_mng_token659);
    __twr_v660 = 4ULL;
    __twr_v661 = 0ULL;
    __twr_v662 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v657)(__twr_v658, __twr_v660, __twr_v661);
    if (__twr_v662) { goto __twr_l75; } else { goto __twr_l76; }
    __twr_l76:;
    __twr_v663 = (uint64_t)(&LexTokenError);
    __twr_v664 = (uint64_t)(&_mng_token659);
    __twr_v665 = (uint64_t)(&"Expected a string");
    __twr_v666 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v663)(__twr_v664, __twr_v665, __twr_v666, __twr_v666, __twr_v666);
    __twr_l75:;
    __twr_v667 = (uint64_t)(&_mng_token659);
    __twr_v668 = *(uint64_t*)(__twr_v667);
    _mng_string669 = __twr_v668;
    __twr_v670 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v671 = (uint64_t)(&_mng_filepath672);
    ((void (*)(uint64_t))__twr_v670)(__twr_v671);
    __twr_v673 = (uint64_t)(&BtParseStandardPath);
    __twr_v674 = 48ULL;
    __twr_v675 = _mng_string669 + __twr_v674;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v673)(__twr_v675, __twr_v671, __twr_v667);
    __twr_v676 = (uint64_t)(&BtCurrentTarget);
    __twr_v677 = *(uint64_t*)(__twr_v676);
    __twr_v678 = 136ULL;
    __twr_v679 = __twr_v677 + __twr_v678;
    __twr_v680 = *(uint64_t*)(__twr_v679);
    if (!(__twr_v680)) { goto __twr_l77; } else { goto __twr_l78; }
    __twr_l78:;
    __twr_v681 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v682 = (uint64_t)(&BtCurrentTarget);
    __twr_v683 = *(uint64_t*)(__twr_v682);
    __twr_v684 = 136ULL;
    __twr_v685 = __twr_v683 + __twr_v684;
    __twr_v686 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v681)(__twr_v685, __twr_v686);
    __twr_l77:;
    __twr_v687 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v688 = (uint64_t)(&BtCurrentTarget);
    __twr_v689 = *(uint64_t*)(__twr_v688);
    __twr_v690 = 136ULL;
    __twr_v691 = __twr_v689 + __twr_v690;
    __twr_v692 = (uint64_t)(&_mng_filepath672);
    __twr_v693 = 16ULL;
    __twr_v694 = __twr_v692 + __twr_v693;
    __twr_v695 = *(uint64_t*)(__twr_v694);
    __twr_v696 = *(uint64_t*)(__twr_v692);
    __twr_v697 = 1ULL;
    __twr_v698 = __twr_v696 - __twr_v697;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v687)(__twr_v691, __twr_v695, __twr_v698);
    __twr_v699 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v699)(__twr_v692);
    __twr_l74:;
    _jkl_epilogue:;
}
void BtTargetInfoDyLink() {
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t _mng_token702[4];
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t _mng_rtstring713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t _mng_ctpathtoken716[4];
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t _mng_ctstring725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t _mng_filepath728[11];
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    __twr_v700 = (uint64_t)(&LexMatchToken);
    __twr_v701 = (uint64_t)(&_mng_token702);
    __twr_v703 = 4ULL;
    __twr_v704 = 0ULL;
    __twr_v705 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v700)(__twr_v701, __twr_v703, __twr_v704);
    if (__twr_v705) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v706 = (uint64_t)(&LexTokenError);
    __twr_v707 = (uint64_t)(&_mng_token702);
    __twr_v708 = (uint64_t)(&"Expected a string");
    __twr_v709 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v706)(__twr_v707, __twr_v708, __twr_v709, __twr_v709, __twr_v709);
    __twr_l80:;
    __twr_v710 = (uint64_t)(&_mng_token702);
    __twr_v711 = 0ULL;
    __twr_v712 = *(uint64_t*)(__twr_v710);
    _mng_rtstring713 = __twr_v712;
    __twr_v714 = (uint64_t)(&LexMatchToken);
    __twr_v715 = (uint64_t)(&_mng_ctpathtoken716);
    __twr_v717 = 4ULL;
    __twr_v718 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v714)(__twr_v715, __twr_v717, __twr_v711);
    if (__twr_v718) { goto __twr_l82; } else { goto __twr_l83; }
    __twr_l83:;
    __twr_v719 = (uint64_t)(&LexTokenError);
    __twr_v720 = (uint64_t)(&_mng_ctpathtoken716);
    __twr_v721 = (uint64_t)(&"Expected a string");
    __twr_v722 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v719)(__twr_v720, __twr_v721, __twr_v722, __twr_v722, __twr_v722);
    __twr_l82:;
    __twr_v723 = (uint64_t)(&_mng_ctpathtoken716);
    __twr_v724 = *(uint64_t*)(__twr_v723);
    _mng_ctstring725 = __twr_v724;
    __twr_v726 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v727 = (uint64_t)(&_mng_filepath728);
    ((void (*)(uint64_t))__twr_v726)(__twr_v727);
    __twr_v729 = (uint64_t)(&BtParseStandardPath);
    __twr_v730 = 48ULL;
    __twr_v731 = _mng_ctstring725 + __twr_v730;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v729)(__twr_v731, __twr_v727, __twr_v723);
    __twr_v732 = (uint64_t)(&BtCurrentTarget);
    __twr_v733 = *(uint64_t*)(__twr_v732);
    __twr_v734 = 224ULL;
    __twr_v735 = __twr_v733 + __twr_v734;
    __twr_v736 = *(uint64_t*)(__twr_v735);
    if (!(__twr_v736)) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v737 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v738 = (uint64_t)(&BtCurrentTarget);
    __twr_v739 = *(uint64_t*)(__twr_v738);
    __twr_v740 = 224ULL;
    __twr_v741 = __twr_v739 + __twr_v740;
    __twr_v742 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v737)(__twr_v741, __twr_v742);
    __twr_l84:;
    __twr_v743 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v744 = (uint64_t)(&BtCurrentTarget);
    __twr_v745 = *(uint64_t*)(__twr_v744);
    __twr_v746 = 224ULL;
    __twr_v747 = __twr_v745 + __twr_v746;
    __twr_v748 = 48ULL;
    __twr_v749 = _mng_rtstring713 + __twr_v748;
    __twr_v750 = 16ULL;
    __twr_v751 = 64ULL;
    __twr_v752 = _mng_rtstring713 + __twr_v751;
    __twr_v753 = *(uint64_t*)(__twr_v752);
    __twr_v754 = *(uint64_t*)(__twr_v749);
    __twr_v755 = 1ULL;
    __twr_v756 = __twr_v754 - __twr_v755;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v743)(__twr_v747, __twr_v753, __twr_v756);
    __twr_v757 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v758 = *(uint64_t*)(__twr_v744);
    __twr_v759 = __twr_v758 + __twr_v746;
    __twr_v760 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v757)(__twr_v759, __twr_v760);
    __twr_v761 = *(uint64_t*)(__twr_v744);
    __twr_v762 = __twr_v761 + __twr_v746;
    __twr_v763 = (uint64_t)(&_mng_filepath728);
    __twr_v764 = __twr_v763 + __twr_v750;
    __twr_v765 = *(uint64_t*)(__twr_v764);
    __twr_v766 = *(uint64_t*)(__twr_v763);
    __twr_v767 = __twr_v766 - __twr_v755;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v743)(__twr_v762, __twr_v765, __twr_v767);
    __twr_v768 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v768)(__twr_v763);
    __twr_l79:;
    _jkl_epilogue:;
}
void BtTargetInfoPrebuilt() {
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t _mng_token771[4];
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t _mng_string781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    __twr_v769 = (uint64_t)(&LexMatchToken);
    __twr_v770 = (uint64_t)(&_mng_token771);
    __twr_v772 = 4ULL;
    __twr_v773 = 0ULL;
    __twr_v774 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v769)(__twr_v770, __twr_v772, __twr_v773);
    if (__twr_v774) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v775 = (uint64_t)(&LexTokenError);
    __twr_v776 = (uint64_t)(&_mng_token771);
    __twr_v777 = (uint64_t)(&"Expected a string");
    __twr_v778 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v775)(__twr_v776, __twr_v777, __twr_v778, __twr_v778, __twr_v778);
    __twr_l87:;
    __twr_v779 = (uint64_t)(&_mng_token771);
    __twr_v780 = *(uint64_t*)(__twr_v779);
    _mng_string781 = __twr_v780;
    __twr_v782 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v783 = (uint64_t)(&BtCurrentTarget);
    __twr_v784 = *(uint64_t*)(__twr_v783);
    __twr_v785 = 696ULL;
    __twr_v786 = __twr_v784 + __twr_v785;
    ((void (*)(uint64_t))__twr_v782)(__twr_v786);
    __twr_v787 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v788 = *(uint64_t*)(__twr_v783);
    __twr_v789 = __twr_v788 + __twr_v785;
    ((void (*)(uint64_t))__twr_v787)(__twr_v789);
    __twr_v790 = (uint64_t)(&BtParseStandardPath);
    __twr_v791 = 48ULL;
    __twr_v792 = _mng_string781 + __twr_v791;
    __twr_v793 = *(uint64_t*)(__twr_v783);
    __twr_v794 = __twr_v793 + __twr_v785;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v790)(__twr_v792, __twr_v794, __twr_v779);
    __twr_v795 = 1ULL;
    __twr_v796 = *(uint64_t*)(__twr_v783);
    __twr_v797 = 826ULL;
    __twr_v798 = __twr_v796 + __twr_v797;
    *(uint8_t*)(__twr_v798) = __twr_v795;
    __twr_l86:;
    _jkl_epilogue:;
}
uint64_t BtTargetInfoSpecifiers[11] = {
    (uint64_t)(&BtTargetInfoFile),
    (uint64_t)(&BtTargetInfoDepend),
    (uint64_t)(&BtTargetInfoSources),
    (uint64_t)(&BtTargetInfoJklInclude),
    (uint64_t)(&BtTargetInfoLibDir),
    (uint64_t)(&BtTargetInfoLinkOpt),
    (uint64_t)(&BtTargetInfoJklOpt),
    (uint64_t)(&BtTargetInfoLink),
    (uint64_t)(&BtTargetInfoDyLink),
    (uint64_t)(&BtTargetInfoPrebuilt),
    (uint64_t)(&BtTargetInfoObjects),
};
uint64_t BtParseTarget() {
    uint64_t _jkl_retv;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t _mng_token801[4];
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t _mng_nametoken818[4];
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t _mng_namestring828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t _mng_target842;
    uint64_t _mng_status843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t _mng_listhead873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t _mng_listhead878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t _mng_listhead882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t _mng_listhead886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t _mng_listhead890;
    uint64_t __twr_v891;
    uint64_t _mng_listentry892;
    uint64_t __twr_v893;
    uint64_t __twr_v894;
    uint64_t _mng_macro895;
    uint64_t __twr_v896;
    uint64_t __twr_v897;
    uint64_t __twr_v898;
    uint64_t _mng_exprec899;
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t __twr_v902;
    uint64_t __twr_v903;
    uint64_t __twr_v904;
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t _mng_listhead907;
    uint64_t _mng_listentry908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t _mng_last912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    uint64_t __twr_v915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint64_t __twr_v933;
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t __twr_v936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    uint64_t __twr_v942;
    uint64_t __twr_v943;
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t __twr_v946;
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t __twr_v953;
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    __twr_v799 = (uint64_t)(&LexGetToken);
    __twr_v800 = (uint64_t)(&_mng_token801);
    ((void (*)(uint64_t))__twr_v799)(__twr_v800);
    __twr_v802 = 24ULL;
    __twr_v803 = __twr_v800 + __twr_v802;
    __twr_v804 = *(uint8_t*)(__twr_v803);
    __twr_v805 = 6ULL;
    if (__twr_v804 != __twr_v805) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v806 = 0ULL;
    _jkl_retv = __twr_v806;
    goto _jkl_epilogue;
    __twr_l90:;
    __twr_v807 = (uint64_t)(&_mng_token801);
    __twr_v808 = 24ULL;
    __twr_v809 = __twr_v807 + __twr_v808;
    __twr_v810 = *(uint8_t*)(__twr_v809);
    __twr_v811 = 1ULL;
    if (__twr_v810 == __twr_v811) { goto __twr_l92; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v812 = (uint64_t)(&LexTokenError);
    __twr_v813 = (uint64_t)(&_mng_token801);
    __twr_v814 = (uint64_t)(&"Expected TARGET");
    __twr_v815 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v812)(__twr_v813, __twr_v814, __twr_v815, __twr_v815, __twr_v815);
    __twr_l92:;
    __twr_v816 = (uint64_t)(&LexMatchToken);
    __twr_v817 = (uint64_t)(&_mng_nametoken818);
    __twr_v819 = 4ULL;
    __twr_v820 = 0ULL;
    __twr_v821 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v816)(__twr_v817, __twr_v819, __twr_v820);
    if (__twr_v821) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v822 = (uint64_t)(&LexTokenError);
    __twr_v823 = (uint64_t)(&_mng_nametoken818);
    __twr_v824 = (uint64_t)(&"Expected a string");
    __twr_v825 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v822)(__twr_v823, __twr_v824, __twr_v825, __twr_v825, __twr_v825);
    __twr_l94:;
    __twr_v826 = (uint64_t)(&_mng_nametoken818);
    __twr_v827 = *(uint64_t*)(__twr_v826);
    _mng_namestring828 = __twr_v827;
    __twr_v829 = (uint64_t)(&TlLookupHashTable);
    __twr_v830 = (uint64_t)(&BtTargetHashTable);
    __twr_v831 = 64ULL;
    __twr_v832 = _mng_namestring828 + __twr_v831;
    __twr_v833 = *(uint64_t*)(__twr_v832);
    __twr_v834 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v829)(__twr_v830, __twr_v833);
    if (!(__twr_v834)) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v835 = (uint64_t)(&LexTokenError);
    __twr_v836 = (uint64_t)(&_mng_nametoken818);
    __twr_v837 = (uint64_t)(&"Target already defined");
    __twr_v838 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v835)(__twr_v836, __twr_v837, __twr_v838, __twr_v838, __twr_v838);
    __twr_l96:;
    __twr_v839 = (uint64_t)(&TlBumpAlloc);
    __twr_v840 = 827ULL;
    __twr_v841 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v839)(__twr_v840, (uint64_t)(&_mng_target842));
    _mng_status843 = __twr_v841;
    if (!(_mng_status843)) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v844 = (uint64_t)(&TlInternalError);
    __twr_v845 = (uint64_t)(&"Failed to allocate target");
    __twr_v846 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v844)(__twr_v845, __twr_v846, __twr_v846, __twr_v846);
    __twr_l98:;
    __twr_v847 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v848 = 48ULL;
    __twr_v849 = _mng_target842 + __twr_v848;
    ((void (*)(uint64_t))__twr_v847)(__twr_v849);
    __twr_v850 = 312ULL;
    __twr_v851 = _mng_target842 + __twr_v850;
    ((void (*)(uint64_t))__twr_v847)(__twr_v851);
    __twr_v852 = 400ULL;
    __twr_v853 = _mng_target842 + __twr_v852;
    ((void (*)(uint64_t))__twr_v847)(__twr_v853);
    __twr_v854 = 488ULL;
    __twr_v855 = _mng_target842 + __twr_v854;
    ((void (*)(uint64_t))__twr_v847)(__twr_v855);
    __twr_v856 = 136ULL;
    __twr_v857 = _mng_target842 + __twr_v856;
    ((void (*)(uint64_t))__twr_v847)(__twr_v857);
    __twr_v858 = 224ULL;
    __twr_v859 = _mng_target842 + __twr_v858;
    ((void (*)(uint64_t))__twr_v847)(__twr_v859);
    __twr_v860 = 608ULL;
    __twr_v861 = _mng_target842 + __twr_v860;
    ((void (*)(uint64_t))__twr_v847)(__twr_v861);
    __twr_v862 = 696ULL;
    __twr_v863 = _mng_target842 + __twr_v862;
    ((void (*)(uint64_t))__twr_v847)(__twr_v863);
    __twr_v864 = 0ULL;
    __twr_v865 = 824ULL;
    __twr_v866 = _mng_target842 + __twr_v865;
    *(uint8_t*)(__twr_v866) = __twr_v864;
    __twr_v867 = 825ULL;
    __twr_v868 = _mng_target842 + __twr_v867;
    *(uint8_t*)(__twr_v868) = __twr_v864;
    __twr_v869 = 826ULL;
    __twr_v870 = _mng_target842 + __twr_v869;
    *(uint8_t*)(__twr_v870) = __twr_v864;
    __twr_v871 = 576ULL;
    __twr_v872 = _mng_target842 + __twr_v871;
    _mng_listhead873 = __twr_v872;
    __twr_v874 = 8ULL;
    __twr_v875 = _mng_listhead873 + __twr_v874;
    *(uint64_t*)(__twr_v875) = _mng_listhead873;
    *(uint64_t*)(_mng_listhead873) = _mng_listhead873;
    __twr_v876 = 592ULL;
    __twr_v877 = _mng_target842 + __twr_v876;
    _mng_listhead878 = __twr_v877;
    __twr_v879 = _mng_listhead878 + __twr_v874;
    *(uint64_t*)(__twr_v879) = _mng_listhead878;
    *(uint64_t*)(_mng_listhead878) = _mng_listhead878;
    __twr_v880 = 784ULL;
    __twr_v881 = _mng_target842 + __twr_v880;
    _mng_listhead882 = __twr_v881;
    __twr_v883 = _mng_listhead882 + __twr_v874;
    *(uint64_t*)(__twr_v883) = _mng_listhead882;
    *(uint64_t*)(_mng_listhead882) = _mng_listhead882;
    __twr_v884 = 800ULL;
    __twr_v885 = _mng_target842 + __twr_v884;
    _mng_listhead886 = __twr_v885;
    __twr_v887 = _mng_listhead886 + __twr_v874;
    *(uint64_t*)(__twr_v887) = _mng_listhead886;
    *(uint64_t*)(_mng_listhead886) = _mng_listhead886;
    __twr_v888 = (uint64_t)(&BtCurrentTarget);
    *(uint64_t*)(__twr_v888) = _mng_target842;
    __twr_v889 = (uint64_t)(&LexExposedMacroListHead);
    _mng_listhead890 = __twr_v889;
    __twr_v891 = *(uint64_t*)(_mng_listhead890);
    _mng_listentry892 = __twr_v891;
    if (_mng_listentry892 == _mng_listhead890) { goto __twr_l101; } else { goto __twr_l100; }
    __twr_l100:;
    __twr_v893 = 232ULL;
    __twr_v894 = _mng_listentry892 - __twr_v893;
    _mng_macro895 = __twr_v894;
    __twr_v896 = (uint64_t)(&TlBumpAlloc);
    __twr_v897 = 24ULL;
    __twr_v898 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v896)(__twr_v897, (uint64_t)(&_mng_exprec899));
    _mng_status843 = __twr_v898;
    if (!(_mng_status843)) { goto __twr_l103; } else { goto __twr_l104; }
    __twr_l104:;
    __twr_v900 = (uint64_t)(&TlInternalError);
    __twr_v901 = (uint64_t)(&"Failed to allocate exposed macro record");
    __twr_v902 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v900)(__twr_v901, __twr_v902, __twr_v902, __twr_v902);
    __twr_l103:;
    __twr_v903 = 16ULL;
    __twr_v904 = _mng_exprec899 + __twr_v903;
    *(uint64_t*)(__twr_v904) = _mng_macro895;
    __twr_v905 = 800ULL;
    __twr_v906 = _mng_target842 + __twr_v905;
    _mng_listhead907 = __twr_v906;
    _mng_listentry908 = _mng_exprec899;
    __twr_v909 = 8ULL;
    __twr_v910 = _mng_listhead907 + __twr_v909;
    __twr_v911 = *(uint64_t*)(__twr_v910);
    _mng_last912 = __twr_v911;
    __twr_v913 = _mng_listentry908 + __twr_v909;
    *(uint64_t*)(__twr_v913) = _mng_last912;
    *(uint64_t*)(_mng_listentry908) = _mng_listhead907;
    *(uint64_t*)(_mng_last912) = _mng_listentry908;
    *(uint64_t*)(__twr_v910) = _mng_listentry908;
    __twr_v914 = *(uint64_t*)(_mng_listentry892);
    _mng_listentry892 = __twr_v914;
    __twr_l102:;
    if (_mng_listentry892 != _mng_listhead890) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v915 = (uint64_t)(&LexMatchToken);
    __twr_v916 = (uint64_t)(&_mng_token801);
    __twr_v917 = 3ULL;
    __twr_v918 = 0ULL;
    __twr_v919 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v915)(__twr_v916, __twr_v917, __twr_v918);
    if (__twr_v919) { goto __twr_l106; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v920 = (uint64_t)(&LexMatchToken);
    __twr_v921 = (uint64_t)(&_mng_token801);
    __twr_v922 = 2ULL;
    __twr_v923 = 0ULL;
    __twr_v924 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v920)(__twr_v921, __twr_v922, __twr_v923);
    if (__twr_v924) { goto __twr_l108; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v925 = (uint64_t)(&LexTokenError);
    __twr_v926 = (uint64_t)(&_mng_token801);
    __twr_v927 = (uint64_t)(&"Expected a target info specifier");
    __twr_v928 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v925)(__twr_v926, __twr_v927, __twr_v928, __twr_v928, __twr_v928);
    __twr_l108:;
    __twr_v929 = (uint64_t)(&BtTargetInfoSpecifiers);
    __twr_v930 = (uint64_t)(&_mng_token801);
    __twr_v931 = 25ULL;
    __twr_v932 = __twr_v930 + __twr_v931;
    __twr_v933 = *(uint8_t*)(__twr_v932);
    __twr_v934 = 3ULL;
    __twr_v935 = __twr_v933 << __twr_v934;
    __twr_v936 = __twr_v929 + __twr_v935;
    __twr_v937 = *(uint64_t*)(__twr_v936);
    ((void (*)())__twr_v937)();
    __twr_l107:;
    __twr_v938 = (uint64_t)(&LexMatchToken);
    __twr_v939 = (uint64_t)(&_mng_token801);
    __twr_v940 = 3ULL;
    __twr_v941 = 0ULL;
    __twr_v942 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v938)(__twr_v939, __twr_v940, __twr_v941);
    if (!(__twr_v942)) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v943 = (uint64_t)(&TlInsertHashTable);
    __twr_v944 = (uint64_t)(&BtTargetHashTable);
    __twr_v945 = 64ULL;
    __twr_v946 = _mng_namestring828 + __twr_v945;
    __twr_v947 = *(uint64_t*)(__twr_v946);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v943)(__twr_v944, _mng_target842, __twr_v947);
    __twr_v948 = 826ULL;
    __twr_v949 = _mng_target842 + __twr_v948;
    __twr_v950 = *(uint8_t*)(__twr_v949);
    if (!(__twr_v950)) { goto __twr_l110; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v951 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v952 = 696ULL;
    __twr_v953 = _mng_target842 + __twr_v952;
    __twr_v954 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v951)(__twr_v953, __twr_v954);
    __twr_l110:;
    __twr_v955 = 1ULL;
    _jkl_retv = __twr_v955;
    goto _jkl_epilogue;
    __twr_l89:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtParse() {
    uint64_t __twr_v956;
    uint64_t __twr_v957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t __twr_v961;
    uint64_t __twr_v962;
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    uint64_t __twr_v965;
    uint64_t _mng_target966;
    uint64_t __twr_v967;
    uint64_t __twr_v968;
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    __twr_v956 = (uint64_t)(&TlInitializeHashTable);
    __twr_v957 = (uint64_t)(&BtTargetHashTable);
    ((void (*)(uint64_t))__twr_v956)(__twr_v957);
    __twr_v958 = (uint64_t)(&BtParseTarget);
    __twr_v959 = ((uint64_t (*)())__twr_v958)();
    if (!(__twr_v959)) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_l115:;
    __twr_v960 = (uint64_t)(&BtParseTarget);
    __twr_v961 = ((uint64_t (*)())__twr_v960)();
    if (__twr_v961) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v962 = (uint64_t)(&TlLookupHashTable);
    __twr_v963 = (uint64_t)(&BtTargetHashTable);
    __twr_v964 = (uint64_t)(&FeTargetName);
    __twr_v965 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v962)(__twr_v963, __twr_v964);
    _mng_target966 = __twr_v965;
    if (_mng_target966) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v967 = (uint64_t)(&TlUserError);
    __twr_v968 = (uint64_t)(&"Target not defined");
    __twr_v969 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v967)(__twr_v968, __twr_v969, __twr_v969, __twr_v969);
    __twr_l116:;
    __twr_v970 = (uint64_t)(&BtSelectedTarget);
    *(uint64_t*)(__twr_v970) = _mng_target966;
    __twr_l112:;
    _jkl_epilogue:;
}
void BtLookupConfigMacros() {
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t __twr_v975;
    uint64_t _mng_macro976;
    uint64_t __twr_v977;
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t __twr_v990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t __twr_v1008;
    uint64_t __twr_v1009;
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t __twr_v1088;
    uint64_t __twr_v1089;
    uint64_t __twr_v1090;
    __twr_v971 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v972 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v973 = *(uint64_t*)(__twr_v972);
    __twr_v974 = (uint64_t)(&"ARCHITECTURE");
    __twr_v975 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v971)(__twr_v973, __twr_v974);
    _mng_macro976 = __twr_v975;
    if (_mng_macro976) { goto __twr_l119; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v977 = (uint64_t)(&TlUserError);
    __twr_v978 = (uint64_t)(&"ARCHITECTURE wasn't defined in the config");
    __twr_v979 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v977)(__twr_v978, __twr_v979, __twr_v979, __twr_v979);
    __twr_l119:;
    __twr_v980 = 264ULL;
    __twr_v981 = _mng_macro976 + __twr_v980;
    __twr_v982 = *(uint8_t*)(__twr_v981);
    if (!(__twr_v982)) { goto __twr_l121; } else { goto __twr_l122; }
    __twr_l122:;
    __twr_v983 = (uint64_t)(&TlUserError);
    __twr_v984 = (uint64_t)(&"ARCHITECTURE is a function macro for some reason");
    __twr_v985 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v983)(__twr_v984, __twr_v985, __twr_v985, __twr_v985);
    __twr_l121:;
    __twr_v986 = (uint64_t)(&TlCopyString);
    __twr_v987 = (uint64_t)(&BtTargetArchitectureName);
    __twr_v988 = 96ULL;
    __twr_v989 = _mng_macro976 + __twr_v988;
    __twr_v990 = *(uint64_t*)(__twr_v989);
    __twr_v991 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v986)(__twr_v987, __twr_v990, __twr_v991);
    __twr_v992 = (uint64_t)(&TlCompareString);
    __twr_v993 = (uint64_t)(&"CHost");
    __twr_v994 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v992)(__twr_v987, __twr_v993);
    if (__twr_v994) { goto __twr_l123; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v995 = 1ULL;
    __twr_v996 = (uint64_t)(&BtCHost);
    *(uint64_t*)(__twr_v996) = __twr_v995;
    __twr_l123:;
    __twr_v997 = 1ULL;
    __twr_v998 = (uint64_t)(&BtJobCount);
    *(uint64_t*)(__twr_v998) = __twr_v997;
    __twr_v999 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1000 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1001 = *(uint64_t*)(__twr_v1000);
    __twr_v1002 = (uint64_t)(&"JOBS");
    __twr_v1003 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v999)(__twr_v1001, __twr_v1002);
    _mng_macro976 = __twr_v1003;
    if (!(_mng_macro976)) { goto __twr_l125; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v1004 = 264ULL;
    __twr_v1005 = _mng_macro976 + __twr_v1004;
    __twr_v1006 = *(uint8_t*)(__twr_v1005);
    if (!(__twr_v1006)) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v1007 = (uint64_t)(&TlUserError);
    __twr_v1008 = (uint64_t)(&"JOBS is a function macro for some reason");
    __twr_v1009 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1007)(__twr_v1008, __twr_v1009, __twr_v1009, __twr_v1009);
    __twr_l127:;
    __twr_v1010 = (uint64_t)(&TlStringToNumber);
    __twr_v1011 = 96ULL;
    __twr_v1012 = _mng_macro976 + __twr_v1011;
    __twr_v1013 = *(uint64_t*)(__twr_v1012);
    __twr_v1014 = 18446744073709551615ULL;
    __twr_v1015 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v1010)(__twr_v1013, __twr_v1014, (uint64_t)(&__twr_v1016));
    __twr_v1017 = (uint64_t)(&BtJobCount);
    *(uint64_t*)(__twr_v1017) = __twr_v1016;
    if (__twr_v1015) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v1018 = (uint64_t)(&TlUserError);
    __twr_v1019 = (uint64_t)(&"JOBS wasn't a numeric value");
    __twr_v1020 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1018)(__twr_v1019, __twr_v1020, __twr_v1020, __twr_v1020);
    __twr_l129:;
    __twr_v1021 = (uint64_t)(&BtJobCount);
    __twr_v1022 = *(uint64_t*)(__twr_v1021);
    if (__twr_v1022) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v1023 = (uint64_t)(&TlUserError);
    __twr_v1024 = (uint64_t)(&"Zero JOBS specified");
    __twr_v1025 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1023)(__twr_v1024, __twr_v1025, __twr_v1025, __twr_v1025);
    __twr_l131:;
    __twr_l125:;
    __twr_v1026 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1027 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1028 = *(uint64_t*)(__twr_v1027);
    __twr_v1029 = (uint64_t)(&"SDK_BASE");
    __twr_v1030 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1026)(__twr_v1028, __twr_v1029);
    _mng_macro976 = __twr_v1030;
    if (_mng_macro976) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v1031 = (uint64_t)(&TlUserError);
    __twr_v1032 = (uint64_t)(&"SDK_BASE wasn't defined in the config");
    __twr_v1033 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1031)(__twr_v1032, __twr_v1033, __twr_v1033, __twr_v1033);
    __twr_l133:;
    __twr_v1034 = 264ULL;
    __twr_v1035 = _mng_macro976 + __twr_v1034;
    __twr_v1036 = *(uint8_t*)(__twr_v1035);
    if (!(__twr_v1036)) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    __twr_v1037 = (uint64_t)(&TlUserError);
    __twr_v1038 = (uint64_t)(&"SDK_BASE is a function macro for some reason");
    __twr_v1039 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1037)(__twr_v1038, __twr_v1039, __twr_v1039, __twr_v1039);
    __twr_l135:;
    __twr_v1040 = (uint64_t)(&TlCopyString);
    __twr_v1041 = (uint64_t)(&BtSdkBase);
    __twr_v1042 = 96ULL;
    __twr_v1043 = _mng_macro976 + __twr_v1042;
    __twr_v1044 = *(uint64_t*)(__twr_v1043);
    __twr_v1045 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1040)(__twr_v1041, __twr_v1044, __twr_v1045);
    __twr_v1046 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1047 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1048 = *(uint64_t*)(__twr_v1047);
    __twr_v1049 = (uint64_t)(&"ARCH_NAME_SUFFIX");
    __twr_v1050 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1046)(__twr_v1048, __twr_v1049);
    _mng_macro976 = __twr_v1050;
    if (!(_mng_macro976)) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v1051 = 264ULL;
    __twr_v1052 = _mng_macro976 + __twr_v1051;
    __twr_v1053 = *(uint8_t*)(__twr_v1052);
    if (!(__twr_v1053)) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v1054 = (uint64_t)(&TlUserError);
    __twr_v1055 = (uint64_t)(&"ARCH_NAME_SUFFIX is a function macro for some reason");
    __twr_v1056 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1054)(__twr_v1055, __twr_v1056, __twr_v1056, __twr_v1056);
    __twr_l139:;
    __twr_v1057 = (uint64_t)(&TlCopyString);
    __twr_v1058 = (uint64_t)(&BtArchNameSuffix);
    __twr_v1059 = 1ULL;
    __twr_v1060 = 96ULL;
    __twr_v1061 = _mng_macro976 + __twr_v1060;
    __twr_v1062 = *(uint64_t*)(__twr_v1061);
    __twr_v1063 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1057)(__twr_v1058, __twr_v1062, __twr_v1063);
    __twr_v1064 = (uint64_t)(&BtArchHasSuffix);
    *(uint64_t*)(__twr_v1064) = __twr_v1059;
    __twr_l137:;
    __twr_v1065 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1066 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1067 = *(uint64_t*)(__twr_v1066);
    __twr_v1068 = (uint64_t)(&"CLEANUP");
    __twr_v1069 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1065)(__twr_v1067, __twr_v1068);
    _mng_macro976 = __twr_v1069;
    if (!(_mng_macro976)) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v1070 = 264ULL;
    __twr_v1071 = _mng_macro976 + __twr_v1070;
    __twr_v1072 = *(uint8_t*)(__twr_v1071);
    if (!(__twr_v1072)) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v1073 = (uint64_t)(&TlUserError);
    __twr_v1074 = (uint64_t)(&"CLEANUP is a function macro for some reason");
    __twr_v1075 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1073)(__twr_v1074, __twr_v1075, __twr_v1075, __twr_v1075);
    __twr_l143:;
    __twr_v1076 = 1ULL;
    __twr_v1077 = (uint64_t)(&BtCleanUp);
    *(uint64_t*)(__twr_v1077) = __twr_v1076;
    __twr_l141:;
    __twr_v1078 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1079 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1080 = *(uint64_t*)(__twr_v1079);
    __twr_v1081 = (uint64_t)(&"VERBOSE");
    __twr_v1082 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1078)(__twr_v1080, __twr_v1081);
    _mng_macro976 = __twr_v1082;
    if (!(_mng_macro976)) { goto __twr_l145; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v1083 = 264ULL;
    __twr_v1084 = _mng_macro976 + __twr_v1083;
    __twr_v1085 = *(uint8_t*)(__twr_v1084);
    if (!(__twr_v1085)) { goto __twr_l147; } else { goto __twr_l148; }
    __twr_l148:;
    __twr_v1086 = (uint64_t)(&TlUserError);
    __twr_v1087 = (uint64_t)(&"VERBOSE is a function macro for some reason");
    __twr_v1088 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1086)(__twr_v1087, __twr_v1088, __twr_v1088, __twr_v1088);
    __twr_l147:;
    __twr_v1089 = 1ULL;
    __twr_v1090 = (uint64_t)(&BtVerbose);
    *(uint64_t*)(__twr_v1090) = __twr_v1089;
    __twr_l145:;
    __twr_l118:;
    _jkl_epilogue:;
}

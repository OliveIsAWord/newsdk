#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback123, uint64_t _mng_context124, uint64_t _mng_fmt125, uint64_t _mng_argv126, uint64_t _mng_argc127);
extern void TlPrintByCallback(uint64_t _mng_callback128, uint64_t _mng_context129, uint64_t _mng_fmt130, uint64_t _mng_argv131, uint64_t _mng_argc132);
extern void TlPrintByVarTable(uint64_t _mng_handle133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByHandle(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrint(uint64_t _mng_fmt141, uint64_t _mng_argv142, uint64_t _mng_argc143);
extern void TlFormatByVarTable(uint64_t _mng_dest144, uint64_t _mng_bufsize145, uint64_t _mng_fmt146, uint64_t _mng_argv147, uint64_t _mng_argc148);
extern void TlFormat(uint64_t _mng_dest149, uint64_t _mng_bufsize150, uint64_t _mng_fmt151, uint64_t _mng_argv152, uint64_t _mng_argc153);
extern void TlError(uint64_t _mng_fmt154, uint64_t _mng_argv155, uint64_t _mng_argc156);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg157);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename158, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock159, uint64_t _mng_filepath160);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope161);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg162);
extern void LexExpandMacro(uint64_t _mng_macro163, uint64_t _mng_token164);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream165, uint64_t _mng_macro166);
extern void LexUninitializeStream(uint64_t _mng_stream167);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream168);
extern void LexPushStream(uint64_t _mng_stream169);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream170, uint64_t _mng_fileblock171, uint64_t _mng_handle172);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock173, uint64_t _mng_handle174);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest175, uint64_t _mng_src176);
extern void LexGetToken(uint64_t _mng_token177);
extern void LexPutbackToken(uint64_t _mng_token178);
extern uint64_t LexMatchToken(uint64_t _mng_token179, uint64_t _mng_type180, uint64_t _mng_subtype181);
extern void LexError(uint64_t _mng_token182, uint64_t _mng_fmt183, uint64_t _mng_argv184, uint64_t _mng_argc185);
extern uint64_t LexCrunchNumber(uint64_t _mng_token186, uint64_t _mng_buffer187);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath188);
uint64_t BtTargetHashTable[196];
uint64_t BtCurrentTarget;
uint64_t BtCHost = 0ULL;
uint64_t BtArchHasSuffix = 0ULL;
uint64_t BtCleanUp = 0ULL;
uint64_t BtVerbose = 0ULL;
uint64_t BtTargetArchitectureName[8];
uint64_t BtSdkBase[32];
uint64_t BtArchNameSuffix[32];
extern uint64_t FeTargetName[32];
uint64_t BtSelectedTarget;
void BtParseStandardPath(uint64_t _mng_stdpath189, uint64_t _mng_fullpath190, uint64_t _mng_errtoken191) {
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_stdpathstr195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t _mng_count206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t _mng_macro226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t _mng_macro257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    __twr_v192 = 16ULL;
    __twr_v193 = _mng_stdpath189 + __twr_v192;
    __twr_v194 = *(uint64_t*)(__twr_v193);
    _mng_stdpathstr195 = __twr_v194;
    __twr_v196 = *(uint8_t*)(_mng_stdpathstr195);
    if (__twr_v196) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v197 = (uint64_t)(&LexError);
    __twr_v198 = (uint64_t)(&"Empty path string\n");
    __twr_v199 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v197)(_mng_errtoken191, __twr_v198, __twr_v199, __twr_v199);
    __twr_l2:;
    __twr_v200 = *(uint8_t*)(_mng_stdpathstr195);
    __twr_v201 = 47ULL;
    if (__twr_v200 != __twr_v201) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v202 = (uint64_t)(&LexError);
    __twr_v203 = (uint64_t)(&"Expected a relative path, found an absolute path\n");
    __twr_v204 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(_mng_errtoken191, __twr_v203, __twr_v204, __twr_v204);
    __twr_l4:;
    __twr_v205 = *(uint64_t*)(_mng_stdpath189);
    _mng_count206 = __twr_v205;
    __twr_v207 = *(uint8_t*)(_mng_stdpathstr195);
    __twr_v208 = 60ULL;
    if (__twr_v207 == __twr_v208) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v209 = (uint64_t)(&TlCopyParentPath);
    __twr_v210 = (uint64_t)(&LexCurrentStream);
    __twr_v211 = *(uint64_t*)(__twr_v210);
    __twr_v212 = 8ULL;
    __twr_v213 = __twr_v211 + __twr_v212;
    __twr_v214 = *(uint64_t*)(__twr_v213);
    __twr_v215 = 48ULL;
    __twr_v216 = __twr_v214 + __twr_v215;
    ((void (*)(uint64_t, uint64_t))__twr_v209)(__twr_v216, _mng_fullpath190);
    goto __twr_l6;
    __twr_l8:;
    __twr_v217 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v218 = (uint64_t)(&"<sdk>/");
    __twr_v219 = 5ULL;
    __twr_v220 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v217)(_mng_stdpathstr195, __twr_v218, __twr_v219);
    if (__twr_v220) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v221 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v222 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v223 = *(uint64_t*)(__twr_v222);
    __twr_v224 = (uint64_t)(&"SDK_BASE");
    __twr_v225 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v221)(__twr_v223, __twr_v224);
    _mng_macro226 = __twr_v225;
    if (_mng_macro226) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v227 = (uint64_t)(&LexError);
    __twr_v228 = (uint64_t)(&"SDK_BASE isn't defined\n");
    __twr_v229 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v227)(_mng_errtoken191, __twr_v228, __twr_v229, __twr_v229);
    __twr_l11:;
    __twr_v230 = 264ULL;
    __twr_v231 = _mng_macro226 + __twr_v230;
    __twr_v232 = *(uint8_t*)(__twr_v231);
    if (!(__twr_v232)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v233 = (uint64_t)(&LexError);
    __twr_v234 = (uint64_t)(&"SDK_BASE is a function macro for some reason\n");
    __twr_v235 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v233)(_mng_errtoken191, __twr_v234, __twr_v235, __twr_v235);
    __twr_l13:;
    __twr_v236 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v237 = 80ULL;
    __twr_v238 = _mng_macro226 + __twr_v237;
    __twr_v239 = 96ULL;
    __twr_v240 = _mng_macro226 + __twr_v239;
    __twr_v241 = *(uint64_t*)(__twr_v240);
    __twr_v242 = 1ULL;
    __twr_v243 = *(uint64_t*)(__twr_v238);
    __twr_v244 = __twr_v243 - __twr_v242;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v236)(_mng_fullpath190, __twr_v241, __twr_v244);
    __twr_v245 = 6ULL;
    __twr_v246 = _mng_stdpathstr195 + __twr_v245;
    _mng_stdpathstr195 = __twr_v246;
    __twr_v247 = _mng_count206 - __twr_v245;
    _mng_count206 = __twr_v247;
    goto __twr_l6;
    __twr_l10:;
    __twr_v248 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v249 = (uint64_t)(&"<bld>/");
    __twr_v250 = 5ULL;
    __twr_v251 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v248)(_mng_stdpathstr195, __twr_v249, __twr_v250);
    if (__twr_v251) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v252 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v253 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v254 = *(uint64_t*)(__twr_v253);
    __twr_v255 = (uint64_t)(&"BUILD_BASE");
    __twr_v256 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v252)(__twr_v254, __twr_v255);
    _mng_macro257 = __twr_v256;
    if (_mng_macro257) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v258 = (uint64_t)(&LexError);
    __twr_v259 = (uint64_t)(&"BUILD_BASE isn't defined\n");
    __twr_v260 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v258)(_mng_errtoken191, __twr_v259, __twr_v260, __twr_v260);
    __twr_l17:;
    __twr_v261 = 264ULL;
    __twr_v262 = _mng_macro257 + __twr_v261;
    __twr_v263 = *(uint8_t*)(__twr_v262);
    if (!(__twr_v263)) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v264 = (uint64_t)(&LexError);
    __twr_v265 = (uint64_t)(&"BUILD_BASE is a function macro for some reason\n");
    __twr_v266 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v264)(_mng_errtoken191, __twr_v265, __twr_v266, __twr_v266);
    __twr_l19:;
    __twr_v267 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v268 = 80ULL;
    __twr_v269 = _mng_macro257 + __twr_v268;
    __twr_v270 = 96ULL;
    __twr_v271 = _mng_macro257 + __twr_v270;
    __twr_v272 = *(uint64_t*)(__twr_v271);
    __twr_v273 = 1ULL;
    __twr_v274 = *(uint64_t*)(__twr_v269);
    __twr_v275 = __twr_v274 - __twr_v273;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v267)(_mng_fullpath190, __twr_v272, __twr_v275);
    __twr_v276 = 6ULL;
    __twr_v277 = _mng_stdpathstr195 + __twr_v276;
    _mng_stdpathstr195 = __twr_v277;
    __twr_v278 = _mng_count206 - __twr_v276;
    _mng_count206 = __twr_v278;
    goto __twr_l6;
    __twr_l16:;
    __twr_v279 = (uint64_t)(&LexError);
    __twr_v280 = (uint64_t)(&"Unknown path prefix\n");
    __twr_v281 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v279)(_mng_errtoken191, __twr_v280, __twr_v281, __twr_v281);
    __twr_l6:;
    __twr_v282 = *(uint64_t*)(_mng_fullpath190);
    if (__twr_v282) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v283 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v284 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v283)(_mng_fullpath190, __twr_v284);
    __twr_v285 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v283)(_mng_fullpath190, __twr_v285);
    goto __twr_l21;
    __twr_l23:;
    __twr_v286 = 16ULL;
    __twr_v287 = _mng_fullpath190 + __twr_v286;
    __twr_v288 = *(uint64_t*)(__twr_v287);
    __twr_v289 = *(uint64_t*)(_mng_fullpath190);
    __twr_v290 = 1ULL;
    __twr_v291 = __twr_v289 - __twr_v290;
    __twr_v292 = __twr_v288 + __twr_v291;
    __twr_v293 = *(uint8_t*)(__twr_v292);
    __twr_v294 = 47ULL;
    if (__twr_v293 == __twr_v294) { goto __twr_l21; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v295 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v296 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v295)(_mng_fullpath190, __twr_v296);
    __twr_l21:;
    __twr_v297 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v297)(_mng_fullpath190, _mng_stdpathstr195, _mng_count206);
    __twr_l1:;
    _jkl_epilogue:;
}
void BtTargetInfoFile() {
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t _mng_token300[4];
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t _mng_string310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    __twr_v298 = (uint64_t)(&LexMatchToken);
    __twr_v299 = (uint64_t)(&_mng_token300);
    __twr_v301 = 4ULL;
    __twr_v302 = 0ULL;
    __twr_v303 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v298)(__twr_v299, __twr_v301, __twr_v302);
    if (__twr_v303) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v304 = (uint64_t)(&LexError);
    __twr_v305 = (uint64_t)(&_mng_token300);
    __twr_v306 = (uint64_t)(&"Expected a string\n");
    __twr_v307 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v304)(__twr_v305, __twr_v306, __twr_v307, __twr_v307);
    __twr_l26:;
    __twr_v308 = (uint64_t)(&_mng_token300);
    __twr_v309 = *(uint64_t*)(__twr_v308);
    _mng_string310 = __twr_v309;
    __twr_v311 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v312 = (uint64_t)(&BtCurrentTarget);
    __twr_v313 = *(uint64_t*)(__twr_v312);
    __twr_v314 = 608ULL;
    __twr_v315 = __twr_v313 + __twr_v314;
    ((void (*)(uint64_t))__twr_v311)(__twr_v315);
    __twr_v316 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v317 = *(uint64_t*)(__twr_v312);
    __twr_v318 = __twr_v317 + __twr_v314;
    ((void (*)(uint64_t))__twr_v316)(__twr_v318);
    __twr_v319 = (uint64_t)(&BtParseStandardPath);
    __twr_v320 = 48ULL;
    __twr_v321 = _mng_string310 + __twr_v320;
    __twr_v322 = *(uint64_t*)(__twr_v312);
    __twr_v323 = __twr_v322 + __twr_v314;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v319)(__twr_v321, __twr_v323, __twr_v308);
    __twr_v324 = 1ULL;
    __twr_v325 = *(uint64_t*)(__twr_v312);
    __twr_v326 = 825ULL;
    __twr_v327 = __twr_v325 + __twr_v326;
    *(uint8_t*)(__twr_v327) = __twr_v324;
    __twr_l25:;
    _jkl_epilogue:;
}
void BtTargetInfoDepend() {
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t _mng_token330[4];
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t _mng_string340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t _mng_target347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_head356;
    uint64_t __twr_v357;
    uint64_t _mng_listentry358;
    uint64_t _mng_entry359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t _mng_entry367;
    uint64_t _mng_status368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t _mng_listhead378;
    uint64_t _mng_listentry379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t _mng_last383;
    uint64_t __twr_v384;
    __twr_v328 = (uint64_t)(&LexMatchToken);
    __twr_v329 = (uint64_t)(&_mng_token330);
    __twr_v331 = 4ULL;
    __twr_v332 = 0ULL;
    __twr_v333 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v328)(__twr_v329, __twr_v331, __twr_v332);
    if (__twr_v333) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v334 = (uint64_t)(&LexError);
    __twr_v335 = (uint64_t)(&_mng_token330);
    __twr_v336 = (uint64_t)(&"Expected a string\n");
    __twr_v337 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v334)(__twr_v335, __twr_v336, __twr_v337, __twr_v337);
    __twr_l29:;
    __twr_v338 = (uint64_t)(&_mng_token330);
    __twr_v339 = *(uint64_t*)(__twr_v338);
    _mng_string340 = __twr_v339;
    __twr_v341 = (uint64_t)(&TlLookupHashTable);
    __twr_v342 = (uint64_t)(&BtTargetHashTable);
    __twr_v343 = 64ULL;
    __twr_v344 = _mng_string340 + __twr_v343;
    __twr_v345 = *(uint64_t*)(__twr_v344);
    __twr_v346 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v341)(__twr_v342, __twr_v345);
    _mng_target347 = __twr_v346;
    if (_mng_target347) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v348 = (uint64_t)(&LexError);
    __twr_v349 = (uint64_t)(&_mng_token330);
    __twr_v350 = (uint64_t)(&"Target not defined\n");
    __twr_v351 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v348)(__twr_v349, __twr_v350, __twr_v351, __twr_v351);
    __twr_l31:;
    __twr_v352 = (uint64_t)(&BtCurrentTarget);
    __twr_v353 = *(uint64_t*)(__twr_v352);
    __twr_v354 = 576ULL;
    __twr_v355 = __twr_v353 + __twr_v354;
    _mng_head356 = __twr_v355;
    __twr_v357 = *(uint64_t*)(_mng_head356);
    _mng_listentry358 = __twr_v357;
    if (_mng_head356 == _mng_listentry358) { goto __twr_l34; } else { goto __twr_l33; }
    __twr_l33:;
    _mng_entry359 = _mng_listentry358;
    __twr_v360 = 16ULL;
    __twr_v361 = _mng_entry359 + __twr_v360;
    __twr_v362 = *(uint64_t*)(__twr_v361);
    if (__twr_v362 != _mng_target347) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    goto _jkl_epilogue;
    __twr_l36:;
    __twr_v363 = *(uint64_t*)(_mng_listentry358);
    _mng_listentry358 = __twr_v363;
    __twr_l35:;
    if (_mng_head356 != _mng_listentry358) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    __twr_v364 = (uint64_t)(&TlBumpAlloc);
    __twr_v365 = 24ULL;
    __twr_v366 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v364)(__twr_v365, (uint64_t)(&_mng_entry367));
    _mng_status368 = __twr_v366;
    if (!(_mng_status368)) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v369 = (uint64_t)(&TlInternalError);
    __twr_v370 = (uint64_t)(&"Failed to allocate depends list entry");
    __twr_v371 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v369)(__twr_v370, __twr_v371, __twr_v371, __twr_v371);
    __twr_l38:;
    __twr_v372 = 16ULL;
    __twr_v373 = _mng_entry367 + __twr_v372;
    *(uint64_t*)(__twr_v373) = _mng_target347;
    __twr_v374 = (uint64_t)(&BtCurrentTarget);
    __twr_v375 = *(uint64_t*)(__twr_v374);
    __twr_v376 = 576ULL;
    __twr_v377 = __twr_v375 + __twr_v376;
    _mng_listhead378 = __twr_v377;
    _mng_listentry379 = _mng_entry367;
    __twr_v380 = 8ULL;
    __twr_v381 = _mng_listhead378 + __twr_v380;
    __twr_v382 = *(uint64_t*)(__twr_v381);
    _mng_last383 = __twr_v382;
    __twr_v384 = _mng_listentry379 + __twr_v380;
    *(uint64_t*)(__twr_v384) = _mng_last383;
    *(uint64_t*)(_mng_listentry379) = _mng_listhead378;
    *(uint64_t*)(_mng_last383) = _mng_listentry379;
    *(uint64_t*)(__twr_v381) = _mng_listentry379;
    __twr_l28:;
    _jkl_epilogue:;
}
void BtTargetInfoSources() {
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t _mng_token387[4];
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t _mng_string397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t _mng_entry401;
    uint64_t _mng_status402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t _mng_filepath411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t _mng_listhead429;
    uint64_t _mng_listentry430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t _mng_last434;
    uint64_t __twr_v435;
    __twr_v385 = (uint64_t)(&LexMatchToken);
    __twr_v386 = (uint64_t)(&_mng_token387);
    __twr_v388 = 4ULL;
    __twr_v389 = 0ULL;
    __twr_v390 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v385)(__twr_v386, __twr_v388, __twr_v389);
    if (__twr_v390) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v391 = (uint64_t)(&LexError);
    __twr_v392 = (uint64_t)(&_mng_token387);
    __twr_v393 = (uint64_t)(&"Expected a string\n");
    __twr_v394 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v391)(__twr_v392, __twr_v393, __twr_v394, __twr_v394);
    __twr_l41:;
    __twr_v395 = (uint64_t)(&_mng_token387);
    __twr_v396 = *(uint64_t*)(__twr_v395);
    _mng_string397 = __twr_v396;
    __twr_v398 = (uint64_t)(&TlBumpAlloc);
    __twr_v399 = 105ULL;
    __twr_v400 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v398)(__twr_v399, (uint64_t)(&_mng_entry401));
    _mng_status402 = __twr_v400;
    if (!(_mng_status402)) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v403 = (uint64_t)(&TlInternalError);
    __twr_v404 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v405 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v403)(__twr_v404, __twr_v405, __twr_v405, __twr_v405);
    __twr_l43:;
    __twr_v406 = 0ULL;
    __twr_v407 = 104ULL;
    __twr_v408 = _mng_entry401 + __twr_v407;
    *(uint8_t*)(__twr_v408) = __twr_v406;
    __twr_v409 = 16ULL;
    __twr_v410 = _mng_entry401 + __twr_v409;
    _mng_filepath411 = __twr_v410;
    __twr_v412 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v412)(_mng_filepath411);
    __twr_v413 = (uint64_t)(&BtParseStandardPath);
    __twr_v414 = 48ULL;
    __twr_v415 = _mng_string397 + __twr_v414;
    __twr_v416 = (uint64_t)(&_mng_token387);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v413)(__twr_v415, _mng_filepath411, __twr_v416);
    __twr_v417 = (uint64_t)(&TlIsPathDirectory);
    __twr_v418 = _mng_filepath411 + __twr_v409;
    __twr_v419 = *(uint64_t*)(__twr_v418);
    __twr_v420 = ((uint64_t (*)(uint64_t))__twr_v417)(__twr_v419);
    if (__twr_v420) { goto __twr_l45; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v421 = (uint64_t)(&LexError);
    __twr_v422 = (uint64_t)(&_mng_token387);
    __twr_v423 = (uint64_t)(&"Doesn't exist or not a directory\n");
    __twr_v424 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v421)(__twr_v422, __twr_v423, __twr_v424, __twr_v424);
    __twr_l45:;
    __twr_v425 = (uint64_t)(&BtCurrentTarget);
    __twr_v426 = *(uint64_t*)(__twr_v425);
    __twr_v427 = 592ULL;
    __twr_v428 = __twr_v426 + __twr_v427;
    _mng_listhead429 = __twr_v428;
    _mng_listentry430 = _mng_entry401;
    __twr_v431 = 8ULL;
    __twr_v432 = _mng_listhead429 + __twr_v431;
    __twr_v433 = *(uint64_t*)(__twr_v432);
    _mng_last434 = __twr_v433;
    __twr_v435 = _mng_listentry430 + __twr_v431;
    *(uint64_t*)(__twr_v435) = _mng_last434;
    *(uint64_t*)(_mng_listentry430) = _mng_listhead429;
    *(uint64_t*)(_mng_last434) = _mng_listentry430;
    *(uint64_t*)(__twr_v432) = _mng_listentry430;
    __twr_l40:;
    _jkl_epilogue:;
}
void BtTargetInfoObjects() {
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t _mng_token438[4];
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t _mng_string448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t _mng_entry452;
    uint64_t _mng_status453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t _mng_filepath459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t _mng_listhead480;
    uint64_t _mng_listentry481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t _mng_last485;
    uint64_t __twr_v486;
    __twr_v436 = (uint64_t)(&LexMatchToken);
    __twr_v437 = (uint64_t)(&_mng_token438);
    __twr_v439 = 4ULL;
    __twr_v440 = 0ULL;
    __twr_v441 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v436)(__twr_v437, __twr_v439, __twr_v440);
    if (__twr_v441) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v442 = (uint64_t)(&LexError);
    __twr_v443 = (uint64_t)(&_mng_token438);
    __twr_v444 = (uint64_t)(&"Expected a string");
    __twr_v445 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v442)(__twr_v443, __twr_v444, __twr_v445, __twr_v445);
    __twr_l48:;
    __twr_v446 = (uint64_t)(&_mng_token438);
    __twr_v447 = *(uint64_t*)(__twr_v446);
    _mng_string448 = __twr_v447;
    __twr_v449 = (uint64_t)(&TlBumpAlloc);
    __twr_v450 = 105ULL;
    __twr_v451 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v449)(__twr_v450, (uint64_t)(&_mng_entry452));
    _mng_status453 = __twr_v451;
    if (!(_mng_status453)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v454 = (uint64_t)(&TlInternalError);
    __twr_v455 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v456 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v454)(__twr_v455, __twr_v456, __twr_v456, __twr_v456);
    __twr_l50:;
    __twr_v457 = 16ULL;
    __twr_v458 = _mng_entry452 + __twr_v457;
    _mng_filepath459 = __twr_v458;
    __twr_v460 = 1ULL;
    __twr_v461 = 104ULL;
    __twr_v462 = _mng_entry452 + __twr_v461;
    *(uint8_t*)(__twr_v462) = __twr_v460;
    __twr_v463 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v463)(_mng_filepath459);
    __twr_v464 = (uint64_t)(&BtParseStandardPath);
    __twr_v465 = 48ULL;
    __twr_v466 = _mng_string448 + __twr_v465;
    __twr_v467 = (uint64_t)(&_mng_token438);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v464)(__twr_v466, _mng_filepath459, __twr_v467);
    __twr_v468 = (uint64_t)(&TlIsPathDirectory);
    __twr_v469 = _mng_filepath459 + __twr_v457;
    __twr_v470 = *(uint64_t*)(__twr_v469);
    __twr_v471 = ((uint64_t (*)(uint64_t))__twr_v468)(__twr_v470);
    if (__twr_v471) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v472 = (uint64_t)(&LexError);
    __twr_v473 = (uint64_t)(&_mng_token438);
    __twr_v474 = (uint64_t)(&"Doesn't exist or not a directory\n");
    __twr_v475 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v472)(__twr_v473, __twr_v474, __twr_v475, __twr_v475);
    __twr_l52:;
    __twr_v476 = (uint64_t)(&BtCurrentTarget);
    __twr_v477 = *(uint64_t*)(__twr_v476);
    __twr_v478 = 592ULL;
    __twr_v479 = __twr_v477 + __twr_v478;
    _mng_listhead480 = __twr_v479;
    _mng_listentry481 = _mng_entry452;
    __twr_v482 = 8ULL;
    __twr_v483 = _mng_listhead480 + __twr_v482;
    __twr_v484 = *(uint64_t*)(__twr_v483);
    _mng_last485 = __twr_v484;
    __twr_v486 = _mng_listentry481 + __twr_v482;
    *(uint64_t*)(__twr_v486) = _mng_last485;
    *(uint64_t*)(_mng_listentry481) = _mng_listhead480;
    *(uint64_t*)(_mng_last485) = _mng_listentry481;
    *(uint64_t*)(__twr_v483) = _mng_listentry481;
    __twr_l47:;
    _jkl_epilogue:;
}
void BtTargetInfoJklInclude() {
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t _mng_token489[4];
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t _mng_string499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t _mng_filepath502[11];
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    __twr_v487 = (uint64_t)(&LexMatchToken);
    __twr_v488 = (uint64_t)(&_mng_token489);
    __twr_v490 = 4ULL;
    __twr_v491 = 0ULL;
    __twr_v492 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v487)(__twr_v488, __twr_v490, __twr_v491);
    if (__twr_v492) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v493 = (uint64_t)(&LexError);
    __twr_v494 = (uint64_t)(&_mng_token489);
    __twr_v495 = (uint64_t)(&"Expected a string\n");
    __twr_v496 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v493)(__twr_v494, __twr_v495, __twr_v496, __twr_v496);
    __twr_l55:;
    __twr_v497 = (uint64_t)(&_mng_token489);
    __twr_v498 = *(uint64_t*)(__twr_v497);
    _mng_string499 = __twr_v498;
    __twr_v500 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v501 = (uint64_t)(&_mng_filepath502);
    ((void (*)(uint64_t))__twr_v500)(__twr_v501);
    __twr_v503 = (uint64_t)(&BtParseStandardPath);
    __twr_v504 = 48ULL;
    __twr_v505 = _mng_string499 + __twr_v504;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v503)(__twr_v505, __twr_v501, __twr_v497);
    __twr_v506 = (uint64_t)(&BtCurrentTarget);
    __twr_v507 = *(uint64_t*)(__twr_v506);
    __twr_v508 = 400ULL;
    __twr_v509 = __twr_v507 + __twr_v508;
    __twr_v510 = *(uint64_t*)(__twr_v509);
    if (!(__twr_v510)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v511 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v512 = (uint64_t)(&BtCurrentTarget);
    __twr_v513 = *(uint64_t*)(__twr_v512);
    __twr_v514 = 400ULL;
    __twr_v515 = __twr_v513 + __twr_v514;
    __twr_v516 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v511)(__twr_v515, __twr_v516);
    __twr_l57:;
    __twr_v517 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v518 = (uint64_t)(&BtCurrentTarget);
    __twr_v519 = *(uint64_t*)(__twr_v518);
    __twr_v520 = 400ULL;
    __twr_v521 = __twr_v519 + __twr_v520;
    __twr_v522 = (uint64_t)(&_mng_filepath502);
    __twr_v523 = 16ULL;
    __twr_v524 = __twr_v522 + __twr_v523;
    __twr_v525 = *(uint64_t*)(__twr_v524);
    __twr_v526 = *(uint64_t*)(__twr_v522);
    __twr_v527 = 1ULL;
    __twr_v528 = __twr_v526 - __twr_v527;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v517)(__twr_v521, __twr_v525, __twr_v528);
    __twr_v529 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v529)(__twr_v522);
    __twr_l54:;
    _jkl_epilogue:;
}
void BtTargetInfoLibDir() {
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t _mng_token532[4];
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t _mng_string542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t _mng_filepath545[11];
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    __twr_v530 = (uint64_t)(&LexMatchToken);
    __twr_v531 = (uint64_t)(&_mng_token532);
    __twr_v533 = 4ULL;
    __twr_v534 = 0ULL;
    __twr_v535 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v530)(__twr_v531, __twr_v533, __twr_v534);
    if (__twr_v535) { goto __twr_l60; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v536 = (uint64_t)(&LexError);
    __twr_v537 = (uint64_t)(&_mng_token532);
    __twr_v538 = (uint64_t)(&"Expected a string\n");
    __twr_v539 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v536)(__twr_v537, __twr_v538, __twr_v539, __twr_v539);
    __twr_l60:;
    __twr_v540 = (uint64_t)(&_mng_token532);
    __twr_v541 = *(uint64_t*)(__twr_v540);
    _mng_string542 = __twr_v541;
    __twr_v543 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v544 = (uint64_t)(&_mng_filepath545);
    ((void (*)(uint64_t))__twr_v543)(__twr_v544);
    __twr_v546 = (uint64_t)(&BtParseStandardPath);
    __twr_v547 = 48ULL;
    __twr_v548 = _mng_string542 + __twr_v547;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v546)(__twr_v548, __twr_v544, __twr_v540);
    __twr_v549 = (uint64_t)(&BtCurrentTarget);
    __twr_v550 = *(uint64_t*)(__twr_v549);
    __twr_v551 = 488ULL;
    __twr_v552 = __twr_v550 + __twr_v551;
    __twr_v553 = *(uint64_t*)(__twr_v552);
    if (!(__twr_v553)) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v554 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v555 = (uint64_t)(&BtCurrentTarget);
    __twr_v556 = *(uint64_t*)(__twr_v555);
    __twr_v557 = 488ULL;
    __twr_v558 = __twr_v556 + __twr_v557;
    __twr_v559 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v554)(__twr_v558, __twr_v559);
    __twr_l62:;
    __twr_v560 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v561 = (uint64_t)(&BtCurrentTarget);
    __twr_v562 = *(uint64_t*)(__twr_v561);
    __twr_v563 = 488ULL;
    __twr_v564 = __twr_v562 + __twr_v563;
    __twr_v565 = (uint64_t)(&_mng_filepath545);
    __twr_v566 = 16ULL;
    __twr_v567 = __twr_v565 + __twr_v566;
    __twr_v568 = *(uint64_t*)(__twr_v567);
    __twr_v569 = *(uint64_t*)(__twr_v565);
    __twr_v570 = 1ULL;
    __twr_v571 = __twr_v569 - __twr_v570;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v560)(__twr_v564, __twr_v568, __twr_v571);
    __twr_v572 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v572)(__twr_v565);
    __twr_l59:;
    _jkl_epilogue:;
}
void BtTargetInfoLinkOpt() {
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t _mng_token575[4];
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t _mng_string585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t _mng_str588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    __twr_v573 = (uint64_t)(&LexMatchToken);
    __twr_v574 = (uint64_t)(&_mng_token575);
    __twr_v576 = 4ULL;
    __twr_v577 = 0ULL;
    __twr_v578 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v573)(__twr_v574, __twr_v576, __twr_v577);
    if (__twr_v578) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v579 = (uint64_t)(&LexError);
    __twr_v580 = (uint64_t)(&_mng_token575);
    __twr_v581 = (uint64_t)(&"Expected a string\n");
    __twr_v582 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v579)(__twr_v580, __twr_v581, __twr_v582, __twr_v582);
    __twr_l65:;
    __twr_v583 = (uint64_t)(&_mng_token575);
    __twr_v584 = *(uint64_t*)(__twr_v583);
    _mng_string585 = __twr_v584;
    __twr_v586 = 48ULL;
    __twr_v587 = _mng_string585 + __twr_v586;
    _mng_str588 = __twr_v587;
    __twr_v589 = (uint64_t)(&BtCurrentTarget);
    __twr_v590 = *(uint64_t*)(__twr_v589);
    __twr_v591 = __twr_v590 + __twr_v586;
    __twr_v592 = *(uint64_t*)(__twr_v591);
    if (!(__twr_v592)) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v593 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v594 = (uint64_t)(&BtCurrentTarget);
    __twr_v595 = *(uint64_t*)(__twr_v594);
    __twr_v596 = 48ULL;
    __twr_v597 = __twr_v595 + __twr_v596;
    __twr_v598 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v593)(__twr_v597, __twr_v598);
    __twr_l67:;
    __twr_v599 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v600 = (uint64_t)(&BtCurrentTarget);
    __twr_v601 = *(uint64_t*)(__twr_v600);
    __twr_v602 = 48ULL;
    __twr_v603 = __twr_v601 + __twr_v602;
    __twr_v604 = 16ULL;
    __twr_v605 = _mng_str588 + __twr_v604;
    __twr_v606 = *(uint64_t*)(__twr_v605);
    __twr_v607 = *(uint64_t*)(_mng_str588);
    __twr_v608 = 1ULL;
    __twr_v609 = __twr_v607 - __twr_v608;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v599)(__twr_v603, __twr_v606, __twr_v609);
    __twr_l64:;
    _jkl_epilogue:;
}
void BtTargetInfoJklOpt() {
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t _mng_token612[4];
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t _mng_string622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t _mng_str625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    __twr_v610 = (uint64_t)(&LexMatchToken);
    __twr_v611 = (uint64_t)(&_mng_token612);
    __twr_v613 = 4ULL;
    __twr_v614 = 0ULL;
    __twr_v615 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v610)(__twr_v611, __twr_v613, __twr_v614);
    if (__twr_v615) { goto __twr_l70; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v616 = (uint64_t)(&LexError);
    __twr_v617 = (uint64_t)(&_mng_token612);
    __twr_v618 = (uint64_t)(&"Expected a string\n");
    __twr_v619 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v616)(__twr_v617, __twr_v618, __twr_v619, __twr_v619);
    __twr_l70:;
    __twr_v620 = (uint64_t)(&_mng_token612);
    __twr_v621 = *(uint64_t*)(__twr_v620);
    _mng_string622 = __twr_v621;
    __twr_v623 = 48ULL;
    __twr_v624 = _mng_string622 + __twr_v623;
    _mng_str625 = __twr_v624;
    __twr_v626 = (uint64_t)(&BtCurrentTarget);
    __twr_v627 = *(uint64_t*)(__twr_v626);
    __twr_v628 = 312ULL;
    __twr_v629 = __twr_v627 + __twr_v628;
    __twr_v630 = *(uint64_t*)(__twr_v629);
    if (!(__twr_v630)) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v631 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v632 = (uint64_t)(&BtCurrentTarget);
    __twr_v633 = *(uint64_t*)(__twr_v632);
    __twr_v634 = 312ULL;
    __twr_v635 = __twr_v633 + __twr_v634;
    __twr_v636 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v631)(__twr_v635, __twr_v636);
    __twr_l72:;
    __twr_v637 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v638 = (uint64_t)(&BtCurrentTarget);
    __twr_v639 = *(uint64_t*)(__twr_v638);
    __twr_v640 = 312ULL;
    __twr_v641 = __twr_v639 + __twr_v640;
    __twr_v642 = 16ULL;
    __twr_v643 = _mng_str625 + __twr_v642;
    __twr_v644 = *(uint64_t*)(__twr_v643);
    __twr_v645 = *(uint64_t*)(_mng_str625);
    __twr_v646 = 1ULL;
    __twr_v647 = __twr_v645 - __twr_v646;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v637)(__twr_v641, __twr_v644, __twr_v647);
    __twr_l69:;
    _jkl_epilogue:;
}
void BtTargetInfoLink() {
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t _mng_token650[4];
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t _mng_string660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t _mng_filepath663[11];
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    __twr_v648 = (uint64_t)(&LexMatchToken);
    __twr_v649 = (uint64_t)(&_mng_token650);
    __twr_v651 = 4ULL;
    __twr_v652 = 0ULL;
    __twr_v653 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v648)(__twr_v649, __twr_v651, __twr_v652);
    if (__twr_v653) { goto __twr_l75; } else { goto __twr_l76; }
    __twr_l76:;
    __twr_v654 = (uint64_t)(&LexError);
    __twr_v655 = (uint64_t)(&_mng_token650);
    __twr_v656 = (uint64_t)(&"Expected a string\n");
    __twr_v657 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v654)(__twr_v655, __twr_v656, __twr_v657, __twr_v657);
    __twr_l75:;
    __twr_v658 = (uint64_t)(&_mng_token650);
    __twr_v659 = *(uint64_t*)(__twr_v658);
    _mng_string660 = __twr_v659;
    __twr_v661 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v662 = (uint64_t)(&_mng_filepath663);
    ((void (*)(uint64_t))__twr_v661)(__twr_v662);
    __twr_v664 = (uint64_t)(&BtParseStandardPath);
    __twr_v665 = 48ULL;
    __twr_v666 = _mng_string660 + __twr_v665;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v664)(__twr_v666, __twr_v662, __twr_v658);
    __twr_v667 = (uint64_t)(&BtCurrentTarget);
    __twr_v668 = *(uint64_t*)(__twr_v667);
    __twr_v669 = 136ULL;
    __twr_v670 = __twr_v668 + __twr_v669;
    __twr_v671 = *(uint64_t*)(__twr_v670);
    if (!(__twr_v671)) { goto __twr_l77; } else { goto __twr_l78; }
    __twr_l78:;
    __twr_v672 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v673 = (uint64_t)(&BtCurrentTarget);
    __twr_v674 = *(uint64_t*)(__twr_v673);
    __twr_v675 = 136ULL;
    __twr_v676 = __twr_v674 + __twr_v675;
    __twr_v677 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v672)(__twr_v676, __twr_v677);
    __twr_l77:;
    __twr_v678 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v679 = (uint64_t)(&BtCurrentTarget);
    __twr_v680 = *(uint64_t*)(__twr_v679);
    __twr_v681 = 136ULL;
    __twr_v682 = __twr_v680 + __twr_v681;
    __twr_v683 = (uint64_t)(&_mng_filepath663);
    __twr_v684 = 16ULL;
    __twr_v685 = __twr_v683 + __twr_v684;
    __twr_v686 = *(uint64_t*)(__twr_v685);
    __twr_v687 = *(uint64_t*)(__twr_v683);
    __twr_v688 = 1ULL;
    __twr_v689 = __twr_v687 - __twr_v688;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v678)(__twr_v682, __twr_v686, __twr_v689);
    __twr_v690 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v690)(__twr_v683);
    __twr_l74:;
    _jkl_epilogue:;
}
void BtTargetInfoDyLink() {
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t _mng_token693[4];
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t _mng_rtstring704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t _mng_ctpathtoken707[4];
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t _mng_ctstring716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t _mng_filepath719[11];
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    __twr_v691 = (uint64_t)(&LexMatchToken);
    __twr_v692 = (uint64_t)(&_mng_token693);
    __twr_v694 = 4ULL;
    __twr_v695 = 0ULL;
    __twr_v696 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v691)(__twr_v692, __twr_v694, __twr_v695);
    if (__twr_v696) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v697 = (uint64_t)(&LexError);
    __twr_v698 = (uint64_t)(&_mng_token693);
    __twr_v699 = (uint64_t)(&"Expected a string\n");
    __twr_v700 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v697)(__twr_v698, __twr_v699, __twr_v700, __twr_v700);
    __twr_l80:;
    __twr_v701 = (uint64_t)(&_mng_token693);
    __twr_v702 = 0ULL;
    __twr_v703 = *(uint64_t*)(__twr_v701);
    _mng_rtstring704 = __twr_v703;
    __twr_v705 = (uint64_t)(&LexMatchToken);
    __twr_v706 = (uint64_t)(&_mng_ctpathtoken707);
    __twr_v708 = 4ULL;
    __twr_v709 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v705)(__twr_v706, __twr_v708, __twr_v702);
    if (__twr_v709) { goto __twr_l82; } else { goto __twr_l83; }
    __twr_l83:;
    __twr_v710 = (uint64_t)(&LexError);
    __twr_v711 = (uint64_t)(&_mng_ctpathtoken707);
    __twr_v712 = (uint64_t)(&"Expected a string\n");
    __twr_v713 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v710)(__twr_v711, __twr_v712, __twr_v713, __twr_v713);
    __twr_l82:;
    __twr_v714 = (uint64_t)(&_mng_ctpathtoken707);
    __twr_v715 = *(uint64_t*)(__twr_v714);
    _mng_ctstring716 = __twr_v715;
    __twr_v717 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v718 = (uint64_t)(&_mng_filepath719);
    ((void (*)(uint64_t))__twr_v717)(__twr_v718);
    __twr_v720 = (uint64_t)(&BtParseStandardPath);
    __twr_v721 = 48ULL;
    __twr_v722 = _mng_ctstring716 + __twr_v721;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v720)(__twr_v722, __twr_v718, __twr_v714);
    __twr_v723 = (uint64_t)(&BtCurrentTarget);
    __twr_v724 = *(uint64_t*)(__twr_v723);
    __twr_v725 = 224ULL;
    __twr_v726 = __twr_v724 + __twr_v725;
    __twr_v727 = *(uint64_t*)(__twr_v726);
    if (!(__twr_v727)) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v728 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v729 = (uint64_t)(&BtCurrentTarget);
    __twr_v730 = *(uint64_t*)(__twr_v729);
    __twr_v731 = 224ULL;
    __twr_v732 = __twr_v730 + __twr_v731;
    __twr_v733 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v728)(__twr_v732, __twr_v733);
    __twr_l84:;
    __twr_v734 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v735 = (uint64_t)(&BtCurrentTarget);
    __twr_v736 = *(uint64_t*)(__twr_v735);
    __twr_v737 = 224ULL;
    __twr_v738 = __twr_v736 + __twr_v737;
    __twr_v739 = 48ULL;
    __twr_v740 = _mng_rtstring704 + __twr_v739;
    __twr_v741 = 16ULL;
    __twr_v742 = 64ULL;
    __twr_v743 = _mng_rtstring704 + __twr_v742;
    __twr_v744 = *(uint64_t*)(__twr_v743);
    __twr_v745 = *(uint64_t*)(__twr_v740);
    __twr_v746 = 1ULL;
    __twr_v747 = __twr_v745 - __twr_v746;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v734)(__twr_v738, __twr_v744, __twr_v747);
    __twr_v748 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v749 = *(uint64_t*)(__twr_v735);
    __twr_v750 = __twr_v749 + __twr_v737;
    __twr_v751 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v748)(__twr_v750, __twr_v751);
    __twr_v752 = *(uint64_t*)(__twr_v735);
    __twr_v753 = __twr_v752 + __twr_v737;
    __twr_v754 = (uint64_t)(&_mng_filepath719);
    __twr_v755 = __twr_v754 + __twr_v741;
    __twr_v756 = *(uint64_t*)(__twr_v755);
    __twr_v757 = *(uint64_t*)(__twr_v754);
    __twr_v758 = __twr_v757 - __twr_v746;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v734)(__twr_v753, __twr_v756, __twr_v758);
    __twr_v759 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v759)(__twr_v754);
    __twr_l79:;
    _jkl_epilogue:;
}
void BtTargetInfoPrebuilt() {
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t _mng_token762[4];
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t _mng_string772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    __twr_v760 = (uint64_t)(&LexMatchToken);
    __twr_v761 = (uint64_t)(&_mng_token762);
    __twr_v763 = 4ULL;
    __twr_v764 = 0ULL;
    __twr_v765 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v760)(__twr_v761, __twr_v763, __twr_v764);
    if (__twr_v765) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v766 = (uint64_t)(&LexError);
    __twr_v767 = (uint64_t)(&_mng_token762);
    __twr_v768 = (uint64_t)(&"Expected a string\n");
    __twr_v769 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v766)(__twr_v767, __twr_v768, __twr_v769, __twr_v769);
    __twr_l87:;
    __twr_v770 = (uint64_t)(&_mng_token762);
    __twr_v771 = *(uint64_t*)(__twr_v770);
    _mng_string772 = __twr_v771;
    __twr_v773 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v774 = (uint64_t)(&BtCurrentTarget);
    __twr_v775 = *(uint64_t*)(__twr_v774);
    __twr_v776 = 696ULL;
    __twr_v777 = __twr_v775 + __twr_v776;
    ((void (*)(uint64_t))__twr_v773)(__twr_v777);
    __twr_v778 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v779 = *(uint64_t*)(__twr_v774);
    __twr_v780 = __twr_v779 + __twr_v776;
    ((void (*)(uint64_t))__twr_v778)(__twr_v780);
    __twr_v781 = (uint64_t)(&BtParseStandardPath);
    __twr_v782 = 48ULL;
    __twr_v783 = _mng_string772 + __twr_v782;
    __twr_v784 = *(uint64_t*)(__twr_v774);
    __twr_v785 = __twr_v784 + __twr_v776;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v781)(__twr_v783, __twr_v785, __twr_v770);
    __twr_v786 = 1ULL;
    __twr_v787 = *(uint64_t*)(__twr_v774);
    __twr_v788 = 826ULL;
    __twr_v789 = __twr_v787 + __twr_v788;
    *(uint8_t*)(__twr_v789) = __twr_v786;
    __twr_l86:;
    _jkl_epilogue:;
}
uint64_t BtTargetInfoSpecifiers[11] = {
    (uint64_t)(&BtTargetInfoFile),
    (uint64_t)(&BtTargetInfoDepend),
    (uint64_t)(&BtTargetInfoSources),
    (uint64_t)(&BtTargetInfoJklInclude),
    (uint64_t)(&BtTargetInfoLibDir),
    (uint64_t)(&BtTargetInfoLinkOpt),
    (uint64_t)(&BtTargetInfoJklOpt),
    (uint64_t)(&BtTargetInfoLink),
    (uint64_t)(&BtTargetInfoDyLink),
    (uint64_t)(&BtTargetInfoPrebuilt),
    (uint64_t)(&BtTargetInfoObjects),
};
uint64_t BtParseTarget() {
    uint64_t _jkl_retv;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t _mng_token792[4];
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t _mng_nametoken809[4];
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t _mng_namestring819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t _mng_target833;
    uint64_t _mng_status834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t _mng_listhead864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t _mng_listhead869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t _mng_listhead873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t _mng_listhead877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t _mng_listhead881;
    uint64_t __twr_v882;
    uint64_t _mng_listentry883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t _mng_macro886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t _mng_exprec890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t __twr_v893;
    uint64_t __twr_v894;
    uint64_t __twr_v895;
    uint64_t __twr_v896;
    uint64_t __twr_v897;
    uint64_t _mng_listhead898;
    uint64_t _mng_listentry899;
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t __twr_v902;
    uint64_t _mng_last903;
    uint64_t __twr_v904;
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t __twr_v907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    uint64_t __twr_v915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint64_t __twr_v933;
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t __twr_v936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    uint64_t __twr_v942;
    uint64_t __twr_v943;
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t __twr_v946;
    __twr_v790 = (uint64_t)(&LexGetToken);
    __twr_v791 = (uint64_t)(&_mng_token792);
    ((void (*)(uint64_t))__twr_v790)(__twr_v791);
    __twr_v793 = 24ULL;
    __twr_v794 = __twr_v791 + __twr_v793;
    __twr_v795 = *(uint8_t*)(__twr_v794);
    __twr_v796 = 6ULL;
    if (__twr_v795 != __twr_v796) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v797 = 0ULL;
    _jkl_retv = __twr_v797;
    goto _jkl_epilogue;
    __twr_l90:;
    __twr_v798 = (uint64_t)(&_mng_token792);
    __twr_v799 = 24ULL;
    __twr_v800 = __twr_v798 + __twr_v799;
    __twr_v801 = *(uint8_t*)(__twr_v800);
    __twr_v802 = 1ULL;
    if (__twr_v801 == __twr_v802) { goto __twr_l92; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v803 = (uint64_t)(&LexError);
    __twr_v804 = (uint64_t)(&_mng_token792);
    __twr_v805 = (uint64_t)(&"Expected TARGET\n");
    __twr_v806 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v803)(__twr_v804, __twr_v805, __twr_v806, __twr_v806);
    __twr_l92:;
    __twr_v807 = (uint64_t)(&LexMatchToken);
    __twr_v808 = (uint64_t)(&_mng_nametoken809);
    __twr_v810 = 4ULL;
    __twr_v811 = 0ULL;
    __twr_v812 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v807)(__twr_v808, __twr_v810, __twr_v811);
    if (__twr_v812) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v813 = (uint64_t)(&LexError);
    __twr_v814 = (uint64_t)(&_mng_nametoken809);
    __twr_v815 = (uint64_t)(&"Expected a string\n");
    __twr_v816 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v813)(__twr_v814, __twr_v815, __twr_v816, __twr_v816);
    __twr_l94:;
    __twr_v817 = (uint64_t)(&_mng_nametoken809);
    __twr_v818 = *(uint64_t*)(__twr_v817);
    _mng_namestring819 = __twr_v818;
    __twr_v820 = (uint64_t)(&TlLookupHashTable);
    __twr_v821 = (uint64_t)(&BtTargetHashTable);
    __twr_v822 = 64ULL;
    __twr_v823 = _mng_namestring819 + __twr_v822;
    __twr_v824 = *(uint64_t*)(__twr_v823);
    __twr_v825 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v820)(__twr_v821, __twr_v824);
    if (!(__twr_v825)) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v826 = (uint64_t)(&LexError);
    __twr_v827 = (uint64_t)(&_mng_nametoken809);
    __twr_v828 = (uint64_t)(&"Target already defined\n");
    __twr_v829 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v826)(__twr_v827, __twr_v828, __twr_v829, __twr_v829);
    __twr_l96:;
    __twr_v830 = (uint64_t)(&TlBumpAlloc);
    __twr_v831 = 827ULL;
    __twr_v832 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v830)(__twr_v831, (uint64_t)(&_mng_target833));
    _mng_status834 = __twr_v832;
    if (!(_mng_status834)) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v835 = (uint64_t)(&TlInternalError);
    __twr_v836 = (uint64_t)(&"Failed to allocate target");
    __twr_v837 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v835)(__twr_v836, __twr_v837, __twr_v837, __twr_v837);
    __twr_l98:;
    __twr_v838 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v839 = 48ULL;
    __twr_v840 = _mng_target833 + __twr_v839;
    ((void (*)(uint64_t))__twr_v838)(__twr_v840);
    __twr_v841 = 312ULL;
    __twr_v842 = _mng_target833 + __twr_v841;
    ((void (*)(uint64_t))__twr_v838)(__twr_v842);
    __twr_v843 = 400ULL;
    __twr_v844 = _mng_target833 + __twr_v843;
    ((void (*)(uint64_t))__twr_v838)(__twr_v844);
    __twr_v845 = 488ULL;
    __twr_v846 = _mng_target833 + __twr_v845;
    ((void (*)(uint64_t))__twr_v838)(__twr_v846);
    __twr_v847 = 136ULL;
    __twr_v848 = _mng_target833 + __twr_v847;
    ((void (*)(uint64_t))__twr_v838)(__twr_v848);
    __twr_v849 = 224ULL;
    __twr_v850 = _mng_target833 + __twr_v849;
    ((void (*)(uint64_t))__twr_v838)(__twr_v850);
    __twr_v851 = 608ULL;
    __twr_v852 = _mng_target833 + __twr_v851;
    ((void (*)(uint64_t))__twr_v838)(__twr_v852);
    __twr_v853 = 696ULL;
    __twr_v854 = _mng_target833 + __twr_v853;
    ((void (*)(uint64_t))__twr_v838)(__twr_v854);
    __twr_v855 = 0ULL;
    __twr_v856 = 824ULL;
    __twr_v857 = _mng_target833 + __twr_v856;
    *(uint8_t*)(__twr_v857) = __twr_v855;
    __twr_v858 = 825ULL;
    __twr_v859 = _mng_target833 + __twr_v858;
    *(uint8_t*)(__twr_v859) = __twr_v855;
    __twr_v860 = 826ULL;
    __twr_v861 = _mng_target833 + __twr_v860;
    *(uint8_t*)(__twr_v861) = __twr_v855;
    __twr_v862 = 576ULL;
    __twr_v863 = _mng_target833 + __twr_v862;
    _mng_listhead864 = __twr_v863;
    __twr_v865 = 8ULL;
    __twr_v866 = _mng_listhead864 + __twr_v865;
    *(uint64_t*)(__twr_v866) = _mng_listhead864;
    *(uint64_t*)(_mng_listhead864) = _mng_listhead864;
    __twr_v867 = 592ULL;
    __twr_v868 = _mng_target833 + __twr_v867;
    _mng_listhead869 = __twr_v868;
    __twr_v870 = _mng_listhead869 + __twr_v865;
    *(uint64_t*)(__twr_v870) = _mng_listhead869;
    *(uint64_t*)(_mng_listhead869) = _mng_listhead869;
    __twr_v871 = 784ULL;
    __twr_v872 = _mng_target833 + __twr_v871;
    _mng_listhead873 = __twr_v872;
    __twr_v874 = _mng_listhead873 + __twr_v865;
    *(uint64_t*)(__twr_v874) = _mng_listhead873;
    *(uint64_t*)(_mng_listhead873) = _mng_listhead873;
    __twr_v875 = 800ULL;
    __twr_v876 = _mng_target833 + __twr_v875;
    _mng_listhead877 = __twr_v876;
    __twr_v878 = _mng_listhead877 + __twr_v865;
    *(uint64_t*)(__twr_v878) = _mng_listhead877;
    *(uint64_t*)(_mng_listhead877) = _mng_listhead877;
    __twr_v879 = (uint64_t)(&BtCurrentTarget);
    *(uint64_t*)(__twr_v879) = _mng_target833;
    __twr_v880 = (uint64_t)(&LexExposedMacroListHead);
    _mng_listhead881 = __twr_v880;
    __twr_v882 = *(uint64_t*)(_mng_listhead881);
    _mng_listentry883 = __twr_v882;
    if (_mng_listentry883 == _mng_listhead881) { goto __twr_l101; } else { goto __twr_l100; }
    __twr_l100:;
    __twr_v884 = 232ULL;
    __twr_v885 = _mng_listentry883 - __twr_v884;
    _mng_macro886 = __twr_v885;
    __twr_v887 = (uint64_t)(&TlBumpAlloc);
    __twr_v888 = 24ULL;
    __twr_v889 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v887)(__twr_v888, (uint64_t)(&_mng_exprec890));
    _mng_status834 = __twr_v889;
    if (!(_mng_status834)) { goto __twr_l103; } else { goto __twr_l104; }
    __twr_l104:;
    __twr_v891 = (uint64_t)(&TlInternalError);
    __twr_v892 = (uint64_t)(&"Failed to allocate exposed macro record");
    __twr_v893 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v891)(__twr_v892, __twr_v893, __twr_v893, __twr_v893);
    __twr_l103:;
    __twr_v894 = 16ULL;
    __twr_v895 = _mng_exprec890 + __twr_v894;
    *(uint64_t*)(__twr_v895) = _mng_macro886;
    __twr_v896 = 800ULL;
    __twr_v897 = _mng_target833 + __twr_v896;
    _mng_listhead898 = __twr_v897;
    _mng_listentry899 = _mng_exprec890;
    __twr_v900 = 8ULL;
    __twr_v901 = _mng_listhead898 + __twr_v900;
    __twr_v902 = *(uint64_t*)(__twr_v901);
    _mng_last903 = __twr_v902;
    __twr_v904 = _mng_listentry899 + __twr_v900;
    *(uint64_t*)(__twr_v904) = _mng_last903;
    *(uint64_t*)(_mng_listentry899) = _mng_listhead898;
    *(uint64_t*)(_mng_last903) = _mng_listentry899;
    *(uint64_t*)(__twr_v901) = _mng_listentry899;
    __twr_v905 = *(uint64_t*)(_mng_listentry883);
    _mng_listentry883 = __twr_v905;
    __twr_l102:;
    if (_mng_listentry883 != _mng_listhead881) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v906 = (uint64_t)(&LexMatchToken);
    __twr_v907 = (uint64_t)(&_mng_token792);
    __twr_v908 = 3ULL;
    __twr_v909 = 0ULL;
    __twr_v910 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v906)(__twr_v907, __twr_v908, __twr_v909);
    if (__twr_v910) { goto __twr_l106; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v911 = (uint64_t)(&LexMatchToken);
    __twr_v912 = (uint64_t)(&_mng_token792);
    __twr_v913 = 2ULL;
    __twr_v914 = 0ULL;
    __twr_v915 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v911)(__twr_v912, __twr_v913, __twr_v914);
    if (__twr_v915) { goto __twr_l108; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v916 = (uint64_t)(&LexError);
    __twr_v917 = (uint64_t)(&_mng_token792);
    __twr_v918 = (uint64_t)(&"Expected a target info specifier\n");
    __twr_v919 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v916)(__twr_v917, __twr_v918, __twr_v919, __twr_v919);
    __twr_l108:;
    __twr_v920 = (uint64_t)(&BtTargetInfoSpecifiers);
    __twr_v921 = (uint64_t)(&_mng_token792);
    __twr_v922 = 25ULL;
    __twr_v923 = __twr_v921 + __twr_v922;
    __twr_v924 = *(uint8_t*)(__twr_v923);
    __twr_v925 = 3ULL;
    __twr_v926 = __twr_v924 << __twr_v925;
    __twr_v927 = __twr_v920 + __twr_v926;
    __twr_v928 = *(uint64_t*)(__twr_v927);
    ((void (*)())__twr_v928)();
    __twr_l107:;
    __twr_v929 = (uint64_t)(&LexMatchToken);
    __twr_v930 = (uint64_t)(&_mng_token792);
    __twr_v931 = 3ULL;
    __twr_v932 = 0ULL;
    __twr_v933 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v929)(__twr_v930, __twr_v931, __twr_v932);
    if (!(__twr_v933)) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v934 = (uint64_t)(&TlInsertHashTable);
    __twr_v935 = (uint64_t)(&BtTargetHashTable);
    __twr_v936 = 64ULL;
    __twr_v937 = _mng_namestring819 + __twr_v936;
    __twr_v938 = *(uint64_t*)(__twr_v937);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v934)(__twr_v935, _mng_target833, __twr_v938);
    __twr_v939 = 826ULL;
    __twr_v940 = _mng_target833 + __twr_v939;
    __twr_v941 = *(uint8_t*)(__twr_v940);
    if (!(__twr_v941)) { goto __twr_l110; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v942 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v943 = 696ULL;
    __twr_v944 = _mng_target833 + __twr_v943;
    __twr_v945 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v942)(__twr_v944, __twr_v945);
    __twr_l110:;
    __twr_v946 = 1ULL;
    _jkl_retv = __twr_v946;
    goto _jkl_epilogue;
    __twr_l89:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtParse() {
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t __twr_v953;
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    uint64_t __twr_v956;
    uint64_t _mng_target957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t _mng_VARTABLE961[1];
    uint64_t __twr_v962;
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    __twr_v947 = (uint64_t)(&TlInitializeHashTable);
    __twr_v948 = (uint64_t)(&BtTargetHashTable);
    ((void (*)(uint64_t))__twr_v947)(__twr_v948);
    __twr_v949 = (uint64_t)(&BtParseTarget);
    __twr_v950 = ((uint64_t (*)())__twr_v949)();
    if (!(__twr_v950)) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_l115:;
    __twr_v951 = (uint64_t)(&BtParseTarget);
    __twr_v952 = ((uint64_t (*)())__twr_v951)();
    if (__twr_v952) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v953 = (uint64_t)(&TlLookupHashTable);
    __twr_v954 = (uint64_t)(&BtTargetHashTable);
    __twr_v955 = (uint64_t)(&FeTargetName);
    __twr_v956 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v953)(__twr_v954, __twr_v955);
    _mng_target957 = __twr_v956;
    if (_mng_target957) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v958 = (uint64_t)(&TlError);
    __twr_v959 = (uint64_t)(&"Target '%s' not defined\n");
    __twr_v960 = (uint64_t)(&_mng_VARTABLE961);
    __twr_v962 = (uint64_t)(&FeTargetName);
    __twr_v963 = 1ULL;
    *(uint64_t*)(__twr_v960) = __twr_v962;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v958)(__twr_v959, __twr_v960, __twr_v963);
    __twr_l116:;
    __twr_v964 = (uint64_t)(&BtSelectedTarget);
    *(uint64_t*)(__twr_v964) = _mng_target957;
    __twr_l112:;
    _jkl_epilogue:;
}
void BtLookupConfigMacros() {
    uint64_t __twr_v965;
    uint64_t __twr_v966;
    uint64_t __twr_v967;
    uint64_t __twr_v968;
    uint64_t __twr_v969;
    uint64_t _mng_macro970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t __twr_v975;
    uint64_t __twr_v976;
    uint64_t __twr_v977;
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t __twr_v990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t __twr_v1008;
    uint64_t __twr_v1009;
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    __twr_v965 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v966 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v967 = *(uint64_t*)(__twr_v966);
    __twr_v968 = (uint64_t)(&"ARCHITECTURE");
    __twr_v969 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v965)(__twr_v967, __twr_v968);
    _mng_macro970 = __twr_v969;
    if (_mng_macro970) { goto __twr_l119; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v971 = (uint64_t)(&TlError);
    __twr_v972 = (uint64_t)(&"ARCHITECTURE wasn't defined in the config\n");
    __twr_v973 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v971)(__twr_v972, __twr_v973, __twr_v973);
    __twr_l119:;
    __twr_v974 = 264ULL;
    __twr_v975 = _mng_macro970 + __twr_v974;
    __twr_v976 = *(uint8_t*)(__twr_v975);
    if (!(__twr_v976)) { goto __twr_l121; } else { goto __twr_l122; }
    __twr_l122:;
    __twr_v977 = (uint64_t)(&TlError);
    __twr_v978 = (uint64_t)(&"ARCHITECTURE is a function macro for some reason\n");
    __twr_v979 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v977)(__twr_v978, __twr_v979, __twr_v979);
    __twr_l121:;
    __twr_v980 = (uint64_t)(&TlCopyString);
    __twr_v981 = (uint64_t)(&BtTargetArchitectureName);
    __twr_v982 = 96ULL;
    __twr_v983 = _mng_macro970 + __twr_v982;
    __twr_v984 = *(uint64_t*)(__twr_v983);
    __twr_v985 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v980)(__twr_v981, __twr_v984, __twr_v985);
    __twr_v986 = (uint64_t)(&TlCompareString);
    __twr_v987 = (uint64_t)(&"CHost");
    __twr_v988 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v986)(__twr_v981, __twr_v987);
    if (__twr_v988) { goto __twr_l123; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v989 = 1ULL;
    __twr_v990 = (uint64_t)(&BtCHost);
    *(uint64_t*)(__twr_v990) = __twr_v989;
    __twr_l123:;
    __twr_v991 = 1ULL;
    __twr_v992 = (uint64_t)(&BtJobCount);
    *(uint64_t*)(__twr_v992) = __twr_v991;
    __twr_v993 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v994 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v995 = *(uint64_t*)(__twr_v994);
    __twr_v996 = (uint64_t)(&"JOBS");
    __twr_v997 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v993)(__twr_v995, __twr_v996);
    _mng_macro970 = __twr_v997;
    if (!(_mng_macro970)) { goto __twr_l125; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v998 = 264ULL;
    __twr_v999 = _mng_macro970 + __twr_v998;
    __twr_v1000 = *(uint8_t*)(__twr_v999);
    if (!(__twr_v1000)) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v1001 = (uint64_t)(&TlError);
    __twr_v1002 = (uint64_t)(&"JOBS is a function macro for some reason\n");
    __twr_v1003 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1001)(__twr_v1002, __twr_v1003, __twr_v1003);
    __twr_l127:;
    __twr_v1004 = (uint64_t)(&TlStringToNumber);
    __twr_v1005 = 96ULL;
    __twr_v1006 = _mng_macro970 + __twr_v1005;
    __twr_v1007 = *(uint64_t*)(__twr_v1006);
    __twr_v1008 = 18446744073709551615ULL;
    __twr_v1009 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v1004)(__twr_v1007, __twr_v1008, (uint64_t)(&__twr_v1010));
    __twr_v1011 = (uint64_t)(&BtJobCount);
    *(uint64_t*)(__twr_v1011) = __twr_v1010;
    if (__twr_v1009) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v1012 = (uint64_t)(&TlError);
    __twr_v1013 = (uint64_t)(&"JOBS wasn't a numeric value\n");
    __twr_v1014 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1012)(__twr_v1013, __twr_v1014, __twr_v1014);
    __twr_l129:;
    __twr_v1015 = (uint64_t)(&BtJobCount);
    __twr_v1016 = *(uint64_t*)(__twr_v1015);
    if (__twr_v1016) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v1017 = (uint64_t)(&TlError);
    __twr_v1018 = (uint64_t)(&"Zero JOBS specified\n");
    __twr_v1019 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1017)(__twr_v1018, __twr_v1019, __twr_v1019);
    __twr_l131:;
    __twr_l125:;
    __twr_v1020 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1021 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1022 = *(uint64_t*)(__twr_v1021);
    __twr_v1023 = (uint64_t)(&"SDK_BASE");
    __twr_v1024 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1020)(__twr_v1022, __twr_v1023);
    _mng_macro970 = __twr_v1024;
    if (_mng_macro970) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v1025 = (uint64_t)(&TlError);
    __twr_v1026 = (uint64_t)(&"SDK_BASE wasn't defined in the config\n");
    __twr_v1027 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1025)(__twr_v1026, __twr_v1027, __twr_v1027);
    __twr_l133:;
    __twr_v1028 = 264ULL;
    __twr_v1029 = _mng_macro970 + __twr_v1028;
    __twr_v1030 = *(uint8_t*)(__twr_v1029);
    if (!(__twr_v1030)) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    __twr_v1031 = (uint64_t)(&TlError);
    __twr_v1032 = (uint64_t)(&"SDK_BASE is a function macro for some reason\n");
    __twr_v1033 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1031)(__twr_v1032, __twr_v1033, __twr_v1033);
    __twr_l135:;
    __twr_v1034 = (uint64_t)(&TlCopyString);
    __twr_v1035 = (uint64_t)(&BtSdkBase);
    __twr_v1036 = 96ULL;
    __twr_v1037 = _mng_macro970 + __twr_v1036;
    __twr_v1038 = *(uint64_t*)(__twr_v1037);
    __twr_v1039 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1034)(__twr_v1035, __twr_v1038, __twr_v1039);
    __twr_v1040 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1041 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1042 = *(uint64_t*)(__twr_v1041);
    __twr_v1043 = (uint64_t)(&"ARCH_NAME_SUFFIX");
    __twr_v1044 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1040)(__twr_v1042, __twr_v1043);
    _mng_macro970 = __twr_v1044;
    if (!(_mng_macro970)) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v1045 = 264ULL;
    __twr_v1046 = _mng_macro970 + __twr_v1045;
    __twr_v1047 = *(uint8_t*)(__twr_v1046);
    if (!(__twr_v1047)) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v1048 = (uint64_t)(&TlError);
    __twr_v1049 = (uint64_t)(&"ARCH_NAME_SUFFIX is a function macro for some reason\n");
    __twr_v1050 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1048)(__twr_v1049, __twr_v1050, __twr_v1050);
    __twr_l139:;
    __twr_v1051 = (uint64_t)(&TlCopyString);
    __twr_v1052 = (uint64_t)(&BtArchNameSuffix);
    __twr_v1053 = 1ULL;
    __twr_v1054 = 96ULL;
    __twr_v1055 = _mng_macro970 + __twr_v1054;
    __twr_v1056 = *(uint64_t*)(__twr_v1055);
    __twr_v1057 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1051)(__twr_v1052, __twr_v1056, __twr_v1057);
    __twr_v1058 = (uint64_t)(&BtArchHasSuffix);
    *(uint64_t*)(__twr_v1058) = __twr_v1053;
    __twr_l137:;
    __twr_v1059 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1060 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1061 = *(uint64_t*)(__twr_v1060);
    __twr_v1062 = (uint64_t)(&"CLEANUP");
    __twr_v1063 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1059)(__twr_v1061, __twr_v1062);
    _mng_macro970 = __twr_v1063;
    if (!(_mng_macro970)) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v1064 = 264ULL;
    __twr_v1065 = _mng_macro970 + __twr_v1064;
    __twr_v1066 = *(uint8_t*)(__twr_v1065);
    if (!(__twr_v1066)) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v1067 = (uint64_t)(&TlError);
    __twr_v1068 = (uint64_t)(&"CLEANUP is a function macro for some reason\n");
    __twr_v1069 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1067)(__twr_v1068, __twr_v1069, __twr_v1069);
    __twr_l143:;
    __twr_v1070 = 1ULL;
    __twr_v1071 = (uint64_t)(&BtCleanUp);
    *(uint64_t*)(__twr_v1071) = __twr_v1070;
    __twr_l141:;
    __twr_v1072 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1073 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1074 = *(uint64_t*)(__twr_v1073);
    __twr_v1075 = (uint64_t)(&"VERBOSE");
    __twr_v1076 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1072)(__twr_v1074, __twr_v1075);
    _mng_macro970 = __twr_v1076;
    if (!(_mng_macro970)) { goto __twr_l145; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v1077 = 264ULL;
    __twr_v1078 = _mng_macro970 + __twr_v1077;
    __twr_v1079 = *(uint8_t*)(__twr_v1078);
    if (!(__twr_v1079)) { goto __twr_l147; } else { goto __twr_l148; }
    __twr_l148:;
    __twr_v1080 = (uint64_t)(&TlError);
    __twr_v1081 = (uint64_t)(&"VERBOSE is a function macro for some reason\n");
    __twr_v1082 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1080)(__twr_v1081, __twr_v1082, __twr_v1082);
    __twr_l147:;
    __twr_v1083 = 1ULL;
    __twr_v1084 = (uint64_t)(&BtVerbose);
    *(uint64_t*)(__twr_v1084) = __twr_v1083;
    __twr_l145:;
    __twr_l118:;
    _jkl_epilogue:;
}

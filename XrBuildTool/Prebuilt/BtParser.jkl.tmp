#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg161);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename162, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock163, uint64_t _mng_filepath164);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope165);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg166);
extern void LexExpandMacro(uint64_t _mng_macro167, uint64_t _mng_token168);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream169, uint64_t _mng_macro170);
extern void LexUninitializeStream(uint64_t _mng_stream171);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream172);
extern void LexPushStream(uint64_t _mng_stream173);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream174, uint64_t _mng_fileblock175, uint64_t _mng_handle176);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock177, uint64_t _mng_handle178);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest179, uint64_t _mng_src180);
extern void LexGetToken(uint64_t _mng_token181);
extern void LexPutbackToken(uint64_t _mng_token182);
extern uint64_t LexMatchToken(uint64_t _mng_token183, uint64_t _mng_type184, uint64_t _mng_subtype185);
extern void LexError(uint64_t _mng_token186, uint64_t _mng_fmt187, uint64_t _mng_argv188, uint64_t _mng_argc189);
extern uint64_t LexCrunchNumber(uint64_t _mng_token190, uint64_t _mng_buffer191);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtVerbose;
extern uint64_t BtStatFile(uint64_t _mng_fullpath192);
uint64_t BtTargetHashTable[196];
uint64_t BtCurrentTarget;
uint64_t BtCHost = 0ULL;
uint64_t BtArchHasSuffix = 0ULL;
uint64_t BtCleanUp = 0ULL;
uint64_t BtVerbose = 0ULL;
uint64_t BtTargetArchitectureName[8];
uint64_t BtSdkBase[32];
uint64_t BtArchNameSuffix[32];
extern uint64_t FeTargetName[32];
uint64_t BtSelectedTarget;
void BtParseStandardPath(uint64_t _mng_stdpath193, uint64_t _mng_fullpath194, uint64_t _mng_errtoken195) {
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t _mng_stdpathstr199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t _mng_count210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t _mng_macro230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t _mng_macro261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    __twr_v196 = 16ULL;
    __twr_v197 = _mng_stdpath193 + __twr_v196;
    __twr_v198 = *(uint64_t*)(__twr_v197);
    _mng_stdpathstr199 = __twr_v198;
    __twr_v200 = *(uint8_t*)(_mng_stdpathstr199);
    if (__twr_v200) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v201 = (uint64_t)(&LexError);
    __twr_v202 = (uint64_t)(&"Empty path string\n");
    __twr_v203 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v201)(_mng_errtoken195, __twr_v202, __twr_v203, __twr_v203);
    __twr_l2:;
    __twr_v204 = *(uint8_t*)(_mng_stdpathstr199);
    __twr_v205 = 47ULL;
    if (__twr_v204 != __twr_v205) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v206 = (uint64_t)(&LexError);
    __twr_v207 = (uint64_t)(&"Expected a relative path, found an absolute path\n");
    __twr_v208 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v206)(_mng_errtoken195, __twr_v207, __twr_v208, __twr_v208);
    __twr_l4:;
    __twr_v209 = *(uint64_t*)(_mng_stdpath193);
    _mng_count210 = __twr_v209;
    __twr_v211 = *(uint8_t*)(_mng_stdpathstr199);
    __twr_v212 = 60ULL;
    if (__twr_v211 == __twr_v212) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v213 = (uint64_t)(&TlCopyParentPath);
    __twr_v214 = (uint64_t)(&LexCurrentStream);
    __twr_v215 = *(uint64_t*)(__twr_v214);
    __twr_v216 = 8ULL;
    __twr_v217 = __twr_v215 + __twr_v216;
    __twr_v218 = *(uint64_t*)(__twr_v217);
    __twr_v219 = 48ULL;
    __twr_v220 = __twr_v218 + __twr_v219;
    ((void (*)(uint64_t, uint64_t))__twr_v213)(__twr_v220, _mng_fullpath194);
    goto __twr_l6;
    __twr_l8:;
    __twr_v221 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v222 = (uint64_t)(&"<sdk>/");
    __twr_v223 = 5ULL;
    __twr_v224 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v221)(_mng_stdpathstr199, __twr_v222, __twr_v223);
    if (__twr_v224) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v225 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v226 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v227 = *(uint64_t*)(__twr_v226);
    __twr_v228 = (uint64_t)(&"SDK_BASE");
    __twr_v229 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v225)(__twr_v227, __twr_v228);
    _mng_macro230 = __twr_v229;
    if (_mng_macro230) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v231 = (uint64_t)(&LexError);
    __twr_v232 = (uint64_t)(&"SDK_BASE isn't defined\n");
    __twr_v233 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v231)(_mng_errtoken195, __twr_v232, __twr_v233, __twr_v233);
    __twr_l11:;
    __twr_v234 = 264ULL;
    __twr_v235 = _mng_macro230 + __twr_v234;
    __twr_v236 = *(uint8_t*)(__twr_v235);
    if (!(__twr_v236)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v237 = (uint64_t)(&LexError);
    __twr_v238 = (uint64_t)(&"SDK_BASE is a function macro for some reason\n");
    __twr_v239 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v237)(_mng_errtoken195, __twr_v238, __twr_v239, __twr_v239);
    __twr_l13:;
    __twr_v240 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v241 = 80ULL;
    __twr_v242 = _mng_macro230 + __twr_v241;
    __twr_v243 = 96ULL;
    __twr_v244 = _mng_macro230 + __twr_v243;
    __twr_v245 = *(uint64_t*)(__twr_v244);
    __twr_v246 = 1ULL;
    __twr_v247 = *(uint64_t*)(__twr_v242);
    __twr_v248 = __twr_v247 - __twr_v246;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v240)(_mng_fullpath194, __twr_v245, __twr_v248);
    __twr_v249 = 6ULL;
    __twr_v250 = _mng_stdpathstr199 + __twr_v249;
    _mng_stdpathstr199 = __twr_v250;
    __twr_v251 = _mng_count210 - __twr_v249;
    _mng_count210 = __twr_v251;
    goto __twr_l6;
    __twr_l10:;
    __twr_v252 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v253 = (uint64_t)(&"<bld>/");
    __twr_v254 = 5ULL;
    __twr_v255 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v252)(_mng_stdpathstr199, __twr_v253, __twr_v254);
    if (__twr_v255) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v256 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v257 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v258 = *(uint64_t*)(__twr_v257);
    __twr_v259 = (uint64_t)(&"BUILD_BASE");
    __twr_v260 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v256)(__twr_v258, __twr_v259);
    _mng_macro261 = __twr_v260;
    if (_mng_macro261) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v262 = (uint64_t)(&LexError);
    __twr_v263 = (uint64_t)(&"BUILD_BASE isn't defined\n");
    __twr_v264 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v262)(_mng_errtoken195, __twr_v263, __twr_v264, __twr_v264);
    __twr_l17:;
    __twr_v265 = 264ULL;
    __twr_v266 = _mng_macro261 + __twr_v265;
    __twr_v267 = *(uint8_t*)(__twr_v266);
    if (!(__twr_v267)) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v268 = (uint64_t)(&LexError);
    __twr_v269 = (uint64_t)(&"BUILD_BASE is a function macro for some reason\n");
    __twr_v270 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v268)(_mng_errtoken195, __twr_v269, __twr_v270, __twr_v270);
    __twr_l19:;
    __twr_v271 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v272 = 80ULL;
    __twr_v273 = _mng_macro261 + __twr_v272;
    __twr_v274 = 96ULL;
    __twr_v275 = _mng_macro261 + __twr_v274;
    __twr_v276 = *(uint64_t*)(__twr_v275);
    __twr_v277 = 1ULL;
    __twr_v278 = *(uint64_t*)(__twr_v273);
    __twr_v279 = __twr_v278 - __twr_v277;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v271)(_mng_fullpath194, __twr_v276, __twr_v279);
    __twr_v280 = 6ULL;
    __twr_v281 = _mng_stdpathstr199 + __twr_v280;
    _mng_stdpathstr199 = __twr_v281;
    __twr_v282 = _mng_count210 - __twr_v280;
    _mng_count210 = __twr_v282;
    goto __twr_l6;
    __twr_l16:;
    __twr_v283 = (uint64_t)(&LexError);
    __twr_v284 = (uint64_t)(&"Unknown path prefix\n");
    __twr_v285 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v283)(_mng_errtoken195, __twr_v284, __twr_v285, __twr_v285);
    __twr_l6:;
    __twr_v286 = *(uint64_t*)(_mng_fullpath194);
    if (__twr_v286) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v287 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v288 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v287)(_mng_fullpath194, __twr_v288);
    __twr_v289 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v287)(_mng_fullpath194, __twr_v289);
    goto __twr_l21;
    __twr_l23:;
    __twr_v290 = 16ULL;
    __twr_v291 = _mng_fullpath194 + __twr_v290;
    __twr_v292 = *(uint64_t*)(__twr_v291);
    __twr_v293 = *(uint64_t*)(_mng_fullpath194);
    __twr_v294 = 1ULL;
    __twr_v295 = __twr_v293 - __twr_v294;
    __twr_v296 = __twr_v292 + __twr_v295;
    __twr_v297 = *(uint8_t*)(__twr_v296);
    __twr_v298 = 47ULL;
    if (__twr_v297 == __twr_v298) { goto __twr_l21; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v299 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v300 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v299)(_mng_fullpath194, __twr_v300);
    __twr_l21:;
    __twr_v301 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v301)(_mng_fullpath194, _mng_stdpathstr199, _mng_count210);
    __twr_l1:;
    _jkl_epilogue:;
}
void BtTargetInfoFile() {
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t _mng_token304[4];
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t _mng_string314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    __twr_v302 = (uint64_t)(&LexMatchToken);
    __twr_v303 = (uint64_t)(&_mng_token304);
    __twr_v305 = 4ULL;
    __twr_v306 = 0ULL;
    __twr_v307 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v302)(__twr_v303, __twr_v305, __twr_v306);
    if (__twr_v307) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v308 = (uint64_t)(&LexError);
    __twr_v309 = (uint64_t)(&_mng_token304);
    __twr_v310 = (uint64_t)(&"Expected a string\n");
    __twr_v311 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v308)(__twr_v309, __twr_v310, __twr_v311, __twr_v311);
    __twr_l26:;
    __twr_v312 = (uint64_t)(&_mng_token304);
    __twr_v313 = *(uint64_t*)(__twr_v312);
    _mng_string314 = __twr_v313;
    __twr_v315 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v316 = (uint64_t)(&BtCurrentTarget);
    __twr_v317 = *(uint64_t*)(__twr_v316);
    __twr_v318 = 608ULL;
    __twr_v319 = __twr_v317 + __twr_v318;
    ((void (*)(uint64_t))__twr_v315)(__twr_v319);
    __twr_v320 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v321 = *(uint64_t*)(__twr_v316);
    __twr_v322 = __twr_v321 + __twr_v318;
    ((void (*)(uint64_t))__twr_v320)(__twr_v322);
    __twr_v323 = (uint64_t)(&BtParseStandardPath);
    __twr_v324 = 48ULL;
    __twr_v325 = _mng_string314 + __twr_v324;
    __twr_v326 = *(uint64_t*)(__twr_v316);
    __twr_v327 = __twr_v326 + __twr_v318;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v323)(__twr_v325, __twr_v327, __twr_v312);
    __twr_v328 = 1ULL;
    __twr_v329 = *(uint64_t*)(__twr_v316);
    __twr_v330 = 825ULL;
    __twr_v331 = __twr_v329 + __twr_v330;
    *(uint8_t*)(__twr_v331) = __twr_v328;
    __twr_l25:;
    _jkl_epilogue:;
}
void BtTargetInfoDepend() {
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t _mng_token334[4];
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t _mng_string344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t _mng_target351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t _mng_head360;
    uint64_t __twr_v361;
    uint64_t _mng_listentry362;
    uint64_t _mng_entry363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t _mng_entry371;
    uint64_t _mng_status372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t _mng_listhead382;
    uint64_t _mng_listentry383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t _mng_last387;
    uint64_t __twr_v388;
    __twr_v332 = (uint64_t)(&LexMatchToken);
    __twr_v333 = (uint64_t)(&_mng_token334);
    __twr_v335 = 4ULL;
    __twr_v336 = 0ULL;
    __twr_v337 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v332)(__twr_v333, __twr_v335, __twr_v336);
    if (__twr_v337) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v338 = (uint64_t)(&LexError);
    __twr_v339 = (uint64_t)(&_mng_token334);
    __twr_v340 = (uint64_t)(&"Expected a string\n");
    __twr_v341 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v338)(__twr_v339, __twr_v340, __twr_v341, __twr_v341);
    __twr_l29:;
    __twr_v342 = (uint64_t)(&_mng_token334);
    __twr_v343 = *(uint64_t*)(__twr_v342);
    _mng_string344 = __twr_v343;
    __twr_v345 = (uint64_t)(&TlLookupHashTable);
    __twr_v346 = (uint64_t)(&BtTargetHashTable);
    __twr_v347 = 64ULL;
    __twr_v348 = _mng_string344 + __twr_v347;
    __twr_v349 = *(uint64_t*)(__twr_v348);
    __twr_v350 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v345)(__twr_v346, __twr_v349);
    _mng_target351 = __twr_v350;
    if (_mng_target351) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v352 = (uint64_t)(&LexError);
    __twr_v353 = (uint64_t)(&_mng_token334);
    __twr_v354 = (uint64_t)(&"Target not defined\n");
    __twr_v355 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v352)(__twr_v353, __twr_v354, __twr_v355, __twr_v355);
    __twr_l31:;
    __twr_v356 = (uint64_t)(&BtCurrentTarget);
    __twr_v357 = *(uint64_t*)(__twr_v356);
    __twr_v358 = 576ULL;
    __twr_v359 = __twr_v357 + __twr_v358;
    _mng_head360 = __twr_v359;
    __twr_v361 = *(uint64_t*)(_mng_head360);
    _mng_listentry362 = __twr_v361;
    if (_mng_head360 == _mng_listentry362) { goto __twr_l34; } else { goto __twr_l33; }
    __twr_l33:;
    _mng_entry363 = _mng_listentry362;
    __twr_v364 = 16ULL;
    __twr_v365 = _mng_entry363 + __twr_v364;
    __twr_v366 = *(uint64_t*)(__twr_v365);
    if (__twr_v366 != _mng_target351) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    goto _jkl_epilogue;
    __twr_l36:;
    __twr_v367 = *(uint64_t*)(_mng_listentry362);
    _mng_listentry362 = __twr_v367;
    __twr_l35:;
    if (_mng_head360 != _mng_listentry362) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    __twr_v368 = (uint64_t)(&TlBumpAlloc);
    __twr_v369 = 24ULL;
    __twr_v370 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v368)(__twr_v369, (uint64_t)(&_mng_entry371));
    _mng_status372 = __twr_v370;
    if (!(_mng_status372)) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v373 = (uint64_t)(&TlInternalError);
    __twr_v374 = (uint64_t)(&"Failed to allocate depends list entry");
    __twr_v375 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v373)(__twr_v374, __twr_v375, __twr_v375, __twr_v375);
    __twr_l38:;
    __twr_v376 = 16ULL;
    __twr_v377 = _mng_entry371 + __twr_v376;
    *(uint64_t*)(__twr_v377) = _mng_target351;
    __twr_v378 = (uint64_t)(&BtCurrentTarget);
    __twr_v379 = *(uint64_t*)(__twr_v378);
    __twr_v380 = 576ULL;
    __twr_v381 = __twr_v379 + __twr_v380;
    _mng_listhead382 = __twr_v381;
    _mng_listentry383 = _mng_entry371;
    __twr_v384 = 8ULL;
    __twr_v385 = _mng_listhead382 + __twr_v384;
    __twr_v386 = *(uint64_t*)(__twr_v385);
    _mng_last387 = __twr_v386;
    __twr_v388 = _mng_listentry383 + __twr_v384;
    *(uint64_t*)(__twr_v388) = _mng_last387;
    *(uint64_t*)(_mng_listentry383) = _mng_listhead382;
    *(uint64_t*)(_mng_last387) = _mng_listentry383;
    *(uint64_t*)(__twr_v385) = _mng_listentry383;
    __twr_l28:;
    _jkl_epilogue:;
}
void BtTargetInfoSources() {
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t _mng_token391[4];
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t _mng_string401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t _mng_entry405;
    uint64_t _mng_status406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t _mng_filepath415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t _mng_listhead433;
    uint64_t _mng_listentry434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t _mng_last438;
    uint64_t __twr_v439;
    __twr_v389 = (uint64_t)(&LexMatchToken);
    __twr_v390 = (uint64_t)(&_mng_token391);
    __twr_v392 = 4ULL;
    __twr_v393 = 0ULL;
    __twr_v394 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v389)(__twr_v390, __twr_v392, __twr_v393);
    if (__twr_v394) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v395 = (uint64_t)(&LexError);
    __twr_v396 = (uint64_t)(&_mng_token391);
    __twr_v397 = (uint64_t)(&"Expected a string\n");
    __twr_v398 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v395)(__twr_v396, __twr_v397, __twr_v398, __twr_v398);
    __twr_l41:;
    __twr_v399 = (uint64_t)(&_mng_token391);
    __twr_v400 = *(uint64_t*)(__twr_v399);
    _mng_string401 = __twr_v400;
    __twr_v402 = (uint64_t)(&TlBumpAlloc);
    __twr_v403 = 105ULL;
    __twr_v404 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v402)(__twr_v403, (uint64_t)(&_mng_entry405));
    _mng_status406 = __twr_v404;
    if (!(_mng_status406)) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v407 = (uint64_t)(&TlInternalError);
    __twr_v408 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v409 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v407)(__twr_v408, __twr_v409, __twr_v409, __twr_v409);
    __twr_l43:;
    __twr_v410 = 0ULL;
    __twr_v411 = 104ULL;
    __twr_v412 = _mng_entry405 + __twr_v411;
    *(uint8_t*)(__twr_v412) = __twr_v410;
    __twr_v413 = 16ULL;
    __twr_v414 = _mng_entry405 + __twr_v413;
    _mng_filepath415 = __twr_v414;
    __twr_v416 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v416)(_mng_filepath415);
    __twr_v417 = (uint64_t)(&BtParseStandardPath);
    __twr_v418 = 48ULL;
    __twr_v419 = _mng_string401 + __twr_v418;
    __twr_v420 = (uint64_t)(&_mng_token391);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v417)(__twr_v419, _mng_filepath415, __twr_v420);
    __twr_v421 = (uint64_t)(&TlIsPathDirectory);
    __twr_v422 = _mng_filepath415 + __twr_v413;
    __twr_v423 = *(uint64_t*)(__twr_v422);
    __twr_v424 = ((uint64_t (*)(uint64_t))__twr_v421)(__twr_v423);
    if (__twr_v424) { goto __twr_l45; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v425 = (uint64_t)(&LexError);
    __twr_v426 = (uint64_t)(&_mng_token391);
    __twr_v427 = (uint64_t)(&"Doesn't exist or not a directory\n");
    __twr_v428 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v425)(__twr_v426, __twr_v427, __twr_v428, __twr_v428);
    __twr_l45:;
    __twr_v429 = (uint64_t)(&BtCurrentTarget);
    __twr_v430 = *(uint64_t*)(__twr_v429);
    __twr_v431 = 592ULL;
    __twr_v432 = __twr_v430 + __twr_v431;
    _mng_listhead433 = __twr_v432;
    _mng_listentry434 = _mng_entry405;
    __twr_v435 = 8ULL;
    __twr_v436 = _mng_listhead433 + __twr_v435;
    __twr_v437 = *(uint64_t*)(__twr_v436);
    _mng_last438 = __twr_v437;
    __twr_v439 = _mng_listentry434 + __twr_v435;
    *(uint64_t*)(__twr_v439) = _mng_last438;
    *(uint64_t*)(_mng_listentry434) = _mng_listhead433;
    *(uint64_t*)(_mng_last438) = _mng_listentry434;
    *(uint64_t*)(__twr_v436) = _mng_listentry434;
    __twr_l40:;
    _jkl_epilogue:;
}
void BtTargetInfoObjects() {
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t _mng_token442[4];
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t _mng_string452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t _mng_entry456;
    uint64_t _mng_status457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t _mng_filepath463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t _mng_listhead484;
    uint64_t _mng_listentry485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t _mng_last489;
    uint64_t __twr_v490;
    __twr_v440 = (uint64_t)(&LexMatchToken);
    __twr_v441 = (uint64_t)(&_mng_token442);
    __twr_v443 = 4ULL;
    __twr_v444 = 0ULL;
    __twr_v445 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v440)(__twr_v441, __twr_v443, __twr_v444);
    if (__twr_v445) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v446 = (uint64_t)(&LexError);
    __twr_v447 = (uint64_t)(&_mng_token442);
    __twr_v448 = (uint64_t)(&"Expected a string");
    __twr_v449 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v446)(__twr_v447, __twr_v448, __twr_v449, __twr_v449);
    __twr_l48:;
    __twr_v450 = (uint64_t)(&_mng_token442);
    __twr_v451 = *(uint64_t*)(__twr_v450);
    _mng_string452 = __twr_v451;
    __twr_v453 = (uint64_t)(&TlBumpAlloc);
    __twr_v454 = 105ULL;
    __twr_v455 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v453)(__twr_v454, (uint64_t)(&_mng_entry456));
    _mng_status457 = __twr_v455;
    if (!(_mng_status457)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v458 = (uint64_t)(&TlInternalError);
    __twr_v459 = (uint64_t)(&"Failed to allocate sources record");
    __twr_v460 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v458)(__twr_v459, __twr_v460, __twr_v460, __twr_v460);
    __twr_l50:;
    __twr_v461 = 16ULL;
    __twr_v462 = _mng_entry456 + __twr_v461;
    _mng_filepath463 = __twr_v462;
    __twr_v464 = 1ULL;
    __twr_v465 = 104ULL;
    __twr_v466 = _mng_entry456 + __twr_v465;
    *(uint8_t*)(__twr_v466) = __twr_v464;
    __twr_v467 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v467)(_mng_filepath463);
    __twr_v468 = (uint64_t)(&BtParseStandardPath);
    __twr_v469 = 48ULL;
    __twr_v470 = _mng_string452 + __twr_v469;
    __twr_v471 = (uint64_t)(&_mng_token442);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v468)(__twr_v470, _mng_filepath463, __twr_v471);
    __twr_v472 = (uint64_t)(&TlIsPathDirectory);
    __twr_v473 = _mng_filepath463 + __twr_v461;
    __twr_v474 = *(uint64_t*)(__twr_v473);
    __twr_v475 = ((uint64_t (*)(uint64_t))__twr_v472)(__twr_v474);
    if (__twr_v475) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v476 = (uint64_t)(&LexError);
    __twr_v477 = (uint64_t)(&_mng_token442);
    __twr_v478 = (uint64_t)(&"Doesn't exist or not a directory\n");
    __twr_v479 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v476)(__twr_v477, __twr_v478, __twr_v479, __twr_v479);
    __twr_l52:;
    __twr_v480 = (uint64_t)(&BtCurrentTarget);
    __twr_v481 = *(uint64_t*)(__twr_v480);
    __twr_v482 = 592ULL;
    __twr_v483 = __twr_v481 + __twr_v482;
    _mng_listhead484 = __twr_v483;
    _mng_listentry485 = _mng_entry456;
    __twr_v486 = 8ULL;
    __twr_v487 = _mng_listhead484 + __twr_v486;
    __twr_v488 = *(uint64_t*)(__twr_v487);
    _mng_last489 = __twr_v488;
    __twr_v490 = _mng_listentry485 + __twr_v486;
    *(uint64_t*)(__twr_v490) = _mng_last489;
    *(uint64_t*)(_mng_listentry485) = _mng_listhead484;
    *(uint64_t*)(_mng_last489) = _mng_listentry485;
    *(uint64_t*)(__twr_v487) = _mng_listentry485;
    __twr_l47:;
    _jkl_epilogue:;
}
void BtTargetInfoJklInclude() {
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t _mng_token493[4];
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t _mng_string503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t _mng_filepath506[11];
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    __twr_v491 = (uint64_t)(&LexMatchToken);
    __twr_v492 = (uint64_t)(&_mng_token493);
    __twr_v494 = 4ULL;
    __twr_v495 = 0ULL;
    __twr_v496 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v491)(__twr_v492, __twr_v494, __twr_v495);
    if (__twr_v496) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v497 = (uint64_t)(&LexError);
    __twr_v498 = (uint64_t)(&_mng_token493);
    __twr_v499 = (uint64_t)(&"Expected a string\n");
    __twr_v500 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v497)(__twr_v498, __twr_v499, __twr_v500, __twr_v500);
    __twr_l55:;
    __twr_v501 = (uint64_t)(&_mng_token493);
    __twr_v502 = *(uint64_t*)(__twr_v501);
    _mng_string503 = __twr_v502;
    __twr_v504 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v505 = (uint64_t)(&_mng_filepath506);
    ((void (*)(uint64_t))__twr_v504)(__twr_v505);
    __twr_v507 = (uint64_t)(&BtParseStandardPath);
    __twr_v508 = 48ULL;
    __twr_v509 = _mng_string503 + __twr_v508;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v507)(__twr_v509, __twr_v505, __twr_v501);
    __twr_v510 = (uint64_t)(&BtCurrentTarget);
    __twr_v511 = *(uint64_t*)(__twr_v510);
    __twr_v512 = 400ULL;
    __twr_v513 = __twr_v511 + __twr_v512;
    __twr_v514 = *(uint64_t*)(__twr_v513);
    if (!(__twr_v514)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v515 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v516 = (uint64_t)(&BtCurrentTarget);
    __twr_v517 = *(uint64_t*)(__twr_v516);
    __twr_v518 = 400ULL;
    __twr_v519 = __twr_v517 + __twr_v518;
    __twr_v520 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v515)(__twr_v519, __twr_v520);
    __twr_l57:;
    __twr_v521 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v522 = (uint64_t)(&BtCurrentTarget);
    __twr_v523 = *(uint64_t*)(__twr_v522);
    __twr_v524 = 400ULL;
    __twr_v525 = __twr_v523 + __twr_v524;
    __twr_v526 = (uint64_t)(&_mng_filepath506);
    __twr_v527 = 16ULL;
    __twr_v528 = __twr_v526 + __twr_v527;
    __twr_v529 = *(uint64_t*)(__twr_v528);
    __twr_v530 = *(uint64_t*)(__twr_v526);
    __twr_v531 = 1ULL;
    __twr_v532 = __twr_v530 - __twr_v531;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v521)(__twr_v525, __twr_v529, __twr_v532);
    __twr_v533 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v533)(__twr_v526);
    __twr_l54:;
    _jkl_epilogue:;
}
void BtTargetInfoLibDir() {
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t _mng_token536[4];
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t _mng_string546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t _mng_filepath549[11];
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    __twr_v534 = (uint64_t)(&LexMatchToken);
    __twr_v535 = (uint64_t)(&_mng_token536);
    __twr_v537 = 4ULL;
    __twr_v538 = 0ULL;
    __twr_v539 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v534)(__twr_v535, __twr_v537, __twr_v538);
    if (__twr_v539) { goto __twr_l60; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v540 = (uint64_t)(&LexError);
    __twr_v541 = (uint64_t)(&_mng_token536);
    __twr_v542 = (uint64_t)(&"Expected a string\n");
    __twr_v543 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v540)(__twr_v541, __twr_v542, __twr_v543, __twr_v543);
    __twr_l60:;
    __twr_v544 = (uint64_t)(&_mng_token536);
    __twr_v545 = *(uint64_t*)(__twr_v544);
    _mng_string546 = __twr_v545;
    __twr_v547 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v548 = (uint64_t)(&_mng_filepath549);
    ((void (*)(uint64_t))__twr_v547)(__twr_v548);
    __twr_v550 = (uint64_t)(&BtParseStandardPath);
    __twr_v551 = 48ULL;
    __twr_v552 = _mng_string546 + __twr_v551;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v550)(__twr_v552, __twr_v548, __twr_v544);
    __twr_v553 = (uint64_t)(&BtCurrentTarget);
    __twr_v554 = *(uint64_t*)(__twr_v553);
    __twr_v555 = 488ULL;
    __twr_v556 = __twr_v554 + __twr_v555;
    __twr_v557 = *(uint64_t*)(__twr_v556);
    if (!(__twr_v557)) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v558 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v559 = (uint64_t)(&BtCurrentTarget);
    __twr_v560 = *(uint64_t*)(__twr_v559);
    __twr_v561 = 488ULL;
    __twr_v562 = __twr_v560 + __twr_v561;
    __twr_v563 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v558)(__twr_v562, __twr_v563);
    __twr_l62:;
    __twr_v564 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v565 = (uint64_t)(&BtCurrentTarget);
    __twr_v566 = *(uint64_t*)(__twr_v565);
    __twr_v567 = 488ULL;
    __twr_v568 = __twr_v566 + __twr_v567;
    __twr_v569 = (uint64_t)(&_mng_filepath549);
    __twr_v570 = 16ULL;
    __twr_v571 = __twr_v569 + __twr_v570;
    __twr_v572 = *(uint64_t*)(__twr_v571);
    __twr_v573 = *(uint64_t*)(__twr_v569);
    __twr_v574 = 1ULL;
    __twr_v575 = __twr_v573 - __twr_v574;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v564)(__twr_v568, __twr_v572, __twr_v575);
    __twr_v576 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v576)(__twr_v569);
    __twr_l59:;
    _jkl_epilogue:;
}
void BtTargetInfoLinkOpt() {
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t _mng_token579[4];
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t _mng_string589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t _mng_str592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    __twr_v577 = (uint64_t)(&LexMatchToken);
    __twr_v578 = (uint64_t)(&_mng_token579);
    __twr_v580 = 4ULL;
    __twr_v581 = 0ULL;
    __twr_v582 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v577)(__twr_v578, __twr_v580, __twr_v581);
    if (__twr_v582) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v583 = (uint64_t)(&LexError);
    __twr_v584 = (uint64_t)(&_mng_token579);
    __twr_v585 = (uint64_t)(&"Expected a string\n");
    __twr_v586 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v583)(__twr_v584, __twr_v585, __twr_v586, __twr_v586);
    __twr_l65:;
    __twr_v587 = (uint64_t)(&_mng_token579);
    __twr_v588 = *(uint64_t*)(__twr_v587);
    _mng_string589 = __twr_v588;
    __twr_v590 = 48ULL;
    __twr_v591 = _mng_string589 + __twr_v590;
    _mng_str592 = __twr_v591;
    __twr_v593 = (uint64_t)(&BtCurrentTarget);
    __twr_v594 = *(uint64_t*)(__twr_v593);
    __twr_v595 = __twr_v594 + __twr_v590;
    __twr_v596 = *(uint64_t*)(__twr_v595);
    if (!(__twr_v596)) { goto __twr_l67; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v597 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v598 = (uint64_t)(&BtCurrentTarget);
    __twr_v599 = *(uint64_t*)(__twr_v598);
    __twr_v600 = 48ULL;
    __twr_v601 = __twr_v599 + __twr_v600;
    __twr_v602 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v597)(__twr_v601, __twr_v602);
    __twr_l67:;
    __twr_v603 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v604 = (uint64_t)(&BtCurrentTarget);
    __twr_v605 = *(uint64_t*)(__twr_v604);
    __twr_v606 = 48ULL;
    __twr_v607 = __twr_v605 + __twr_v606;
    __twr_v608 = 16ULL;
    __twr_v609 = _mng_str592 + __twr_v608;
    __twr_v610 = *(uint64_t*)(__twr_v609);
    __twr_v611 = *(uint64_t*)(_mng_str592);
    __twr_v612 = 1ULL;
    __twr_v613 = __twr_v611 - __twr_v612;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v603)(__twr_v607, __twr_v610, __twr_v613);
    __twr_l64:;
    _jkl_epilogue:;
}
void BtTargetInfoJklOpt() {
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t _mng_token616[4];
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t _mng_string626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t _mng_str629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    __twr_v614 = (uint64_t)(&LexMatchToken);
    __twr_v615 = (uint64_t)(&_mng_token616);
    __twr_v617 = 4ULL;
    __twr_v618 = 0ULL;
    __twr_v619 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v614)(__twr_v615, __twr_v617, __twr_v618);
    if (__twr_v619) { goto __twr_l70; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v620 = (uint64_t)(&LexError);
    __twr_v621 = (uint64_t)(&_mng_token616);
    __twr_v622 = (uint64_t)(&"Expected a string\n");
    __twr_v623 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v620)(__twr_v621, __twr_v622, __twr_v623, __twr_v623);
    __twr_l70:;
    __twr_v624 = (uint64_t)(&_mng_token616);
    __twr_v625 = *(uint64_t*)(__twr_v624);
    _mng_string626 = __twr_v625;
    __twr_v627 = 48ULL;
    __twr_v628 = _mng_string626 + __twr_v627;
    _mng_str629 = __twr_v628;
    __twr_v630 = (uint64_t)(&BtCurrentTarget);
    __twr_v631 = *(uint64_t*)(__twr_v630);
    __twr_v632 = 312ULL;
    __twr_v633 = __twr_v631 + __twr_v632;
    __twr_v634 = *(uint64_t*)(__twr_v633);
    if (!(__twr_v634)) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v635 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v636 = (uint64_t)(&BtCurrentTarget);
    __twr_v637 = *(uint64_t*)(__twr_v636);
    __twr_v638 = 312ULL;
    __twr_v639 = __twr_v637 + __twr_v638;
    __twr_v640 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v635)(__twr_v639, __twr_v640);
    __twr_l72:;
    __twr_v641 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v642 = (uint64_t)(&BtCurrentTarget);
    __twr_v643 = *(uint64_t*)(__twr_v642);
    __twr_v644 = 312ULL;
    __twr_v645 = __twr_v643 + __twr_v644;
    __twr_v646 = 16ULL;
    __twr_v647 = _mng_str629 + __twr_v646;
    __twr_v648 = *(uint64_t*)(__twr_v647);
    __twr_v649 = *(uint64_t*)(_mng_str629);
    __twr_v650 = 1ULL;
    __twr_v651 = __twr_v649 - __twr_v650;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v641)(__twr_v645, __twr_v648, __twr_v651);
    __twr_l69:;
    _jkl_epilogue:;
}
void BtTargetInfoLink() {
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t _mng_token654[4];
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t _mng_string664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t _mng_filepath667[11];
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    __twr_v652 = (uint64_t)(&LexMatchToken);
    __twr_v653 = (uint64_t)(&_mng_token654);
    __twr_v655 = 4ULL;
    __twr_v656 = 0ULL;
    __twr_v657 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v652)(__twr_v653, __twr_v655, __twr_v656);
    if (__twr_v657) { goto __twr_l75; } else { goto __twr_l76; }
    __twr_l76:;
    __twr_v658 = (uint64_t)(&LexError);
    __twr_v659 = (uint64_t)(&_mng_token654);
    __twr_v660 = (uint64_t)(&"Expected a string\n");
    __twr_v661 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v658)(__twr_v659, __twr_v660, __twr_v661, __twr_v661);
    __twr_l75:;
    __twr_v662 = (uint64_t)(&_mng_token654);
    __twr_v663 = *(uint64_t*)(__twr_v662);
    _mng_string664 = __twr_v663;
    __twr_v665 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v666 = (uint64_t)(&_mng_filepath667);
    ((void (*)(uint64_t))__twr_v665)(__twr_v666);
    __twr_v668 = (uint64_t)(&BtParseStandardPath);
    __twr_v669 = 48ULL;
    __twr_v670 = _mng_string664 + __twr_v669;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v668)(__twr_v670, __twr_v666, __twr_v662);
    __twr_v671 = (uint64_t)(&BtCurrentTarget);
    __twr_v672 = *(uint64_t*)(__twr_v671);
    __twr_v673 = 136ULL;
    __twr_v674 = __twr_v672 + __twr_v673;
    __twr_v675 = *(uint64_t*)(__twr_v674);
    if (!(__twr_v675)) { goto __twr_l77; } else { goto __twr_l78; }
    __twr_l78:;
    __twr_v676 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v677 = (uint64_t)(&BtCurrentTarget);
    __twr_v678 = *(uint64_t*)(__twr_v677);
    __twr_v679 = 136ULL;
    __twr_v680 = __twr_v678 + __twr_v679;
    __twr_v681 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v676)(__twr_v680, __twr_v681);
    __twr_l77:;
    __twr_v682 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v683 = (uint64_t)(&BtCurrentTarget);
    __twr_v684 = *(uint64_t*)(__twr_v683);
    __twr_v685 = 136ULL;
    __twr_v686 = __twr_v684 + __twr_v685;
    __twr_v687 = (uint64_t)(&_mng_filepath667);
    __twr_v688 = 16ULL;
    __twr_v689 = __twr_v687 + __twr_v688;
    __twr_v690 = *(uint64_t*)(__twr_v689);
    __twr_v691 = *(uint64_t*)(__twr_v687);
    __twr_v692 = 1ULL;
    __twr_v693 = __twr_v691 - __twr_v692;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v682)(__twr_v686, __twr_v690, __twr_v693);
    __twr_v694 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v694)(__twr_v687);
    __twr_l74:;
    _jkl_epilogue:;
}
void BtTargetInfoDyLink() {
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t _mng_token697[4];
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t _mng_rtstring708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t _mng_ctpathtoken711[4];
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t _mng_ctstring720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t _mng_filepath723[11];
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    __twr_v695 = (uint64_t)(&LexMatchToken);
    __twr_v696 = (uint64_t)(&_mng_token697);
    __twr_v698 = 4ULL;
    __twr_v699 = 0ULL;
    __twr_v700 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v695)(__twr_v696, __twr_v698, __twr_v699);
    if (__twr_v700) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v701 = (uint64_t)(&LexError);
    __twr_v702 = (uint64_t)(&_mng_token697);
    __twr_v703 = (uint64_t)(&"Expected a string\n");
    __twr_v704 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v701)(__twr_v702, __twr_v703, __twr_v704, __twr_v704);
    __twr_l80:;
    __twr_v705 = (uint64_t)(&_mng_token697);
    __twr_v706 = 0ULL;
    __twr_v707 = *(uint64_t*)(__twr_v705);
    _mng_rtstring708 = __twr_v707;
    __twr_v709 = (uint64_t)(&LexMatchToken);
    __twr_v710 = (uint64_t)(&_mng_ctpathtoken711);
    __twr_v712 = 4ULL;
    __twr_v713 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v709)(__twr_v710, __twr_v712, __twr_v706);
    if (__twr_v713) { goto __twr_l82; } else { goto __twr_l83; }
    __twr_l83:;
    __twr_v714 = (uint64_t)(&LexError);
    __twr_v715 = (uint64_t)(&_mng_ctpathtoken711);
    __twr_v716 = (uint64_t)(&"Expected a string\n");
    __twr_v717 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v714)(__twr_v715, __twr_v716, __twr_v717, __twr_v717);
    __twr_l82:;
    __twr_v718 = (uint64_t)(&_mng_ctpathtoken711);
    __twr_v719 = *(uint64_t*)(__twr_v718);
    _mng_ctstring720 = __twr_v719;
    __twr_v721 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v722 = (uint64_t)(&_mng_filepath723);
    ((void (*)(uint64_t))__twr_v721)(__twr_v722);
    __twr_v724 = (uint64_t)(&BtParseStandardPath);
    __twr_v725 = 48ULL;
    __twr_v726 = _mng_ctstring720 + __twr_v725;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v724)(__twr_v726, __twr_v722, __twr_v718);
    __twr_v727 = (uint64_t)(&BtCurrentTarget);
    __twr_v728 = *(uint64_t*)(__twr_v727);
    __twr_v729 = 224ULL;
    __twr_v730 = __twr_v728 + __twr_v729;
    __twr_v731 = *(uint64_t*)(__twr_v730);
    if (!(__twr_v731)) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v732 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v733 = (uint64_t)(&BtCurrentTarget);
    __twr_v734 = *(uint64_t*)(__twr_v733);
    __twr_v735 = 224ULL;
    __twr_v736 = __twr_v734 + __twr_v735;
    __twr_v737 = 32ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v732)(__twr_v736, __twr_v737);
    __twr_l84:;
    __twr_v738 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v739 = (uint64_t)(&BtCurrentTarget);
    __twr_v740 = *(uint64_t*)(__twr_v739);
    __twr_v741 = 224ULL;
    __twr_v742 = __twr_v740 + __twr_v741;
    __twr_v743 = 48ULL;
    __twr_v744 = _mng_rtstring708 + __twr_v743;
    __twr_v745 = 16ULL;
    __twr_v746 = 64ULL;
    __twr_v747 = _mng_rtstring708 + __twr_v746;
    __twr_v748 = *(uint64_t*)(__twr_v747);
    __twr_v749 = *(uint64_t*)(__twr_v744);
    __twr_v750 = 1ULL;
    __twr_v751 = __twr_v749 - __twr_v750;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v738)(__twr_v742, __twr_v748, __twr_v751);
    __twr_v752 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v753 = *(uint64_t*)(__twr_v739);
    __twr_v754 = __twr_v753 + __twr_v741;
    __twr_v755 = 58ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v752)(__twr_v754, __twr_v755);
    __twr_v756 = *(uint64_t*)(__twr_v739);
    __twr_v757 = __twr_v756 + __twr_v741;
    __twr_v758 = (uint64_t)(&_mng_filepath723);
    __twr_v759 = __twr_v758 + __twr_v745;
    __twr_v760 = *(uint64_t*)(__twr_v759);
    __twr_v761 = *(uint64_t*)(__twr_v758);
    __twr_v762 = __twr_v761 - __twr_v750;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v738)(__twr_v757, __twr_v760, __twr_v762);
    __twr_v763 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v763)(__twr_v758);
    __twr_l79:;
    _jkl_epilogue:;
}
void BtTargetInfoPrebuilt() {
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t _mng_token766[4];
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t _mng_string776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    __twr_v764 = (uint64_t)(&LexMatchToken);
    __twr_v765 = (uint64_t)(&_mng_token766);
    __twr_v767 = 4ULL;
    __twr_v768 = 0ULL;
    __twr_v769 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v764)(__twr_v765, __twr_v767, __twr_v768);
    if (__twr_v769) { goto __twr_l87; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v770 = (uint64_t)(&LexError);
    __twr_v771 = (uint64_t)(&_mng_token766);
    __twr_v772 = (uint64_t)(&"Expected a string\n");
    __twr_v773 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v770)(__twr_v771, __twr_v772, __twr_v773, __twr_v773);
    __twr_l87:;
    __twr_v774 = (uint64_t)(&_mng_token766);
    __twr_v775 = *(uint64_t*)(__twr_v774);
    _mng_string776 = __twr_v775;
    __twr_v777 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v778 = (uint64_t)(&BtCurrentTarget);
    __twr_v779 = *(uint64_t*)(__twr_v778);
    __twr_v780 = 696ULL;
    __twr_v781 = __twr_v779 + __twr_v780;
    ((void (*)(uint64_t))__twr_v777)(__twr_v781);
    __twr_v782 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v783 = *(uint64_t*)(__twr_v778);
    __twr_v784 = __twr_v783 + __twr_v780;
    ((void (*)(uint64_t))__twr_v782)(__twr_v784);
    __twr_v785 = (uint64_t)(&BtParseStandardPath);
    __twr_v786 = 48ULL;
    __twr_v787 = _mng_string776 + __twr_v786;
    __twr_v788 = *(uint64_t*)(__twr_v778);
    __twr_v789 = __twr_v788 + __twr_v780;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v785)(__twr_v787, __twr_v789, __twr_v774);
    __twr_v790 = 1ULL;
    __twr_v791 = *(uint64_t*)(__twr_v778);
    __twr_v792 = 826ULL;
    __twr_v793 = __twr_v791 + __twr_v792;
    *(uint8_t*)(__twr_v793) = __twr_v790;
    __twr_l86:;
    _jkl_epilogue:;
}
uint64_t BtTargetInfoSpecifiers[11] = {
    (uint64_t)(&BtTargetInfoFile),
    (uint64_t)(&BtTargetInfoDepend),
    (uint64_t)(&BtTargetInfoSources),
    (uint64_t)(&BtTargetInfoJklInclude),
    (uint64_t)(&BtTargetInfoLibDir),
    (uint64_t)(&BtTargetInfoLinkOpt),
    (uint64_t)(&BtTargetInfoJklOpt),
    (uint64_t)(&BtTargetInfoLink),
    (uint64_t)(&BtTargetInfoDyLink),
    (uint64_t)(&BtTargetInfoPrebuilt),
    (uint64_t)(&BtTargetInfoObjects),
};
uint64_t BtParseTarget() {
    uint64_t _jkl_retv;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t _mng_token796[4];
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t _mng_nametoken813[4];
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t _mng_namestring823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t _mng_target837;
    uint64_t _mng_status838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t _mng_listhead868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t _mng_listhead873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t _mng_listhead877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t _mng_listhead881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t _mng_listhead885;
    uint64_t __twr_v886;
    uint64_t _mng_listentry887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t _mng_macro890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t __twr_v893;
    uint64_t _mng_exprec894;
    uint64_t __twr_v895;
    uint64_t __twr_v896;
    uint64_t __twr_v897;
    uint64_t __twr_v898;
    uint64_t __twr_v899;
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t _mng_listhead902;
    uint64_t _mng_listentry903;
    uint64_t __twr_v904;
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t _mng_last907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    uint64_t __twr_v915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint64_t __twr_v933;
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t __twr_v936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    uint64_t __twr_v942;
    uint64_t __twr_v943;
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t __twr_v946;
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    __twr_v794 = (uint64_t)(&LexGetToken);
    __twr_v795 = (uint64_t)(&_mng_token796);
    ((void (*)(uint64_t))__twr_v794)(__twr_v795);
    __twr_v797 = 24ULL;
    __twr_v798 = __twr_v795 + __twr_v797;
    __twr_v799 = *(uint8_t*)(__twr_v798);
    __twr_v800 = 6ULL;
    if (__twr_v799 != __twr_v800) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v801 = 0ULL;
    _jkl_retv = __twr_v801;
    goto _jkl_epilogue;
    __twr_l90:;
    __twr_v802 = (uint64_t)(&_mng_token796);
    __twr_v803 = 24ULL;
    __twr_v804 = __twr_v802 + __twr_v803;
    __twr_v805 = *(uint8_t*)(__twr_v804);
    __twr_v806 = 1ULL;
    if (__twr_v805 == __twr_v806) { goto __twr_l92; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v807 = (uint64_t)(&LexError);
    __twr_v808 = (uint64_t)(&_mng_token796);
    __twr_v809 = (uint64_t)(&"Expected TARGET\n");
    __twr_v810 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v807)(__twr_v808, __twr_v809, __twr_v810, __twr_v810);
    __twr_l92:;
    __twr_v811 = (uint64_t)(&LexMatchToken);
    __twr_v812 = (uint64_t)(&_mng_nametoken813);
    __twr_v814 = 4ULL;
    __twr_v815 = 0ULL;
    __twr_v816 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v811)(__twr_v812, __twr_v814, __twr_v815);
    if (__twr_v816) { goto __twr_l94; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v817 = (uint64_t)(&LexError);
    __twr_v818 = (uint64_t)(&_mng_nametoken813);
    __twr_v819 = (uint64_t)(&"Expected a string\n");
    __twr_v820 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v817)(__twr_v818, __twr_v819, __twr_v820, __twr_v820);
    __twr_l94:;
    __twr_v821 = (uint64_t)(&_mng_nametoken813);
    __twr_v822 = *(uint64_t*)(__twr_v821);
    _mng_namestring823 = __twr_v822;
    __twr_v824 = (uint64_t)(&TlLookupHashTable);
    __twr_v825 = (uint64_t)(&BtTargetHashTable);
    __twr_v826 = 64ULL;
    __twr_v827 = _mng_namestring823 + __twr_v826;
    __twr_v828 = *(uint64_t*)(__twr_v827);
    __twr_v829 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v824)(__twr_v825, __twr_v828);
    if (!(__twr_v829)) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v830 = (uint64_t)(&LexError);
    __twr_v831 = (uint64_t)(&_mng_nametoken813);
    __twr_v832 = (uint64_t)(&"Target already defined\n");
    __twr_v833 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v830)(__twr_v831, __twr_v832, __twr_v833, __twr_v833);
    __twr_l96:;
    __twr_v834 = (uint64_t)(&TlBumpAlloc);
    __twr_v835 = 827ULL;
    __twr_v836 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v834)(__twr_v835, (uint64_t)(&_mng_target837));
    _mng_status838 = __twr_v836;
    if (!(_mng_status838)) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v839 = (uint64_t)(&TlInternalError);
    __twr_v840 = (uint64_t)(&"Failed to allocate target");
    __twr_v841 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v839)(__twr_v840, __twr_v841, __twr_v841, __twr_v841);
    __twr_l98:;
    __twr_v842 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v843 = 48ULL;
    __twr_v844 = _mng_target837 + __twr_v843;
    ((void (*)(uint64_t))__twr_v842)(__twr_v844);
    __twr_v845 = 312ULL;
    __twr_v846 = _mng_target837 + __twr_v845;
    ((void (*)(uint64_t))__twr_v842)(__twr_v846);
    __twr_v847 = 400ULL;
    __twr_v848 = _mng_target837 + __twr_v847;
    ((void (*)(uint64_t))__twr_v842)(__twr_v848);
    __twr_v849 = 488ULL;
    __twr_v850 = _mng_target837 + __twr_v849;
    ((void (*)(uint64_t))__twr_v842)(__twr_v850);
    __twr_v851 = 136ULL;
    __twr_v852 = _mng_target837 + __twr_v851;
    ((void (*)(uint64_t))__twr_v842)(__twr_v852);
    __twr_v853 = 224ULL;
    __twr_v854 = _mng_target837 + __twr_v853;
    ((void (*)(uint64_t))__twr_v842)(__twr_v854);
    __twr_v855 = 608ULL;
    __twr_v856 = _mng_target837 + __twr_v855;
    ((void (*)(uint64_t))__twr_v842)(__twr_v856);
    __twr_v857 = 696ULL;
    __twr_v858 = _mng_target837 + __twr_v857;
    ((void (*)(uint64_t))__twr_v842)(__twr_v858);
    __twr_v859 = 0ULL;
    __twr_v860 = 824ULL;
    __twr_v861 = _mng_target837 + __twr_v860;
    *(uint8_t*)(__twr_v861) = __twr_v859;
    __twr_v862 = 825ULL;
    __twr_v863 = _mng_target837 + __twr_v862;
    *(uint8_t*)(__twr_v863) = __twr_v859;
    __twr_v864 = 826ULL;
    __twr_v865 = _mng_target837 + __twr_v864;
    *(uint8_t*)(__twr_v865) = __twr_v859;
    __twr_v866 = 576ULL;
    __twr_v867 = _mng_target837 + __twr_v866;
    _mng_listhead868 = __twr_v867;
    __twr_v869 = 8ULL;
    __twr_v870 = _mng_listhead868 + __twr_v869;
    *(uint64_t*)(__twr_v870) = _mng_listhead868;
    *(uint64_t*)(_mng_listhead868) = _mng_listhead868;
    __twr_v871 = 592ULL;
    __twr_v872 = _mng_target837 + __twr_v871;
    _mng_listhead873 = __twr_v872;
    __twr_v874 = _mng_listhead873 + __twr_v869;
    *(uint64_t*)(__twr_v874) = _mng_listhead873;
    *(uint64_t*)(_mng_listhead873) = _mng_listhead873;
    __twr_v875 = 784ULL;
    __twr_v876 = _mng_target837 + __twr_v875;
    _mng_listhead877 = __twr_v876;
    __twr_v878 = _mng_listhead877 + __twr_v869;
    *(uint64_t*)(__twr_v878) = _mng_listhead877;
    *(uint64_t*)(_mng_listhead877) = _mng_listhead877;
    __twr_v879 = 800ULL;
    __twr_v880 = _mng_target837 + __twr_v879;
    _mng_listhead881 = __twr_v880;
    __twr_v882 = _mng_listhead881 + __twr_v869;
    *(uint64_t*)(__twr_v882) = _mng_listhead881;
    *(uint64_t*)(_mng_listhead881) = _mng_listhead881;
    __twr_v883 = (uint64_t)(&BtCurrentTarget);
    *(uint64_t*)(__twr_v883) = _mng_target837;
    __twr_v884 = (uint64_t)(&LexExposedMacroListHead);
    _mng_listhead885 = __twr_v884;
    __twr_v886 = *(uint64_t*)(_mng_listhead885);
    _mng_listentry887 = __twr_v886;
    if (_mng_listentry887 == _mng_listhead885) { goto __twr_l101; } else { goto __twr_l100; }
    __twr_l100:;
    __twr_v888 = 232ULL;
    __twr_v889 = _mng_listentry887 - __twr_v888;
    _mng_macro890 = __twr_v889;
    __twr_v891 = (uint64_t)(&TlBumpAlloc);
    __twr_v892 = 24ULL;
    __twr_v893 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v891)(__twr_v892, (uint64_t)(&_mng_exprec894));
    _mng_status838 = __twr_v893;
    if (!(_mng_status838)) { goto __twr_l103; } else { goto __twr_l104; }
    __twr_l104:;
    __twr_v895 = (uint64_t)(&TlInternalError);
    __twr_v896 = (uint64_t)(&"Failed to allocate exposed macro record");
    __twr_v897 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v895)(__twr_v896, __twr_v897, __twr_v897, __twr_v897);
    __twr_l103:;
    __twr_v898 = 16ULL;
    __twr_v899 = _mng_exprec894 + __twr_v898;
    *(uint64_t*)(__twr_v899) = _mng_macro890;
    __twr_v900 = 800ULL;
    __twr_v901 = _mng_target837 + __twr_v900;
    _mng_listhead902 = __twr_v901;
    _mng_listentry903 = _mng_exprec894;
    __twr_v904 = 8ULL;
    __twr_v905 = _mng_listhead902 + __twr_v904;
    __twr_v906 = *(uint64_t*)(__twr_v905);
    _mng_last907 = __twr_v906;
    __twr_v908 = _mng_listentry903 + __twr_v904;
    *(uint64_t*)(__twr_v908) = _mng_last907;
    *(uint64_t*)(_mng_listentry903) = _mng_listhead902;
    *(uint64_t*)(_mng_last907) = _mng_listentry903;
    *(uint64_t*)(__twr_v905) = _mng_listentry903;
    __twr_v909 = *(uint64_t*)(_mng_listentry887);
    _mng_listentry887 = __twr_v909;
    __twr_l102:;
    if (_mng_listentry887 != _mng_listhead885) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v910 = (uint64_t)(&LexMatchToken);
    __twr_v911 = (uint64_t)(&_mng_token796);
    __twr_v912 = 3ULL;
    __twr_v913 = 0ULL;
    __twr_v914 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v910)(__twr_v911, __twr_v912, __twr_v913);
    if (__twr_v914) { goto __twr_l106; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v915 = (uint64_t)(&LexMatchToken);
    __twr_v916 = (uint64_t)(&_mng_token796);
    __twr_v917 = 2ULL;
    __twr_v918 = 0ULL;
    __twr_v919 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v915)(__twr_v916, __twr_v917, __twr_v918);
    if (__twr_v919) { goto __twr_l108; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v920 = (uint64_t)(&LexError);
    __twr_v921 = (uint64_t)(&_mng_token796);
    __twr_v922 = (uint64_t)(&"Expected a target info specifier\n");
    __twr_v923 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v920)(__twr_v921, __twr_v922, __twr_v923, __twr_v923);
    __twr_l108:;
    __twr_v924 = (uint64_t)(&BtTargetInfoSpecifiers);
    __twr_v925 = (uint64_t)(&_mng_token796);
    __twr_v926 = 25ULL;
    __twr_v927 = __twr_v925 + __twr_v926;
    __twr_v928 = *(uint8_t*)(__twr_v927);
    __twr_v929 = 3ULL;
    __twr_v930 = __twr_v928 << __twr_v929;
    __twr_v931 = __twr_v924 + __twr_v930;
    __twr_v932 = *(uint64_t*)(__twr_v931);
    ((void (*)())__twr_v932)();
    __twr_l107:;
    __twr_v933 = (uint64_t)(&LexMatchToken);
    __twr_v934 = (uint64_t)(&_mng_token796);
    __twr_v935 = 3ULL;
    __twr_v936 = 0ULL;
    __twr_v937 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v933)(__twr_v934, __twr_v935, __twr_v936);
    if (!(__twr_v937)) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v938 = (uint64_t)(&TlInsertHashTable);
    __twr_v939 = (uint64_t)(&BtTargetHashTable);
    __twr_v940 = 64ULL;
    __twr_v941 = _mng_namestring823 + __twr_v940;
    __twr_v942 = *(uint64_t*)(__twr_v941);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v938)(__twr_v939, _mng_target837, __twr_v942);
    __twr_v943 = 826ULL;
    __twr_v944 = _mng_target837 + __twr_v943;
    __twr_v945 = *(uint8_t*)(__twr_v944);
    if (!(__twr_v945)) { goto __twr_l110; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v946 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v947 = 696ULL;
    __twr_v948 = _mng_target837 + __twr_v947;
    __twr_v949 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v946)(__twr_v948, __twr_v949);
    __twr_l110:;
    __twr_v950 = 1ULL;
    _jkl_retv = __twr_v950;
    goto _jkl_epilogue;
    __twr_l89:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void BtParse() {
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t __twr_v953;
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    uint64_t __twr_v956;
    uint64_t __twr_v957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t _mng_target961;
    uint64_t __twr_v962;
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    uint64_t _mng_VARTABLE965[1];
    uint64_t __twr_v966;
    uint64_t __twr_v967;
    uint64_t __twr_v968;
    __twr_v951 = (uint64_t)(&TlInitializeHashTable);
    __twr_v952 = (uint64_t)(&BtTargetHashTable);
    ((void (*)(uint64_t))__twr_v951)(__twr_v952);
    __twr_v953 = (uint64_t)(&BtParseTarget);
    __twr_v954 = ((uint64_t (*)())__twr_v953)();
    if (!(__twr_v954)) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_l115:;
    __twr_v955 = (uint64_t)(&BtParseTarget);
    __twr_v956 = ((uint64_t (*)())__twr_v955)();
    if (__twr_v956) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v957 = (uint64_t)(&TlLookupHashTable);
    __twr_v958 = (uint64_t)(&BtTargetHashTable);
    __twr_v959 = (uint64_t)(&FeTargetName);
    __twr_v960 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v957)(__twr_v958, __twr_v959);
    _mng_target961 = __twr_v960;
    if (_mng_target961) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v962 = (uint64_t)(&TlError);
    __twr_v963 = (uint64_t)(&"Target '%s' not defined\n");
    __twr_v964 = (uint64_t)(&_mng_VARTABLE965);
    __twr_v966 = (uint64_t)(&FeTargetName);
    __twr_v967 = 1ULL;
    *(uint64_t*)(__twr_v964) = __twr_v966;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v962)(__twr_v963, __twr_v964, __twr_v967);
    __twr_l116:;
    __twr_v968 = (uint64_t)(&BtSelectedTarget);
    *(uint64_t*)(__twr_v968) = _mng_target961;
    __twr_l112:;
    _jkl_epilogue:;
}
void BtLookupConfigMacros() {
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t _mng_macro974;
    uint64_t __twr_v975;
    uint64_t __twr_v976;
    uint64_t __twr_v977;
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t __twr_v990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t __twr_v1008;
    uint64_t __twr_v1009;
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t __twr_v1088;
    __twr_v969 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v970 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v971 = *(uint64_t*)(__twr_v970);
    __twr_v972 = (uint64_t)(&"ARCHITECTURE");
    __twr_v973 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v969)(__twr_v971, __twr_v972);
    _mng_macro974 = __twr_v973;
    if (_mng_macro974) { goto __twr_l119; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v975 = (uint64_t)(&TlError);
    __twr_v976 = (uint64_t)(&"ARCHITECTURE wasn't defined in the config\n");
    __twr_v977 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v975)(__twr_v976, __twr_v977, __twr_v977);
    __twr_l119:;
    __twr_v978 = 264ULL;
    __twr_v979 = _mng_macro974 + __twr_v978;
    __twr_v980 = *(uint8_t*)(__twr_v979);
    if (!(__twr_v980)) { goto __twr_l121; } else { goto __twr_l122; }
    __twr_l122:;
    __twr_v981 = (uint64_t)(&TlError);
    __twr_v982 = (uint64_t)(&"ARCHITECTURE is a function macro for some reason\n");
    __twr_v983 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v981)(__twr_v982, __twr_v983, __twr_v983);
    __twr_l121:;
    __twr_v984 = (uint64_t)(&TlCopyString);
    __twr_v985 = (uint64_t)(&BtTargetArchitectureName);
    __twr_v986 = 96ULL;
    __twr_v987 = _mng_macro974 + __twr_v986;
    __twr_v988 = *(uint64_t*)(__twr_v987);
    __twr_v989 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v984)(__twr_v985, __twr_v988, __twr_v989);
    __twr_v990 = (uint64_t)(&TlCompareString);
    __twr_v991 = (uint64_t)(&"CHost");
    __twr_v992 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v990)(__twr_v985, __twr_v991);
    if (__twr_v992) { goto __twr_l123; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v993 = 1ULL;
    __twr_v994 = (uint64_t)(&BtCHost);
    *(uint64_t*)(__twr_v994) = __twr_v993;
    __twr_l123:;
    __twr_v995 = 1ULL;
    __twr_v996 = (uint64_t)(&BtJobCount);
    *(uint64_t*)(__twr_v996) = __twr_v995;
    __twr_v997 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v998 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v999 = *(uint64_t*)(__twr_v998);
    __twr_v1000 = (uint64_t)(&"JOBS");
    __twr_v1001 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v997)(__twr_v999, __twr_v1000);
    _mng_macro974 = __twr_v1001;
    if (!(_mng_macro974)) { goto __twr_l125; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v1002 = 264ULL;
    __twr_v1003 = _mng_macro974 + __twr_v1002;
    __twr_v1004 = *(uint8_t*)(__twr_v1003);
    if (!(__twr_v1004)) { goto __twr_l127; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v1005 = (uint64_t)(&TlError);
    __twr_v1006 = (uint64_t)(&"JOBS is a function macro for some reason\n");
    __twr_v1007 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1005)(__twr_v1006, __twr_v1007, __twr_v1007);
    __twr_l127:;
    __twr_v1008 = (uint64_t)(&TlStringToNumber);
    __twr_v1009 = 96ULL;
    __twr_v1010 = _mng_macro974 + __twr_v1009;
    __twr_v1011 = *(uint64_t*)(__twr_v1010);
    __twr_v1012 = 18446744073709551615ULL;
    __twr_v1013 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v1008)(__twr_v1011, __twr_v1012, (uint64_t)(&__twr_v1014));
    __twr_v1015 = (uint64_t)(&BtJobCount);
    *(uint64_t*)(__twr_v1015) = __twr_v1014;
    if (__twr_v1013) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v1016 = (uint64_t)(&TlError);
    __twr_v1017 = (uint64_t)(&"JOBS wasn't a numeric value\n");
    __twr_v1018 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1016)(__twr_v1017, __twr_v1018, __twr_v1018);
    __twr_l129:;
    __twr_v1019 = (uint64_t)(&BtJobCount);
    __twr_v1020 = *(uint64_t*)(__twr_v1019);
    if (__twr_v1020) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v1021 = (uint64_t)(&TlError);
    __twr_v1022 = (uint64_t)(&"Zero JOBS specified\n");
    __twr_v1023 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1021)(__twr_v1022, __twr_v1023, __twr_v1023);
    __twr_l131:;
    __twr_l125:;
    __twr_v1024 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1025 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1026 = *(uint64_t*)(__twr_v1025);
    __twr_v1027 = (uint64_t)(&"SDK_BASE");
    __twr_v1028 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1024)(__twr_v1026, __twr_v1027);
    _mng_macro974 = __twr_v1028;
    if (_mng_macro974) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v1029 = (uint64_t)(&TlError);
    __twr_v1030 = (uint64_t)(&"SDK_BASE wasn't defined in the config\n");
    __twr_v1031 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1029)(__twr_v1030, __twr_v1031, __twr_v1031);
    __twr_l133:;
    __twr_v1032 = 264ULL;
    __twr_v1033 = _mng_macro974 + __twr_v1032;
    __twr_v1034 = *(uint8_t*)(__twr_v1033);
    if (!(__twr_v1034)) { goto __twr_l135; } else { goto __twr_l136; }
    __twr_l136:;
    __twr_v1035 = (uint64_t)(&TlError);
    __twr_v1036 = (uint64_t)(&"SDK_BASE is a function macro for some reason\n");
    __twr_v1037 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1035)(__twr_v1036, __twr_v1037, __twr_v1037);
    __twr_l135:;
    __twr_v1038 = (uint64_t)(&TlCopyString);
    __twr_v1039 = (uint64_t)(&BtSdkBase);
    __twr_v1040 = 96ULL;
    __twr_v1041 = _mng_macro974 + __twr_v1040;
    __twr_v1042 = *(uint64_t*)(__twr_v1041);
    __twr_v1043 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1038)(__twr_v1039, __twr_v1042, __twr_v1043);
    __twr_v1044 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1045 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1046 = *(uint64_t*)(__twr_v1045);
    __twr_v1047 = (uint64_t)(&"ARCH_NAME_SUFFIX");
    __twr_v1048 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1044)(__twr_v1046, __twr_v1047);
    _mng_macro974 = __twr_v1048;
    if (!(_mng_macro974)) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v1049 = 264ULL;
    __twr_v1050 = _mng_macro974 + __twr_v1049;
    __twr_v1051 = *(uint8_t*)(__twr_v1050);
    if (!(__twr_v1051)) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v1052 = (uint64_t)(&TlError);
    __twr_v1053 = (uint64_t)(&"ARCH_NAME_SUFFIX is a function macro for some reason\n");
    __twr_v1054 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1052)(__twr_v1053, __twr_v1054, __twr_v1054);
    __twr_l139:;
    __twr_v1055 = (uint64_t)(&TlCopyString);
    __twr_v1056 = (uint64_t)(&BtArchNameSuffix);
    __twr_v1057 = 1ULL;
    __twr_v1058 = 96ULL;
    __twr_v1059 = _mng_macro974 + __twr_v1058;
    __twr_v1060 = *(uint64_t*)(__twr_v1059);
    __twr_v1061 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1055)(__twr_v1056, __twr_v1060, __twr_v1061);
    __twr_v1062 = (uint64_t)(&BtArchHasSuffix);
    *(uint64_t*)(__twr_v1062) = __twr_v1057;
    __twr_l137:;
    __twr_v1063 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1064 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1065 = *(uint64_t*)(__twr_v1064);
    __twr_v1066 = (uint64_t)(&"CLEANUP");
    __twr_v1067 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1063)(__twr_v1065, __twr_v1066);
    _mng_macro974 = __twr_v1067;
    if (!(_mng_macro974)) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v1068 = 264ULL;
    __twr_v1069 = _mng_macro974 + __twr_v1068;
    __twr_v1070 = *(uint8_t*)(__twr_v1069);
    if (!(__twr_v1070)) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v1071 = (uint64_t)(&TlError);
    __twr_v1072 = (uint64_t)(&"CLEANUP is a function macro for some reason\n");
    __twr_v1073 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1071)(__twr_v1072, __twr_v1073, __twr_v1073);
    __twr_l143:;
    __twr_v1074 = 1ULL;
    __twr_v1075 = (uint64_t)(&BtCleanUp);
    *(uint64_t*)(__twr_v1075) = __twr_v1074;
    __twr_l141:;
    __twr_v1076 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1077 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1078 = *(uint64_t*)(__twr_v1077);
    __twr_v1079 = (uint64_t)(&"VERBOSE");
    __twr_v1080 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1076)(__twr_v1078, __twr_v1079);
    _mng_macro974 = __twr_v1080;
    if (!(_mng_macro974)) { goto __twr_l145; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v1081 = 264ULL;
    __twr_v1082 = _mng_macro974 + __twr_v1081;
    __twr_v1083 = *(uint8_t*)(__twr_v1082);
    if (!(__twr_v1083)) { goto __twr_l147; } else { goto __twr_l148; }
    __twr_l148:;
    __twr_v1084 = (uint64_t)(&TlError);
    __twr_v1085 = (uint64_t)(&"VERBOSE is a function macro for some reason\n");
    __twr_v1086 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1084)(__twr_v1085, __twr_v1086, __twr_v1086);
    __twr_l147:;
    __twr_v1087 = 1ULL;
    __twr_v1088 = (uint64_t)(&BtVerbose);
    *(uint64_t*)(__twr_v1088) = __twr_v1087;
    __twr_l145:;
    __twr_l118:;
    _jkl_epilogue:;
}

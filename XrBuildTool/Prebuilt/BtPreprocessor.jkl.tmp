#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern uint64_t FeInputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg123);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename124, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock125, uint64_t _mng_filepath126);
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope127);
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg128);
extern void LexExpandMacro(uint64_t _mng_macro129, uint64_t _mng_token130);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream131, uint64_t _mng_macro132);
extern void LexUninitializeStream(uint64_t _mng_stream133);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream134);
extern void LexPushStream(uint64_t _mng_stream135);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream136, uint64_t _mng_fileblock137, uint64_t _mng_handle138);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock139, uint64_t _mng_handle140);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern void LexCopyToken(uint64_t _mng_dest141, uint64_t _mng_src142);
extern void LexGetToken(uint64_t _mng_token143);
extern void LexPutbackToken(uint64_t _mng_token144);
extern uint64_t LexMatchToken(uint64_t _mng_token145, uint64_t _mng_type146, uint64_t _mng_subtype147);
extern void LexStreamError(uint64_t _mng_str148, uint64_t _mng_err1149, uint64_t _mng_err2150, uint64_t _mng_err3151);
extern void LexTokenError(uint64_t _mng_token152, uint64_t _mng_str153, uint64_t _mng_err1154, uint64_t _mng_err2155, uint64_t _mng_err3156);
extern uint64_t LexCrunchNumber(uint64_t _mng_token157, uint64_t _mng_buffer158);
extern uint64_t LexExposedMacroListHead[2];
extern uint64_t BtTargetArchitectureName[8];
extern uint64_t BtJobCount;
extern uint64_t BtStatFile(uint64_t _mng_fullpath159);
uint64_t LexRootMacroScope = 0ULL;
uint64_t LexCurrentMacroScope = 0ULL;
uint32_t LexMacroDepth = 0ULL;
uint64_t LexDirectiveHashTable[196];
uint64_t LexOperatorHashTable[196];
uint64_t LexIfStack[11];
uint64_t LexExposedMacroListHead[2];
uint64_t LexMacroZone[2];
uint64_t LexDirectiveToken[4];
uint64_t LexDirectiveBumpArray[112];
uint64_t LexDirectiveBumpIndex = 0ULL;
void LexInsertDirective(uint64_t _mng_name160, uint64_t _mng_parsefunc161) {
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t _mng_directive168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    __twr_v162 = (uint64_t)(&LexDirectiveBumpArray);
    __twr_v163 = (uint64_t)(&LexDirectiveBumpIndex);
    __twr_v164 = *(uint64_t*)(__twr_v163);
    __twr_v165 = 56ULL;
    __twr_v166 = __twr_v164 * __twr_v165;
    __twr_v167 = __twr_v162 + __twr_v166;
    _mng_directive168 = __twr_v167;
    __twr_v169 = 1ULL;
    __twr_v170 = __twr_v164 + __twr_v169;
    *(uint64_t*)(__twr_v163) = __twr_v170;
    __twr_v171 = 48ULL;
    __twr_v172 = _mng_directive168 + __twr_v171;
    *(uint64_t*)(__twr_v172) = _mng_parsefunc161;
    __twr_v173 = (uint64_t)(&TlInsertHashTable);
    __twr_v174 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v173)(__twr_v174, _mng_directive168, _mng_name160);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexOperatorBumpArray[224];
uint64_t LexOperatorBumpIndex = 0ULL;
void LexInsertOperator(uint64_t _mng_name175, uint64_t _mng_parsefunc176) {
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t _mng_operator183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    __twr_v177 = (uint64_t)(&LexOperatorBumpArray);
    __twr_v178 = (uint64_t)(&LexOperatorBumpIndex);
    __twr_v179 = *(uint64_t*)(__twr_v178);
    __twr_v180 = 56ULL;
    __twr_v181 = __twr_v179 * __twr_v180;
    __twr_v182 = __twr_v177 + __twr_v181;
    _mng_operator183 = __twr_v182;
    __twr_v184 = 1ULL;
    __twr_v185 = __twr_v179 + __twr_v184;
    *(uint64_t*)(__twr_v178) = __twr_v185;
    __twr_v186 = 48ULL;
    __twr_v187 = _mng_operator183 + __twr_v186;
    *(uint64_t*)(__twr_v187) = _mng_parsefunc176;
    __twr_v188 = (uint64_t)(&TlInsertHashTable);
    __twr_v189 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v188)(__twr_v189, _mng_operator183, _mng_name175);
    __twr_l2:;
    _jkl_epilogue:;
}
void LexMacroDelete(uint64_t _mng_entry190) {
    uint64_t _mng_macro191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t _mng_listentry197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t _mng_prev201;
    uint64_t __twr_v202;
    uint64_t _mng_next203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    _mng_macro191 = _mng_entry190;
    __twr_v192 = 266ULL;
    __twr_v193 = _mng_macro191 + __twr_v192;
    __twr_v194 = *(uint8_t*)(__twr_v193);
    if (!(__twr_v194)) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v195 = 232ULL;
    __twr_v196 = _mng_macro191 + __twr_v195;
    _mng_listentry197 = __twr_v196;
    __twr_v198 = 8ULL;
    __twr_v199 = _mng_listentry197 + __twr_v198;
    __twr_v200 = *(uint64_t*)(__twr_v199);
    _mng_prev201 = __twr_v200;
    __twr_v202 = *(uint64_t*)(_mng_listentry197);
    _mng_next203 = __twr_v202;
    *(uint64_t*)(_mng_prev201) = _mng_next203;
    __twr_v204 = _mng_next203 + __twr_v198;
    *(uint64_t*)(__twr_v204) = _mng_prev201;
    goto _jkl_epilogue;
    __twr_l4:;
    __twr_v205 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v206 = 80ULL;
    __twr_v207 = _mng_macro191 + __twr_v206;
    ((void (*)(uint64_t))__twr_v205)(__twr_v207);
    __twr_v208 = (uint64_t)(&TlFreeToZone);
    __twr_v209 = (uint64_t)(&LexMacroZone);
    ((void (*)(uint64_t, uint64_t))__twr_v208)(__twr_v209, _mng_entry190);
    __twr_l3:;
    _jkl_epilogue:;
}
uint64_t LexCreateMacroTable(uint64_t _mng_outerscope210) {
    uint64_t _jkl_retv;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    __twr_v211 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v212 = (uint64_t)(&LexMacroDelete);
    __twr_v213 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v211)(_mng_outerscope210, __twr_v212);
    _jkl_retv = __twr_v213;
    goto _jkl_epilogue;
    __twr_l6:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexNextNonWhitespaceCharacter(uint64_t _mng_token214) {
    uint64_t _jkl_retv;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t _mng_stream217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t _mng_byte234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    __twr_v215 = (uint64_t)(&LexCurrentStream);
    __twr_v216 = *(uint64_t*)(__twr_v215);
    _mng_stream217 = __twr_v216;
    if (!(_mng_stream217)) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v218 = 8ULL;
    __twr_v219 = _mng_stream217 + __twr_v218;
    __twr_v220 = *(uint64_t*)(__twr_v219);
    __twr_v221 = _mng_token214 + __twr_v218;
    *(uint64_t*)(__twr_v221) = __twr_v220;
    __twr_v222 = 44ULL;
    __twr_v223 = _mng_stream217 + __twr_v222;
    __twr_v224 = *(uint32_t*)(__twr_v223);
    __twr_v225 = 16ULL;
    __twr_v226 = _mng_token214 + __twr_v225;
    *(uint32_t*)(__twr_v226) = __twr_v224;
    __twr_v227 = 48ULL;
    __twr_v228 = _mng_stream217 + __twr_v227;
    __twr_v229 = *(uint32_t*)(__twr_v228);
    __twr_v230 = 20ULL;
    __twr_v231 = _mng_token214 + __twr_v230;
    *(uint32_t*)(__twr_v231) = __twr_v229;
    __twr_l8:;
    __twr_v232 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v233 = ((uint64_t (*)())__twr_v232)();
    _mng_byte234 = __twr_v233;
    __twr_v235 = (uint64_t)(&LexCharTreatment);
    __twr_v236 = __twr_v235 + _mng_byte234;
    __twr_v237 = *(uint8_t*)(__twr_v236);
    __twr_v238 = 3ULL;
    if (__twr_v237 != __twr_v238) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v239 = (uint64_t)(&LexCurrentStream);
    __twr_v240 = *(uint64_t*)(__twr_v239);
    _mng_stream217 = __twr_v240;
    if (!(_mng_stream217)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v241 = 8ULL;
    __twr_v242 = _mng_stream217 + __twr_v241;
    __twr_v243 = *(uint64_t*)(__twr_v242);
    __twr_v244 = _mng_token214 + __twr_v241;
    *(uint64_t*)(__twr_v244) = __twr_v243;
    __twr_v245 = 44ULL;
    __twr_v246 = _mng_stream217 + __twr_v245;
    __twr_v247 = *(uint32_t*)(__twr_v246);
    __twr_v248 = 16ULL;
    __twr_v249 = _mng_token214 + __twr_v248;
    *(uint32_t*)(__twr_v249) = __twr_v247;
    __twr_v250 = 48ULL;
    __twr_v251 = _mng_stream217 + __twr_v250;
    __twr_v252 = *(uint32_t*)(__twr_v251);
    __twr_v253 = 20ULL;
    __twr_v254 = _mng_token214 + __twr_v253;
    *(uint32_t*)(__twr_v254) = __twr_v252;
    __twr_l13:;
    __twr_v255 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v256 = ((uint64_t (*)())__twr_v255)();
    _mng_byte234 = __twr_v256;
    __twr_l12:;
    __twr_v257 = (uint64_t)(&LexCharTreatment);
    __twr_v258 = __twr_v257 + _mng_byte234;
    __twr_v259 = *(uint8_t*)(__twr_v258);
    __twr_v260 = 3ULL;
    if (__twr_v259 == __twr_v260) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    if (_mng_byte234) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v261 = (uint64_t)(&LexStreamError);
    __twr_v262 = (uint64_t)(&"Unexpected EOF while parsing directive");
    __twr_v263 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v261)(__twr_v262, __twr_v263, __twr_v263, __twr_v263);
    __twr_l15:;
    _jkl_retv = _mng_byte234;
    goto _jkl_epilogue;
    __twr_l7:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectDirectiveToken(uint64_t _mng_token264, uint64_t _mng_buffer265) {
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t _mng_byte268;
    uint64_t _mng_len269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    __twr_v266 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v267 = ((uint64_t (*)(uint64_t))__twr_v266)(_mng_token264);
    _mng_byte268 = __twr_v267;
    _mng_len269 = 0ULL;
    __twr_v270 = (uint64_t)(&LexCharTreatment);
    __twr_v271 = __twr_v270 + _mng_byte268;
    __twr_v272 = *(uint8_t*)(__twr_v271);
    __twr_v273 = 3ULL;
    if (__twr_v272 == __twr_v273) { goto __twr_l19; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v274 = (uint64_t)(&LexCharTreatment);
    __twr_v275 = __twr_v274 + _mng_byte268;
    __twr_v276 = *(uint8_t*)(__twr_v275);
    if (!(__twr_v276)) { goto __twr_l21; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v277 = (uint64_t)(&LexCharTreatment);
    __twr_v278 = 1ULL;
    __twr_v279 = __twr_v277 + _mng_byte268;
    __twr_v280 = *(uint8_t*)(__twr_v279);
    if (__twr_v280 == __twr_v278) { goto __twr_l21; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v281 = (uint64_t)(&LexCharTreatment);
    __twr_v282 = __twr_v281 + _mng_byte268;
    __twr_v283 = *(uint8_t*)(__twr_v282);
    __twr_v284 = 2ULL;
    if (__twr_v283 == __twr_v284) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v285 = (uint64_t)(&LexTokenError);
    __twr_v286 = (uint64_t)(&"Illegal character in token");
    __twr_v287 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v285)(_mng_token264, __twr_v286, __twr_v287, __twr_v287, __twr_v287);
    __twr_l21:;
    __twr_v288 = 63ULL;
    if (_mng_len269 != __twr_v288) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v289 = (uint64_t)(&LexTokenError);
    __twr_v290 = (uint64_t)(&"Token length too great");
    __twr_v291 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v289)(_mng_token264, __twr_v290, __twr_v291, __twr_v291, __twr_v291);
    __twr_l25:;
    *(uint8_t*)(_mng_buffer265) = _mng_byte268;
    __twr_v292 = 1ULL;
    __twr_v293 = _mng_buffer265 + __twr_v292;
    _mng_buffer265 = __twr_v293;
    __twr_v294 = _mng_len269 + __twr_v292;
    _mng_len269 = __twr_v294;
    __twr_v295 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v296 = ((uint64_t (*)())__twr_v295)();
    _mng_byte268 = __twr_v296;
    __twr_l20:;
    __twr_v297 = (uint64_t)(&LexCharTreatment);
    __twr_v298 = __twr_v297 + _mng_byte268;
    __twr_v299 = *(uint8_t*)(__twr_v298);
    __twr_v300 = 3ULL;
    if (__twr_v299 != __twr_v300) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v301 = 0ULL;
    *(uint8_t*)(_mng_buffer265) = __twr_v301;
    __twr_l17:;
    _jkl_epilogue:;
}
void LexGetPreprocessorString(uint64_t _mng_token302, uint64_t _mng_buffer303) {
    uint64_t _mng_backslash304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t _mng_byte307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    _mng_backslash304 = 0ULL;
    __twr_l28:;
    __twr_v305 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v306 = ((uint64_t (*)())__twr_v305)();
    _mng_byte307 = __twr_v306;
    if (_mng_byte307) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v308 = (uint64_t)(&LexTokenError);
    __twr_v309 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v310 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v308)(_mng_token302, __twr_v309, __twr_v310, __twr_v310, __twr_v310);
    __twr_l30:;
    __twr_v311 = 34ULL;
    if (_mng_byte307 != __twr_v311) { goto __twr_l32; } else { goto __twr_l34; }
    __twr_l34:;
    if (_mng_backslash304) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    goto _jkl_epilogue;
    __twr_l32:;
    __twr_v312 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v312)(_mng_buffer303, _mng_byte307);
    if (!(_mng_backslash304)) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    _mng_backslash304 = 0ULL;
    goto __twr_l28;
    __twr_l35:;
    __twr_v313 = 92ULL;
    __twr_v314 = (_mng_byte307 == __twr_v313);
    _mng_backslash304 = __twr_v314;
    goto __twr_l28;
    __twr_l29:;
    __twr_l27:;
    _jkl_epilogue:;
}
void LexCollectString(uint64_t _mng_token315, uint64_t _mng_buffer316) {
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t _mng_byte319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    __twr_v317 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v318 = ((uint64_t (*)(uint64_t))__twr_v317)(_mng_token315);
    _mng_byte319 = __twr_v318;
    __twr_v320 = 34ULL;
    if (_mng_byte319 == __twr_v320) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v321 = (uint64_t)(&LexTokenError);
    __twr_v322 = (uint64_t)(&"Expected a string");
    __twr_v323 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v321)(_mng_token315, __twr_v322, __twr_v323, __twr_v323, __twr_v323);
    __twr_l38:;
    __twr_v324 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v324)(_mng_token315, _mng_buffer316);
    __twr_v325 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v326 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v325)(_mng_buffer316, __twr_v326);
    __twr_l37:;
    _jkl_epilogue:;
}
void LexGetComplexString(uint64_t _mng_token327, uint64_t _mng_buffer328) {
    uint64_t _mng_bracketdepth329;
    uint64_t _mng_comment330;
    uint64_t _mng_backslash331;
    uint64_t _mng_instring332;
    uint64_t _mng_inliteral333;
    uint64_t _mng_sawforwardslash334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t _mng_byte337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    _mng_bracketdepth329 = 1ULL;
    _mng_comment330 = 0ULL;
    _mng_backslash331 = 0ULL;
    _mng_instring332 = 0ULL;
    _mng_inliteral333 = 0ULL;
    _mng_sawforwardslash334 = 0ULL;
    __twr_l41:;
    __twr_v335 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v336 = ((uint64_t (*)())__twr_v335)();
    _mng_byte337 = __twr_v336;
    if (_mng_byte337) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v338 = (uint64_t)(&LexTokenError);
    __twr_v339 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v340 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v338)(_mng_token327, __twr_v339, __twr_v340, __twr_v340, __twr_v340);
    __twr_l43:;
    if (!(_mng_comment330)) { goto __twr_l47; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v341 = 10ULL;
    if (_mng_byte337 != __twr_v341) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_comment330 = 0ULL;
    goto __twr_l48;
    __twr_l50:;
    _mng_byte337 = 0ULL;
    goto __twr_l41;
    __twr_l48:;
    goto __twr_l45;
    __twr_l47:;
    __twr_v342 = 47ULL;
    if (_mng_byte337 == __twr_v342) { goto __twr_l45; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_sawforwardslash334 = 0ULL;
    __twr_l45:;
    if (!(_mng_backslash331)) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_backslash331 = 0ULL;
    goto __twr_l52;
    __twr_l54:;
    __twr_v343 = 92ULL;
    if (_mng_byte337 != __twr_v343) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    _mng_backslash331 = 1ULL;
    goto __twr_l52;
    __twr_l56:;
    if (!(_mng_instring332)) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v344 = 34ULL;
    __twr_v345 = (_mng_byte337 == __twr_v344);
    __twr_v346 = !__twr_v345;
    _mng_instring332 = __twr_v346;
    goto __twr_l52;
    __twr_l58:;
    if (!(_mng_inliteral333)) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v347 = 39ULL;
    __twr_v348 = (_mng_byte337 == __twr_v347);
    __twr_v349 = !__twr_v348;
    _mng_inliteral333 = __twr_v349;
    goto __twr_l52;
    __twr_l60:;
    __twr_v350 = 47ULL;
    if (_mng_byte337 != __twr_v350) { goto __twr_l62; } else { goto __twr_l61; }
    __twr_l61:;
    if (!(_mng_sawforwardslash334)) { goto __twr_l65; } else { goto __twr_l64; }
    __twr_l64:;
    _mng_sawforwardslash334 = 0ULL;
    _mng_comment330 = 1ULL;
    goto __twr_l63;
    __twr_l65:;
    _mng_sawforwardslash334 = 1ULL;
    __twr_l63:;
    goto __twr_l52;
    __twr_l62:;
    __twr_v351 = 34ULL;
    if (_mng_byte337 != __twr_v351) { goto __twr_l67; } else { goto __twr_l66; }
    __twr_l66:;
    _mng_instring332 = 1ULL;
    goto __twr_l52;
    __twr_l67:;
    __twr_v352 = 39ULL;
    if (_mng_byte337 != __twr_v352) { goto __twr_l69; } else { goto __twr_l68; }
    __twr_l68:;
    _mng_inliteral333 = 1ULL;
    goto __twr_l52;
    __twr_l69:;
    __twr_v353 = 91ULL;
    if (_mng_byte337 != __twr_v353) { goto __twr_l71; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v354 = 1ULL;
    __twr_v355 = _mng_bracketdepth329 + __twr_v354;
    _mng_bracketdepth329 = __twr_v355;
    goto __twr_l52;
    __twr_l71:;
    __twr_v356 = 93ULL;
    if (_mng_byte337 != __twr_v356) { goto __twr_l52; } else { goto __twr_l72; }
    __twr_l72:;
    __twr_v357 = 1ULL;
    __twr_v358 = _mng_bracketdepth329 - __twr_v357;
    _mng_bracketdepth329 = __twr_v358;
    if (_mng_bracketdepth329) { goto __twr_l73; } else { goto __twr_l74; }
    __twr_l74:;
    goto __twr_l42;
    __twr_l73:;
    __twr_l52:;
    __twr_v359 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v359)(_mng_buffer328, _mng_byte337);
    _mng_byte337 = 0ULL;
    goto __twr_l41;
    __twr_l42:;
    __twr_l40:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentContents(uint64_t _mng_token360, uint64_t _mng_buffer361) {
    uint64_t _jkl_retv;
    uint64_t _mng_bracketdepth362;
    uint64_t _mng_comment363;
    uint64_t _mng_backslash364;
    uint64_t _mng_instring365;
    uint64_t _mng_inliteral366;
    uint64_t _mng_sawforwardslash367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t _mng_byte370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    _mng_bracketdepth362 = 1ULL;
    _mng_comment363 = 0ULL;
    _mng_backslash364 = 0ULL;
    _mng_instring365 = 0ULL;
    _mng_inliteral366 = 0ULL;
    _mng_sawforwardslash367 = 0ULL;
    __twr_l76:;
    __twr_v368 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v369 = ((uint64_t (*)(uint64_t))__twr_v368)(_mng_token360);
    _mng_byte370 = __twr_v369;
    __twr_v371 = 41ULL;
    if (_mng_byte370 != __twr_v371) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v372 = 2ULL;
    _jkl_retv = __twr_v372;
    goto _jkl_epilogue;
    __twr_l78:;
    __twr_v373 = 44ULL;
    if (_mng_byte370 != __twr_v373) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    goto __twr_l76;
    __twr_l80:;
    goto __twr_l77;
    goto __twr_l76;
    __twr_l77:;
    __twr_l82:;
    if (!(_mng_comment363)) { goto __twr_l86; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v374 = 10ULL;
    if (_mng_byte370 != __twr_v374) { goto __twr_l86; } else { goto __twr_l85; }
    __twr_l85:;
    _mng_comment363 = 0ULL;
    goto __twr_l84;
    __twr_l86:;
    __twr_v375 = 47ULL;
    if (_mng_byte370 == __twr_v375) { goto __twr_l84; } else { goto __twr_l88; }
    __twr_l88:;
    _mng_sawforwardslash367 = 0ULL;
    __twr_l84:;
    if (!(_mng_comment363)) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    goto __twr_l89;
    __twr_l91:;
    if (!(_mng_backslash364)) { goto __twr_l93; } else { goto __twr_l92; }
    __twr_l92:;
    _mng_backslash364 = 0ULL;
    goto __twr_l89;
    __twr_l93:;
    __twr_v376 = 92ULL;
    if (_mng_byte370 != __twr_v376) { goto __twr_l95; } else { goto __twr_l94; }
    __twr_l94:;
    _mng_backslash364 = 1ULL;
    goto __twr_l89;
    __twr_l95:;
    if (!(_mng_instring365)) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v377 = 34ULL;
    __twr_v378 = (_mng_byte370 == __twr_v377);
    __twr_v379 = !__twr_v378;
    _mng_instring365 = __twr_v379;
    goto __twr_l89;
    __twr_l97:;
    if (!(_mng_inliteral366)) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    __twr_v380 = 39ULL;
    __twr_v381 = (_mng_byte370 == __twr_v380);
    __twr_v382 = !__twr_v381;
    _mng_inliteral366 = __twr_v382;
    goto __twr_l89;
    __twr_l99:;
    __twr_v383 = 47ULL;
    if (_mng_byte370 != __twr_v383) { goto __twr_l101; } else { goto __twr_l100; }
    __twr_l100:;
    if (!(_mng_sawforwardslash367)) { goto __twr_l104; } else { goto __twr_l103; }
    __twr_l103:;
    __twr_v384 = 1ULL;
    __twr_v385 = *(uint64_t*)(_mng_buffer361);
    __twr_v386 = __twr_v385 - __twr_v384;
    *(uint64_t*)(_mng_buffer361) = __twr_v386;
    _mng_sawforwardslash367 = 0ULL;
    _mng_comment363 = 1ULL;
    goto __twr_l102;
    __twr_l104:;
    _mng_sawforwardslash367 = 1ULL;
    __twr_l102:;
    goto __twr_l89;
    __twr_l101:;
    __twr_v387 = 34ULL;
    if (_mng_byte370 != __twr_v387) { goto __twr_l106; } else { goto __twr_l105; }
    __twr_l105:;
    _mng_instring365 = 1ULL;
    goto __twr_l89;
    __twr_l106:;
    __twr_v388 = 39ULL;
    if (_mng_byte370 != __twr_v388) { goto __twr_l108; } else { goto __twr_l107; }
    __twr_l107:;
    _mng_inliteral366 = 1ULL;
    goto __twr_l89;
    __twr_l108:;
    __twr_v389 = 40ULL;
    if (_mng_byte370 != __twr_v389) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v390 = 1ULL;
    __twr_v391 = _mng_bracketdepth362 + __twr_v390;
    _mng_bracketdepth362 = __twr_v391;
    goto __twr_l89;
    __twr_l110:;
    __twr_v392 = 41ULL;
    if (_mng_byte370 != __twr_v392) { goto __twr_l112; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v393 = 1ULL;
    __twr_v394 = _mng_bracketdepth362 - __twr_v393;
    _mng_bracketdepth362 = __twr_v394;
    if (_mng_bracketdepth362) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v395 = 3ULL;
    _jkl_retv = __twr_v395;
    goto _jkl_epilogue;
    __twr_l113:;
    goto __twr_l89;
    __twr_l112:;
    __twr_v396 = 1ULL;
    if (_mng_bracketdepth362 != __twr_v396) { goto __twr_l116; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v397 = 44ULL;
    if (_mng_byte370 != __twr_v397) { goto __twr_l116; } else { goto __twr_l115; }
    __twr_l115:;
    goto __twr_l83;
    goto __twr_l89;
    __twr_l116:;
    __twr_v398 = 10ULL;
    if (_mng_byte370 != __twr_v398) { goto __twr_l89; } else { goto __twr_l118; }
    __twr_l118:;
    _mng_byte370 = 32ULL;
    __twr_l89:;
    if (_mng_comment363) { goto __twr_l119; } else { goto __twr_l121; }
    __twr_l121:;
    if (_mng_backslash364) { goto __twr_l119; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v399 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v399)(_mng_buffer361, _mng_byte370);
    __twr_l119:;
    __twr_v400 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v401 = ((uint64_t (*)())__twr_v400)();
    _mng_byte370 = __twr_v401;
    if (_mng_byte370) { goto __twr_l122; } else { goto __twr_l123; }
    __twr_l123:;
    __twr_v402 = (uint64_t)(&LexTokenError);
    __twr_v403 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v404 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v402)(_mng_token360, __twr_v403, __twr_v404, __twr_v404, __twr_v404);
    __twr_l122:;
    goto __twr_l82;
    __twr_l83:;
    __twr_v405 = 1ULL;
    _jkl_retv = __twr_v405;
    goto _jkl_epilogue;
    __twr_l75:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectValue(uint64_t _mng_token406, uint64_t _mng_buffer407, uint64_t _mng_ignore408) {
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t _mng_byte411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t _mng_optoken423[4];
    uint64_t __twr_v424;
    uint64_t _mng_opbuffer425[8];
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t _mng_operator429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t _mng_simpletokbuf439[11];
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t _mng_macro491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    __twr_v409 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v410 = ((uint64_t (*)(uint64_t))__twr_v409)(_mng_token406);
    _mng_byte411 = __twr_v410;
    __twr_v412 = 34ULL;
    if (_mng_byte411 != __twr_v412) { goto __twr_l127; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v413 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v413)(_mng_token406, _mng_buffer407);
    __twr_v414 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v415 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v414)(_mng_buffer407, __twr_v415);
    goto _jkl_epilogue;
    goto __twr_l125;
    __twr_l127:;
    __twr_v416 = 91ULL;
    if (_mng_byte411 != __twr_v416) { goto __twr_l129; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v417 = (uint64_t)(&LexGetComplexString);
    ((void (*)(uint64_t, uint64_t))__twr_v417)(_mng_token406, _mng_buffer407);
    __twr_v418 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v419 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v418)(_mng_buffer407, __twr_v419);
    goto _jkl_epilogue;
    goto __twr_l125;
    __twr_l129:;
    __twr_v420 = 40ULL;
    if (_mng_byte411 != __twr_v420) { goto __twr_l125; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v421 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v422 = (uint64_t)(&_mng_optoken423);
    __twr_v424 = (uint64_t)(&_mng_opbuffer425);
    ((void (*)(uint64_t, uint64_t))__twr_v421)(__twr_v422, __twr_v424);
    __twr_v426 = (uint64_t)(&TlLookupHashTable);
    __twr_v427 = (uint64_t)(&LexOperatorHashTable);
    __twr_v428 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v426)(__twr_v427, __twr_v424);
    _mng_operator429 = __twr_v428;
    if (_mng_operator429) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v430 = (uint64_t)(&LexTokenError);
    __twr_v431 = (uint64_t)(&_mng_optoken423);
    __twr_v432 = (uint64_t)(&"Unknown operator");
    __twr_v433 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v430)(__twr_v431, __twr_v432, __twr_v433, __twr_v433, __twr_v433);
    __twr_l131:;
    __twr_v434 = 48ULL;
    __twr_v435 = _mng_operator429 + __twr_v434;
    __twr_v436 = *(uint64_t*)(__twr_v435);
    ((void (*)(uint64_t, uint64_t))__twr_v436)(_mng_buffer407, _mng_ignore408);
    goto _jkl_epilogue;
    __twr_l125:;
    __twr_v437 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v438 = (uint64_t)(&_mng_simpletokbuf439);
    ((void (*)(uint64_t))__twr_v437)(__twr_v438);
    __twr_v440 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v440)(__twr_v438, _mng_byte411);
    __twr_v441 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v442 = ((uint64_t (*)())__twr_v441)();
    _mng_byte411 = __twr_v442;
    __twr_v443 = (uint64_t)(&LexCharTreatment);
    __twr_v444 = __twr_v443 + _mng_byte411;
    __twr_v445 = *(uint8_t*)(__twr_v444);
    __twr_v446 = 3ULL;
    if (__twr_v445 == __twr_v446) { goto __twr_l134; } else { goto __twr_l133; }
    __twr_l133:;
    if (_mng_byte411) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v447 = (uint64_t)(&LexTokenError);
    __twr_v448 = (uint64_t)(&"Unexpected EOF");
    __twr_v449 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v447)(_mng_token406, __twr_v448, __twr_v449, __twr_v449, __twr_v449);
    __twr_l136:;
    __twr_v450 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v451 = (uint64_t)(&_mng_simpletokbuf439);
    ((void (*)(uint64_t, uint64_t))__twr_v450)(__twr_v451, _mng_byte411);
    __twr_v452 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v453 = ((uint64_t (*)())__twr_v452)();
    _mng_byte411 = __twr_v453;
    __twr_l135:;
    __twr_v454 = (uint64_t)(&LexCharTreatment);
    __twr_v455 = __twr_v454 + _mng_byte411;
    __twr_v456 = *(uint8_t*)(__twr_v455);
    __twr_v457 = 3ULL;
    if (__twr_v456 != __twr_v457) { goto __twr_l133; } else { goto __twr_l134; }
    __twr_l134:;
    __twr_v458 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v459 = (uint64_t)(&_mng_simpletokbuf439);
    __twr_v460 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v458)(__twr_v459, __twr_v460);
    __twr_v461 = 16ULL;
    __twr_v462 = __twr_v459 + __twr_v461;
    __twr_v463 = *(uint64_t*)(__twr_v462);
    __twr_v464 = *(uint8_t*)(__twr_v463);
    __twr_v465 = 48ULL;
    if (__twr_v464 < __twr_v465) { goto __twr_l138; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v466 = (uint64_t)(&_mng_simpletokbuf439);
    __twr_v467 = 16ULL;
    __twr_v468 = __twr_v466 + __twr_v467;
    __twr_v469 = *(uint64_t*)(__twr_v468);
    __twr_v470 = *(uint8_t*)(__twr_v469);
    __twr_v471 = 57ULL;
    if (__twr_v470 > __twr_v471) { goto __twr_l138; } else { goto __twr_l139; }
    __twr_l139:;
    __twr_v472 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v473 = (uint64_t)(&_mng_simpletokbuf439);
    __twr_v474 = 16ULL;
    __twr_v475 = __twr_v473 + __twr_v474;
    __twr_v476 = *(uint64_t*)(__twr_v475);
    __twr_v477 = *(uint64_t*)(__twr_v473);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v472)(_mng_buffer407, __twr_v476, __twr_v477);
    __twr_v478 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v478)(__twr_v473);
    goto _jkl_epilogue;
    __twr_l138:;
    if (!(_mng_ignore408)) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v479 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v480 = (uint64_t)(&_mng_simpletokbuf439);
    ((void (*)(uint64_t))__twr_v479)(__twr_v480);
    __twr_v481 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v482 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v481)(_mng_buffer407, __twr_v482);
    goto _jkl_epilogue;
    __twr_l141:;
    __twr_v483 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v484 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v485 = *(uint64_t*)(__twr_v484);
    __twr_v486 = (uint64_t)(&_mng_simpletokbuf439);
    __twr_v487 = 16ULL;
    __twr_v488 = __twr_v486 + __twr_v487;
    __twr_v489 = *(uint64_t*)(__twr_v488);
    __twr_v490 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v483)(__twr_v485, __twr_v489);
    _mng_macro491 = __twr_v490;
    __twr_v492 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v492)(__twr_v486);
    if (_mng_macro491) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v493 = (uint64_t)(&LexTokenError);
    __twr_v494 = (uint64_t)(&"Not a defined macro name");
    __twr_v495 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v493)(_mng_token406, __twr_v494, __twr_v495, __twr_v495, __twr_v495);
    __twr_l143:;
    __twr_v496 = 264ULL;
    __twr_v497 = _mng_macro491 + __twr_v496;
    __twr_v498 = *(uint8_t*)(__twr_v497);
    if (!(__twr_v498)) { goto __twr_l145; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v499 = (uint64_t)(&LexTokenError);
    __twr_v500 = (uint64_t)(&"Function macros not permitted here");
    __twr_v501 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v499)(_mng_token406, __twr_v500, __twr_v501, __twr_v501, __twr_v501);
    __twr_l145:;
    __twr_v502 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v503 = 80ULL;
    __twr_v504 = _mng_macro491 + __twr_v503;
    __twr_v505 = 96ULL;
    __twr_v506 = _mng_macro491 + __twr_v505;
    __twr_v507 = *(uint64_t*)(__twr_v506);
    __twr_v508 = *(uint64_t*)(__twr_v504);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v502)(_mng_buffer407, __twr_v507, __twr_v508);
    __twr_l124:;
    _jkl_epilogue:;
}
uint64_t LexCollectValueNumeric(uint64_t _mng_token509, uint64_t _mng_ignore510) {
    uint64_t _jkl_retv;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t _mng_buffer513[11];
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t _mng_num539;
    uint64_t __twr_v540;
    __twr_v511 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v512 = (uint64_t)(&_mng_buffer513);
    ((void (*)(uint64_t))__twr_v511)(__twr_v512);
    __twr_v514 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v514)(_mng_token509, __twr_v512, _mng_ignore510);
    if (!(_mng_ignore510)) { goto __twr_l148; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v515 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v516 = (uint64_t)(&_mng_buffer513);
    ((void (*)(uint64_t))__twr_v515)(__twr_v516);
    __twr_v517 = 0ULL;
    _jkl_retv = __twr_v517;
    goto _jkl_epilogue;
    __twr_l148:;
    __twr_v518 = (uint64_t)(&_mng_buffer513);
    __twr_v519 = 16ULL;
    __twr_v520 = __twr_v518 + __twr_v519;
    __twr_v521 = *(uint64_t*)(__twr_v520);
    __twr_v522 = *(uint8_t*)(__twr_v521);
    __twr_v523 = 48ULL;
    if (__twr_v522 < __twr_v523) { goto __twr_l151; } else { goto __twr_l152; }
    __twr_l152:;
    __twr_v524 = (uint64_t)(&_mng_buffer513);
    __twr_v525 = 16ULL;
    __twr_v526 = __twr_v524 + __twr_v525;
    __twr_v527 = *(uint64_t*)(__twr_v526);
    __twr_v528 = *(uint8_t*)(__twr_v527);
    __twr_v529 = 57ULL;
    if (__twr_v528 <= __twr_v529) { goto __twr_l150; } else { goto __twr_l151; }
    __twr_l151:;
    __twr_v530 = (uint64_t)(&LexTokenError);
    __twr_v531 = (uint64_t)(&"Expected numeric value");
    __twr_v532 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v530)(_mng_token509, __twr_v531, __twr_v532, __twr_v532, __twr_v532);
    __twr_l150:;
    __twr_v533 = (uint64_t)(&LexCrunchNumber);
    __twr_v534 = (uint64_t)(&_mng_buffer513);
    __twr_v535 = 16ULL;
    __twr_v536 = __twr_v534 + __twr_v535;
    __twr_v537 = *(uint64_t*)(__twr_v536);
    __twr_v538 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v533)(_mng_token509, __twr_v537);
    _mng_num539 = __twr_v538;
    __twr_v540 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v540)(__twr_v534);
    _jkl_retv = _mng_num539;
    goto _jkl_epilogue;
    __twr_l147:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexConsumeCloseParenthesis() {
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t _mng_token543[4];
    uint64_t __twr_v544;
    uint64_t _mng_byte545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    __twr_v541 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v542 = (uint64_t)(&_mng_token543);
    __twr_v544 = ((uint64_t (*)(uint64_t))__twr_v541)(__twr_v542);
    _mng_byte545 = __twr_v544;
    __twr_v546 = 41ULL;
    if (_mng_byte545 == __twr_v546) { goto __twr_l154; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v547 = (uint64_t)(&LexTokenError);
    __twr_v548 = (uint64_t)(&_mng_token543);
    __twr_v549 = (uint64_t)(&"Expected close parenthesis");
    __twr_v550 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v547)(__twr_v548, __twr_v549, __twr_v550, __twr_v550, __twr_v550);
    __twr_l154:;
    __twr_l153:;
    _jkl_epilogue:;
}
void LexDefineMacroFromArgumentString(uint64_t _mng_arg551) {
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t _mng_macro555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t _mng_equalsptr564;
    uint64_t _mng_j565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    __twr_v552 = (uint64_t)(&TlAllocateFromZone);
    __twr_v553 = (uint64_t)(&LexMacroZone);
    __twr_v554 = ((uint64_t (*)(uint64_t))__twr_v552)(__twr_v553);
    _mng_macro555 = __twr_v554;
    __twr_v556 = 0ULL;
    __twr_v557 = 266ULL;
    __twr_v558 = _mng_macro555 + __twr_v557;
    *(uint8_t*)(__twr_v558) = __twr_v556;
    __twr_v559 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v560 = 80ULL;
    __twr_v561 = _mng_macro555 + __twr_v560;
    ((void (*)(uint64_t))__twr_v559)(__twr_v561);
    __twr_v562 = (uint64_t)(&FeIsMacroArgument);
    __twr_v563 = ((uint64_t (*)(uint64_t))__twr_v562)(_mng_arg551);
    _mng_equalsptr564 = __twr_v563;
    _mng_j565 = 0ULL;
    if (_mng_arg551 >= _mng_equalsptr564) { goto __twr_l158; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v566 = *(uint8_t*)(_mng_arg551);
    __twr_v567 = 168ULL;
    __twr_v568 = _mng_macro555 + __twr_v567;
    __twr_v569 = 1ULL;
    __twr_v570 = __twr_v568 + _mng_j565;
    *(uint8_t*)(__twr_v570) = __twr_v566;
    __twr_v571 = _mng_j565 + __twr_v569;
    _mng_j565 = __twr_v571;
    __twr_v572 = _mng_arg551 + __twr_v569;
    _mng_arg551 = __twr_v572;
    __twr_l159:;
    if (_mng_arg551 < _mng_equalsptr564) { goto __twr_l157; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v573 = 0ULL;
    __twr_v574 = 168ULL;
    __twr_v575 = _mng_macro555 + __twr_v574;
    __twr_v576 = 1ULL;
    __twr_v577 = __twr_v575 + _mng_j565;
    *(uint8_t*)(__twr_v577) = __twr_v573;
    _mng_j565 = 0ULL;
    __twr_v578 = _mng_equalsptr564 + __twr_v576;
    _mng_equalsptr564 = __twr_v578;
    __twr_v579 = *(uint8_t*)(_mng_equalsptr564);
    if (!(__twr_v579)) { goto __twr_l161; } else { goto __twr_l160; }
    __twr_l160:;
    __twr_v580 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v581 = 80ULL;
    __twr_v582 = _mng_macro555 + __twr_v581;
    __twr_v583 = *(uint8_t*)(_mng_equalsptr564);
    ((void (*)(uint64_t, uint64_t))__twr_v580)(__twr_v582, __twr_v583);
    __twr_v584 = 1ULL;
    __twr_v585 = _mng_equalsptr564 + __twr_v584;
    _mng_equalsptr564 = __twr_v585;
    __twr_l162:;
    __twr_v586 = *(uint8_t*)(_mng_equalsptr564);
    if (__twr_v586) { goto __twr_l160; } else { goto __twr_l161; }
    __twr_l161:;
    __twr_v587 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v588 = 80ULL;
    __twr_v589 = _mng_macro555 + __twr_v588;
    __twr_v590 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v587)(__twr_v589, __twr_v590);
    __twr_v591 = 264ULL;
    __twr_v592 = _mng_macro555 + __twr_v591;
    *(uint8_t*)(__twr_v592) = __twr_v590;
    __twr_v593 = 265ULL;
    __twr_v594 = _mng_macro555 + __twr_v593;
    *(uint8_t*)(__twr_v594) = __twr_v590;
    __twr_v595 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v596 = (uint64_t)(&LexRootMacroScope);
    __twr_v597 = *(uint64_t*)(__twr_v596);
    __twr_v598 = 168ULL;
    __twr_v599 = _mng_macro555 + __twr_v598;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v595)(__twr_v597, _mng_macro555, __twr_v599);
    __twr_l156:;
    _jkl_epilogue:;
}
void LexExpandMacro(uint64_t _mng_macro600, uint64_t _mng_token601) {
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t _mng_oldmacroscope613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t _mng_stream628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t _mng_trashtoken658[4];
    uint64_t __twr_v659;
    uint64_t _mng_byte660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t _mng_arg669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t _mng_argmacro673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t _mng_foundclose693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    __twr_v602 = 1ULL;
    __twr_v603 = (uint64_t)(&LexMacroDepth);
    __twr_v604 = *(uint32_t*)(__twr_v603);
    __twr_v605 = __twr_v604 + __twr_v602;
    *(uint32_t*)(__twr_v603) = __twr_v605;
    __twr_v606 = *(uint32_t*)(__twr_v603);
    __twr_v607 = 64ULL;
    if (__twr_v606 < __twr_v607) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v608 = (uint64_t)(&LexTokenError);
    __twr_v609 = (uint64_t)(&"Too many macros deep!");
    __twr_v610 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v608)(_mng_token601, __twr_v609, __twr_v610, __twr_v610, __twr_v610);
    __twr_l164:;
    __twr_v611 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v612 = *(uint64_t*)(__twr_v611);
    _mng_oldmacroscope613 = __twr_v612;
    __twr_v614 = 265ULL;
    __twr_v615 = _mng_macro600 + __twr_v614;
    __twr_v616 = *(uint8_t*)(__twr_v615);
    if (!(__twr_v616)) { goto __twr_l168; } else { goto __twr_l167; }
    __twr_l167:;
    __twr_v617 = 248ULL;
    __twr_v618 = _mng_macro600 + __twr_v617;
    __twr_v619 = *(uint64_t*)(__twr_v618);
    __twr_v620 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v620) = __twr_v619;
    goto __twr_l166;
    __twr_l168:;
    __twr_v621 = (uint64_t)(&LexCreateMacroTable);
    __twr_v622 = (uint64_t)(&LexRootMacroScope);
    __twr_v623 = *(uint64_t*)(__twr_v622);
    __twr_v624 = ((uint64_t (*)(uint64_t))__twr_v621)(__twr_v623);
    __twr_v625 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v625) = __twr_v624;
    __twr_l166:;
    __twr_v626 = (uint64_t)(&LexAllocateStream);
    __twr_v627 = ((uint64_t (*)())__twr_v626)();
    _mng_stream628 = __twr_v627;
    __twr_v629 = (uint64_t)(&LexInitializeStream);
    ((void (*)(uint64_t, uint64_t))__twr_v629)(_mng_stream628, _mng_macro600);
    __twr_v630 = (uint64_t)(&LexCurrentStream);
    __twr_v631 = *(uint64_t*)(__twr_v630);
    __twr_v632 = 8ULL;
    __twr_v633 = __twr_v631 + __twr_v632;
    __twr_v634 = *(uint64_t*)(__twr_v633);
    __twr_v635 = _mng_stream628 + __twr_v632;
    *(uint64_t*)(__twr_v635) = __twr_v634;
    __twr_v636 = 1000000ULL;
    __twr_v637 = 44ULL;
    __twr_v638 = _mng_stream628 + __twr_v637;
    *(uint32_t*)(__twr_v638) = __twr_v636;
    __twr_v639 = 80ULL;
    __twr_v640 = _mng_macro600 + __twr_v639;
    __twr_v641 = 96ULL;
    __twr_v642 = _mng_macro600 + __twr_v641;
    __twr_v643 = *(uint64_t*)(__twr_v642);
    __twr_v644 = 24ULL;
    __twr_v645 = _mng_stream628 + __twr_v644;
    *(uint64_t*)(__twr_v645) = __twr_v643;
    __twr_v646 = *(uint64_t*)(__twr_v640);
    __twr_v647 = 1ULL;
    __twr_v648 = __twr_v646 - __twr_v647;
    __twr_v649 = 36ULL;
    __twr_v650 = _mng_stream628 + __twr_v649;
    *(uint32_t*)(__twr_v650) = __twr_v648;
    __twr_v651 = 72ULL;
    __twr_v652 = _mng_stream628 + __twr_v651;
    *(uint64_t*)(__twr_v652) = _mng_oldmacroscope613;
    __twr_v653 = 264ULL;
    __twr_v654 = _mng_macro600 + __twr_v653;
    __twr_v655 = *(uint8_t*)(__twr_v654);
    if (!(__twr_v655)) { goto __twr_l169; } else { goto __twr_l170; }
    __twr_l170:;
    __twr_v656 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v657 = (uint64_t)(&_mng_trashtoken658);
    __twr_v659 = ((uint64_t (*)(uint64_t))__twr_v656)(__twr_v657);
    _mng_byte660 = __twr_v659;
    __twr_v661 = 40ULL;
    if (_mng_byte660 == __twr_v661) { goto __twr_l171; } else { goto __twr_l172; }
    __twr_l172:;
    __twr_v662 = (uint64_t)(&LexTokenError);
    __twr_v663 = (uint64_t)(&_mng_trashtoken658);
    __twr_v664 = (uint64_t)(&"Expected open parenthesis after function macro name");
    __twr_v665 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v662)(__twr_v663, __twr_v664, __twr_v665, __twr_v665, __twr_v665);
    __twr_l171:;
    __twr_v666 = 256ULL;
    __twr_v667 = _mng_macro600 + __twr_v666;
    __twr_v668 = *(uint64_t*)(__twr_v667);
    _mng_arg669 = __twr_v668;
    if (!(_mng_arg669)) { goto __twr_l174; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v670 = (uint64_t)(&TlAllocateFromZone);
    __twr_v671 = (uint64_t)(&LexMacroZone);
    __twr_v672 = ((uint64_t (*)(uint64_t))__twr_v670)(__twr_v671);
    _mng_argmacro673 = __twr_v672;
    __twr_v674 = 1ULL;
    __twr_v675 = 266ULL;
    __twr_v676 = _mng_argmacro673 + __twr_v675;
    *(uint8_t*)(__twr_v676) = __twr_v674;
    __twr_v677 = 248ULL;
    __twr_v678 = _mng_argmacro673 + __twr_v677;
    *(uint64_t*)(__twr_v678) = _mng_oldmacroscope613;
    __twr_v679 = (uint64_t)(&TlCopyString);
    __twr_v680 = 168ULL;
    __twr_v681 = _mng_argmacro673 + __twr_v680;
    __twr_v682 = 0ULL;
    __twr_v683 = 56ULL;
    __twr_v684 = _mng_arg669 + __twr_v683;
    __twr_v685 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v679)(__twr_v681, __twr_v684, __twr_v685);
    __twr_v686 = 264ULL;
    __twr_v687 = _mng_argmacro673 + __twr_v686;
    *(uint8_t*)(__twr_v687) = __twr_v682;
    __twr_v688 = 265ULL;
    __twr_v689 = _mng_argmacro673 + __twr_v688;
    *(uint8_t*)(__twr_v689) = __twr_v674;
    __twr_v690 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v691 = 80ULL;
    __twr_v692 = _mng_argmacro673 + __twr_v691;
    ((void (*)(uint64_t))__twr_v690)(__twr_v692);
    _mng_foundclose693 = 0ULL;
    __twr_l176:;
    __twr_v694 = 2ULL;
    __twr_v695 = _mng_foundclose693 & __twr_v694;
    if (!(__twr_v695)) { goto __twr_l179; } else { goto __twr_l180; }
    __twr_l180:;
    __twr_v696 = (uint64_t)(&LexTokenError);
    __twr_v697 = (uint64_t)(&_mng_trashtoken658);
    __twr_v698 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v699 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v696)(__twr_v697, __twr_v698, __twr_v699, __twr_v699, __twr_v699);
    __twr_l179:;
    __twr_v700 = (uint64_t)(&LexCollectMacroArgumentContents);
    __twr_v701 = 48ULL;
    __twr_v702 = _mng_argmacro673 + __twr_v701;
    __twr_v703 = 80ULL;
    __twr_v704 = _mng_argmacro673 + __twr_v703;
    __twr_v705 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v700)(__twr_v702, __twr_v704);
    _mng_foundclose693 = __twr_v705;
    __twr_l178:;
    __twr_v706 = 1ULL;
    __twr_v707 = _mng_foundclose693 & __twr_v706;
    if (!(__twr_v707)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v708 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v709 = 80ULL;
    __twr_v710 = _mng_argmacro673 + __twr_v709;
    __twr_v711 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v708)(__twr_v710, __twr_v711);
    __twr_v712 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v713 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v714 = *(uint64_t*)(__twr_v713);
    __twr_v715 = 168ULL;
    __twr_v716 = _mng_argmacro673 + __twr_v715;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v712)(__twr_v714, _mng_argmacro673, __twr_v716);
    __twr_v717 = 48ULL;
    __twr_v718 = _mng_arg669 + __twr_v717;
    __twr_v719 = *(uint64_t*)(__twr_v718);
    _mng_arg669 = __twr_v719;
    __twr_v720 = 2ULL;
    __twr_v721 = _mng_foundclose693 & __twr_v720;
    if (!(__twr_v721)) { goto __twr_l183; } else { goto __twr_l182; }
    __twr_l182:;
    if (!(_mng_arg669)) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v722 = (uint64_t)(&LexTokenError);
    __twr_v723 = (uint64_t)(&_mng_trashtoken658);
    __twr_v724 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v725 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v722)(__twr_v723, __twr_v724, __twr_v725, __twr_v725, __twr_v725);
    __twr_l184:;
    goto __twr_l181;
    __twr_l183:;
    if (_mng_arg669) { goto __twr_l181; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_l187:;
    __twr_v726 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v727 = (uint64_t)(&_mng_trashtoken658);
    __twr_v728 = ((uint64_t (*)(uint64_t))__twr_v726)(__twr_v727);
    _mng_byte660 = __twr_v728;
    __twr_v729 = 41ULL;
    if (_mng_byte660 != __twr_v729) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    goto __twr_l188;
    __twr_l189:;
    goto __twr_l187;
    __twr_l188:;
    __twr_l181:;
    __twr_l175:;
    if (_mng_arg669) { goto __twr_l173; } else { goto __twr_l174; }
    __twr_l174:;
    __twr_l169:;
    __twr_v730 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v730)(_mng_stream628);
    __twr_l163:;
    _jkl_epilogue:;
}
void LexParseInclude() {
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t _mng_str733[11];
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t _mng_token736[4];
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t _mng_created747;
    uint64_t _mng_fileblock748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t _mng_filepath753[11];
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t _mng_handle791;
    uint64_t _mng_status792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t _mng_stream806;
    uint64_t __twr_v807;
    __twr_v731 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v732 = (uint64_t)(&_mng_str733);
    ((void (*)(uint64_t))__twr_v731)(__twr_v732);
    __twr_v734 = (uint64_t)(&LexCollectString);
    __twr_v735 = (uint64_t)(&_mng_token736);
    ((void (*)(uint64_t, uint64_t))__twr_v734)(__twr_v735, __twr_v732);
    __twr_v737 = (uint64_t)(&LexFalseCount);
    __twr_v738 = *(uint32_t*)(__twr_v737);
    if (!(__twr_v738)) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v739 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v740 = (uint64_t)(&_mng_str733);
    ((void (*)(uint64_t))__twr_v739)(__twr_v740);
    goto _jkl_epilogue;
    __twr_l192:;
    __twr_v741 = (uint64_t)(&FeCreateFileBlock);
    __twr_v742 = (uint64_t)(&_mng_str733);
    __twr_v743 = 16ULL;
    __twr_v744 = __twr_v742 + __twr_v743;
    __twr_v745 = *(uint64_t*)(__twr_v744);
    __twr_v746 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v741)(__twr_v745, (uint64_t)(&_mng_created747));
    _mng_fileblock748 = __twr_v746;
    if (_mng_created747) { goto __twr_l194; } else { goto __twr_l195; }
    __twr_l195:;
    __twr_v749 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v750 = (uint64_t)(&_mng_str733);
    ((void (*)(uint64_t))__twr_v749)(__twr_v750);
    goto _jkl_epilogue;
    __twr_l194:;
    __twr_v751 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v752 = (uint64_t)(&_mng_filepath753);
    ((void (*)(uint64_t))__twr_v751)(__twr_v752);
    __twr_v754 = (uint64_t)(&TlCopyParentPath);
    __twr_v755 = (uint64_t)(&LexCurrentStream);
    __twr_v756 = *(uint64_t*)(__twr_v755);
    __twr_v757 = 8ULL;
    __twr_v758 = __twr_v756 + __twr_v757;
    __twr_v759 = *(uint64_t*)(__twr_v758);
    __twr_v760 = 48ULL;
    __twr_v761 = __twr_v759 + __twr_v760;
    ((void (*)(uint64_t, uint64_t))__twr_v754)(__twr_v761, __twr_v752);
    __twr_v762 = *(uint64_t*)(__twr_v752);
    if (__twr_v762) { goto __twr_l198; } else { goto __twr_l197; }
    __twr_l197:;
    __twr_v763 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v764 = (uint64_t)(&_mng_filepath753);
    __twr_v765 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v763)(__twr_v764, __twr_v765);
    __twr_v766 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v763)(__twr_v764, __twr_v766);
    goto __twr_l196;
    __twr_l198:;
    __twr_v767 = (uint64_t)(&_mng_filepath753);
    __twr_v768 = 16ULL;
    __twr_v769 = __twr_v767 + __twr_v768;
    __twr_v770 = *(uint64_t*)(__twr_v769);
    __twr_v771 = *(uint64_t*)(__twr_v767);
    __twr_v772 = 1ULL;
    __twr_v773 = __twr_v771 - __twr_v772;
    __twr_v774 = __twr_v770 + __twr_v773;
    __twr_v775 = *(uint8_t*)(__twr_v774);
    __twr_v776 = 47ULL;
    if (__twr_v775 == __twr_v776) { goto __twr_l196; } else { goto __twr_l199; }
    __twr_l199:;
    __twr_v777 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v778 = (uint64_t)(&_mng_filepath753);
    __twr_v779 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v777)(__twr_v778, __twr_v779);
    __twr_l196:;
    __twr_v780 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v781 = (uint64_t)(&_mng_filepath753);
    __twr_v782 = (uint64_t)(&_mng_str733);
    __twr_v783 = 16ULL;
    __twr_v784 = __twr_v782 + __twr_v783;
    __twr_v785 = *(uint64_t*)(__twr_v784);
    __twr_v786 = *(uint64_t*)(__twr_v782);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v780)(__twr_v781, __twr_v785, __twr_v786);
    __twr_v787 = (uint64_t)(&TlOpenSource);
    __twr_v788 = __twr_v781 + __twr_v783;
    __twr_v789 = *(uint64_t*)(__twr_v788);
    __twr_v790 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v787)(__twr_v789, (uint64_t)(&_mng_handle791));
    _mng_status792 = __twr_v790;
    if (!(_mng_status792)) { goto __twr_l200; } else { goto __twr_l201; }
    __twr_l201:;
    __twr_v793 = (uint64_t)(&LexTokenError);
    __twr_v794 = (uint64_t)(&_mng_token736);
    __twr_v795 = (uint64_t)(&"Failed to include the file.");
    __twr_v796 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v793)(__twr_v794, __twr_v795, __twr_v796, __twr_v796, __twr_v796);
    __twr_l200:;
    __twr_v797 = (uint64_t)(&FeCopyPathFileBlock);
    __twr_v798 = (uint64_t)(&_mng_filepath753);
    __twr_v799 = 16ULL;
    __twr_v800 = __twr_v798 + __twr_v799;
    __twr_v801 = *(uint64_t*)(__twr_v800);
    ((void (*)(uint64_t, uint64_t))__twr_v797)(_mng_fileblock748, __twr_v801);
    __twr_v802 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v802)(__twr_v798);
    __twr_v803 = (uint64_t)(&_mng_str733);
    ((void (*)(uint64_t))__twr_v802)(__twr_v803);
    __twr_v804 = (uint64_t)(&LexCreateFileStream);
    __twr_v805 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v804)(_mng_fileblock748, _mng_handle791);
    _mng_stream806 = __twr_v805;
    __twr_v807 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v807)(_mng_stream806);
    __twr_l191:;
    _jkl_epilogue:;
}
void LexParseDepend() {
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t _mng_oldstream810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t _mng_stream813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    __twr_v808 = (uint64_t)(&LexCurrentStream);
    __twr_v809 = *(uint64_t*)(__twr_v808);
    _mng_oldstream810 = __twr_v809;
    __twr_v811 = (uint64_t)(&LexParseInclude);
    ((void (*)())__twr_v811)();
    __twr_v812 = *(uint64_t*)(__twr_v808);
    _mng_stream813 = __twr_v812;
    if (_mng_stream813 != _mng_oldstream810) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    goto _jkl_epilogue;
    __twr_l203:;
    __twr_v814 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v815 = *(uint64_t*)(__twr_v814);
    __twr_v816 = 72ULL;
    __twr_v817 = _mng_stream813 + __twr_v816;
    *(uint64_t*)(__twr_v817) = __twr_v815;
    __twr_v818 = (uint64_t)(&LexCreateMacroTable);
    __twr_v819 = *(uint64_t*)(__twr_v814);
    __twr_v820 = ((uint64_t (*)(uint64_t))__twr_v818)(__twr_v819);
    *(uint64_t*)(__twr_v814) = __twr_v820;
    __twr_l202:;
    _jkl_epilogue:;
}
void LexParseDefine() {
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t _mng_contentsbuffer825[11];
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t _mng_trashtoken828[4];
    uint64_t __twr_v829;
    uint64_t _mng_namebuffer830[8];
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t _mng_macro837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t _mng_oldmacro853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    __twr_v821 = (uint64_t)(&LexFalseCount);
    __twr_v822 = *(uint32_t*)(__twr_v821);
    if (!(__twr_v822)) { goto __twr_l206; } else { goto __twr_l207; }
    __twr_l207:;
    __twr_v823 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v824 = (uint64_t)(&_mng_contentsbuffer825);
    ((void (*)(uint64_t))__twr_v823)(__twr_v824);
    __twr_v826 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v827 = (uint64_t)(&_mng_trashtoken828);
    __twr_v829 = (uint64_t)(&_mng_namebuffer830);
    __twr_v831 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v826)(__twr_v827, __twr_v829);
    __twr_v832 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v832)(__twr_v827, __twr_v824, __twr_v831);
    __twr_v833 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v833)(__twr_v824);
    goto _jkl_epilogue;
    __twr_l206:;
    __twr_v834 = (uint64_t)(&TlAllocateFromZone);
    __twr_v835 = (uint64_t)(&LexMacroZone);
    __twr_v836 = ((uint64_t (*)(uint64_t))__twr_v834)(__twr_v835);
    _mng_macro837 = __twr_v836;
    __twr_v838 = 0ULL;
    __twr_v839 = 266ULL;
    __twr_v840 = _mng_macro837 + __twr_v839;
    *(uint8_t*)(__twr_v840) = __twr_v838;
    __twr_v841 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v842 = 80ULL;
    __twr_v843 = _mng_macro837 + __twr_v842;
    ((void (*)(uint64_t))__twr_v841)(__twr_v843);
    __twr_v844 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v845 = 48ULL;
    __twr_v846 = _mng_macro837 + __twr_v845;
    __twr_v847 = 168ULL;
    __twr_v848 = _mng_macro837 + __twr_v847;
    ((void (*)(uint64_t, uint64_t))__twr_v844)(__twr_v846, __twr_v848);
    __twr_v849 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v850 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v851 = *(uint64_t*)(__twr_v850);
    __twr_v852 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v849)(__twr_v851, __twr_v848);
    _mng_oldmacro853 = __twr_v852;
    if (!(_mng_oldmacro853)) { goto __twr_l208; } else { goto __twr_l210; }
    __twr_l210:;
    __twr_v854 = 32ULL;
    __twr_v855 = _mng_oldmacro853 + __twr_v854;
    __twr_v856 = *(uint64_t*)(__twr_v855);
    __twr_v857 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v858 = *(uint64_t*)(__twr_v857);
    __twr_v859 = 8ULL;
    __twr_v860 = __twr_v858 + __twr_v859;
    if (__twr_v856 != __twr_v860) { goto __twr_l208; } else { goto __twr_l209; }
    __twr_l209:;
    __twr_v861 = (uint64_t)(&LexTokenError);
    __twr_v862 = 48ULL;
    __twr_v863 = _mng_macro837 + __twr_v862;
    __twr_v864 = (uint64_t)(&"Macro already defined");
    __twr_v865 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v861)(__twr_v863, __twr_v864, __twr_v865, __twr_v865, __twr_v865);
    __twr_l208:;
    __twr_v866 = 0ULL;
    __twr_v867 = 264ULL;
    __twr_v868 = _mng_macro837 + __twr_v867;
    *(uint8_t*)(__twr_v868) = __twr_v866;
    __twr_v869 = 265ULL;
    __twr_v870 = _mng_macro837 + __twr_v869;
    *(uint8_t*)(__twr_v870) = __twr_v866;
    __twr_v871 = (uint64_t)(&LexCollectValue);
    __twr_v872 = 48ULL;
    __twr_v873 = _mng_macro837 + __twr_v872;
    __twr_v874 = 80ULL;
    __twr_v875 = _mng_macro837 + __twr_v874;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v871)(__twr_v873, __twr_v875, __twr_v866);
    __twr_v876 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v877 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v878 = *(uint64_t*)(__twr_v877);
    __twr_v879 = 168ULL;
    __twr_v880 = _mng_macro837 + __twr_v879;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v876)(__twr_v878, _mng_macro837, __twr_v880);
    __twr_l205:;
    _jkl_epilogue:;
}
void LexParseUndefine() {
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t _mng_token883[4];
    uint64_t __twr_v884;
    uint64_t _mng_buffer885[8];
    uint64_t __twr_v886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t _mng_oldmacro893;
    uint64_t __twr_v894;
    uint64_t __twr_v895;
    __twr_v881 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v882 = (uint64_t)(&_mng_token883);
    __twr_v884 = (uint64_t)(&_mng_buffer885);
    ((void (*)(uint64_t, uint64_t))__twr_v881)(__twr_v882, __twr_v884);
    __twr_v886 = (uint64_t)(&LexFalseCount);
    __twr_v887 = *(uint32_t*)(__twr_v886);
    if (!(__twr_v887)) { goto __twr_l212; } else { goto __twr_l213; }
    __twr_l213:;
    goto _jkl_epilogue;
    __twr_l212:;
    __twr_v888 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v889 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v890 = *(uint64_t*)(__twr_v889);
    __twr_v891 = (uint64_t)(&_mng_buffer885);
    __twr_v892 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v888)(__twr_v890, __twr_v891);
    _mng_oldmacro893 = __twr_v892;
    if (_mng_oldmacro893) { goto __twr_l214; } else { goto __twr_l215; }
    __twr_l215:;
    goto _jkl_epilogue;
    __twr_l214:;
    __twr_v894 = (uint64_t)(&TlRemoveSymbolTable);
    ((void (*)(uint64_t))__twr_v894)(_mng_oldmacro893);
    __twr_v895 = (uint64_t)(&LexMacroDelete);
    ((void (*)(uint64_t))__twr_v895)(_mng_oldmacro893);
    __twr_l211:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentName(uint64_t _mng_token896, uint64_t _mng_buffer897) {
    uint64_t _jkl_retv;
    uint64_t _mng_len898;
    uint64_t __twr_v899;
    uint64_t __twr_v900;
    uint64_t _mng_byte901;
    uint64_t __twr_v902;
    uint64_t __twr_v903;
    uint64_t __twr_v904;
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t __twr_v907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    uint64_t __twr_v915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    _mng_len898 = 0ULL;
    __twr_l217:;
    __twr_v899 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v900 = ((uint64_t (*)(uint64_t))__twr_v899)(_mng_token896);
    _mng_byte901 = __twr_v900;
    __twr_v902 = 41ULL;
    if (_mng_byte901 != __twr_v902) { goto __twr_l221; } else { goto __twr_l220; }
    __twr_l220:;
    __twr_v903 = 2ULL;
    _jkl_retv = __twr_v903;
    goto _jkl_epilogue;
    goto __twr_l219;
    __twr_l221:;
    __twr_v904 = 44ULL;
    if (_mng_byte901 != __twr_v904) { goto __twr_l219; } else { goto __twr_l222; }
    __twr_l222:;
    goto __twr_l217;
    __twr_l219:;
    goto __twr_l218;
    goto __twr_l217;
    __twr_l218:;
    __twr_l223:;
    __twr_v905 = (uint64_t)(&LexCharTreatment);
    __twr_v906 = __twr_v905 + _mng_byte901;
    __twr_v907 = *(uint8_t*)(__twr_v906);
    __twr_v908 = 3ULL;
    if (__twr_v907 != __twr_v908) { goto __twr_l225; } else { goto __twr_l226; }
    __twr_l226:;
    __twr_v909 = 0ULL;
    *(uint8_t*)(_mng_buffer897) = __twr_v909;
    __twr_v910 = 1ULL;
    _jkl_retv = __twr_v910;
    goto _jkl_epilogue;
    __twr_l225:;
    __twr_v911 = 41ULL;
    if (_mng_byte901 != __twr_v911) { goto __twr_l227; } else { goto __twr_l228; }
    __twr_l228:;
    __twr_v912 = 0ULL;
    *(uint8_t*)(_mng_buffer897) = __twr_v912;
    __twr_v913 = 3ULL;
    _jkl_retv = __twr_v913;
    goto _jkl_epilogue;
    __twr_l227:;
    __twr_v914 = 44ULL;
    if (_mng_byte901 != __twr_v914) { goto __twr_l229; } else { goto __twr_l230; }
    __twr_l230:;
    __twr_v915 = 0ULL;
    *(uint8_t*)(_mng_buffer897) = __twr_v915;
    __twr_v916 = 1ULL;
    _jkl_retv = __twr_v916;
    goto _jkl_epilogue;
    __twr_l229:;
    __twr_v917 = (uint64_t)(&LexCharTreatment);
    __twr_v918 = __twr_v917 + _mng_byte901;
    __twr_v919 = *(uint8_t*)(__twr_v918);
    if (!(__twr_v919)) { goto __twr_l231; } else { goto __twr_l232; }
    __twr_l232:;
    __twr_v920 = (uint64_t)(&LexTokenError);
    __twr_v921 = (uint64_t)(&"Illegal character in token");
    __twr_v922 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v920)(_mng_token896, __twr_v921, __twr_v922, __twr_v922, __twr_v922);
    __twr_l231:;
    __twr_v923 = 63ULL;
    if (_mng_len898 != __twr_v923) { goto __twr_l233; } else { goto __twr_l234; }
    __twr_l234:;
    __twr_v924 = (uint64_t)(&LexTokenError);
    __twr_v925 = (uint64_t)(&"Token length too great");
    __twr_v926 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v924)(_mng_token896, __twr_v925, __twr_v926, __twr_v926, __twr_v926);
    __twr_l233:;
    *(uint8_t*)(_mng_buffer897) = _mng_byte901;
    __twr_v927 = 1ULL;
    __twr_v928 = _mng_buffer897 + __twr_v927;
    _mng_buffer897 = __twr_v928;
    __twr_v929 = _mng_len898 + __twr_v927;
    _mng_len898 = __twr_v929;
    __twr_v930 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v931 = ((uint64_t (*)())__twr_v930)();
    _mng_byte901 = __twr_v931;
    goto __twr_l223;
    __twr_l224:;
    __twr_l216:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectMacroArgumentList(uint64_t _mng_ignore932, uint64_t _mng_o_arglisthead, uint64_t _mng_o_length) {
    uint64_t _mng_arglisttail933;
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t _mng_hashtable936[196];
    uint64_t _mng_arglisthead937;
    uint64_t _mng_length938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t _mng_token941[4];
    uint64_t __twr_v942;
    uint64_t _mng_buffer943[8];
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t _mng_state946;
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t _mng_created953;
    uint64_t _mng_arg954;
    uint64_t __twr_v955;
    uint64_t __twr_v956;
    uint64_t __twr_v957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t __twr_v961;
    uint64_t __twr_v962;
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    uint64_t __twr_v965;
    uint64_t __twr_v966;
    uint64_t __twr_v967;
    uint64_t __twr_v968;
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    _mng_arglisttail933 = 0ULL;
    __twr_v934 = (uint64_t)(&TlInitializeHashTable);
    __twr_v935 = (uint64_t)(&_mng_hashtable936);
    ((void (*)(uint64_t))__twr_v934)(__twr_v935);
    _mng_arglisthead937 = 0ULL;
    _mng_length938 = 0ULL;
    __twr_l236:;
    __twr_v939 = (uint64_t)(&LexCollectMacroArgumentName);
    __twr_v940 = (uint64_t)(&_mng_token941);
    __twr_v942 = (uint64_t)(&_mng_buffer943);
    __twr_v944 = 1ULL;
    __twr_v945 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v939)(__twr_v940, __twr_v942);
    _mng_state946 = __twr_v945;
    __twr_v947 = _mng_state946 & __twr_v944;
    if (!(__twr_v947)) { goto __twr_l238; } else { goto __twr_l240; }
    __twr_l240:;
    if (_mng_ignore932) { goto __twr_l238; } else { goto __twr_l239; }
    __twr_l239:;
    __twr_v948 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v949 = (uint64_t)(&_mng_hashtable936);
    __twr_v950 = 120ULL;
    __twr_v951 = (uint64_t)(&_mng_buffer943);
    __twr_v952 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v948)(__twr_v949, __twr_v950, __twr_v951, (uint64_t)(&_mng_created953));
    _mng_arg954 = __twr_v952;
    if (_mng_created953) { goto __twr_l241; } else { goto __twr_l242; }
    __twr_l242:;
    __twr_v955 = (uint64_t)(&LexTokenError);
    __twr_v956 = (uint64_t)(&_mng_token941);
    __twr_v957 = (uint64_t)(&"Macro argument name already used");
    __twr_v958 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v955)(__twr_v956, __twr_v957, __twr_v958, __twr_v958, __twr_v958);
    __twr_l241:;
    __twr_v959 = (uint64_t)(&TlCopyString);
    __twr_v960 = 56ULL;
    __twr_v961 = _mng_arg954 + __twr_v960;
    __twr_v962 = 1ULL;
    __twr_v963 = (uint64_t)(&_mng_buffer943);
    __twr_v964 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v959)(__twr_v961, __twr_v963, __twr_v964);
    __twr_v965 = _mng_length938 + __twr_v962;
    _mng_length938 = __twr_v965;
    __twr_v966 = 0ULL;
    __twr_v967 = 48ULL;
    __twr_v968 = _mng_arg954 + __twr_v967;
    *(uint64_t*)(__twr_v968) = __twr_v966;
    if (!(_mng_arglisttail933)) { goto __twr_l245; } else { goto __twr_l244; }
    __twr_l244:;
    __twr_v969 = 48ULL;
    __twr_v970 = _mng_arglisttail933 + __twr_v969;
    *(uint64_t*)(__twr_v970) = _mng_arg954;
    goto __twr_l243;
    __twr_l245:;
    _mng_arglisthead937 = _mng_arg954;
    __twr_l243:;
    _mng_arglisttail933 = _mng_arg954;
    __twr_l238:;
    __twr_v971 = 2ULL;
    __twr_v972 = _mng_state946 & __twr_v971;
    if (!(__twr_v972)) { goto __twr_l246; } else { goto __twr_l247; }
    __twr_l247:;
    goto _jkl_epilogue;
    __twr_l246:;
    goto __twr_l236;
    __twr_l237:;
    __twr_l235:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_arglisthead) = _mng_arglisthead937;
    *(uint64_t*)(_mng_o_length) = _mng_length938;
}
void LexParseMacro() {
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t __twr_v975;
    uint64_t _mng_macro976;
    uint64_t __twr_v977;
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t _mng_trashtoken990[4];
    uint64_t __twr_v991;
    uint64_t _mng_byte992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t _mng_length1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t _mng_contentsbuffer1008[11];
    uint64_t __twr_v1009;
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t _mng_oldmacro1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    __twr_v973 = (uint64_t)(&TlAllocateFromZone);
    __twr_v974 = (uint64_t)(&LexMacroZone);
    __twr_v975 = ((uint64_t (*)(uint64_t))__twr_v973)(__twr_v974);
    _mng_macro976 = __twr_v975;
    __twr_v977 = 1ULL;
    __twr_v978 = 266ULL;
    __twr_v979 = _mng_macro976 + __twr_v978;
    *(uint8_t*)(__twr_v979) = __twr_v977;
    __twr_v980 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v981 = 80ULL;
    __twr_v982 = _mng_macro976 + __twr_v981;
    ((void (*)(uint64_t))__twr_v980)(__twr_v982);
    __twr_v983 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v984 = 48ULL;
    __twr_v985 = _mng_macro976 + __twr_v984;
    __twr_v986 = 168ULL;
    __twr_v987 = _mng_macro976 + __twr_v986;
    ((void (*)(uint64_t, uint64_t))__twr_v983)(__twr_v985, __twr_v987);
    __twr_v988 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v989 = (uint64_t)(&_mng_trashtoken990);
    __twr_v991 = ((uint64_t (*)(uint64_t))__twr_v988)(__twr_v989);
    _mng_byte992 = __twr_v991;
    __twr_v993 = 40ULL;
    if (_mng_byte992 == __twr_v993) { goto __twr_l249; } else { goto __twr_l250; }
    __twr_l250:;
    __twr_v994 = (uint64_t)(&LexTokenError);
    __twr_v995 = (uint64_t)(&_mng_trashtoken990);
    __twr_v996 = (uint64_t)(&"Expected an open parenthesis");
    __twr_v997 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v994)(__twr_v995, __twr_v996, __twr_v997, __twr_v997, __twr_v997);
    __twr_l249:;
    __twr_v998 = (uint64_t)(&LexFalseCount);
    __twr_v999 = *(uint32_t*)(__twr_v998);
    if (!(__twr_v999)) { goto __twr_l251; } else { goto __twr_l252; }
    __twr_l252:;
    __twr_v1000 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1001 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1000)(__twr_v1001, (uint64_t)(&__twr_v1002), (uint64_t)(&_mng_length1003));
    __twr_v1004 = 256ULL;
    __twr_v1005 = _mng_macro976 + __twr_v1004;
    *(uint64_t*)(__twr_v1005) = __twr_v1002;
    __twr_v1006 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1007 = (uint64_t)(&_mng_contentsbuffer1008);
    ((void (*)(uint64_t))__twr_v1006)(__twr_v1007);
    __twr_v1009 = (uint64_t)(&LexCollectValue);
    __twr_v1010 = (uint64_t)(&_mng_trashtoken990);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1009)(__twr_v1010, __twr_v1007, __twr_v1001);
    __twr_v1011 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1011)(__twr_v1007);
    goto _jkl_epilogue;
    __twr_l251:;
    __twr_v1012 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1013 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1012)(__twr_v1013, (uint64_t)(&__twr_v1014), (uint64_t)(&_mng_length1003));
    __twr_v1015 = 256ULL;
    __twr_v1016 = _mng_macro976 + __twr_v1015;
    *(uint64_t*)(__twr_v1016) = __twr_v1014;
    if (_mng_length1003) { goto __twr_l253; } else { goto __twr_l254; }
    __twr_l254:;
    __twr_v1017 = (uint64_t)(&LexTokenError);
    __twr_v1018 = 48ULL;
    __twr_v1019 = _mng_macro976 + __twr_v1018;
    __twr_v1020 = (uint64_t)(&"Must have at least 1 argument");
    __twr_v1021 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1017)(__twr_v1019, __twr_v1020, __twr_v1021, __twr_v1021, __twr_v1021);
    __twr_l253:;
    __twr_v1022 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1023 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1024 = *(uint64_t*)(__twr_v1023);
    __twr_v1025 = 168ULL;
    __twr_v1026 = _mng_macro976 + __twr_v1025;
    __twr_v1027 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1022)(__twr_v1024, __twr_v1026);
    _mng_oldmacro1028 = __twr_v1027;
    if (!(_mng_oldmacro1028)) { goto __twr_l255; } else { goto __twr_l256; }
    __twr_l256:;
    __twr_v1029 = (uint64_t)(&LexTokenError);
    __twr_v1030 = 48ULL;
    __twr_v1031 = _mng_macro976 + __twr_v1030;
    __twr_v1032 = (uint64_t)(&"Macro already defined");
    __twr_v1033 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1029)(__twr_v1031, __twr_v1032, __twr_v1033, __twr_v1033, __twr_v1033);
    __twr_l255:;
    __twr_v1034 = 1ULL;
    __twr_v1035 = 264ULL;
    __twr_v1036 = _mng_macro976 + __twr_v1035;
    *(uint8_t*)(__twr_v1036) = __twr_v1034;
    __twr_v1037 = 0ULL;
    __twr_v1038 = 265ULL;
    __twr_v1039 = _mng_macro976 + __twr_v1038;
    *(uint8_t*)(__twr_v1039) = __twr_v1037;
    __twr_v1040 = (uint64_t)(&LexCollectValue);
    __twr_v1041 = 48ULL;
    __twr_v1042 = _mng_macro976 + __twr_v1041;
    __twr_v1043 = 80ULL;
    __twr_v1044 = _mng_macro976 + __twr_v1043;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1040)(__twr_v1042, __twr_v1044, __twr_v1037);
    __twr_v1045 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1046 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1047 = *(uint64_t*)(__twr_v1046);
    __twr_v1048 = 168ULL;
    __twr_v1049 = _mng_macro976 + __twr_v1048;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1045)(__twr_v1047, _mng_macro976, __twr_v1049);
    __twr_l248:;
    _jkl_epilogue:;
}
void LexParseIf() {
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t _mng_token1052[4];
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t _mng_truthy1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    __twr_v1050 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1051 = (uint64_t)(&_mng_token1052);
    __twr_v1053 = (uint64_t)(&LexFalseCount);
    __twr_v1054 = *(uint32_t*)(__twr_v1053);
    __twr_v1055 = 0ULL;
    __twr_v1056 = (__twr_v1054 != __twr_v1055);
    __twr_v1057 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1050)(__twr_v1051, __twr_v1056);
    _mng_truthy1058 = __twr_v1057;
    __twr_v1059 = *(uint32_t*)(__twr_v1053);
    if (!(__twr_v1059)) { goto __twr_l258; } else { goto __twr_l259; }
    __twr_l259:;
    __twr_v1060 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1061 = (uint64_t)(&LexIfStack);
    __twr_v1062 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1060)(__twr_v1061, __twr_v1062);
    __twr_v1063 = 1ULL;
    __twr_v1064 = (uint64_t)(&LexFalseCount);
    __twr_v1065 = *(uint32_t*)(__twr_v1064);
    __twr_v1066 = __twr_v1065 + __twr_v1063;
    *(uint32_t*)(__twr_v1064) = __twr_v1066;
    goto _jkl_epilogue;
    __twr_l258:;
    if (!(_mng_truthy1058)) { goto __twr_l262; } else { goto __twr_l261; }
    __twr_l261:;
    __twr_v1067 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1068 = (uint64_t)(&LexIfStack);
    __twr_v1069 = 2ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1067)(__twr_v1068, __twr_v1069);
    goto __twr_l260;
    __twr_l262:;
    __twr_v1070 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1071 = (uint64_t)(&LexIfStack);
    __twr_v1072 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1070)(__twr_v1071, __twr_v1072);
    __twr_v1073 = (uint64_t)(&LexFalseCount);
    __twr_v1074 = *(uint32_t*)(__twr_v1073);
    __twr_v1075 = __twr_v1074 + __twr_v1072;
    *(uint32_t*)(__twr_v1073) = __twr_v1075;
    __twr_l260:;
    __twr_l257:;
    _jkl_epilogue:;
}
void LexParseElse() {
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t __twr_v1088;
    uint64_t __twr_v1089;
    uint64_t _mng_status1090;
    uint64_t __twr_v1091;
    uint64_t __twr_v1092;
    uint64_t __twr_v1093;
    uint64_t __twr_v1094;
    uint64_t __twr_v1095;
    uint64_t __twr_v1096;
    uint64_t __twr_v1097;
    uint64_t __twr_v1098;
    uint64_t __twr_v1099;
    uint64_t __twr_v1100;
    uint64_t __twr_v1101;
    uint64_t __twr_v1102;
    uint64_t __twr_v1103;
    uint64_t __twr_v1104;
    uint64_t __twr_v1105;
    uint64_t __twr_v1106;
    uint64_t __twr_v1107;
    uint64_t __twr_v1108;
    uint64_t __twr_v1109;
    uint64_t __twr_v1110;
    uint64_t __twr_v1111;
    uint64_t __twr_v1112;
    uint64_t __twr_v1113;
    uint64_t __twr_v1114;
    uint64_t __twr_v1115;
    __twr_v1076 = (uint64_t)(&LexIfStack);
    __twr_v1077 = *(uint64_t*)(__twr_v1076);
    if (__twr_v1077) { goto __twr_l264; } else { goto __twr_l265; }
    __twr_l265:;
    __twr_v1078 = (uint64_t)(&LexStreamError);
    __twr_v1079 = (uint64_t)(&"ELSE with no matching IF");
    __twr_v1080 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1078)(__twr_v1079, __twr_v1080, __twr_v1080, __twr_v1080);
    __twr_l264:;
    __twr_v1081 = (uint64_t)(&LexIfStack);
    __twr_v1082 = 16ULL;
    __twr_v1083 = __twr_v1081 + __twr_v1082;
    __twr_v1084 = *(uint64_t*)(__twr_v1083);
    __twr_v1085 = *(uint64_t*)(__twr_v1081);
    __twr_v1086 = 1ULL;
    __twr_v1087 = __twr_v1085 - __twr_v1086;
    __twr_v1088 = __twr_v1084 + __twr_v1087;
    __twr_v1089 = *(uint8_t*)(__twr_v1088);
    _mng_status1090 = __twr_v1089;
    if (_mng_status1090) { goto __twr_l266; } else { goto __twr_l267; }
    __twr_l267:;
    goto _jkl_epilogue;
    __twr_l266:;
    __twr_v1091 = 2ULL;
    if (_mng_status1090 != __twr_v1091) { goto __twr_l268; } else { goto __twr_l269; }
    __twr_l269:;
    __twr_v1092 = 0ULL;
    __twr_v1093 = (uint64_t)(&LexIfStack);
    __twr_v1094 = 16ULL;
    __twr_v1095 = __twr_v1093 + __twr_v1094;
    __twr_v1096 = *(uint64_t*)(__twr_v1095);
    __twr_v1097 = *(uint64_t*)(__twr_v1093);
    __twr_v1098 = 1ULL;
    __twr_v1099 = __twr_v1097 - __twr_v1098;
    __twr_v1100 = __twr_v1096 + __twr_v1099;
    *(uint8_t*)(__twr_v1100) = __twr_v1092;
    __twr_v1101 = (uint64_t)(&LexFalseCount);
    __twr_v1102 = *(uint32_t*)(__twr_v1101);
    __twr_v1103 = __twr_v1102 + __twr_v1098;
    *(uint32_t*)(__twr_v1101) = __twr_v1103;
    goto _jkl_epilogue;
    __twr_l268:;
    __twr_v1104 = 2ULL;
    __twr_v1105 = (uint64_t)(&LexIfStack);
    __twr_v1106 = 16ULL;
    __twr_v1107 = __twr_v1105 + __twr_v1106;
    __twr_v1108 = *(uint64_t*)(__twr_v1107);
    __twr_v1109 = *(uint64_t*)(__twr_v1105);
    __twr_v1110 = 1ULL;
    __twr_v1111 = __twr_v1109 - __twr_v1110;
    __twr_v1112 = __twr_v1108 + __twr_v1111;
    *(uint8_t*)(__twr_v1112) = __twr_v1104;
    __twr_v1113 = (uint64_t)(&LexFalseCount);
    __twr_v1114 = *(uint32_t*)(__twr_v1113);
    __twr_v1115 = __twr_v1114 - __twr_v1110;
    *(uint32_t*)(__twr_v1113) = __twr_v1115;
    __twr_l263:;
    _jkl_epilogue:;
}
void LexParseElseif() {
    uint64_t __twr_v1116;
    uint64_t __twr_v1117;
    uint64_t __twr_v1118;
    uint64_t __twr_v1119;
    uint64_t __twr_v1120;
    uint64_t __twr_v1121;
    uint64_t __twr_v1122;
    uint64_t __twr_v1123;
    uint64_t __twr_v1124;
    uint64_t __twr_v1125;
    uint64_t __twr_v1126;
    uint64_t __twr_v1127;
    uint64_t __twr_v1128;
    uint64_t __twr_v1129;
    uint64_t _mng_status1130;
    uint64_t __twr_v1131;
    uint64_t __twr_v1132;
    uint64_t _mng_token1133[4];
    uint64_t __twr_v1134;
    uint64_t __twr_v1135;
    uint64_t __twr_v1136;
    uint64_t __twr_v1137;
    uint64_t __twr_v1138;
    uint64_t __twr_v1139;
    uint64_t __twr_v1140;
    uint64_t __twr_v1141;
    uint64_t __twr_v1142;
    uint64_t __twr_v1143;
    uint64_t __twr_v1144;
    uint64_t __twr_v1145;
    uint64_t __twr_v1146;
    uint64_t __twr_v1147;
    uint64_t __twr_v1148;
    uint64_t __twr_v1149;
    uint64_t __twr_v1150;
    uint64_t __twr_v1151;
    uint64_t __twr_v1152;
    uint64_t __twr_v1153;
    uint64_t __twr_v1154;
    uint64_t __twr_v1155;
    uint64_t _mng_truthy1156;
    uint64_t __twr_v1157;
    uint64_t __twr_v1158;
    uint64_t __twr_v1159;
    uint64_t __twr_v1160;
    uint64_t __twr_v1161;
    uint64_t __twr_v1162;
    uint64_t __twr_v1163;
    uint64_t __twr_v1164;
    uint64_t __twr_v1165;
    uint64_t __twr_v1166;
    uint64_t __twr_v1167;
    uint64_t __twr_v1168;
    __twr_v1116 = (uint64_t)(&LexIfStack);
    __twr_v1117 = *(uint64_t*)(__twr_v1116);
    if (__twr_v1117) { goto __twr_l271; } else { goto __twr_l272; }
    __twr_l272:;
    __twr_v1118 = (uint64_t)(&LexStreamError);
    __twr_v1119 = (uint64_t)(&"ELSEIF with no matching IF");
    __twr_v1120 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1118)(__twr_v1119, __twr_v1120, __twr_v1120, __twr_v1120);
    __twr_l271:;
    __twr_v1121 = (uint64_t)(&LexIfStack);
    __twr_v1122 = 16ULL;
    __twr_v1123 = __twr_v1121 + __twr_v1122;
    __twr_v1124 = *(uint64_t*)(__twr_v1123);
    __twr_v1125 = *(uint64_t*)(__twr_v1121);
    __twr_v1126 = 1ULL;
    __twr_v1127 = __twr_v1125 - __twr_v1126;
    __twr_v1128 = __twr_v1124 + __twr_v1127;
    __twr_v1129 = *(uint8_t*)(__twr_v1128);
    _mng_status1130 = __twr_v1129;
    if (_mng_status1130) { goto __twr_l273; } else { goto __twr_l274; }
    __twr_l274:;
    __twr_v1131 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1132 = (uint64_t)(&_mng_token1133);
    __twr_v1134 = 1ULL;
    __twr_v1135 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1131)(__twr_v1132, __twr_v1134);
    goto _jkl_epilogue;
    __twr_l273:;
    __twr_v1136 = 2ULL;
    if (_mng_status1130 != __twr_v1136) { goto __twr_l275; } else { goto __twr_l276; }
    __twr_l276:;
    __twr_v1137 = 0ULL;
    __twr_v1138 = (uint64_t)(&LexIfStack);
    __twr_v1139 = 16ULL;
    __twr_v1140 = __twr_v1138 + __twr_v1139;
    __twr_v1141 = *(uint64_t*)(__twr_v1140);
    __twr_v1142 = *(uint64_t*)(__twr_v1138);
    __twr_v1143 = 1ULL;
    __twr_v1144 = __twr_v1142 - __twr_v1143;
    __twr_v1145 = __twr_v1141 + __twr_v1144;
    *(uint8_t*)(__twr_v1145) = __twr_v1137;
    __twr_v1146 = (uint64_t)(&LexFalseCount);
    __twr_v1147 = *(uint32_t*)(__twr_v1146);
    __twr_v1148 = __twr_v1147 + __twr_v1143;
    *(uint32_t*)(__twr_v1146) = __twr_v1148;
    __twr_v1149 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1150 = (uint64_t)(&_mng_token1133);
    __twr_v1151 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1149)(__twr_v1150, __twr_v1143);
    goto _jkl_epilogue;
    __twr_l275:;
    __twr_v1152 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1153 = (uint64_t)(&_mng_token1133);
    __twr_v1154 = 0ULL;
    __twr_v1155 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1152)(__twr_v1153, __twr_v1154);
    _mng_truthy1156 = __twr_v1155;
    if (!(_mng_truthy1156)) { goto __twr_l277; } else { goto __twr_l278; }
    __twr_l278:;
    __twr_v1157 = 2ULL;
    __twr_v1158 = (uint64_t)(&LexIfStack);
    __twr_v1159 = 16ULL;
    __twr_v1160 = __twr_v1158 + __twr_v1159;
    __twr_v1161 = *(uint64_t*)(__twr_v1160);
    __twr_v1162 = *(uint64_t*)(__twr_v1158);
    __twr_v1163 = 1ULL;
    __twr_v1164 = __twr_v1162 - __twr_v1163;
    __twr_v1165 = __twr_v1161 + __twr_v1164;
    *(uint8_t*)(__twr_v1165) = __twr_v1157;
    __twr_v1166 = (uint64_t)(&LexFalseCount);
    __twr_v1167 = *(uint32_t*)(__twr_v1166);
    __twr_v1168 = __twr_v1167 - __twr_v1163;
    *(uint32_t*)(__twr_v1166) = __twr_v1168;
    __twr_l277:;
    __twr_l270:;
    _jkl_epilogue:;
}
void LexParseEnd() {
    uint64_t __twr_v1169;
    uint64_t __twr_v1170;
    uint64_t __twr_v1171;
    uint64_t __twr_v1172;
    uint64_t __twr_v1173;
    uint64_t __twr_v1174;
    uint64_t __twr_v1175;
    uint64_t __twr_v1176;
    uint64_t _mng_status1177;
    uint64_t __twr_v1178;
    uint64_t __twr_v1179;
    uint64_t __twr_v1180;
    uint64_t __twr_v1181;
    uint64_t __twr_v1182;
    __twr_v1169 = (uint64_t)(&LexIfStack);
    __twr_v1170 = *(uint64_t*)(__twr_v1169);
    if (__twr_v1170) { goto __twr_l280; } else { goto __twr_l281; }
    __twr_l281:;
    __twr_v1171 = (uint64_t)(&LexStreamError);
    __twr_v1172 = (uint64_t)(&"END with no matching IF");
    __twr_v1173 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1171)(__twr_v1172, __twr_v1173, __twr_v1173, __twr_v1173);
    __twr_l280:;
    __twr_v1174 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1175 = (uint64_t)(&LexIfStack);
    __twr_v1176 = ((uint64_t (*)(uint64_t))__twr_v1174)(__twr_v1175);
    _mng_status1177 = __twr_v1176;
    if (!(_mng_status1177)) { goto __twr_l283; } else { goto __twr_l284; }
    __twr_l284:;
    __twr_v1178 = 1ULL;
    if (_mng_status1177 != __twr_v1178) { goto __twr_l282; } else { goto __twr_l283; }
    __twr_l283:;
    __twr_v1179 = 1ULL;
    __twr_v1180 = (uint64_t)(&LexFalseCount);
    __twr_v1181 = *(uint32_t*)(__twr_v1180);
    __twr_v1182 = __twr_v1181 - __twr_v1179;
    *(uint32_t*)(__twr_v1180) = __twr_v1182;
    goto _jkl_epilogue;
    __twr_l282:;
    __twr_l279:;
    _jkl_epilogue:;
}
void LexParseError() {
    uint64_t __twr_v1183;
    uint64_t __twr_v1184;
    uint64_t _mng_buffer1185[11];
    uint64_t __twr_v1186;
    uint64_t __twr_v1187;
    uint64_t _mng_token1188[4];
    uint64_t __twr_v1189;
    uint64_t __twr_v1190;
    uint64_t __twr_v1191;
    uint64_t __twr_v1192;
    uint64_t __twr_v1193;
    uint64_t __twr_v1194;
    uint64_t __twr_v1195;
    uint64_t __twr_v1196;
    uint64_t __twr_v1197;
    uint64_t __twr_v1198;
    uint64_t __twr_v1199;
    uint64_t __twr_v1200;
    uint64_t __twr_v1201;
    uint64_t __twr_v1202;
    __twr_v1183 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1184 = (uint64_t)(&_mng_buffer1185);
    ((void (*)(uint64_t))__twr_v1183)(__twr_v1184);
    __twr_v1186 = (uint64_t)(&LexCollectValue);
    __twr_v1187 = (uint64_t)(&_mng_token1188);
    __twr_v1189 = (uint64_t)(&LexFalseCount);
    __twr_v1190 = *(uint32_t*)(__twr_v1189);
    __twr_v1191 = 0ULL;
    __twr_v1192 = (__twr_v1190 != __twr_v1191);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1186)(__twr_v1187, __twr_v1184, __twr_v1192);
    __twr_v1193 = *(uint32_t*)(__twr_v1189);
    if (!(__twr_v1193)) { goto __twr_l286; } else { goto __twr_l287; }
    __twr_l287:;
    __twr_v1194 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1195 = (uint64_t)(&_mng_buffer1185);
    ((void (*)(uint64_t))__twr_v1194)(__twr_v1195);
    goto _jkl_epilogue;
    __twr_l286:;
    __twr_v1196 = (uint64_t)(&LexTokenError);
    __twr_v1197 = (uint64_t)(&_mng_token1188);
    __twr_v1198 = (uint64_t)(&_mng_buffer1185);
    __twr_v1199 = 16ULL;
    __twr_v1200 = __twr_v1198 + __twr_v1199;
    __twr_v1201 = *(uint64_t*)(__twr_v1200);
    __twr_v1202 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1196)(__twr_v1197, __twr_v1201, __twr_v1202, __twr_v1202, __twr_v1202);
    __twr_l285:;
    _jkl_epilogue:;
}
void LexParsePrint() {
    uint64_t __twr_v1203;
    uint64_t __twr_v1204;
    uint64_t _mng_buffer1205[11];
    uint64_t __twr_v1206;
    uint64_t __twr_v1207;
    uint64_t _mng_token1208[4];
    uint64_t __twr_v1209;
    uint64_t __twr_v1210;
    uint64_t __twr_v1211;
    uint64_t __twr_v1212;
    uint64_t __twr_v1213;
    uint64_t __twr_v1214;
    uint64_t __twr_v1215;
    uint64_t __twr_v1216;
    uint64_t __twr_v1217;
    uint64_t __twr_v1218;
    uint64_t __twr_v1219;
    uint64_t __twr_v1220;
    uint64_t __twr_v1221;
    uint64_t __twr_v1222;
    __twr_v1203 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1204 = (uint64_t)(&_mng_buffer1205);
    ((void (*)(uint64_t))__twr_v1203)(__twr_v1204);
    __twr_v1206 = (uint64_t)(&LexCollectValue);
    __twr_v1207 = (uint64_t)(&_mng_token1208);
    __twr_v1209 = (uint64_t)(&LexFalseCount);
    __twr_v1210 = *(uint32_t*)(__twr_v1209);
    __twr_v1211 = 0ULL;
    __twr_v1212 = (__twr_v1210 != __twr_v1211);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1206)(__twr_v1207, __twr_v1204, __twr_v1212);
    __twr_v1213 = *(uint32_t*)(__twr_v1209);
    if (!(__twr_v1213)) { goto __twr_l289; } else { goto __twr_l290; }
    __twr_l290:;
    __twr_v1214 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1215 = (uint64_t)(&_mng_buffer1205);
    ((void (*)(uint64_t))__twr_v1214)(__twr_v1215);
    goto _jkl_epilogue;
    __twr_l289:;
    __twr_v1216 = (uint64_t)(&TlPrintString);
    __twr_v1217 = (uint64_t)(&_mng_buffer1205);
    __twr_v1218 = 16ULL;
    __twr_v1219 = __twr_v1217 + __twr_v1218;
    __twr_v1220 = *(uint64_t*)(__twr_v1219);
    ((void (*)(uint64_t))__twr_v1216)(__twr_v1220);
    __twr_v1221 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v1216)(__twr_v1221);
    __twr_v1222 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1222)(__twr_v1217);
    __twr_l288:;
    _jkl_epilogue:;
}
void LexParseExpose() {
    uint64_t __twr_v1223;
    uint64_t __twr_v1224;
    uint64_t _mng_token1225[4];
    uint64_t __twr_v1226;
    uint64_t _mng_buffer1227[8];
    uint64_t __twr_v1228;
    uint64_t __twr_v1229;
    uint64_t __twr_v1230;
    uint64_t __twr_v1231;
    uint64_t __twr_v1232;
    uint64_t __twr_v1233;
    uint64_t __twr_v1234;
    uint64_t _mng_macro1235;
    uint64_t __twr_v1236;
    uint64_t __twr_v1237;
    uint64_t __twr_v1238;
    uint64_t __twr_v1239;
    uint64_t __twr_v1240;
    uint64_t __twr_v1241;
    uint64_t __twr_v1242;
    uint64_t _mng_listhead1243;
    uint64_t __twr_v1244;
    uint64_t __twr_v1245;
    uint64_t _mng_listentry1246;
    uint64_t __twr_v1247;
    uint64_t __twr_v1248;
    uint64_t __twr_v1249;
    uint64_t _mng_last1250;
    uint64_t __twr_v1251;
    __twr_v1223 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1224 = (uint64_t)(&_mng_token1225);
    __twr_v1226 = (uint64_t)(&_mng_buffer1227);
    ((void (*)(uint64_t, uint64_t))__twr_v1223)(__twr_v1224, __twr_v1226);
    __twr_v1228 = (uint64_t)(&LexFalseCount);
    __twr_v1229 = *(uint32_t*)(__twr_v1228);
    if (!(__twr_v1229)) { goto __twr_l292; } else { goto __twr_l293; }
    __twr_l293:;
    goto _jkl_epilogue;
    __twr_l292:;
    __twr_v1230 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1231 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1232 = *(uint64_t*)(__twr_v1231);
    __twr_v1233 = (uint64_t)(&_mng_buffer1227);
    __twr_v1234 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1230)(__twr_v1232, __twr_v1233);
    _mng_macro1235 = __twr_v1234;
    if (_mng_macro1235) { goto __twr_l294; } else { goto __twr_l295; }
    __twr_l295:;
    goto _jkl_epilogue;
    __twr_l294:;
    __twr_v1236 = 266ULL;
    __twr_v1237 = _mng_macro1235 + __twr_v1236;
    __twr_v1238 = *(uint8_t*)(__twr_v1237);
    if (!(__twr_v1238)) { goto __twr_l296; } else { goto __twr_l297; }
    __twr_l297:;
    goto _jkl_epilogue;
    __twr_l296:;
    __twr_v1239 = 1ULL;
    __twr_v1240 = 266ULL;
    __twr_v1241 = _mng_macro1235 + __twr_v1240;
    *(uint8_t*)(__twr_v1241) = __twr_v1239;
    __twr_v1242 = (uint64_t)(&LexExposedMacroListHead);
    _mng_listhead1243 = __twr_v1242;
    __twr_v1244 = 232ULL;
    __twr_v1245 = _mng_macro1235 + __twr_v1244;
    _mng_listentry1246 = __twr_v1245;
    __twr_v1247 = 8ULL;
    __twr_v1248 = _mng_listhead1243 + __twr_v1247;
    __twr_v1249 = *(uint64_t*)(__twr_v1248);
    _mng_last1250 = __twr_v1249;
    __twr_v1251 = _mng_listentry1246 + __twr_v1247;
    *(uint64_t*)(__twr_v1251) = _mng_last1250;
    *(uint64_t*)(_mng_listentry1246) = _mng_listhead1243;
    *(uint64_t*)(_mng_last1250) = _mng_listentry1246;
    *(uint64_t*)(__twr_v1248) = _mng_listentry1246;
    __twr_l291:;
    _jkl_epilogue:;
}
void LexOperatorEquals(uint64_t _mng_buffer1252, uint64_t _mng_ignore1253) {
    uint64_t __twr_v1254;
    uint64_t __twr_v1255;
    uint64_t _mng_token1256[4];
    uint64_t __twr_v1257;
    uint64_t _mng_num11258;
    uint64_t __twr_v1259;
    uint64_t _mng_num21260;
    uint64_t __twr_v1261;
    uint64_t __twr_v1262;
    uint64_t __twr_v1263;
    uint64_t __twr_v1264;
    uint64_t __twr_v1265;
    uint64_t __twr_v1266;
    __twr_v1254 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1255 = (uint64_t)(&_mng_token1256);
    __twr_v1257 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1254)(__twr_v1255, _mng_ignore1253);
    _mng_num11258 = __twr_v1257;
    __twr_v1259 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1254)(__twr_v1255, _mng_ignore1253);
    _mng_num21260 = __twr_v1259;
    __twr_v1261 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1261)();
    __twr_v1262 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1263 = (_mng_num11258 == _mng_num21260);
    __twr_v1264 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1262)(_mng_buffer1252, __twr_v1263, __twr_v1264);
    __twr_v1265 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1266 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1265)(_mng_buffer1252, __twr_v1266);
    __twr_l298:;
    _jkl_epilogue:;
}
void LexOperatorLteq(uint64_t _mng_buffer1267, uint64_t _mng_ignore1268) {
    uint64_t __twr_v1269;
    uint64_t __twr_v1270;
    uint64_t _mng_token1271[4];
    uint64_t __twr_v1272;
    uint64_t _mng_num11273;
    uint64_t __twr_v1274;
    uint64_t _mng_num21275;
    uint64_t __twr_v1276;
    uint64_t __twr_v1277;
    uint64_t __twr_v1278;
    uint64_t __twr_v1279;
    uint64_t __twr_v1280;
    uint64_t __twr_v1281;
    __twr_v1269 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1270 = (uint64_t)(&_mng_token1271);
    __twr_v1272 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1269)(__twr_v1270, _mng_ignore1268);
    _mng_num11273 = __twr_v1272;
    __twr_v1274 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1269)(__twr_v1270, _mng_ignore1268);
    _mng_num21275 = __twr_v1274;
    __twr_v1276 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1276)();
    __twr_v1277 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1278 = (_mng_num11273 <= _mng_num21275);
    __twr_v1279 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1277)(_mng_buffer1267, __twr_v1278, __twr_v1279);
    __twr_v1280 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1281 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1280)(_mng_buffer1267, __twr_v1281);
    __twr_l299:;
    _jkl_epilogue:;
}
void LexOperatorGteq(uint64_t _mng_buffer1282, uint64_t _mng_ignore1283) {
    uint64_t __twr_v1284;
    uint64_t __twr_v1285;
    uint64_t _mng_token1286[4];
    uint64_t __twr_v1287;
    uint64_t _mng_num11288;
    uint64_t __twr_v1289;
    uint64_t _mng_num21290;
    uint64_t __twr_v1291;
    uint64_t __twr_v1292;
    uint64_t __twr_v1293;
    uint64_t __twr_v1294;
    uint64_t __twr_v1295;
    uint64_t __twr_v1296;
    __twr_v1284 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1285 = (uint64_t)(&_mng_token1286);
    __twr_v1287 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1284)(__twr_v1285, _mng_ignore1283);
    _mng_num11288 = __twr_v1287;
    __twr_v1289 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1284)(__twr_v1285, _mng_ignore1283);
    _mng_num21290 = __twr_v1289;
    __twr_v1291 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1291)();
    __twr_v1292 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1293 = (_mng_num11288 >= _mng_num21290);
    __twr_v1294 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1292)(_mng_buffer1282, __twr_v1293, __twr_v1294);
    __twr_v1295 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1296 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1295)(_mng_buffer1282, __twr_v1296);
    __twr_l300:;
    _jkl_epilogue:;
}
void LexOperatorNeq(uint64_t _mng_buffer1297, uint64_t _mng_ignore1298) {
    uint64_t __twr_v1299;
    uint64_t __twr_v1300;
    uint64_t _mng_token1301[4];
    uint64_t __twr_v1302;
    uint64_t _mng_num11303;
    uint64_t __twr_v1304;
    uint64_t _mng_num21305;
    uint64_t __twr_v1306;
    uint64_t __twr_v1307;
    uint64_t __twr_v1308;
    uint64_t __twr_v1309;
    uint64_t __twr_v1310;
    uint64_t __twr_v1311;
    __twr_v1299 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1300 = (uint64_t)(&_mng_token1301);
    __twr_v1302 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1299)(__twr_v1300, _mng_ignore1298);
    _mng_num11303 = __twr_v1302;
    __twr_v1304 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1299)(__twr_v1300, _mng_ignore1298);
    _mng_num21305 = __twr_v1304;
    __twr_v1306 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1306)();
    __twr_v1307 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1308 = (_mng_num11303 != _mng_num21305);
    __twr_v1309 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1307)(_mng_buffer1297, __twr_v1308, __twr_v1309);
    __twr_v1310 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1311 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1310)(_mng_buffer1297, __twr_v1311);
    __twr_l301:;
    _jkl_epilogue:;
}
void LexOperatorLt(uint64_t _mng_buffer1312, uint64_t _mng_ignore1313) {
    uint64_t __twr_v1314;
    uint64_t __twr_v1315;
    uint64_t _mng_token1316[4];
    uint64_t __twr_v1317;
    uint64_t _mng_num11318;
    uint64_t __twr_v1319;
    uint64_t _mng_num21320;
    uint64_t __twr_v1321;
    uint64_t __twr_v1322;
    uint64_t __twr_v1323;
    uint64_t __twr_v1324;
    uint64_t __twr_v1325;
    uint64_t __twr_v1326;
    __twr_v1314 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1315 = (uint64_t)(&_mng_token1316);
    __twr_v1317 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1314)(__twr_v1315, _mng_ignore1313);
    _mng_num11318 = __twr_v1317;
    __twr_v1319 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1314)(__twr_v1315, _mng_ignore1313);
    _mng_num21320 = __twr_v1319;
    __twr_v1321 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1321)();
    __twr_v1322 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1323 = (_mng_num11318 < _mng_num21320);
    __twr_v1324 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1322)(_mng_buffer1312, __twr_v1323, __twr_v1324);
    __twr_v1325 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1326 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1325)(_mng_buffer1312, __twr_v1326);
    __twr_l302:;
    _jkl_epilogue:;
}
void LexOperatorGt(uint64_t _mng_buffer1327, uint64_t _mng_ignore1328) {
    uint64_t __twr_v1329;
    uint64_t __twr_v1330;
    uint64_t _mng_token1331[4];
    uint64_t __twr_v1332;
    uint64_t _mng_num11333;
    uint64_t __twr_v1334;
    uint64_t _mng_num21335;
    uint64_t __twr_v1336;
    uint64_t __twr_v1337;
    uint64_t __twr_v1338;
    uint64_t __twr_v1339;
    uint64_t __twr_v1340;
    uint64_t __twr_v1341;
    __twr_v1329 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1330 = (uint64_t)(&_mng_token1331);
    __twr_v1332 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1329)(__twr_v1330, _mng_ignore1328);
    _mng_num11333 = __twr_v1332;
    __twr_v1334 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1329)(__twr_v1330, _mng_ignore1328);
    _mng_num21335 = __twr_v1334;
    __twr_v1336 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1336)();
    __twr_v1337 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1338 = (_mng_num11333 > _mng_num21335);
    __twr_v1339 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1337)(_mng_buffer1327, __twr_v1338, __twr_v1339);
    __twr_v1340 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1341 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1340)(_mng_buffer1327, __twr_v1341);
    __twr_l303:;
    _jkl_epilogue:;
}
void LexOperatorAdd(uint64_t _mng_buffer1342, uint64_t _mng_ignore1343) {
    uint64_t __twr_v1344;
    uint64_t __twr_v1345;
    uint64_t _mng_token1346[4];
    uint64_t __twr_v1347;
    uint64_t _mng_num11348;
    uint64_t __twr_v1349;
    uint64_t _mng_num21350;
    uint64_t __twr_v1351;
    uint64_t __twr_v1352;
    uint64_t __twr_v1353;
    uint64_t __twr_v1354;
    uint64_t __twr_v1355;
    uint64_t __twr_v1356;
    __twr_v1344 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1345 = (uint64_t)(&_mng_token1346);
    __twr_v1347 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1344)(__twr_v1345, _mng_ignore1343);
    _mng_num11348 = __twr_v1347;
    __twr_v1349 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1344)(__twr_v1345, _mng_ignore1343);
    _mng_num21350 = __twr_v1349;
    __twr_v1351 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1351)();
    __twr_v1352 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1353 = _mng_num11348 + _mng_num21350;
    __twr_v1354 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1352)(_mng_buffer1342, __twr_v1353, __twr_v1354);
    __twr_v1355 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1356 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1355)(_mng_buffer1342, __twr_v1356);
    __twr_l304:;
    _jkl_epilogue:;
}
void LexOperatorSub(uint64_t _mng_buffer1357, uint64_t _mng_ignore1358) {
    uint64_t __twr_v1359;
    uint64_t __twr_v1360;
    uint64_t _mng_token1361[4];
    uint64_t __twr_v1362;
    uint64_t _mng_num11363;
    uint64_t __twr_v1364;
    uint64_t _mng_num21365;
    uint64_t __twr_v1366;
    uint64_t __twr_v1367;
    uint64_t __twr_v1368;
    uint64_t __twr_v1369;
    uint64_t __twr_v1370;
    uint64_t __twr_v1371;
    __twr_v1359 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1360 = (uint64_t)(&_mng_token1361);
    __twr_v1362 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1359)(__twr_v1360, _mng_ignore1358);
    _mng_num11363 = __twr_v1362;
    __twr_v1364 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1359)(__twr_v1360, _mng_ignore1358);
    _mng_num21365 = __twr_v1364;
    __twr_v1366 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1366)();
    __twr_v1367 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1368 = _mng_num11363 - _mng_num21365;
    __twr_v1369 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1367)(_mng_buffer1357, __twr_v1368, __twr_v1369);
    __twr_v1370 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1371 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1370)(_mng_buffer1357, __twr_v1371);
    __twr_l305:;
    _jkl_epilogue:;
}
void LexOperatorMul(uint64_t _mng_buffer1372, uint64_t _mng_ignore1373) {
    uint64_t __twr_v1374;
    uint64_t __twr_v1375;
    uint64_t _mng_token1376[4];
    uint64_t __twr_v1377;
    uint64_t _mng_num11378;
    uint64_t __twr_v1379;
    uint64_t _mng_num21380;
    uint64_t __twr_v1381;
    uint64_t __twr_v1382;
    uint64_t __twr_v1383;
    uint64_t __twr_v1384;
    uint64_t __twr_v1385;
    uint64_t __twr_v1386;
    __twr_v1374 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1375 = (uint64_t)(&_mng_token1376);
    __twr_v1377 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1374)(__twr_v1375, _mng_ignore1373);
    _mng_num11378 = __twr_v1377;
    __twr_v1379 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1374)(__twr_v1375, _mng_ignore1373);
    _mng_num21380 = __twr_v1379;
    __twr_v1381 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1381)();
    __twr_v1382 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1383 = _mng_num11378 * _mng_num21380;
    __twr_v1384 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1382)(_mng_buffer1372, __twr_v1383, __twr_v1384);
    __twr_v1385 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1386 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1385)(_mng_buffer1372, __twr_v1386);
    __twr_l306:;
    _jkl_epilogue:;
}
void LexOperatorDiv(uint64_t _mng_buffer1387, uint64_t _mng_ignore1388) {
    uint64_t __twr_v1389;
    uint64_t __twr_v1390;
    uint64_t _mng_token1391[4];
    uint64_t __twr_v1392;
    uint64_t _mng_num11393;
    uint64_t __twr_v1394;
    uint64_t _mng_num21395;
    uint64_t __twr_v1396;
    uint64_t __twr_v1397;
    uint64_t __twr_v1398;
    uint64_t __twr_v1399;
    uint64_t __twr_v1400;
    uint64_t __twr_v1401;
    __twr_v1389 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1390 = (uint64_t)(&_mng_token1391);
    __twr_v1392 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1389)(__twr_v1390, _mng_ignore1388);
    _mng_num11393 = __twr_v1392;
    __twr_v1394 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1389)(__twr_v1390, _mng_ignore1388);
    _mng_num21395 = __twr_v1394;
    __twr_v1396 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1396)();
    __twr_v1397 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1398 = _mng_num11393 / _mng_num21395;
    __twr_v1399 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1397)(_mng_buffer1387, __twr_v1398, __twr_v1399);
    __twr_v1400 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1401 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1400)(_mng_buffer1387, __twr_v1401);
    __twr_l307:;
    _jkl_epilogue:;
}
void LexOperatorLsh(uint64_t _mng_buffer1402, uint64_t _mng_ignore1403) {
    uint64_t __twr_v1404;
    uint64_t __twr_v1405;
    uint64_t _mng_token1406[4];
    uint64_t __twr_v1407;
    uint64_t _mng_num11408;
    uint64_t __twr_v1409;
    uint64_t _mng_num21410;
    uint64_t __twr_v1411;
    uint64_t __twr_v1412;
    uint64_t __twr_v1413;
    uint64_t __twr_v1414;
    uint64_t __twr_v1415;
    uint64_t __twr_v1416;
    __twr_v1404 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1405 = (uint64_t)(&_mng_token1406);
    __twr_v1407 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1404)(__twr_v1405, _mng_ignore1403);
    _mng_num11408 = __twr_v1407;
    __twr_v1409 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1404)(__twr_v1405, _mng_ignore1403);
    _mng_num21410 = __twr_v1409;
    __twr_v1411 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1411)();
    __twr_v1412 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1413 = _mng_num11408 << _mng_num21410;
    __twr_v1414 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1412)(_mng_buffer1402, __twr_v1413, __twr_v1414);
    __twr_v1415 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1416 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1415)(_mng_buffer1402, __twr_v1416);
    __twr_l308:;
    _jkl_epilogue:;
}
void LexOperatorRsh(uint64_t _mng_buffer1417, uint64_t _mng_ignore1418) {
    uint64_t __twr_v1419;
    uint64_t __twr_v1420;
    uint64_t _mng_token1421[4];
    uint64_t __twr_v1422;
    uint64_t _mng_num11423;
    uint64_t __twr_v1424;
    uint64_t _mng_num21425;
    uint64_t __twr_v1426;
    uint64_t __twr_v1427;
    uint64_t __twr_v1428;
    uint64_t __twr_v1429;
    uint64_t __twr_v1430;
    uint64_t __twr_v1431;
    __twr_v1419 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1420 = (uint64_t)(&_mng_token1421);
    __twr_v1422 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1419)(__twr_v1420, _mng_ignore1418);
    _mng_num11423 = __twr_v1422;
    __twr_v1424 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1419)(__twr_v1420, _mng_ignore1418);
    _mng_num21425 = __twr_v1424;
    __twr_v1426 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1426)();
    __twr_v1427 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1428 = _mng_num11423 >> _mng_num21425;
    __twr_v1429 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1427)(_mng_buffer1417, __twr_v1428, __twr_v1429);
    __twr_v1430 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1431 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1430)(_mng_buffer1417, __twr_v1431);
    __twr_l309:;
    _jkl_epilogue:;
}
void LexOperatorStrcat(uint64_t _mng_buffer1432, uint64_t _mng_ignore1433) {
    uint64_t __twr_v1434;
    uint64_t __twr_v1435;
    uint64_t _mng_token1436[4];
    uint64_t __twr_v1437;
    uint64_t __twr_v1438;
    uint64_t __twr_v1439;
    __twr_v1434 = (uint64_t)(&LexCollectValue);
    __twr_v1435 = (uint64_t)(&_mng_token1436);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1434)(__twr_v1435, _mng_buffer1432, _mng_ignore1433);
    __twr_v1437 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1438 = ((uint64_t (*)(uint64_t))__twr_v1437)(_mng_buffer1432);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1434)(__twr_v1435, _mng_buffer1432, _mng_ignore1433);
    __twr_v1439 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1439)();
    __twr_l310:;
    _jkl_epilogue:;
}
void LexOperatorStrcmp(uint64_t _mng_buffer1440, uint64_t _mng_ignore1441) {
    uint64_t __twr_v1442;
    uint64_t __twr_v1443;
    uint64_t _mng_str11444[11];
    uint64_t __twr_v1445;
    uint64_t _mng_str21446[11];
    uint64_t __twr_v1447;
    uint64_t __twr_v1448;
    uint64_t _mng_token1449[4];
    uint64_t __twr_v1450;
    uint64_t __twr_v1451;
    uint64_t __twr_v1452;
    uint64_t __twr_v1453;
    uint64_t __twr_v1454;
    uint64_t __twr_v1455;
    uint64_t __twr_v1456;
    uint64_t __twr_v1457;
    uint64_t __twr_v1458;
    uint64_t __twr_v1459;
    uint64_t __twr_v1460;
    uint64_t __twr_v1461;
    uint64_t __twr_v1462;
    uint64_t __twr_v1463;
    __twr_v1442 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1443 = (uint64_t)(&_mng_str11444);
    ((void (*)(uint64_t))__twr_v1442)(__twr_v1443);
    __twr_v1445 = (uint64_t)(&_mng_str21446);
    ((void (*)(uint64_t))__twr_v1442)(__twr_v1445);
    __twr_v1447 = (uint64_t)(&LexCollectValue);
    __twr_v1448 = (uint64_t)(&_mng_token1449);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1447)(__twr_v1448, __twr_v1443, _mng_ignore1441);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1447)(__twr_v1448, __twr_v1445, _mng_ignore1441);
    __twr_v1450 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1450)(__twr_v1443);
    ((void (*)(uint64_t))__twr_v1450)(__twr_v1445);
    __twr_v1451 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1451)();
    __twr_v1452 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1453 = (uint64_t)(&TlCompareString);
    __twr_v1454 = 16ULL;
    __twr_v1455 = __twr_v1443 + __twr_v1454;
    __twr_v1456 = *(uint64_t*)(__twr_v1455);
    __twr_v1457 = __twr_v1445 + __twr_v1454;
    __twr_v1458 = *(uint64_t*)(__twr_v1457);
    __twr_v1459 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1453)(__twr_v1456, __twr_v1458);
    __twr_v1460 = 0ULL;
    __twr_v1461 = (__twr_v1459 == __twr_v1460);
    __twr_v1462 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1452)(_mng_buffer1440, __twr_v1461, __twr_v1462);
    __twr_v1463 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1463)(_mng_buffer1440, __twr_v1460);
    __twr_l311:;
    _jkl_epilogue:;
}
void LexOperatorNot(uint64_t _mng_buffer1464, uint64_t _mng_ignore1465) {
    uint64_t __twr_v1466;
    uint64_t __twr_v1467;
    uint64_t _mng_token1468[4];
    uint64_t __twr_v1469;
    uint64_t _mng_num11470;
    uint64_t __twr_v1471;
    uint64_t __twr_v1472;
    uint64_t __twr_v1473;
    uint64_t __twr_v1474;
    uint64_t __twr_v1475;
    uint64_t __twr_v1476;
    __twr_v1466 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1467 = (uint64_t)(&_mng_token1468);
    __twr_v1469 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1466)(__twr_v1467, _mng_ignore1465);
    _mng_num11470 = __twr_v1469;
    __twr_v1471 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1471)();
    __twr_v1472 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1473 = !_mng_num11470;
    __twr_v1474 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1472)(_mng_buffer1464, __twr_v1473, __twr_v1474);
    __twr_v1475 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1476 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1475)(_mng_buffer1464, __twr_v1476);
    __twr_l312:;
    _jkl_epilogue:;
}
void LexOperatorOr(uint64_t _mng_buffer1477, uint64_t _mng_ignore1478) {
    uint64_t __twr_v1479;
    uint64_t __twr_v1480;
    uint64_t _mng_token1481[4];
    uint64_t __twr_v1482;
    uint64_t _mng_num11483;
    uint64_t __twr_v1484;
    uint64_t _mng_num21485;
    uint64_t __twr_v1486;
    uint64_t __twr_v1487;
    uint64_t __twr_v1488;
    uint64_t __twr_v1489;
    uint64_t __twr_v1490;
    uint64_t __twr_v1491;
    __twr_v1479 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1480 = (uint64_t)(&_mng_token1481);
    __twr_v1482 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1479)(__twr_v1480, _mng_ignore1478);
    _mng_num11483 = __twr_v1482;
    __twr_v1484 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1479)(__twr_v1480, _mng_ignore1478);
    _mng_num21485 = __twr_v1484;
    __twr_v1486 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1486)();
    __twr_v1487 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (_mng_num11483) { goto __twr_l315; } else { goto __twr_l314; }
    __twr_l314:;
    if (!(_mng_num21485)) { goto __twr_l316; } else { goto __twr_l315; }
    __twr_l315:;
    __twr_v1488 = 1ULL;
    goto __twr_l317;
    __twr_l316:;
    __twr_v1488 = 0ULL;
    __twr_l317:;
    __twr_v1489 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1487)(_mng_buffer1477, __twr_v1488, __twr_v1489);
    __twr_v1490 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1491 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1490)(_mng_buffer1477, __twr_v1491);
    __twr_l313:;
    _jkl_epilogue:;
}
void LexOperatorAnd(uint64_t _mng_buffer1492, uint64_t _mng_ignore1493) {
    uint64_t __twr_v1494;
    uint64_t __twr_v1495;
    uint64_t _mng_token1496[4];
    uint64_t __twr_v1497;
    uint64_t _mng_num11498;
    uint64_t __twr_v1499;
    uint64_t _mng_num21500;
    uint64_t __twr_v1501;
    uint64_t __twr_v1502;
    uint64_t __twr_v1503;
    uint64_t __twr_v1504;
    uint64_t __twr_v1505;
    uint64_t __twr_v1506;
    __twr_v1494 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1495 = (uint64_t)(&_mng_token1496);
    __twr_v1497 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1494)(__twr_v1495, _mng_ignore1493);
    _mng_num11498 = __twr_v1497;
    __twr_v1499 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1494)(__twr_v1495, _mng_ignore1493);
    _mng_num21500 = __twr_v1499;
    __twr_v1501 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1501)();
    __twr_v1502 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (!(_mng_num11498)) { goto __twr_l321; } else { goto __twr_l319; }
    __twr_l319:;
    if (!(_mng_num21500)) { goto __twr_l321; } else { goto __twr_l320; }
    __twr_l320:;
    __twr_v1503 = 1ULL;
    goto __twr_l322;
    __twr_l321:;
    __twr_v1503 = 0ULL;
    __twr_l322:;
    __twr_v1504 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1502)(_mng_buffer1492, __twr_v1503, __twr_v1504);
    __twr_v1505 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1506 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1505)(_mng_buffer1492, __twr_v1506);
    __twr_l318:;
    _jkl_epilogue:;
}
void LexOperatorDefined(uint64_t _mng_buffer1507, uint64_t _mng_ignore1508) {
    uint64_t __twr_v1509;
    uint64_t __twr_v1510;
    uint64_t _mng_token1511[4];
    uint64_t __twr_v1512;
    uint64_t _mng_tokbuffer1513[8];
    uint64_t __twr_v1514;
    uint64_t __twr_v1515;
    uint64_t __twr_v1516;
    uint64_t __twr_v1517;
    uint64_t __twr_v1518;
    uint64_t __twr_v1519;
    uint64_t _mng_macro1520;
    uint64_t __twr_v1521;
    uint64_t __twr_v1522;
    uint64_t __twr_v1523;
    uint64_t __twr_v1524;
    __twr_v1509 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1510 = (uint64_t)(&_mng_token1511);
    __twr_v1512 = (uint64_t)(&_mng_tokbuffer1513);
    __twr_v1514 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1509)(__twr_v1510, __twr_v1512);
    __twr_v1515 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1515)();
    __twr_v1516 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1517 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1518 = *(uint64_t*)(__twr_v1517);
    __twr_v1519 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1516)(__twr_v1518, __twr_v1512);
    _mng_macro1520 = __twr_v1519;
    __twr_v1521 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1522 = (_mng_macro1520 != __twr_v1514);
    __twr_v1523 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1521)(_mng_buffer1507, __twr_v1522, __twr_v1523);
    __twr_v1524 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1524)(_mng_buffer1507, __twr_v1514);
    __twr_l323:;
    _jkl_epilogue:;
}
void LexOperatorBitNot(uint64_t _mng_buffer1525, uint64_t _mng_ignore1526) {
    uint64_t __twr_v1527;
    uint64_t __twr_v1528;
    uint64_t _mng_token1529[4];
    uint64_t __twr_v1530;
    uint64_t _mng_num11531;
    uint64_t __twr_v1532;
    uint64_t __twr_v1533;
    uint64_t __twr_v1534;
    uint64_t __twr_v1535;
    uint64_t __twr_v1536;
    uint64_t __twr_v1537;
    __twr_v1527 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1528 = (uint64_t)(&_mng_token1529);
    __twr_v1530 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1527)(__twr_v1528, _mng_ignore1526);
    _mng_num11531 = __twr_v1530;
    __twr_v1532 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1532)();
    __twr_v1533 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1534 = ~_mng_num11531;
    __twr_v1535 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1533)(_mng_buffer1525, __twr_v1534, __twr_v1535);
    __twr_v1536 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1537 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1536)(_mng_buffer1525, __twr_v1537);
    __twr_l324:;
    _jkl_epilogue:;
}
void LexOperatorBitOr(uint64_t _mng_buffer1538, uint64_t _mng_ignore1539) {
    uint64_t __twr_v1540;
    uint64_t __twr_v1541;
    uint64_t _mng_token1542[4];
    uint64_t __twr_v1543;
    uint64_t _mng_num11544;
    uint64_t __twr_v1545;
    uint64_t _mng_num21546;
    uint64_t __twr_v1547;
    uint64_t __twr_v1548;
    uint64_t __twr_v1549;
    uint64_t __twr_v1550;
    uint64_t __twr_v1551;
    uint64_t __twr_v1552;
    __twr_v1540 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1541 = (uint64_t)(&_mng_token1542);
    __twr_v1543 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1540)(__twr_v1541, _mng_ignore1539);
    _mng_num11544 = __twr_v1543;
    __twr_v1545 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1540)(__twr_v1541, _mng_ignore1539);
    _mng_num21546 = __twr_v1545;
    __twr_v1547 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1547)();
    __twr_v1548 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1549 = _mng_num11544 | _mng_num21546;
    __twr_v1550 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1548)(_mng_buffer1538, __twr_v1549, __twr_v1550);
    __twr_v1551 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1552 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1551)(_mng_buffer1538, __twr_v1552);
    __twr_l325:;
    _jkl_epilogue:;
}
void LexOperatorBitXor(uint64_t _mng_buffer1553, uint64_t _mng_ignore1554) {
    uint64_t __twr_v1555;
    uint64_t __twr_v1556;
    uint64_t _mng_token1557[4];
    uint64_t __twr_v1558;
    uint64_t _mng_num11559;
    uint64_t __twr_v1560;
    uint64_t _mng_num21561;
    uint64_t __twr_v1562;
    uint64_t __twr_v1563;
    uint64_t __twr_v1564;
    uint64_t __twr_v1565;
    uint64_t __twr_v1566;
    uint64_t __twr_v1567;
    __twr_v1555 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1556 = (uint64_t)(&_mng_token1557);
    __twr_v1558 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1555)(__twr_v1556, _mng_ignore1554);
    _mng_num11559 = __twr_v1558;
    __twr_v1560 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1555)(__twr_v1556, _mng_ignore1554);
    _mng_num21561 = __twr_v1560;
    __twr_v1562 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1562)();
    __twr_v1563 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1564 = _mng_num11559 ^ _mng_num21561;
    __twr_v1565 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1563)(_mng_buffer1553, __twr_v1564, __twr_v1565);
    __twr_v1566 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1567 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1566)(_mng_buffer1553, __twr_v1567);
    __twr_l326:;
    _jkl_epilogue:;
}
void LexOperatorBitAnd(uint64_t _mng_buffer1568, uint64_t _mng_ignore1569) {
    uint64_t __twr_v1570;
    uint64_t __twr_v1571;
    uint64_t _mng_token1572[4];
    uint64_t __twr_v1573;
    uint64_t _mng_num11574;
    uint64_t __twr_v1575;
    uint64_t _mng_num21576;
    uint64_t __twr_v1577;
    uint64_t __twr_v1578;
    uint64_t __twr_v1579;
    uint64_t __twr_v1580;
    uint64_t __twr_v1581;
    uint64_t __twr_v1582;
    __twr_v1570 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1571 = (uint64_t)(&_mng_token1572);
    __twr_v1573 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1570)(__twr_v1571, _mng_ignore1569);
    _mng_num11574 = __twr_v1573;
    __twr_v1575 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1570)(__twr_v1571, _mng_ignore1569);
    _mng_num21576 = __twr_v1575;
    __twr_v1577 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1577)();
    __twr_v1578 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1579 = _mng_num11574 & _mng_num21576;
    __twr_v1580 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1578)(_mng_buffer1568, __twr_v1579, __twr_v1580);
    __twr_v1581 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1582 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1581)(_mng_buffer1568, __twr_v1582);
    __twr_l327:;
    _jkl_epilogue:;
}
void LexParseDirective() {
    uint64_t __twr_v1583;
    uint64_t __twr_v1584;
    uint64_t __twr_v1585;
    uint64_t _mng_buffer1586[8];
    uint64_t __twr_v1587;
    uint64_t __twr_v1588;
    uint64_t __twr_v1589;
    uint64_t _mng_directive1590;
    uint64_t __twr_v1591;
    uint64_t __twr_v1592;
    uint64_t __twr_v1593;
    uint64_t __twr_v1594;
    uint64_t __twr_v1595;
    uint64_t __twr_v1596;
    uint64_t __twr_v1597;
    __twr_v1583 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1584 = (uint64_t)(&LexDirectiveToken);
    __twr_v1585 = (uint64_t)(&_mng_buffer1586);
    ((void (*)(uint64_t, uint64_t))__twr_v1583)(__twr_v1584, __twr_v1585);
    __twr_v1587 = (uint64_t)(&TlLookupHashTable);
    __twr_v1588 = (uint64_t)(&LexDirectiveHashTable);
    __twr_v1589 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1587)(__twr_v1588, __twr_v1585);
    _mng_directive1590 = __twr_v1589;
    if (_mng_directive1590) { goto __twr_l329; } else { goto __twr_l330; }
    __twr_l330:;
    __twr_v1591 = (uint64_t)(&LexTokenError);
    __twr_v1592 = (uint64_t)(&LexDirectiveToken);
    __twr_v1593 = (uint64_t)(&"Unknown directive");
    __twr_v1594 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1591)(__twr_v1592, __twr_v1593, __twr_v1594, __twr_v1594, __twr_v1594);
    __twr_l329:;
    __twr_v1595 = 48ULL;
    __twr_v1596 = _mng_directive1590 + __twr_v1595;
    __twr_v1597 = *(uint64_t*)(__twr_v1596);
    ((void (*)())__twr_v1597)();
    __twr_l328:;
    _jkl_epilogue:;
}
void LexInitializePreprocessor() {
    uint64_t __twr_v1598;
    uint64_t __twr_v1599;
    uint64_t __twr_v1600;
    uint64_t __twr_v1601;
    uint64_t __twr_v1602;
    uint64_t __twr_v1603;
    uint64_t __twr_v1604;
    uint64_t __twr_v1605;
    uint64_t __twr_v1606;
    uint64_t __twr_v1607;
    uint64_t __twr_v1608;
    uint64_t __twr_v1609;
    uint64_t __twr_v1610;
    uint64_t __twr_v1611;
    uint64_t __twr_v1612;
    uint64_t _mng_listhead1613;
    uint64_t __twr_v1614;
    uint64_t __twr_v1615;
    uint64_t __twr_v1616;
    uint64_t __twr_v1617;
    uint64_t __twr_v1618;
    uint64_t __twr_v1619;
    uint64_t __twr_v1620;
    uint64_t __twr_v1621;
    uint64_t __twr_v1622;
    uint64_t __twr_v1623;
    uint64_t __twr_v1624;
    uint64_t __twr_v1625;
    uint64_t __twr_v1626;
    uint64_t __twr_v1627;
    uint64_t __twr_v1628;
    uint64_t __twr_v1629;
    uint64_t __twr_v1630;
    uint64_t __twr_v1631;
    uint64_t __twr_v1632;
    uint64_t __twr_v1633;
    uint64_t __twr_v1634;
    uint64_t __twr_v1635;
    uint64_t __twr_v1636;
    uint64_t __twr_v1637;
    uint64_t __twr_v1638;
    uint64_t __twr_v1639;
    uint64_t __twr_v1640;
    uint64_t __twr_v1641;
    uint64_t __twr_v1642;
    uint64_t __twr_v1643;
    uint64_t __twr_v1644;
    uint64_t __twr_v1645;
    uint64_t __twr_v1646;
    uint64_t __twr_v1647;
    uint64_t __twr_v1648;
    uint64_t __twr_v1649;
    uint64_t __twr_v1650;
    uint64_t __twr_v1651;
    uint64_t __twr_v1652;
    uint64_t __twr_v1653;
    uint64_t __twr_v1654;
    uint64_t __twr_v1655;
    uint64_t __twr_v1656;
    uint64_t __twr_v1657;
    uint64_t __twr_v1658;
    uint64_t __twr_v1659;
    uint64_t __twr_v1660;
    uint64_t __twr_v1661;
    uint64_t __twr_v1662;
    uint64_t __twr_v1663;
    uint64_t __twr_v1664;
    uint64_t __twr_v1665;
    uint64_t __twr_v1666;
    uint64_t __twr_v1667;
    uint64_t __twr_v1668;
    uint64_t __twr_v1669;
    uint64_t __twr_v1670;
    uint64_t __twr_v1671;
    uint64_t __twr_v1672;
    uint64_t __twr_v1673;
    uint64_t __twr_v1674;
    uint64_t __twr_v1675;
    uint64_t __twr_v1676;
    uint64_t __twr_v1677;
    uint64_t __twr_v1678;
    uint64_t __twr_v1679;
    uint64_t __twr_v1680;
    uint64_t __twr_v1681;
    __twr_v1598 = (uint64_t)(&TlInitializeHashTable);
    __twr_v1599 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t))__twr_v1598)(__twr_v1599);
    __twr_v1600 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t))__twr_v1598)(__twr_v1600);
    __twr_v1601 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1602 = (uint64_t)(&LexIfStack);
    ((void (*)(uint64_t))__twr_v1601)(__twr_v1602);
    __twr_v1603 = (uint64_t)(&LexCreateMacroTable);
    __twr_v1604 = 0ULL;
    __twr_v1605 = ((uint64_t (*)(uint64_t))__twr_v1603)(__twr_v1604);
    __twr_v1606 = (uint64_t)(&LexRootMacroScope);
    *(uint64_t*)(__twr_v1606) = __twr_v1605;
    __twr_v1607 = *(uint64_t*)(__twr_v1606);
    __twr_v1608 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v1608) = __twr_v1607;
    __twr_v1609 = (uint64_t)(&TlInitializeZone);
    __twr_v1610 = (uint64_t)(&LexMacroZone);
    __twr_v1611 = 267ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1609)(__twr_v1610, __twr_v1611);
    __twr_v1612 = (uint64_t)(&LexExposedMacroListHead);
    _mng_listhead1613 = __twr_v1612;
    __twr_v1614 = 8ULL;
    __twr_v1615 = _mng_listhead1613 + __twr_v1614;
    *(uint64_t*)(__twr_v1615) = _mng_listhead1613;
    *(uint64_t*)(_mng_listhead1613) = _mng_listhead1613;
    __twr_v1616 = (uint64_t)(&LexInsertDirective);
    __twr_v1617 = (uint64_t)(&"INCLUDE");
    __twr_v1618 = (uint64_t)(&LexParseInclude);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1617, __twr_v1618);
    __twr_v1619 = (uint64_t)(&"DEPEND");
    __twr_v1620 = (uint64_t)(&LexParseDepend);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1619, __twr_v1620);
    __twr_v1621 = (uint64_t)(&"DEFINE");
    __twr_v1622 = (uint64_t)(&LexParseDefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1621, __twr_v1622);
    __twr_v1623 = (uint64_t)(&"MACRO");
    __twr_v1624 = (uint64_t)(&LexParseMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1623, __twr_v1624);
    __twr_v1625 = (uint64_t)(&"IF");
    __twr_v1626 = (uint64_t)(&LexParseIf);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1625, __twr_v1626);
    __twr_v1627 = (uint64_t)(&"ELSE");
    __twr_v1628 = (uint64_t)(&LexParseElse);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1627, __twr_v1628);
    __twr_v1629 = (uint64_t)(&"ELSEIF");
    __twr_v1630 = (uint64_t)(&LexParseElseif);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1629, __twr_v1630);
    __twr_v1631 = (uint64_t)(&"END");
    __twr_v1632 = (uint64_t)(&LexParseEnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1631, __twr_v1632);
    __twr_v1633 = (uint64_t)(&"UNDEFINE");
    __twr_v1634 = (uint64_t)(&LexParseUndefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1633, __twr_v1634);
    __twr_v1635 = (uint64_t)(&"ERROR");
    __twr_v1636 = (uint64_t)(&LexParseError);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1635, __twr_v1636);
    __twr_v1637 = (uint64_t)(&"PRINT");
    __twr_v1638 = (uint64_t)(&LexParsePrint);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1637, __twr_v1638);
    __twr_v1639 = (uint64_t)(&"EXPOSE");
    __twr_v1640 = (uint64_t)(&LexParseExpose);
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(__twr_v1639, __twr_v1640);
    __twr_v1641 = (uint64_t)(&LexInsertOperator);
    __twr_v1642 = (uint64_t)(&"==");
    __twr_v1643 = (uint64_t)(&LexOperatorEquals);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1642, __twr_v1643);
    __twr_v1644 = (uint64_t)(&"<=");
    __twr_v1645 = (uint64_t)(&LexOperatorLteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1644, __twr_v1645);
    __twr_v1646 = (uint64_t)(&">=");
    __twr_v1647 = (uint64_t)(&LexOperatorGteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1646, __twr_v1647);
    __twr_v1648 = (uint64_t)(&"!=");
    __twr_v1649 = (uint64_t)(&LexOperatorNeq);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1648, __twr_v1649);
    __twr_v1650 = (uint64_t)(&"+");
    __twr_v1651 = (uint64_t)(&LexOperatorAdd);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1650, __twr_v1651);
    __twr_v1652 = (uint64_t)(&"-");
    __twr_v1653 = (uint64_t)(&LexOperatorSub);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1652, __twr_v1653);
    __twr_v1654 = (uint64_t)(&"*");
    __twr_v1655 = (uint64_t)(&LexOperatorMul);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1654, __twr_v1655);
    __twr_v1656 = (uint64_t)(&"/");
    __twr_v1657 = (uint64_t)(&LexOperatorDiv);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1656, __twr_v1657);
    __twr_v1658 = (uint64_t)(&"<<");
    __twr_v1659 = (uint64_t)(&LexOperatorLsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1658, __twr_v1659);
    __twr_v1660 = (uint64_t)(&">>");
    __twr_v1661 = (uint64_t)(&LexOperatorRsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1660, __twr_v1661);
    __twr_v1662 = (uint64_t)(&"STRCAT");
    __twr_v1663 = (uint64_t)(&LexOperatorStrcat);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1662, __twr_v1663);
    __twr_v1664 = (uint64_t)(&"STRCMP");
    __twr_v1665 = (uint64_t)(&LexOperatorStrcmp);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1664, __twr_v1665);
    __twr_v1666 = (uint64_t)(&"NOT");
    __twr_v1667 = (uint64_t)(&LexOperatorNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1666, __twr_v1667);
    __twr_v1668 = (uint64_t)(&"OR");
    __twr_v1669 = (uint64_t)(&LexOperatorOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1668, __twr_v1669);
    __twr_v1670 = (uint64_t)(&"AND");
    __twr_v1671 = (uint64_t)(&LexOperatorAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1670, __twr_v1671);
    __twr_v1672 = (uint64_t)(&"DEFINED");
    __twr_v1673 = (uint64_t)(&LexOperatorDefined);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1672, __twr_v1673);
    __twr_v1674 = (uint64_t)(&"~");
    __twr_v1675 = (uint64_t)(&LexOperatorBitNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1674, __twr_v1675);
    __twr_v1676 = (uint64_t)(&"|");
    __twr_v1677 = (uint64_t)(&LexOperatorBitOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1676, __twr_v1677);
    __twr_v1678 = (uint64_t)(&"$");
    __twr_v1679 = (uint64_t)(&LexOperatorBitXor);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1678, __twr_v1679);
    __twr_v1680 = (uint64_t)(&"&");
    __twr_v1681 = (uint64_t)(&LexOperatorBitAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1641)(__twr_v1680, __twr_v1681);
    __twr_l331:;
    _jkl_epilogue:;
}

//
// Implements an XLO (XR/SDK Linkable Object) encoder for the assembler.
//

#INCLUDE "<inc>/Asm.hjk"

AsmStringTable : TlDynamicBuffer

FN AsmAddString (
    IN str : ^UBYTE,
) : UWORD

    // Add the string to the string table and return the offset.

    offset := AsmStringTable.Count

    TlCopyIntoDynamicBuffer (
        &AsmStringTable, // array
        str, // srcbuf
        TlMeasureString ( str ) + 1, // length (plus null terminator)
    )

    RETURN offset
END

FN AsmEncodeFile ()

    // Encode the assembled data into an XLO format object file.

    // First initialize the dynamic buffers we'll use for the various parts of
    // the object file.

    TlInitializeDynamicBuffer ( &AsmStringTable )

    // Now initialize easy bits of the object header.

    header : XloHeaderExtended

    header.Hdr.Magic = XLO_MAGIC_NUMBER
    header.Hdr.TargetArchitecture = AsmTargetInfo^.ArchitectureCode
    header.Hdr.ImportTableOffset = 0xABABABAB
    header.Hdr.Flags = XLO_FILE_FRAGMENT
    header.Hdr.Timestamp = TlCurrentEpochTime ()
    header.Hdr.ImportCount = 0

    // 
END
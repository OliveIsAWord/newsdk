ENUM TwrStatus : ULONG
	TWR_SUCCESS,
	TWR_NO_MEMORY,
	TWR_COULDNT_OPEN,
END

EXTERN FN TwrFillMemoryWithByte (
	IN ptr : ^VOID,
	IN sz : ULONG,
	IN byte : UBYTE,
)

EXTERN FN TwrPrintString (
	IN str : ^UBYTE,
)

EXTERN FN TwrPrintNumber (
	IN num : ULONG,
)

EXTERN FN TwrInternalError (
	IN str : ^UBYTE,
	IN err1 : ULONG,
	IN err2 : ULONG,
	IN err3 : ULONG,
)

EXTERN FN TwrUserError (
	IN str : ^UBYTE,
	IN err1 : ULONG,
	IN err2 : ULONG,
	IN err3 : ULONG,
)

EXTERN FN TwrAlloc (
	IN bytes : ULONG,
	OUT ptr : ^^VOID,
) : TwrStatus

EXTERN FN TwrFree (
	IN ptr : ^VOID,
)

EXTERN FN TwrStringCompare (
	IN str1 : ^UBYTE,
	IN str2 : ^UBYTE,
) : ULONG

EXTERN FN TwrStringCompareCount (
	IN str1 : ^UBYTE,
	IN str2 : ^UBYTE,
	IN count : ULONG,
) : ULONG

EXTERN FN TwrStringCopy (
	IN dest : ^UBYTE,
	IN src : ^UBYTE,
	IN bufsize : ULONG,
)

EXTERN FN TwrOpenSource (
	IN filename : ^UBYTE,
	OUT handle : ^^VOID,
) : TwrStatus

EXTERN FN TwrOpenDestination (
	IN filename : ^UBYTE,
	OUT handle : ^^VOID,
) : TwrStatus

EXTERN FN TwrClose (
	IN handle : ^VOID,
)

EXTERN FN TwrReadFile (
	IN handle : ^VOID,
	IN bytes : ULONG,
	OUT buffer : ^VOID,
) : ULONG

EXTERN FN TwrWriteFile (
	IN handle : ^VOID,
	IN bytes : ULONG,
	IN buffer : ^VOID,
) : ULONG


// hash table stuff


CONST TWR_HASH_SIZE : ULONG = 97

STRUCT TwrHashTable
	BucketHeads : ^TwrHashTableEntry[TWR_HASH_SIZE],
END

STRUCT TwrHashTableEntry
	Next : ^TwrHashTableEntry,
	Prev : ^TwrHashTableEntry,

	HashTable : ^TwrHashTable,

	Key : ^UBYTE,

	Hash : UBYTE,
END

EXTERN FN TwrHashTableInitialize (
	IN hashtable : ^TwrHashTable,
) : TwrStatus

EXTERN FN TwrHashTableInsert (
	IN hashtable : ^TwrHashTable,
	IN entry : ^TwrHashTableEntry,
	IN key : ^UBYTE,
)

EXTERN FN TwrHashTableLookup (
	IN hashtable : ^TwrHashTable,
	IN key : ^UBYTE,
) : ^TwrHashTableEntry

EXTERN FN TwrHashTableRemove (
	IN entry : ^TwrHashTableEntry,
)

EXTERN FN TwrHashTableEnumerate (
	IN hashtable : ^TwrHashTable,
	IN enumfunc : TwrHashTableEnumF,
)

FNPTR TwrHashTableEnumF (
	IN entry : ^TwrHashTableEntry,
)

// symbol table stuff


STRUCT TwrSymbolTable
	PrevScope : ^TwrSymbolTable, // previous in the scope stack
	HashTable : TwrHashTable,
	DeleteRoutine : TwrHashTableEnumF,
END

EXTERN FN TwrSymbolTableInitialize (
	IN symboltable : ^TwrSymbolTable,
	IN deletefunc : TwrHashTableEnumF,
) : TwrStatus

EXTERN FN TwrSymbolTableCreate (
	IN outerscope : ^TwrSymbolTable,
	IN deletefunc : TwrHashTableEnumF,
	OUT symboltable : ^^TwrSymbolTable,
) : TwrStatus

EXTERN FN TwrSymbolTableDelete (
	IN symboltable : ^TwrSymbolTable,
) : ^TwrSymbolTable

EXTERN FN TwrSymbolTableLookup (
	IN symboltable : ^TwrSymbolTable,
	IN name : ^UBYTE,
) : ^TwrHashTableEntry

EXTERN FN TwrSymbolTableInsert (
	IN symboltable : ^TwrSymbolTable,
	IN entry : ^TwrHashTableEntry,
	IN name : ^UBYTE,
)

EXTERN FN TwrSymbolTableRemove (
	IN entry : ^TwrHashTableEntry,
)
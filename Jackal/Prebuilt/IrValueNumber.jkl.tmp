#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback123, uint64_t _mng_context124, uint64_t _mng_fmt125, uint64_t _mng_argv126, uint64_t _mng_argc127);
extern void TlPrintByCallback(uint64_t _mng_callback128, uint64_t _mng_context129, uint64_t _mng_fmt130, uint64_t _mng_argv131, uint64_t _mng_argc132);
extern void TlPrintByVarTable(uint64_t _mng_handle133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByHandle(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrint(uint64_t _mng_fmt141, uint64_t _mng_argv142, uint64_t _mng_argc143);
extern void TlFormatByVarTable(uint64_t _mng_dest144, uint64_t _mng_bufsize145, uint64_t _mng_fmt146, uint64_t _mng_argv147, uint64_t _mng_argc148);
extern void TlFormat(uint64_t _mng_dest149, uint64_t _mng_bufsize150, uint64_t _mng_fmt151, uint64_t _mng_argv152, uint64_t _mng_argc153);
extern void TlError(uint64_t _mng_fmt154, uint64_t _mng_argv155, uint64_t _mng_argc156);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg157);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename158, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock159, uint64_t _mng_filepath160);
extern uint64_t LexLookupSection(uint64_t _mng_name161);
extern void LexPushSection(uint64_t _mng_section162);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope163);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg164);
extern void LexExpandMacro(uint64_t _mng_macro165, uint64_t _mng_token166);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream167, uint64_t _mng_macro168);
extern void LexUninitializeStream(uint64_t _mng_stream169);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream170);
extern void LexPushStream(uint64_t _mng_stream171);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream172, uint64_t _mng_fileblock173, uint64_t _mng_handle174);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock175, uint64_t _mng_handle176);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope177);
extern uint64_t LexResetScope(uint64_t _mng_scope178);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope179);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest180, uint64_t _mng_src181);
extern void LexGetToken(uint64_t _mng_token182);
extern void LexPutbackToken(uint64_t _mng_token183);
extern uint64_t LexMatchToken(uint64_t _mng_token184, uint64_t _mng_type185, uint64_t _mng_subtype186);
extern void LexError(uint64_t _mng_token187, uint64_t _mng_fmt188, uint64_t _mng_argv189, uint64_t _mng_argc190);
extern uint64_t LexCrunchNumber(uint64_t _mng_token191, uint64_t _mng_buffer192);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node193);
extern uint64_t IrAllocateStack(uint64_t _mng_func194, uint64_t _mng_bytes195);
extern uint64_t IrGetStackOffset(uint64_t _mng_func196, uint64_t _mng_symbol197);
extern void IrValueNumberVariable(uint64_t _mng_var198, uint64_t _mng_valueop199, uint64_t _mng_src1200, uint64_t _mng_src2201);
extern uint64_t IrFindValue(uint64_t _mng_op202, uint64_t _mng_src1203, uint64_t _mng_src2204);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads205, uint64_t _mng_symbol206);
extern void IrKillVariable(uint64_t _mng_var207);
extern void IrValueNumberConstantVariable(uint64_t _mng_var208, uint64_t _mng_constant209, uint64_t _mng_op210);
extern uint64_t IrFindConstant(uint64_t _mng_constant211, uint64_t _mng_op212);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var213);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[8];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst214, uint64_t _mng_value215);
extern void IrRemoveInstruction(uint64_t _mng_inst216);
uint64_t IrHashTable[196];
uint32_t IrNextValueNumber = 1ULL;
void IrValueNumberBarrier(uint64_t _mng_onlyloads217, uint64_t _mng_symbol218) {
    uint64_t __twr_v219;
    uint64_t _mng_head220;
    uint64_t __twr_v221;
    uint64_t _mng_listentry222;
    uint64_t __twr_v223;
    uint64_t _mng_nextentry224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t _mng_var227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t _mng_listentry242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t _mng_prev246;
    uint64_t __twr_v247;
    uint64_t _mng_next248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t _mng_listentry252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t _mng_prev255;
    uint64_t __twr_v256;
    uint64_t _mng_next257;
    uint64_t __twr_v258;
    __twr_v219 = (uint64_t)(&IrHashTable);
    _mng_head220 = __twr_v219;
    __twr_v221 = *(uint64_t*)(_mng_head220);
    _mng_listentry222 = __twr_v221;
    if (_mng_listentry222 == _mng_head220) { goto __twr_l3; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v223 = *(uint64_t*)(_mng_listentry222);
    _mng_nextentry224 = __twr_v223;
    __twr_v225 = 24ULL;
    __twr_v226 = _mng_listentry222 - __twr_v225;
    _mng_var227 = __twr_v226;
    if (!(_mng_onlyloads217)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v228 = 84ULL;
    __twr_v229 = _mng_var227 + __twr_v228;
    __twr_v230 = *(uint8_t*)(__twr_v229);
    if (!(__twr_v230)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    if (!(_mng_symbol218)) { goto __twr_l9; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v231 = 56ULL;
    __twr_v232 = _mng_var227 + __twr_v231;
    __twr_v233 = *(uint64_t*)(__twr_v232);
    if (__twr_v233 == _mng_symbol218) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v234 = 56ULL;
    __twr_v235 = _mng_var227 + __twr_v234;
    __twr_v236 = *(uint64_t*)(__twr_v235);
    if (__twr_v236) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v237 = 0ULL;
    __twr_v238 = 24ULL;
    __twr_v239 = _mng_var227 + __twr_v238;
    __twr_v240 = 80ULL;
    __twr_v241 = _mng_var227 + __twr_v240;
    *(uint32_t*)(__twr_v241) = __twr_v237;
    _mng_listentry242 = __twr_v239;
    __twr_v243 = 8ULL;
    __twr_v244 = _mng_listentry242 + __twr_v243;
    __twr_v245 = *(uint64_t*)(__twr_v244);
    _mng_prev246 = __twr_v245;
    __twr_v247 = *(uint64_t*)(_mng_listentry242);
    _mng_next248 = __twr_v247;
    *(uint64_t*)(_mng_prev246) = _mng_next248;
    __twr_v249 = _mng_next248 + __twr_v243;
    *(uint64_t*)(__twr_v249) = _mng_prev246;
    __twr_v250 = 40ULL;
    __twr_v251 = _mng_var227 + __twr_v250;
    _mng_listentry252 = __twr_v251;
    __twr_v253 = _mng_listentry252 + __twr_v243;
    __twr_v254 = *(uint64_t*)(__twr_v253);
    _mng_prev255 = __twr_v254;
    __twr_v256 = *(uint64_t*)(_mng_listentry252);
    _mng_next257 = __twr_v256;
    *(uint64_t*)(_mng_prev255) = _mng_next257;
    __twr_v258 = _mng_next257 + __twr_v243;
    *(uint64_t*)(__twr_v258) = _mng_prev255;
    __twr_l8:;
    __twr_l5:;
    _mng_listentry222 = _mng_nextentry224;
    __twr_l4:;
    if (_mng_listentry222 != _mng_head220) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void IrKillValueNumber(uint64_t _mng_value259) {
    uint64_t __twr_v260;
    uint64_t _mng_head261;
    uint64_t __twr_v262;
    uint64_t _mng_listentry263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t _mng_var266;
    uint64_t __twr_v267;
    uint64_t _mng_nextentry268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t _mng_listentry280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t _mng_prev284;
    uint64_t __twr_v285;
    uint64_t _mng_next286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t _mng_listentry290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t _mng_prev293;
    uint64_t __twr_v294;
    uint64_t _mng_next295;
    uint64_t __twr_v296;
    __twr_v260 = (uint64_t)(&IrHashTable);
    _mng_head261 = __twr_v260;
    __twr_v262 = *(uint64_t*)(_mng_head261);
    _mng_listentry263 = __twr_v262;
    if (_mng_listentry263 == _mng_head261) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v264 = 24ULL;
    __twr_v265 = _mng_listentry263 - __twr_v264;
    _mng_var266 = __twr_v265;
    __twr_v267 = *(uint64_t*)(_mng_listentry263);
    _mng_nextentry268 = __twr_v267;
    __twr_v269 = 72ULL;
    __twr_v270 = _mng_var266 + __twr_v269;
    __twr_v271 = *(uint32_t*)(__twr_v270);
    if (__twr_v271 == _mng_value259) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v272 = 76ULL;
    __twr_v273 = _mng_var266 + __twr_v272;
    __twr_v274 = *(uint32_t*)(__twr_v273);
    if (__twr_v274 != _mng_value259) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v275 = 0ULL;
    __twr_v276 = 24ULL;
    __twr_v277 = _mng_var266 + __twr_v276;
    __twr_v278 = 80ULL;
    __twr_v279 = _mng_var266 + __twr_v278;
    *(uint32_t*)(__twr_v279) = __twr_v275;
    _mng_listentry280 = __twr_v277;
    __twr_v281 = 8ULL;
    __twr_v282 = _mng_listentry280 + __twr_v281;
    __twr_v283 = *(uint64_t*)(__twr_v282);
    _mng_prev284 = __twr_v283;
    __twr_v285 = *(uint64_t*)(_mng_listentry280);
    _mng_next286 = __twr_v285;
    *(uint64_t*)(_mng_prev284) = _mng_next286;
    __twr_v287 = _mng_next286 + __twr_v281;
    *(uint64_t*)(__twr_v287) = _mng_prev284;
    __twr_v288 = 40ULL;
    __twr_v289 = _mng_var266 + __twr_v288;
    _mng_listentry290 = __twr_v289;
    __twr_v291 = _mng_listentry290 + __twr_v281;
    __twr_v292 = *(uint64_t*)(__twr_v291);
    _mng_prev293 = __twr_v292;
    __twr_v294 = *(uint64_t*)(_mng_listentry290);
    _mng_next295 = __twr_v294;
    *(uint64_t*)(_mng_prev293) = _mng_next295;
    __twr_v296 = _mng_next295 + __twr_v281;
    *(uint64_t*)(__twr_v296) = _mng_prev293;
    __twr_l16:;
    _mng_listentry263 = _mng_nextentry268;
    __twr_l15:;
    if (_mng_listentry263 != _mng_head261) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_l12:;
    _jkl_epilogue:;
}
void IrKillVariable(uint64_t _mng_var297) {
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t _mng_listentry307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t _mng_prev311;
    uint64_t __twr_v312;
    uint64_t _mng_next313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t _mng_listentry317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t _mng_prev320;
    uint64_t __twr_v321;
    uint64_t _mng_next322;
    uint64_t __twr_v323;
    __twr_v298 = (uint64_t)(&IrKillValueNumber);
    __twr_v299 = 80ULL;
    __twr_v300 = _mng_var297 + __twr_v299;
    __twr_v301 = *(uint32_t*)(__twr_v300);
    ((void (*)(uint64_t))__twr_v298)(__twr_v301);
    __twr_v302 = 85ULL;
    __twr_v303 = _mng_var297 + __twr_v302;
    __twr_v304 = *(uint8_t*)(__twr_v303);
    if (!(__twr_v304)) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v305 = 24ULL;
    __twr_v306 = _mng_var297 + __twr_v305;
    _mng_listentry307 = __twr_v306;
    __twr_v308 = 8ULL;
    __twr_v309 = _mng_listentry307 + __twr_v308;
    __twr_v310 = *(uint64_t*)(__twr_v309);
    _mng_prev311 = __twr_v310;
    __twr_v312 = *(uint64_t*)(_mng_listentry307);
    _mng_next313 = __twr_v312;
    *(uint64_t*)(_mng_prev311) = _mng_next313;
    __twr_v314 = _mng_next313 + __twr_v308;
    *(uint64_t*)(__twr_v314) = _mng_prev311;
    __twr_v315 = 40ULL;
    __twr_v316 = _mng_var297 + __twr_v315;
    _mng_listentry317 = __twr_v316;
    __twr_v318 = _mng_listentry317 + __twr_v308;
    __twr_v319 = *(uint64_t*)(__twr_v318);
    _mng_prev320 = __twr_v319;
    __twr_v321 = *(uint64_t*)(_mng_listentry317);
    _mng_next322 = __twr_v321;
    *(uint64_t*)(_mng_prev320) = _mng_next322;
    __twr_v323 = _mng_next322 + __twr_v308;
    *(uint64_t*)(__twr_v323) = _mng_prev320;
    __twr_l20:;
    __twr_l19:;
    _jkl_epilogue:;
}
void IrGiveOpaqueValueVariable(uint64_t _mng_var324) {
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t _mng_listentry332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t _mng_prev336;
    uint64_t __twr_v337;
    uint64_t _mng_next338;
    uint64_t __twr_v339;
    uint64_t _mng_listentry340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t _mng_prev343;
    uint64_t __twr_v344;
    uint64_t _mng_next345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    __twr_v325 = 85ULL;
    __twr_v326 = _mng_var324 + __twr_v325;
    __twr_v327 = *(uint8_t*)(__twr_v326);
    if (!(__twr_v327)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v328 = 24ULL;
    __twr_v329 = _mng_var324 + __twr_v328;
    __twr_v330 = 40ULL;
    __twr_v331 = _mng_var324 + __twr_v330;
    _mng_listentry332 = __twr_v331;
    __twr_v333 = 8ULL;
    __twr_v334 = _mng_listentry332 + __twr_v333;
    __twr_v335 = *(uint64_t*)(__twr_v334);
    _mng_prev336 = __twr_v335;
    __twr_v337 = *(uint64_t*)(_mng_listentry332);
    _mng_next338 = __twr_v337;
    *(uint64_t*)(_mng_prev336) = _mng_next338;
    __twr_v339 = _mng_next338 + __twr_v333;
    *(uint64_t*)(__twr_v339) = _mng_prev336;
    _mng_listentry340 = __twr_v329;
    __twr_v341 = _mng_listentry340 + __twr_v333;
    __twr_v342 = *(uint64_t*)(__twr_v341);
    _mng_prev343 = __twr_v342;
    __twr_v344 = *(uint64_t*)(_mng_listentry340);
    _mng_next345 = __twr_v344;
    *(uint64_t*)(_mng_prev343) = _mng_next345;
    __twr_v346 = _mng_next345 + __twr_v333;
    *(uint64_t*)(__twr_v346) = _mng_prev343;
    __twr_v347 = (uint64_t)(&IrKillValueNumber);
    __twr_v348 = 80ULL;
    __twr_v349 = _mng_var324 + __twr_v348;
    __twr_v350 = *(uint32_t*)(__twr_v349);
    ((void (*)(uint64_t))__twr_v347)(__twr_v350);
    __twr_l23:;
    __twr_v351 = 0ULL;
    __twr_v352 = 85ULL;
    __twr_v353 = _mng_var324 + __twr_v352;
    *(uint8_t*)(__twr_v353) = __twr_v351;
    __twr_v354 = (uint64_t)(&IrNextValueNumber);
    __twr_v355 = *(uint32_t*)(__twr_v354);
    __twr_v356 = 80ULL;
    __twr_v357 = _mng_var324 + __twr_v356;
    *(uint32_t*)(__twr_v357) = __twr_v355;
    __twr_v358 = 1ULL;
    __twr_v359 = *(uint32_t*)(__twr_v354);
    __twr_v360 = __twr_v359 + __twr_v358;
    *(uint32_t*)(__twr_v354) = __twr_v360;
    __twr_l22:;
    _jkl_epilogue:;
}
void IrValueNumberVariable(uint64_t _mng_var361, uint64_t _mng_valueop362, uint64_t _mng_src1363, uint64_t _mng_src2364) {
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t _mng_byload371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t _mng_byloadof375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t _mng_valuesrc1385;
    uint64_t _mng_valuesrc2386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t _mng_listentry405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t _mng_prev409;
    uint64_t __twr_v410;
    uint64_t _mng_next411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t _mng_listhead418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t _mng_listentry421;
    uint64_t __twr_v422;
    uint64_t _mng_first423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t _mng_vn429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t _mng_hash446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t _mng_listhead467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t _mng_listentry470;
    uint64_t __twr_v471;
    uint64_t _mng_first472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    __twr_v365 = 84ULL;
    __twr_v366 = _mng_var361 + __twr_v365;
    __twr_v367 = *(uint8_t*)(__twr_v366);
    __twr_v368 = _mng_src1363 + __twr_v365;
    __twr_v369 = *(uint8_t*)(__twr_v368);
    __twr_v370 = __twr_v367 | __twr_v369;
    _mng_byload371 = __twr_v370;
    __twr_v372 = 56ULL;
    __twr_v373 = _mng_var361 + __twr_v372;
    __twr_v374 = *(uint64_t*)(__twr_v373);
    _mng_byloadof375 = __twr_v374;
    if (_mng_byloadof375) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v376 = 56ULL;
    __twr_v377 = _mng_src1363 + __twr_v376;
    __twr_v378 = *(uint64_t*)(__twr_v377);
    _mng_byloadof375 = __twr_v378;
    goto __twr_l26;
    __twr_l28:;
    __twr_v379 = 56ULL;
    __twr_v380 = _mng_src1363 + __twr_v379;
    __twr_v381 = *(uint64_t*)(__twr_v380);
    if (!(__twr_v381)) { goto __twr_l26; } else { goto __twr_l29; }
    __twr_l29:;
    _mng_byloadof375 = 0ULL;
    __twr_l26:;
    __twr_v382 = 80ULL;
    __twr_v383 = _mng_src1363 + __twr_v382;
    __twr_v384 = *(uint32_t*)(__twr_v383);
    _mng_valuesrc1385 = __twr_v384;
    if (_mng_valuesrc1385) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    _mng_valuesrc2386 = 0ULL;
    if (!(_mng_src2364)) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v387 = 80ULL;
    __twr_v388 = _mng_src2364 + __twr_v387;
    __twr_v389 = *(uint32_t*)(__twr_v388);
    _mng_valuesrc2386 = __twr_v389;
    __twr_v390 = 84ULL;
    __twr_v391 = _mng_src2364 + __twr_v390;
    __twr_v392 = *(uint8_t*)(__twr_v391);
    __twr_v393 = _mng_byload371 | __twr_v392;
    _mng_byload371 = __twr_v393;
    if (_mng_byloadof375) { goto __twr_l36; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v394 = 56ULL;
    __twr_v395 = _mng_src2364 + __twr_v394;
    __twr_v396 = *(uint64_t*)(__twr_v395);
    _mng_byloadof375 = __twr_v396;
    goto __twr_l34;
    __twr_l36:;
    __twr_v397 = 56ULL;
    __twr_v398 = _mng_src2364 + __twr_v397;
    __twr_v399 = *(uint64_t*)(__twr_v398);
    if (!(__twr_v399)) { goto __twr_l34; } else { goto __twr_l37; }
    __twr_l37:;
    _mng_byloadof375 = 0ULL;
    __twr_l34:;
    if (_mng_valuesrc2386) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    goto _jkl_epilogue;
    __twr_l38:;
    __twr_l32:;
    __twr_v400 = 85ULL;
    __twr_v401 = _mng_var361 + __twr_v400;
    __twr_v402 = *(uint8_t*)(__twr_v401);
    if (!(__twr_v402)) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    __twr_v403 = 40ULL;
    __twr_v404 = _mng_var361 + __twr_v403;
    _mng_listentry405 = __twr_v404;
    __twr_v406 = 8ULL;
    __twr_v407 = _mng_listentry405 + __twr_v406;
    __twr_v408 = *(uint64_t*)(__twr_v407);
    _mng_prev409 = __twr_v408;
    __twr_v410 = *(uint64_t*)(_mng_listentry405);
    _mng_next411 = __twr_v410;
    *(uint64_t*)(_mng_prev409) = _mng_next411;
    __twr_v412 = _mng_next411 + __twr_v406;
    *(uint64_t*)(__twr_v412) = _mng_prev409;
    __twr_v413 = (uint64_t)(&IrKillValueNumber);
    __twr_v414 = 80ULL;
    __twr_v415 = _mng_var361 + __twr_v414;
    __twr_v416 = *(uint32_t*)(__twr_v415);
    ((void (*)(uint64_t))__twr_v413)(__twr_v416);
    goto __twr_l40;
    __twr_l42:;
    __twr_v417 = (uint64_t)(&IrHashTable);
    _mng_listhead418 = __twr_v417;
    __twr_v419 = 24ULL;
    __twr_v420 = _mng_var361 + __twr_v419;
    _mng_listentry421 = __twr_v420;
    __twr_v422 = *(uint64_t*)(_mng_listhead418);
    _mng_first423 = __twr_v422;
    *(uint64_t*)(_mng_listentry421) = _mng_first423;
    __twr_v424 = 8ULL;
    __twr_v425 = _mng_listentry421 + __twr_v424;
    *(uint64_t*)(__twr_v425) = _mng_listhead418;
    __twr_v426 = _mng_first423 + __twr_v424;
    *(uint64_t*)(__twr_v426) = __twr_v420;
    *(uint64_t*)(_mng_listhead418) = __twr_v420;
    __twr_l40:;
    __twr_v427 = (uint64_t)(&IrNextValueNumber);
    __twr_v428 = *(uint32_t*)(__twr_v427);
    _mng_vn429 = __twr_v428;
    __twr_v430 = 1ULL;
    __twr_v431 = __twr_v428 + __twr_v430;
    *(uint32_t*)(__twr_v427) = __twr_v431;
    __twr_v432 = 56ULL;
    __twr_v433 = 80ULL;
    __twr_v434 = _mng_var361 + __twr_v433;
    *(uint32_t*)(__twr_v434) = _mng_vn429;
    __twr_v435 = 84ULL;
    __twr_v436 = _mng_var361 + __twr_v435;
    *(uint8_t*)(__twr_v436) = _mng_byload371;
    __twr_v437 = _mng_var361 + __twr_v432;
    *(uint64_t*)(__twr_v437) = _mng_byloadof375;
    __twr_v438 = 72ULL;
    __twr_v439 = _mng_var361 + __twr_v438;
    *(uint32_t*)(__twr_v439) = _mng_valuesrc1385;
    __twr_v440 = 76ULL;
    __twr_v441 = _mng_var361 + __twr_v440;
    *(uint32_t*)(__twr_v441) = _mng_valuesrc2386;
    __twr_v442 = 85ULL;
    __twr_v443 = _mng_var361 + __twr_v442;
    *(uint8_t*)(__twr_v443) = _mng_valueop362;
    __twr_v444 = _mng_valuesrc1385 ^ _mng_valuesrc2386;
    __twr_v445 = __twr_v444 ^ _mng_valueop362;
    _mng_hash446 = __twr_v445;
    __twr_v447 = 7ULL;
    __twr_v448 = _mng_hash446 >> __twr_v447;
    __twr_v449 = _mng_hash446 ^ __twr_v448;
    _mng_hash446 = __twr_v449;
    __twr_v450 = 14ULL;
    __twr_v451 = _mng_hash446 >> __twr_v450;
    __twr_v452 = _mng_hash446 ^ __twr_v451;
    _mng_hash446 = __twr_v452;
    __twr_v453 = 21ULL;
    __twr_v454 = _mng_hash446 >> __twr_v453;
    __twr_v455 = _mng_hash446 ^ __twr_v454;
    _mng_hash446 = __twr_v455;
    __twr_v456 = 28ULL;
    __twr_v457 = _mng_hash446 >> __twr_v456;
    __twr_v458 = _mng_hash446 ^ __twr_v457;
    _mng_hash446 = __twr_v458;
    __twr_v459 = 97ULL;
    __twr_v460 = _mng_hash446 % __twr_v459;
    _mng_hash446 = __twr_v460;
    __twr_v461 = (uint64_t)(&IrHashTable);
    __twr_v462 = 16ULL;
    __twr_v463 = __twr_v461 + __twr_v462;
    __twr_v464 = 4ULL;
    __twr_v465 = _mng_hash446 << __twr_v464;
    __twr_v466 = __twr_v463 + __twr_v465;
    _mng_listhead467 = __twr_v466;
    __twr_v468 = 40ULL;
    __twr_v469 = _mng_var361 + __twr_v468;
    _mng_listentry470 = __twr_v469;
    __twr_v471 = *(uint64_t*)(_mng_listhead467);
    _mng_first472 = __twr_v471;
    *(uint64_t*)(_mng_listentry470) = _mng_first472;
    __twr_v473 = 8ULL;
    __twr_v474 = _mng_listentry470 + __twr_v473;
    *(uint64_t*)(__twr_v474) = _mng_listhead467;
    __twr_v475 = _mng_first472 + __twr_v473;
    *(uint64_t*)(__twr_v475) = __twr_v469;
    *(uint64_t*)(_mng_listhead467) = __twr_v469;
    __twr_l25:;
    _jkl_epilogue:;
}
void IrValueNumberConstantVariable(uint64_t _mng_var476, uint64_t _mng_constant477, uint64_t _mng_op478) {
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t _mng_listentry484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t _mng_prev488;
    uint64_t __twr_v489;
    uint64_t _mng_next490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t _mng_listhead497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t _mng_listentry500;
    uint64_t __twr_v501;
    uint64_t _mng_first502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t _mng_vn508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t _mng_hash518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t _mng_listhead539;
    uint64_t __twr_v540;
    uint64_t _mng_listentry541;
    uint64_t __twr_v542;
    uint64_t _mng_first543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    __twr_v479 = 85ULL;
    __twr_v480 = _mng_var476 + __twr_v479;
    __twr_v481 = *(uint8_t*)(__twr_v480);
    if (!(__twr_v481)) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v482 = 40ULL;
    __twr_v483 = _mng_var476 + __twr_v482;
    _mng_listentry484 = __twr_v483;
    __twr_v485 = 8ULL;
    __twr_v486 = _mng_listentry484 + __twr_v485;
    __twr_v487 = *(uint64_t*)(__twr_v486);
    _mng_prev488 = __twr_v487;
    __twr_v489 = *(uint64_t*)(_mng_listentry484);
    _mng_next490 = __twr_v489;
    *(uint64_t*)(_mng_prev488) = _mng_next490;
    __twr_v491 = _mng_next490 + __twr_v485;
    *(uint64_t*)(__twr_v491) = _mng_prev488;
    __twr_v492 = (uint64_t)(&IrKillValueNumber);
    __twr_v493 = 80ULL;
    __twr_v494 = _mng_var476 + __twr_v493;
    __twr_v495 = *(uint32_t*)(__twr_v494);
    ((void (*)(uint64_t))__twr_v492)(__twr_v495);
    goto __twr_l44;
    __twr_l46:;
    __twr_v496 = (uint64_t)(&IrHashTable);
    _mng_listhead497 = __twr_v496;
    __twr_v498 = 24ULL;
    __twr_v499 = _mng_var476 + __twr_v498;
    _mng_listentry500 = __twr_v499;
    __twr_v501 = *(uint64_t*)(_mng_listhead497);
    _mng_first502 = __twr_v501;
    *(uint64_t*)(_mng_listentry500) = _mng_first502;
    __twr_v503 = 8ULL;
    __twr_v504 = _mng_listentry500 + __twr_v503;
    *(uint64_t*)(__twr_v504) = _mng_listhead497;
    __twr_v505 = _mng_first502 + __twr_v503;
    *(uint64_t*)(__twr_v505) = __twr_v499;
    *(uint64_t*)(_mng_listhead497) = __twr_v499;
    __twr_l44:;
    __twr_v506 = (uint64_t)(&IrNextValueNumber);
    __twr_v507 = *(uint32_t*)(__twr_v506);
    _mng_vn508 = __twr_v507;
    __twr_v509 = 1ULL;
    __twr_v510 = __twr_v507 + __twr_v509;
    *(uint32_t*)(__twr_v506) = __twr_v510;
    __twr_v511 = 80ULL;
    __twr_v512 = _mng_var476 + __twr_v511;
    *(uint32_t*)(__twr_v512) = _mng_vn508;
    __twr_v513 = 40ULL;
    __twr_v514 = 64ULL;
    __twr_v515 = _mng_var476 + __twr_v514;
    *(uint64_t*)(__twr_v515) = _mng_constant477;
    __twr_v516 = 85ULL;
    __twr_v517 = _mng_var476 + __twr_v516;
    *(uint8_t*)(__twr_v517) = _mng_op478;
    _mng_hash518 = _mng_constant477;
    __twr_v519 = 7ULL;
    __twr_v520 = _mng_hash518 >> __twr_v519;
    __twr_v521 = _mng_hash518 ^ __twr_v520;
    _mng_hash518 = __twr_v521;
    __twr_v522 = 14ULL;
    __twr_v523 = _mng_hash518 >> __twr_v522;
    __twr_v524 = _mng_hash518 ^ __twr_v523;
    _mng_hash518 = __twr_v524;
    __twr_v525 = 21ULL;
    __twr_v526 = _mng_hash518 >> __twr_v525;
    __twr_v527 = _mng_hash518 ^ __twr_v526;
    _mng_hash518 = __twr_v527;
    __twr_v528 = 28ULL;
    __twr_v529 = _mng_hash518 >> __twr_v528;
    __twr_v530 = _mng_hash518 ^ __twr_v529;
    _mng_hash518 = __twr_v530;
    __twr_v531 = 97ULL;
    __twr_v532 = _mng_hash518 % __twr_v531;
    _mng_hash518 = __twr_v532;
    __twr_v533 = (uint64_t)(&IrHashTable);
    __twr_v534 = 16ULL;
    __twr_v535 = __twr_v533 + __twr_v534;
    __twr_v536 = 4ULL;
    __twr_v537 = _mng_hash518 << __twr_v536;
    __twr_v538 = __twr_v535 + __twr_v537;
    _mng_listhead539 = __twr_v538;
    __twr_v540 = _mng_var476 + __twr_v513;
    _mng_listentry541 = __twr_v540;
    __twr_v542 = *(uint64_t*)(_mng_listhead539);
    _mng_first543 = __twr_v542;
    *(uint64_t*)(_mng_listentry541) = _mng_first543;
    __twr_v544 = 8ULL;
    __twr_v545 = _mng_listentry541 + __twr_v544;
    *(uint64_t*)(__twr_v545) = _mng_listhead539;
    __twr_v546 = _mng_first543 + __twr_v544;
    *(uint64_t*)(__twr_v546) = __twr_v540;
    *(uint64_t*)(_mng_listhead539) = __twr_v540;
    __twr_l43:;
    _jkl_epilogue:;
}
uint64_t IrFindValue(uint64_t _mng_op547, uint64_t _mng_src1548, uint64_t _mng_src2549) {
    uint64_t _jkl_retv;
    uint64_t _mng_valuesrc1550;
    uint64_t _mng_valuesrc2551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t _mng_hash560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t _mng_head581;
    uint64_t __twr_v582;
    uint64_t _mng_listentry583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t _mng_var586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    _mng_valuesrc1550 = 0ULL;
    _mng_valuesrc2551 = 0ULL;
    if (!(_mng_src1548)) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v552 = 80ULL;
    __twr_v553 = _mng_src1548 + __twr_v552;
    __twr_v554 = *(uint32_t*)(__twr_v553);
    _mng_valuesrc1550 = __twr_v554;
    __twr_l48:;
    if (!(_mng_src2549)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v555 = 80ULL;
    __twr_v556 = _mng_src2549 + __twr_v555;
    __twr_v557 = *(uint32_t*)(__twr_v556);
    _mng_valuesrc2551 = __twr_v557;
    __twr_l50:;
    __twr_v558 = _mng_valuesrc1550 ^ _mng_valuesrc2551;
    __twr_v559 = __twr_v558 ^ _mng_op547;
    _mng_hash560 = __twr_v559;
    __twr_v561 = 7ULL;
    __twr_v562 = _mng_hash560 >> __twr_v561;
    __twr_v563 = _mng_hash560 ^ __twr_v562;
    _mng_hash560 = __twr_v563;
    __twr_v564 = 14ULL;
    __twr_v565 = _mng_hash560 >> __twr_v564;
    __twr_v566 = _mng_hash560 ^ __twr_v565;
    _mng_hash560 = __twr_v566;
    __twr_v567 = 21ULL;
    __twr_v568 = _mng_hash560 >> __twr_v567;
    __twr_v569 = _mng_hash560 ^ __twr_v568;
    _mng_hash560 = __twr_v569;
    __twr_v570 = 28ULL;
    __twr_v571 = _mng_hash560 >> __twr_v570;
    __twr_v572 = _mng_hash560 ^ __twr_v571;
    _mng_hash560 = __twr_v572;
    __twr_v573 = 97ULL;
    __twr_v574 = _mng_hash560 % __twr_v573;
    _mng_hash560 = __twr_v574;
    __twr_v575 = (uint64_t)(&IrHashTable);
    __twr_v576 = 16ULL;
    __twr_v577 = __twr_v575 + __twr_v576;
    __twr_v578 = 4ULL;
    __twr_v579 = _mng_hash560 << __twr_v578;
    __twr_v580 = __twr_v577 + __twr_v579;
    _mng_head581 = __twr_v580;
    __twr_v582 = *(uint64_t*)(_mng_head581);
    _mng_listentry583 = __twr_v582;
    if (_mng_listentry583 == _mng_head581) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v584 = 40ULL;
    __twr_v585 = _mng_listentry583 - __twr_v584;
    _mng_var586 = __twr_v585;
    __twr_v587 = 85ULL;
    __twr_v588 = _mng_var586 + __twr_v587;
    __twr_v589 = *(uint8_t*)(__twr_v588);
    if (__twr_v589 != _mng_op547) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v590 = 72ULL;
    __twr_v591 = _mng_var586 + __twr_v590;
    __twr_v592 = *(uint32_t*)(__twr_v591);
    if (__twr_v592 != _mng_valuesrc1550) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v593 = 76ULL;
    __twr_v594 = _mng_var586 + __twr_v593;
    __twr_v595 = *(uint32_t*)(__twr_v594);
    if (__twr_v595 != _mng_valuesrc2551) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v596 = 0ULL;
    __twr_v597 = 92ULL;
    __twr_v598 = _mng_var586 + __twr_v597;
    *(uint8_t*)(__twr_v598) = __twr_v596;
    _jkl_retv = _mng_var586;
    goto _jkl_epilogue;
    goto __twr_l57;
    __twr_l59:;
    __twr_v599 = (uint64_t)(&IrCommutativity);
    __twr_v600 = __twr_v599 + _mng_op547;
    __twr_v601 = *(uint8_t*)(__twr_v600);
    if (!(__twr_v601)) { goto __twr_l57; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v602 = 72ULL;
    __twr_v603 = _mng_var586 + __twr_v602;
    __twr_v604 = *(uint32_t*)(__twr_v603);
    if (__twr_v604 != _mng_valuesrc2551) { goto __twr_l57; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v605 = 76ULL;
    __twr_v606 = _mng_var586 + __twr_v605;
    __twr_v607 = *(uint32_t*)(__twr_v606);
    if (__twr_v607 != _mng_valuesrc1550) { goto __twr_l57; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v608 = 0ULL;
    __twr_v609 = 92ULL;
    __twr_v610 = _mng_var586 + __twr_v609;
    *(uint8_t*)(__twr_v610) = __twr_v608;
    _jkl_retv = _mng_var586;
    goto _jkl_epilogue;
    __twr_l57:;
    __twr_l55:;
    __twr_v611 = *(uint64_t*)(_mng_listentry583);
    _mng_listentry583 = __twr_v611;
    __twr_l54:;
    if (_mng_listentry583 != _mng_head581) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v612 = 0ULL;
    _jkl_retv = __twr_v612;
    goto _jkl_epilogue;
    __twr_l47:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t IrFindConstant(uint64_t _mng_constant613, uint64_t _mng_op614) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t _mng_head636;
    uint64_t __twr_v637;
    uint64_t _mng_listentry638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t _mng_var641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    _mng_hash615 = _mng_constant613;
    __twr_v616 = 7ULL;
    __twr_v617 = _mng_hash615 >> __twr_v616;
    __twr_v618 = _mng_hash615 ^ __twr_v617;
    _mng_hash615 = __twr_v618;
    __twr_v619 = 14ULL;
    __twr_v620 = _mng_hash615 >> __twr_v619;
    __twr_v621 = _mng_hash615 ^ __twr_v620;
    _mng_hash615 = __twr_v621;
    __twr_v622 = 21ULL;
    __twr_v623 = _mng_hash615 >> __twr_v622;
    __twr_v624 = _mng_hash615 ^ __twr_v623;
    _mng_hash615 = __twr_v624;
    __twr_v625 = 28ULL;
    __twr_v626 = _mng_hash615 >> __twr_v625;
    __twr_v627 = _mng_hash615 ^ __twr_v626;
    _mng_hash615 = __twr_v627;
    __twr_v628 = 97ULL;
    __twr_v629 = _mng_hash615 % __twr_v628;
    _mng_hash615 = __twr_v629;
    __twr_v630 = (uint64_t)(&IrHashTable);
    __twr_v631 = 16ULL;
    __twr_v632 = __twr_v630 + __twr_v631;
    __twr_v633 = 4ULL;
    __twr_v634 = _mng_hash615 << __twr_v633;
    __twr_v635 = __twr_v632 + __twr_v634;
    _mng_head636 = __twr_v635;
    __twr_v637 = *(uint64_t*)(_mng_head636);
    _mng_listentry638 = __twr_v637;
    if (_mng_listentry638 == _mng_head636) { goto __twr_l66; } else { goto __twr_l65; }
    __twr_l65:;
    __twr_v639 = 40ULL;
    __twr_v640 = _mng_listentry638 - __twr_v639;
    _mng_var641 = __twr_v640;
    __twr_v642 = 85ULL;
    __twr_v643 = _mng_var641 + __twr_v642;
    __twr_v644 = *(uint8_t*)(__twr_v643);
    if (__twr_v644 != _mng_op614) { goto __twr_l68; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v645 = 64ULL;
    __twr_v646 = _mng_var641 + __twr_v645;
    __twr_v647 = *(uint64_t*)(__twr_v646);
    if (__twr_v647 != _mng_constant613) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    __twr_v648 = 0ULL;
    __twr_v649 = 92ULL;
    __twr_v650 = _mng_var641 + __twr_v649;
    *(uint8_t*)(__twr_v650) = __twr_v648;
    _jkl_retv = _mng_var641;
    goto _jkl_epilogue;
    __twr_l68:;
    __twr_v651 = *(uint64_t*)(_mng_listentry638);
    _mng_listentry638 = __twr_v651;
    __twr_l67:;
    if (_mng_listentry638 != _mng_head636) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v652 = 0ULL;
    _jkl_retv = __twr_v652;
    goto _jkl_epilogue;
    __twr_l64:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void IrInitializeValueNumber() {
    uint64_t __twr_v653;
    uint64_t _mng_listhead654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t _mng_i657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t _mng_listhead664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    __twr_v653 = (uint64_t)(&IrHashTable);
    _mng_listhead654 = __twr_v653;
    __twr_v655 = 8ULL;
    __twr_v656 = _mng_listhead654 + __twr_v655;
    *(uint64_t*)(__twr_v656) = _mng_listhead654;
    *(uint64_t*)(_mng_listhead654) = _mng_listhead654;
    _mng_i657 = 0ULL;
    __twr_l72:;
    __twr_v658 = (uint64_t)(&IrHashTable);
    __twr_v659 = 16ULL;
    __twr_v660 = __twr_v658 + __twr_v659;
    __twr_v661 = 4ULL;
    __twr_v662 = _mng_i657 << __twr_v661;
    __twr_v663 = __twr_v660 + __twr_v662;
    _mng_listhead664 = __twr_v663;
    __twr_v665 = 8ULL;
    __twr_v666 = _mng_listhead664 + __twr_v665;
    *(uint64_t*)(__twr_v666) = _mng_listhead664;
    *(uint64_t*)(_mng_listhead664) = _mng_listhead664;
    __twr_v667 = 1ULL;
    __twr_v668 = _mng_i657 + __twr_v667;
    _mng_i657 = __twr_v668;
    __twr_l74:;
    __twr_v669 = 97ULL;
    if (_mng_i657 < __twr_v669) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_l71:;
    _jkl_epilogue:;
}

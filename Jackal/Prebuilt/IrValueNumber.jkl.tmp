#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintHex(uint64_t _mng_num10);
extern void TlPrintCharacter(uint64_t _mng_byte11);
extern void TlInternalError(uint64_t _mng_str12, uint64_t _mng_err113, uint64_t _mng_err214, uint64_t _mng_err315);
extern void TlUserError(uint64_t _mng_str16, uint64_t _mng_err117, uint64_t _mng_err218, uint64_t _mng_err319);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr22);
extern uint64_t TlCompareString(uint64_t _mng_str123, uint64_t _mng_str224);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str125, uint64_t _mng_str226, uint64_t _mng_count27);
extern void TlCopyString(uint64_t _mng_dest28, uint64_t _mng_src29, uint64_t _mng_bufsize30);
extern uint64_t TlOpenSource(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename32, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle33);
extern uint64_t TlReadFile(uint64_t _mng_handle34, uint64_t _mng_bytes35, uint64_t _mng_buffer36);
extern uint64_t TlWriteFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable40);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable41);
extern void TlInsertHashTable(uint64_t _mng_hashtable42, uint64_t _mng_entry43, uint64_t _mng_key44);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entrysize49, uint64_t _mng_key50, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable51, uint64_t _mng_key52);
extern void TlRemoveHashTable(uint64_t _mng_entry53);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable54, uint64_t _mng_enumfunc55);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable56, uint64_t _mng_key57, uint64_t _mng_hash58);
extern uint64_t TlHashString(uint64_t _mng_str59);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable60, uint64_t _mng_outerscope61, uint64_t _mng_deletefunc62);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable65);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable66, uint64_t _mng_name67);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_entry69, uint64_t _mng_name70);
extern void TlRemoveSymbolTable(uint64_t _mng_entry71);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array73);
extern void TlInsertDynamicBuffer(uint64_t _mng_array74, uint64_t _mng_byte75);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_srcbuf77, uint64_t _mng_length78);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_number80, uint64_t _mng_base81);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array82);
extern uint64_t TlMatchPath(uint64_t _mng_path83, uint64_t _mng_pathset84, uint64_t _mng_resultingpath85, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath86, uint64_t _mng_destpath87);
extern uint64_t TlGetFileName(uint64_t _mng_path88);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path89);
extern uint64_t TlPathExists(uint64_t _mng_path90);
extern uint64_t TlIterateDirectory(uint64_t _mng_path91, uint64_t _mng_callback92, uint64_t _mng_context93);
extern uint64_t TlGetPathExtension(uint64_t _mng_path94);
extern uint64_t TlStatFile(uint64_t _mng_path95, uint64_t _mng_statrecord96);
extern uint64_t TlCreateDirectory(uint64_t _mng_path97);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path98);
extern void TlInitializeZone(uint64_t _mng_zone99, uint64_t _mng_blocksize100);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone101);
extern void TlFreeToZone(uint64_t _mng_zone102, uint64_t _mng_block103);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant104);
extern void TlPunchValue(uint64_t _mng_ptr105, uint64_t _mng_value106, uint64_t _mng_bytes107);
extern uint64_t TlTokenize(uint64_t _mng_buffer108, uint64_t _mng_tokenbuffer109, uint64_t _mng_bufsize110, uint64_t _mng_delimiter111);
extern uint64_t TlStringToNumber(uint64_t _mng_src112, uint64_t _mng_bufsize113, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler114);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine115, uint64_t _mng_arg116, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread117);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex118);
extern void TlReleaseMutex(uint64_t _mng_mutex119);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue120);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore121);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore122);
extern uint64_t TlSystem(uint64_t _mng_cmdline123);
extern uint64_t TlCurrentEpochTime();
extern void JklCompileProgram(uint64_t _mng_argc124, uint64_t _mng_argv125);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg126);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename127, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock128, uint64_t _mng_filepath129);
extern uint64_t LexLookupSection(uint64_t _mng_name130);
extern void LexPushSection(uint64_t _mng_section131);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope132);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg133);
extern void LexExpandMacro(uint64_t _mng_macro134, uint64_t _mng_token135);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream136, uint64_t _mng_macro137);
extern void LexUninitializeStream(uint64_t _mng_stream138);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream139);
extern void LexPushStream(uint64_t _mng_stream140);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream141, uint64_t _mng_fileblock142, uint64_t _mng_handle143);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock144, uint64_t _mng_handle145);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope146);
extern uint64_t LexResetScope(uint64_t _mng_scope147);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope148);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest149, uint64_t _mng_src150);
extern void LexGetToken(uint64_t _mng_token151);
extern void LexPutbackToken(uint64_t _mng_token152);
extern uint64_t LexMatchToken(uint64_t _mng_token153, uint64_t _mng_type154, uint64_t _mng_subtype155);
extern void LexStreamError(uint64_t _mng_str156, uint64_t _mng_err1157, uint64_t _mng_err2158, uint64_t _mng_err3159);
extern void LexTokenError(uint64_t _mng_token160, uint64_t _mng_str161, uint64_t _mng_err1162, uint64_t _mng_err2163, uint64_t _mng_err3164);
extern uint64_t LexCrunchNumber(uint64_t _mng_token165, uint64_t _mng_buffer166);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node167);
extern uint64_t IrAllocateStack(uint64_t _mng_func168, uint64_t _mng_bytes169);
extern uint64_t IrGetStackOffset(uint64_t _mng_func170, uint64_t _mng_symbol171);
extern void IrValueNumberVariable(uint64_t _mng_var172, uint64_t _mng_valueop173, uint64_t _mng_src1174, uint64_t _mng_src2175);
extern uint64_t IrFindValue(uint64_t _mng_op176, uint64_t _mng_src1177, uint64_t _mng_src2178);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads179, uint64_t _mng_symbol180);
extern void IrKillVariable(uint64_t _mng_var181);
extern void IrValueNumberConstantVariable(uint64_t _mng_var182, uint64_t _mng_constant183, uint64_t _mng_op184);
extern uint64_t IrFindConstant(uint64_t _mng_constant185, uint64_t _mng_op186);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var187);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[8];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst188, uint64_t _mng_value189);
extern void IrRemoveInstruction(uint64_t _mng_inst190);
uint64_t IrHashTable[196];
uint32_t IrNextValueNumber = 1ULL;
void IrValueNumberBarrier(uint64_t _mng_onlyloads191, uint64_t _mng_symbol192) {
    uint64_t __twr_v193;
    uint64_t _mng_head194;
    uint64_t __twr_v195;
    uint64_t _mng_listentry196;
    uint64_t __twr_v197;
    uint64_t _mng_nextentry198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t _mng_var201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t _mng_listentry216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t _mng_prev220;
    uint64_t __twr_v221;
    uint64_t _mng_next222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t _mng_listentry226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t _mng_prev229;
    uint64_t __twr_v230;
    uint64_t _mng_next231;
    uint64_t __twr_v232;
    __twr_v193 = (uint64_t)(&IrHashTable);
    _mng_head194 = __twr_v193;
    __twr_v195 = *(uint64_t*)(_mng_head194);
    _mng_listentry196 = __twr_v195;
    if (_mng_listentry196 == _mng_head194) { goto __twr_l3; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v197 = *(uint64_t*)(_mng_listentry196);
    _mng_nextentry198 = __twr_v197;
    __twr_v199 = 24ULL;
    __twr_v200 = _mng_listentry196 - __twr_v199;
    _mng_var201 = __twr_v200;
    if (!(_mng_onlyloads191)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v202 = 84ULL;
    __twr_v203 = _mng_var201 + __twr_v202;
    __twr_v204 = *(uint8_t*)(__twr_v203);
    if (!(__twr_v204)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    if (!(_mng_symbol192)) { goto __twr_l9; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v205 = 56ULL;
    __twr_v206 = _mng_var201 + __twr_v205;
    __twr_v207 = *(uint64_t*)(__twr_v206);
    if (__twr_v207 == _mng_symbol192) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v208 = 56ULL;
    __twr_v209 = _mng_var201 + __twr_v208;
    __twr_v210 = *(uint64_t*)(__twr_v209);
    if (__twr_v210) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v211 = 0ULL;
    __twr_v212 = 24ULL;
    __twr_v213 = _mng_var201 + __twr_v212;
    __twr_v214 = 80ULL;
    __twr_v215 = _mng_var201 + __twr_v214;
    *(uint32_t*)(__twr_v215) = __twr_v211;
    _mng_listentry216 = __twr_v213;
    __twr_v217 = 8ULL;
    __twr_v218 = _mng_listentry216 + __twr_v217;
    __twr_v219 = *(uint64_t*)(__twr_v218);
    _mng_prev220 = __twr_v219;
    __twr_v221 = *(uint64_t*)(_mng_listentry216);
    _mng_next222 = __twr_v221;
    *(uint64_t*)(_mng_prev220) = _mng_next222;
    __twr_v223 = _mng_next222 + __twr_v217;
    *(uint64_t*)(__twr_v223) = _mng_prev220;
    __twr_v224 = 40ULL;
    __twr_v225 = _mng_var201 + __twr_v224;
    _mng_listentry226 = __twr_v225;
    __twr_v227 = _mng_listentry226 + __twr_v217;
    __twr_v228 = *(uint64_t*)(__twr_v227);
    _mng_prev229 = __twr_v228;
    __twr_v230 = *(uint64_t*)(_mng_listentry226);
    _mng_next231 = __twr_v230;
    *(uint64_t*)(_mng_prev229) = _mng_next231;
    __twr_v232 = _mng_next231 + __twr_v217;
    *(uint64_t*)(__twr_v232) = _mng_prev229;
    __twr_l8:;
    __twr_l5:;
    _mng_listentry196 = _mng_nextentry198;
    __twr_l4:;
    if (_mng_listentry196 != _mng_head194) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void IrKillValueNumber(uint64_t _mng_value233) {
    uint64_t __twr_v234;
    uint64_t _mng_head235;
    uint64_t __twr_v236;
    uint64_t _mng_listentry237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t _mng_var240;
    uint64_t __twr_v241;
    uint64_t _mng_nextentry242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t _mng_listentry254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t _mng_prev258;
    uint64_t __twr_v259;
    uint64_t _mng_next260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t _mng_listentry264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t _mng_prev267;
    uint64_t __twr_v268;
    uint64_t _mng_next269;
    uint64_t __twr_v270;
    __twr_v234 = (uint64_t)(&IrHashTable);
    _mng_head235 = __twr_v234;
    __twr_v236 = *(uint64_t*)(_mng_head235);
    _mng_listentry237 = __twr_v236;
    if (_mng_listentry237 == _mng_head235) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v238 = 24ULL;
    __twr_v239 = _mng_listentry237 - __twr_v238;
    _mng_var240 = __twr_v239;
    __twr_v241 = *(uint64_t*)(_mng_listentry237);
    _mng_nextentry242 = __twr_v241;
    __twr_v243 = 72ULL;
    __twr_v244 = _mng_var240 + __twr_v243;
    __twr_v245 = *(uint32_t*)(__twr_v244);
    if (__twr_v245 == _mng_value233) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v246 = 76ULL;
    __twr_v247 = _mng_var240 + __twr_v246;
    __twr_v248 = *(uint32_t*)(__twr_v247);
    if (__twr_v248 != _mng_value233) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v249 = 0ULL;
    __twr_v250 = 24ULL;
    __twr_v251 = _mng_var240 + __twr_v250;
    __twr_v252 = 80ULL;
    __twr_v253 = _mng_var240 + __twr_v252;
    *(uint32_t*)(__twr_v253) = __twr_v249;
    _mng_listentry254 = __twr_v251;
    __twr_v255 = 8ULL;
    __twr_v256 = _mng_listentry254 + __twr_v255;
    __twr_v257 = *(uint64_t*)(__twr_v256);
    _mng_prev258 = __twr_v257;
    __twr_v259 = *(uint64_t*)(_mng_listentry254);
    _mng_next260 = __twr_v259;
    *(uint64_t*)(_mng_prev258) = _mng_next260;
    __twr_v261 = _mng_next260 + __twr_v255;
    *(uint64_t*)(__twr_v261) = _mng_prev258;
    __twr_v262 = 40ULL;
    __twr_v263 = _mng_var240 + __twr_v262;
    _mng_listentry264 = __twr_v263;
    __twr_v265 = _mng_listentry264 + __twr_v255;
    __twr_v266 = *(uint64_t*)(__twr_v265);
    _mng_prev267 = __twr_v266;
    __twr_v268 = *(uint64_t*)(_mng_listentry264);
    _mng_next269 = __twr_v268;
    *(uint64_t*)(_mng_prev267) = _mng_next269;
    __twr_v270 = _mng_next269 + __twr_v255;
    *(uint64_t*)(__twr_v270) = _mng_prev267;
    __twr_l16:;
    _mng_listentry237 = _mng_nextentry242;
    __twr_l15:;
    if (_mng_listentry237 != _mng_head235) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_l12:;
    _jkl_epilogue:;
}
void IrKillVariable(uint64_t _mng_var271) {
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t _mng_listentry281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_prev285;
    uint64_t __twr_v286;
    uint64_t _mng_next287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t _mng_listentry291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t _mng_prev294;
    uint64_t __twr_v295;
    uint64_t _mng_next296;
    uint64_t __twr_v297;
    __twr_v272 = (uint64_t)(&IrKillValueNumber);
    __twr_v273 = 80ULL;
    __twr_v274 = _mng_var271 + __twr_v273;
    __twr_v275 = *(uint32_t*)(__twr_v274);
    ((void (*)(uint64_t))__twr_v272)(__twr_v275);
    __twr_v276 = 85ULL;
    __twr_v277 = _mng_var271 + __twr_v276;
    __twr_v278 = *(uint8_t*)(__twr_v277);
    if (!(__twr_v278)) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v279 = 24ULL;
    __twr_v280 = _mng_var271 + __twr_v279;
    _mng_listentry281 = __twr_v280;
    __twr_v282 = 8ULL;
    __twr_v283 = _mng_listentry281 + __twr_v282;
    __twr_v284 = *(uint64_t*)(__twr_v283);
    _mng_prev285 = __twr_v284;
    __twr_v286 = *(uint64_t*)(_mng_listentry281);
    _mng_next287 = __twr_v286;
    *(uint64_t*)(_mng_prev285) = _mng_next287;
    __twr_v288 = _mng_next287 + __twr_v282;
    *(uint64_t*)(__twr_v288) = _mng_prev285;
    __twr_v289 = 40ULL;
    __twr_v290 = _mng_var271 + __twr_v289;
    _mng_listentry291 = __twr_v290;
    __twr_v292 = _mng_listentry291 + __twr_v282;
    __twr_v293 = *(uint64_t*)(__twr_v292);
    _mng_prev294 = __twr_v293;
    __twr_v295 = *(uint64_t*)(_mng_listentry291);
    _mng_next296 = __twr_v295;
    *(uint64_t*)(_mng_prev294) = _mng_next296;
    __twr_v297 = _mng_next296 + __twr_v282;
    *(uint64_t*)(__twr_v297) = _mng_prev294;
    __twr_l20:;
    __twr_l19:;
    _jkl_epilogue:;
}
void IrGiveOpaqueValueVariable(uint64_t _mng_var298) {
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t _mng_listentry306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t _mng_prev310;
    uint64_t __twr_v311;
    uint64_t _mng_next312;
    uint64_t __twr_v313;
    uint64_t _mng_listentry314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t _mng_prev317;
    uint64_t __twr_v318;
    uint64_t _mng_next319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    __twr_v299 = 85ULL;
    __twr_v300 = _mng_var298 + __twr_v299;
    __twr_v301 = *(uint8_t*)(__twr_v300);
    if (!(__twr_v301)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v302 = 24ULL;
    __twr_v303 = _mng_var298 + __twr_v302;
    __twr_v304 = 40ULL;
    __twr_v305 = _mng_var298 + __twr_v304;
    _mng_listentry306 = __twr_v305;
    __twr_v307 = 8ULL;
    __twr_v308 = _mng_listentry306 + __twr_v307;
    __twr_v309 = *(uint64_t*)(__twr_v308);
    _mng_prev310 = __twr_v309;
    __twr_v311 = *(uint64_t*)(_mng_listentry306);
    _mng_next312 = __twr_v311;
    *(uint64_t*)(_mng_prev310) = _mng_next312;
    __twr_v313 = _mng_next312 + __twr_v307;
    *(uint64_t*)(__twr_v313) = _mng_prev310;
    _mng_listentry314 = __twr_v303;
    __twr_v315 = _mng_listentry314 + __twr_v307;
    __twr_v316 = *(uint64_t*)(__twr_v315);
    _mng_prev317 = __twr_v316;
    __twr_v318 = *(uint64_t*)(_mng_listentry314);
    _mng_next319 = __twr_v318;
    *(uint64_t*)(_mng_prev317) = _mng_next319;
    __twr_v320 = _mng_next319 + __twr_v307;
    *(uint64_t*)(__twr_v320) = _mng_prev317;
    __twr_v321 = (uint64_t)(&IrKillValueNumber);
    __twr_v322 = 80ULL;
    __twr_v323 = _mng_var298 + __twr_v322;
    __twr_v324 = *(uint32_t*)(__twr_v323);
    ((void (*)(uint64_t))__twr_v321)(__twr_v324);
    __twr_l23:;
    __twr_v325 = 0ULL;
    __twr_v326 = 85ULL;
    __twr_v327 = _mng_var298 + __twr_v326;
    *(uint8_t*)(__twr_v327) = __twr_v325;
    __twr_v328 = (uint64_t)(&IrNextValueNumber);
    __twr_v329 = *(uint32_t*)(__twr_v328);
    __twr_v330 = 80ULL;
    __twr_v331 = _mng_var298 + __twr_v330;
    *(uint32_t*)(__twr_v331) = __twr_v329;
    __twr_v332 = 1ULL;
    __twr_v333 = *(uint32_t*)(__twr_v328);
    __twr_v334 = __twr_v333 + __twr_v332;
    *(uint32_t*)(__twr_v328) = __twr_v334;
    __twr_l22:;
    _jkl_epilogue:;
}
void IrValueNumberVariable(uint64_t _mng_var335, uint64_t _mng_valueop336, uint64_t _mng_src1337, uint64_t _mng_src2338) {
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t _mng_byload345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t _mng_byloadof349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t _mng_valuesrc1359;
    uint64_t _mng_valuesrc2360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t _mng_listentry379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t _mng_prev383;
    uint64_t __twr_v384;
    uint64_t _mng_next385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t _mng_listhead392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t _mng_listentry395;
    uint64_t __twr_v396;
    uint64_t _mng_first397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t _mng_vn403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t _mng_hash420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t _mng_listhead441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t _mng_listentry444;
    uint64_t __twr_v445;
    uint64_t _mng_first446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    __twr_v339 = 84ULL;
    __twr_v340 = _mng_var335 + __twr_v339;
    __twr_v341 = *(uint8_t*)(__twr_v340);
    __twr_v342 = _mng_src1337 + __twr_v339;
    __twr_v343 = *(uint8_t*)(__twr_v342);
    __twr_v344 = __twr_v341 | __twr_v343;
    _mng_byload345 = __twr_v344;
    __twr_v346 = 56ULL;
    __twr_v347 = _mng_var335 + __twr_v346;
    __twr_v348 = *(uint64_t*)(__twr_v347);
    _mng_byloadof349 = __twr_v348;
    if (_mng_byloadof349) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v350 = 56ULL;
    __twr_v351 = _mng_src1337 + __twr_v350;
    __twr_v352 = *(uint64_t*)(__twr_v351);
    _mng_byloadof349 = __twr_v352;
    goto __twr_l26;
    __twr_l28:;
    __twr_v353 = 56ULL;
    __twr_v354 = _mng_src1337 + __twr_v353;
    __twr_v355 = *(uint64_t*)(__twr_v354);
    if (!(__twr_v355)) { goto __twr_l26; } else { goto __twr_l29; }
    __twr_l29:;
    _mng_byloadof349 = 0ULL;
    __twr_l26:;
    __twr_v356 = 80ULL;
    __twr_v357 = _mng_src1337 + __twr_v356;
    __twr_v358 = *(uint32_t*)(__twr_v357);
    _mng_valuesrc1359 = __twr_v358;
    if (_mng_valuesrc1359) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    _mng_valuesrc2360 = 0ULL;
    if (!(_mng_src2338)) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v361 = 80ULL;
    __twr_v362 = _mng_src2338 + __twr_v361;
    __twr_v363 = *(uint32_t*)(__twr_v362);
    _mng_valuesrc2360 = __twr_v363;
    __twr_v364 = 84ULL;
    __twr_v365 = _mng_src2338 + __twr_v364;
    __twr_v366 = *(uint8_t*)(__twr_v365);
    __twr_v367 = _mng_byload345 | __twr_v366;
    _mng_byload345 = __twr_v367;
    if (_mng_byloadof349) { goto __twr_l36; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v368 = 56ULL;
    __twr_v369 = _mng_src2338 + __twr_v368;
    __twr_v370 = *(uint64_t*)(__twr_v369);
    _mng_byloadof349 = __twr_v370;
    goto __twr_l34;
    __twr_l36:;
    __twr_v371 = 56ULL;
    __twr_v372 = _mng_src2338 + __twr_v371;
    __twr_v373 = *(uint64_t*)(__twr_v372);
    if (!(__twr_v373)) { goto __twr_l34; } else { goto __twr_l37; }
    __twr_l37:;
    _mng_byloadof349 = 0ULL;
    __twr_l34:;
    if (_mng_valuesrc2360) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    goto _jkl_epilogue;
    __twr_l38:;
    __twr_l32:;
    __twr_v374 = 85ULL;
    __twr_v375 = _mng_var335 + __twr_v374;
    __twr_v376 = *(uint8_t*)(__twr_v375);
    if (!(__twr_v376)) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    __twr_v377 = 40ULL;
    __twr_v378 = _mng_var335 + __twr_v377;
    _mng_listentry379 = __twr_v378;
    __twr_v380 = 8ULL;
    __twr_v381 = _mng_listentry379 + __twr_v380;
    __twr_v382 = *(uint64_t*)(__twr_v381);
    _mng_prev383 = __twr_v382;
    __twr_v384 = *(uint64_t*)(_mng_listentry379);
    _mng_next385 = __twr_v384;
    *(uint64_t*)(_mng_prev383) = _mng_next385;
    __twr_v386 = _mng_next385 + __twr_v380;
    *(uint64_t*)(__twr_v386) = _mng_prev383;
    __twr_v387 = (uint64_t)(&IrKillValueNumber);
    __twr_v388 = 80ULL;
    __twr_v389 = _mng_var335 + __twr_v388;
    __twr_v390 = *(uint32_t*)(__twr_v389);
    ((void (*)(uint64_t))__twr_v387)(__twr_v390);
    goto __twr_l40;
    __twr_l42:;
    __twr_v391 = (uint64_t)(&IrHashTable);
    _mng_listhead392 = __twr_v391;
    __twr_v393 = 24ULL;
    __twr_v394 = _mng_var335 + __twr_v393;
    _mng_listentry395 = __twr_v394;
    __twr_v396 = *(uint64_t*)(_mng_listhead392);
    _mng_first397 = __twr_v396;
    *(uint64_t*)(_mng_listentry395) = _mng_first397;
    __twr_v398 = 8ULL;
    __twr_v399 = _mng_listentry395 + __twr_v398;
    *(uint64_t*)(__twr_v399) = _mng_listhead392;
    __twr_v400 = _mng_first397 + __twr_v398;
    *(uint64_t*)(__twr_v400) = __twr_v394;
    *(uint64_t*)(_mng_listhead392) = __twr_v394;
    __twr_l40:;
    __twr_v401 = (uint64_t)(&IrNextValueNumber);
    __twr_v402 = *(uint32_t*)(__twr_v401);
    _mng_vn403 = __twr_v402;
    __twr_v404 = 1ULL;
    __twr_v405 = __twr_v402 + __twr_v404;
    *(uint32_t*)(__twr_v401) = __twr_v405;
    __twr_v406 = 56ULL;
    __twr_v407 = 80ULL;
    __twr_v408 = _mng_var335 + __twr_v407;
    *(uint32_t*)(__twr_v408) = _mng_vn403;
    __twr_v409 = 84ULL;
    __twr_v410 = _mng_var335 + __twr_v409;
    *(uint8_t*)(__twr_v410) = _mng_byload345;
    __twr_v411 = _mng_var335 + __twr_v406;
    *(uint64_t*)(__twr_v411) = _mng_byloadof349;
    __twr_v412 = 72ULL;
    __twr_v413 = _mng_var335 + __twr_v412;
    *(uint32_t*)(__twr_v413) = _mng_valuesrc1359;
    __twr_v414 = 76ULL;
    __twr_v415 = _mng_var335 + __twr_v414;
    *(uint32_t*)(__twr_v415) = _mng_valuesrc2360;
    __twr_v416 = 85ULL;
    __twr_v417 = _mng_var335 + __twr_v416;
    *(uint8_t*)(__twr_v417) = _mng_valueop336;
    __twr_v418 = _mng_valuesrc1359 ^ _mng_valuesrc2360;
    __twr_v419 = __twr_v418 ^ _mng_valueop336;
    _mng_hash420 = __twr_v419;
    __twr_v421 = 7ULL;
    __twr_v422 = _mng_hash420 >> __twr_v421;
    __twr_v423 = _mng_hash420 ^ __twr_v422;
    _mng_hash420 = __twr_v423;
    __twr_v424 = 14ULL;
    __twr_v425 = _mng_hash420 >> __twr_v424;
    __twr_v426 = _mng_hash420 ^ __twr_v425;
    _mng_hash420 = __twr_v426;
    __twr_v427 = 21ULL;
    __twr_v428 = _mng_hash420 >> __twr_v427;
    __twr_v429 = _mng_hash420 ^ __twr_v428;
    _mng_hash420 = __twr_v429;
    __twr_v430 = 28ULL;
    __twr_v431 = _mng_hash420 >> __twr_v430;
    __twr_v432 = _mng_hash420 ^ __twr_v431;
    _mng_hash420 = __twr_v432;
    __twr_v433 = 97ULL;
    __twr_v434 = _mng_hash420 % __twr_v433;
    _mng_hash420 = __twr_v434;
    __twr_v435 = (uint64_t)(&IrHashTable);
    __twr_v436 = 16ULL;
    __twr_v437 = __twr_v435 + __twr_v436;
    __twr_v438 = 4ULL;
    __twr_v439 = _mng_hash420 << __twr_v438;
    __twr_v440 = __twr_v437 + __twr_v439;
    _mng_listhead441 = __twr_v440;
    __twr_v442 = 40ULL;
    __twr_v443 = _mng_var335 + __twr_v442;
    _mng_listentry444 = __twr_v443;
    __twr_v445 = *(uint64_t*)(_mng_listhead441);
    _mng_first446 = __twr_v445;
    *(uint64_t*)(_mng_listentry444) = _mng_first446;
    __twr_v447 = 8ULL;
    __twr_v448 = _mng_listentry444 + __twr_v447;
    *(uint64_t*)(__twr_v448) = _mng_listhead441;
    __twr_v449 = _mng_first446 + __twr_v447;
    *(uint64_t*)(__twr_v449) = __twr_v443;
    *(uint64_t*)(_mng_listhead441) = __twr_v443;
    __twr_l25:;
    _jkl_epilogue:;
}
void IrValueNumberConstantVariable(uint64_t _mng_var450, uint64_t _mng_constant451, uint64_t _mng_op452) {
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t _mng_listentry458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t _mng_prev462;
    uint64_t __twr_v463;
    uint64_t _mng_next464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t _mng_listhead471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t _mng_listentry474;
    uint64_t __twr_v475;
    uint64_t _mng_first476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t _mng_vn482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t _mng_hash492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t _mng_listhead513;
    uint64_t __twr_v514;
    uint64_t _mng_listentry515;
    uint64_t __twr_v516;
    uint64_t _mng_first517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    __twr_v453 = 85ULL;
    __twr_v454 = _mng_var450 + __twr_v453;
    __twr_v455 = *(uint8_t*)(__twr_v454);
    if (!(__twr_v455)) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v456 = 40ULL;
    __twr_v457 = _mng_var450 + __twr_v456;
    _mng_listentry458 = __twr_v457;
    __twr_v459 = 8ULL;
    __twr_v460 = _mng_listentry458 + __twr_v459;
    __twr_v461 = *(uint64_t*)(__twr_v460);
    _mng_prev462 = __twr_v461;
    __twr_v463 = *(uint64_t*)(_mng_listentry458);
    _mng_next464 = __twr_v463;
    *(uint64_t*)(_mng_prev462) = _mng_next464;
    __twr_v465 = _mng_next464 + __twr_v459;
    *(uint64_t*)(__twr_v465) = _mng_prev462;
    __twr_v466 = (uint64_t)(&IrKillValueNumber);
    __twr_v467 = 80ULL;
    __twr_v468 = _mng_var450 + __twr_v467;
    __twr_v469 = *(uint32_t*)(__twr_v468);
    ((void (*)(uint64_t))__twr_v466)(__twr_v469);
    goto __twr_l44;
    __twr_l46:;
    __twr_v470 = (uint64_t)(&IrHashTable);
    _mng_listhead471 = __twr_v470;
    __twr_v472 = 24ULL;
    __twr_v473 = _mng_var450 + __twr_v472;
    _mng_listentry474 = __twr_v473;
    __twr_v475 = *(uint64_t*)(_mng_listhead471);
    _mng_first476 = __twr_v475;
    *(uint64_t*)(_mng_listentry474) = _mng_first476;
    __twr_v477 = 8ULL;
    __twr_v478 = _mng_listentry474 + __twr_v477;
    *(uint64_t*)(__twr_v478) = _mng_listhead471;
    __twr_v479 = _mng_first476 + __twr_v477;
    *(uint64_t*)(__twr_v479) = __twr_v473;
    *(uint64_t*)(_mng_listhead471) = __twr_v473;
    __twr_l44:;
    __twr_v480 = (uint64_t)(&IrNextValueNumber);
    __twr_v481 = *(uint32_t*)(__twr_v480);
    _mng_vn482 = __twr_v481;
    __twr_v483 = 1ULL;
    __twr_v484 = __twr_v481 + __twr_v483;
    *(uint32_t*)(__twr_v480) = __twr_v484;
    __twr_v485 = 80ULL;
    __twr_v486 = _mng_var450 + __twr_v485;
    *(uint32_t*)(__twr_v486) = _mng_vn482;
    __twr_v487 = 40ULL;
    __twr_v488 = 64ULL;
    __twr_v489 = _mng_var450 + __twr_v488;
    *(uint64_t*)(__twr_v489) = _mng_constant451;
    __twr_v490 = 85ULL;
    __twr_v491 = _mng_var450 + __twr_v490;
    *(uint8_t*)(__twr_v491) = _mng_op452;
    _mng_hash492 = _mng_constant451;
    __twr_v493 = 7ULL;
    __twr_v494 = _mng_hash492 >> __twr_v493;
    __twr_v495 = _mng_hash492 ^ __twr_v494;
    _mng_hash492 = __twr_v495;
    __twr_v496 = 14ULL;
    __twr_v497 = _mng_hash492 >> __twr_v496;
    __twr_v498 = _mng_hash492 ^ __twr_v497;
    _mng_hash492 = __twr_v498;
    __twr_v499 = 21ULL;
    __twr_v500 = _mng_hash492 >> __twr_v499;
    __twr_v501 = _mng_hash492 ^ __twr_v500;
    _mng_hash492 = __twr_v501;
    __twr_v502 = 28ULL;
    __twr_v503 = _mng_hash492 >> __twr_v502;
    __twr_v504 = _mng_hash492 ^ __twr_v503;
    _mng_hash492 = __twr_v504;
    __twr_v505 = 97ULL;
    __twr_v506 = _mng_hash492 % __twr_v505;
    _mng_hash492 = __twr_v506;
    __twr_v507 = (uint64_t)(&IrHashTable);
    __twr_v508 = 16ULL;
    __twr_v509 = __twr_v507 + __twr_v508;
    __twr_v510 = 4ULL;
    __twr_v511 = _mng_hash492 << __twr_v510;
    __twr_v512 = __twr_v509 + __twr_v511;
    _mng_listhead513 = __twr_v512;
    __twr_v514 = _mng_var450 + __twr_v487;
    _mng_listentry515 = __twr_v514;
    __twr_v516 = *(uint64_t*)(_mng_listhead513);
    _mng_first517 = __twr_v516;
    *(uint64_t*)(_mng_listentry515) = _mng_first517;
    __twr_v518 = 8ULL;
    __twr_v519 = _mng_listentry515 + __twr_v518;
    *(uint64_t*)(__twr_v519) = _mng_listhead513;
    __twr_v520 = _mng_first517 + __twr_v518;
    *(uint64_t*)(__twr_v520) = __twr_v514;
    *(uint64_t*)(_mng_listhead513) = __twr_v514;
    __twr_l43:;
    _jkl_epilogue:;
}
uint64_t IrFindValue(uint64_t _mng_op521, uint64_t _mng_src1522, uint64_t _mng_src2523) {
    uint64_t _jkl_retv;
    uint64_t _mng_valuesrc1524;
    uint64_t _mng_valuesrc2525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t _mng_hash534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t _mng_head555;
    uint64_t __twr_v556;
    uint64_t _mng_listentry557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t _mng_var560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    _mng_valuesrc1524 = 0ULL;
    _mng_valuesrc2525 = 0ULL;
    if (!(_mng_src1522)) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v526 = 80ULL;
    __twr_v527 = _mng_src1522 + __twr_v526;
    __twr_v528 = *(uint32_t*)(__twr_v527);
    _mng_valuesrc1524 = __twr_v528;
    __twr_l48:;
    if (!(_mng_src2523)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v529 = 80ULL;
    __twr_v530 = _mng_src2523 + __twr_v529;
    __twr_v531 = *(uint32_t*)(__twr_v530);
    _mng_valuesrc2525 = __twr_v531;
    __twr_l50:;
    __twr_v532 = _mng_valuesrc1524 ^ _mng_valuesrc2525;
    __twr_v533 = __twr_v532 ^ _mng_op521;
    _mng_hash534 = __twr_v533;
    __twr_v535 = 7ULL;
    __twr_v536 = _mng_hash534 >> __twr_v535;
    __twr_v537 = _mng_hash534 ^ __twr_v536;
    _mng_hash534 = __twr_v537;
    __twr_v538 = 14ULL;
    __twr_v539 = _mng_hash534 >> __twr_v538;
    __twr_v540 = _mng_hash534 ^ __twr_v539;
    _mng_hash534 = __twr_v540;
    __twr_v541 = 21ULL;
    __twr_v542 = _mng_hash534 >> __twr_v541;
    __twr_v543 = _mng_hash534 ^ __twr_v542;
    _mng_hash534 = __twr_v543;
    __twr_v544 = 28ULL;
    __twr_v545 = _mng_hash534 >> __twr_v544;
    __twr_v546 = _mng_hash534 ^ __twr_v545;
    _mng_hash534 = __twr_v546;
    __twr_v547 = 97ULL;
    __twr_v548 = _mng_hash534 % __twr_v547;
    _mng_hash534 = __twr_v548;
    __twr_v549 = (uint64_t)(&IrHashTable);
    __twr_v550 = 16ULL;
    __twr_v551 = __twr_v549 + __twr_v550;
    __twr_v552 = 4ULL;
    __twr_v553 = _mng_hash534 << __twr_v552;
    __twr_v554 = __twr_v551 + __twr_v553;
    _mng_head555 = __twr_v554;
    __twr_v556 = *(uint64_t*)(_mng_head555);
    _mng_listentry557 = __twr_v556;
    if (_mng_listentry557 == _mng_head555) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v558 = 40ULL;
    __twr_v559 = _mng_listentry557 - __twr_v558;
    _mng_var560 = __twr_v559;
    __twr_v561 = 85ULL;
    __twr_v562 = _mng_var560 + __twr_v561;
    __twr_v563 = *(uint8_t*)(__twr_v562);
    if (__twr_v563 != _mng_op521) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v564 = 72ULL;
    __twr_v565 = _mng_var560 + __twr_v564;
    __twr_v566 = *(uint32_t*)(__twr_v565);
    if (__twr_v566 != _mng_valuesrc1524) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v567 = 76ULL;
    __twr_v568 = _mng_var560 + __twr_v567;
    __twr_v569 = *(uint32_t*)(__twr_v568);
    if (__twr_v569 != _mng_valuesrc2525) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v570 = 0ULL;
    __twr_v571 = 92ULL;
    __twr_v572 = _mng_var560 + __twr_v571;
    *(uint8_t*)(__twr_v572) = __twr_v570;
    _jkl_retv = _mng_var560;
    goto _jkl_epilogue;
    goto __twr_l57;
    __twr_l59:;
    __twr_v573 = (uint64_t)(&IrCommutativity);
    __twr_v574 = __twr_v573 + _mng_op521;
    __twr_v575 = *(uint8_t*)(__twr_v574);
    if (!(__twr_v575)) { goto __twr_l57; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v576 = 72ULL;
    __twr_v577 = _mng_var560 + __twr_v576;
    __twr_v578 = *(uint32_t*)(__twr_v577);
    if (__twr_v578 != _mng_valuesrc2525) { goto __twr_l57; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v579 = 76ULL;
    __twr_v580 = _mng_var560 + __twr_v579;
    __twr_v581 = *(uint32_t*)(__twr_v580);
    if (__twr_v581 != _mng_valuesrc1524) { goto __twr_l57; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v582 = 0ULL;
    __twr_v583 = 92ULL;
    __twr_v584 = _mng_var560 + __twr_v583;
    *(uint8_t*)(__twr_v584) = __twr_v582;
    _jkl_retv = _mng_var560;
    goto _jkl_epilogue;
    __twr_l57:;
    __twr_l55:;
    __twr_v585 = *(uint64_t*)(_mng_listentry557);
    _mng_listentry557 = __twr_v585;
    __twr_l54:;
    if (_mng_listentry557 != _mng_head555) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v586 = 0ULL;
    _jkl_retv = __twr_v586;
    goto _jkl_epilogue;
    __twr_l47:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t IrFindConstant(uint64_t _mng_constant587, uint64_t _mng_op588) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t _mng_head610;
    uint64_t __twr_v611;
    uint64_t _mng_listentry612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t _mng_var615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    _mng_hash589 = _mng_constant587;
    __twr_v590 = 7ULL;
    __twr_v591 = _mng_hash589 >> __twr_v590;
    __twr_v592 = _mng_hash589 ^ __twr_v591;
    _mng_hash589 = __twr_v592;
    __twr_v593 = 14ULL;
    __twr_v594 = _mng_hash589 >> __twr_v593;
    __twr_v595 = _mng_hash589 ^ __twr_v594;
    _mng_hash589 = __twr_v595;
    __twr_v596 = 21ULL;
    __twr_v597 = _mng_hash589 >> __twr_v596;
    __twr_v598 = _mng_hash589 ^ __twr_v597;
    _mng_hash589 = __twr_v598;
    __twr_v599 = 28ULL;
    __twr_v600 = _mng_hash589 >> __twr_v599;
    __twr_v601 = _mng_hash589 ^ __twr_v600;
    _mng_hash589 = __twr_v601;
    __twr_v602 = 97ULL;
    __twr_v603 = _mng_hash589 % __twr_v602;
    _mng_hash589 = __twr_v603;
    __twr_v604 = (uint64_t)(&IrHashTable);
    __twr_v605 = 16ULL;
    __twr_v606 = __twr_v604 + __twr_v605;
    __twr_v607 = 4ULL;
    __twr_v608 = _mng_hash589 << __twr_v607;
    __twr_v609 = __twr_v606 + __twr_v608;
    _mng_head610 = __twr_v609;
    __twr_v611 = *(uint64_t*)(_mng_head610);
    _mng_listentry612 = __twr_v611;
    if (_mng_listentry612 == _mng_head610) { goto __twr_l66; } else { goto __twr_l65; }
    __twr_l65:;
    __twr_v613 = 40ULL;
    __twr_v614 = _mng_listentry612 - __twr_v613;
    _mng_var615 = __twr_v614;
    __twr_v616 = 85ULL;
    __twr_v617 = _mng_var615 + __twr_v616;
    __twr_v618 = *(uint8_t*)(__twr_v617);
    if (__twr_v618 != _mng_op588) { goto __twr_l68; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v619 = 64ULL;
    __twr_v620 = _mng_var615 + __twr_v619;
    __twr_v621 = *(uint64_t*)(__twr_v620);
    if (__twr_v621 != _mng_constant587) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    __twr_v622 = 0ULL;
    __twr_v623 = 92ULL;
    __twr_v624 = _mng_var615 + __twr_v623;
    *(uint8_t*)(__twr_v624) = __twr_v622;
    _jkl_retv = _mng_var615;
    goto _jkl_epilogue;
    __twr_l68:;
    __twr_v625 = *(uint64_t*)(_mng_listentry612);
    _mng_listentry612 = __twr_v625;
    __twr_l67:;
    if (_mng_listentry612 != _mng_head610) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v626 = 0ULL;
    _jkl_retv = __twr_v626;
    goto _jkl_epilogue;
    __twr_l64:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void IrInitializeValueNumber() {
    uint64_t __twr_v627;
    uint64_t _mng_listhead628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t _mng_i631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t _mng_listhead638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    __twr_v627 = (uint64_t)(&IrHashTable);
    _mng_listhead628 = __twr_v627;
    __twr_v629 = 8ULL;
    __twr_v630 = _mng_listhead628 + __twr_v629;
    *(uint64_t*)(__twr_v630) = _mng_listhead628;
    *(uint64_t*)(_mng_listhead628) = _mng_listhead628;
    _mng_i631 = 0ULL;
    __twr_l72:;
    __twr_v632 = (uint64_t)(&IrHashTable);
    __twr_v633 = 16ULL;
    __twr_v634 = __twr_v632 + __twr_v633;
    __twr_v635 = 4ULL;
    __twr_v636 = _mng_i631 << __twr_v635;
    __twr_v637 = __twr_v634 + __twr_v636;
    _mng_listhead638 = __twr_v637;
    __twr_v639 = 8ULL;
    __twr_v640 = _mng_listhead638 + __twr_v639;
    *(uint64_t*)(__twr_v640) = _mng_listhead638;
    *(uint64_t*)(_mng_listhead638) = _mng_listhead638;
    __twr_v641 = 1ULL;
    __twr_v642 = _mng_i631 + __twr_v641;
    _mng_i631 = __twr_v642;
    __twr_l74:;
    __twr_v643 = 97ULL;
    if (_mng_i631 < __twr_v643) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_l71:;
    _jkl_epilogue:;
}

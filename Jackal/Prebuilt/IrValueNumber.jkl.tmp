#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern void JklCompileProgram(uint64_t _mng_argc123, uint64_t _mng_argv124);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg125);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename126, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock127, uint64_t _mng_filepath128);
extern uint64_t LexLookupSection(uint64_t _mng_name129);
extern void LexPushSection(uint64_t _mng_section130);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope131);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg132);
extern void LexExpandMacro(uint64_t _mng_macro133, uint64_t _mng_token134);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream135, uint64_t _mng_macro136);
extern void LexUninitializeStream(uint64_t _mng_stream137);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream138);
extern void LexPushStream(uint64_t _mng_stream139);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream140, uint64_t _mng_fileblock141, uint64_t _mng_handle142);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock143, uint64_t _mng_handle144);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope145);
extern uint64_t LexResetScope(uint64_t _mng_scope146);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope147);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest148, uint64_t _mng_src149);
extern void LexGetToken(uint64_t _mng_token150);
extern void LexPutbackToken(uint64_t _mng_token151);
extern uint64_t LexMatchToken(uint64_t _mng_token152, uint64_t _mng_type153, uint64_t _mng_subtype154);
extern void LexStreamError(uint64_t _mng_str155, uint64_t _mng_err1156, uint64_t _mng_err2157, uint64_t _mng_err3158);
extern void LexTokenError(uint64_t _mng_token159, uint64_t _mng_str160, uint64_t _mng_err1161, uint64_t _mng_err2162, uint64_t _mng_err3163);
extern uint64_t LexCrunchNumber(uint64_t _mng_token164, uint64_t _mng_buffer165);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node166);
extern uint64_t IrAllocateStack(uint64_t _mng_func167, uint64_t _mng_bytes168);
extern uint64_t IrGetStackOffset(uint64_t _mng_func169, uint64_t _mng_symbol170);
extern void IrValueNumberVariable(uint64_t _mng_var171, uint64_t _mng_valueop172, uint64_t _mng_src1173, uint64_t _mng_src2174);
extern uint64_t IrFindValue(uint64_t _mng_op175, uint64_t _mng_src1176, uint64_t _mng_src2177);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads178, uint64_t _mng_symbol179);
extern void IrKillVariable(uint64_t _mng_var180);
extern void IrValueNumberConstantVariable(uint64_t _mng_var181, uint64_t _mng_constant182, uint64_t _mng_op183);
extern uint64_t IrFindConstant(uint64_t _mng_constant184, uint64_t _mng_op185);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var186);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[7];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst187, uint64_t _mng_value188);
extern void IrRemoveInstruction(uint64_t _mng_inst189);
uint64_t IrHashTable[196];
uint32_t IrNextValueNumber = 1ULL;
void IrValueNumberBarrier(uint64_t _mng_onlyloads190, uint64_t _mng_symbol191) {
    uint64_t __twr_v192;
    uint64_t _mng_head193;
    uint64_t __twr_v194;
    uint64_t _mng_listentry195;
    uint64_t __twr_v196;
    uint64_t _mng_nextentry197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t _mng_var200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t _mng_listentry215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t _mng_prev219;
    uint64_t __twr_v220;
    uint64_t _mng_next221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t _mng_listentry225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t _mng_prev228;
    uint64_t __twr_v229;
    uint64_t _mng_next230;
    uint64_t __twr_v231;
    __twr_v192 = (uint64_t)(&IrHashTable);
    _mng_head193 = __twr_v192;
    __twr_v194 = *(uint64_t*)(_mng_head193);
    _mng_listentry195 = __twr_v194;
    if (_mng_listentry195 == _mng_head193) { goto __twr_l3; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v196 = *(uint64_t*)(_mng_listentry195);
    _mng_nextentry197 = __twr_v196;
    __twr_v198 = 24ULL;
    __twr_v199 = _mng_listentry195 - __twr_v198;
    _mng_var200 = __twr_v199;
    if (!(_mng_onlyloads190)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v201 = 84ULL;
    __twr_v202 = _mng_var200 + __twr_v201;
    __twr_v203 = *(uint8_t*)(__twr_v202);
    if (!(__twr_v203)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    if (!(_mng_symbol191)) { goto __twr_l9; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v204 = 56ULL;
    __twr_v205 = _mng_var200 + __twr_v204;
    __twr_v206 = *(uint64_t*)(__twr_v205);
    if (__twr_v206 == _mng_symbol191) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v207 = 56ULL;
    __twr_v208 = _mng_var200 + __twr_v207;
    __twr_v209 = *(uint64_t*)(__twr_v208);
    if (__twr_v209) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v210 = 0ULL;
    __twr_v211 = 24ULL;
    __twr_v212 = _mng_var200 + __twr_v211;
    __twr_v213 = 80ULL;
    __twr_v214 = _mng_var200 + __twr_v213;
    *(uint32_t*)(__twr_v214) = __twr_v210;
    _mng_listentry215 = __twr_v212;
    __twr_v216 = 8ULL;
    __twr_v217 = _mng_listentry215 + __twr_v216;
    __twr_v218 = *(uint64_t*)(__twr_v217);
    _mng_prev219 = __twr_v218;
    __twr_v220 = *(uint64_t*)(_mng_listentry215);
    _mng_next221 = __twr_v220;
    *(uint64_t*)(_mng_prev219) = _mng_next221;
    __twr_v222 = _mng_next221 + __twr_v216;
    *(uint64_t*)(__twr_v222) = _mng_prev219;
    __twr_v223 = 40ULL;
    __twr_v224 = _mng_var200 + __twr_v223;
    _mng_listentry225 = __twr_v224;
    __twr_v226 = _mng_listentry225 + __twr_v216;
    __twr_v227 = *(uint64_t*)(__twr_v226);
    _mng_prev228 = __twr_v227;
    __twr_v229 = *(uint64_t*)(_mng_listentry225);
    _mng_next230 = __twr_v229;
    *(uint64_t*)(_mng_prev228) = _mng_next230;
    __twr_v231 = _mng_next230 + __twr_v216;
    *(uint64_t*)(__twr_v231) = _mng_prev228;
    __twr_l8:;
    __twr_l5:;
    _mng_listentry195 = _mng_nextentry197;
    __twr_l4:;
    if (_mng_listentry195 != _mng_head193) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void IrKillValueNumber(uint64_t _mng_value232) {
    uint64_t __twr_v233;
    uint64_t _mng_head234;
    uint64_t __twr_v235;
    uint64_t _mng_listentry236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t _mng_var239;
    uint64_t __twr_v240;
    uint64_t _mng_nextentry241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t _mng_listentry253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t _mng_prev257;
    uint64_t __twr_v258;
    uint64_t _mng_next259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t _mng_listentry263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t _mng_prev266;
    uint64_t __twr_v267;
    uint64_t _mng_next268;
    uint64_t __twr_v269;
    __twr_v233 = (uint64_t)(&IrHashTable);
    _mng_head234 = __twr_v233;
    __twr_v235 = *(uint64_t*)(_mng_head234);
    _mng_listentry236 = __twr_v235;
    if (_mng_listentry236 == _mng_head234) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v237 = 24ULL;
    __twr_v238 = _mng_listentry236 - __twr_v237;
    _mng_var239 = __twr_v238;
    __twr_v240 = *(uint64_t*)(_mng_listentry236);
    _mng_nextentry241 = __twr_v240;
    __twr_v242 = 72ULL;
    __twr_v243 = _mng_var239 + __twr_v242;
    __twr_v244 = *(uint32_t*)(__twr_v243);
    if (__twr_v244 == _mng_value232) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v245 = 76ULL;
    __twr_v246 = _mng_var239 + __twr_v245;
    __twr_v247 = *(uint32_t*)(__twr_v246);
    if (__twr_v247 != _mng_value232) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v248 = 0ULL;
    __twr_v249 = 24ULL;
    __twr_v250 = _mng_var239 + __twr_v249;
    __twr_v251 = 80ULL;
    __twr_v252 = _mng_var239 + __twr_v251;
    *(uint32_t*)(__twr_v252) = __twr_v248;
    _mng_listentry253 = __twr_v250;
    __twr_v254 = 8ULL;
    __twr_v255 = _mng_listentry253 + __twr_v254;
    __twr_v256 = *(uint64_t*)(__twr_v255);
    _mng_prev257 = __twr_v256;
    __twr_v258 = *(uint64_t*)(_mng_listentry253);
    _mng_next259 = __twr_v258;
    *(uint64_t*)(_mng_prev257) = _mng_next259;
    __twr_v260 = _mng_next259 + __twr_v254;
    *(uint64_t*)(__twr_v260) = _mng_prev257;
    __twr_v261 = 40ULL;
    __twr_v262 = _mng_var239 + __twr_v261;
    _mng_listentry263 = __twr_v262;
    __twr_v264 = _mng_listentry263 + __twr_v254;
    __twr_v265 = *(uint64_t*)(__twr_v264);
    _mng_prev266 = __twr_v265;
    __twr_v267 = *(uint64_t*)(_mng_listentry263);
    _mng_next268 = __twr_v267;
    *(uint64_t*)(_mng_prev266) = _mng_next268;
    __twr_v269 = _mng_next268 + __twr_v254;
    *(uint64_t*)(__twr_v269) = _mng_prev266;
    __twr_l16:;
    _mng_listentry236 = _mng_nextentry241;
    __twr_l15:;
    if (_mng_listentry236 != _mng_head234) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_l12:;
    _jkl_epilogue:;
}
void IrKillVariable(uint64_t _mng_var270) {
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t _mng_listentry280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t _mng_prev284;
    uint64_t __twr_v285;
    uint64_t _mng_next286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t _mng_listentry290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t _mng_prev293;
    uint64_t __twr_v294;
    uint64_t _mng_next295;
    uint64_t __twr_v296;
    __twr_v271 = (uint64_t)(&IrKillValueNumber);
    __twr_v272 = 80ULL;
    __twr_v273 = _mng_var270 + __twr_v272;
    __twr_v274 = *(uint32_t*)(__twr_v273);
    ((void (*)(uint64_t))__twr_v271)(__twr_v274);
    __twr_v275 = 85ULL;
    __twr_v276 = _mng_var270 + __twr_v275;
    __twr_v277 = *(uint8_t*)(__twr_v276);
    if (!(__twr_v277)) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v278 = 24ULL;
    __twr_v279 = _mng_var270 + __twr_v278;
    _mng_listentry280 = __twr_v279;
    __twr_v281 = 8ULL;
    __twr_v282 = _mng_listentry280 + __twr_v281;
    __twr_v283 = *(uint64_t*)(__twr_v282);
    _mng_prev284 = __twr_v283;
    __twr_v285 = *(uint64_t*)(_mng_listentry280);
    _mng_next286 = __twr_v285;
    *(uint64_t*)(_mng_prev284) = _mng_next286;
    __twr_v287 = _mng_next286 + __twr_v281;
    *(uint64_t*)(__twr_v287) = _mng_prev284;
    __twr_v288 = 40ULL;
    __twr_v289 = _mng_var270 + __twr_v288;
    _mng_listentry290 = __twr_v289;
    __twr_v291 = _mng_listentry290 + __twr_v281;
    __twr_v292 = *(uint64_t*)(__twr_v291);
    _mng_prev293 = __twr_v292;
    __twr_v294 = *(uint64_t*)(_mng_listentry290);
    _mng_next295 = __twr_v294;
    *(uint64_t*)(_mng_prev293) = _mng_next295;
    __twr_v296 = _mng_next295 + __twr_v281;
    *(uint64_t*)(__twr_v296) = _mng_prev293;
    __twr_l20:;
    __twr_l19:;
    _jkl_epilogue:;
}
void IrGiveOpaqueValueVariable(uint64_t _mng_var297) {
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t _mng_listentry305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t _mng_prev309;
    uint64_t __twr_v310;
    uint64_t _mng_next311;
    uint64_t __twr_v312;
    uint64_t _mng_listentry313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t _mng_prev316;
    uint64_t __twr_v317;
    uint64_t _mng_next318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    __twr_v298 = 85ULL;
    __twr_v299 = _mng_var297 + __twr_v298;
    __twr_v300 = *(uint8_t*)(__twr_v299);
    if (!(__twr_v300)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v301 = 24ULL;
    __twr_v302 = _mng_var297 + __twr_v301;
    __twr_v303 = 40ULL;
    __twr_v304 = _mng_var297 + __twr_v303;
    _mng_listentry305 = __twr_v304;
    __twr_v306 = 8ULL;
    __twr_v307 = _mng_listentry305 + __twr_v306;
    __twr_v308 = *(uint64_t*)(__twr_v307);
    _mng_prev309 = __twr_v308;
    __twr_v310 = *(uint64_t*)(_mng_listentry305);
    _mng_next311 = __twr_v310;
    *(uint64_t*)(_mng_prev309) = _mng_next311;
    __twr_v312 = _mng_next311 + __twr_v306;
    *(uint64_t*)(__twr_v312) = _mng_prev309;
    _mng_listentry313 = __twr_v302;
    __twr_v314 = _mng_listentry313 + __twr_v306;
    __twr_v315 = *(uint64_t*)(__twr_v314);
    _mng_prev316 = __twr_v315;
    __twr_v317 = *(uint64_t*)(_mng_listentry313);
    _mng_next318 = __twr_v317;
    *(uint64_t*)(_mng_prev316) = _mng_next318;
    __twr_v319 = _mng_next318 + __twr_v306;
    *(uint64_t*)(__twr_v319) = _mng_prev316;
    __twr_v320 = (uint64_t)(&IrKillValueNumber);
    __twr_v321 = 80ULL;
    __twr_v322 = _mng_var297 + __twr_v321;
    __twr_v323 = *(uint32_t*)(__twr_v322);
    ((void (*)(uint64_t))__twr_v320)(__twr_v323);
    __twr_l23:;
    __twr_v324 = 0ULL;
    __twr_v325 = 85ULL;
    __twr_v326 = _mng_var297 + __twr_v325;
    *(uint8_t*)(__twr_v326) = __twr_v324;
    __twr_v327 = (uint64_t)(&IrNextValueNumber);
    __twr_v328 = *(uint32_t*)(__twr_v327);
    __twr_v329 = 80ULL;
    __twr_v330 = _mng_var297 + __twr_v329;
    *(uint32_t*)(__twr_v330) = __twr_v328;
    __twr_v331 = 1ULL;
    __twr_v332 = *(uint32_t*)(__twr_v327);
    __twr_v333 = __twr_v332 + __twr_v331;
    *(uint32_t*)(__twr_v327) = __twr_v333;
    __twr_l22:;
    _jkl_epilogue:;
}
void IrValueNumberVariable(uint64_t _mng_var334, uint64_t _mng_valueop335, uint64_t _mng_src1336, uint64_t _mng_src2337) {
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t _mng_byload344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t _mng_byloadof348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t _mng_valuesrc1358;
    uint64_t _mng_valuesrc2359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t _mng_listentry378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t _mng_prev382;
    uint64_t __twr_v383;
    uint64_t _mng_next384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t _mng_listhead391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t _mng_listentry394;
    uint64_t __twr_v395;
    uint64_t _mng_first396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t _mng_vn402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t _mng_hash419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t _mng_listhead440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t _mng_listentry443;
    uint64_t __twr_v444;
    uint64_t _mng_first445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    __twr_v338 = 84ULL;
    __twr_v339 = _mng_var334 + __twr_v338;
    __twr_v340 = *(uint8_t*)(__twr_v339);
    __twr_v341 = _mng_src1336 + __twr_v338;
    __twr_v342 = *(uint8_t*)(__twr_v341);
    __twr_v343 = __twr_v340 | __twr_v342;
    _mng_byload344 = __twr_v343;
    __twr_v345 = 56ULL;
    __twr_v346 = _mng_var334 + __twr_v345;
    __twr_v347 = *(uint64_t*)(__twr_v346);
    _mng_byloadof348 = __twr_v347;
    if (_mng_byloadof348) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v349 = 56ULL;
    __twr_v350 = _mng_src1336 + __twr_v349;
    __twr_v351 = *(uint64_t*)(__twr_v350);
    _mng_byloadof348 = __twr_v351;
    goto __twr_l26;
    __twr_l28:;
    __twr_v352 = 56ULL;
    __twr_v353 = _mng_src1336 + __twr_v352;
    __twr_v354 = *(uint64_t*)(__twr_v353);
    if (!(__twr_v354)) { goto __twr_l26; } else { goto __twr_l29; }
    __twr_l29:;
    _mng_byloadof348 = 0ULL;
    __twr_l26:;
    __twr_v355 = 80ULL;
    __twr_v356 = _mng_src1336 + __twr_v355;
    __twr_v357 = *(uint32_t*)(__twr_v356);
    _mng_valuesrc1358 = __twr_v357;
    if (_mng_valuesrc1358) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    _mng_valuesrc2359 = 0ULL;
    if (!(_mng_src2337)) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v360 = 80ULL;
    __twr_v361 = _mng_src2337 + __twr_v360;
    __twr_v362 = *(uint32_t*)(__twr_v361);
    _mng_valuesrc2359 = __twr_v362;
    __twr_v363 = 84ULL;
    __twr_v364 = _mng_src2337 + __twr_v363;
    __twr_v365 = *(uint8_t*)(__twr_v364);
    __twr_v366 = _mng_byload344 | __twr_v365;
    _mng_byload344 = __twr_v366;
    if (_mng_byloadof348) { goto __twr_l36; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v367 = 56ULL;
    __twr_v368 = _mng_src2337 + __twr_v367;
    __twr_v369 = *(uint64_t*)(__twr_v368);
    _mng_byloadof348 = __twr_v369;
    goto __twr_l34;
    __twr_l36:;
    __twr_v370 = 56ULL;
    __twr_v371 = _mng_src2337 + __twr_v370;
    __twr_v372 = *(uint64_t*)(__twr_v371);
    if (!(__twr_v372)) { goto __twr_l34; } else { goto __twr_l37; }
    __twr_l37:;
    _mng_byloadof348 = 0ULL;
    __twr_l34:;
    if (_mng_valuesrc2359) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    goto _jkl_epilogue;
    __twr_l38:;
    __twr_l32:;
    __twr_v373 = 85ULL;
    __twr_v374 = _mng_var334 + __twr_v373;
    __twr_v375 = *(uint8_t*)(__twr_v374);
    if (!(__twr_v375)) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    __twr_v376 = 40ULL;
    __twr_v377 = _mng_var334 + __twr_v376;
    _mng_listentry378 = __twr_v377;
    __twr_v379 = 8ULL;
    __twr_v380 = _mng_listentry378 + __twr_v379;
    __twr_v381 = *(uint64_t*)(__twr_v380);
    _mng_prev382 = __twr_v381;
    __twr_v383 = *(uint64_t*)(_mng_listentry378);
    _mng_next384 = __twr_v383;
    *(uint64_t*)(_mng_prev382) = _mng_next384;
    __twr_v385 = _mng_next384 + __twr_v379;
    *(uint64_t*)(__twr_v385) = _mng_prev382;
    __twr_v386 = (uint64_t)(&IrKillValueNumber);
    __twr_v387 = 80ULL;
    __twr_v388 = _mng_var334 + __twr_v387;
    __twr_v389 = *(uint32_t*)(__twr_v388);
    ((void (*)(uint64_t))__twr_v386)(__twr_v389);
    goto __twr_l40;
    __twr_l42:;
    __twr_v390 = (uint64_t)(&IrHashTable);
    _mng_listhead391 = __twr_v390;
    __twr_v392 = 24ULL;
    __twr_v393 = _mng_var334 + __twr_v392;
    _mng_listentry394 = __twr_v393;
    __twr_v395 = *(uint64_t*)(_mng_listhead391);
    _mng_first396 = __twr_v395;
    *(uint64_t*)(_mng_listentry394) = _mng_first396;
    __twr_v397 = 8ULL;
    __twr_v398 = _mng_listentry394 + __twr_v397;
    *(uint64_t*)(__twr_v398) = _mng_listhead391;
    __twr_v399 = _mng_first396 + __twr_v397;
    *(uint64_t*)(__twr_v399) = __twr_v393;
    *(uint64_t*)(_mng_listhead391) = __twr_v393;
    __twr_l40:;
    __twr_v400 = (uint64_t)(&IrNextValueNumber);
    __twr_v401 = *(uint32_t*)(__twr_v400);
    _mng_vn402 = __twr_v401;
    __twr_v403 = 1ULL;
    __twr_v404 = __twr_v401 + __twr_v403;
    *(uint32_t*)(__twr_v400) = __twr_v404;
    __twr_v405 = 56ULL;
    __twr_v406 = 80ULL;
    __twr_v407 = _mng_var334 + __twr_v406;
    *(uint32_t*)(__twr_v407) = _mng_vn402;
    __twr_v408 = 84ULL;
    __twr_v409 = _mng_var334 + __twr_v408;
    *(uint8_t*)(__twr_v409) = _mng_byload344;
    __twr_v410 = _mng_var334 + __twr_v405;
    *(uint64_t*)(__twr_v410) = _mng_byloadof348;
    __twr_v411 = 72ULL;
    __twr_v412 = _mng_var334 + __twr_v411;
    *(uint32_t*)(__twr_v412) = _mng_valuesrc1358;
    __twr_v413 = 76ULL;
    __twr_v414 = _mng_var334 + __twr_v413;
    *(uint32_t*)(__twr_v414) = _mng_valuesrc2359;
    __twr_v415 = 85ULL;
    __twr_v416 = _mng_var334 + __twr_v415;
    *(uint8_t*)(__twr_v416) = _mng_valueop335;
    __twr_v417 = _mng_valuesrc1358 ^ _mng_valuesrc2359;
    __twr_v418 = __twr_v417 ^ _mng_valueop335;
    _mng_hash419 = __twr_v418;
    __twr_v420 = 7ULL;
    __twr_v421 = _mng_hash419 >> __twr_v420;
    __twr_v422 = _mng_hash419 ^ __twr_v421;
    _mng_hash419 = __twr_v422;
    __twr_v423 = 14ULL;
    __twr_v424 = _mng_hash419 >> __twr_v423;
    __twr_v425 = _mng_hash419 ^ __twr_v424;
    _mng_hash419 = __twr_v425;
    __twr_v426 = 21ULL;
    __twr_v427 = _mng_hash419 >> __twr_v426;
    __twr_v428 = _mng_hash419 ^ __twr_v427;
    _mng_hash419 = __twr_v428;
    __twr_v429 = 28ULL;
    __twr_v430 = _mng_hash419 >> __twr_v429;
    __twr_v431 = _mng_hash419 ^ __twr_v430;
    _mng_hash419 = __twr_v431;
    __twr_v432 = 97ULL;
    __twr_v433 = _mng_hash419 % __twr_v432;
    _mng_hash419 = __twr_v433;
    __twr_v434 = (uint64_t)(&IrHashTable);
    __twr_v435 = 16ULL;
    __twr_v436 = __twr_v434 + __twr_v435;
    __twr_v437 = 4ULL;
    __twr_v438 = _mng_hash419 << __twr_v437;
    __twr_v439 = __twr_v436 + __twr_v438;
    _mng_listhead440 = __twr_v439;
    __twr_v441 = 40ULL;
    __twr_v442 = _mng_var334 + __twr_v441;
    _mng_listentry443 = __twr_v442;
    __twr_v444 = *(uint64_t*)(_mng_listhead440);
    _mng_first445 = __twr_v444;
    *(uint64_t*)(_mng_listentry443) = _mng_first445;
    __twr_v446 = 8ULL;
    __twr_v447 = _mng_listentry443 + __twr_v446;
    *(uint64_t*)(__twr_v447) = _mng_listhead440;
    __twr_v448 = _mng_first445 + __twr_v446;
    *(uint64_t*)(__twr_v448) = __twr_v442;
    *(uint64_t*)(_mng_listhead440) = __twr_v442;
    __twr_l25:;
    _jkl_epilogue:;
}
void IrValueNumberConstantVariable(uint64_t _mng_var449, uint64_t _mng_constant450, uint64_t _mng_op451) {
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t _mng_listentry457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t _mng_prev461;
    uint64_t __twr_v462;
    uint64_t _mng_next463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t _mng_listhead470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t _mng_listentry473;
    uint64_t __twr_v474;
    uint64_t _mng_first475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t _mng_vn481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t _mng_hash491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t _mng_listhead512;
    uint64_t __twr_v513;
    uint64_t _mng_listentry514;
    uint64_t __twr_v515;
    uint64_t _mng_first516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    __twr_v452 = 85ULL;
    __twr_v453 = _mng_var449 + __twr_v452;
    __twr_v454 = *(uint8_t*)(__twr_v453);
    if (!(__twr_v454)) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v455 = 40ULL;
    __twr_v456 = _mng_var449 + __twr_v455;
    _mng_listentry457 = __twr_v456;
    __twr_v458 = 8ULL;
    __twr_v459 = _mng_listentry457 + __twr_v458;
    __twr_v460 = *(uint64_t*)(__twr_v459);
    _mng_prev461 = __twr_v460;
    __twr_v462 = *(uint64_t*)(_mng_listentry457);
    _mng_next463 = __twr_v462;
    *(uint64_t*)(_mng_prev461) = _mng_next463;
    __twr_v464 = _mng_next463 + __twr_v458;
    *(uint64_t*)(__twr_v464) = _mng_prev461;
    __twr_v465 = (uint64_t)(&IrKillValueNumber);
    __twr_v466 = 80ULL;
    __twr_v467 = _mng_var449 + __twr_v466;
    __twr_v468 = *(uint32_t*)(__twr_v467);
    ((void (*)(uint64_t))__twr_v465)(__twr_v468);
    goto __twr_l44;
    __twr_l46:;
    __twr_v469 = (uint64_t)(&IrHashTable);
    _mng_listhead470 = __twr_v469;
    __twr_v471 = 24ULL;
    __twr_v472 = _mng_var449 + __twr_v471;
    _mng_listentry473 = __twr_v472;
    __twr_v474 = *(uint64_t*)(_mng_listhead470);
    _mng_first475 = __twr_v474;
    *(uint64_t*)(_mng_listentry473) = _mng_first475;
    __twr_v476 = 8ULL;
    __twr_v477 = _mng_listentry473 + __twr_v476;
    *(uint64_t*)(__twr_v477) = _mng_listhead470;
    __twr_v478 = _mng_first475 + __twr_v476;
    *(uint64_t*)(__twr_v478) = __twr_v472;
    *(uint64_t*)(_mng_listhead470) = __twr_v472;
    __twr_l44:;
    __twr_v479 = (uint64_t)(&IrNextValueNumber);
    __twr_v480 = *(uint32_t*)(__twr_v479);
    _mng_vn481 = __twr_v480;
    __twr_v482 = 1ULL;
    __twr_v483 = __twr_v480 + __twr_v482;
    *(uint32_t*)(__twr_v479) = __twr_v483;
    __twr_v484 = 80ULL;
    __twr_v485 = _mng_var449 + __twr_v484;
    *(uint32_t*)(__twr_v485) = _mng_vn481;
    __twr_v486 = 40ULL;
    __twr_v487 = 64ULL;
    __twr_v488 = _mng_var449 + __twr_v487;
    *(uint64_t*)(__twr_v488) = _mng_constant450;
    __twr_v489 = 85ULL;
    __twr_v490 = _mng_var449 + __twr_v489;
    *(uint8_t*)(__twr_v490) = _mng_op451;
    _mng_hash491 = _mng_constant450;
    __twr_v492 = 7ULL;
    __twr_v493 = _mng_hash491 >> __twr_v492;
    __twr_v494 = _mng_hash491 ^ __twr_v493;
    _mng_hash491 = __twr_v494;
    __twr_v495 = 14ULL;
    __twr_v496 = _mng_hash491 >> __twr_v495;
    __twr_v497 = _mng_hash491 ^ __twr_v496;
    _mng_hash491 = __twr_v497;
    __twr_v498 = 21ULL;
    __twr_v499 = _mng_hash491 >> __twr_v498;
    __twr_v500 = _mng_hash491 ^ __twr_v499;
    _mng_hash491 = __twr_v500;
    __twr_v501 = 28ULL;
    __twr_v502 = _mng_hash491 >> __twr_v501;
    __twr_v503 = _mng_hash491 ^ __twr_v502;
    _mng_hash491 = __twr_v503;
    __twr_v504 = 97ULL;
    __twr_v505 = _mng_hash491 % __twr_v504;
    _mng_hash491 = __twr_v505;
    __twr_v506 = (uint64_t)(&IrHashTable);
    __twr_v507 = 16ULL;
    __twr_v508 = __twr_v506 + __twr_v507;
    __twr_v509 = 4ULL;
    __twr_v510 = _mng_hash491 << __twr_v509;
    __twr_v511 = __twr_v508 + __twr_v510;
    _mng_listhead512 = __twr_v511;
    __twr_v513 = _mng_var449 + __twr_v486;
    _mng_listentry514 = __twr_v513;
    __twr_v515 = *(uint64_t*)(_mng_listhead512);
    _mng_first516 = __twr_v515;
    *(uint64_t*)(_mng_listentry514) = _mng_first516;
    __twr_v517 = 8ULL;
    __twr_v518 = _mng_listentry514 + __twr_v517;
    *(uint64_t*)(__twr_v518) = _mng_listhead512;
    __twr_v519 = _mng_first516 + __twr_v517;
    *(uint64_t*)(__twr_v519) = __twr_v513;
    *(uint64_t*)(_mng_listhead512) = __twr_v513;
    __twr_l43:;
    _jkl_epilogue:;
}
uint64_t IrFindValue(uint64_t _mng_op520, uint64_t _mng_src1521, uint64_t _mng_src2522) {
    uint64_t _jkl_retv;
    uint64_t _mng_valuesrc1523;
    uint64_t _mng_valuesrc2524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t _mng_hash533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t _mng_head554;
    uint64_t __twr_v555;
    uint64_t _mng_listentry556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t _mng_var559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    _mng_valuesrc1523 = 0ULL;
    _mng_valuesrc2524 = 0ULL;
    if (!(_mng_src1521)) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v525 = 80ULL;
    __twr_v526 = _mng_src1521 + __twr_v525;
    __twr_v527 = *(uint32_t*)(__twr_v526);
    _mng_valuesrc1523 = __twr_v527;
    __twr_l48:;
    if (!(_mng_src2522)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v528 = 80ULL;
    __twr_v529 = _mng_src2522 + __twr_v528;
    __twr_v530 = *(uint32_t*)(__twr_v529);
    _mng_valuesrc2524 = __twr_v530;
    __twr_l50:;
    __twr_v531 = _mng_valuesrc1523 ^ _mng_valuesrc2524;
    __twr_v532 = __twr_v531 ^ _mng_op520;
    _mng_hash533 = __twr_v532;
    __twr_v534 = 7ULL;
    __twr_v535 = _mng_hash533 >> __twr_v534;
    __twr_v536 = _mng_hash533 ^ __twr_v535;
    _mng_hash533 = __twr_v536;
    __twr_v537 = 14ULL;
    __twr_v538 = _mng_hash533 >> __twr_v537;
    __twr_v539 = _mng_hash533 ^ __twr_v538;
    _mng_hash533 = __twr_v539;
    __twr_v540 = 21ULL;
    __twr_v541 = _mng_hash533 >> __twr_v540;
    __twr_v542 = _mng_hash533 ^ __twr_v541;
    _mng_hash533 = __twr_v542;
    __twr_v543 = 28ULL;
    __twr_v544 = _mng_hash533 >> __twr_v543;
    __twr_v545 = _mng_hash533 ^ __twr_v544;
    _mng_hash533 = __twr_v545;
    __twr_v546 = 97ULL;
    __twr_v547 = _mng_hash533 % __twr_v546;
    _mng_hash533 = __twr_v547;
    __twr_v548 = (uint64_t)(&IrHashTable);
    __twr_v549 = 16ULL;
    __twr_v550 = __twr_v548 + __twr_v549;
    __twr_v551 = 4ULL;
    __twr_v552 = _mng_hash533 << __twr_v551;
    __twr_v553 = __twr_v550 + __twr_v552;
    _mng_head554 = __twr_v553;
    __twr_v555 = *(uint64_t*)(_mng_head554);
    _mng_listentry556 = __twr_v555;
    if (_mng_listentry556 == _mng_head554) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v557 = 40ULL;
    __twr_v558 = _mng_listentry556 - __twr_v557;
    _mng_var559 = __twr_v558;
    __twr_v560 = 85ULL;
    __twr_v561 = _mng_var559 + __twr_v560;
    __twr_v562 = *(uint8_t*)(__twr_v561);
    if (__twr_v562 != _mng_op520) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v563 = 72ULL;
    __twr_v564 = _mng_var559 + __twr_v563;
    __twr_v565 = *(uint32_t*)(__twr_v564);
    if (__twr_v565 != _mng_valuesrc1523) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v566 = 76ULL;
    __twr_v567 = _mng_var559 + __twr_v566;
    __twr_v568 = *(uint32_t*)(__twr_v567);
    if (__twr_v568 != _mng_valuesrc2524) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v569 = 0ULL;
    __twr_v570 = 92ULL;
    __twr_v571 = _mng_var559 + __twr_v570;
    *(uint8_t*)(__twr_v571) = __twr_v569;
    _jkl_retv = _mng_var559;
    goto _jkl_epilogue;
    goto __twr_l57;
    __twr_l59:;
    __twr_v572 = (uint64_t)(&IrCommutativity);
    __twr_v573 = __twr_v572 + _mng_op520;
    __twr_v574 = *(uint8_t*)(__twr_v573);
    if (!(__twr_v574)) { goto __twr_l57; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v575 = 72ULL;
    __twr_v576 = _mng_var559 + __twr_v575;
    __twr_v577 = *(uint32_t*)(__twr_v576);
    if (__twr_v577 != _mng_valuesrc2524) { goto __twr_l57; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v578 = 76ULL;
    __twr_v579 = _mng_var559 + __twr_v578;
    __twr_v580 = *(uint32_t*)(__twr_v579);
    if (__twr_v580 != _mng_valuesrc1523) { goto __twr_l57; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v581 = 0ULL;
    __twr_v582 = 92ULL;
    __twr_v583 = _mng_var559 + __twr_v582;
    *(uint8_t*)(__twr_v583) = __twr_v581;
    _jkl_retv = _mng_var559;
    goto _jkl_epilogue;
    __twr_l57:;
    __twr_l55:;
    __twr_v584 = *(uint64_t*)(_mng_listentry556);
    _mng_listentry556 = __twr_v584;
    __twr_l54:;
    if (_mng_listentry556 != _mng_head554) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v585 = 0ULL;
    _jkl_retv = __twr_v585;
    goto _jkl_epilogue;
    __twr_l47:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t IrFindConstant(uint64_t _mng_constant586, uint64_t _mng_op587) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t _mng_head609;
    uint64_t __twr_v610;
    uint64_t _mng_listentry611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t _mng_var614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    _mng_hash588 = _mng_constant586;
    __twr_v589 = 7ULL;
    __twr_v590 = _mng_hash588 >> __twr_v589;
    __twr_v591 = _mng_hash588 ^ __twr_v590;
    _mng_hash588 = __twr_v591;
    __twr_v592 = 14ULL;
    __twr_v593 = _mng_hash588 >> __twr_v592;
    __twr_v594 = _mng_hash588 ^ __twr_v593;
    _mng_hash588 = __twr_v594;
    __twr_v595 = 21ULL;
    __twr_v596 = _mng_hash588 >> __twr_v595;
    __twr_v597 = _mng_hash588 ^ __twr_v596;
    _mng_hash588 = __twr_v597;
    __twr_v598 = 28ULL;
    __twr_v599 = _mng_hash588 >> __twr_v598;
    __twr_v600 = _mng_hash588 ^ __twr_v599;
    _mng_hash588 = __twr_v600;
    __twr_v601 = 97ULL;
    __twr_v602 = _mng_hash588 % __twr_v601;
    _mng_hash588 = __twr_v602;
    __twr_v603 = (uint64_t)(&IrHashTable);
    __twr_v604 = 16ULL;
    __twr_v605 = __twr_v603 + __twr_v604;
    __twr_v606 = 4ULL;
    __twr_v607 = _mng_hash588 << __twr_v606;
    __twr_v608 = __twr_v605 + __twr_v607;
    _mng_head609 = __twr_v608;
    __twr_v610 = *(uint64_t*)(_mng_head609);
    _mng_listentry611 = __twr_v610;
    if (_mng_listentry611 == _mng_head609) { goto __twr_l66; } else { goto __twr_l65; }
    __twr_l65:;
    __twr_v612 = 40ULL;
    __twr_v613 = _mng_listentry611 - __twr_v612;
    _mng_var614 = __twr_v613;
    __twr_v615 = 85ULL;
    __twr_v616 = _mng_var614 + __twr_v615;
    __twr_v617 = *(uint8_t*)(__twr_v616);
    if (__twr_v617 != _mng_op587) { goto __twr_l68; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v618 = 64ULL;
    __twr_v619 = _mng_var614 + __twr_v618;
    __twr_v620 = *(uint64_t*)(__twr_v619);
    if (__twr_v620 != _mng_constant586) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    __twr_v621 = 0ULL;
    __twr_v622 = 92ULL;
    __twr_v623 = _mng_var614 + __twr_v622;
    *(uint8_t*)(__twr_v623) = __twr_v621;
    _jkl_retv = _mng_var614;
    goto _jkl_epilogue;
    __twr_l68:;
    __twr_v624 = *(uint64_t*)(_mng_listentry611);
    _mng_listentry611 = __twr_v624;
    __twr_l67:;
    if (_mng_listentry611 != _mng_head609) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v625 = 0ULL;
    _jkl_retv = __twr_v625;
    goto _jkl_epilogue;
    __twr_l64:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void IrInitializeValueNumber() {
    uint64_t __twr_v626;
    uint64_t _mng_listhead627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t _mng_i630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t _mng_listhead637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    __twr_v626 = (uint64_t)(&IrHashTable);
    _mng_listhead627 = __twr_v626;
    __twr_v628 = 8ULL;
    __twr_v629 = _mng_listhead627 + __twr_v628;
    *(uint64_t*)(__twr_v629) = _mng_listhead627;
    *(uint64_t*)(_mng_listhead627) = _mng_listhead627;
    _mng_i630 = 0ULL;
    __twr_l72:;
    __twr_v631 = (uint64_t)(&IrHashTable);
    __twr_v632 = 16ULL;
    __twr_v633 = __twr_v631 + __twr_v632;
    __twr_v634 = 4ULL;
    __twr_v635 = _mng_i630 << __twr_v634;
    __twr_v636 = __twr_v633 + __twr_v635;
    _mng_listhead637 = __twr_v636;
    __twr_v638 = 8ULL;
    __twr_v639 = _mng_listhead637 + __twr_v638;
    *(uint64_t*)(__twr_v639) = _mng_listhead637;
    *(uint64_t*)(_mng_listhead637) = _mng_listhead637;
    __twr_v640 = 1ULL;
    __twr_v641 = _mng_i630 + __twr_v640;
    _mng_i630 = __twr_v641;
    __twr_l74:;
    __twr_v642 = 97ULL;
    if (_mng_i630 < __twr_v642) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_l71:;
    _jkl_epilogue:;
}

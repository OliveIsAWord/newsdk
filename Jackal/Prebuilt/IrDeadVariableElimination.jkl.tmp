#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern void JklCompileProgram(uint64_t _mng_argc123, uint64_t _mng_argv124);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg125);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename126, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock127, uint64_t _mng_filepath128);
extern uint64_t LexLookupSection(uint64_t _mng_name129);
extern void LexPushSection(uint64_t _mng_section130);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope131);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg132);
extern void LexExpandMacro(uint64_t _mng_macro133, uint64_t _mng_token134);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream135, uint64_t _mng_macro136);
extern void LexUninitializeStream(uint64_t _mng_stream137);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream138);
extern void LexPushStream(uint64_t _mng_stream139);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream140, uint64_t _mng_fileblock141, uint64_t _mng_handle142);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock143, uint64_t _mng_handle144);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope145);
extern uint64_t LexResetScope(uint64_t _mng_scope146);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope147);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest148, uint64_t _mng_src149);
extern void LexGetToken(uint64_t _mng_token150);
extern void LexPutbackToken(uint64_t _mng_token151);
extern uint64_t LexMatchToken(uint64_t _mng_token152, uint64_t _mng_type153, uint64_t _mng_subtype154);
extern void LexStreamError(uint64_t _mng_str155, uint64_t _mng_err1156, uint64_t _mng_err2157, uint64_t _mng_err3158);
extern void LexTokenError(uint64_t _mng_token159, uint64_t _mng_str160, uint64_t _mng_err1161, uint64_t _mng_err2162, uint64_t _mng_err3163);
extern uint64_t LexCrunchNumber(uint64_t _mng_token164, uint64_t _mng_buffer165);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node166);
extern uint64_t IrAllocateStack(uint64_t _mng_func167, uint64_t _mng_bytes168);
extern uint64_t IrGetStackOffset(uint64_t _mng_func169, uint64_t _mng_symbol170);
extern void IrValueNumberVariable(uint64_t _mng_var171, uint64_t _mng_valueop172, uint64_t _mng_src1173, uint64_t _mng_src2174);
extern uint64_t IrFindValue(uint64_t _mng_op175, uint64_t _mng_src1176, uint64_t _mng_src2177);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads178, uint64_t _mng_symbol179);
extern void IrKillVariable(uint64_t _mng_var180);
extern void IrValueNumberConstantVariable(uint64_t _mng_var181, uint64_t _mng_constant182, uint64_t _mng_op183);
extern uint64_t IrFindConstant(uint64_t _mng_constant184, uint64_t _mng_op185);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var186);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[7];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst187, uint64_t _mng_value188);
extern void IrRemoveInstruction(uint64_t _mng_inst189);
uint64_t IrDeadVariableListHead[2];
uint64_t IrDeadLocalCount = 0ULL;
void IrEliminateDeadInstruction(uint64_t _mng_inst190) {
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_src1195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t _mng_src2199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t _mng_listhead207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t _mng_listentry210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t _mng_last214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t _mng_listhead223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t _mng_listentry226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t _mng_last230;
    uint64_t __twr_v231;
    __twr_v191 = (uint64_t)(&IrRemoveInstruction);
    ((void (*)(uint64_t))__twr_v191)(_mng_inst190);
    __twr_v192 = 56ULL;
    __twr_v193 = _mng_inst190 + __twr_v192;
    __twr_v194 = *(uint64_t*)(__twr_v193);
    _mng_src1195 = __twr_v194;
    __twr_v196 = 64ULL;
    __twr_v197 = _mng_inst190 + __twr_v196;
    __twr_v198 = *(uint64_t*)(__twr_v197);
    _mng_src2199 = __twr_v198;
    if (!(_mng_src1195)) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v200 = 1ULL;
    __twr_v201 = 48ULL;
    __twr_v202 = _mng_src1195 + __twr_v201;
    __twr_v203 = *(uint32_t*)(__twr_v202);
    __twr_v204 = __twr_v203 - __twr_v200;
    *(uint32_t*)(__twr_v202) = __twr_v204;
    __twr_v205 = *(uint32_t*)(__twr_v202);
    if (__twr_v205) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v206 = (uint64_t)(&IrDeadVariableListHead);
    _mng_listhead207 = __twr_v206;
    __twr_v208 = 24ULL;
    __twr_v209 = _mng_src1195 + __twr_v208;
    _mng_listentry210 = __twr_v209;
    __twr_v211 = 8ULL;
    __twr_v212 = _mng_listhead207 + __twr_v211;
    __twr_v213 = *(uint64_t*)(__twr_v212);
    _mng_last214 = __twr_v213;
    __twr_v215 = _mng_listentry210 + __twr_v211;
    *(uint64_t*)(__twr_v215) = _mng_last214;
    *(uint64_t*)(_mng_listentry210) = _mng_listhead207;
    *(uint64_t*)(_mng_last214) = _mng_listentry210;
    *(uint64_t*)(__twr_v212) = _mng_listentry210;
    __twr_l4:;
    __twr_l2:;
    if (!(_mng_src2199)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v216 = 1ULL;
    __twr_v217 = 48ULL;
    __twr_v218 = _mng_src2199 + __twr_v217;
    __twr_v219 = *(uint32_t*)(__twr_v218);
    __twr_v220 = __twr_v219 - __twr_v216;
    *(uint32_t*)(__twr_v218) = __twr_v220;
    __twr_v221 = *(uint32_t*)(__twr_v218);
    if (__twr_v221) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v222 = (uint64_t)(&IrDeadVariableListHead);
    _mng_listhead223 = __twr_v222;
    __twr_v224 = 24ULL;
    __twr_v225 = _mng_src2199 + __twr_v224;
    _mng_listentry226 = __twr_v225;
    __twr_v227 = 8ULL;
    __twr_v228 = _mng_listhead223 + __twr_v227;
    __twr_v229 = *(uint64_t*)(__twr_v228);
    _mng_last230 = __twr_v229;
    __twr_v231 = _mng_listentry226 + __twr_v227;
    *(uint64_t*)(__twr_v231) = _mng_last230;
    *(uint64_t*)(_mng_listentry226) = _mng_listhead223;
    *(uint64_t*)(_mng_last230) = _mng_listentry226;
    *(uint64_t*)(__twr_v228) = _mng_listentry226;
    __twr_l8:;
    __twr_l6:;
    __twr_l1:;
    _jkl_epilogue:;
}
void IrEliminateDeadVariable(uint64_t _mng_var232) {
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t _mng_definedbyinst236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t _mng_inst246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    __twr_v233 = 8ULL;
    __twr_v234 = _mng_var232 + __twr_v233;
    __twr_v235 = *(uint64_t*)(__twr_v234);
    _mng_definedbyinst236 = __twr_v235;
    if (!(_mng_definedbyinst236)) { goto __twr_l13; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v237 = 88ULL;
    __twr_v238 = _mng_definedbyinst236 + __twr_v237;
    __twr_v239 = *(uint8_t*)(__twr_v238);
    __twr_v240 = 25ULL;
    if (__twr_v239 != __twr_v240) { goto __twr_l14; } else { goto __twr_l15; }
    __twr_l15:;
    goto _jkl_epilogue;
    __twr_l14:;
    __twr_v241 = (uint64_t)(&IrEliminateDeadInstruction);
    ((void (*)(uint64_t))__twr_v241)(_mng_definedbyinst236);
    goto __twr_l11;
    __twr_l13:;
    __twr_v242 = *(uint64_t*)(_mng_var232);
    if (!(__twr_v242)) { goto __twr_l11; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v243 = 40ULL;
    __twr_v244 = _mng_var232 + __twr_v243;
    __twr_v245 = *(uint64_t*)(__twr_v244);
    _mng_inst246 = __twr_v245;
    if (!(_mng_inst246)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v247 = (uint64_t)(&IrEliminateDeadInstruction);
    ((void (*)(uint64_t))__twr_v247)(_mng_inst246);
    __twr_v248 = 72ULL;
    __twr_v249 = _mng_inst246 + __twr_v248;
    __twr_v250 = *(uint64_t*)(__twr_v249);
    _mng_inst246 = __twr_v250;
    __twr_l19:;
    if (_mng_inst246) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_l11:;
    __twr_l10:;
    _jkl_epilogue:;
}
void IrUndeadifyVariable(uint64_t _mng_var251) {
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t _mng_listentry265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t _mng_prev269;
    uint64_t __twr_v270;
    uint64_t _mng_next271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    __twr_v252 = 95ULL;
    __twr_v253 = _mng_var251 + __twr_v252;
    __twr_v254 = *(uint8_t*)(__twr_v253);
    if (__twr_v254) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v255 = 1ULL;
    __twr_v256 = 95ULL;
    __twr_v257 = _mng_var251 + __twr_v256;
    *(uint8_t*)(__twr_v257) = __twr_v255;
    __twr_v258 = 48ULL;
    __twr_v259 = _mng_var251 + __twr_v258;
    *(uint32_t*)(__twr_v259) = __twr_v255;
    goto __twr_l21;
    __twr_l23:;
    __twr_v260 = 48ULL;
    __twr_v261 = _mng_var251 + __twr_v260;
    __twr_v262 = *(uint32_t*)(__twr_v261);
    if (__twr_v262) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v263 = 24ULL;
    __twr_v264 = _mng_var251 + __twr_v263;
    _mng_listentry265 = __twr_v264;
    __twr_v266 = 8ULL;
    __twr_v267 = _mng_listentry265 + __twr_v266;
    __twr_v268 = *(uint64_t*)(__twr_v267);
    _mng_prev269 = __twr_v268;
    __twr_v270 = *(uint64_t*)(_mng_listentry265);
    _mng_next271 = __twr_v270;
    *(uint64_t*)(_mng_prev269) = _mng_next271;
    __twr_v272 = _mng_next271 + __twr_v266;
    *(uint64_t*)(__twr_v272) = _mng_prev269;
    __twr_l24:;
    __twr_v273 = 1ULL;
    __twr_v274 = 48ULL;
    __twr_v275 = _mng_var251 + __twr_v274;
    __twr_v276 = *(uint32_t*)(__twr_v275);
    __twr_v277 = __twr_v276 + __twr_v273;
    *(uint32_t*)(__twr_v275) = __twr_v277;
    __twr_l21:;
    __twr_l20:;
    _jkl_epilogue:;
}
void IrEliminateForFunction(uint64_t _mng_funcsym278) {
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t _mng_irfunc282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t _mng_type286;
    uint64_t __twr_v287;
    uint64_t _mng_outarg288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t _mng_symbol297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t _mng_irvar301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t _mng_inst309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t _mng_def313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t _mng_listhead324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t _mng_listentry328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t _mng_last332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t _mng_src1352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_src2356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t _mng_arg364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t _mng_head374;
    uint64_t __twr_v375;
    uint64_t _mng_listentry376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t _mng_var379;
    uint64_t __twr_v380;
    uint64_t _mng_listentry381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t _mng_prev385;
    uint64_t __twr_v386;
    uint64_t _mng_next387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    __twr_v279 = 96ULL;
    __twr_v280 = _mng_funcsym278 + __twr_v279;
    __twr_v281 = *(uint64_t*)(__twr_v280);
    _mng_irfunc282 = __twr_v281;
    __twr_v283 = 104ULL;
    __twr_v284 = _mng_funcsym278 + __twr_v283;
    __twr_v285 = *(uint64_t*)(__twr_v284);
    _mng_type286 = __twr_v285;
    __twr_v287 = *(uint64_t*)(_mng_type286);
    _mng_outarg288 = __twr_v287;
    if (!(_mng_outarg288)) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v289 = 48ULL;
    __twr_v290 = _mng_outarg288 + __twr_v289;
    __twr_v291 = *(uint8_t*)(__twr_v290);
    __twr_v292 = 2ULL;
    if (__twr_v291 == __twr_v292) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v293 = *(uint64_t*)(_mng_outarg288);
    _mng_outarg288 = __twr_v293;
    goto __twr_l29;
    __twr_l30:;
    __twr_v294 = 40ULL;
    __twr_v295 = _mng_outarg288 + __twr_v294;
    __twr_v296 = *(uint64_t*)(__twr_v295);
    _mng_symbol297 = __twr_v296;
    __twr_v298 = 112ULL;
    __twr_v299 = _mng_symbol297 + __twr_v298;
    __twr_v300 = *(uint64_t*)(__twr_v299);
    _mng_irvar301 = __twr_v300;
    __twr_v302 = 1ULL;
    __twr_v303 = 95ULL;
    __twr_v304 = _mng_irvar301 + __twr_v303;
    *(uint8_t*)(__twr_v304) = __twr_v302;
    __twr_v305 = 48ULL;
    __twr_v306 = _mng_irvar301 + __twr_v305;
    *(uint32_t*)(__twr_v306) = __twr_v302;
    __twr_v307 = *(uint64_t*)(_mng_outarg288);
    _mng_outarg288 = __twr_v307;
    __twr_l29:;
    if (_mng_outarg288) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v308 = *(uint64_t*)(_mng_irfunc282);
    _mng_inst309 = __twr_v308;
    if (!(_mng_inst309)) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v310 = 48ULL;
    __twr_v311 = _mng_inst309 + __twr_v310;
    __twr_v312 = *(uint64_t*)(__twr_v311);
    _mng_def313 = __twr_v312;
    if (!(_mng_def313)) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v314 = 95ULL;
    __twr_v315 = _mng_def313 + __twr_v314;
    __twr_v316 = *(uint8_t*)(__twr_v315);
    if (__twr_v316) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v317 = 1ULL;
    __twr_v318 = 95ULL;
    __twr_v319 = _mng_def313 + __twr_v318;
    *(uint8_t*)(__twr_v319) = __twr_v317;
    __twr_v320 = 96ULL;
    __twr_v321 = _mng_def313 + __twr_v320;
    __twr_v322 = *(uint8_t*)(__twr_v321);
    if (__twr_v322) { goto __twr_l41; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v323 = (uint64_t)(&IrDeadVariableListHead);
    _mng_listhead324 = __twr_v323;
    __twr_v325 = 24ULL;
    __twr_v326 = _mng_def313 + __twr_v325;
    __twr_v327 = 0ULL;
    _mng_listentry328 = __twr_v326;
    __twr_v329 = 8ULL;
    __twr_v330 = _mng_listhead324 + __twr_v329;
    __twr_v331 = *(uint64_t*)(__twr_v330);
    _mng_last332 = __twr_v331;
    __twr_v333 = _mng_listentry328 + __twr_v329;
    *(uint64_t*)(__twr_v333) = _mng_last332;
    *(uint64_t*)(_mng_listentry328) = _mng_listhead324;
    *(uint64_t*)(_mng_last332) = _mng_listentry328;
    *(uint64_t*)(__twr_v330) = _mng_listentry328;
    __twr_v334 = 48ULL;
    __twr_v335 = _mng_def313 + __twr_v334;
    *(uint32_t*)(__twr_v335) = __twr_v327;
    __twr_v336 = *(uint64_t*)(_mng_def313);
    if (!(__twr_v336)) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v337 = 0ULL;
    __twr_v338 = 40ULL;
    __twr_v339 = _mng_def313 + __twr_v338;
    *(uint64_t*)(__twr_v339) = __twr_v337;
    __twr_l42:;
    goto __twr_l39;
    __twr_l41:;
    __twr_v340 = 1ULL;
    __twr_v341 = 48ULL;
    __twr_v342 = _mng_def313 + __twr_v341;
    *(uint32_t*)(__twr_v342) = __twr_v340;
    __twr_l39:;
    __twr_l37:;
    __twr_v343 = *(uint64_t*)(_mng_def313);
    if (!(__twr_v343)) { goto __twr_l44; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v344 = 40ULL;
    __twr_v345 = _mng_def313 + __twr_v344;
    __twr_v346 = *(uint64_t*)(__twr_v345);
    __twr_v347 = 72ULL;
    __twr_v348 = _mng_inst309 + __twr_v347;
    *(uint64_t*)(__twr_v348) = __twr_v346;
    *(uint64_t*)(__twr_v345) = _mng_inst309;
    __twr_l44:;
    __twr_l35:;
    __twr_v349 = 56ULL;
    __twr_v350 = _mng_inst309 + __twr_v349;
    __twr_v351 = *(uint64_t*)(__twr_v350);
    _mng_src1352 = __twr_v351;
    __twr_v353 = 64ULL;
    __twr_v354 = _mng_inst309 + __twr_v353;
    __twr_v355 = *(uint64_t*)(__twr_v354);
    _mng_src2356 = __twr_v355;
    if (!(_mng_src1352)) { goto __twr_l46; } else { goto __twr_l47; }
    __twr_l47:;
    __twr_v357 = (uint64_t)(&IrUndeadifyVariable);
    ((void (*)(uint64_t))__twr_v357)(_mng_src1352);
    __twr_l46:;
    if (!(_mng_src2356)) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v358 = (uint64_t)(&IrUndeadifyVariable);
    ((void (*)(uint64_t))__twr_v358)(_mng_src2356);
    __twr_l48:;
    __twr_v359 = 88ULL;
    __twr_v360 = _mng_inst309 + __twr_v359;
    __twr_v361 = *(uint8_t*)(__twr_v360);
    __twr_v362 = 25ULL;
    if (__twr_v361 != __twr_v362) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v363 = *(uint64_t*)(_mng_inst309);
    _mng_arg364 = __twr_v363;
    if (!(_mng_arg364)) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v365 = (uint64_t)(&IrUndeadifyVariable);
    __twr_v366 = 8ULL;
    __twr_v367 = _mng_arg364 + __twr_v366;
    __twr_v368 = *(uint64_t*)(__twr_v367);
    ((void (*)(uint64_t))__twr_v365)(__twr_v368);
    __twr_v369 = *(uint64_t*)(_mng_arg364);
    _mng_arg364 = __twr_v369;
    __twr_l54:;
    if (_mng_arg364) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_l50:;
    __twr_v370 = 32ULL;
    __twr_v371 = _mng_inst309 + __twr_v370;
    __twr_v372 = *(uint64_t*)(__twr_v371);
    _mng_inst309 = __twr_v372;
    __twr_l34:;
    if (_mng_inst309) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v373 = (uint64_t)(&IrDeadVariableListHead);
    _mng_head374 = __twr_v373;
    __twr_v375 = *(uint64_t*)(_mng_head374);
    _mng_listentry376 = __twr_v375;
    if (_mng_listentry376 == _mng_head374) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v377 = 24ULL;
    __twr_v378 = _mng_listentry376 - __twr_v377;
    _mng_var379 = __twr_v378;
    __twr_v380 = (uint64_t)(&IrEliminateDeadVariable);
    ((void (*)(uint64_t))__twr_v380)(_mng_var379);
    _mng_listentry381 = _mng_listentry376;
    __twr_v382 = 8ULL;
    __twr_v383 = _mng_listentry381 + __twr_v382;
    __twr_v384 = *(uint64_t*)(__twr_v383);
    _mng_prev385 = __twr_v384;
    __twr_v386 = *(uint64_t*)(_mng_listentry381);
    _mng_next387 = __twr_v386;
    *(uint64_t*)(_mng_prev385) = _mng_next387;
    __twr_v388 = _mng_next387 + __twr_v382;
    *(uint64_t*)(__twr_v388) = _mng_prev385;
    __twr_v389 = *(uint64_t*)(_mng_listentry376);
    _mng_listentry376 = __twr_v389;
    __twr_l57:;
    if (_mng_listentry376 != _mng_head374) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_l26:;
    _jkl_epilogue:;
}
void IrEliminateDeadVariables() {
    uint64_t __twr_v390;
    uint64_t _mng_listhead391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t _mng_funcsym396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    __twr_v390 = (uint64_t)(&IrDeadVariableListHead);
    _mng_listhead391 = __twr_v390;
    __twr_v392 = 8ULL;
    __twr_v393 = _mng_listhead391 + __twr_v392;
    *(uint64_t*)(__twr_v393) = _mng_listhead391;
    *(uint64_t*)(_mng_listhead391) = _mng_listhead391;
    __twr_v394 = (uint64_t)(&PrsFunctionListHead);
    __twr_v395 = *(uint64_t*)(__twr_v394);
    _mng_funcsym396 = __twr_v395;
    if (!(_mng_funcsym396)) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v397 = (uint64_t)(&IrEliminateForFunction);
    ((void (*)(uint64_t))__twr_v397)(_mng_funcsym396);
    __twr_v398 = 80ULL;
    __twr_v399 = _mng_funcsym396 + __twr_v398;
    __twr_v400 = *(uint64_t*)(__twr_v399);
    _mng_funcsym396 = __twr_v400;
    __twr_l61:;
    if (_mng_funcsym396) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_l58:;
    _jkl_epilogue:;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintHex(uint64_t _mng_num10);
extern void TlPrintCharacter(uint64_t _mng_byte11);
extern void TlInternalError(uint64_t _mng_str12, uint64_t _mng_err113, uint64_t _mng_err214, uint64_t _mng_err315);
extern void TlUserError(uint64_t _mng_str16, uint64_t _mng_err117, uint64_t _mng_err218, uint64_t _mng_err319);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr22);
extern uint64_t TlCompareString(uint64_t _mng_str123, uint64_t _mng_str224);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str125, uint64_t _mng_str226, uint64_t _mng_count27);
extern void TlCopyString(uint64_t _mng_dest28, uint64_t _mng_src29, uint64_t _mng_bufsize30);
extern uint64_t TlOpenSource(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename32, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle33);
extern uint64_t TlReadFile(uint64_t _mng_handle34, uint64_t _mng_bytes35, uint64_t _mng_buffer36);
extern uint64_t TlWriteFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable40);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable41);
extern void TlInsertHashTable(uint64_t _mng_hashtable42, uint64_t _mng_entry43, uint64_t _mng_key44);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entrysize49, uint64_t _mng_key50, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable51, uint64_t _mng_key52);
extern void TlRemoveHashTable(uint64_t _mng_entry53);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable54, uint64_t _mng_enumfunc55);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable56, uint64_t _mng_key57, uint64_t _mng_hash58);
extern uint64_t TlHashString(uint64_t _mng_str59);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable60, uint64_t _mng_outerscope61, uint64_t _mng_deletefunc62);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable65);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable66, uint64_t _mng_name67);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_entry69, uint64_t _mng_name70);
extern void TlRemoveSymbolTable(uint64_t _mng_entry71);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array73);
extern void TlInsertDynamicBuffer(uint64_t _mng_array74, uint64_t _mng_byte75);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_srcbuf77, uint64_t _mng_length78);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_number80, uint64_t _mng_base81);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array82);
extern uint64_t TlMatchPath(uint64_t _mng_path83, uint64_t _mng_pathset84, uint64_t _mng_resultingpath85, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath86, uint64_t _mng_destpath87);
extern uint64_t TlGetFileName(uint64_t _mng_path88);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path89);
extern uint64_t TlPathExists(uint64_t _mng_path90);
extern uint64_t TlIterateDirectory(uint64_t _mng_path91, uint64_t _mng_callback92, uint64_t _mng_context93);
extern uint64_t TlGetPathExtension(uint64_t _mng_path94);
extern uint64_t TlStatFile(uint64_t _mng_path95, uint64_t _mng_statrecord96);
extern uint64_t TlCreateDirectory(uint64_t _mng_path97);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path98);
extern void TlInitializeZone(uint64_t _mng_zone99, uint64_t _mng_blocksize100);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone101);
extern void TlFreeToZone(uint64_t _mng_zone102, uint64_t _mng_block103);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant104);
extern void TlPunchValue(uint64_t _mng_ptr105, uint64_t _mng_value106, uint64_t _mng_bytes107);
extern uint64_t TlTokenize(uint64_t _mng_buffer108, uint64_t _mng_tokenbuffer109, uint64_t _mng_bufsize110, uint64_t _mng_delimiter111);
extern uint64_t TlStringToNumber(uint64_t _mng_src112, uint64_t _mng_bufsize113, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler114);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine115, uint64_t _mng_arg116, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread117);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex118);
extern void TlReleaseMutex(uint64_t _mng_mutex119);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue120);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore121);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore122);
extern uint64_t TlSystem(uint64_t _mng_cmdline123);
extern uint64_t TlCurrentEpochTime();
extern void JklCompileProgram(uint64_t _mng_argc124, uint64_t _mng_argv125);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg126);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename127, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock128, uint64_t _mng_filepath129);
extern uint64_t LexLookupSection(uint64_t _mng_name130);
extern void LexPushSection(uint64_t _mng_section131);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope132);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg133);
extern void LexExpandMacro(uint64_t _mng_macro134, uint64_t _mng_token135);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream136, uint64_t _mng_macro137);
extern void LexUninitializeStream(uint64_t _mng_stream138);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream139);
extern void LexPushStream(uint64_t _mng_stream140);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream141, uint64_t _mng_fileblock142, uint64_t _mng_handle143);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock144, uint64_t _mng_handle145);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope146);
extern uint64_t LexResetScope(uint64_t _mng_scope147);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope148);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest149, uint64_t _mng_src150);
extern void LexGetToken(uint64_t _mng_token151);
extern void LexPutbackToken(uint64_t _mng_token152);
extern uint64_t LexMatchToken(uint64_t _mng_token153, uint64_t _mng_type154, uint64_t _mng_subtype155);
extern void LexStreamError(uint64_t _mng_str156, uint64_t _mng_err1157, uint64_t _mng_err2158, uint64_t _mng_err3159);
extern void LexTokenError(uint64_t _mng_token160, uint64_t _mng_str161, uint64_t _mng_err1162, uint64_t _mng_err2163, uint64_t _mng_err3164);
extern uint64_t LexCrunchNumber(uint64_t _mng_token165, uint64_t _mng_buffer166);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node167);
extern uint64_t IrAllocateStack(uint64_t _mng_func168, uint64_t _mng_bytes169);
extern uint64_t IrGetStackOffset(uint64_t _mng_func170, uint64_t _mng_symbol171);
extern void IrValueNumberVariable(uint64_t _mng_var172, uint64_t _mng_valueop173, uint64_t _mng_src1174, uint64_t _mng_src2175);
extern uint64_t IrFindValue(uint64_t _mng_op176, uint64_t _mng_src1177, uint64_t _mng_src2178);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads179, uint64_t _mng_symbol180);
extern void IrKillVariable(uint64_t _mng_var181);
extern void IrValueNumberConstantVariable(uint64_t _mng_var182, uint64_t _mng_constant183, uint64_t _mng_op184);
extern uint64_t IrFindConstant(uint64_t _mng_constant185, uint64_t _mng_op186);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var187);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[7];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst188, uint64_t _mng_value189);
extern void IrRemoveInstruction(uint64_t _mng_inst190);
uint64_t IrDeadVariableListHead[2];
uint64_t IrDeadLocalCount = 0ULL;
void IrEliminateDeadInstruction(uint64_t _mng_inst191) {
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t _mng_src1196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t _mng_src2200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t _mng_listhead208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t _mng_listentry211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t _mng_last215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t _mng_listhead224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t _mng_listentry227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t _mng_last231;
    uint64_t __twr_v232;
    __twr_v192 = (uint64_t)(&IrRemoveInstruction);
    ((void (*)(uint64_t))__twr_v192)(_mng_inst191);
    __twr_v193 = 56ULL;
    __twr_v194 = _mng_inst191 + __twr_v193;
    __twr_v195 = *(uint64_t*)(__twr_v194);
    _mng_src1196 = __twr_v195;
    __twr_v197 = 64ULL;
    __twr_v198 = _mng_inst191 + __twr_v197;
    __twr_v199 = *(uint64_t*)(__twr_v198);
    _mng_src2200 = __twr_v199;
    if (!(_mng_src1196)) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v201 = 1ULL;
    __twr_v202 = 48ULL;
    __twr_v203 = _mng_src1196 + __twr_v202;
    __twr_v204 = *(uint32_t*)(__twr_v203);
    __twr_v205 = __twr_v204 - __twr_v201;
    *(uint32_t*)(__twr_v203) = __twr_v205;
    __twr_v206 = *(uint32_t*)(__twr_v203);
    if (__twr_v206) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v207 = (uint64_t)(&IrDeadVariableListHead);
    _mng_listhead208 = __twr_v207;
    __twr_v209 = 24ULL;
    __twr_v210 = _mng_src1196 + __twr_v209;
    _mng_listentry211 = __twr_v210;
    __twr_v212 = 8ULL;
    __twr_v213 = _mng_listhead208 + __twr_v212;
    __twr_v214 = *(uint64_t*)(__twr_v213);
    _mng_last215 = __twr_v214;
    __twr_v216 = _mng_listentry211 + __twr_v212;
    *(uint64_t*)(__twr_v216) = _mng_last215;
    *(uint64_t*)(_mng_listentry211) = _mng_listhead208;
    *(uint64_t*)(_mng_last215) = _mng_listentry211;
    *(uint64_t*)(__twr_v213) = _mng_listentry211;
    __twr_l4:;
    __twr_l2:;
    if (!(_mng_src2200)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v217 = 1ULL;
    __twr_v218 = 48ULL;
    __twr_v219 = _mng_src2200 + __twr_v218;
    __twr_v220 = *(uint32_t*)(__twr_v219);
    __twr_v221 = __twr_v220 - __twr_v217;
    *(uint32_t*)(__twr_v219) = __twr_v221;
    __twr_v222 = *(uint32_t*)(__twr_v219);
    if (__twr_v222) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v223 = (uint64_t)(&IrDeadVariableListHead);
    _mng_listhead224 = __twr_v223;
    __twr_v225 = 24ULL;
    __twr_v226 = _mng_src2200 + __twr_v225;
    _mng_listentry227 = __twr_v226;
    __twr_v228 = 8ULL;
    __twr_v229 = _mng_listhead224 + __twr_v228;
    __twr_v230 = *(uint64_t*)(__twr_v229);
    _mng_last231 = __twr_v230;
    __twr_v232 = _mng_listentry227 + __twr_v228;
    *(uint64_t*)(__twr_v232) = _mng_last231;
    *(uint64_t*)(_mng_listentry227) = _mng_listhead224;
    *(uint64_t*)(_mng_last231) = _mng_listentry227;
    *(uint64_t*)(__twr_v229) = _mng_listentry227;
    __twr_l8:;
    __twr_l6:;
    __twr_l1:;
    _jkl_epilogue:;
}
void IrEliminateDeadVariable(uint64_t _mng_var233) {
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t _mng_definedbyinst237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t _mng_inst247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    __twr_v234 = 8ULL;
    __twr_v235 = _mng_var233 + __twr_v234;
    __twr_v236 = *(uint64_t*)(__twr_v235);
    _mng_definedbyinst237 = __twr_v236;
    if (!(_mng_definedbyinst237)) { goto __twr_l13; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v238 = 88ULL;
    __twr_v239 = _mng_definedbyinst237 + __twr_v238;
    __twr_v240 = *(uint8_t*)(__twr_v239);
    __twr_v241 = 25ULL;
    if (__twr_v240 != __twr_v241) { goto __twr_l14; } else { goto __twr_l15; }
    __twr_l15:;
    goto _jkl_epilogue;
    __twr_l14:;
    __twr_v242 = (uint64_t)(&IrEliminateDeadInstruction);
    ((void (*)(uint64_t))__twr_v242)(_mng_definedbyinst237);
    goto __twr_l11;
    __twr_l13:;
    __twr_v243 = *(uint64_t*)(_mng_var233);
    if (!(__twr_v243)) { goto __twr_l11; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v244 = 40ULL;
    __twr_v245 = _mng_var233 + __twr_v244;
    __twr_v246 = *(uint64_t*)(__twr_v245);
    _mng_inst247 = __twr_v246;
    if (!(_mng_inst247)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v248 = (uint64_t)(&IrEliminateDeadInstruction);
    ((void (*)(uint64_t))__twr_v248)(_mng_inst247);
    __twr_v249 = 72ULL;
    __twr_v250 = _mng_inst247 + __twr_v249;
    __twr_v251 = *(uint64_t*)(__twr_v250);
    _mng_inst247 = __twr_v251;
    __twr_l19:;
    if (_mng_inst247) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_l11:;
    __twr_l10:;
    _jkl_epilogue:;
}
void IrUndeadifyVariable(uint64_t _mng_var252) {
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t _mng_listentry266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t _mng_prev270;
    uint64_t __twr_v271;
    uint64_t _mng_next272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    __twr_v253 = 95ULL;
    __twr_v254 = _mng_var252 + __twr_v253;
    __twr_v255 = *(uint8_t*)(__twr_v254);
    if (__twr_v255) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v256 = 1ULL;
    __twr_v257 = 95ULL;
    __twr_v258 = _mng_var252 + __twr_v257;
    *(uint8_t*)(__twr_v258) = __twr_v256;
    __twr_v259 = 48ULL;
    __twr_v260 = _mng_var252 + __twr_v259;
    *(uint32_t*)(__twr_v260) = __twr_v256;
    goto __twr_l21;
    __twr_l23:;
    __twr_v261 = 48ULL;
    __twr_v262 = _mng_var252 + __twr_v261;
    __twr_v263 = *(uint32_t*)(__twr_v262);
    if (__twr_v263) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v264 = 24ULL;
    __twr_v265 = _mng_var252 + __twr_v264;
    _mng_listentry266 = __twr_v265;
    __twr_v267 = 8ULL;
    __twr_v268 = _mng_listentry266 + __twr_v267;
    __twr_v269 = *(uint64_t*)(__twr_v268);
    _mng_prev270 = __twr_v269;
    __twr_v271 = *(uint64_t*)(_mng_listentry266);
    _mng_next272 = __twr_v271;
    *(uint64_t*)(_mng_prev270) = _mng_next272;
    __twr_v273 = _mng_next272 + __twr_v267;
    *(uint64_t*)(__twr_v273) = _mng_prev270;
    __twr_l24:;
    __twr_v274 = 1ULL;
    __twr_v275 = 48ULL;
    __twr_v276 = _mng_var252 + __twr_v275;
    __twr_v277 = *(uint32_t*)(__twr_v276);
    __twr_v278 = __twr_v277 + __twr_v274;
    *(uint32_t*)(__twr_v276) = __twr_v278;
    __twr_l21:;
    __twr_l20:;
    _jkl_epilogue:;
}
void IrEliminateForFunction(uint64_t _mng_funcsym279) {
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t _mng_irfunc283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t _mng_type287;
    uint64_t __twr_v288;
    uint64_t _mng_outarg289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t _mng_symbol298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t _mng_irvar302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t _mng_inst310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t _mng_def314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t _mng_listhead325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t _mng_listentry329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t _mng_last333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t _mng_src1353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t _mng_src2357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t _mng_arg365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t _mng_head375;
    uint64_t __twr_v376;
    uint64_t _mng_listentry377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t _mng_var380;
    uint64_t __twr_v381;
    uint64_t _mng_listentry382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t _mng_prev386;
    uint64_t __twr_v387;
    uint64_t _mng_next388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    __twr_v280 = 96ULL;
    __twr_v281 = _mng_funcsym279 + __twr_v280;
    __twr_v282 = *(uint64_t*)(__twr_v281);
    _mng_irfunc283 = __twr_v282;
    __twr_v284 = 104ULL;
    __twr_v285 = _mng_funcsym279 + __twr_v284;
    __twr_v286 = *(uint64_t*)(__twr_v285);
    _mng_type287 = __twr_v286;
    __twr_v288 = *(uint64_t*)(_mng_type287);
    _mng_outarg289 = __twr_v288;
    if (!(_mng_outarg289)) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v290 = 48ULL;
    __twr_v291 = _mng_outarg289 + __twr_v290;
    __twr_v292 = *(uint8_t*)(__twr_v291);
    __twr_v293 = 2ULL;
    if (__twr_v292 == __twr_v293) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v294 = *(uint64_t*)(_mng_outarg289);
    _mng_outarg289 = __twr_v294;
    goto __twr_l29;
    __twr_l30:;
    __twr_v295 = 40ULL;
    __twr_v296 = _mng_outarg289 + __twr_v295;
    __twr_v297 = *(uint64_t*)(__twr_v296);
    _mng_symbol298 = __twr_v297;
    __twr_v299 = 112ULL;
    __twr_v300 = _mng_symbol298 + __twr_v299;
    __twr_v301 = *(uint64_t*)(__twr_v300);
    _mng_irvar302 = __twr_v301;
    __twr_v303 = 1ULL;
    __twr_v304 = 95ULL;
    __twr_v305 = _mng_irvar302 + __twr_v304;
    *(uint8_t*)(__twr_v305) = __twr_v303;
    __twr_v306 = 48ULL;
    __twr_v307 = _mng_irvar302 + __twr_v306;
    *(uint32_t*)(__twr_v307) = __twr_v303;
    __twr_v308 = *(uint64_t*)(_mng_outarg289);
    _mng_outarg289 = __twr_v308;
    __twr_l29:;
    if (_mng_outarg289) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v309 = *(uint64_t*)(_mng_irfunc283);
    _mng_inst310 = __twr_v309;
    if (!(_mng_inst310)) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v311 = 48ULL;
    __twr_v312 = _mng_inst310 + __twr_v311;
    __twr_v313 = *(uint64_t*)(__twr_v312);
    _mng_def314 = __twr_v313;
    if (!(_mng_def314)) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v315 = 95ULL;
    __twr_v316 = _mng_def314 + __twr_v315;
    __twr_v317 = *(uint8_t*)(__twr_v316);
    if (__twr_v317) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v318 = 1ULL;
    __twr_v319 = 95ULL;
    __twr_v320 = _mng_def314 + __twr_v319;
    *(uint8_t*)(__twr_v320) = __twr_v318;
    __twr_v321 = 96ULL;
    __twr_v322 = _mng_def314 + __twr_v321;
    __twr_v323 = *(uint8_t*)(__twr_v322);
    if (__twr_v323) { goto __twr_l41; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v324 = (uint64_t)(&IrDeadVariableListHead);
    _mng_listhead325 = __twr_v324;
    __twr_v326 = 24ULL;
    __twr_v327 = _mng_def314 + __twr_v326;
    __twr_v328 = 0ULL;
    _mng_listentry329 = __twr_v327;
    __twr_v330 = 8ULL;
    __twr_v331 = _mng_listhead325 + __twr_v330;
    __twr_v332 = *(uint64_t*)(__twr_v331);
    _mng_last333 = __twr_v332;
    __twr_v334 = _mng_listentry329 + __twr_v330;
    *(uint64_t*)(__twr_v334) = _mng_last333;
    *(uint64_t*)(_mng_listentry329) = _mng_listhead325;
    *(uint64_t*)(_mng_last333) = _mng_listentry329;
    *(uint64_t*)(__twr_v331) = _mng_listentry329;
    __twr_v335 = 48ULL;
    __twr_v336 = _mng_def314 + __twr_v335;
    *(uint32_t*)(__twr_v336) = __twr_v328;
    __twr_v337 = *(uint64_t*)(_mng_def314);
    if (!(__twr_v337)) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v338 = 0ULL;
    __twr_v339 = 40ULL;
    __twr_v340 = _mng_def314 + __twr_v339;
    *(uint64_t*)(__twr_v340) = __twr_v338;
    __twr_l42:;
    goto __twr_l39;
    __twr_l41:;
    __twr_v341 = 1ULL;
    __twr_v342 = 48ULL;
    __twr_v343 = _mng_def314 + __twr_v342;
    *(uint32_t*)(__twr_v343) = __twr_v341;
    __twr_l39:;
    __twr_l37:;
    __twr_v344 = *(uint64_t*)(_mng_def314);
    if (!(__twr_v344)) { goto __twr_l44; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v345 = 40ULL;
    __twr_v346 = _mng_def314 + __twr_v345;
    __twr_v347 = *(uint64_t*)(__twr_v346);
    __twr_v348 = 72ULL;
    __twr_v349 = _mng_inst310 + __twr_v348;
    *(uint64_t*)(__twr_v349) = __twr_v347;
    *(uint64_t*)(__twr_v346) = _mng_inst310;
    __twr_l44:;
    __twr_l35:;
    __twr_v350 = 56ULL;
    __twr_v351 = _mng_inst310 + __twr_v350;
    __twr_v352 = *(uint64_t*)(__twr_v351);
    _mng_src1353 = __twr_v352;
    __twr_v354 = 64ULL;
    __twr_v355 = _mng_inst310 + __twr_v354;
    __twr_v356 = *(uint64_t*)(__twr_v355);
    _mng_src2357 = __twr_v356;
    if (!(_mng_src1353)) { goto __twr_l46; } else { goto __twr_l47; }
    __twr_l47:;
    __twr_v358 = (uint64_t)(&IrUndeadifyVariable);
    ((void (*)(uint64_t))__twr_v358)(_mng_src1353);
    __twr_l46:;
    if (!(_mng_src2357)) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v359 = (uint64_t)(&IrUndeadifyVariable);
    ((void (*)(uint64_t))__twr_v359)(_mng_src2357);
    __twr_l48:;
    __twr_v360 = 88ULL;
    __twr_v361 = _mng_inst310 + __twr_v360;
    __twr_v362 = *(uint8_t*)(__twr_v361);
    __twr_v363 = 25ULL;
    if (__twr_v362 != __twr_v363) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v364 = *(uint64_t*)(_mng_inst310);
    _mng_arg365 = __twr_v364;
    if (!(_mng_arg365)) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v366 = (uint64_t)(&IrUndeadifyVariable);
    __twr_v367 = 8ULL;
    __twr_v368 = _mng_arg365 + __twr_v367;
    __twr_v369 = *(uint64_t*)(__twr_v368);
    ((void (*)(uint64_t))__twr_v366)(__twr_v369);
    __twr_v370 = *(uint64_t*)(_mng_arg365);
    _mng_arg365 = __twr_v370;
    __twr_l54:;
    if (_mng_arg365) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_l50:;
    __twr_v371 = 32ULL;
    __twr_v372 = _mng_inst310 + __twr_v371;
    __twr_v373 = *(uint64_t*)(__twr_v372);
    _mng_inst310 = __twr_v373;
    __twr_l34:;
    if (_mng_inst310) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v374 = (uint64_t)(&IrDeadVariableListHead);
    _mng_head375 = __twr_v374;
    __twr_v376 = *(uint64_t*)(_mng_head375);
    _mng_listentry377 = __twr_v376;
    if (_mng_listentry377 == _mng_head375) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v378 = 24ULL;
    __twr_v379 = _mng_listentry377 - __twr_v378;
    _mng_var380 = __twr_v379;
    __twr_v381 = (uint64_t)(&IrEliminateDeadVariable);
    ((void (*)(uint64_t))__twr_v381)(_mng_var380);
    _mng_listentry382 = _mng_listentry377;
    __twr_v383 = 8ULL;
    __twr_v384 = _mng_listentry382 + __twr_v383;
    __twr_v385 = *(uint64_t*)(__twr_v384);
    _mng_prev386 = __twr_v385;
    __twr_v387 = *(uint64_t*)(_mng_listentry382);
    _mng_next388 = __twr_v387;
    *(uint64_t*)(_mng_prev386) = _mng_next388;
    __twr_v389 = _mng_next388 + __twr_v383;
    *(uint64_t*)(__twr_v389) = _mng_prev386;
    __twr_v390 = *(uint64_t*)(_mng_listentry377);
    _mng_listentry377 = __twr_v390;
    __twr_l57:;
    if (_mng_listentry377 != _mng_head375) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_l26:;
    _jkl_epilogue:;
}
void IrEliminateDeadVariables() {
    uint64_t __twr_v391;
    uint64_t _mng_listhead392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t _mng_funcsym397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    __twr_v391 = (uint64_t)(&IrDeadVariableListHead);
    _mng_listhead392 = __twr_v391;
    __twr_v393 = 8ULL;
    __twr_v394 = _mng_listhead392 + __twr_v393;
    *(uint64_t*)(__twr_v394) = _mng_listhead392;
    *(uint64_t*)(_mng_listhead392) = _mng_listhead392;
    __twr_v395 = (uint64_t)(&PrsFunctionListHead);
    __twr_v396 = *(uint64_t*)(__twr_v395);
    _mng_funcsym397 = __twr_v396;
    if (!(_mng_funcsym397)) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v398 = (uint64_t)(&IrEliminateForFunction);
    ((void (*)(uint64_t))__twr_v398)(_mng_funcsym397);
    __twr_v399 = 80ULL;
    __twr_v400 = _mng_funcsym397 + __twr_v399;
    __twr_v401 = *(uint64_t*)(__twr_v400);
    _mng_funcsym397 = __twr_v401;
    __twr_l61:;
    if (_mng_funcsym397) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_l58:;
    _jkl_epilogue:;
}

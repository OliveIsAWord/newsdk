#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintHex(uint64_t _mng_num10);
extern void TlPrintCharacter(uint64_t _mng_byte11);
extern void TlInternalError(uint64_t _mng_str12, uint64_t _mng_err113, uint64_t _mng_err214, uint64_t _mng_err315);
extern void TlUserError(uint64_t _mng_str16, uint64_t _mng_err117, uint64_t _mng_err218, uint64_t _mng_err319);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr22);
extern uint64_t TlCompareString(uint64_t _mng_str123, uint64_t _mng_str224);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str125, uint64_t _mng_str226, uint64_t _mng_count27);
extern void TlCopyString(uint64_t _mng_dest28, uint64_t _mng_src29, uint64_t _mng_bufsize30);
extern uint64_t TlOpenSource(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename32, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle33);
extern uint64_t TlReadFile(uint64_t _mng_handle34, uint64_t _mng_bytes35, uint64_t _mng_buffer36);
extern uint64_t TlWriteFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable40);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable41);
extern void TlInsertHashTable(uint64_t _mng_hashtable42, uint64_t _mng_entry43, uint64_t _mng_key44);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entrysize49, uint64_t _mng_key50, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable51, uint64_t _mng_key52);
extern void TlRemoveHashTable(uint64_t _mng_entry53);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable54, uint64_t _mng_enumfunc55);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable56, uint64_t _mng_key57, uint64_t _mng_hash58);
extern uint64_t TlHashString(uint64_t _mng_str59);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable60, uint64_t _mng_outerscope61, uint64_t _mng_deletefunc62);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable65);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable66, uint64_t _mng_name67);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_entry69, uint64_t _mng_name70);
extern void TlRemoveSymbolTable(uint64_t _mng_entry71);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array73);
extern void TlInsertDynamicBuffer(uint64_t _mng_array74, uint64_t _mng_byte75);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_srcbuf77, uint64_t _mng_length78);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_number80, uint64_t _mng_base81);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array82);
extern uint64_t TlMatchPath(uint64_t _mng_path83, uint64_t _mng_pathset84, uint64_t _mng_resultingpath85, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath86, uint64_t _mng_destpath87);
extern uint64_t TlGetFileName(uint64_t _mng_path88);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path89);
extern uint64_t TlPathExists(uint64_t _mng_path90);
extern uint64_t TlIterateDirectory(uint64_t _mng_path91, uint64_t _mng_callback92, uint64_t _mng_context93);
extern uint64_t TlGetPathExtension(uint64_t _mng_path94);
extern uint64_t TlStatFile(uint64_t _mng_path95, uint64_t _mng_statrecord96);
extern uint64_t TlCreateDirectory(uint64_t _mng_path97);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path98);
extern void TlInitializeZone(uint64_t _mng_zone99, uint64_t _mng_blocksize100);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone101);
extern void TlFreeToZone(uint64_t _mng_zone102, uint64_t _mng_block103);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant104);
extern void TlPunchValue(uint64_t _mng_ptr105, uint64_t _mng_value106, uint64_t _mng_bytes107);
extern uint64_t TlTokenize(uint64_t _mng_buffer108, uint64_t _mng_tokenbuffer109, uint64_t _mng_bufsize110, uint64_t _mng_delimiter111);
extern uint64_t TlStringToNumber(uint64_t _mng_src112, uint64_t _mng_bufsize113, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler114);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine115, uint64_t _mng_arg116, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread117);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex118);
extern void TlReleaseMutex(uint64_t _mng_mutex119);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue120);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore121);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore122);
extern uint64_t TlSystem(uint64_t _mng_cmdline123);
extern uint64_t TlCurrentEpochTime();
extern void JklCompileProgram(uint64_t _mng_argc124, uint64_t _mng_argv125);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg126);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename127, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock128, uint64_t _mng_filepath129);
extern uint64_t LexLookupSection(uint64_t _mng_name130);
extern void LexPushSection(uint64_t _mng_section131);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope132);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg133);
extern void LexExpandMacro(uint64_t _mng_macro134, uint64_t _mng_token135);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream136, uint64_t _mng_macro137);
extern void LexUninitializeStream(uint64_t _mng_stream138);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream139);
extern void LexPushStream(uint64_t _mng_stream140);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream141, uint64_t _mng_fileblock142, uint64_t _mng_handle143);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock144, uint64_t _mng_handle145);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope146);
extern uint64_t LexResetScope(uint64_t _mng_scope147);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope148);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest149, uint64_t _mng_src150);
extern void LexGetToken(uint64_t _mng_token151);
extern void LexPutbackToken(uint64_t _mng_token152);
extern uint64_t LexMatchToken(uint64_t _mng_token153, uint64_t _mng_type154, uint64_t _mng_subtype155);
extern void LexStreamError(uint64_t _mng_str156, uint64_t _mng_err1157, uint64_t _mng_err2158, uint64_t _mng_err3159);
extern void LexTokenError(uint64_t _mng_token160, uint64_t _mng_str161, uint64_t _mng_err1162, uint64_t _mng_err2163, uint64_t _mng_err3164);
extern uint64_t LexCrunchNumber(uint64_t _mng_token165, uint64_t _mng_buffer166);
uint64_t LexStreamZone[2];
void LexInitializeStreamZone() {
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    __twr_v167 = (uint64_t)(&TlInitializeZone);
    __twr_v168 = (uint64_t)(&LexStreamZone);
    __twr_v169 = 93ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v167)(__twr_v168, __twr_v169);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexAllocateStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    __twr_v170 = (uint64_t)(&TlAllocateFromZone);
    __twr_v171 = (uint64_t)(&LexStreamZone);
    __twr_v172 = ((uint64_t (*)(uint64_t))__twr_v170)(__twr_v171);
    _jkl_retv = __twr_v172;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeStream(uint64_t _mng_stream173, uint64_t _mng_macro174) {
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    __twr_v175 = 0ULL;
    *(uint64_t*)(_mng_stream173) = __twr_v175;
    __twr_v176 = 8ULL;
    __twr_v177 = _mng_stream173 + __twr_v176;
    *(uint64_t*)(__twr_v177) = __twr_v175;
    __twr_v178 = 16ULL;
    __twr_v179 = _mng_stream173 + __twr_v178;
    *(uint64_t*)(__twr_v179) = __twr_v175;
    __twr_v180 = 24ULL;
    __twr_v181 = _mng_stream173 + __twr_v180;
    *(uint64_t*)(__twr_v181) = __twr_v175;
    __twr_v182 = 32ULL;
    __twr_v183 = _mng_stream173 + __twr_v182;
    *(uint32_t*)(__twr_v183) = __twr_v175;
    __twr_v184 = 36ULL;
    __twr_v185 = _mng_stream173 + __twr_v184;
    *(uint32_t*)(__twr_v185) = __twr_v175;
    __twr_v186 = 1ULL;
    __twr_v187 = 44ULL;
    __twr_v188 = _mng_stream173 + __twr_v187;
    *(uint32_t*)(__twr_v188) = __twr_v186;
    __twr_v189 = 48ULL;
    __twr_v190 = _mng_stream173 + __twr_v189;
    *(uint32_t*)(__twr_v190) = __twr_v186;
    __twr_v191 = 40ULL;
    __twr_v192 = _mng_stream173 + __twr_v191;
    *(uint32_t*)(__twr_v192) = __twr_v175;
    __twr_v193 = 56ULL;
    __twr_v194 = _mng_stream173 + __twr_v193;
    *(uint64_t*)(__twr_v194) = _mng_macro174;
    __twr_v195 = 64ULL;
    __twr_v196 = _mng_stream173 + __twr_v195;
    *(uint8_t*)(__twr_v196) = __twr_v175;
    __twr_v197 = 72ULL;
    __twr_v198 = _mng_stream173 + __twr_v197;
    *(uint64_t*)(__twr_v198) = __twr_v175;
    __twr_v199 = 80ULL;
    __twr_v200 = _mng_stream173 + __twr_v199;
    *(uint64_t*)(__twr_v200) = __twr_v175;
    __twr_v201 = 88ULL;
    __twr_v202 = _mng_stream173 + __twr_v201;
    *(uint8_t*)(__twr_v202) = __twr_v175;
    __twr_v203 = 89ULL;
    __twr_v204 = _mng_stream173 + __twr_v203;
    *(uint8_t*)(__twr_v204) = __twr_v175;
    __twr_v205 = 90ULL;
    __twr_v206 = _mng_stream173 + __twr_v205;
    *(uint8_t*)(__twr_v206) = __twr_v175;
    __twr_v207 = 91ULL;
    __twr_v208 = _mng_stream173 + __twr_v207;
    *(uint8_t*)(__twr_v208) = __twr_v175;
    __twr_v209 = 92ULL;
    __twr_v210 = _mng_stream173 + __twr_v209;
    *(uint8_t*)(__twr_v210) = __twr_v175;
    __twr_l3:;
    _jkl_epilogue:;
}
void LexUninitializeStream(uint64_t _mng_stream211) {
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    __twr_v212 = 56ULL;
    __twr_v213 = _mng_stream211 + __twr_v212;
    __twr_v214 = *(uint64_t*)(__twr_v213);
    if (__twr_v214) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v215 = (uint64_t)(&TlClose);
    __twr_v216 = 16ULL;
    __twr_v217 = _mng_stream211 + __twr_v216;
    __twr_v218 = *(uint64_t*)(__twr_v217);
    ((void (*)(uint64_t))__twr_v215)(__twr_v218);
    __twr_v219 = (uint64_t)(&TlFree);
    __twr_v220 = 24ULL;
    __twr_v221 = _mng_stream211 + __twr_v220;
    __twr_v222 = *(uint64_t*)(__twr_v221);
    ((void (*)(uint64_t))__twr_v219)(__twr_v222);
    __twr_l5:;
    __twr_l4:;
    _jkl_epilogue:;
}
void LexFreeStream(uint64_t _mng_stream223) {
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    __twr_v224 = (uint64_t)(&LexUninitializeStream);
    ((void (*)(uint64_t))__twr_v224)(_mng_stream223);
    __twr_v225 = (uint64_t)(&TlFreeToZone);
    __twr_v226 = (uint64_t)(&LexStreamZone);
    ((void (*)(uint64_t, uint64_t))__twr_v225)(__twr_v226, _mng_stream223);
    __twr_l7:;
    _jkl_epilogue:;
}
void LexPushStream(uint64_t _mng_stream227) {
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    __twr_v228 = (uint64_t)(&LexCurrentStream);
    __twr_v229 = *(uint64_t*)(__twr_v228);
    *(uint64_t*)(_mng_stream227) = __twr_v229;
    *(uint64_t*)(__twr_v228) = _mng_stream227;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t LexPopStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t _mng_oldstream232;
    uint64_t __twr_v233;
    __twr_v230 = (uint64_t)(&LexCurrentStream);
    __twr_v231 = *(uint64_t*)(__twr_v230);
    _mng_oldstream232 = __twr_v231;
    __twr_v233 = *(uint64_t*)(_mng_oldstream232);
    *(uint64_t*)(__twr_v230) = __twr_v233;
    _jkl_retv = _mng_oldstream232;
    goto _jkl_epilogue;
    __twr_l9:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeFileStream(uint64_t _mng_stream234, uint64_t _mng_fileblock235, uint64_t _mng_handle236) {
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t _mng_buffer242;
    uint64_t _mng_status243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    __twr_v237 = (uint64_t)(&LexInitializeStream);
    __twr_v238 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v237)(_mng_stream234, __twr_v238);
    __twr_v239 = (uint64_t)(&TlAlloc);
    __twr_v240 = 16384ULL;
    __twr_v241 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v239)(__twr_v240, (uint64_t)(&_mng_buffer242));
    _mng_status243 = __twr_v241;
    if (!(_mng_status243)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v244 = (uint64_t)(&TlInternalError);
    __twr_v245 = (uint64_t)(&"Failed to allocate lex buffer");
    __twr_v246 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v244)(__twr_v245, __twr_v246, __twr_v246, __twr_v246);
    __twr_l11:;
    __twr_v247 = 8ULL;
    __twr_v248 = _mng_stream234 + __twr_v247;
    *(uint64_t*)(__twr_v248) = _mng_fileblock235;
    __twr_v249 = 16ULL;
    __twr_v250 = _mng_stream234 + __twr_v249;
    *(uint64_t*)(__twr_v250) = _mng_handle236;
    __twr_v251 = 16384ULL;
    __twr_v252 = 32ULL;
    __twr_v253 = _mng_stream234 + __twr_v252;
    *(uint32_t*)(__twr_v253) = __twr_v251;
    __twr_v254 = 24ULL;
    __twr_v255 = _mng_stream234 + __twr_v254;
    *(uint64_t*)(__twr_v255) = _mng_buffer242;
    __twr_l10:;
    _jkl_epilogue:;
}
uint64_t LexCreateFileStream(uint64_t _mng_fileblock256, uint64_t _mng_handle257) {
    uint64_t _jkl_retv;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t _mng_stream260;
    uint64_t __twr_v261;
    __twr_v258 = (uint64_t)(&LexAllocateStream);
    __twr_v259 = ((uint64_t (*)())__twr_v258)();
    _mng_stream260 = __twr_v259;
    __twr_v261 = (uint64_t)(&LexInitializeFileStream);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v261)(_mng_stream260, _mng_fileblock256, _mng_handle257);
    _jkl_retv = _mng_stream260;
    goto _jkl_epilogue;
    __twr_l13:;
    _jkl_epilogue:;
    return _jkl_retv;
}
extern uint64_t PrsLeaveMacro();
uint64_t LexStreamNextCharacter() {
    uint64_t _jkl_retv;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t _mng_stream266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t _mng_byte275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t _mng_macro319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    __twr_v262 = (uint64_t)(&LexCurrentStream);
    __twr_v263 = *(uint64_t*)(__twr_v262);
    if (!(__twr_v263)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v264 = (uint64_t)(&LexCurrentStream);
    __twr_v265 = *(uint64_t*)(__twr_v264);
    _mng_stream266 = __twr_v265;
    __twr_v267 = 92ULL;
    __twr_v268 = _mng_stream266 + __twr_v267;
    __twr_v269 = *(uint8_t*)(__twr_v268);
    if (!(__twr_v269)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v270 = (uint64_t)(&LexCurrentStream);
    __twr_v271 = *(uint64_t*)(__twr_v270);
    __twr_v272 = 92ULL;
    __twr_v273 = __twr_v271 + __twr_v272;
    __twr_v274 = *(uint8_t*)(__twr_v273);
    _mng_byte275 = __twr_v274;
    __twr_v276 = 0ULL;
    *(uint8_t*)(__twr_v273) = __twr_v276;
    _jkl_retv = _mng_byte275;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l20:;
    __twr_v277 = 91ULL;
    __twr_v278 = _mng_stream266 + __twr_v277;
    __twr_v279 = *(uint8_t*)(__twr_v278);
    if (!(__twr_v279)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v280 = (uint64_t)(&LexCurrentStream);
    __twr_v281 = *(uint64_t*)(__twr_v280);
    __twr_v282 = 91ULL;
    __twr_v283 = __twr_v281 + __twr_v282;
    __twr_v284 = *(uint8_t*)(__twr_v283);
    _mng_byte275 = __twr_v284;
    __twr_v285 = 0ULL;
    *(uint8_t*)(__twr_v283) = __twr_v285;
    _jkl_retv = _mng_byte275;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l22:;
    __twr_v286 = 40ULL;
    __twr_v287 = _mng_stream266 + __twr_v286;
    __twr_v288 = *(uint32_t*)(__twr_v287);
    __twr_v289 = 36ULL;
    __twr_v290 = _mng_stream266 + __twr_v289;
    __twr_v291 = *(uint32_t*)(__twr_v290);
    if (__twr_v288 >= __twr_v291) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v292 = 24ULL;
    __twr_v293 = _mng_stream266 + __twr_v292;
    __twr_v294 = *(uint64_t*)(__twr_v293);
    __twr_v295 = 40ULL;
    __twr_v296 = _mng_stream266 + __twr_v295;
    __twr_v297 = *(uint32_t*)(__twr_v296);
    __twr_v298 = 1ULL;
    __twr_v299 = __twr_v294 + __twr_v297;
    __twr_v300 = *(uint8_t*)(__twr_v299);
    _mng_byte275 = __twr_v300;
    __twr_v301 = __twr_v297 + __twr_v298;
    *(uint32_t*)(__twr_v296) = __twr_v301;
    goto __twr_l18;
    __twr_l24:;
    __twr_v302 = 56ULL;
    __twr_v303 = _mng_stream266 + __twr_v302;
    __twr_v304 = *(uint64_t*)(__twr_v303);
    if (!(__twr_v304)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v305 = 64ULL;
    __twr_v306 = _mng_stream266 + __twr_v305;
    __twr_v307 = *(uint8_t*)(__twr_v306);
    if (__twr_v307) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v308 = 1ULL;
    __twr_v309 = 64ULL;
    __twr_v310 = _mng_stream266 + __twr_v309;
    *(uint8_t*)(__twr_v310) = __twr_v308;
    __twr_v311 = 10ULL;
    _jkl_retv = __twr_v311;
    goto _jkl_epilogue;
    __twr_l27:;
    __twr_v312 = 1ULL;
    __twr_v313 = (uint64_t)(&LexMacroDepth);
    __twr_v314 = *(uint32_t*)(__twr_v313);
    __twr_v315 = __twr_v314 - __twr_v312;
    *(uint32_t*)(__twr_v313) = __twr_v315;
    __twr_v316 = 56ULL;
    __twr_v317 = _mng_stream266 + __twr_v316;
    __twr_v318 = *(uint64_t*)(__twr_v317);
    _mng_macro319 = __twr_v318;
    __twr_v320 = 257ULL;
    __twr_v321 = _mng_macro319 + __twr_v320;
    __twr_v322 = *(uint8_t*)(__twr_v321);
    if (__twr_v322) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v323 = 72ULL;
    __twr_v324 = _mng_stream266 + __twr_v323;
    __twr_v325 = *(uint64_t*)(__twr_v324);
    __twr_v326 = (uint64_t)(&LexRootScope);
    __twr_v327 = *(uint64_t*)(__twr_v326);
    if (__twr_v325 == __twr_v327) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v328 = (uint64_t)(&LexCurrentScope);
    __twr_v329 = *(uint64_t*)(__twr_v328);
    __twr_v330 = *(uint64_t*)(__twr_v329);
    __twr_v331 = *(uint64_t*)(__twr_v330);
    if (!(__twr_v331)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v332 = (uint64_t)(&LexStreamError);
    __twr_v333 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v334 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v332)(__twr_v333, __twr_v334, __twr_v334, __twr_v334);
    __twr_l34:;
    __twr_v335 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v336 = (uint64_t)(&LexCurrentScope);
    __twr_v337 = *(uint64_t*)(__twr_v336);
    __twr_v338 = ((uint64_t (*)(uint64_t))__twr_v335)(__twr_v337);
    goto __twr_l31;
    __twr_l33:;
    __twr_v339 = (uint64_t)(&LexCurrentScope);
    __twr_v340 = *(uint64_t*)(__twr_v339);
    __twr_v341 = (uint64_t)(&LexRootScope);
    __twr_v342 = *(uint64_t*)(__twr_v341);
    if (__twr_v340 == __twr_v342) { goto __twr_l31; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v343 = (uint64_t)(&LexStreamError);
    __twr_v344 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v345 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v343)(__twr_v344, __twr_v345, __twr_v345, __twr_v345);
    __twr_l31:;
    __twr_v346 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v347 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v348 = *(uint64_t*)(__twr_v347);
    __twr_v349 = ((uint64_t (*)(uint64_t))__twr_v346)(__twr_v348);
    __twr_l29:;
    __twr_v350 = (uint64_t)(&PrsLeaveMacro);
    __twr_v351 = ((uint64_t (*)())__twr_v350)();
    if (__twr_v351) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v352 = (uint64_t)(&LexStreamError);
    __twr_v353 = (uint64_t)(&"Macro terminated during nested block");
    __twr_v354 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v352)(__twr_v353, __twr_v354, __twr_v354, __twr_v354);
    __twr_l37:;
    __twr_v355 = 72ULL;
    __twr_v356 = _mng_stream266 + __twr_v355;
    __twr_v357 = *(uint64_t*)(__twr_v356);
    __twr_v358 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v358) = __twr_v357;
    __twr_v359 = 80ULL;
    __twr_v360 = _mng_stream266 + __twr_v359;
    __twr_v361 = *(uint64_t*)(__twr_v360);
    __twr_v362 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v362) = __twr_v361;
    __twr_v363 = (uint64_t)(&LexFreeStream);
    __twr_v364 = (uint64_t)(&LexPopStream);
    __twr_v365 = ((uint64_t (*)())__twr_v364)();
    ((void (*)(uint64_t))__twr_v363)(__twr_v365);
    goto __twr_l17;
    goto __twr_l18;
    __twr_l26:;
    __twr_v366 = (uint64_t)(&TlReadFile);
    __twr_v367 = 16ULL;
    __twr_v368 = _mng_stream266 + __twr_v367;
    __twr_v369 = *(uint64_t*)(__twr_v368);
    __twr_v370 = 32ULL;
    __twr_v371 = _mng_stream266 + __twr_v370;
    __twr_v372 = *(uint32_t*)(__twr_v371);
    __twr_v373 = 24ULL;
    __twr_v374 = _mng_stream266 + __twr_v373;
    __twr_v375 = *(uint64_t*)(__twr_v374);
    __twr_v376 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v366)(__twr_v369, __twr_v372, __twr_v375);
    __twr_v377 = 36ULL;
    __twr_v378 = _mng_stream266 + __twr_v377;
    *(uint32_t*)(__twr_v378) = __twr_v376;
    __twr_v379 = *(uint32_t*)(__twr_v378);
    if (__twr_v379) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v380 = 64ULL;
    __twr_v381 = _mng_stream266 + __twr_v380;
    __twr_v382 = *(uint8_t*)(__twr_v381);
    if (__twr_v382) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v383 = 1ULL;
    __twr_v384 = 64ULL;
    __twr_v385 = _mng_stream266 + __twr_v384;
    *(uint8_t*)(__twr_v385) = __twr_v383;
    __twr_v386 = 10ULL;
    _jkl_retv = __twr_v386;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v387 = (uint64_t)(&LexFreeStream);
    __twr_v388 = (uint64_t)(&LexPopStream);
    __twr_v389 = ((uint64_t (*)())__twr_v388)();
    ((void (*)(uint64_t))__twr_v387)(__twr_v389);
    goto __twr_l17;
    __twr_l39:;
    __twr_v390 = 1ULL;
    __twr_v391 = 40ULL;
    __twr_v392 = _mng_stream266 + __twr_v391;
    *(uint32_t*)(__twr_v392) = __twr_v390;
    __twr_v393 = 24ULL;
    __twr_v394 = _mng_stream266 + __twr_v393;
    __twr_v395 = *(uint64_t*)(__twr_v394);
    __twr_v396 = *(uint8_t*)(__twr_v395);
    _mng_byte275 = __twr_v396;
    __twr_l18:;
    if (_mng_byte275) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v397 = (uint64_t)(&LexStreamError);
    __twr_v398 = (uint64_t)(&"An invalid byte was found in the source file.");
    __twr_v399 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v397)(__twr_v398, _mng_byte275, __twr_v399, __twr_v399);
    goto __twr_l43;
    __twr_l45:;
    __twr_v400 = 13ULL;
    if (_mng_byte275 != __twr_v400) { goto __twr_l47; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v401 = (uint64_t)(&LexStreamError);
    __twr_v402 = (uint64_t)(&"DOS line endings were detected in the source file.");
    __twr_v403 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v401)(__twr_v402, __twr_v403, __twr_v403, __twr_v403);
    goto __twr_l43;
    __twr_l47:;
    __twr_v404 = 10ULL;
    if (_mng_byte275 != __twr_v404) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v405 = 1ULL;
    __twr_v406 = 44ULL;
    __twr_v407 = _mng_stream266 + __twr_v406;
    __twr_v408 = *(uint32_t*)(__twr_v407);
    __twr_v409 = __twr_v408 + __twr_v405;
    *(uint32_t*)(__twr_v407) = __twr_v409;
    __twr_v410 = 48ULL;
    __twr_v411 = _mng_stream266 + __twr_v410;
    *(uint32_t*)(__twr_v411) = __twr_v405;
    __twr_v412 = 64ULL;
    __twr_v413 = _mng_stream266 + __twr_v412;
    *(uint8_t*)(__twr_v413) = __twr_v405;
    goto __twr_l43;
    __twr_l49:;
    __twr_v414 = 1ULL;
    __twr_v415 = 48ULL;
    __twr_v416 = _mng_stream266 + __twr_v415;
    __twr_v417 = *(uint32_t*)(__twr_v416);
    __twr_v418 = __twr_v417 + __twr_v414;
    *(uint32_t*)(__twr_v416) = __twr_v418;
    __twr_v419 = 0ULL;
    __twr_v420 = 64ULL;
    __twr_v421 = _mng_stream266 + __twr_v420;
    *(uint8_t*)(__twr_v421) = __twr_v419;
    __twr_l43:;
    _jkl_retv = _mng_byte275;
    goto _jkl_epilogue;
    __twr_l17:;
    __twr_v422 = (uint64_t)(&LexCurrentStream);
    __twr_v423 = *(uint64_t*)(__twr_v422);
    if (__twr_v423) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v424 = 0ULL;
    _jkl_retv = __twr_v424;
    goto _jkl_epilogue;
    __twr_l14:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback123, uint64_t _mng_context124, uint64_t _mng_fmt125, uint64_t _mng_argv126, uint64_t _mng_argc127);
extern void TlPrintByCallback(uint64_t _mng_callback128, uint64_t _mng_context129, uint64_t _mng_fmt130, uint64_t _mng_argv131, uint64_t _mng_argc132);
extern void TlPrintByVarTable(uint64_t _mng_handle133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByHandle(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrint(uint64_t _mng_fmt141, uint64_t _mng_argv142, uint64_t _mng_argc143);
extern void TlFormatByVarTable(uint64_t _mng_dest144, uint64_t _mng_bufsize145, uint64_t _mng_fmt146, uint64_t _mng_argv147, uint64_t _mng_argc148);
extern void TlFormat(uint64_t _mng_dest149, uint64_t _mng_bufsize150, uint64_t _mng_fmt151, uint64_t _mng_argv152, uint64_t _mng_argc153);
extern void TlError(uint64_t _mng_fmt154, uint64_t _mng_argv155, uint64_t _mng_argc156);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg157);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename158, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock159, uint64_t _mng_filepath160);
extern uint64_t LexLookupSection(uint64_t _mng_name161);
extern void LexPushSection(uint64_t _mng_section162);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope163);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg164);
extern void LexExpandMacro(uint64_t _mng_macro165, uint64_t _mng_token166);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream167, uint64_t _mng_macro168);
extern void LexUninitializeStream(uint64_t _mng_stream169);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream170);
extern void LexPushStream(uint64_t _mng_stream171);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream172, uint64_t _mng_fileblock173, uint64_t _mng_handle174);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock175, uint64_t _mng_handle176);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope177);
extern uint64_t LexResetScope(uint64_t _mng_scope178);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope179);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest180, uint64_t _mng_src181);
extern void LexGetToken(uint64_t _mng_token182);
extern void LexPutbackToken(uint64_t _mng_token183);
extern uint64_t LexMatchToken(uint64_t _mng_token184, uint64_t _mng_type185, uint64_t _mng_subtype186);
extern void LexError(uint64_t _mng_token187, uint64_t _mng_fmt188, uint64_t _mng_argv189, uint64_t _mng_argc190);
extern uint64_t LexCrunchNumber(uint64_t _mng_token191, uint64_t _mng_buffer192);
uint64_t LexStreamZone[2];
void LexInitializeStreamZone() {
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    __twr_v193 = (uint64_t)(&TlInitializeZone);
    __twr_v194 = (uint64_t)(&LexStreamZone);
    __twr_v195 = 93ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v193)(__twr_v194, __twr_v195);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexAllocateStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    __twr_v196 = (uint64_t)(&TlAllocateFromZone);
    __twr_v197 = (uint64_t)(&LexStreamZone);
    __twr_v198 = ((uint64_t (*)(uint64_t))__twr_v196)(__twr_v197);
    _jkl_retv = __twr_v198;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeStream(uint64_t _mng_stream199, uint64_t _mng_macro200) {
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    __twr_v201 = 0ULL;
    *(uint64_t*)(_mng_stream199) = __twr_v201;
    __twr_v202 = 8ULL;
    __twr_v203 = _mng_stream199 + __twr_v202;
    *(uint64_t*)(__twr_v203) = __twr_v201;
    __twr_v204 = 16ULL;
    __twr_v205 = _mng_stream199 + __twr_v204;
    *(uint64_t*)(__twr_v205) = __twr_v201;
    __twr_v206 = 24ULL;
    __twr_v207 = _mng_stream199 + __twr_v206;
    *(uint64_t*)(__twr_v207) = __twr_v201;
    __twr_v208 = 32ULL;
    __twr_v209 = _mng_stream199 + __twr_v208;
    *(uint32_t*)(__twr_v209) = __twr_v201;
    __twr_v210 = 36ULL;
    __twr_v211 = _mng_stream199 + __twr_v210;
    *(uint32_t*)(__twr_v211) = __twr_v201;
    __twr_v212 = 1ULL;
    __twr_v213 = 44ULL;
    __twr_v214 = _mng_stream199 + __twr_v213;
    *(uint32_t*)(__twr_v214) = __twr_v212;
    __twr_v215 = 48ULL;
    __twr_v216 = _mng_stream199 + __twr_v215;
    *(uint32_t*)(__twr_v216) = __twr_v212;
    __twr_v217 = 40ULL;
    __twr_v218 = _mng_stream199 + __twr_v217;
    *(uint32_t*)(__twr_v218) = __twr_v201;
    __twr_v219 = 56ULL;
    __twr_v220 = _mng_stream199 + __twr_v219;
    *(uint64_t*)(__twr_v220) = _mng_macro200;
    __twr_v221 = 64ULL;
    __twr_v222 = _mng_stream199 + __twr_v221;
    *(uint8_t*)(__twr_v222) = __twr_v201;
    __twr_v223 = 72ULL;
    __twr_v224 = _mng_stream199 + __twr_v223;
    *(uint64_t*)(__twr_v224) = __twr_v201;
    __twr_v225 = 80ULL;
    __twr_v226 = _mng_stream199 + __twr_v225;
    *(uint64_t*)(__twr_v226) = __twr_v201;
    __twr_v227 = 88ULL;
    __twr_v228 = _mng_stream199 + __twr_v227;
    *(uint8_t*)(__twr_v228) = __twr_v201;
    __twr_v229 = 89ULL;
    __twr_v230 = _mng_stream199 + __twr_v229;
    *(uint8_t*)(__twr_v230) = __twr_v201;
    __twr_v231 = 90ULL;
    __twr_v232 = _mng_stream199 + __twr_v231;
    *(uint8_t*)(__twr_v232) = __twr_v201;
    __twr_v233 = 91ULL;
    __twr_v234 = _mng_stream199 + __twr_v233;
    *(uint8_t*)(__twr_v234) = __twr_v201;
    __twr_v235 = 92ULL;
    __twr_v236 = _mng_stream199 + __twr_v235;
    *(uint8_t*)(__twr_v236) = __twr_v201;
    __twr_l3:;
    _jkl_epilogue:;
}
void LexUninitializeStream(uint64_t _mng_stream237) {
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    __twr_v238 = 56ULL;
    __twr_v239 = _mng_stream237 + __twr_v238;
    __twr_v240 = *(uint64_t*)(__twr_v239);
    if (__twr_v240) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v241 = (uint64_t)(&TlClose);
    __twr_v242 = 16ULL;
    __twr_v243 = _mng_stream237 + __twr_v242;
    __twr_v244 = *(uint64_t*)(__twr_v243);
    ((void (*)(uint64_t))__twr_v241)(__twr_v244);
    __twr_v245 = (uint64_t)(&TlFree);
    __twr_v246 = 24ULL;
    __twr_v247 = _mng_stream237 + __twr_v246;
    __twr_v248 = *(uint64_t*)(__twr_v247);
    ((void (*)(uint64_t))__twr_v245)(__twr_v248);
    __twr_l5:;
    __twr_l4:;
    _jkl_epilogue:;
}
void LexFreeStream(uint64_t _mng_stream249) {
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    __twr_v250 = (uint64_t)(&LexUninitializeStream);
    ((void (*)(uint64_t))__twr_v250)(_mng_stream249);
    __twr_v251 = (uint64_t)(&TlFreeToZone);
    __twr_v252 = (uint64_t)(&LexStreamZone);
    ((void (*)(uint64_t, uint64_t))__twr_v251)(__twr_v252, _mng_stream249);
    __twr_l7:;
    _jkl_epilogue:;
}
void LexPushStream(uint64_t _mng_stream253) {
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    __twr_v254 = (uint64_t)(&LexCurrentStream);
    __twr_v255 = *(uint64_t*)(__twr_v254);
    *(uint64_t*)(_mng_stream253) = __twr_v255;
    *(uint64_t*)(__twr_v254) = _mng_stream253;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t LexPopStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t _mng_oldstream258;
    uint64_t __twr_v259;
    __twr_v256 = (uint64_t)(&LexCurrentStream);
    __twr_v257 = *(uint64_t*)(__twr_v256);
    _mng_oldstream258 = __twr_v257;
    __twr_v259 = *(uint64_t*)(_mng_oldstream258);
    *(uint64_t*)(__twr_v256) = __twr_v259;
    _jkl_retv = _mng_oldstream258;
    goto _jkl_epilogue;
    __twr_l9:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeFileStream(uint64_t _mng_stream260, uint64_t _mng_fileblock261, uint64_t _mng_handle262) {
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t _mng_buffer268;
    uint64_t _mng_status269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    __twr_v263 = (uint64_t)(&LexInitializeStream);
    __twr_v264 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v263)(_mng_stream260, __twr_v264);
    __twr_v265 = (uint64_t)(&TlAlloc);
    __twr_v266 = 16384ULL;
    __twr_v267 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v265)(__twr_v266, (uint64_t)(&_mng_buffer268));
    _mng_status269 = __twr_v267;
    if (!(_mng_status269)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v270 = (uint64_t)(&TlInternalError);
    __twr_v271 = (uint64_t)(&"Failed to allocate lex buffer");
    __twr_v272 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v270)(__twr_v271, __twr_v272, __twr_v272, __twr_v272);
    __twr_l11:;
    __twr_v273 = 8ULL;
    __twr_v274 = _mng_stream260 + __twr_v273;
    *(uint64_t*)(__twr_v274) = _mng_fileblock261;
    __twr_v275 = 16ULL;
    __twr_v276 = _mng_stream260 + __twr_v275;
    *(uint64_t*)(__twr_v276) = _mng_handle262;
    __twr_v277 = 16384ULL;
    __twr_v278 = 32ULL;
    __twr_v279 = _mng_stream260 + __twr_v278;
    *(uint32_t*)(__twr_v279) = __twr_v277;
    __twr_v280 = 24ULL;
    __twr_v281 = _mng_stream260 + __twr_v280;
    *(uint64_t*)(__twr_v281) = _mng_buffer268;
    __twr_l10:;
    _jkl_epilogue:;
}
uint64_t LexCreateFileStream(uint64_t _mng_fileblock282, uint64_t _mng_handle283) {
    uint64_t _jkl_retv;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t _mng_stream286;
    uint64_t __twr_v287;
    __twr_v284 = (uint64_t)(&LexAllocateStream);
    __twr_v285 = ((uint64_t (*)())__twr_v284)();
    _mng_stream286 = __twr_v285;
    __twr_v287 = (uint64_t)(&LexInitializeFileStream);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v287)(_mng_stream286, _mng_fileblock282, _mng_handle283);
    _jkl_retv = _mng_stream286;
    goto _jkl_epilogue;
    __twr_l13:;
    _jkl_epilogue:;
    return _jkl_retv;
}
extern uint64_t PrsLeaveMacro();
uint64_t LexStreamNextCharacter() {
    uint64_t _jkl_retv;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t _mng_stream292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t _mng_byte301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t _mng_macro345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t _mng_VARTABLE427[1];
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    __twr_v288 = (uint64_t)(&LexCurrentStream);
    __twr_v289 = *(uint64_t*)(__twr_v288);
    if (!(__twr_v289)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v290 = (uint64_t)(&LexCurrentStream);
    __twr_v291 = *(uint64_t*)(__twr_v290);
    _mng_stream292 = __twr_v291;
    __twr_v293 = 92ULL;
    __twr_v294 = _mng_stream292 + __twr_v293;
    __twr_v295 = *(uint8_t*)(__twr_v294);
    if (!(__twr_v295)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v296 = (uint64_t)(&LexCurrentStream);
    __twr_v297 = *(uint64_t*)(__twr_v296);
    __twr_v298 = 92ULL;
    __twr_v299 = __twr_v297 + __twr_v298;
    __twr_v300 = *(uint8_t*)(__twr_v299);
    _mng_byte301 = __twr_v300;
    __twr_v302 = 0ULL;
    *(uint8_t*)(__twr_v299) = __twr_v302;
    _jkl_retv = _mng_byte301;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l20:;
    __twr_v303 = 91ULL;
    __twr_v304 = _mng_stream292 + __twr_v303;
    __twr_v305 = *(uint8_t*)(__twr_v304);
    if (!(__twr_v305)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v306 = (uint64_t)(&LexCurrentStream);
    __twr_v307 = *(uint64_t*)(__twr_v306);
    __twr_v308 = 91ULL;
    __twr_v309 = __twr_v307 + __twr_v308;
    __twr_v310 = *(uint8_t*)(__twr_v309);
    _mng_byte301 = __twr_v310;
    __twr_v311 = 0ULL;
    *(uint8_t*)(__twr_v309) = __twr_v311;
    _jkl_retv = _mng_byte301;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l22:;
    __twr_v312 = 40ULL;
    __twr_v313 = _mng_stream292 + __twr_v312;
    __twr_v314 = *(uint32_t*)(__twr_v313);
    __twr_v315 = 36ULL;
    __twr_v316 = _mng_stream292 + __twr_v315;
    __twr_v317 = *(uint32_t*)(__twr_v316);
    if (__twr_v314 >= __twr_v317) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v318 = 24ULL;
    __twr_v319 = _mng_stream292 + __twr_v318;
    __twr_v320 = *(uint64_t*)(__twr_v319);
    __twr_v321 = 40ULL;
    __twr_v322 = _mng_stream292 + __twr_v321;
    __twr_v323 = *(uint32_t*)(__twr_v322);
    __twr_v324 = 1ULL;
    __twr_v325 = __twr_v320 + __twr_v323;
    __twr_v326 = *(uint8_t*)(__twr_v325);
    _mng_byte301 = __twr_v326;
    __twr_v327 = __twr_v323 + __twr_v324;
    *(uint32_t*)(__twr_v322) = __twr_v327;
    goto __twr_l18;
    __twr_l24:;
    __twr_v328 = 56ULL;
    __twr_v329 = _mng_stream292 + __twr_v328;
    __twr_v330 = *(uint64_t*)(__twr_v329);
    if (!(__twr_v330)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v331 = 64ULL;
    __twr_v332 = _mng_stream292 + __twr_v331;
    __twr_v333 = *(uint8_t*)(__twr_v332);
    if (__twr_v333) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v334 = 1ULL;
    __twr_v335 = 64ULL;
    __twr_v336 = _mng_stream292 + __twr_v335;
    *(uint8_t*)(__twr_v336) = __twr_v334;
    __twr_v337 = 10ULL;
    _jkl_retv = __twr_v337;
    goto _jkl_epilogue;
    __twr_l27:;
    __twr_v338 = 1ULL;
    __twr_v339 = (uint64_t)(&LexMacroDepth);
    __twr_v340 = *(uint32_t*)(__twr_v339);
    __twr_v341 = __twr_v340 - __twr_v338;
    *(uint32_t*)(__twr_v339) = __twr_v341;
    __twr_v342 = 56ULL;
    __twr_v343 = _mng_stream292 + __twr_v342;
    __twr_v344 = *(uint64_t*)(__twr_v343);
    _mng_macro345 = __twr_v344;
    __twr_v346 = 257ULL;
    __twr_v347 = _mng_macro345 + __twr_v346;
    __twr_v348 = *(uint8_t*)(__twr_v347);
    if (__twr_v348) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v349 = 72ULL;
    __twr_v350 = _mng_stream292 + __twr_v349;
    __twr_v351 = *(uint64_t*)(__twr_v350);
    __twr_v352 = (uint64_t)(&LexRootScope);
    __twr_v353 = *(uint64_t*)(__twr_v352);
    if (__twr_v351 == __twr_v353) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v354 = (uint64_t)(&LexCurrentScope);
    __twr_v355 = *(uint64_t*)(__twr_v354);
    __twr_v356 = *(uint64_t*)(__twr_v355);
    __twr_v357 = *(uint64_t*)(__twr_v356);
    if (!(__twr_v357)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v358 = (uint64_t)(&LexError);
    __twr_v359 = 0ULL;
    __twr_v360 = (uint64_t)(&"Macro terminated during nested scope\n");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v358)(__twr_v359, __twr_v360, __twr_v359, __twr_v359);
    __twr_l34:;
    __twr_v361 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v362 = (uint64_t)(&LexCurrentScope);
    __twr_v363 = *(uint64_t*)(__twr_v362);
    __twr_v364 = ((uint64_t (*)(uint64_t))__twr_v361)(__twr_v363);
    goto __twr_l31;
    __twr_l33:;
    __twr_v365 = (uint64_t)(&LexCurrentScope);
    __twr_v366 = *(uint64_t*)(__twr_v365);
    __twr_v367 = (uint64_t)(&LexRootScope);
    __twr_v368 = *(uint64_t*)(__twr_v367);
    if (__twr_v366 == __twr_v368) { goto __twr_l31; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v369 = (uint64_t)(&LexError);
    __twr_v370 = 0ULL;
    __twr_v371 = (uint64_t)(&"Macro terminated during nested scope\n");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v369)(__twr_v370, __twr_v371, __twr_v370, __twr_v370);
    __twr_l31:;
    __twr_v372 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v373 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v374 = *(uint64_t*)(__twr_v373);
    __twr_v375 = ((uint64_t (*)(uint64_t))__twr_v372)(__twr_v374);
    __twr_l29:;
    __twr_v376 = (uint64_t)(&PrsLeaveMacro);
    __twr_v377 = ((uint64_t (*)())__twr_v376)();
    if (__twr_v377) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v378 = (uint64_t)(&LexError);
    __twr_v379 = 0ULL;
    __twr_v380 = (uint64_t)(&"Macro terminated during nested block\n");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v378)(__twr_v379, __twr_v380, __twr_v379, __twr_v379);
    __twr_l37:;
    __twr_v381 = 72ULL;
    __twr_v382 = _mng_stream292 + __twr_v381;
    __twr_v383 = *(uint64_t*)(__twr_v382);
    __twr_v384 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v384) = __twr_v383;
    __twr_v385 = 80ULL;
    __twr_v386 = _mng_stream292 + __twr_v385;
    __twr_v387 = *(uint64_t*)(__twr_v386);
    __twr_v388 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v388) = __twr_v387;
    __twr_v389 = (uint64_t)(&LexFreeStream);
    __twr_v390 = (uint64_t)(&LexPopStream);
    __twr_v391 = ((uint64_t (*)())__twr_v390)();
    ((void (*)(uint64_t))__twr_v389)(__twr_v391);
    goto __twr_l17;
    goto __twr_l18;
    __twr_l26:;
    __twr_v392 = (uint64_t)(&TlReadFile);
    __twr_v393 = 16ULL;
    __twr_v394 = _mng_stream292 + __twr_v393;
    __twr_v395 = *(uint64_t*)(__twr_v394);
    __twr_v396 = 32ULL;
    __twr_v397 = _mng_stream292 + __twr_v396;
    __twr_v398 = *(uint32_t*)(__twr_v397);
    __twr_v399 = 24ULL;
    __twr_v400 = _mng_stream292 + __twr_v399;
    __twr_v401 = *(uint64_t*)(__twr_v400);
    __twr_v402 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v392)(__twr_v395, __twr_v398, __twr_v401);
    __twr_v403 = 36ULL;
    __twr_v404 = _mng_stream292 + __twr_v403;
    *(uint32_t*)(__twr_v404) = __twr_v402;
    __twr_v405 = *(uint32_t*)(__twr_v404);
    if (__twr_v405) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v406 = 64ULL;
    __twr_v407 = _mng_stream292 + __twr_v406;
    __twr_v408 = *(uint8_t*)(__twr_v407);
    if (__twr_v408) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v409 = 1ULL;
    __twr_v410 = 64ULL;
    __twr_v411 = _mng_stream292 + __twr_v410;
    *(uint8_t*)(__twr_v411) = __twr_v409;
    __twr_v412 = 10ULL;
    _jkl_retv = __twr_v412;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v413 = (uint64_t)(&LexFreeStream);
    __twr_v414 = (uint64_t)(&LexPopStream);
    __twr_v415 = ((uint64_t (*)())__twr_v414)();
    ((void (*)(uint64_t))__twr_v413)(__twr_v415);
    goto __twr_l17;
    __twr_l39:;
    __twr_v416 = 1ULL;
    __twr_v417 = 40ULL;
    __twr_v418 = _mng_stream292 + __twr_v417;
    *(uint32_t*)(__twr_v418) = __twr_v416;
    __twr_v419 = 24ULL;
    __twr_v420 = _mng_stream292 + __twr_v419;
    __twr_v421 = *(uint64_t*)(__twr_v420);
    __twr_v422 = *(uint8_t*)(__twr_v421);
    _mng_byte301 = __twr_v422;
    __twr_l18:;
    if (_mng_byte301) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v423 = (uint64_t)(&LexError);
    __twr_v424 = 0ULL;
    __twr_v425 = (uint64_t)(&"An invalid byte %d was found in the source file.");
    __twr_v426 = (uint64_t)(&_mng_VARTABLE427);
    *(uint64_t*)(__twr_v426) = _mng_byte301;
    __twr_v428 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v423)(__twr_v424, __twr_v425, __twr_v426, __twr_v428);
    goto __twr_l43;
    __twr_l45:;
    __twr_v429 = 13ULL;
    if (_mng_byte301 != __twr_v429) { goto __twr_l47; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v430 = (uint64_t)(&LexError);
    __twr_v431 = 0ULL;
    __twr_v432 = (uint64_t)(&"DOS line endings were detected in the source file.");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v430)(__twr_v431, __twr_v432, __twr_v431, __twr_v431);
    goto __twr_l43;
    __twr_l47:;
    __twr_v433 = 10ULL;
    if (_mng_byte301 != __twr_v433) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v434 = 1ULL;
    __twr_v435 = 44ULL;
    __twr_v436 = _mng_stream292 + __twr_v435;
    __twr_v437 = *(uint32_t*)(__twr_v436);
    __twr_v438 = __twr_v437 + __twr_v434;
    *(uint32_t*)(__twr_v436) = __twr_v438;
    __twr_v439 = 48ULL;
    __twr_v440 = _mng_stream292 + __twr_v439;
    *(uint32_t*)(__twr_v440) = __twr_v434;
    __twr_v441 = 64ULL;
    __twr_v442 = _mng_stream292 + __twr_v441;
    *(uint8_t*)(__twr_v442) = __twr_v434;
    goto __twr_l43;
    __twr_l49:;
    __twr_v443 = 1ULL;
    __twr_v444 = 48ULL;
    __twr_v445 = _mng_stream292 + __twr_v444;
    __twr_v446 = *(uint32_t*)(__twr_v445);
    __twr_v447 = __twr_v446 + __twr_v443;
    *(uint32_t*)(__twr_v445) = __twr_v447;
    __twr_v448 = 0ULL;
    __twr_v449 = 64ULL;
    __twr_v450 = _mng_stream292 + __twr_v449;
    *(uint8_t*)(__twr_v450) = __twr_v448;
    __twr_l43:;
    _jkl_retv = _mng_byte301;
    goto _jkl_epilogue;
    __twr_l17:;
    __twr_v451 = (uint64_t)(&LexCurrentStream);
    __twr_v452 = *(uint64_t*)(__twr_v451);
    if (__twr_v452) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v453 = 0ULL;
    _jkl_retv = __twr_v453;
    goto _jkl_epilogue;
    __twr_l14:;
    _jkl_epilogue:;
    return _jkl_retv;
}

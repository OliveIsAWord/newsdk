#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern void JklCompileProgram(uint64_t _mng_argc123, uint64_t _mng_argv124);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg125);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename126, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock127, uint64_t _mng_filepath128);
extern uint64_t LexLookupSection(uint64_t _mng_name129);
extern void LexPushSection(uint64_t _mng_section130);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope131);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg132);
extern void LexExpandMacro(uint64_t _mng_macro133, uint64_t _mng_token134);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream135, uint64_t _mng_macro136);
extern void LexUninitializeStream(uint64_t _mng_stream137);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream138);
extern void LexPushStream(uint64_t _mng_stream139);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream140, uint64_t _mng_fileblock141, uint64_t _mng_handle142);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock143, uint64_t _mng_handle144);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope145);
extern uint64_t LexResetScope(uint64_t _mng_scope146);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope147);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest148, uint64_t _mng_src149);
extern void LexGetToken(uint64_t _mng_token150);
extern void LexPutbackToken(uint64_t _mng_token151);
extern uint64_t LexMatchToken(uint64_t _mng_token152, uint64_t _mng_type153, uint64_t _mng_subtype154);
extern void LexStreamError(uint64_t _mng_str155, uint64_t _mng_err1156, uint64_t _mng_err2157, uint64_t _mng_err3158);
extern void LexTokenError(uint64_t _mng_token159, uint64_t _mng_str160, uint64_t _mng_err1161, uint64_t _mng_err2162, uint64_t _mng_err3163);
extern uint64_t LexCrunchNumber(uint64_t _mng_token164, uint64_t _mng_buffer165);
uint64_t LexStreamZone[2];
void LexInitializeStreamZone() {
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    __twr_v166 = (uint64_t)(&TlInitializeZone);
    __twr_v167 = (uint64_t)(&LexStreamZone);
    __twr_v168 = 93ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v166)(__twr_v167, __twr_v168);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexAllocateStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    __twr_v169 = (uint64_t)(&TlAllocateFromZone);
    __twr_v170 = (uint64_t)(&LexStreamZone);
    __twr_v171 = ((uint64_t (*)(uint64_t))__twr_v169)(__twr_v170);
    _jkl_retv = __twr_v171;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeStream(uint64_t _mng_stream172, uint64_t _mng_macro173) {
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    __twr_v174 = 0ULL;
    *(uint64_t*)(_mng_stream172) = __twr_v174;
    __twr_v175 = 8ULL;
    __twr_v176 = _mng_stream172 + __twr_v175;
    *(uint64_t*)(__twr_v176) = __twr_v174;
    __twr_v177 = 16ULL;
    __twr_v178 = _mng_stream172 + __twr_v177;
    *(uint64_t*)(__twr_v178) = __twr_v174;
    __twr_v179 = 24ULL;
    __twr_v180 = _mng_stream172 + __twr_v179;
    *(uint64_t*)(__twr_v180) = __twr_v174;
    __twr_v181 = 32ULL;
    __twr_v182 = _mng_stream172 + __twr_v181;
    *(uint32_t*)(__twr_v182) = __twr_v174;
    __twr_v183 = 36ULL;
    __twr_v184 = _mng_stream172 + __twr_v183;
    *(uint32_t*)(__twr_v184) = __twr_v174;
    __twr_v185 = 1ULL;
    __twr_v186 = 44ULL;
    __twr_v187 = _mng_stream172 + __twr_v186;
    *(uint32_t*)(__twr_v187) = __twr_v185;
    __twr_v188 = 48ULL;
    __twr_v189 = _mng_stream172 + __twr_v188;
    *(uint32_t*)(__twr_v189) = __twr_v185;
    __twr_v190 = 40ULL;
    __twr_v191 = _mng_stream172 + __twr_v190;
    *(uint32_t*)(__twr_v191) = __twr_v174;
    __twr_v192 = 56ULL;
    __twr_v193 = _mng_stream172 + __twr_v192;
    *(uint64_t*)(__twr_v193) = _mng_macro173;
    __twr_v194 = 64ULL;
    __twr_v195 = _mng_stream172 + __twr_v194;
    *(uint8_t*)(__twr_v195) = __twr_v174;
    __twr_v196 = 72ULL;
    __twr_v197 = _mng_stream172 + __twr_v196;
    *(uint64_t*)(__twr_v197) = __twr_v174;
    __twr_v198 = 80ULL;
    __twr_v199 = _mng_stream172 + __twr_v198;
    *(uint64_t*)(__twr_v199) = __twr_v174;
    __twr_v200 = 88ULL;
    __twr_v201 = _mng_stream172 + __twr_v200;
    *(uint8_t*)(__twr_v201) = __twr_v174;
    __twr_v202 = 89ULL;
    __twr_v203 = _mng_stream172 + __twr_v202;
    *(uint8_t*)(__twr_v203) = __twr_v174;
    __twr_v204 = 90ULL;
    __twr_v205 = _mng_stream172 + __twr_v204;
    *(uint8_t*)(__twr_v205) = __twr_v174;
    __twr_v206 = 91ULL;
    __twr_v207 = _mng_stream172 + __twr_v206;
    *(uint8_t*)(__twr_v207) = __twr_v174;
    __twr_v208 = 92ULL;
    __twr_v209 = _mng_stream172 + __twr_v208;
    *(uint8_t*)(__twr_v209) = __twr_v174;
    __twr_l3:;
    _jkl_epilogue:;
}
void LexUninitializeStream(uint64_t _mng_stream210) {
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    __twr_v211 = 56ULL;
    __twr_v212 = _mng_stream210 + __twr_v211;
    __twr_v213 = *(uint64_t*)(__twr_v212);
    if (__twr_v213) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v214 = (uint64_t)(&TlClose);
    __twr_v215 = 16ULL;
    __twr_v216 = _mng_stream210 + __twr_v215;
    __twr_v217 = *(uint64_t*)(__twr_v216);
    ((void (*)(uint64_t))__twr_v214)(__twr_v217);
    __twr_v218 = (uint64_t)(&TlFree);
    __twr_v219 = 24ULL;
    __twr_v220 = _mng_stream210 + __twr_v219;
    __twr_v221 = *(uint64_t*)(__twr_v220);
    ((void (*)(uint64_t))__twr_v218)(__twr_v221);
    __twr_l5:;
    __twr_l4:;
    _jkl_epilogue:;
}
void LexFreeStream(uint64_t _mng_stream222) {
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    __twr_v223 = (uint64_t)(&LexUninitializeStream);
    ((void (*)(uint64_t))__twr_v223)(_mng_stream222);
    __twr_v224 = (uint64_t)(&TlFreeToZone);
    __twr_v225 = (uint64_t)(&LexStreamZone);
    ((void (*)(uint64_t, uint64_t))__twr_v224)(__twr_v225, _mng_stream222);
    __twr_l7:;
    _jkl_epilogue:;
}
void LexPushStream(uint64_t _mng_stream226) {
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    __twr_v227 = (uint64_t)(&LexCurrentStream);
    __twr_v228 = *(uint64_t*)(__twr_v227);
    *(uint64_t*)(_mng_stream226) = __twr_v228;
    *(uint64_t*)(__twr_v227) = _mng_stream226;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t LexPopStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t _mng_oldstream231;
    uint64_t __twr_v232;
    __twr_v229 = (uint64_t)(&LexCurrentStream);
    __twr_v230 = *(uint64_t*)(__twr_v229);
    _mng_oldstream231 = __twr_v230;
    __twr_v232 = *(uint64_t*)(_mng_oldstream231);
    *(uint64_t*)(__twr_v229) = __twr_v232;
    _jkl_retv = _mng_oldstream231;
    goto _jkl_epilogue;
    __twr_l9:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeFileStream(uint64_t _mng_stream233, uint64_t _mng_fileblock234, uint64_t _mng_handle235) {
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t _mng_buffer241;
    uint64_t _mng_status242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    __twr_v236 = (uint64_t)(&LexInitializeStream);
    __twr_v237 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v236)(_mng_stream233, __twr_v237);
    __twr_v238 = (uint64_t)(&TlAlloc);
    __twr_v239 = 16384ULL;
    __twr_v240 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v238)(__twr_v239, (uint64_t)(&_mng_buffer241));
    _mng_status242 = __twr_v240;
    if (!(_mng_status242)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v243 = (uint64_t)(&TlInternalError);
    __twr_v244 = (uint64_t)(&"Failed to allocate lex buffer");
    __twr_v245 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v243)(__twr_v244, __twr_v245, __twr_v245, __twr_v245);
    __twr_l11:;
    __twr_v246 = 8ULL;
    __twr_v247 = _mng_stream233 + __twr_v246;
    *(uint64_t*)(__twr_v247) = _mng_fileblock234;
    __twr_v248 = 16ULL;
    __twr_v249 = _mng_stream233 + __twr_v248;
    *(uint64_t*)(__twr_v249) = _mng_handle235;
    __twr_v250 = 16384ULL;
    __twr_v251 = 32ULL;
    __twr_v252 = _mng_stream233 + __twr_v251;
    *(uint32_t*)(__twr_v252) = __twr_v250;
    __twr_v253 = 24ULL;
    __twr_v254 = _mng_stream233 + __twr_v253;
    *(uint64_t*)(__twr_v254) = _mng_buffer241;
    __twr_l10:;
    _jkl_epilogue:;
}
uint64_t LexCreateFileStream(uint64_t _mng_fileblock255, uint64_t _mng_handle256) {
    uint64_t _jkl_retv;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t _mng_stream259;
    uint64_t __twr_v260;
    __twr_v257 = (uint64_t)(&LexAllocateStream);
    __twr_v258 = ((uint64_t (*)())__twr_v257)();
    _mng_stream259 = __twr_v258;
    __twr_v260 = (uint64_t)(&LexInitializeFileStream);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v260)(_mng_stream259, _mng_fileblock255, _mng_handle256);
    _jkl_retv = _mng_stream259;
    goto _jkl_epilogue;
    __twr_l13:;
    _jkl_epilogue:;
    return _jkl_retv;
}
extern uint64_t PrsLeaveMacro();
uint64_t LexStreamNextCharacter() {
    uint64_t _jkl_retv;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t _mng_stream265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t _mng_byte274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t _mng_macro318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    __twr_v261 = (uint64_t)(&LexCurrentStream);
    __twr_v262 = *(uint64_t*)(__twr_v261);
    if (!(__twr_v262)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v263 = (uint64_t)(&LexCurrentStream);
    __twr_v264 = *(uint64_t*)(__twr_v263);
    _mng_stream265 = __twr_v264;
    __twr_v266 = 92ULL;
    __twr_v267 = _mng_stream265 + __twr_v266;
    __twr_v268 = *(uint8_t*)(__twr_v267);
    if (!(__twr_v268)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v269 = (uint64_t)(&LexCurrentStream);
    __twr_v270 = *(uint64_t*)(__twr_v269);
    __twr_v271 = 92ULL;
    __twr_v272 = __twr_v270 + __twr_v271;
    __twr_v273 = *(uint8_t*)(__twr_v272);
    _mng_byte274 = __twr_v273;
    __twr_v275 = 0ULL;
    *(uint8_t*)(__twr_v272) = __twr_v275;
    _jkl_retv = _mng_byte274;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l20:;
    __twr_v276 = 91ULL;
    __twr_v277 = _mng_stream265 + __twr_v276;
    __twr_v278 = *(uint8_t*)(__twr_v277);
    if (!(__twr_v278)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v279 = (uint64_t)(&LexCurrentStream);
    __twr_v280 = *(uint64_t*)(__twr_v279);
    __twr_v281 = 91ULL;
    __twr_v282 = __twr_v280 + __twr_v281;
    __twr_v283 = *(uint8_t*)(__twr_v282);
    _mng_byte274 = __twr_v283;
    __twr_v284 = 0ULL;
    *(uint8_t*)(__twr_v282) = __twr_v284;
    _jkl_retv = _mng_byte274;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l22:;
    __twr_v285 = 40ULL;
    __twr_v286 = _mng_stream265 + __twr_v285;
    __twr_v287 = *(uint32_t*)(__twr_v286);
    __twr_v288 = 36ULL;
    __twr_v289 = _mng_stream265 + __twr_v288;
    __twr_v290 = *(uint32_t*)(__twr_v289);
    if (__twr_v287 >= __twr_v290) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v291 = 24ULL;
    __twr_v292 = _mng_stream265 + __twr_v291;
    __twr_v293 = *(uint64_t*)(__twr_v292);
    __twr_v294 = 40ULL;
    __twr_v295 = _mng_stream265 + __twr_v294;
    __twr_v296 = *(uint32_t*)(__twr_v295);
    __twr_v297 = 1ULL;
    __twr_v298 = __twr_v293 + __twr_v296;
    __twr_v299 = *(uint8_t*)(__twr_v298);
    _mng_byte274 = __twr_v299;
    __twr_v300 = __twr_v296 + __twr_v297;
    *(uint32_t*)(__twr_v295) = __twr_v300;
    goto __twr_l18;
    __twr_l24:;
    __twr_v301 = 56ULL;
    __twr_v302 = _mng_stream265 + __twr_v301;
    __twr_v303 = *(uint64_t*)(__twr_v302);
    if (!(__twr_v303)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v304 = 64ULL;
    __twr_v305 = _mng_stream265 + __twr_v304;
    __twr_v306 = *(uint8_t*)(__twr_v305);
    if (__twr_v306) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v307 = 1ULL;
    __twr_v308 = 64ULL;
    __twr_v309 = _mng_stream265 + __twr_v308;
    *(uint8_t*)(__twr_v309) = __twr_v307;
    __twr_v310 = 10ULL;
    _jkl_retv = __twr_v310;
    goto _jkl_epilogue;
    __twr_l27:;
    __twr_v311 = 1ULL;
    __twr_v312 = (uint64_t)(&LexMacroDepth);
    __twr_v313 = *(uint32_t*)(__twr_v312);
    __twr_v314 = __twr_v313 - __twr_v311;
    *(uint32_t*)(__twr_v312) = __twr_v314;
    __twr_v315 = 56ULL;
    __twr_v316 = _mng_stream265 + __twr_v315;
    __twr_v317 = *(uint64_t*)(__twr_v316);
    _mng_macro318 = __twr_v317;
    __twr_v319 = 257ULL;
    __twr_v320 = _mng_macro318 + __twr_v319;
    __twr_v321 = *(uint8_t*)(__twr_v320);
    if (__twr_v321) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v322 = 72ULL;
    __twr_v323 = _mng_stream265 + __twr_v322;
    __twr_v324 = *(uint64_t*)(__twr_v323);
    __twr_v325 = (uint64_t)(&LexRootScope);
    __twr_v326 = *(uint64_t*)(__twr_v325);
    if (__twr_v324 == __twr_v326) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v327 = (uint64_t)(&LexCurrentScope);
    __twr_v328 = *(uint64_t*)(__twr_v327);
    __twr_v329 = *(uint64_t*)(__twr_v328);
    __twr_v330 = *(uint64_t*)(__twr_v329);
    if (!(__twr_v330)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v331 = (uint64_t)(&LexStreamError);
    __twr_v332 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v333 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v331)(__twr_v332, __twr_v333, __twr_v333, __twr_v333);
    __twr_l34:;
    __twr_v334 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v335 = (uint64_t)(&LexCurrentScope);
    __twr_v336 = *(uint64_t*)(__twr_v335);
    __twr_v337 = ((uint64_t (*)(uint64_t))__twr_v334)(__twr_v336);
    goto __twr_l31;
    __twr_l33:;
    __twr_v338 = (uint64_t)(&LexCurrentScope);
    __twr_v339 = *(uint64_t*)(__twr_v338);
    __twr_v340 = (uint64_t)(&LexRootScope);
    __twr_v341 = *(uint64_t*)(__twr_v340);
    if (__twr_v339 == __twr_v341) { goto __twr_l31; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v342 = (uint64_t)(&LexStreamError);
    __twr_v343 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v344 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v342)(__twr_v343, __twr_v344, __twr_v344, __twr_v344);
    __twr_l31:;
    __twr_v345 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v346 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v347 = *(uint64_t*)(__twr_v346);
    __twr_v348 = ((uint64_t (*)(uint64_t))__twr_v345)(__twr_v347);
    __twr_l29:;
    __twr_v349 = (uint64_t)(&PrsLeaveMacro);
    __twr_v350 = ((uint64_t (*)())__twr_v349)();
    if (__twr_v350) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v351 = (uint64_t)(&LexStreamError);
    __twr_v352 = (uint64_t)(&"Macro terminated during nested block");
    __twr_v353 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v351)(__twr_v352, __twr_v353, __twr_v353, __twr_v353);
    __twr_l37:;
    __twr_v354 = 72ULL;
    __twr_v355 = _mng_stream265 + __twr_v354;
    __twr_v356 = *(uint64_t*)(__twr_v355);
    __twr_v357 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v357) = __twr_v356;
    __twr_v358 = 80ULL;
    __twr_v359 = _mng_stream265 + __twr_v358;
    __twr_v360 = *(uint64_t*)(__twr_v359);
    __twr_v361 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v361) = __twr_v360;
    __twr_v362 = (uint64_t)(&LexFreeStream);
    __twr_v363 = (uint64_t)(&LexPopStream);
    __twr_v364 = ((uint64_t (*)())__twr_v363)();
    ((void (*)(uint64_t))__twr_v362)(__twr_v364);
    goto __twr_l17;
    goto __twr_l18;
    __twr_l26:;
    __twr_v365 = (uint64_t)(&TlReadFile);
    __twr_v366 = 16ULL;
    __twr_v367 = _mng_stream265 + __twr_v366;
    __twr_v368 = *(uint64_t*)(__twr_v367);
    __twr_v369 = 32ULL;
    __twr_v370 = _mng_stream265 + __twr_v369;
    __twr_v371 = *(uint32_t*)(__twr_v370);
    __twr_v372 = 24ULL;
    __twr_v373 = _mng_stream265 + __twr_v372;
    __twr_v374 = *(uint64_t*)(__twr_v373);
    __twr_v375 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v365)(__twr_v368, __twr_v371, __twr_v374);
    __twr_v376 = 36ULL;
    __twr_v377 = _mng_stream265 + __twr_v376;
    *(uint32_t*)(__twr_v377) = __twr_v375;
    __twr_v378 = *(uint32_t*)(__twr_v377);
    if (__twr_v378) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v379 = 64ULL;
    __twr_v380 = _mng_stream265 + __twr_v379;
    __twr_v381 = *(uint8_t*)(__twr_v380);
    if (__twr_v381) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v382 = 1ULL;
    __twr_v383 = 64ULL;
    __twr_v384 = _mng_stream265 + __twr_v383;
    *(uint8_t*)(__twr_v384) = __twr_v382;
    __twr_v385 = 10ULL;
    _jkl_retv = __twr_v385;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v386 = (uint64_t)(&LexFreeStream);
    __twr_v387 = (uint64_t)(&LexPopStream);
    __twr_v388 = ((uint64_t (*)())__twr_v387)();
    ((void (*)(uint64_t))__twr_v386)(__twr_v388);
    goto __twr_l17;
    __twr_l39:;
    __twr_v389 = 1ULL;
    __twr_v390 = 40ULL;
    __twr_v391 = _mng_stream265 + __twr_v390;
    *(uint32_t*)(__twr_v391) = __twr_v389;
    __twr_v392 = 24ULL;
    __twr_v393 = _mng_stream265 + __twr_v392;
    __twr_v394 = *(uint64_t*)(__twr_v393);
    __twr_v395 = *(uint8_t*)(__twr_v394);
    _mng_byte274 = __twr_v395;
    __twr_l18:;
    if (_mng_byte274) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v396 = (uint64_t)(&LexStreamError);
    __twr_v397 = (uint64_t)(&"An invalid byte was found in the source file.");
    __twr_v398 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v396)(__twr_v397, _mng_byte274, __twr_v398, __twr_v398);
    goto __twr_l43;
    __twr_l45:;
    __twr_v399 = 13ULL;
    if (_mng_byte274 != __twr_v399) { goto __twr_l47; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v400 = (uint64_t)(&LexStreamError);
    __twr_v401 = (uint64_t)(&"DOS line endings were detected in the source file.");
    __twr_v402 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v400)(__twr_v401, __twr_v402, __twr_v402, __twr_v402);
    goto __twr_l43;
    __twr_l47:;
    __twr_v403 = 10ULL;
    if (_mng_byte274 != __twr_v403) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v404 = 1ULL;
    __twr_v405 = 44ULL;
    __twr_v406 = _mng_stream265 + __twr_v405;
    __twr_v407 = *(uint32_t*)(__twr_v406);
    __twr_v408 = __twr_v407 + __twr_v404;
    *(uint32_t*)(__twr_v406) = __twr_v408;
    __twr_v409 = 48ULL;
    __twr_v410 = _mng_stream265 + __twr_v409;
    *(uint32_t*)(__twr_v410) = __twr_v404;
    __twr_v411 = 64ULL;
    __twr_v412 = _mng_stream265 + __twr_v411;
    *(uint8_t*)(__twr_v412) = __twr_v404;
    goto __twr_l43;
    __twr_l49:;
    __twr_v413 = 1ULL;
    __twr_v414 = 48ULL;
    __twr_v415 = _mng_stream265 + __twr_v414;
    __twr_v416 = *(uint32_t*)(__twr_v415);
    __twr_v417 = __twr_v416 + __twr_v413;
    *(uint32_t*)(__twr_v415) = __twr_v417;
    __twr_v418 = 0ULL;
    __twr_v419 = 64ULL;
    __twr_v420 = _mng_stream265 + __twr_v419;
    *(uint8_t*)(__twr_v420) = __twr_v418;
    __twr_l43:;
    _jkl_retv = _mng_byte274;
    goto _jkl_epilogue;
    __twr_l17:;
    __twr_v421 = (uint64_t)(&LexCurrentStream);
    __twr_v422 = *(uint64_t*)(__twr_v421);
    if (__twr_v422) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v423 = 0ULL;
    _jkl_retv = __twr_v423;
    goto _jkl_epilogue;
    __twr_l14:;
    _jkl_epilogue:;
    return _jkl_retv;
}

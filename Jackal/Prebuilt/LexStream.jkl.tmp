#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg161);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename162, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock163, uint64_t _mng_filepath164);
extern uint64_t LexLookupSection(uint64_t _mng_name165);
extern void LexPushSection(uint64_t _mng_section166);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope167);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg168);
extern void LexExpandMacro(uint64_t _mng_macro169, uint64_t _mng_token170);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream171, uint64_t _mng_macro172);
extern void LexUninitializeStream(uint64_t _mng_stream173);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream174);
extern void LexPushStream(uint64_t _mng_stream175);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream176, uint64_t _mng_fileblock177, uint64_t _mng_handle178);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock179, uint64_t _mng_handle180);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope181);
extern uint64_t LexResetScope(uint64_t _mng_scope182);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope183);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest184, uint64_t _mng_src185);
extern void LexGetToken(uint64_t _mng_token186);
extern void LexPutbackToken(uint64_t _mng_token187);
extern uint64_t LexMatchToken(uint64_t _mng_token188, uint64_t _mng_type189, uint64_t _mng_subtype190);
extern void LexStreamError(uint64_t _mng_str191, uint64_t _mng_err1192, uint64_t _mng_err2193, uint64_t _mng_err3194);
extern void LexTokenError(uint64_t _mng_token195, uint64_t _mng_str196, uint64_t _mng_err1197, uint64_t _mng_err2198, uint64_t _mng_err3199);
extern uint64_t LexCrunchNumber(uint64_t _mng_token200, uint64_t _mng_buffer201);
uint64_t LexStreamZone[2];
void LexInitializeStreamZone() {
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    __twr_v202 = (uint64_t)(&TlInitializeZone);
    __twr_v203 = (uint64_t)(&LexStreamZone);
    __twr_v204 = 93ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v202)(__twr_v203, __twr_v204);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexAllocateStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    __twr_v205 = (uint64_t)(&TlAllocateFromZone);
    __twr_v206 = (uint64_t)(&LexStreamZone);
    __twr_v207 = ((uint64_t (*)(uint64_t))__twr_v205)(__twr_v206);
    _jkl_retv = __twr_v207;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeStream(uint64_t _mng_stream208, uint64_t _mng_macro209) {
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    __twr_v210 = 0ULL;
    *(uint64_t*)(_mng_stream208) = __twr_v210;
    __twr_v211 = 8ULL;
    __twr_v212 = _mng_stream208 + __twr_v211;
    *(uint64_t*)(__twr_v212) = __twr_v210;
    __twr_v213 = 16ULL;
    __twr_v214 = _mng_stream208 + __twr_v213;
    *(uint64_t*)(__twr_v214) = __twr_v210;
    __twr_v215 = 24ULL;
    __twr_v216 = _mng_stream208 + __twr_v215;
    *(uint64_t*)(__twr_v216) = __twr_v210;
    __twr_v217 = 32ULL;
    __twr_v218 = _mng_stream208 + __twr_v217;
    *(uint32_t*)(__twr_v218) = __twr_v210;
    __twr_v219 = 36ULL;
    __twr_v220 = _mng_stream208 + __twr_v219;
    *(uint32_t*)(__twr_v220) = __twr_v210;
    __twr_v221 = 1ULL;
    __twr_v222 = 44ULL;
    __twr_v223 = _mng_stream208 + __twr_v222;
    *(uint32_t*)(__twr_v223) = __twr_v221;
    __twr_v224 = 48ULL;
    __twr_v225 = _mng_stream208 + __twr_v224;
    *(uint32_t*)(__twr_v225) = __twr_v221;
    __twr_v226 = 40ULL;
    __twr_v227 = _mng_stream208 + __twr_v226;
    *(uint32_t*)(__twr_v227) = __twr_v210;
    __twr_v228 = 56ULL;
    __twr_v229 = _mng_stream208 + __twr_v228;
    *(uint64_t*)(__twr_v229) = _mng_macro209;
    __twr_v230 = 64ULL;
    __twr_v231 = _mng_stream208 + __twr_v230;
    *(uint8_t*)(__twr_v231) = __twr_v210;
    __twr_v232 = 72ULL;
    __twr_v233 = _mng_stream208 + __twr_v232;
    *(uint64_t*)(__twr_v233) = __twr_v210;
    __twr_v234 = 80ULL;
    __twr_v235 = _mng_stream208 + __twr_v234;
    *(uint64_t*)(__twr_v235) = __twr_v210;
    __twr_v236 = 88ULL;
    __twr_v237 = _mng_stream208 + __twr_v236;
    *(uint8_t*)(__twr_v237) = __twr_v210;
    __twr_v238 = 89ULL;
    __twr_v239 = _mng_stream208 + __twr_v238;
    *(uint8_t*)(__twr_v239) = __twr_v210;
    __twr_v240 = 90ULL;
    __twr_v241 = _mng_stream208 + __twr_v240;
    *(uint8_t*)(__twr_v241) = __twr_v210;
    __twr_v242 = 91ULL;
    __twr_v243 = _mng_stream208 + __twr_v242;
    *(uint8_t*)(__twr_v243) = __twr_v210;
    __twr_v244 = 92ULL;
    __twr_v245 = _mng_stream208 + __twr_v244;
    *(uint8_t*)(__twr_v245) = __twr_v210;
    __twr_l3:;
    _jkl_epilogue:;
}
void LexUninitializeStream(uint64_t _mng_stream246) {
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    __twr_v247 = 56ULL;
    __twr_v248 = _mng_stream246 + __twr_v247;
    __twr_v249 = *(uint64_t*)(__twr_v248);
    if (__twr_v249) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v250 = (uint64_t)(&TlClose);
    __twr_v251 = 16ULL;
    __twr_v252 = _mng_stream246 + __twr_v251;
    __twr_v253 = *(uint64_t*)(__twr_v252);
    ((void (*)(uint64_t))__twr_v250)(__twr_v253);
    __twr_v254 = (uint64_t)(&TlFree);
    __twr_v255 = 24ULL;
    __twr_v256 = _mng_stream246 + __twr_v255;
    __twr_v257 = *(uint64_t*)(__twr_v256);
    ((void (*)(uint64_t))__twr_v254)(__twr_v257);
    __twr_l5:;
    __twr_l4:;
    _jkl_epilogue:;
}
void LexFreeStream(uint64_t _mng_stream258) {
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    __twr_v259 = (uint64_t)(&LexUninitializeStream);
    ((void (*)(uint64_t))__twr_v259)(_mng_stream258);
    __twr_v260 = (uint64_t)(&TlFreeToZone);
    __twr_v261 = (uint64_t)(&LexStreamZone);
    ((void (*)(uint64_t, uint64_t))__twr_v260)(__twr_v261, _mng_stream258);
    __twr_l7:;
    _jkl_epilogue:;
}
void LexPushStream(uint64_t _mng_stream262) {
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    __twr_v263 = (uint64_t)(&LexCurrentStream);
    __twr_v264 = *(uint64_t*)(__twr_v263);
    *(uint64_t*)(_mng_stream262) = __twr_v264;
    *(uint64_t*)(__twr_v263) = _mng_stream262;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t LexPopStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t _mng_oldstream267;
    uint64_t __twr_v268;
    __twr_v265 = (uint64_t)(&LexCurrentStream);
    __twr_v266 = *(uint64_t*)(__twr_v265);
    _mng_oldstream267 = __twr_v266;
    __twr_v268 = *(uint64_t*)(_mng_oldstream267);
    *(uint64_t*)(__twr_v265) = __twr_v268;
    _jkl_retv = _mng_oldstream267;
    goto _jkl_epilogue;
    __twr_l9:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeFileStream(uint64_t _mng_stream269, uint64_t _mng_fileblock270, uint64_t _mng_handle271) {
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_buffer277;
    uint64_t _mng_status278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    __twr_v272 = (uint64_t)(&LexInitializeStream);
    __twr_v273 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v272)(_mng_stream269, __twr_v273);
    __twr_v274 = (uint64_t)(&TlAlloc);
    __twr_v275 = 16384ULL;
    __twr_v276 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v274)(__twr_v275, (uint64_t)(&_mng_buffer277));
    _mng_status278 = __twr_v276;
    if (!(_mng_status278)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v279 = (uint64_t)(&TlInternalError);
    __twr_v280 = (uint64_t)(&"Failed to allocate lex buffer");
    __twr_v281 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v279)(__twr_v280, __twr_v281, __twr_v281, __twr_v281);
    __twr_l11:;
    __twr_v282 = 8ULL;
    __twr_v283 = _mng_stream269 + __twr_v282;
    *(uint64_t*)(__twr_v283) = _mng_fileblock270;
    __twr_v284 = 16ULL;
    __twr_v285 = _mng_stream269 + __twr_v284;
    *(uint64_t*)(__twr_v285) = _mng_handle271;
    __twr_v286 = 16384ULL;
    __twr_v287 = 32ULL;
    __twr_v288 = _mng_stream269 + __twr_v287;
    *(uint32_t*)(__twr_v288) = __twr_v286;
    __twr_v289 = 24ULL;
    __twr_v290 = _mng_stream269 + __twr_v289;
    *(uint64_t*)(__twr_v290) = _mng_buffer277;
    __twr_l10:;
    _jkl_epilogue:;
}
uint64_t LexCreateFileStream(uint64_t _mng_fileblock291, uint64_t _mng_handle292) {
    uint64_t _jkl_retv;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t _mng_stream295;
    uint64_t __twr_v296;
    __twr_v293 = (uint64_t)(&LexAllocateStream);
    __twr_v294 = ((uint64_t (*)())__twr_v293)();
    _mng_stream295 = __twr_v294;
    __twr_v296 = (uint64_t)(&LexInitializeFileStream);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v296)(_mng_stream295, _mng_fileblock291, _mng_handle292);
    _jkl_retv = _mng_stream295;
    goto _jkl_epilogue;
    __twr_l13:;
    _jkl_epilogue:;
    return _jkl_retv;
}
extern uint64_t PrsLeaveMacro();
uint64_t LexStreamNextCharacter() {
    uint64_t _jkl_retv;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t _mng_stream301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t _mng_byte310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t _mng_macro354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    __twr_v297 = (uint64_t)(&LexCurrentStream);
    __twr_v298 = *(uint64_t*)(__twr_v297);
    if (!(__twr_v298)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v299 = (uint64_t)(&LexCurrentStream);
    __twr_v300 = *(uint64_t*)(__twr_v299);
    _mng_stream301 = __twr_v300;
    __twr_v302 = 92ULL;
    __twr_v303 = _mng_stream301 + __twr_v302;
    __twr_v304 = *(uint8_t*)(__twr_v303);
    if (!(__twr_v304)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v305 = (uint64_t)(&LexCurrentStream);
    __twr_v306 = *(uint64_t*)(__twr_v305);
    __twr_v307 = 92ULL;
    __twr_v308 = __twr_v306 + __twr_v307;
    __twr_v309 = *(uint8_t*)(__twr_v308);
    _mng_byte310 = __twr_v309;
    __twr_v311 = 0ULL;
    *(uint8_t*)(__twr_v308) = __twr_v311;
    _jkl_retv = _mng_byte310;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l20:;
    __twr_v312 = 91ULL;
    __twr_v313 = _mng_stream301 + __twr_v312;
    __twr_v314 = *(uint8_t*)(__twr_v313);
    if (!(__twr_v314)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v315 = (uint64_t)(&LexCurrentStream);
    __twr_v316 = *(uint64_t*)(__twr_v315);
    __twr_v317 = 91ULL;
    __twr_v318 = __twr_v316 + __twr_v317;
    __twr_v319 = *(uint8_t*)(__twr_v318);
    _mng_byte310 = __twr_v319;
    __twr_v320 = 0ULL;
    *(uint8_t*)(__twr_v318) = __twr_v320;
    _jkl_retv = _mng_byte310;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l22:;
    __twr_v321 = 40ULL;
    __twr_v322 = _mng_stream301 + __twr_v321;
    __twr_v323 = *(uint32_t*)(__twr_v322);
    __twr_v324 = 36ULL;
    __twr_v325 = _mng_stream301 + __twr_v324;
    __twr_v326 = *(uint32_t*)(__twr_v325);
    if (__twr_v323 >= __twr_v326) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v327 = 24ULL;
    __twr_v328 = _mng_stream301 + __twr_v327;
    __twr_v329 = *(uint64_t*)(__twr_v328);
    __twr_v330 = 40ULL;
    __twr_v331 = _mng_stream301 + __twr_v330;
    __twr_v332 = *(uint32_t*)(__twr_v331);
    __twr_v333 = 1ULL;
    __twr_v334 = __twr_v329 + __twr_v332;
    __twr_v335 = *(uint8_t*)(__twr_v334);
    _mng_byte310 = __twr_v335;
    __twr_v336 = __twr_v332 + __twr_v333;
    *(uint32_t*)(__twr_v331) = __twr_v336;
    goto __twr_l18;
    __twr_l24:;
    __twr_v337 = 56ULL;
    __twr_v338 = _mng_stream301 + __twr_v337;
    __twr_v339 = *(uint64_t*)(__twr_v338);
    if (!(__twr_v339)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v340 = 64ULL;
    __twr_v341 = _mng_stream301 + __twr_v340;
    __twr_v342 = *(uint8_t*)(__twr_v341);
    if (__twr_v342) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v343 = 1ULL;
    __twr_v344 = 64ULL;
    __twr_v345 = _mng_stream301 + __twr_v344;
    *(uint8_t*)(__twr_v345) = __twr_v343;
    __twr_v346 = 10ULL;
    _jkl_retv = __twr_v346;
    goto _jkl_epilogue;
    __twr_l27:;
    __twr_v347 = 1ULL;
    __twr_v348 = (uint64_t)(&LexMacroDepth);
    __twr_v349 = *(uint32_t*)(__twr_v348);
    __twr_v350 = __twr_v349 - __twr_v347;
    *(uint32_t*)(__twr_v348) = __twr_v350;
    __twr_v351 = 56ULL;
    __twr_v352 = _mng_stream301 + __twr_v351;
    __twr_v353 = *(uint64_t*)(__twr_v352);
    _mng_macro354 = __twr_v353;
    __twr_v355 = 257ULL;
    __twr_v356 = _mng_macro354 + __twr_v355;
    __twr_v357 = *(uint8_t*)(__twr_v356);
    if (__twr_v357) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v358 = 72ULL;
    __twr_v359 = _mng_stream301 + __twr_v358;
    __twr_v360 = *(uint64_t*)(__twr_v359);
    __twr_v361 = (uint64_t)(&LexRootScope);
    __twr_v362 = *(uint64_t*)(__twr_v361);
    if (__twr_v360 == __twr_v362) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v363 = (uint64_t)(&LexCurrentScope);
    __twr_v364 = *(uint64_t*)(__twr_v363);
    __twr_v365 = *(uint64_t*)(__twr_v364);
    __twr_v366 = *(uint64_t*)(__twr_v365);
    if (!(__twr_v366)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v367 = (uint64_t)(&LexStreamError);
    __twr_v368 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v369 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v367)(__twr_v368, __twr_v369, __twr_v369, __twr_v369);
    __twr_l34:;
    __twr_v370 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v371 = (uint64_t)(&LexCurrentScope);
    __twr_v372 = *(uint64_t*)(__twr_v371);
    __twr_v373 = ((uint64_t (*)(uint64_t))__twr_v370)(__twr_v372);
    goto __twr_l31;
    __twr_l33:;
    __twr_v374 = (uint64_t)(&LexCurrentScope);
    __twr_v375 = *(uint64_t*)(__twr_v374);
    __twr_v376 = (uint64_t)(&LexRootScope);
    __twr_v377 = *(uint64_t*)(__twr_v376);
    if (__twr_v375 == __twr_v377) { goto __twr_l31; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v378 = (uint64_t)(&LexStreamError);
    __twr_v379 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v380 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v378)(__twr_v379, __twr_v380, __twr_v380, __twr_v380);
    __twr_l31:;
    __twr_v381 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v382 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v383 = *(uint64_t*)(__twr_v382);
    __twr_v384 = ((uint64_t (*)(uint64_t))__twr_v381)(__twr_v383);
    __twr_l29:;
    __twr_v385 = (uint64_t)(&PrsLeaveMacro);
    __twr_v386 = ((uint64_t (*)())__twr_v385)();
    if (__twr_v386) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v387 = (uint64_t)(&LexStreamError);
    __twr_v388 = (uint64_t)(&"Macro terminated during nested block");
    __twr_v389 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v387)(__twr_v388, __twr_v389, __twr_v389, __twr_v389);
    __twr_l37:;
    __twr_v390 = 72ULL;
    __twr_v391 = _mng_stream301 + __twr_v390;
    __twr_v392 = *(uint64_t*)(__twr_v391);
    __twr_v393 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v393) = __twr_v392;
    __twr_v394 = 80ULL;
    __twr_v395 = _mng_stream301 + __twr_v394;
    __twr_v396 = *(uint64_t*)(__twr_v395);
    __twr_v397 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v397) = __twr_v396;
    __twr_v398 = (uint64_t)(&LexFreeStream);
    __twr_v399 = (uint64_t)(&LexPopStream);
    __twr_v400 = ((uint64_t (*)())__twr_v399)();
    ((void (*)(uint64_t))__twr_v398)(__twr_v400);
    goto __twr_l17;
    goto __twr_l18;
    __twr_l26:;
    __twr_v401 = (uint64_t)(&TlReadFile);
    __twr_v402 = 16ULL;
    __twr_v403 = _mng_stream301 + __twr_v402;
    __twr_v404 = *(uint64_t*)(__twr_v403);
    __twr_v405 = 32ULL;
    __twr_v406 = _mng_stream301 + __twr_v405;
    __twr_v407 = *(uint32_t*)(__twr_v406);
    __twr_v408 = 24ULL;
    __twr_v409 = _mng_stream301 + __twr_v408;
    __twr_v410 = *(uint64_t*)(__twr_v409);
    __twr_v411 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v401)(__twr_v404, __twr_v407, __twr_v410);
    __twr_v412 = 36ULL;
    __twr_v413 = _mng_stream301 + __twr_v412;
    *(uint32_t*)(__twr_v413) = __twr_v411;
    __twr_v414 = *(uint32_t*)(__twr_v413);
    if (__twr_v414) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v415 = 64ULL;
    __twr_v416 = _mng_stream301 + __twr_v415;
    __twr_v417 = *(uint8_t*)(__twr_v416);
    if (__twr_v417) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v418 = 1ULL;
    __twr_v419 = 64ULL;
    __twr_v420 = _mng_stream301 + __twr_v419;
    *(uint8_t*)(__twr_v420) = __twr_v418;
    __twr_v421 = 10ULL;
    _jkl_retv = __twr_v421;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v422 = (uint64_t)(&LexFreeStream);
    __twr_v423 = (uint64_t)(&LexPopStream);
    __twr_v424 = ((uint64_t (*)())__twr_v423)();
    ((void (*)(uint64_t))__twr_v422)(__twr_v424);
    goto __twr_l17;
    __twr_l39:;
    __twr_v425 = 1ULL;
    __twr_v426 = 40ULL;
    __twr_v427 = _mng_stream301 + __twr_v426;
    *(uint32_t*)(__twr_v427) = __twr_v425;
    __twr_v428 = 24ULL;
    __twr_v429 = _mng_stream301 + __twr_v428;
    __twr_v430 = *(uint64_t*)(__twr_v429);
    __twr_v431 = *(uint8_t*)(__twr_v430);
    _mng_byte310 = __twr_v431;
    __twr_l18:;
    if (_mng_byte310) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v432 = (uint64_t)(&LexStreamError);
    __twr_v433 = (uint64_t)(&"An invalid byte was found in the source file.");
    __twr_v434 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v432)(__twr_v433, _mng_byte310, __twr_v434, __twr_v434);
    goto __twr_l43;
    __twr_l45:;
    __twr_v435 = 13ULL;
    if (_mng_byte310 != __twr_v435) { goto __twr_l47; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v436 = (uint64_t)(&LexStreamError);
    __twr_v437 = (uint64_t)(&"DOS line endings were detected in the source file.");
    __twr_v438 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v436)(__twr_v437, __twr_v438, __twr_v438, __twr_v438);
    goto __twr_l43;
    __twr_l47:;
    __twr_v439 = 10ULL;
    if (_mng_byte310 != __twr_v439) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v440 = 1ULL;
    __twr_v441 = 44ULL;
    __twr_v442 = _mng_stream301 + __twr_v441;
    __twr_v443 = *(uint32_t*)(__twr_v442);
    __twr_v444 = __twr_v443 + __twr_v440;
    *(uint32_t*)(__twr_v442) = __twr_v444;
    __twr_v445 = 48ULL;
    __twr_v446 = _mng_stream301 + __twr_v445;
    *(uint32_t*)(__twr_v446) = __twr_v440;
    __twr_v447 = 64ULL;
    __twr_v448 = _mng_stream301 + __twr_v447;
    *(uint8_t*)(__twr_v448) = __twr_v440;
    goto __twr_l43;
    __twr_l49:;
    __twr_v449 = 1ULL;
    __twr_v450 = 48ULL;
    __twr_v451 = _mng_stream301 + __twr_v450;
    __twr_v452 = *(uint32_t*)(__twr_v451);
    __twr_v453 = __twr_v452 + __twr_v449;
    *(uint32_t*)(__twr_v451) = __twr_v453;
    __twr_v454 = 0ULL;
    __twr_v455 = 64ULL;
    __twr_v456 = _mng_stream301 + __twr_v455;
    *(uint8_t*)(__twr_v456) = __twr_v454;
    __twr_l43:;
    _jkl_retv = _mng_byte310;
    goto _jkl_epilogue;
    __twr_l17:;
    __twr_v457 = (uint64_t)(&LexCurrentStream);
    __twr_v458 = *(uint64_t*)(__twr_v457);
    if (__twr_v458) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v459 = 0ULL;
    _jkl_retv = __twr_v459;
    goto _jkl_epilogue;
    __twr_l14:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg161);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename162, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock163, uint64_t _mng_filepath164);
extern uint64_t LexLookupSection(uint64_t _mng_name165);
extern void LexPushSection(uint64_t _mng_section166);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope167);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg168);
extern void LexExpandMacro(uint64_t _mng_macro169, uint64_t _mng_token170);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream171, uint64_t _mng_macro172);
extern void LexUninitializeStream(uint64_t _mng_stream173);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream174);
extern void LexPushStream(uint64_t _mng_stream175);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream176, uint64_t _mng_fileblock177, uint64_t _mng_handle178);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock179, uint64_t _mng_handle180);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope181);
extern uint64_t LexResetScope(uint64_t _mng_scope182);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope183);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest184, uint64_t _mng_src185);
extern void LexGetToken(uint64_t _mng_token186);
extern void LexPutbackToken(uint64_t _mng_token187);
extern uint64_t LexMatchToken(uint64_t _mng_token188, uint64_t _mng_type189, uint64_t _mng_subtype190);
extern void LexError(uint64_t _mng_token191, uint64_t _mng_fmt192, uint64_t _mng_argv193, uint64_t _mng_argc194);
extern uint64_t LexCrunchNumber(uint64_t _mng_token195, uint64_t _mng_buffer196);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node197);
uint64_t FeLibraryDirectory[32];
uint64_t FeIncludeDirectory[32];
uint64_t FeInputFile[32];
uint64_t FeOutputFile[32];
uint64_t FeTargetString[32];
uint64_t FeInputFileHandle;
uint64_t FeOutputFileHandle;
uint64_t FeOutputHeaders = 0ULL;
uint64_t FeRootFileBlock;
uint64_t JklBinaryName = 0ULL;
uint64_t JklTargetInfo = 0ULL;
uint64_t JklPrimitiveTypeMasks[14] = {
    0x0000000000000000,
    0x0000000000000000,
    0x00000000000000FF,
    0x000000000000FFFF,
    0x00000000FFFFFFFF,
    0xFFFFFFFFFFFFFFFF,
    0x0000000000000000,
    0x0000000000000000,
    0x00000000000000FF,
    0x000000000000FFFF,
    0x00000000FFFFFFFF,
    0xFFFFFFFFFFFFFFFF,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t JklSignExtendedTypeMasks[14] = {
    0x0000000000000000,
    0x0000000000000000,
    0xFFFFFFFFFFFFFF80,
    0xFFFFFFFFFFFF8000,
    0xFFFFFFFF80000000,
    0x8000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0xFFFFFFFFFFFFFF80,
    0xFFFFFFFFFFFF8000,
    0xFFFFFFFF80000000,
    0x8000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
void JklUsage() {
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    __twr_v198 = (uint64_t)(&TlPrintString);
    __twr_v199 = (uint64_t)(&"Usage: ");
    ((void (*)(uint64_t))__twr_v198)(__twr_v199);
    __twr_v200 = (uint64_t)(&JklBinaryName);
    __twr_v201 = *(uint64_t*)(__twr_v200);
    ((void (*)(uint64_t))__twr_v198)(__twr_v201);
    __twr_v202 = (uint64_t)(&" [inputfile] [outputfile] target=[CHost/xr17032/fox32]\n");
    ((void (*)(uint64_t))__twr_v198)(__twr_v202);
    __twr_v203 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v203)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg204) {
    uint64_t _jkl_retv;
    uint64_t _mng_i205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    _mng_i205 = 0ULL;
    __twr_v206 = *(uint8_t*)(_mng_arg204);
    if (!(__twr_v206)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v207 = _mng_arg204 + _mng_i205;
    __twr_v208 = *(uint8_t*)(__twr_v207);
    __twr_v209 = 61ULL;
    if (__twr_v208 != __twr_v209) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v210 = _mng_arg204 + _mng_i205;
    _jkl_retv = __twr_v210;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v211 = 1ULL;
    __twr_v212 = _mng_i205 + __twr_v211;
    _mng_i205 = __twr_v212;
    __twr_l5:;
    __twr_v213 = _mng_arg204 + _mng_i205;
    __twr_v214 = *(uint8_t*)(__twr_v213);
    if (__twr_v214) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v215 = 0ULL;
    _jkl_retv = __twr_v215;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc216, uint64_t _mng_argv217) {
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t _mng_foundinput221;
    uint64_t _mng_foundoutput222;
    uint64_t _mng_foundtarget223;
    uint64_t _mng_i224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    __twr_v218 = 0ULL;
    __twr_v219 = (uint64_t)(&FeLibraryDirectory);
    *(uint8_t*)(__twr_v219) = __twr_v218;
    __twr_v220 = (uint64_t)(&FeIncludeDirectory);
    *(uint8_t*)(__twr_v220) = __twr_v218;
    _mng_foundinput221 = 0ULL;
    _mng_foundoutput222 = 0ULL;
    _mng_foundtarget223 = 0ULL;
    _mng_i224 = 1ULL;
    if (_mng_argc216 <= _mng_i224) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v225 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v226 = 3ULL;
    __twr_v227 = _mng_i224 << __twr_v226;
    __twr_v228 = _mng_argv217 + __twr_v227;
    __twr_v229 = *(uint64_t*)(__twr_v228);
    __twr_v230 = (uint64_t)(&"libdir=");
    __twr_v231 = 7ULL;
    __twr_v232 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v225)(__twr_v229, __twr_v230, __twr_v231);
    if (__twr_v232) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v233 = (uint64_t)(&TlCopyString);
    __twr_v234 = (uint64_t)(&FeLibraryDirectory);
    __twr_v235 = 3ULL;
    __twr_v236 = _mng_i224 << __twr_v235;
    __twr_v237 = _mng_argv217 + __twr_v236;
    __twr_v238 = *(uint64_t*)(__twr_v237);
    __twr_v239 = 7ULL;
    __twr_v240 = __twr_v238 + __twr_v239;
    __twr_v241 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v233)(__twr_v234, __twr_v240, __twr_v241);
    goto __twr_l12;
    __twr_l14:;
    __twr_v242 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v243 = 3ULL;
    __twr_v244 = _mng_i224 << __twr_v243;
    __twr_v245 = _mng_argv217 + __twr_v244;
    __twr_v246 = *(uint64_t*)(__twr_v245);
    __twr_v247 = (uint64_t)(&"incdir=");
    __twr_v248 = 7ULL;
    __twr_v249 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v242)(__twr_v246, __twr_v247, __twr_v248);
    if (__twr_v249) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v250 = (uint64_t)(&TlCopyString);
    __twr_v251 = (uint64_t)(&FeIncludeDirectory);
    __twr_v252 = 3ULL;
    __twr_v253 = _mng_i224 << __twr_v252;
    __twr_v254 = _mng_argv217 + __twr_v253;
    __twr_v255 = *(uint64_t*)(__twr_v254);
    __twr_v256 = 7ULL;
    __twr_v257 = __twr_v255 + __twr_v256;
    __twr_v258 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v250)(__twr_v251, __twr_v257, __twr_v258);
    goto __twr_l12;
    __twr_l16:;
    __twr_v259 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v260 = 3ULL;
    __twr_v261 = _mng_i224 << __twr_v260;
    __twr_v262 = _mng_argv217 + __twr_v261;
    __twr_v263 = *(uint64_t*)(__twr_v262);
    __twr_v264 = (uint64_t)(&"target=");
    __twr_v265 = 7ULL;
    __twr_v266 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v259)(__twr_v263, __twr_v264, __twr_v265);
    if (__twr_v266) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v267 = (uint64_t)(&TlCopyString);
    __twr_v268 = (uint64_t)(&FeTargetString);
    __twr_v269 = 3ULL;
    __twr_v270 = _mng_i224 << __twr_v269;
    __twr_v271 = _mng_argv217 + __twr_v270;
    __twr_v272 = *(uint64_t*)(__twr_v271);
    __twr_v273 = 7ULL;
    __twr_v274 = __twr_v272 + __twr_v273;
    __twr_v275 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v267)(__twr_v268, __twr_v274, __twr_v275);
    _mng_foundtarget223 = 1ULL;
    goto __twr_l12;
    __twr_l18:;
    __twr_v276 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v277 = 3ULL;
    __twr_v278 = _mng_i224 << __twr_v277;
    __twr_v279 = _mng_argv217 + __twr_v278;
    __twr_v280 = *(uint64_t*)(__twr_v279);
    __twr_v281 = (uint64_t)(&"header=");
    __twr_v282 = 7ULL;
    __twr_v283 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v276)(__twr_v280, __twr_v281, __twr_v282);
    if (__twr_v283) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v284 = 3ULL;
    __twr_v285 = _mng_i224 << __twr_v284;
    __twr_v286 = _mng_argv217 + __twr_v285;
    __twr_v287 = *(uint64_t*)(__twr_v286);
    __twr_v288 = 7ULL;
    __twr_v289 = __twr_v287 + __twr_v288;
    __twr_v290 = (uint64_t)(&FeOutputHeaders);
    *(uint64_t*)(__twr_v290) = __twr_v289;
    goto __twr_l12;
    __twr_l20:;
    __twr_v291 = (uint64_t)(&FeIsMacroArgument);
    __twr_v292 = 3ULL;
    __twr_v293 = _mng_i224 << __twr_v292;
    __twr_v294 = _mng_argv217 + __twr_v293;
    __twr_v295 = *(uint64_t*)(__twr_v294);
    __twr_v296 = ((uint64_t (*)(uint64_t))__twr_v291)(__twr_v295);
    if (!(__twr_v296)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v297 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v298 = 3ULL;
    __twr_v299 = _mng_i224 << __twr_v298;
    __twr_v300 = _mng_argv217 + __twr_v299;
    __twr_v301 = *(uint64_t*)(__twr_v300);
    ((void (*)(uint64_t))__twr_v297)(__twr_v301);
    goto __twr_l12;
    __twr_l22:;
    if (!(_mng_foundinput221)) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    if (!(_mng_foundoutput222)) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v302 = (uint64_t)(&TlPrintString);
    __twr_v303 = (uint64_t)(&"Too many arguments specified!\n");
    ((void (*)(uint64_t))__twr_v302)(__twr_v303);
    __twr_v304 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v304)();
    __twr_l25:;
    _mng_foundoutput222 = 1ULL;
    __twr_v305 = (uint64_t)(&TlCopyString);
    __twr_v306 = (uint64_t)(&FeOutputFile);
    __twr_v307 = 3ULL;
    __twr_v308 = _mng_i224 << __twr_v307;
    __twr_v309 = _mng_argv217 + __twr_v308;
    __twr_v310 = *(uint64_t*)(__twr_v309);
    __twr_v311 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v305)(__twr_v306, __twr_v310, __twr_v311);
    goto __twr_l12;
    __twr_l24:;
    _mng_foundinput221 = 1ULL;
    __twr_v312 = (uint64_t)(&TlCopyString);
    __twr_v313 = (uint64_t)(&FeInputFile);
    __twr_v314 = 3ULL;
    __twr_v315 = _mng_i224 << __twr_v314;
    __twr_v316 = _mng_argv217 + __twr_v315;
    __twr_v317 = *(uint64_t*)(__twr_v316);
    __twr_v318 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v312)(__twr_v313, __twr_v317, __twr_v318);
    __twr_l12:;
    __twr_v319 = 1ULL;
    __twr_v320 = _mng_i224 + __twr_v319;
    _mng_i224 = __twr_v320;
    __twr_l11:;
    if (_mng_i224 < _mng_argc216) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput221) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v321 = (uint64_t)(&TlPrintString);
    __twr_v322 = (uint64_t)(&"Error: No input file specified.\n");
    ((void (*)(uint64_t))__twr_v321)(__twr_v322);
    __twr_v323 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v323)();
    __twr_l27:;
    if (_mng_foundoutput222) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v324 = (uint64_t)(&TlPrintString);
    __twr_v325 = (uint64_t)(&"Error: No output file specified.\n");
    ((void (*)(uint64_t))__twr_v324)(__twr_v325);
    __twr_v326 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v326)();
    __twr_l29:;
    if (_mng_foundtarget223) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v327 = (uint64_t)(&TlCopyString);
    __twr_v328 = (uint64_t)(&FeTargetString);
    __twr_v329 = (uint64_t)(&"CHost");
    __twr_v330 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v327)(__twr_v328, __twr_v329, __twr_v330);
    __twr_l31:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename331, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t _mng_created336;
    uint64_t _mng_fileblock337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    __twr_v332 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v333 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v334 = 560ULL;
    __twr_v335 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v332)(__twr_v333, __twr_v334, _mng_includename331, (uint64_t)(&_mng_created336));
    _mng_fileblock337 = __twr_v335;
    if (!(_mng_created336)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v338 = (uint64_t)(&TlCopyString);
    __twr_v339 = 304ULL;
    __twr_v340 = _mng_fileblock337 + __twr_v339;
    __twr_v341 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v338)(__twr_v340, _mng_includename331, __twr_v341);
    __twr_v342 = 40ULL;
    __twr_v343 = _mng_fileblock337 + __twr_v342;
    *(uint64_t*)(__twr_v343) = __twr_v340;
    __twr_l34:;
    _jkl_retv = _mng_fileblock337;
    goto _jkl_epilogue;
    __twr_l33:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created336;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock344, uint64_t _mng_filepath345) {
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    __twr_v346 = (uint64_t)(&TlCopyString);
    __twr_v347 = 48ULL;
    __twr_v348 = _mng_fileblock344 + __twr_v347;
    __twr_v349 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v346)(__twr_v348, _mng_filepath345, __twr_v349);
    __twr_l36:;
    _jkl_epilogue:;
}
extern uint64_t CtTargetInfo[12];
extern uint64_t FoxTargetInfo[12];
extern uint64_t XrTargetInfo[12];
uint64_t TrgInfoRecords[8] = {
    (uint64_t)(&CtTargetInfo),
    (uint64_t)(&FoxTargetInfo),
    (uint64_t)(&XrTargetInfo),
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
void TrgInitialize() {
    uint64_t __twr_v350;
    uint64_t _mng_target351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    __twr_v350 = (uint64_t)(&TrgInfoRecords);
    _mng_target351 = __twr_v350;
    __twr_v352 = *(uint64_t*)(_mng_target351);
    if (!(__twr_v352)) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v353 = (uint64_t)(&TlCompareString);
    __twr_v354 = (uint64_t)(&FeTargetString);
    __twr_v355 = *(uint64_t*)(_mng_target351);
    __twr_v356 = *(uint64_t*)(__twr_v355);
    __twr_v357 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v353)(__twr_v354, __twr_v356);
    if (__twr_v357) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v358 = *(uint64_t*)(_mng_target351);
    __twr_v359 = (uint64_t)(&JklTargetInfo);
    *(uint64_t*)(__twr_v359) = __twr_v358;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v360 = 8ULL;
    __twr_v361 = _mng_target351 + __twr_v360;
    _mng_target351 = __twr_v361;
    __twr_l40:;
    __twr_v362 = *(uint64_t*)(_mng_target351);
    if (__twr_v362) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v363 = (uint64_t)(&TlUserError);
    __twr_v364 = (uint64_t)(&"Unknown target specified");
    __twr_v365 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v363)(__twr_v364, __twr_v365, __twr_v365, __twr_v365);
    __twr_l37:;
    _jkl_epilogue:;
}
void FeInitialize(uint64_t _mng_argc366, uint64_t _mng_argv367) {
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t _mng_status377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    __twr_v368 = (uint64_t)(&TlInitializeHashTable);
    __twr_v369 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v368)(__twr_v369);
    __twr_v370 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v370)();
    __twr_v371 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v371)(_mng_argc366, _mng_argv367);
    __twr_v372 = (uint64_t)(&TlOpenSource);
    __twr_v373 = (uint64_t)(&FeInputFile);
    __twr_v374 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v372)(__twr_v373, (uint64_t)(&__twr_v375));
    __twr_v376 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v376) = __twr_v375;
    _mng_status377 = __twr_v374;
    if (!(_mng_status377)) { goto __twr_l44; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v378 = (uint64_t)(&TlUserError);
    __twr_v379 = (uint64_t)(&"Failed to open source file.");
    __twr_v380 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v378)(__twr_v379, __twr_v380, __twr_v380, __twr_v380);
    __twr_l44:;
    __twr_v381 = (uint64_t)(&TrgInitialize);
    ((void (*)())__twr_v381)();
    __twr_v382 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v382)();
    __twr_v383 = (uint64_t)(&PrsInitialize);
    ((void (*)())__twr_v383)();
    __twr_l43:;
    _jkl_epilogue:;
}
void FeOutputHeaderDependencies() {
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t _mng_handle388;
    uint64_t _mng_status389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t _mng_headerbuf395[11];
    uint64_t __twr_v396;
    uint64_t _mng_head397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t _mng_entry401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t _mng_hashentry404;
    uint64_t _mng_fileblock405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    __twr_v384 = (uint64_t)(&TlOpenDestination);
    __twr_v385 = (uint64_t)(&FeOutputHeaders);
    __twr_v386 = *(uint64_t*)(__twr_v385);
    __twr_v387 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v384)(__twr_v386, (uint64_t)(&_mng_handle388));
    _mng_status389 = __twr_v387;
    if (!(_mng_status389)) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v390 = (uint64_t)(&TlUserError);
    __twr_v391 = (uint64_t)(&"Failed to open header dependencies file.");
    __twr_v392 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v390)(__twr_v391, __twr_v392, __twr_v392, __twr_v392);
    __twr_l47:;
    __twr_v393 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v394 = (uint64_t)(&_mng_headerbuf395);
    ((void (*)(uint64_t))__twr_v393)(__twr_v394);
    __twr_v396 = (uint64_t)(&FeFileBlockHashTable);
    _mng_head397 = __twr_v396;
    __twr_v398 = 8ULL;
    __twr_v399 = _mng_head397 + __twr_v398;
    __twr_v400 = *(uint64_t*)(__twr_v399);
    _mng_entry401 = __twr_v400;
    if (_mng_head397 == _mng_entry401) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v402 = 16ULL;
    __twr_v403 = _mng_entry401 - __twr_v402;
    _mng_hashentry404 = __twr_v403;
    _mng_fileblock405 = _mng_hashentry404;
    __twr_v406 = (uint64_t)(&FeRootFileBlock);
    __twr_v407 = *(uint64_t*)(__twr_v406);
    if (_mng_fileblock405 == __twr_v407) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v408 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v409 = (uint64_t)(&_mng_headerbuf395);
    __twr_v410 = 48ULL;
    __twr_v411 = _mng_fileblock405 + __twr_v410;
    __twr_v412 = (uint64_t)(&TlMeasureString);
    __twr_v413 = ((uint64_t (*)(uint64_t))__twr_v412)(__twr_v411);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v408)(__twr_v409, __twr_v411, __twr_v413);
    __twr_v414 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v415 = 10ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v414)(__twr_v409, __twr_v415);
    __twr_l52:;
    __twr_v416 = 8ULL;
    __twr_v417 = _mng_entry401 + __twr_v416;
    __twr_v418 = *(uint64_t*)(__twr_v417);
    _mng_entry401 = __twr_v418;
    __twr_l51:;
    if (_mng_head397 != _mng_entry401) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_v419 = (uint64_t)(&TlWriteFile);
    __twr_v420 = (uint64_t)(&_mng_headerbuf395);
    __twr_v421 = *(uint64_t*)(__twr_v420);
    __twr_v422 = 16ULL;
    __twr_v423 = __twr_v420 + __twr_v422;
    __twr_v424 = *(uint64_t*)(__twr_v423);
    __twr_v425 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v419)(_mng_handle388, __twr_v421, __twr_v424);
    __twr_v426 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v426)(__twr_v420);
    __twr_l46:;
    _jkl_epilogue:;
}
extern void IrGenerate();
extern void IrSimplify();
extern void IrEliminateDeadVariables();
void TlMain(uint64_t _mng_argc427, uint64_t _mng_argv428) {
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t _mng_status441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    __twr_v429 = *(uint64_t*)(_mng_argv428);
    __twr_v430 = (uint64_t)(&JklBinaryName);
    *(uint64_t*)(__twr_v430) = __twr_v429;
    __twr_v431 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v431)(_mng_argc427, _mng_argv428);
    __twr_v432 = (uint64_t)(&PrsProgram);
    ((void (*)())__twr_v432)();
    __twr_v433 = (uint64_t)(&IrGenerate);
    ((void (*)())__twr_v433)();
    __twr_v434 = (uint64_t)(&IrSimplify);
    ((void (*)())__twr_v434)();
    __twr_v435 = (uint64_t)(&IrEliminateDeadVariables);
    ((void (*)())__twr_v435)();
    __twr_v436 = (uint64_t)(&TlOpenDestination);
    __twr_v437 = (uint64_t)(&FeOutputFile);
    __twr_v438 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v436)(__twr_v437, (uint64_t)(&__twr_v439));
    __twr_v440 = (uint64_t)(&FeOutputFileHandle);
    *(uint64_t*)(__twr_v440) = __twr_v439;
    _mng_status441 = __twr_v438;
    if (!(_mng_status441)) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v442 = (uint64_t)(&TlUserError);
    __twr_v443 = (uint64_t)(&"Failed to open destination file.");
    __twr_v444 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v442)(__twr_v443, __twr_v444, __twr_v444, __twr_v444);
    __twr_l55:;
    __twr_v445 = (uint64_t)(&JklTargetInfo);
    __twr_v446 = *(uint64_t*)(__twr_v445);
    __twr_v447 = 8ULL;
    __twr_v448 = __twr_v446 + __twr_v447;
    __twr_v449 = *(uint64_t*)(__twr_v448);
    ((void (*)())__twr_v449)();
    __twr_v450 = (uint64_t)(&FeOutputHeaders);
    __twr_v451 = *(uint64_t*)(__twr_v450);
    if (!(__twr_v451)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v452 = (uint64_t)(&FeOutputHeaderDependencies);
    ((void (*)())__twr_v452)();
    __twr_l57:;
    __twr_l54:;
    _jkl_epilogue:;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlGetFileName(uint64_t _mng_path87);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path88);
extern uint64_t TlPathExists(uint64_t _mng_path89);
extern uint64_t TlIterateDirectory(uint64_t _mng_path90, uint64_t _mng_callback91, uint64_t _mng_context92);
extern uint64_t TlGetPathExtension(uint64_t _mng_path93);
extern uint64_t TlStatFile(uint64_t _mng_path94, uint64_t _mng_statrecord95);
extern uint64_t TlCreateDirectory(uint64_t _mng_path96);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path97);
extern void TlInitializeZone(uint64_t _mng_zone98, uint64_t _mng_blocksize99);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone100);
extern void TlFreeToZone(uint64_t _mng_zone101, uint64_t _mng_block102);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant103);
extern void TlPunchValue(uint64_t _mng_ptr104, uint64_t _mng_value105, uint64_t _mng_bytes106);
extern uint64_t TlTokenize(uint64_t _mng_buffer107, uint64_t _mng_tokenbuffer108, uint64_t _mng_bufsize109, uint64_t _mng_delimiter110);
extern uint64_t TlStringToNumber(uint64_t _mng_src111, uint64_t _mng_bufsize112, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler113);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine114, uint64_t _mng_arg115, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread116);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex117);
extern void TlReleaseMutex(uint64_t _mng_mutex118);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue119);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore120);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore121);
extern uint64_t TlSystem(uint64_t _mng_cmdline122);
extern void JklCompileProgram(uint64_t _mng_argc123, uint64_t _mng_argv124);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg125);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename126, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock127, uint64_t _mng_filepath128);
extern uint64_t LexLookupSection(uint64_t _mng_name129);
extern void LexPushSection(uint64_t _mng_section130);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope131);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg132);
extern void LexExpandMacro(uint64_t _mng_macro133, uint64_t _mng_token134);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream135, uint64_t _mng_macro136);
extern void LexUninitializeStream(uint64_t _mng_stream137);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream138);
extern void LexPushStream(uint64_t _mng_stream139);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream140, uint64_t _mng_fileblock141, uint64_t _mng_handle142);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock143, uint64_t _mng_handle144);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope145);
extern uint64_t LexResetScope(uint64_t _mng_scope146);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope147);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest148, uint64_t _mng_src149);
extern void LexGetToken(uint64_t _mng_token150);
extern void LexPutbackToken(uint64_t _mng_token151);
extern uint64_t LexMatchToken(uint64_t _mng_token152, uint64_t _mng_type153, uint64_t _mng_subtype154);
extern void LexStreamError(uint64_t _mng_str155, uint64_t _mng_err1156, uint64_t _mng_err2157, uint64_t _mng_err3158);
extern void LexTokenError(uint64_t _mng_token159, uint64_t _mng_str160, uint64_t _mng_err1161, uint64_t _mng_err2162, uint64_t _mng_err3163);
extern uint64_t LexCrunchNumber(uint64_t _mng_token164, uint64_t _mng_buffer165);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node166);
uint64_t FeLibraryDirectory[32];
uint64_t FeIncludeDirectory[32];
uint64_t FeInputFile[32];
uint64_t FeOutputFile[32];
uint64_t FeTargetString[32];
uint64_t FeInputFileHandle;
uint64_t FeOutputFileHandle;
uint64_t FeOutputHeaders = 0ULL;
uint64_t FeRootFileBlock;
uint64_t JklBinaryName = 0ULL;
uint64_t JklTargetInfo = 0ULL;
uint64_t JklPrimitiveTypeMasks[14] = {
    0x0000000000000000,
    0x0000000000000000,
    0x00000000000000FF,
    0x000000000000FFFF,
    0x00000000FFFFFFFF,
    0xFFFFFFFFFFFFFFFF,
    0x0000000000000000,
    0x0000000000000000,
    0x00000000000000FF,
    0x000000000000FFFF,
    0x00000000FFFFFFFF,
    0xFFFFFFFFFFFFFFFF,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t JklSignExtendedTypeMasks[14] = {
    0x0000000000000000,
    0x0000000000000000,
    0xFFFFFFFFFFFFFF80,
    0xFFFFFFFFFFFF8000,
    0xFFFFFFFF80000000,
    0x8000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0xFFFFFFFFFFFFFF80,
    0xFFFFFFFFFFFF8000,
    0xFFFFFFFF80000000,
    0x8000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
void JklUsage() {
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    __twr_v167 = (uint64_t)(&TlPrintString);
    __twr_v168 = (uint64_t)(&"Usage: ");
    ((void (*)(uint64_t))__twr_v167)(__twr_v168);
    __twr_v169 = (uint64_t)(&JklBinaryName);
    __twr_v170 = *(uint64_t*)(__twr_v169);
    ((void (*)(uint64_t))__twr_v167)(__twr_v170);
    __twr_v171 = (uint64_t)(&" [inputfile] [outputfile] target=[CHost/xr17032/fox32]\n");
    ((void (*)(uint64_t))__twr_v167)(__twr_v171);
    __twr_v172 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v172)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg173) {
    uint64_t _jkl_retv;
    uint64_t _mng_i174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    _mng_i174 = 0ULL;
    __twr_v175 = *(uint8_t*)(_mng_arg173);
    if (!(__twr_v175)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v176 = _mng_arg173 + _mng_i174;
    __twr_v177 = *(uint8_t*)(__twr_v176);
    __twr_v178 = 61ULL;
    if (__twr_v177 != __twr_v178) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v179 = _mng_arg173 + _mng_i174;
    _jkl_retv = __twr_v179;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v180 = 1ULL;
    __twr_v181 = _mng_i174 + __twr_v180;
    _mng_i174 = __twr_v181;
    __twr_l5:;
    __twr_v182 = _mng_arg173 + _mng_i174;
    __twr_v183 = *(uint8_t*)(__twr_v182);
    if (__twr_v183) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v184 = 0ULL;
    _jkl_retv = __twr_v184;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc185, uint64_t _mng_argv186) {
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t _mng_foundinput190;
    uint64_t _mng_foundoutput191;
    uint64_t _mng_foundtarget192;
    uint64_t _mng_i193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    __twr_v187 = 0ULL;
    __twr_v188 = (uint64_t)(&FeLibraryDirectory);
    *(uint8_t*)(__twr_v188) = __twr_v187;
    __twr_v189 = (uint64_t)(&FeIncludeDirectory);
    *(uint8_t*)(__twr_v189) = __twr_v187;
    _mng_foundinput190 = 0ULL;
    _mng_foundoutput191 = 0ULL;
    _mng_foundtarget192 = 0ULL;
    _mng_i193 = 1ULL;
    if (_mng_argc185 <= _mng_i193) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v194 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v195 = 3ULL;
    __twr_v196 = _mng_i193 << __twr_v195;
    __twr_v197 = _mng_argv186 + __twr_v196;
    __twr_v198 = *(uint64_t*)(__twr_v197);
    __twr_v199 = (uint64_t)(&"libdir=");
    __twr_v200 = 7ULL;
    __twr_v201 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v194)(__twr_v198, __twr_v199, __twr_v200);
    if (__twr_v201) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v202 = (uint64_t)(&TlCopyString);
    __twr_v203 = (uint64_t)(&FeLibraryDirectory);
    __twr_v204 = 3ULL;
    __twr_v205 = _mng_i193 << __twr_v204;
    __twr_v206 = _mng_argv186 + __twr_v205;
    __twr_v207 = *(uint64_t*)(__twr_v206);
    __twr_v208 = 7ULL;
    __twr_v209 = __twr_v207 + __twr_v208;
    __twr_v210 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v203, __twr_v209, __twr_v210);
    goto __twr_l12;
    __twr_l14:;
    __twr_v211 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v212 = 3ULL;
    __twr_v213 = _mng_i193 << __twr_v212;
    __twr_v214 = _mng_argv186 + __twr_v213;
    __twr_v215 = *(uint64_t*)(__twr_v214);
    __twr_v216 = (uint64_t)(&"incdir=");
    __twr_v217 = 7ULL;
    __twr_v218 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v211)(__twr_v215, __twr_v216, __twr_v217);
    if (__twr_v218) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v219 = (uint64_t)(&TlCopyString);
    __twr_v220 = (uint64_t)(&FeIncludeDirectory);
    __twr_v221 = 3ULL;
    __twr_v222 = _mng_i193 << __twr_v221;
    __twr_v223 = _mng_argv186 + __twr_v222;
    __twr_v224 = *(uint64_t*)(__twr_v223);
    __twr_v225 = 7ULL;
    __twr_v226 = __twr_v224 + __twr_v225;
    __twr_v227 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v219)(__twr_v220, __twr_v226, __twr_v227);
    goto __twr_l12;
    __twr_l16:;
    __twr_v228 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v229 = 3ULL;
    __twr_v230 = _mng_i193 << __twr_v229;
    __twr_v231 = _mng_argv186 + __twr_v230;
    __twr_v232 = *(uint64_t*)(__twr_v231);
    __twr_v233 = (uint64_t)(&"target=");
    __twr_v234 = 7ULL;
    __twr_v235 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v228)(__twr_v232, __twr_v233, __twr_v234);
    if (__twr_v235) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v236 = (uint64_t)(&TlCopyString);
    __twr_v237 = (uint64_t)(&FeTargetString);
    __twr_v238 = 3ULL;
    __twr_v239 = _mng_i193 << __twr_v238;
    __twr_v240 = _mng_argv186 + __twr_v239;
    __twr_v241 = *(uint64_t*)(__twr_v240);
    __twr_v242 = 7ULL;
    __twr_v243 = __twr_v241 + __twr_v242;
    __twr_v244 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v236)(__twr_v237, __twr_v243, __twr_v244);
    _mng_foundtarget192 = 1ULL;
    goto __twr_l12;
    __twr_l18:;
    __twr_v245 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v246 = 3ULL;
    __twr_v247 = _mng_i193 << __twr_v246;
    __twr_v248 = _mng_argv186 + __twr_v247;
    __twr_v249 = *(uint64_t*)(__twr_v248);
    __twr_v250 = (uint64_t)(&"header=");
    __twr_v251 = 7ULL;
    __twr_v252 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v245)(__twr_v249, __twr_v250, __twr_v251);
    if (__twr_v252) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v253 = 3ULL;
    __twr_v254 = _mng_i193 << __twr_v253;
    __twr_v255 = _mng_argv186 + __twr_v254;
    __twr_v256 = *(uint64_t*)(__twr_v255);
    __twr_v257 = 7ULL;
    __twr_v258 = __twr_v256 + __twr_v257;
    __twr_v259 = (uint64_t)(&FeOutputHeaders);
    *(uint64_t*)(__twr_v259) = __twr_v258;
    goto __twr_l12;
    __twr_l20:;
    __twr_v260 = (uint64_t)(&FeIsMacroArgument);
    __twr_v261 = 3ULL;
    __twr_v262 = _mng_i193 << __twr_v261;
    __twr_v263 = _mng_argv186 + __twr_v262;
    __twr_v264 = *(uint64_t*)(__twr_v263);
    __twr_v265 = ((uint64_t (*)(uint64_t))__twr_v260)(__twr_v264);
    if (!(__twr_v265)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v266 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v267 = 3ULL;
    __twr_v268 = _mng_i193 << __twr_v267;
    __twr_v269 = _mng_argv186 + __twr_v268;
    __twr_v270 = *(uint64_t*)(__twr_v269);
    ((void (*)(uint64_t))__twr_v266)(__twr_v270);
    goto __twr_l12;
    __twr_l22:;
    if (!(_mng_foundinput190)) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    if (!(_mng_foundoutput191)) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v271 = (uint64_t)(&TlPrintString);
    __twr_v272 = (uint64_t)(&"Too many arguments specified!\n");
    ((void (*)(uint64_t))__twr_v271)(__twr_v272);
    __twr_v273 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v273)();
    __twr_l25:;
    _mng_foundoutput191 = 1ULL;
    __twr_v274 = (uint64_t)(&TlCopyString);
    __twr_v275 = (uint64_t)(&FeOutputFile);
    __twr_v276 = 3ULL;
    __twr_v277 = _mng_i193 << __twr_v276;
    __twr_v278 = _mng_argv186 + __twr_v277;
    __twr_v279 = *(uint64_t*)(__twr_v278);
    __twr_v280 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v274)(__twr_v275, __twr_v279, __twr_v280);
    goto __twr_l12;
    __twr_l24:;
    _mng_foundinput190 = 1ULL;
    __twr_v281 = (uint64_t)(&TlCopyString);
    __twr_v282 = (uint64_t)(&FeInputFile);
    __twr_v283 = 3ULL;
    __twr_v284 = _mng_i193 << __twr_v283;
    __twr_v285 = _mng_argv186 + __twr_v284;
    __twr_v286 = *(uint64_t*)(__twr_v285);
    __twr_v287 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v281)(__twr_v282, __twr_v286, __twr_v287);
    __twr_l12:;
    __twr_v288 = 1ULL;
    __twr_v289 = _mng_i193 + __twr_v288;
    _mng_i193 = __twr_v289;
    __twr_l11:;
    if (_mng_i193 < _mng_argc185) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput190) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v290 = (uint64_t)(&TlPrintString);
    __twr_v291 = (uint64_t)(&"Error: No input file specified.\n");
    ((void (*)(uint64_t))__twr_v290)(__twr_v291);
    __twr_v292 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v292)();
    __twr_l27:;
    if (_mng_foundoutput191) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v293 = (uint64_t)(&TlPrintString);
    __twr_v294 = (uint64_t)(&"Error: No output file specified.\n");
    ((void (*)(uint64_t))__twr_v293)(__twr_v294);
    __twr_v295 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v295)();
    __twr_l29:;
    if (_mng_foundtarget192) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v296 = (uint64_t)(&TlPrintString);
    __twr_v297 = (uint64_t)(&"Error: No target specified.\n");
    ((void (*)(uint64_t))__twr_v296)(__twr_v297);
    __twr_v298 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v298)();
    __twr_l31:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename299, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t _mng_created304;
    uint64_t _mng_fileblock305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    __twr_v300 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v301 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v302 = 560ULL;
    __twr_v303 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v300)(__twr_v301, __twr_v302, _mng_includename299, (uint64_t)(&_mng_created304));
    _mng_fileblock305 = __twr_v303;
    if (!(_mng_created304)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v306 = (uint64_t)(&TlCopyString);
    __twr_v307 = 304ULL;
    __twr_v308 = _mng_fileblock305 + __twr_v307;
    __twr_v309 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v306)(__twr_v308, _mng_includename299, __twr_v309);
    __twr_v310 = 40ULL;
    __twr_v311 = _mng_fileblock305 + __twr_v310;
    *(uint64_t*)(__twr_v311) = __twr_v308;
    __twr_l34:;
    _jkl_retv = _mng_fileblock305;
    goto _jkl_epilogue;
    __twr_l33:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created304;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock312, uint64_t _mng_filepath313) {
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    __twr_v314 = (uint64_t)(&TlCopyString);
    __twr_v315 = 48ULL;
    __twr_v316 = _mng_fileblock312 + __twr_v315;
    __twr_v317 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v314)(__twr_v316, _mng_filepath313, __twr_v317);
    __twr_l36:;
    _jkl_epilogue:;
}
extern uint64_t CtTargetInfo[12];
extern uint64_t FoxTargetInfo[12];
extern uint64_t XrTargetInfo[12];
uint64_t TrgInfoRecords[8] = {
    (uint64_t)(&CtTargetInfo),
    (uint64_t)(&FoxTargetInfo),
    (uint64_t)(&XrTargetInfo),
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
void TrgInitialize() {
    uint64_t __twr_v318;
    uint64_t _mng_target319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    __twr_v318 = (uint64_t)(&TrgInfoRecords);
    _mng_target319 = __twr_v318;
    __twr_v320 = *(uint64_t*)(_mng_target319);
    if (!(__twr_v320)) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v321 = (uint64_t)(&TlCompareString);
    __twr_v322 = (uint64_t)(&FeTargetString);
    __twr_v323 = *(uint64_t*)(_mng_target319);
    __twr_v324 = *(uint64_t*)(__twr_v323);
    __twr_v325 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v321)(__twr_v322, __twr_v324);
    if (__twr_v325) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v326 = *(uint64_t*)(_mng_target319);
    __twr_v327 = (uint64_t)(&JklTargetInfo);
    *(uint64_t*)(__twr_v327) = __twr_v326;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v328 = 8ULL;
    __twr_v329 = _mng_target319 + __twr_v328;
    _mng_target319 = __twr_v329;
    __twr_l40:;
    __twr_v330 = *(uint64_t*)(_mng_target319);
    if (__twr_v330) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v331 = (uint64_t)(&TlUserError);
    __twr_v332 = (uint64_t)(&"Unknown target specified");
    __twr_v333 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v331)(__twr_v332, __twr_v333, __twr_v333, __twr_v333);
    __twr_l37:;
    _jkl_epilogue:;
}
void FeInitialize(uint64_t _mng_argc334, uint64_t _mng_argv335) {
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t _mng_status345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    __twr_v336 = (uint64_t)(&TlInitializeHashTable);
    __twr_v337 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v336)(__twr_v337);
    __twr_v338 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v338)();
    __twr_v339 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v339)(_mng_argc334, _mng_argv335);
    __twr_v340 = (uint64_t)(&TlOpenSource);
    __twr_v341 = (uint64_t)(&FeInputFile);
    __twr_v342 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v340)(__twr_v341, (uint64_t)(&__twr_v343));
    __twr_v344 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v344) = __twr_v343;
    _mng_status345 = __twr_v342;
    if (!(_mng_status345)) { goto __twr_l44; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v346 = (uint64_t)(&TlUserError);
    __twr_v347 = (uint64_t)(&"Failed to open source file.");
    __twr_v348 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v346)(__twr_v347, __twr_v348, __twr_v348, __twr_v348);
    __twr_l44:;
    __twr_v349 = (uint64_t)(&TrgInitialize);
    ((void (*)())__twr_v349)();
    __twr_v350 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v350)();
    __twr_v351 = (uint64_t)(&PrsInitialize);
    ((void (*)())__twr_v351)();
    __twr_l43:;
    _jkl_epilogue:;
}
void FeOutputHeaderDependencies() {
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_handle356;
    uint64_t _mng_status357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t _mng_headerbuf363[11];
    uint64_t __twr_v364;
    uint64_t _mng_head365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t _mng_entry369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t _mng_hashentry372;
    uint64_t _mng_fileblock373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    __twr_v352 = (uint64_t)(&TlOpenDestination);
    __twr_v353 = (uint64_t)(&FeOutputHeaders);
    __twr_v354 = *(uint64_t*)(__twr_v353);
    __twr_v355 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v352)(__twr_v354, (uint64_t)(&_mng_handle356));
    _mng_status357 = __twr_v355;
    if (!(_mng_status357)) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v358 = (uint64_t)(&TlUserError);
    __twr_v359 = (uint64_t)(&"Failed to open header dependencies file.");
    __twr_v360 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v358)(__twr_v359, __twr_v360, __twr_v360, __twr_v360);
    __twr_l47:;
    __twr_v361 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v362 = (uint64_t)(&_mng_headerbuf363);
    ((void (*)(uint64_t))__twr_v361)(__twr_v362);
    __twr_v364 = (uint64_t)(&FeFileBlockHashTable);
    _mng_head365 = __twr_v364;
    __twr_v366 = 8ULL;
    __twr_v367 = _mng_head365 + __twr_v366;
    __twr_v368 = *(uint64_t*)(__twr_v367);
    _mng_entry369 = __twr_v368;
    if (_mng_head365 == _mng_entry369) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v370 = 16ULL;
    __twr_v371 = _mng_entry369 - __twr_v370;
    _mng_hashentry372 = __twr_v371;
    _mng_fileblock373 = _mng_hashentry372;
    __twr_v374 = (uint64_t)(&FeRootFileBlock);
    __twr_v375 = *(uint64_t*)(__twr_v374);
    if (_mng_fileblock373 == __twr_v375) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v376 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v377 = (uint64_t)(&_mng_headerbuf363);
    __twr_v378 = 48ULL;
    __twr_v379 = _mng_fileblock373 + __twr_v378;
    __twr_v380 = (uint64_t)(&TlMeasureString);
    __twr_v381 = ((uint64_t (*)(uint64_t))__twr_v380)(__twr_v379);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v376)(__twr_v377, __twr_v379, __twr_v381);
    __twr_v382 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v383 = 10ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v382)(__twr_v377, __twr_v383);
    __twr_l52:;
    __twr_v384 = 8ULL;
    __twr_v385 = _mng_entry369 + __twr_v384;
    __twr_v386 = *(uint64_t*)(__twr_v385);
    _mng_entry369 = __twr_v386;
    __twr_l51:;
    if (_mng_head365 != _mng_entry369) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_v387 = (uint64_t)(&TlWriteFile);
    __twr_v388 = (uint64_t)(&_mng_headerbuf363);
    __twr_v389 = *(uint64_t*)(__twr_v388);
    __twr_v390 = 16ULL;
    __twr_v391 = __twr_v388 + __twr_v390;
    __twr_v392 = *(uint64_t*)(__twr_v391);
    __twr_v393 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v387)(_mng_handle356, __twr_v389, __twr_v392);
    __twr_v394 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v394)(__twr_v388);
    __twr_l46:;
    _jkl_epilogue:;
}
extern void IrGenerate();
extern void IrSimplify();
extern void IrEliminateDeadVariables();
void JklCompileProgram(uint64_t _mng_argc395, uint64_t _mng_argv396) {
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t _mng_status409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    __twr_v397 = *(uint64_t*)(_mng_argv396);
    __twr_v398 = (uint64_t)(&JklBinaryName);
    *(uint64_t*)(__twr_v398) = __twr_v397;
    __twr_v399 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v399)(_mng_argc395, _mng_argv396);
    __twr_v400 = (uint64_t)(&PrsProgram);
    ((void (*)())__twr_v400)();
    __twr_v401 = (uint64_t)(&IrGenerate);
    ((void (*)())__twr_v401)();
    __twr_v402 = (uint64_t)(&IrSimplify);
    ((void (*)())__twr_v402)();
    __twr_v403 = (uint64_t)(&IrEliminateDeadVariables);
    ((void (*)())__twr_v403)();
    __twr_v404 = (uint64_t)(&TlOpenDestination);
    __twr_v405 = (uint64_t)(&FeOutputFile);
    __twr_v406 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v404)(__twr_v405, (uint64_t)(&__twr_v407));
    __twr_v408 = (uint64_t)(&FeOutputFileHandle);
    *(uint64_t*)(__twr_v408) = __twr_v407;
    _mng_status409 = __twr_v406;
    if (!(_mng_status409)) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v410 = (uint64_t)(&TlUserError);
    __twr_v411 = (uint64_t)(&"Failed to open destination file.");
    __twr_v412 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v410)(__twr_v411, __twr_v412, __twr_v412, __twr_v412);
    __twr_l55:;
    __twr_v413 = (uint64_t)(&JklTargetInfo);
    __twr_v414 = *(uint64_t*)(__twr_v413);
    __twr_v415 = 8ULL;
    __twr_v416 = __twr_v414 + __twr_v415;
    __twr_v417 = *(uint64_t*)(__twr_v416);
    ((void (*)())__twr_v417)();
    __twr_v418 = (uint64_t)(&FeOutputHeaders);
    __twr_v419 = *(uint64_t*)(__twr_v418);
    if (!(__twr_v419)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v420 = (uint64_t)(&FeOutputHeaderDependencies);
    ((void (*)())__twr_v420)();
    __twr_l57:;
    __twr_l54:;
    _jkl_epilogue:;
}

#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg161);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename162, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock163, uint64_t _mng_filepath164);
extern uint64_t LexLookupSection(uint64_t _mng_name165);
extern void LexPushSection(uint64_t _mng_section166);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope167);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg168);
extern void LexExpandMacro(uint64_t _mng_macro169, uint64_t _mng_token170);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream171, uint64_t _mng_macro172);
extern void LexUninitializeStream(uint64_t _mng_stream173);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream174);
extern void LexPushStream(uint64_t _mng_stream175);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream176, uint64_t _mng_fileblock177, uint64_t _mng_handle178);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock179, uint64_t _mng_handle180);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope181);
extern uint64_t LexResetScope(uint64_t _mng_scope182);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope183);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest184, uint64_t _mng_src185);
extern void LexGetToken(uint64_t _mng_token186);
extern void LexPutbackToken(uint64_t _mng_token187);
extern uint64_t LexMatchToken(uint64_t _mng_token188, uint64_t _mng_type189, uint64_t _mng_subtype190);
extern void LexStreamError(uint64_t _mng_str191, uint64_t _mng_err1192, uint64_t _mng_err2193, uint64_t _mng_err3194);
extern void LexTokenError(uint64_t _mng_token195, uint64_t _mng_str196, uint64_t _mng_err1197, uint64_t _mng_err2198, uint64_t _mng_err3199);
extern uint64_t LexCrunchNumber(uint64_t _mng_token200, uint64_t _mng_buffer201);
uint64_t LexNextSymbolSection = 0ULL;
uint64_t LexCurrentSection = 0ULL;
uint64_t LexSectionListHead = 0ULL;
uint64_t LexSectionListTail = 0ULL;
uint64_t LexSectionStackElementZone[2];
uint64_t LexSectionHashTable[196];
uint64_t LexSectionStackTop;
uint64_t LexDefaultSection[234];
uint64_t LexTextSection[234];
uint64_t LexDataSection[234];
uint64_t LexBssSection[234];
void LexInitializeSection(uint64_t _mng_section202, uint64_t _mng_name203) {
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    __twr_v204 = (uint64_t)(&TlCopyString);
    __twr_v205 = 48ULL;
    __twr_v206 = _mng_section202 + __twr_v205;
    __twr_v207 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v204)(__twr_v206, _mng_name203, __twr_v207);
    __twr_v208 = 40ULL;
    __twr_v209 = _mng_section202 + __twr_v208;
    *(uint64_t*)(__twr_v209) = __twr_v206;
    __twr_v210 = (uint64_t)(&TlInitializeHashTable);
    __twr_v211 = 120ULL;
    __twr_v212 = _mng_section202 + __twr_v211;
    ((void (*)(uint64_t))__twr_v210)(__twr_v212);
    __twr_v213 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v214 = 1776ULL;
    __twr_v215 = _mng_section202 + __twr_v214;
    ((void (*)(uint64_t))__twr_v213)(__twr_v215);
    __twr_v216 = 1688ULL;
    __twr_v217 = _mng_section202 + __twr_v216;
    ((void (*)(uint64_t))__twr_v213)(__twr_v217);
    __twr_v218 = (uint64_t)(&LexDefaultSection);
    if (_mng_section202 == __twr_v218) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v219 = 0ULL;
    __twr_v220 = 112ULL;
    __twr_v221 = _mng_section202 + __twr_v220;
    *(uint64_t*)(__twr_v221) = __twr_v219;
    __twr_v222 = (uint64_t)(&LexSectionListTail);
    __twr_v223 = *(uint64_t*)(__twr_v222);
    if (!(__twr_v223)) { goto __twr_l6; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v224 = (uint64_t)(&LexSectionListTail);
    __twr_v225 = *(uint64_t*)(__twr_v224);
    __twr_v226 = 112ULL;
    __twr_v227 = __twr_v225 + __twr_v226;
    *(uint64_t*)(__twr_v227) = _mng_section202;
    goto __twr_l4;
    __twr_l6:;
    __twr_v228 = (uint64_t)(&LexSectionListHead);
    *(uint64_t*)(__twr_v228) = _mng_section202;
    __twr_l4:;
    __twr_v229 = (uint64_t)(&LexSectionListTail);
    *(uint64_t*)(__twr_v229) = _mng_section202;
    __twr_l2:;
    __twr_l1:;
    _jkl_epilogue:;
}
void LexInitializeSectionStuff() {
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    __twr_v230 = (uint64_t)(&TlInitializeZone);
    __twr_v231 = (uint64_t)(&LexSectionStackElementZone);
    __twr_v232 = 16ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v230)(__twr_v231, __twr_v232);
    __twr_v233 = (uint64_t)(&TlInitializeHashTable);
    __twr_v234 = (uint64_t)(&LexSectionHashTable);
    ((void (*)(uint64_t))__twr_v233)(__twr_v234);
    __twr_v235 = (uint64_t)(&LexInitializeSection);
    __twr_v236 = (uint64_t)(&LexDefaultSection);
    __twr_v237 = (uint64_t)(&"DEFAULT_SECTION");
    ((void (*)(uint64_t, uint64_t))__twr_v235)(__twr_v236, __twr_v237);
    __twr_v238 = (uint64_t)(&LexTextSection);
    __twr_v239 = (uint64_t)(&"text");
    ((void (*)(uint64_t, uint64_t))__twr_v235)(__twr_v238, __twr_v239);
    __twr_v240 = (uint64_t)(&LexDataSection);
    __twr_v241 = (uint64_t)(&"data");
    ((void (*)(uint64_t, uint64_t))__twr_v235)(__twr_v240, __twr_v241);
    __twr_v242 = (uint64_t)(&LexBssSection);
    __twr_v243 = (uint64_t)(&"bss");
    ((void (*)(uint64_t, uint64_t))__twr_v235)(__twr_v242, __twr_v243);
    __twr_v244 = (uint64_t)(&LexCurrentSection);
    *(uint64_t*)(__twr_v244) = __twr_v236;
    __twr_l7:;
    _jkl_epilogue:;
}
uint64_t LexLookupSection(uint64_t _mng_name245) {
    uint64_t _jkl_retv;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t _mng_created252;
    uint64_t _mng_section253;
    uint64_t __twr_v254;
    __twr_v246 = *(uint8_t*)(_mng_name245);
    if (__twr_v246) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v247 = (uint64_t)(&LexDefaultSection);
    _jkl_retv = __twr_v247;
    goto _jkl_epilogue;
    __twr_l9:;
    __twr_v248 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v249 = (uint64_t)(&LexSectionHashTable);
    __twr_v250 = 1872ULL;
    __twr_v251 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v248)(__twr_v249, __twr_v250, _mng_name245, (uint64_t)(&_mng_created252));
    _mng_section253 = __twr_v251;
    if (_mng_created252) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    _jkl_retv = _mng_section253;
    goto _jkl_epilogue;
    __twr_l11:;
    __twr_v254 = (uint64_t)(&LexInitializeSection);
    ((void (*)(uint64_t, uint64_t))__twr_v254)(_mng_section253, _mng_name245);
    _jkl_retv = _mng_section253;
    goto _jkl_epilogue;
    __twr_l8:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexPushSection(uint64_t _mng_section255) {
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t _mng_elem259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    __twr_v256 = (uint64_t)(&TlAllocateFromZone);
    __twr_v257 = (uint64_t)(&LexSectionStackElementZone);
    __twr_v258 = ((uint64_t (*)(uint64_t))__twr_v256)(__twr_v257);
    _mng_elem259 = __twr_v258;
    __twr_v260 = (uint64_t)(&LexSectionStackTop);
    __twr_v261 = *(uint64_t*)(__twr_v260);
    *(uint64_t*)(_mng_elem259) = __twr_v261;
    __twr_v262 = (uint64_t)(&LexCurrentSection);
    __twr_v263 = *(uint64_t*)(__twr_v262);
    __twr_v264 = 8ULL;
    __twr_v265 = _mng_elem259 + __twr_v264;
    *(uint64_t*)(__twr_v265) = __twr_v263;
    *(uint64_t*)(__twr_v260) = _mng_elem259;
    *(uint64_t*)(__twr_v262) = _mng_section255;
    __twr_l13:;
    _jkl_epilogue:;
}
uint64_t LexPopSection() {
    uint64_t _jkl_retv;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t _mng_elem268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    __twr_v266 = (uint64_t)(&LexSectionStackTop);
    __twr_v267 = *(uint64_t*)(__twr_v266);
    _mng_elem268 = __twr_v267;
    if (_mng_elem268) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v269 = 0ULL;
    _jkl_retv = __twr_v269;
    goto _jkl_epilogue;
    __twr_l15:;
    __twr_v270 = *(uint64_t*)(_mng_elem268);
    __twr_v271 = (uint64_t)(&LexSectionStackTop);
    *(uint64_t*)(__twr_v271) = __twr_v270;
    __twr_v272 = 8ULL;
    __twr_v273 = _mng_elem268 + __twr_v272;
    __twr_v274 = *(uint64_t*)(__twr_v273);
    __twr_v275 = (uint64_t)(&LexCurrentSection);
    *(uint64_t*)(__twr_v275) = __twr_v274;
    __twr_v276 = (uint64_t)(&TlFreeToZone);
    __twr_v277 = (uint64_t)(&LexSectionStackElementZone);
    ((void (*)(uint64_t, uint64_t))__twr_v276)(__twr_v277, _mng_elem268);
    __twr_v278 = 1ULL;
    _jkl_retv = __twr_v278;
    goto _jkl_epilogue;
    __twr_l14:;
    _jkl_epilogue:;
    return _jkl_retv;
}

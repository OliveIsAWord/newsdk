#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintHex(uint64_t _mng_num10);
extern void TlPrintCharacter(uint64_t _mng_byte11);
extern void TlInternalError(uint64_t _mng_str12, uint64_t _mng_err113, uint64_t _mng_err214, uint64_t _mng_err315);
extern void TlUserError(uint64_t _mng_str16, uint64_t _mng_err117, uint64_t _mng_err218, uint64_t _mng_err319);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr22);
extern uint64_t TlCompareString(uint64_t _mng_str123, uint64_t _mng_str224);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str125, uint64_t _mng_str226, uint64_t _mng_count27);
extern void TlCopyString(uint64_t _mng_dest28, uint64_t _mng_src29, uint64_t _mng_bufsize30);
extern uint64_t TlOpenSource(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename32, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle33);
extern uint64_t TlReadFile(uint64_t _mng_handle34, uint64_t _mng_bytes35, uint64_t _mng_buffer36);
extern uint64_t TlWriteFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable40);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable41);
extern void TlInsertHashTable(uint64_t _mng_hashtable42, uint64_t _mng_entry43, uint64_t _mng_key44);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entrysize49, uint64_t _mng_key50, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable51, uint64_t _mng_key52);
extern void TlRemoveHashTable(uint64_t _mng_entry53);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable54, uint64_t _mng_enumfunc55);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable56, uint64_t _mng_key57, uint64_t _mng_hash58);
extern uint64_t TlHashString(uint64_t _mng_str59);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable60, uint64_t _mng_outerscope61, uint64_t _mng_deletefunc62);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable65);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable66, uint64_t _mng_name67);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_entry69, uint64_t _mng_name70);
extern void TlRemoveSymbolTable(uint64_t _mng_entry71);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array73);
extern void TlInsertDynamicBuffer(uint64_t _mng_array74, uint64_t _mng_byte75);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_srcbuf77, uint64_t _mng_length78);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_number80, uint64_t _mng_base81);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array82);
extern uint64_t TlMatchPath(uint64_t _mng_path83, uint64_t _mng_pathset84, uint64_t _mng_resultingpath85, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath86, uint64_t _mng_destpath87);
extern uint64_t TlGetFileName(uint64_t _mng_path88);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path89);
extern uint64_t TlPathExists(uint64_t _mng_path90);
extern uint64_t TlIterateDirectory(uint64_t _mng_path91, uint64_t _mng_callback92, uint64_t _mng_context93);
extern uint64_t TlGetPathExtension(uint64_t _mng_path94);
extern uint64_t TlStatFile(uint64_t _mng_path95, uint64_t _mng_statrecord96);
extern uint64_t TlCreateDirectory(uint64_t _mng_path97);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path98);
extern void TlInitializeZone(uint64_t _mng_zone99, uint64_t _mng_blocksize100);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone101);
extern void TlFreeToZone(uint64_t _mng_zone102, uint64_t _mng_block103);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant104);
extern void TlPunchValue(uint64_t _mng_ptr105, uint64_t _mng_value106, uint64_t _mng_bytes107);
extern uint64_t TlTokenize(uint64_t _mng_buffer108, uint64_t _mng_tokenbuffer109, uint64_t _mng_bufsize110, uint64_t _mng_delimiter111);
extern uint64_t TlStringToNumber(uint64_t _mng_src112, uint64_t _mng_bufsize113, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler114);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine115, uint64_t _mng_arg116, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread117);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex118);
extern void TlReleaseMutex(uint64_t _mng_mutex119);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue120);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore121);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore122);
extern uint64_t TlSystem(uint64_t _mng_cmdline123);
extern uint64_t TlCurrentEpochTime();
extern void JklCompileProgram(uint64_t _mng_argc124, uint64_t _mng_argv125);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg126);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename127, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock128, uint64_t _mng_filepath129);
extern uint64_t LexLookupSection(uint64_t _mng_name130);
extern void LexPushSection(uint64_t _mng_section131);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope132);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg133);
extern void LexExpandMacro(uint64_t _mng_macro134, uint64_t _mng_token135);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream136, uint64_t _mng_macro137);
extern void LexUninitializeStream(uint64_t _mng_stream138);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream139);
extern void LexPushStream(uint64_t _mng_stream140);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream141, uint64_t _mng_fileblock142, uint64_t _mng_handle143);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock144, uint64_t _mng_handle145);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope146);
extern uint64_t LexResetScope(uint64_t _mng_scope147);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope148);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest149, uint64_t _mng_src150);
extern void LexGetToken(uint64_t _mng_token151);
extern void LexPutbackToken(uint64_t _mng_token152);
extern uint64_t LexMatchToken(uint64_t _mng_token153, uint64_t _mng_type154, uint64_t _mng_subtype155);
extern void LexStreamError(uint64_t _mng_str156, uint64_t _mng_err1157, uint64_t _mng_err2158, uint64_t _mng_err3159);
extern void LexTokenError(uint64_t _mng_token160, uint64_t _mng_str161, uint64_t _mng_err1162, uint64_t _mng_err2163, uint64_t _mng_err3164);
extern uint64_t LexCrunchNumber(uint64_t _mng_token165, uint64_t _mng_buffer166);
uint64_t LexNextSymbolSection = 0ULL;
uint64_t LexCurrentSection = 0ULL;
uint64_t LexSectionListHead = 0ULL;
uint64_t LexSectionListTail = 0ULL;
uint64_t LexSectionStackElementZone[2];
uint64_t LexSectionHashTable[196];
uint64_t LexSectionStackTop;
uint64_t LexDefaultSection[234];
uint64_t LexTextSection[234];
uint64_t LexDataSection[234];
uint64_t LexBssSection[234];
void LexInitializeSection(uint64_t _mng_section167, uint64_t _mng_name168) {
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    __twr_v169 = (uint64_t)(&TlCopyString);
    __twr_v170 = 48ULL;
    __twr_v171 = _mng_section167 + __twr_v170;
    __twr_v172 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v169)(__twr_v171, _mng_name168, __twr_v172);
    __twr_v173 = 40ULL;
    __twr_v174 = _mng_section167 + __twr_v173;
    *(uint64_t*)(__twr_v174) = __twr_v171;
    __twr_v175 = (uint64_t)(&TlInitializeHashTable);
    __twr_v176 = 120ULL;
    __twr_v177 = _mng_section167 + __twr_v176;
    ((void (*)(uint64_t))__twr_v175)(__twr_v177);
    __twr_v178 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v179 = 1776ULL;
    __twr_v180 = _mng_section167 + __twr_v179;
    ((void (*)(uint64_t))__twr_v178)(__twr_v180);
    __twr_v181 = 1688ULL;
    __twr_v182 = _mng_section167 + __twr_v181;
    ((void (*)(uint64_t))__twr_v178)(__twr_v182);
    __twr_v183 = (uint64_t)(&LexDefaultSection);
    if (_mng_section167 == __twr_v183) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v184 = 0ULL;
    __twr_v185 = 112ULL;
    __twr_v186 = _mng_section167 + __twr_v185;
    *(uint64_t*)(__twr_v186) = __twr_v184;
    __twr_v187 = (uint64_t)(&LexSectionListTail);
    __twr_v188 = *(uint64_t*)(__twr_v187);
    if (!(__twr_v188)) { goto __twr_l6; } else { goto __twr_l5; }
    __twr_l5:;
    __twr_v189 = (uint64_t)(&LexSectionListTail);
    __twr_v190 = *(uint64_t*)(__twr_v189);
    __twr_v191 = 112ULL;
    __twr_v192 = __twr_v190 + __twr_v191;
    *(uint64_t*)(__twr_v192) = _mng_section167;
    goto __twr_l4;
    __twr_l6:;
    __twr_v193 = (uint64_t)(&LexSectionListHead);
    *(uint64_t*)(__twr_v193) = _mng_section167;
    __twr_l4:;
    __twr_v194 = (uint64_t)(&LexSectionListTail);
    *(uint64_t*)(__twr_v194) = _mng_section167;
    __twr_l2:;
    __twr_l1:;
    _jkl_epilogue:;
}
void LexInitializeSectionStuff() {
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    __twr_v195 = (uint64_t)(&TlInitializeZone);
    __twr_v196 = (uint64_t)(&LexSectionStackElementZone);
    __twr_v197 = 16ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v195)(__twr_v196, __twr_v197);
    __twr_v198 = (uint64_t)(&TlInitializeHashTable);
    __twr_v199 = (uint64_t)(&LexSectionHashTable);
    ((void (*)(uint64_t))__twr_v198)(__twr_v199);
    __twr_v200 = (uint64_t)(&LexInitializeSection);
    __twr_v201 = (uint64_t)(&LexDefaultSection);
    __twr_v202 = (uint64_t)(&"DEFAULT_SECTION");
    ((void (*)(uint64_t, uint64_t))__twr_v200)(__twr_v201, __twr_v202);
    __twr_v203 = (uint64_t)(&LexTextSection);
    __twr_v204 = (uint64_t)(&"text");
    ((void (*)(uint64_t, uint64_t))__twr_v200)(__twr_v203, __twr_v204);
    __twr_v205 = (uint64_t)(&LexDataSection);
    __twr_v206 = (uint64_t)(&"data");
    ((void (*)(uint64_t, uint64_t))__twr_v200)(__twr_v205, __twr_v206);
    __twr_v207 = (uint64_t)(&LexBssSection);
    __twr_v208 = (uint64_t)(&"bss");
    ((void (*)(uint64_t, uint64_t))__twr_v200)(__twr_v207, __twr_v208);
    __twr_v209 = (uint64_t)(&LexCurrentSection);
    *(uint64_t*)(__twr_v209) = __twr_v201;
    __twr_l7:;
    _jkl_epilogue:;
}
uint64_t LexLookupSection(uint64_t _mng_name210) {
    uint64_t _jkl_retv;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t _mng_created217;
    uint64_t _mng_section218;
    uint64_t __twr_v219;
    __twr_v211 = *(uint8_t*)(_mng_name210);
    if (__twr_v211) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v212 = (uint64_t)(&LexDefaultSection);
    _jkl_retv = __twr_v212;
    goto _jkl_epilogue;
    __twr_l9:;
    __twr_v213 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v214 = (uint64_t)(&LexSectionHashTable);
    __twr_v215 = 1872ULL;
    __twr_v216 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v213)(__twr_v214, __twr_v215, _mng_name210, (uint64_t)(&_mng_created217));
    _mng_section218 = __twr_v216;
    if (_mng_created217) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    _jkl_retv = _mng_section218;
    goto _jkl_epilogue;
    __twr_l11:;
    __twr_v219 = (uint64_t)(&LexInitializeSection);
    ((void (*)(uint64_t, uint64_t))__twr_v219)(_mng_section218, _mng_name210);
    _jkl_retv = _mng_section218;
    goto _jkl_epilogue;
    __twr_l8:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexPushSection(uint64_t _mng_section220) {
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t _mng_elem224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    __twr_v221 = (uint64_t)(&TlAllocateFromZone);
    __twr_v222 = (uint64_t)(&LexSectionStackElementZone);
    __twr_v223 = ((uint64_t (*)(uint64_t))__twr_v221)(__twr_v222);
    _mng_elem224 = __twr_v223;
    __twr_v225 = (uint64_t)(&LexSectionStackTop);
    __twr_v226 = *(uint64_t*)(__twr_v225);
    *(uint64_t*)(_mng_elem224) = __twr_v226;
    __twr_v227 = (uint64_t)(&LexCurrentSection);
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = 8ULL;
    __twr_v230 = _mng_elem224 + __twr_v229;
    *(uint64_t*)(__twr_v230) = __twr_v228;
    *(uint64_t*)(__twr_v225) = _mng_elem224;
    *(uint64_t*)(__twr_v227) = _mng_section220;
    __twr_l13:;
    _jkl_epilogue:;
}
uint64_t LexPopSection() {
    uint64_t _jkl_retv;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t _mng_elem233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    __twr_v231 = (uint64_t)(&LexSectionStackTop);
    __twr_v232 = *(uint64_t*)(__twr_v231);
    _mng_elem233 = __twr_v232;
    if (_mng_elem233) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v234 = 0ULL;
    _jkl_retv = __twr_v234;
    goto _jkl_epilogue;
    __twr_l15:;
    __twr_v235 = *(uint64_t*)(_mng_elem233);
    __twr_v236 = (uint64_t)(&LexSectionStackTop);
    *(uint64_t*)(__twr_v236) = __twr_v235;
    __twr_v237 = 8ULL;
    __twr_v238 = _mng_elem233 + __twr_v237;
    __twr_v239 = *(uint64_t*)(__twr_v238);
    __twr_v240 = (uint64_t)(&LexCurrentSection);
    *(uint64_t*)(__twr_v240) = __twr_v239;
    __twr_v241 = (uint64_t)(&TlFreeToZone);
    __twr_v242 = (uint64_t)(&LexSectionStackElementZone);
    ((void (*)(uint64_t, uint64_t))__twr_v241)(__twr_v242, _mng_elem233);
    __twr_v243 = 1ULL;
    _jkl_retv = __twr_v243;
    goto _jkl_epilogue;
    __twr_l14:;
    _jkl_epilogue:;
    return _jkl_retv;
}

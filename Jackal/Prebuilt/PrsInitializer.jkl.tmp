#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str3);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr4, uint64_t _mng_sz5, uint64_t _mng_byte6);
extern void TlCopyMemory(uint64_t _mng_dest7, uint64_t _mng_src8, uint64_t _mng_sz9);
extern void TlPrintString(uint64_t _mng_str10);
extern void TlPrintNumber(uint64_t _mng_num11);
extern void TlPrintHex(uint64_t _mng_num12);
extern void TlPrintCharacter(uint64_t _mng_byte13);
extern void TlInternalError(uint64_t _mng_str14, uint64_t _mng_err115, uint64_t _mng_err216, uint64_t _mng_err317);
extern void TlUserError(uint64_t _mng_str18, uint64_t _mng_err119, uint64_t _mng_err220, uint64_t _mng_err321);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes22, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr24);
extern uint64_t TlCompareString(uint64_t _mng_str125, uint64_t _mng_str226);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str127, uint64_t _mng_str228, uint64_t _mng_count29);
extern void TlCopyString(uint64_t _mng_dest30, uint64_t _mng_src31, uint64_t _mng_bufsize32);
extern uint64_t TlOpenSource(uint64_t _mng_filename33, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle35);
extern uint64_t TlReadFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlWriteFile(uint64_t _mng_handle39, uint64_t _mng_bytes40, uint64_t _mng_buffer41);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable42);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable43);
extern void TlInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entry48, uint64_t _mng_key49);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable50, uint64_t _mng_entrysize51, uint64_t _mng_key52, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable53, uint64_t _mng_key54);
extern void TlRemoveHashTable(uint64_t _mng_entry55);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable56, uint64_t _mng_enumfunc57);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable58, uint64_t _mng_key59, uint64_t _mng_hash60);
extern uint64_t TlHashString(uint64_t _mng_str61);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable62, uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable67);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_name69);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_entry71, uint64_t _mng_name72);
extern void TlRemoveSymbolTable(uint64_t _mng_entry73);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array74);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlInsertDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_byte77);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_srcbuf79, uint64_t _mng_length80);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array81, uint64_t _mng_number82, uint64_t _mng_base83);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array84);
extern uint64_t TlMatchPath(uint64_t _mng_path85, uint64_t _mng_pathset86, uint64_t _mng_resultingpath87, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath88, uint64_t _mng_destpath89);
extern uint64_t TlGetFileName(uint64_t _mng_path90);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path91);
extern uint64_t TlPathExists(uint64_t _mng_path92);
extern uint64_t TlIterateDirectory(uint64_t _mng_path93, uint64_t _mng_callback94, uint64_t _mng_context95);
extern uint64_t TlGetPathExtension(uint64_t _mng_path96);
extern uint64_t TlStatFile(uint64_t _mng_path97, uint64_t _mng_statrecord98);
extern uint64_t TlCreateDirectory(uint64_t _mng_path99);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path100);
extern void TlInitializeZone(uint64_t _mng_zone101, uint64_t _mng_blocksize102);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone103);
extern void TlFreeToZone(uint64_t _mng_zone104, uint64_t _mng_block105);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant106);
extern void TlPunchValue(uint64_t _mng_ptr107, uint64_t _mng_value108, uint64_t _mng_bytes109);
extern uint64_t TlTokenize(uint64_t _mng_buffer110, uint64_t _mng_tokenbuffer111, uint64_t _mng_bufsize112, uint64_t _mng_delimiter113);
extern uint64_t TlStringToNumber(uint64_t _mng_src114, uint64_t _mng_bufsize115, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler116);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine117, uint64_t _mng_arg118, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread119);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex120);
extern void TlReleaseMutex(uint64_t _mng_mutex121);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue122);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore123);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore124);
extern uint64_t TlSystem(uint64_t _mng_cmdline125);
extern uint64_t TlCurrentEpochTime();
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t FeRootFileBlock;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg126);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename127, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock128, uint64_t _mng_filepath129);
extern uint64_t LexLookupSection(uint64_t _mng_name130);
extern void LexPushSection(uint64_t _mng_section131);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope132);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg133);
extern void LexExpandMacro(uint64_t _mng_macro134, uint64_t _mng_token135);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream136, uint64_t _mng_macro137);
extern void LexUninitializeStream(uint64_t _mng_stream138);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream139);
extern void LexPushStream(uint64_t _mng_stream140);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream141, uint64_t _mng_fileblock142, uint64_t _mng_handle143);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock144, uint64_t _mng_handle145);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope146);
extern uint64_t LexResetScope(uint64_t _mng_scope147);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope148);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest149, uint64_t _mng_src150);
extern void LexGetToken(uint64_t _mng_token151);
extern void LexPutbackToken(uint64_t _mng_token152);
extern uint64_t LexMatchToken(uint64_t _mng_token153, uint64_t _mng_type154, uint64_t _mng_subtype155);
extern void LexStreamError(uint64_t _mng_str156, uint64_t _mng_err1157, uint64_t _mng_err2158, uint64_t _mng_err3159);
extern void LexTokenError(uint64_t _mng_token160, uint64_t _mng_str161, uint64_t _mng_err1162, uint64_t _mng_err2163, uint64_t _mng_err3164);
extern uint64_t LexCrunchNumber(uint64_t _mng_token165, uint64_t _mng_buffer166);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node167);
extern uint64_t PrsParseInitializer(uint64_t _mng_errtoken168, uint64_t _mng_type169, uint64_t _mng_contentsarray170, uint64_t _mng_backpatcharray171, uint64_t _mng_contentsoffset172);
extern uint64_t PrsExpression(uint64_t _mng_minprecedence173);
extern void PrsCheckConstant(uint64_t _mng_errtoken174, uint64_t _mng_type175, uint64_t _mng_value176);
extern uint64_t PrsIsCompileTime(uint64_t _mng_node177);
extern uint64_t PrsCreateAstNode(uint64_t _mng_type178, uint64_t _mng_token179);
void PrsInitializeGrowableArray(uint64_t _mng_array180, uint64_t _mng_maxlength181) {
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    __twr_v182 = 0ULL;
    *(uint64_t*)(_mng_array180) = __twr_v182;
    __twr_v183 = 8ULL;
    __twr_v184 = _mng_array180 + __twr_v183;
    *(uint64_t*)(__twr_v184) = __twr_v182;
    __twr_v185 = 16ULL;
    __twr_v186 = _mng_array180 + __twr_v185;
    *(uint64_t*)(__twr_v186) = _mng_maxlength181;
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t PrsIndexGrowableArray(uint64_t _mng_array187, uint64_t _mng_index188, uint64_t _mng_length189, uint64_t _mng_unitlog190) {
    uint64_t _jkl_retv;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t _mng_lengthunits194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t _mng_newbuffer219;
    uint64_t _mng_status220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    __twr_v191 = 8ULL;
    __twr_v192 = _mng_array187 + __twr_v191;
    __twr_v193 = *(uint64_t*)(__twr_v192);
    _mng_lengthunits194 = __twr_v193;
    __twr_v195 = _mng_index188 + _mng_length189;
    if (__twr_v195 > _mng_lengthunits194) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v196 = *(uint64_t*)(_mng_array187);
    __twr_v197 = _mng_index188 << _mng_unitlog190;
    __twr_v198 = __twr_v196 + __twr_v197;
    _jkl_retv = __twr_v198;
    goto _jkl_epilogue;
    __twr_l3:;
    if (_mng_lengthunits194) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    _mng_lengthunits194 = 1ULL;
    __twr_l5:;
    __twr_v199 = _mng_index188 + _mng_length189;
    if (__twr_v199 <= _mng_lengthunits194) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v200 = 1ULL;
    __twr_v201 = _mng_lengthunits194 << __twr_v200;
    _mng_lengthunits194 = __twr_v201;
    __twr_l9:;
    __twr_v202 = _mng_index188 + _mng_length189;
    if (__twr_v202 > _mng_lengthunits194) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l8:;
    __twr_v203 = 16ULL;
    __twr_v204 = _mng_array187 + __twr_v203;
    __twr_v205 = *(uint64_t*)(__twr_v204);
    if (!(__twr_v205)) { goto __twr_l10; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v206 = 16ULL;
    __twr_v207 = _mng_array187 + __twr_v206;
    __twr_v208 = *(uint64_t*)(__twr_v207);
    if (_mng_lengthunits194 <= __twr_v208) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v209 = 16ULL;
    __twr_v210 = _mng_array187 + __twr_v209;
    __twr_v211 = *(uint64_t*)(__twr_v210);
    _mng_lengthunits194 = __twr_v211;
    __twr_l10:;
    __twr_v212 = 7ULL;
    __twr_v213 = _mng_lengthunits194 + __twr_v212;
    _mng_lengthunits194 = __twr_v213;
    __twr_v214 = 18446744073709551608ULL;
    __twr_v215 = _mng_lengthunits194 & __twr_v214;
    _mng_lengthunits194 = __twr_v215;
    __twr_v216 = (uint64_t)(&TlAlloc);
    __twr_v217 = _mng_lengthunits194 << _mng_unitlog190;
    __twr_v218 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v216)(__twr_v217, (uint64_t)(&_mng_newbuffer219));
    _mng_status220 = __twr_v218;
    if (!(_mng_status220)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v221 = (uint64_t)(&TlInternalError);
    __twr_v222 = (uint64_t)(&"Failed to grow array");
    __twr_v223 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v221)(__twr_v222, __twr_v223, __twr_v223, __twr_v223);
    __twr_l13:;
    __twr_v224 = 8ULL;
    __twr_v225 = _mng_array187 + __twr_v224;
    __twr_v226 = *(uint64_t*)(__twr_v225);
    if (!(__twr_v226)) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v227 = (uint64_t)(&TlCopyMemory);
    __twr_v228 = *(uint64_t*)(_mng_array187);
    __twr_v229 = 8ULL;
    __twr_v230 = _mng_array187 + __twr_v229;
    __twr_v231 = *(uint64_t*)(__twr_v230);
    __twr_v232 = __twr_v231 << _mng_unitlog190;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v227)(_mng_newbuffer219, __twr_v228, __twr_v232);
    __twr_v233 = (uint64_t)(&TlFree);
    __twr_v234 = *(uint64_t*)(_mng_array187);
    ((void (*)(uint64_t))__twr_v233)(__twr_v234);
    __twr_l15:;
    __twr_v235 = (uint64_t)(&TlFillMemoryWithByte);
    __twr_v236 = 8ULL;
    __twr_v237 = _mng_array187 + __twr_v236;
    __twr_v238 = *(uint64_t*)(__twr_v237);
    __twr_v239 = __twr_v238 << _mng_unitlog190;
    __twr_v240 = _mng_newbuffer219 + __twr_v239;
    __twr_v241 = _mng_lengthunits194 - __twr_v238;
    __twr_v242 = __twr_v241 << _mng_unitlog190;
    __twr_v243 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v235)(__twr_v240, __twr_v242, __twr_v243);
    *(uint64_t*)(_mng_array187) = _mng_newbuffer219;
    *(uint64_t*)(__twr_v237) = _mng_lengthunits194;
    __twr_v244 = *(uint64_t*)(_mng_array187);
    __twr_v245 = _mng_index188 << _mng_unitlog190;
    __twr_v246 = __twr_v244 + __twr_v245;
    _jkl_retv = __twr_v246;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void PrsParseArrayInitializer(uint64_t _mng_errtoken247, uint64_t _mng_type248, uint64_t _mng_contentsarray249, uint64_t _mng_backpatcharray250, uint64_t _mng_contentsoffset251) {
    uint64_t __twr_v252;
    uint64_t _mng_basetype253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t _mng_elementsize269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t _mng_bound273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_hasbound277;
    uint64_t _mng_index278;
    uint64_t _mng_offset279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t _mng_token282[4];
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t _mng_expr294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    __twr_v252 = *(uint64_t*)(_mng_type248);
    _mng_basetype253 = __twr_v252;
    __twr_v254 = 80ULL;
    __twr_v255 = _mng_basetype253 + __twr_v254;
    __twr_v256 = *(uint8_t*)(__twr_v255);
    __twr_v257 = 3ULL;
    if (__twr_v256 != __twr_v257) { goto __twr_l19; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v258 = *(uint64_t*)(_mng_basetype253);
    __twr_v259 = 104ULL;
    __twr_v260 = __twr_v258 + __twr_v259;
    __twr_v261 = *(uint64_t*)(__twr_v260);
    _mng_basetype253 = __twr_v261;
    __twr_l20:;
    __twr_v262 = 80ULL;
    __twr_v263 = _mng_basetype253 + __twr_v262;
    __twr_v264 = *(uint8_t*)(__twr_v263);
    __twr_v265 = 3ULL;
    if (__twr_v264 == __twr_v265) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v266 = 16ULL;
    __twr_v267 = _mng_type248 + __twr_v266;
    __twr_v268 = *(uint64_t*)(__twr_v267);
    _mng_elementsize269 = __twr_v268;
    __twr_v270 = 8ULL;
    __twr_v271 = _mng_type248 + __twr_v270;
    __twr_v272 = *(uint64_t*)(__twr_v271);
    _mng_bound273 = __twr_v272;
    __twr_v274 = 24ULL;
    __twr_v275 = _mng_type248 + __twr_v274;
    __twr_v276 = *(uint8_t*)(__twr_v275);
    _mng_hasbound277 = __twr_v276;
    _mng_index278 = 0ULL;
    _mng_offset279 = 0ULL;
    __twr_l21:;
    __twr_v280 = (uint64_t)(&LexMatchToken);
    __twr_v281 = (uint64_t)(&_mng_token282);
    __twr_v283 = 14ULL;
    __twr_v284 = 0ULL;
    __twr_v285 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v280)(__twr_v281, __twr_v283, __twr_v284);
    if (!(__twr_v285)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    goto __twr_l22;
    __twr_l23:;
    __twr_v286 = (uint64_t)(&LexMatchToken);
    __twr_v287 = 0ULL;
    __twr_v288 = 3ULL;
    __twr_v289 = 70ULL;
    __twr_v290 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v286)(__twr_v287, __twr_v288, __twr_v289);
    if (!(__twr_v290)) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v291 = (uint64_t)(&PrsExpression);
    __twr_v292 = 0ULL;
    __twr_v293 = ((uint64_t (*)(uint64_t))__twr_v291)(__twr_v292);
    _mng_expr294 = __twr_v293;
    __twr_v295 = (uint64_t)(&LexMatchToken);
    __twr_v296 = (uint64_t)(&_mng_token282);
    __twr_v297 = 11ULL;
    __twr_v298 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v295)(__twr_v296, __twr_v297, __twr_v292);
    if (__twr_v298) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v299 = (uint64_t)(&LexTokenError);
    __twr_v300 = (uint64_t)(&_mng_token282);
    __twr_v301 = (uint64_t)(&"Expected a right bracket");
    __twr_v302 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v299)(__twr_v300, __twr_v301, __twr_v302, __twr_v302, __twr_v302);
    __twr_l27:;
    __twr_v303 = (uint64_t)(&LexMatchToken);
    __twr_v304 = (uint64_t)(&_mng_token282);
    __twr_v305 = 8ULL;
    __twr_v306 = 73ULL;
    __twr_v307 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v303)(__twr_v304, __twr_v305, __twr_v306);
    if (__twr_v307) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v308 = (uint64_t)(&LexTokenError);
    __twr_v309 = (uint64_t)(&_mng_token282);
    __twr_v310 = (uint64_t)(&"Expected an equals sign");
    __twr_v311 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v308)(__twr_v309, __twr_v310, __twr_v311, __twr_v311, __twr_v311);
    __twr_l29:;
    __twr_v312 = 40ULL;
    __twr_v313 = _mng_expr294 + __twr_v312;
    __twr_v314 = *(uint8_t*)(__twr_v313);
    __twr_v315 = 3ULL;
    if (__twr_v314 == __twr_v315) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v316 = (uint64_t)(&LexTokenError);
    __twr_v317 = 0ULL;
    __twr_v318 = (uint64_t)(&"Expected a constant value");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v316)(_mng_expr294, __twr_v318, __twr_v317, __twr_v317, __twr_v317);
    __twr_l31:;
    __twr_v319 = 48ULL;
    __twr_v320 = _mng_expr294 + __twr_v319;
    __twr_v321 = *(uint64_t*)(__twr_v320);
    _mng_index278 = __twr_v321;
    __twr_v322 = _mng_index278 * _mng_elementsize269;
    _mng_offset279 = __twr_v322;
    __twr_l25:;
    if (_mng_index278 < _mng_bound273) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    if (!(_mng_hasbound277)) { goto __twr_l37; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v323 = (uint64_t)(&LexTokenError);
    __twr_v324 = (uint64_t)(&_mng_token282);
    __twr_v325 = (uint64_t)(&"Index exceeds array bound");
    __twr_v326 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v323)(__twr_v324, __twr_v325, __twr_v326, __twr_v326, __twr_v326);
    goto __twr_l35;
    __twr_l37:;
    __twr_v327 = 1ULL;
    __twr_v328 = _mng_index278 + __twr_v327;
    _mng_bound273 = __twr_v328;
    __twr_v329 = 8ULL;
    __twr_v330 = _mng_type248 + __twr_v329;
    *(uint64_t*)(__twr_v330) = _mng_bound273;
    __twr_l35:;
    __twr_l33:;
    __twr_v331 = (uint64_t)(&PrsParseInitializer);
    __twr_v332 = (uint64_t)(&_mng_token282);
    __twr_v333 = _mng_contentsoffset251 + _mng_offset279;
    __twr_v334 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v331)(__twr_v332, _mng_basetype253, _mng_contentsarray249, _mng_backpatcharray250, __twr_v333);
    __twr_v335 = 72ULL;
    __twr_v336 = _mng_basetype253 + __twr_v335;
    __twr_v337 = *(uint64_t*)(__twr_v336);
    __twr_v338 = _mng_offset279 + __twr_v337;
    __twr_v339 = _mng_type248 + __twr_v335;
    __twr_v340 = *(uint64_t*)(__twr_v339);
    if (__twr_v338 <= __twr_v340) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v341 = 72ULL;
    __twr_v342 = _mng_basetype253 + __twr_v341;
    __twr_v343 = *(uint64_t*)(__twr_v342);
    __twr_v344 = _mng_offset279 + __twr_v343;
    __twr_v345 = _mng_type248 + __twr_v341;
    *(uint64_t*)(__twr_v345) = __twr_v344;
    __twr_l38:;
    __twr_v346 = 1ULL;
    __twr_v347 = _mng_index278 + __twr_v346;
    _mng_index278 = __twr_v347;
    __twr_v348 = _mng_offset279 + _mng_elementsize269;
    _mng_offset279 = __twr_v348;
    __twr_v349 = (uint64_t)(&LexMatchToken);
    __twr_v350 = 0ULL;
    __twr_v351 = 14ULL;
    __twr_v352 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v349)(__twr_v350, __twr_v351, __twr_v350);
    if (!(__twr_v352)) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l41:;
    goto __twr_l22;
    __twr_l40:;
    __twr_v353 = (uint64_t)(&LexMatchToken);
    __twr_v354 = (uint64_t)(&_mng_token282);
    __twr_v355 = 15ULL;
    __twr_v356 = 0ULL;
    __twr_v357 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v353)(__twr_v354, __twr_v355, __twr_v356);
    if (__twr_v357) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v358 = (uint64_t)(&LexTokenError);
    __twr_v359 = (uint64_t)(&_mng_token282);
    __twr_v360 = (uint64_t)(&"Expected a right brace or comma");
    __twr_v361 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v358)(__twr_v359, __twr_v360, __twr_v361, __twr_v361, __twr_v361);
    __twr_l42:;
    goto __twr_l21;
    __twr_l22:;
    __twr_l17:;
    _jkl_epilogue:;
}
void PrsParseStructInitializer(uint64_t _mng_errtoken362, uint64_t _mng_type363, uint64_t _mng_contentsarray364, uint64_t _mng_backpatcharray365, uint64_t _mng_contentsoffset366) {
    uint64_t __twr_v367;
    uint64_t _mng_fieldscope368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t _mng_token375[4];
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t _mng_fieldsymbol405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t _mng_offset426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t _mng_striptype430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    __twr_v367 = *(uint64_t*)(_mng_type363);
    _mng_fieldscope368 = __twr_v367;
    __twr_l45:;
    __twr_v369 = (uint64_t)(&LexMatchToken);
    __twr_v370 = 0ULL;
    __twr_v371 = 14ULL;
    __twr_v372 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v369)(__twr_v370, __twr_v371, __twr_v370);
    if (!(__twr_v372)) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    goto __twr_l46;
    __twr_l47:;
    __twr_v373 = (uint64_t)(&LexMatchToken);
    __twr_v374 = (uint64_t)(&_mng_token375);
    __twr_v376 = 3ULL;
    __twr_v377 = 70ULL;
    __twr_v378 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v373)(__twr_v374, __twr_v376, __twr_v377);
    if (__twr_v378) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_v379 = (uint64_t)(&LexTokenError);
    __twr_v380 = (uint64_t)(&_mng_token375);
    __twr_v381 = (uint64_t)(&"Expected a left bracket");
    __twr_v382 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v379)(__twr_v380, __twr_v381, __twr_v382, __twr_v382, __twr_v382);
    __twr_l49:;
    __twr_v383 = (uint64_t)(&LexEnterOverlayScope);
    ((void (*)(uint64_t))__twr_v383)(_mng_fieldscope368);
    __twr_v384 = (uint64_t)(&LexMatchToken);
    __twr_v385 = (uint64_t)(&_mng_token375);
    __twr_v386 = 18ULL;
    __twr_v387 = 0ULL;
    __twr_v388 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v384)(__twr_v385, __twr_v386, __twr_v387);
    if (__twr_v388) { goto __twr_l51; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v389 = (uint64_t)(&LexTokenError);
    __twr_v390 = (uint64_t)(&_mng_token375);
    __twr_v391 = (uint64_t)(&"Expected an identifier");
    __twr_v392 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v389)(__twr_v390, __twr_v391, __twr_v392, __twr_v392, __twr_v392);
    __twr_l51:;
    __twr_v393 = (uint64_t)(&_mng_token375);
    __twr_v394 = 25ULL;
    __twr_v395 = __twr_v393 + __twr_v394;
    __twr_v396 = *(uint8_t*)(__twr_v395);
    __twr_v397 = 86ULL;
    if (__twr_v396 == __twr_v397) { goto __twr_l53; } else { goto __twr_l54; }
    __twr_l54:;
    __twr_v398 = (uint64_t)(&LexTokenError);
    __twr_v399 = (uint64_t)(&_mng_token375);
    __twr_v400 = (uint64_t)(&"Non-existent field name");
    __twr_v401 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v398)(__twr_v399, __twr_v400, __twr_v401, __twr_v401, __twr_v401);
    __twr_l53:;
    __twr_v402 = (uint64_t)(&_mng_token375);
    __twr_v403 = 0ULL;
    __twr_v404 = *(uint64_t*)(__twr_v402);
    _mng_fieldsymbol405 = __twr_v404;
    __twr_v406 = (uint64_t)(&LexExitOverlayScope);
    ((void (*)())__twr_v406)();
    __twr_v407 = (uint64_t)(&LexMatchToken);
    __twr_v408 = 11ULL;
    __twr_v409 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v407)(__twr_v402, __twr_v408, __twr_v403);
    if (__twr_v409) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v410 = (uint64_t)(&LexTokenError);
    __twr_v411 = (uint64_t)(&_mng_token375);
    __twr_v412 = (uint64_t)(&"Expected a right bracket");
    __twr_v413 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v410)(__twr_v411, __twr_v412, __twr_v413, __twr_v413, __twr_v413);
    __twr_l55:;
    __twr_v414 = (uint64_t)(&LexMatchToken);
    __twr_v415 = (uint64_t)(&_mng_token375);
    __twr_v416 = 8ULL;
    __twr_v417 = 73ULL;
    __twr_v418 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v414)(__twr_v415, __twr_v416, __twr_v417);
    if (__twr_v418) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v419 = (uint64_t)(&LexTokenError);
    __twr_v420 = (uint64_t)(&_mng_token375);
    __twr_v421 = (uint64_t)(&"Expected an equals sign");
    __twr_v422 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v419)(__twr_v420, __twr_v421, __twr_v422, __twr_v422, __twr_v422);
    __twr_l57:;
    __twr_v423 = 88ULL;
    __twr_v424 = _mng_fieldsymbol405 + __twr_v423;
    __twr_v425 = *(uint64_t*)(__twr_v424);
    _mng_offset426 = __twr_v425;
    __twr_v427 = 104ULL;
    __twr_v428 = _mng_fieldsymbol405 + __twr_v427;
    __twr_v429 = *(uint64_t*)(__twr_v428);
    _mng_striptype430 = __twr_v429;
    __twr_v431 = 80ULL;
    __twr_v432 = _mng_striptype430 + __twr_v431;
    __twr_v433 = *(uint8_t*)(__twr_v432);
    __twr_v434 = 3ULL;
    if (__twr_v433 != __twr_v434) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v435 = *(uint64_t*)(_mng_striptype430);
    __twr_v436 = 104ULL;
    __twr_v437 = __twr_v435 + __twr_v436;
    __twr_v438 = *(uint64_t*)(__twr_v437);
    _mng_striptype430 = __twr_v438;
    __twr_l61:;
    __twr_v439 = 80ULL;
    __twr_v440 = _mng_striptype430 + __twr_v439;
    __twr_v441 = *(uint8_t*)(__twr_v440);
    __twr_v442 = 3ULL;
    if (__twr_v441 == __twr_v442) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v443 = (uint64_t)(&PrsParseInitializer);
    __twr_v444 = (uint64_t)(&_mng_token375);
    __twr_v445 = _mng_contentsoffset366 + _mng_offset426;
    __twr_v446 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v443)(__twr_v444, _mng_striptype430, _mng_contentsarray364, _mng_backpatcharray365, __twr_v445);
    __twr_v447 = 72ULL;
    __twr_v448 = _mng_striptype430 + __twr_v447;
    __twr_v449 = *(uint64_t*)(__twr_v448);
    __twr_v450 = _mng_offset426 + __twr_v449;
    __twr_v451 = _mng_type363 + __twr_v447;
    __twr_v452 = *(uint64_t*)(__twr_v451);
    if (__twr_v450 <= __twr_v452) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v453 = 72ULL;
    __twr_v454 = _mng_striptype430 + __twr_v453;
    __twr_v455 = *(uint64_t*)(__twr_v454);
    __twr_v456 = _mng_offset426 + __twr_v455;
    __twr_v457 = _mng_type363 + __twr_v453;
    *(uint64_t*)(__twr_v457) = __twr_v456;
    __twr_l62:;
    __twr_v458 = (uint64_t)(&LexMatchToken);
    __twr_v459 = 0ULL;
    __twr_v460 = 14ULL;
    __twr_v461 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v458)(__twr_v459, __twr_v460, __twr_v459);
    if (!(__twr_v461)) { goto __twr_l64; } else { goto __twr_l65; }
    __twr_l65:;
    goto __twr_l46;
    __twr_l64:;
    __twr_v462 = (uint64_t)(&LexMatchToken);
    __twr_v463 = (uint64_t)(&_mng_token375);
    __twr_v464 = 15ULL;
    __twr_v465 = 0ULL;
    __twr_v466 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v462)(__twr_v463, __twr_v464, __twr_v465);
    if (__twr_v466) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v467 = (uint64_t)(&LexTokenError);
    __twr_v468 = (uint64_t)(&_mng_token375);
    __twr_v469 = (uint64_t)(&"Expected a right brace or comma");
    __twr_v470 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v467)(__twr_v468, __twr_v469, __twr_v470, __twr_v470, __twr_v470);
    __twr_l66:;
    goto __twr_l45;
    __twr_l46:;
    __twr_l44:;
    _jkl_epilogue:;
}
uint64_t PrsParseInitializer(uint64_t _mng_errtoken471, uint64_t _mng_type472, uint64_t _mng_contentsarray473, uint64_t _mng_backpatcharray474, uint64_t _mng_contentsoffset475) {
    uint64_t _jkl_retv;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t _mng_bracetoken486[4];
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t _mng_expr497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t _mng_byteptr521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t _mng_bpptr542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t _mng_node553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    __twr_v476 = 80ULL;
    __twr_v477 = _mng_type472 + __twr_v476;
    __twr_v478 = *(uint8_t*)(__twr_v477);
    __twr_v479 = 1ULL;
    if (__twr_v478 == __twr_v479) { goto __twr_l69; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v480 = 80ULL;
    __twr_v481 = _mng_type472 + __twr_v480;
    __twr_v482 = *(uint8_t*)(__twr_v481);
    __twr_v483 = 5ULL;
    if (__twr_v482 == __twr_v483) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v484 = (uint64_t)(&LexMatchToken);
    __twr_v485 = (uint64_t)(&_mng_bracetoken486);
    __twr_v487 = 13ULL;
    __twr_v488 = 0ULL;
    __twr_v489 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v484)(__twr_v485, __twr_v487, __twr_v488);
    if (!(__twr_v489)) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v490 = (uint64_t)(&LexTokenError);
    __twr_v491 = (uint64_t)(&_mng_bracetoken486);
    __twr_v492 = (uint64_t)(&"Illegal initializer, expected expression");
    __twr_v493 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v490)(__twr_v491, __twr_v492, __twr_v493, __twr_v493, __twr_v493);
    __twr_l72:;
    __twr_v494 = (uint64_t)(&PrsExpression);
    __twr_v495 = 0ULL;
    __twr_v496 = ((uint64_t (*)(uint64_t))__twr_v494)(__twr_v495);
    _mng_expr497 = __twr_v496;
    __twr_v498 = 40ULL;
    __twr_v499 = _mng_expr497 + __twr_v498;
    __twr_v500 = *(uint8_t*)(__twr_v499);
    __twr_v501 = 3ULL;
    if (__twr_v500 != __twr_v501) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v502 = (uint64_t)(&PrsCheckConstant);
    __twr_v503 = 48ULL;
    __twr_v504 = _mng_expr497 + __twr_v503;
    __twr_v505 = *(uint64_t*)(__twr_v504);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v502)(_mng_expr497, _mng_type472, __twr_v505);
    __twr_l74:;
    if (_mng_contentsarray473) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    _jkl_retv = _mng_expr497;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v506 = (uint64_t)(&PrsIsCompileTime);
    __twr_v507 = ((uint64_t (*)(uint64_t))__twr_v506)(_mng_expr497);
    if (__twr_v507) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v508 = (uint64_t)(&LexTokenError);
    __twr_v509 = 0ULL;
    __twr_v510 = (uint64_t)(&"Expected a compile time value");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v508)(_mng_expr497, __twr_v510, __twr_v509, __twr_v509, __twr_v509);
    __twr_l78:;
    __twr_v511 = 40ULL;
    __twr_v512 = _mng_expr497 + __twr_v511;
    __twr_v513 = *(uint8_t*)(__twr_v512);
    __twr_v514 = 3ULL;
    if (__twr_v513 != __twr_v514) { goto __twr_l82; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v515 = (uint64_t)(&PrsIndexGrowableArray);
    __twr_v516 = 72ULL;
    __twr_v517 = _mng_type472 + __twr_v516;
    __twr_v518 = *(uint64_t*)(__twr_v517);
    __twr_v519 = 0ULL;
    __twr_v520 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v515)(_mng_contentsarray473, _mng_contentsoffset475, __twr_v518, __twr_v519);
    _mng_byteptr521 = __twr_v520;
    __twr_v522 = (uint64_t)(&TlPunchValue);
    __twr_v523 = 48ULL;
    __twr_v524 = _mng_expr497 + __twr_v523;
    __twr_v525 = *(uint64_t*)(__twr_v524);
    __twr_v526 = *(uint64_t*)(__twr_v517);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v522)(_mng_byteptr521, __twr_v525, __twr_v526);
    goto __twr_l80;
    __twr_l82:;
    __twr_v527 = 72ULL;
    __twr_v528 = _mng_type472 + __twr_v527;
    __twr_v529 = *(uint64_t*)(__twr_v528);
    __twr_v530 = (uint64_t)(&JklTargetInfo);
    __twr_v531 = *(uint64_t*)(__twr_v530);
    __twr_v532 = 43ULL;
    __twr_v533 = __twr_v531 + __twr_v532;
    __twr_v534 = *(uint8_t*)(__twr_v533);
    if (__twr_v529 >= __twr_v534) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v535 = (uint64_t)(&LexTokenError);
    __twr_v536 = 0ULL;
    __twr_v537 = (uint64_t)(&"This field is smaller than a pointer");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v535)(_mng_expr497, __twr_v537, __twr_v536, __twr_v536, __twr_v536);
    __twr_l83:;
    __twr_v538 = (uint64_t)(&PrsIndexGrowableArray);
    __twr_v539 = 1ULL;
    __twr_v540 = 3ULL;
    __twr_v541 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v538)(_mng_backpatcharray474, _mng_contentsoffset475, __twr_v539, __twr_v540);
    _mng_bpptr542 = __twr_v541;
    *(uint64_t*)(_mng_bpptr542) = _mng_expr497;
    __twr_l80:;
    __twr_v543 = 0ULL;
    _jkl_retv = __twr_v543;
    goto _jkl_epilogue;
    __twr_l69:;
    __twr_v544 = (uint64_t)(&LexMatchToken);
    __twr_v545 = (uint64_t)(&_mng_bracetoken486);
    __twr_v546 = 13ULL;
    __twr_v547 = 0ULL;
    __twr_v548 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v544)(__twr_v545, __twr_v546, __twr_v547);
    if (__twr_v548) { goto __twr_l85; } else { goto __twr_l86; }
    __twr_l86:;
    __twr_v549 = (uint64_t)(&LexTokenError);
    __twr_v550 = (uint64_t)(&_mng_bracetoken486);
    __twr_v551 = (uint64_t)(&"Expected initializer");
    __twr_v552 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v549)(__twr_v550, __twr_v551, __twr_v552, __twr_v552, __twr_v552);
    __twr_l85:;
    _mng_node553 = 0ULL;
    if (_mng_contentsarray473) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v554 = (uint64_t)(&PrsCreateAstNode);
    __twr_v555 = 5ULL;
    __twr_v556 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v554)(__twr_v555, _mng_errtoken471);
    _mng_node553 = __twr_v556;
    __twr_v557 = 48ULL;
    __twr_v558 = _mng_node553 + __twr_v557;
    _mng_contentsarray473 = __twr_v558;
    __twr_v559 = 72ULL;
    __twr_v560 = _mng_node553 + __twr_v559;
    _mng_backpatcharray474 = __twr_v560;
    __twr_v561 = (uint64_t)(&PrsInitializeGrowableArray);
    __twr_v562 = 72ULL;
    __twr_v563 = _mng_type472 + __twr_v562;
    __twr_v564 = *(uint64_t*)(__twr_v563);
    ((void (*)(uint64_t, uint64_t))__twr_v561)(_mng_contentsarray473, __twr_v564);
    __twr_v565 = *(uint64_t*)(__twr_v563);
    ((void (*)(uint64_t, uint64_t))__twr_v561)(_mng_backpatcharray474, __twr_v565);
    _mng_contentsoffset475 = 0ULL;
    __twr_v566 = 80ULL;
    __twr_v567 = _mng_type472 + __twr_v566;
    __twr_v568 = *(uint8_t*)(__twr_v567);
    __twr_v569 = 1ULL;
    if (__twr_v568 != __twr_v569) { goto __twr_l90; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v570 = 24ULL;
    __twr_v571 = _mng_type472 + __twr_v570;
    __twr_v572 = *(uint8_t*)(__twr_v571);
    if (__twr_v572) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v573 = 0ULL;
    __twr_v574 = 72ULL;
    __twr_v575 = _mng_type472 + __twr_v574;
    *(uint64_t*)(__twr_v575) = __twr_v573;
    __twr_v576 = 8ULL;
    __twr_v577 = _mng_type472 + __twr_v576;
    *(uint64_t*)(__twr_v577) = __twr_v573;
    __twr_l90:;
    goto __twr_l87;
    __twr_l89:;
    __twr_v578 = 80ULL;
    __twr_v579 = _mng_type472 + __twr_v578;
    __twr_v580 = *(uint8_t*)(__twr_v579);
    __twr_v581 = 1ULL;
    if (__twr_v580 != __twr_v581) { goto __twr_l87; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v582 = 24ULL;
    __twr_v583 = _mng_type472 + __twr_v582;
    __twr_v584 = *(uint8_t*)(__twr_v583);
    if (__twr_v584) { goto __twr_l87; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v585 = (uint64_t)(&LexTokenError);
    __twr_v586 = (uint64_t)(&_mng_bracetoken486);
    __twr_v587 = (uint64_t)(&"Can't initialize a boundless array");
    __twr_v588 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v585)(__twr_v586, __twr_v587, __twr_v588, __twr_v588, __twr_v588);
    __twr_l87:;
    __twr_v589 = 80ULL;
    __twr_v590 = _mng_type472 + __twr_v589;
    __twr_v591 = *(uint8_t*)(__twr_v590);
    __twr_v592 = 1ULL;
    if (__twr_v591 != __twr_v592) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v593 = (uint64_t)(&PrsParseArrayInitializer);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v593)(_mng_errtoken471, _mng_type472, _mng_contentsarray473, _mng_backpatcharray474, _mng_contentsoffset475);
    goto __twr_l95;
    __twr_l97:;
    __twr_v594 = (uint64_t)(&PrsParseStructInitializer);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v594)(_mng_errtoken471, _mng_type472, _mng_contentsarray473, _mng_backpatcharray474, _mng_contentsoffset475);
    __twr_l95:;
    if (!(_mng_node553)) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v595 = 80ULL;
    __twr_v596 = _mng_type472 + __twr_v595;
    __twr_v597 = *(uint8_t*)(__twr_v596);
    __twr_v598 = 1ULL;
    if (__twr_v597 != __twr_v598) { goto __twr_l100; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v599 = 24ULL;
    __twr_v600 = _mng_type472 + __twr_v599;
    __twr_v601 = *(uint8_t*)(__twr_v600);
    if (__twr_v601) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v602 = 1ULL;
    __twr_v603 = 24ULL;
    __twr_v604 = _mng_type472 + __twr_v603;
    *(uint8_t*)(__twr_v604) = __twr_v602;
    __twr_l100:;
    __twr_v605 = 72ULL;
    __twr_v606 = _mng_type472 + __twr_v605;
    __twr_v607 = *(uint64_t*)(__twr_v606);
    __twr_v608 = 96ULL;
    __twr_v609 = _mng_node553 + __twr_v608;
    *(uint64_t*)(__twr_v609) = __twr_v607;
    __twr_l98:;
    _jkl_retv = _mng_node553;
    goto _jkl_epilogue;
    __twr_l68:;
    _jkl_epilogue:;
    return _jkl_retv;
}

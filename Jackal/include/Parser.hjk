#INCLUDE "<inc>/Lexer.hjk"

EXTERN FN PrsProgram ()

EXTERN FN PrsInitialize ()

EXTERN PrsGlobalListHead : ^LexSymbol

EXTERN PrsFunctionListHead : ^LexSymbol

#DEFINE VAR_FLAG_EXTERN 1
#DEFINE VAR_FLAG_PUBLIC 2
#DEFINE VAR_FLAG_EXPORT 4

ENUM PrsAstType : UBYTE
    AST_IDENTIFIER,
    AST_ASSIGN,
    AST_OPERATOR,
    AST_CONSTANT,
    AST_STRING,
    AST_INITIALIZER,
    AST_BREAK,
    AST_RETURN,
    AST_WHILE,
    AST_LABEL,
    AST_GOTO,
    AST_CONTINUE,
    AST_IF,

    AST_MAX, // MUST be at the end
END

STRUCT PrsBlock
    StatementListHead : ^PrsAstNode,
    StatementListTail : ^PrsAstNode,
    StatementCount : ULONG,
    LabelCount : ULONG,
END

STRUCT PrsAstAssign
    Left : ^PrsAstNode,
    Right : ^PrsAstNode,
END

STRUCT PrsAstOperator
    Left : ^PrsAstNode,
    Right : ^PrsAstNode,
    OperatorSpecific : ^VOID,
END

STRUCT PrsAstConstant
    Value : UWORD,
END

STRUCT PrsAstStatement
    StatementSpecific : ^VOID,
END

STRUCT PrsAstWhile
    Conditional : ^PrsAstNode,
    BodyBlock : ^PrsBlock,
END

STRUCT PrsIfCase
    Next : ^PrsIfCase,

    Conditional : ^PrsAstNode,
    BodyBlock : ^PrsBlock,
END

STRUCT PrsAstIf
    CaseListHead : ^PrsIfCase,
    CaseListTail : ^PrsIfCase,
    ElseBlock : ^PrsBlock,
END

STRUCT PrsAstInitializer
    ByteArray : ^UBYTE,
    BpArray : ^^PrsAstNode,
END

UNION PrsAstBody
    Assign : PrsAstAssign,
    Operator : PrsAstOperator,
    Constant : PrsAstConstant,
    Statement : PrsAstStatement,
    While : PrsAstWhile,
    If : PrsAstIf,
    Initializer : PrsAstInitializer,
END

STRUCT PrsAstNode
    Token : LexToken,

    Next : ^PrsAstNode,

    Type : PrsAstType,
    Body : PrsAstBody,

    CachedSemanticType : ^LexSemanticType,
END

EXTERN FN PrsEvaluateType (
    IN node : ^PrsAstNode,
) : ^LexSemanticType
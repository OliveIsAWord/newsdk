#INCLUDE "<inc>/Backend.hjk"

STRUCT LirFoxSpecific
    Constant1 : ULONG,
    Constant2 : ULONG,
    AccessType1 : UBYTE,
    AccessType2 : UBYTE,
    Condition : UBYTE,
    BitSize : UBYTE,
END

UNION LirMachineSpecific
    Fox : LirFoxSpecific,
END

ENUM LirInstructionType : UBYTE
    LIR_MIN, // MUST be at the start

    LIR_LABEL,
    LIR_CALL,
    LIR_UNARY,
    LIR_BINARY,

    LIR_MAX, // MUST be at the end
END

ENUM LirRegisterType : UBYTE
    LIR_MACHINE_REG,
    LIR_VIRTUAL_REG,
END

STRUCT LirRegister
    MachineRegister : UBYTE,
    Hint : UBYTE,
    Type : LirRegisterType,
END

STRUCT LirLabelBody
    References : ULONG,
END

UNION LirInstructionBody
    Machine : LirMachineSpecific,
    Label : LirLabelBody,
END

STRUCT LirInstruction
    Next : ^LirInstruction,
    Prev : ^LirInstruction,
    Block : ^IrFunction,

    Defines : ^LirRegister,
    Source1 : ^LirRegister,
    Source2 : ^LirRegister,

    Body : LirInstructionBody,

    MachineInstruction : UBYTE,
    Type : LirInstructionType,
END

FNPTR LirSelectF (
    IN inst : ^IrInstruction,
) : ^LirRegister

EXTERN FN LirCreateInstruction (
    IN type : LirInstructionType,
    IN machtype : UBYTE,
) : ^LirInstruction

EXTERN FN LirInsertInstructionTail (
    IN lirinst : ^LirInstruction,
)

EXTERN FN LirRemoveInstruction (
    IN lirinst : ^LirInstruction,
)

EXTERN FN LirGetLabel (
    IN oldlabel : ^IrInstruction,
) : ^LirInstruction

EXTERN FN LirSelect (
    IN inst : ^IrInstruction,
) : ^LirRegister

EXTERN FN LirSelectForFunction (
    IN funcsym : ^LexSymbol,
)

EXTERN FN LirAllocateRegistersForFunction (
    IN funcsym : ^LexSymbol,
)

STRUCT LirTargetInfoRecord
    SelectionTable : LirSelectF[IR_MAX],
END

FNPTR AsmEmitF (
    IN funcsym : ^LexSymbol,
)

STRUCT AsmEmitterRecord
    EmitFunc : AsmEmitF,
END

EXTERN FN XrAsmEmit (
    IN emitter : ^AsmEmitterRecord,
)
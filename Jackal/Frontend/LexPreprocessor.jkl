//
// Inline preprocessor for the lexer.
//

#INCLUDE "<inc>/Frontend.jh"
#INCLUDE "<inc>/Runtime.jh"
#INCLUDE "<inc>/Lexer.jh"

CONST LEX_DIRECTIVE_MAX := 64

LexDirectiveBuffer : UBYTE[LEX_DIRECTIVE_MAX]

FN LexParseDirective ()

	// The lexer found a preprocessor directive and called us to handle it.
	// Until we return, we are in full control of the source stream, and can
	// consume it, tokenize it, etc to our hearts content. Thanks to the
	// layered nature of the lexer, we don't have to worry about maintaining
	// line numbers and so on.


END

FN LexCollectDirectiveToken (
	IN buffer : ^UBYTE,
) : UBYTE

	// Skips whitespace until the next token, which it collects. Used for very
	// simple directive parsing. Returns TRUE if there are tokens remaining in
	// the directive, or FALSE otherwise (i.e. an un-escaped newline was
	// encountered). If the token is terminated by a newline, the newline is
	// put back in the stream so that we see it next time we're called and
	// return the correct value.

END
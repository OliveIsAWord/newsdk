#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern void TlInitializeZone(uint64_t _mng_zone87, uint64_t _mng_blocksize88);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone89);
extern void TlFreeToZone(uint64_t _mng_zone90, uint64_t _mng_block91);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant92);
extern void TlPunchValue(uint64_t _mng_ptr93, uint64_t _mng_value94, uint64_t _mng_bytes95);
extern void JklCompileProgram(uint64_t _mng_argc96, uint64_t _mng_argv97);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg98);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename99, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock100, uint64_t _mng_filepath101);
extern uint64_t LexLookupSection(uint64_t _mng_name102);
extern void LexPushSection(uint64_t _mng_section103);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope104);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg105);
extern void LexExpandMacro(uint64_t _mng_macro106, uint64_t _mng_token107);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream108, uint64_t _mng_macro109);
extern void LexUninitializeStream(uint64_t _mng_stream110);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream111);
extern void LexPushStream(uint64_t _mng_stream112);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream113, uint64_t _mng_fileblock114, uint64_t _mng_handle115);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock116, uint64_t _mng_handle117);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope118);
extern uint64_t LexResetScope(uint64_t _mng_scope119);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope120);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest121, uint64_t _mng_src122);
extern void LexGetToken(uint64_t _mng_token123);
extern void LexPutbackToken(uint64_t _mng_token124);
extern uint64_t LexMatchToken(uint64_t _mng_token125, uint64_t _mng_type126, uint64_t _mng_subtype127);
extern void LexStreamError(uint64_t _mng_str128, uint64_t _mng_err1129, uint64_t _mng_err2130, uint64_t _mng_err3131);
extern void LexTokenError(uint64_t _mng_token132, uint64_t _mng_str133, uint64_t _mng_err1134, uint64_t _mng_err2135, uint64_t _mng_err3136);
extern uint64_t LexCrunchNumber(uint64_t _mng_token137, uint64_t _mng_buffer138);
uint64_t LexRootMacroScope = 0ULL;
uint64_t LexCurrentMacroScope = 0ULL;
uint32_t LexMacroDepth = 0ULL;
uint64_t LexAsmBlockListHead = 0ULL;
uint64_t LexAsmBlockListTail = 0ULL;
uint64_t LexDirectiveHashTable[196];
uint64_t LexOperatorHashTable[196];
uint64_t LexIfStack[11];
uint64_t LexMacroZone[2];
uint64_t LexDirectiveToken[4];
uint64_t LexDirectiveBumpArray[112];
uint64_t LexDirectiveBumpIndex = 0ULL;
void LexInsertDirective(uint64_t _mng_name139, uint64_t _mng_parsefunc140) {
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    __twr_v141 = (uint64_t)(&LexDirectiveBumpArray);
    __twr_v142 = (uint64_t)(&LexDirectiveBumpIndex);
    __twr_v143 = *(uint64_t*)(__twr_v142);
    __twr_v144 = 56ULL;
    __twr_v145 = __twr_v143 * __twr_v144;
    __twr_v146 = __twr_v141 + __twr_v145;
    __twr_v147 = 1ULL;
    __twr_v148 = __twr_v143 + __twr_v147;
    *(uint64_t*)(__twr_v142) = __twr_v148;
    __twr_v149 = 48ULL;
    __twr_v150 = __twr_v146 + __twr_v149;
    *(uint64_t*)(__twr_v150) = _mng_parsefunc140;
    __twr_v151 = (uint64_t)(&TlInsertHashTable);
    __twr_v152 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v151)(__twr_v152, __twr_v146, _mng_name139);
    _jkl_epilogue:;
}
uint64_t LexOperatorBumpArray[224];
uint64_t LexOperatorBumpIndex = 0ULL;
void LexInsertOperator(uint64_t _mng_name153, uint64_t _mng_parsefunc154) {
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    __twr_v155 = (uint64_t)(&LexOperatorBumpArray);
    __twr_v156 = (uint64_t)(&LexOperatorBumpIndex);
    __twr_v157 = *(uint64_t*)(__twr_v156);
    __twr_v158 = 56ULL;
    __twr_v159 = __twr_v157 * __twr_v158;
    __twr_v160 = __twr_v155 + __twr_v159;
    __twr_v161 = 1ULL;
    __twr_v162 = __twr_v157 + __twr_v161;
    *(uint64_t*)(__twr_v156) = __twr_v162;
    __twr_v163 = 48ULL;
    __twr_v164 = __twr_v160 + __twr_v163;
    *(uint64_t*)(__twr_v164) = _mng_parsefunc154;
    __twr_v165 = (uint64_t)(&TlInsertHashTable);
    __twr_v166 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v165)(__twr_v166, __twr_v160, _mng_name153);
    _jkl_epilogue:;
}
void LexMacroDelete(uint64_t _mng_entry167) {
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    __twr_v168 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v169 = 80ULL;
    __twr_v170 = _mng_entry167 + __twr_v169;
    ((void (*)(uint64_t))__twr_v168)(__twr_v170);
    __twr_v171 = (uint64_t)(&TlFreeToZone);
    __twr_v172 = (uint64_t)(&LexMacroZone);
    ((void (*)(uint64_t, uint64_t))__twr_v171)(__twr_v172, _mng_entry167);
    _jkl_epilogue:;
}
uint64_t LexCreateMacroTable(uint64_t _mng_outerscope173) {
    uint64_t _jkl_retv;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    __twr_v174 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v175 = (uint64_t)(&LexMacroDelete);
    __twr_v176 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v174)(_mng_outerscope173, __twr_v175);
    _jkl_retv = __twr_v176;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexNextNonWhitespaceCharacter(uint64_t _mng_token177) {
    uint64_t _jkl_retv;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t _mng_stream180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t _mng_byte197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    __twr_v178 = (uint64_t)(&LexCurrentStream);
    __twr_v179 = *(uint64_t*)(__twr_v178);
    _mng_stream180 = __twr_v179;
    if (!(__twr_v179)) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v181 = 8ULL;
    __twr_v182 = _mng_stream180 + __twr_v181;
    __twr_v183 = *(uint64_t*)(__twr_v182);
    __twr_v184 = _mng_token177 + __twr_v181;
    *(uint64_t*)(__twr_v184) = __twr_v183;
    __twr_v185 = 44ULL;
    __twr_v186 = _mng_stream180 + __twr_v185;
    __twr_v187 = *(uint32_t*)(__twr_v186);
    __twr_v188 = 16ULL;
    __twr_v189 = _mng_token177 + __twr_v188;
    *(uint32_t*)(__twr_v189) = __twr_v187;
    __twr_v190 = 48ULL;
    __twr_v191 = _mng_stream180 + __twr_v190;
    __twr_v192 = *(uint32_t*)(__twr_v191);
    __twr_v193 = 20ULL;
    __twr_v194 = _mng_token177 + __twr_v193;
    *(uint32_t*)(__twr_v194) = __twr_v192;
    __twr_l1:;
    __twr_v195 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v196 = ((uint64_t (*)())__twr_v195)();
    _mng_byte197 = __twr_v196;
    __twr_v198 = (uint64_t)(&LexCharTreatment);
    __twr_v199 = __twr_v198 + __twr_v196;
    __twr_v200 = *(uint8_t*)(__twr_v199);
    __twr_v201 = 3ULL;
    if (__twr_v200 != __twr_v201) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v202 = (uint64_t)(&LexCurrentStream);
    __twr_v203 = *(uint64_t*)(__twr_v202);
    _mng_stream180 = __twr_v203;
    if (!(__twr_v203)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v204 = 8ULL;
    __twr_v205 = _mng_stream180 + __twr_v204;
    __twr_v206 = *(uint64_t*)(__twr_v205);
    __twr_v207 = _mng_token177 + __twr_v204;
    *(uint64_t*)(__twr_v207) = __twr_v206;
    __twr_v208 = 44ULL;
    __twr_v209 = _mng_stream180 + __twr_v208;
    __twr_v210 = *(uint32_t*)(__twr_v209);
    __twr_v211 = 16ULL;
    __twr_v212 = _mng_token177 + __twr_v211;
    *(uint32_t*)(__twr_v212) = __twr_v210;
    __twr_v213 = 48ULL;
    __twr_v214 = _mng_stream180 + __twr_v213;
    __twr_v215 = *(uint32_t*)(__twr_v214);
    __twr_v216 = 20ULL;
    __twr_v217 = _mng_token177 + __twr_v216;
    *(uint32_t*)(__twr_v217) = __twr_v215;
    __twr_l6:;
    __twr_v218 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v219 = ((uint64_t (*)())__twr_v218)();
    _mng_byte197 = __twr_v219;
    __twr_l5:;
    __twr_v220 = (uint64_t)(&LexCharTreatment);
    __twr_v221 = __twr_v220 + _mng_byte197;
    __twr_v222 = *(uint8_t*)(__twr_v221);
    __twr_v223 = 3ULL;
    if (__twr_v222 == __twr_v223) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v224 = 0ULL;
    if (_mng_byte197 != __twr_v224) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v225 = (uint64_t)(&LexStreamError);
    __twr_v226 = (uint64_t)(&"Unexpected EOF while parsing directive");
    __twr_v227 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v225)(__twr_v226, __twr_v227, __twr_v227, __twr_v227);
    __twr_l8:;
    _jkl_retv = _mng_byte197;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectDirectiveToken(uint64_t _mng_token228, uint64_t _mng_buffer229) {
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t _mng_byte232;
    uint64_t __twr_v233;
    uint64_t _mng_len234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    __twr_v230 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v231 = ((uint64_t (*)(uint64_t))__twr_v230)(_mng_token228);
    _mng_byte232 = __twr_v231;
    __twr_v233 = 0ULL;
    _mng_len234 = __twr_v233;
    __twr_v235 = (uint64_t)(&LexCharTreatment);
    __twr_v236 = __twr_v235 + __twr_v231;
    __twr_v237 = *(uint8_t*)(__twr_v236);
    __twr_v238 = 3ULL;
    if (__twr_v237 == __twr_v238) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v239 = (uint64_t)(&LexCharTreatment);
    __twr_v240 = __twr_v239 + _mng_byte232;
    __twr_v241 = *(uint8_t*)(__twr_v240);
    __twr_v242 = 0ULL;
    if (__twr_v241 == __twr_v242) { goto __twr_l13; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v243 = (uint64_t)(&LexCharTreatment);
    __twr_v244 = 1ULL;
    __twr_v245 = __twr_v243 + _mng_byte232;
    __twr_v246 = *(uint8_t*)(__twr_v245);
    if (__twr_v246 == __twr_v244) { goto __twr_l13; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v247 = (uint64_t)(&LexCharTreatment);
    __twr_v248 = __twr_v247 + _mng_byte232;
    __twr_v249 = *(uint8_t*)(__twr_v248);
    __twr_v250 = 2ULL;
    if (__twr_v249 == __twr_v250) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v251 = (uint64_t)(&LexTokenError);
    __twr_v252 = (uint64_t)(&"Illegal character in token");
    __twr_v253 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v251)(_mng_token228, __twr_v252, __twr_v253, __twr_v253, __twr_v253);
    __twr_l13:;
    __twr_v254 = 63ULL;
    if (_mng_len234 != __twr_v254) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v255 = (uint64_t)(&LexTokenError);
    __twr_v256 = (uint64_t)(&"Token length too great");
    __twr_v257 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(_mng_token228, __twr_v256, __twr_v257, __twr_v257, __twr_v257);
    __twr_l17:;
    *(uint8_t*)(_mng_buffer229) = _mng_byte232;
    __twr_v258 = 1ULL;
    __twr_v259 = _mng_buffer229 + __twr_v258;
    _mng_buffer229 = __twr_v259;
    __twr_v260 = _mng_len234 + __twr_v258;
    _mng_len234 = __twr_v260;
    __twr_v261 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v262 = ((uint64_t (*)())__twr_v261)();
    _mng_byte232 = __twr_v262;
    __twr_l12:;
    __twr_v263 = (uint64_t)(&LexCharTreatment);
    __twr_v264 = __twr_v263 + _mng_byte232;
    __twr_v265 = *(uint8_t*)(__twr_v264);
    __twr_v266 = 3ULL;
    if (__twr_v265 != __twr_v266) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v267 = 0ULL;
    *(uint8_t*)(_mng_buffer229) = __twr_v267;
    _jkl_epilogue:;
}
void LexGetPreprocessorString(uint64_t _mng_token268, uint64_t _mng_buffer269) {
    uint64_t __twr_v270;
    uint64_t _mng_backslash271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t _mng_byte274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    __twr_v270 = 0ULL;
    _mng_backslash271 = __twr_v270;
    __twr_l19:;
    __twr_v272 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v273 = ((uint64_t (*)())__twr_v272)();
    _mng_byte274 = __twr_v273;
    __twr_v275 = 0ULL;
    if (__twr_v273 != __twr_v275) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v276 = (uint64_t)(&LexTokenError);
    __twr_v277 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v278 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v276)(_mng_token268, __twr_v277, __twr_v278, __twr_v278, __twr_v278);
    __twr_l21:;
    __twr_v279 = 34ULL;
    if (_mng_byte274 != __twr_v279) { goto __twr_l23; } else { goto __twr_l25; }
    __twr_l25:;
    if (_mng_backslash271) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    goto _jkl_epilogue;
    __twr_l23:;
    __twr_v280 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v280)(_mng_buffer269, _mng_byte274);
    if (_mng_backslash271) { goto __twr_l27; } else { goto __twr_l26; }
    __twr_l27:;
    __twr_v281 = 0ULL;
    _mng_backslash271 = __twr_v281;
    goto __twr_l19;
    __twr_l26:;
    __twr_v282 = 92ULL;
    __twr_v283 = (_mng_byte274 == __twr_v282);
    _mng_backslash271 = __twr_v283;
    goto __twr_l19;
    __twr_l20:;
    _jkl_epilogue:;
}
void LexCollectString(uint64_t _mng_token284, uint64_t _mng_buffer285) {
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    __twr_v286 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v287 = ((uint64_t (*)(uint64_t))__twr_v286)(_mng_token284);
    __twr_v288 = 34ULL;
    if (__twr_v287 == __twr_v288) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v289 = (uint64_t)(&LexTokenError);
    __twr_v290 = (uint64_t)(&"Expected a string");
    __twr_v291 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v289)(_mng_token284, __twr_v290, __twr_v291, __twr_v291, __twr_v291);
    __twr_l28:;
    __twr_v292 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v292)(_mng_token284, _mng_buffer285);
    __twr_v293 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v294 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v293)(_mng_buffer285, __twr_v294);
    _jkl_epilogue:;
}
void LexGetComplexString(uint64_t _mng_token295, uint64_t _mng_buffer296) {
    uint64_t __twr_v297;
    uint64_t _mng_bracketdepth298;
    uint64_t __twr_v299;
    uint64_t _mng_comment300;
    uint64_t _mng_backslash301;
    uint64_t _mng_instring302;
    uint64_t _mng_inliteral303;
    uint64_t _mng_sawforwardslash304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t _mng_byte307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    __twr_v297 = 1ULL;
    _mng_bracketdepth298 = __twr_v297;
    __twr_v299 = 0ULL;
    _mng_comment300 = __twr_v299;
    _mng_backslash301 = __twr_v299;
    _mng_instring302 = __twr_v299;
    _mng_inliteral303 = __twr_v299;
    _mng_sawforwardslash304 = __twr_v299;
    __twr_l30:;
    __twr_v305 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v306 = ((uint64_t (*)())__twr_v305)();
    _mng_byte307 = __twr_v306;
    __twr_v308 = 0ULL;
    if (__twr_v306 != __twr_v308) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v309 = (uint64_t)(&LexTokenError);
    __twr_v310 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v311 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v309)(_mng_token295, __twr_v310, __twr_v311, __twr_v311, __twr_v311);
    __twr_l32:;
    if (_mng_comment300) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l35:;
    __twr_v312 = 10ULL;
    if (_mng_byte307 != __twr_v312) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v313 = 0ULL;
    _mng_comment300 = __twr_v313;
    goto __twr_l37;
    __twr_l39:;
    __twr_v314 = 0ULL;
    _mng_byte307 = __twr_v314;
    goto __twr_l30;
    __twr_l37:;
    goto __twr_l34;
    __twr_l36:;
    __twr_v315 = 47ULL;
    if (_mng_byte307 == __twr_v315) { goto __twr_l34; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v316 = 0ULL;
    _mng_sawforwardslash304 = __twr_v316;
    __twr_l34:;
    if (_mng_backslash301) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l42:;
    __twr_v317 = 0ULL;
    _mng_backslash301 = __twr_v317;
    goto __twr_l41;
    __twr_l43:;
    __twr_v318 = 92ULL;
    if (_mng_byte307 != __twr_v318) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v319 = 1ULL;
    _mng_backslash301 = __twr_v319;
    goto __twr_l41;
    __twr_l45:;
    if (_mng_instring302) { goto __twr_l46; } else { goto __twr_l47; }
    __twr_l46:;
    __twr_v320 = 34ULL;
    __twr_v321 = (_mng_byte307 == __twr_v320);
    __twr_v322 = !__twr_v321;
    _mng_instring302 = __twr_v322;
    goto __twr_l41;
    __twr_l47:;
    if (_mng_inliteral303) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l48:;
    __twr_v323 = 39ULL;
    __twr_v324 = (_mng_byte307 == __twr_v323);
    __twr_v325 = !__twr_v324;
    _mng_inliteral303 = __twr_v325;
    goto __twr_l41;
    __twr_l49:;
    __twr_v326 = 47ULL;
    if (_mng_byte307 != __twr_v326) { goto __twr_l51; } else { goto __twr_l50; }
    __twr_l50:;
    if (_mng_sawforwardslash304) { goto __twr_l53; } else { goto __twr_l54; }
    __twr_l53:;
    __twr_v327 = 0ULL;
    _mng_sawforwardslash304 = __twr_v327;
    __twr_v328 = 1ULL;
    _mng_comment300 = __twr_v328;
    goto __twr_l52;
    __twr_l54:;
    __twr_v329 = 1ULL;
    _mng_sawforwardslash304 = __twr_v329;
    __twr_l52:;
    goto __twr_l41;
    __twr_l51:;
    __twr_v330 = 34ULL;
    if (_mng_byte307 != __twr_v330) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v331 = 1ULL;
    _mng_instring302 = __twr_v331;
    goto __twr_l41;
    __twr_l56:;
    __twr_v332 = 39ULL;
    if (_mng_byte307 != __twr_v332) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v333 = 1ULL;
    _mng_inliteral303 = __twr_v333;
    goto __twr_l41;
    __twr_l58:;
    __twr_v334 = 91ULL;
    if (_mng_byte307 != __twr_v334) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v335 = 1ULL;
    __twr_v336 = _mng_bracketdepth298 + __twr_v335;
    _mng_bracketdepth298 = __twr_v336;
    goto __twr_l41;
    __twr_l60:;
    __twr_v337 = 93ULL;
    if (_mng_byte307 != __twr_v337) { goto __twr_l41; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v338 = 1ULL;
    __twr_v339 = _mng_bracketdepth298 - __twr_v338;
    _mng_bracketdepth298 = __twr_v339;
    __twr_v340 = 0ULL;
    if (__twr_v339 != __twr_v340) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    goto __twr_l31;
    __twr_l62:;
    __twr_l41:;
    __twr_v341 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v341)(_mng_buffer296, _mng_byte307);
    __twr_v342 = 0ULL;
    _mng_byte307 = __twr_v342;
    goto __twr_l30;
    __twr_l31:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentContents(uint64_t _mng_token343, uint64_t _mng_buffer344) {
    uint64_t _jkl_retv;
    uint64_t __twr_v345;
    uint64_t _mng_bracketdepth346;
    uint64_t __twr_v347;
    uint64_t _mng_comment348;
    uint64_t _mng_backslash349;
    uint64_t _mng_instring350;
    uint64_t _mng_inliteral351;
    uint64_t _mng_sawforwardslash352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t _mng_byte355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    __twr_v345 = 1ULL;
    _mng_bracketdepth346 = __twr_v345;
    __twr_v347 = 0ULL;
    _mng_comment348 = __twr_v347;
    _mng_backslash349 = __twr_v347;
    _mng_instring350 = __twr_v347;
    _mng_inliteral351 = __twr_v347;
    _mng_sawforwardslash352 = __twr_v347;
    __twr_l64:;
    __twr_v353 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v354 = ((uint64_t (*)(uint64_t))__twr_v353)(_mng_token343);
    _mng_byte355 = __twr_v354;
    __twr_v356 = 41ULL;
    if (__twr_v354 != __twr_v356) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v357 = 2ULL;
    _jkl_retv = __twr_v357;
    goto _jkl_epilogue;
    __twr_l66:;
    __twr_v358 = 44ULL;
    if (_mng_byte355 != __twr_v358) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    goto __twr_l64;
    __twr_l68:;
    goto __twr_l65;
    goto __twr_l64;
    __twr_l65:;
    __twr_l70:;
    if (_mng_comment348) { goto __twr_l75; } else { goto __twr_l74; }
    __twr_l75:;
    __twr_v359 = 10ULL;
    if (_mng_byte355 != __twr_v359) { goto __twr_l74; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v360 = 0ULL;
    _mng_comment348 = __twr_v360;
    goto __twr_l72;
    __twr_l74:;
    __twr_v361 = 47ULL;
    if (_mng_byte355 == __twr_v361) { goto __twr_l72; } else { goto __twr_l76; }
    __twr_l76:;
    __twr_v362 = 0ULL;
    _mng_sawforwardslash352 = __twr_v362;
    __twr_l72:;
    if (_mng_comment348) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l78:;
    goto __twr_l77;
    __twr_l79:;
    if (_mng_backslash349) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l80:;
    __twr_v363 = 0ULL;
    _mng_backslash349 = __twr_v363;
    goto __twr_l77;
    __twr_l81:;
    __twr_v364 = 92ULL;
    if (_mng_byte355 != __twr_v364) { goto __twr_l83; } else { goto __twr_l82; }
    __twr_l82:;
    __twr_v365 = 1ULL;
    _mng_backslash349 = __twr_v365;
    goto __twr_l77;
    __twr_l83:;
    if (_mng_instring350) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l84:;
    __twr_v366 = 34ULL;
    __twr_v367 = (_mng_byte355 == __twr_v366);
    __twr_v368 = !__twr_v367;
    _mng_instring350 = __twr_v368;
    goto __twr_l77;
    __twr_l85:;
    if (_mng_inliteral351) { goto __twr_l86; } else { goto __twr_l87; }
    __twr_l86:;
    __twr_v369 = 39ULL;
    __twr_v370 = (_mng_byte355 == __twr_v369);
    __twr_v371 = !__twr_v370;
    _mng_inliteral351 = __twr_v371;
    goto __twr_l77;
    __twr_l87:;
    __twr_v372 = 47ULL;
    if (_mng_byte355 != __twr_v372) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    if (_mng_sawforwardslash352) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l91:;
    __twr_v373 = 1ULL;
    __twr_v374 = 0ULL;
    __twr_v375 = *(uint64_t*)(_mng_buffer344);
    __twr_v376 = __twr_v375 - __twr_v373;
    *(uint64_t*)(_mng_buffer344) = __twr_v376;
    _mng_sawforwardslash352 = __twr_v374;
    _mng_comment348 = __twr_v373;
    goto __twr_l90;
    __twr_l92:;
    __twr_v377 = 1ULL;
    _mng_sawforwardslash352 = __twr_v377;
    __twr_l90:;
    goto __twr_l77;
    __twr_l89:;
    __twr_v378 = 34ULL;
    if (_mng_byte355 != __twr_v378) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v379 = 1ULL;
    _mng_instring350 = __twr_v379;
    goto __twr_l77;
    __twr_l94:;
    __twr_v380 = 39ULL;
    if (_mng_byte355 != __twr_v380) { goto __twr_l96; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v381 = 1ULL;
    _mng_inliteral351 = __twr_v381;
    goto __twr_l77;
    __twr_l96:;
    __twr_v382 = 40ULL;
    if (_mng_byte355 != __twr_v382) { goto __twr_l98; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v383 = 1ULL;
    __twr_v384 = _mng_bracketdepth346 + __twr_v383;
    _mng_bracketdepth346 = __twr_v384;
    goto __twr_l77;
    __twr_l98:;
    __twr_v385 = 41ULL;
    if (_mng_byte355 != __twr_v385) { goto __twr_l100; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v386 = 1ULL;
    __twr_v387 = _mng_bracketdepth346 - __twr_v386;
    _mng_bracketdepth346 = __twr_v387;
    __twr_v388 = 0ULL;
    if (__twr_v387 != __twr_v388) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v389 = 3ULL;
    _jkl_retv = __twr_v389;
    goto _jkl_epilogue;
    __twr_l101:;
    goto __twr_l77;
    __twr_l100:;
    __twr_v390 = 1ULL;
    if (_mng_bracketdepth346 != __twr_v390) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v391 = 44ULL;
    if (_mng_byte355 != __twr_v391) { goto __twr_l104; } else { goto __twr_l103; }
    __twr_l103:;
    goto __twr_l71;
    goto __twr_l77;
    __twr_l104:;
    __twr_v392 = 10ULL;
    if (_mng_byte355 != __twr_v392) { goto __twr_l77; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v393 = 32ULL;
    _mng_byte355 = __twr_v393;
    __twr_l77:;
    if (_mng_comment348) { goto __twr_l107; } else { goto __twr_l109; }
    __twr_l109:;
    if (_mng_backslash349) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v394 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v394)(_mng_buffer344, _mng_byte355);
    __twr_l107:;
    __twr_v395 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v396 = ((uint64_t (*)())__twr_v395)();
    _mng_byte355 = __twr_v396;
    __twr_v397 = 0ULL;
    if (__twr_v396 != __twr_v397) { goto __twr_l110; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v398 = (uint64_t)(&LexTokenError);
    __twr_v399 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v400 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v398)(_mng_token343, __twr_v399, __twr_v400, __twr_v400, __twr_v400);
    __twr_l110:;
    goto __twr_l70;
    __twr_l71:;
    __twr_v401 = 1ULL;
    _jkl_retv = __twr_v401;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectValue(uint64_t _mng_token402, uint64_t _mng_buffer403, uint64_t _mng_ignore404) {
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t _mng_byte407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t _mng_optoken419[4];
    uint64_t __twr_v420;
    uint64_t _mng_opbuffer421[8];
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t _mng_operator425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t _mng_simpletokbuf435[11];
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t _mng_macro488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    __twr_v405 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v406 = ((uint64_t (*)(uint64_t))__twr_v405)(_mng_token402);
    _mng_byte407 = __twr_v406;
    __twr_v408 = 34ULL;
    if (__twr_v406 != __twr_v408) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_v409 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v409)(_mng_token402, _mng_buffer403);
    __twr_v410 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v411 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v410)(_mng_buffer403, __twr_v411);
    goto _jkl_epilogue;
    goto __twr_l112;
    __twr_l114:;
    __twr_v412 = 91ULL;
    if (_mng_byte407 != __twr_v412) { goto __twr_l116; } else { goto __twr_l115; }
    __twr_l115:;
    __twr_v413 = (uint64_t)(&LexGetComplexString);
    ((void (*)(uint64_t, uint64_t))__twr_v413)(_mng_token402, _mng_buffer403);
    __twr_v414 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v415 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v414)(_mng_buffer403, __twr_v415);
    goto _jkl_epilogue;
    goto __twr_l112;
    __twr_l116:;
    __twr_v416 = 40ULL;
    if (_mng_byte407 != __twr_v416) { goto __twr_l112; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v417 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v418 = (uint64_t)(&_mng_optoken419);
    __twr_v420 = (uint64_t)(&_mng_opbuffer421);
    ((void (*)(uint64_t, uint64_t))__twr_v417)(__twr_v418, __twr_v420);
    __twr_v422 = (uint64_t)(&TlLookupHashTable);
    __twr_v423 = (uint64_t)(&LexOperatorHashTable);
    __twr_v424 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v422)(__twr_v423, __twr_v420);
    _mng_operator425 = __twr_v424;
    if (__twr_v424) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v426 = (uint64_t)(&LexTokenError);
    __twr_v427 = (uint64_t)(&_mng_optoken419);
    __twr_v428 = (uint64_t)(&"Unknown operator");
    __twr_v429 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v426)(__twr_v427, __twr_v428, __twr_v429, __twr_v429, __twr_v429);
    __twr_l118:;
    __twr_v430 = 48ULL;
    __twr_v431 = _mng_operator425 + __twr_v430;
    __twr_v432 = *(uint64_t*)(__twr_v431);
    ((void (*)(uint64_t, uint64_t))__twr_v432)(_mng_buffer403, _mng_ignore404);
    goto _jkl_epilogue;
    __twr_l112:;
    __twr_v433 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v434 = (uint64_t)(&_mng_simpletokbuf435);
    ((void (*)(uint64_t))__twr_v433)(__twr_v434);
    __twr_v436 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v436)(__twr_v434, _mng_byte407);
    __twr_v437 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v438 = ((uint64_t (*)())__twr_v437)();
    _mng_byte407 = __twr_v438;
    __twr_v439 = (uint64_t)(&LexCharTreatment);
    __twr_v440 = __twr_v439 + __twr_v438;
    __twr_v441 = *(uint8_t*)(__twr_v440);
    __twr_v442 = 3ULL;
    if (__twr_v441 == __twr_v442) { goto __twr_l121; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v443 = 0ULL;
    if (_mng_byte407 != __twr_v443) { goto __twr_l123; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v444 = (uint64_t)(&LexTokenError);
    __twr_v445 = (uint64_t)(&"Unexpected EOF");
    __twr_v446 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v444)(_mng_token402, __twr_v445, __twr_v446, __twr_v446, __twr_v446);
    __twr_l123:;
    __twr_v447 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v448 = (uint64_t)(&_mng_simpletokbuf435);
    ((void (*)(uint64_t, uint64_t))__twr_v447)(__twr_v448, _mng_byte407);
    __twr_v449 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v450 = ((uint64_t (*)())__twr_v449)();
    _mng_byte407 = __twr_v450;
    __twr_l122:;
    __twr_v451 = (uint64_t)(&LexCharTreatment);
    __twr_v452 = __twr_v451 + _mng_byte407;
    __twr_v453 = *(uint8_t*)(__twr_v452);
    __twr_v454 = 3ULL;
    if (__twr_v453 != __twr_v454) { goto __twr_l120; } else { goto __twr_l121; }
    __twr_l121:;
    __twr_v455 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v456 = (uint64_t)(&_mng_simpletokbuf435);
    __twr_v457 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v455)(__twr_v456, __twr_v457);
    __twr_v458 = 16ULL;
    __twr_v459 = __twr_v456 + __twr_v458;
    __twr_v460 = *(uint64_t*)(__twr_v459);
    __twr_v461 = *(uint8_t*)(__twr_v460);
    __twr_v462 = 48ULL;
    if (__twr_v461 < __twr_v462) { goto __twr_l125; } else { goto __twr_l127; }
    __twr_l127:;
    __twr_v463 = (uint64_t)(&_mng_simpletokbuf435);
    __twr_v464 = 16ULL;
    __twr_v465 = __twr_v463 + __twr_v464;
    __twr_v466 = *(uint64_t*)(__twr_v465);
    __twr_v467 = *(uint8_t*)(__twr_v466);
    __twr_v468 = 57ULL;
    if (__twr_v467 > __twr_v468) { goto __twr_l125; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v469 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v470 = (uint64_t)(&_mng_simpletokbuf435);
    __twr_v471 = 16ULL;
    __twr_v472 = __twr_v470 + __twr_v471;
    __twr_v473 = *(uint64_t*)(__twr_v472);
    __twr_v474 = *(uint64_t*)(__twr_v470);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v469)(_mng_buffer403, __twr_v473, __twr_v474);
    __twr_v475 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v475)(__twr_v470);
    goto _jkl_epilogue;
    __twr_l125:;
    if (_mng_ignore404) { goto __twr_l129; } else { goto __twr_l128; }
    __twr_l129:;
    __twr_v476 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v477 = (uint64_t)(&_mng_simpletokbuf435);
    ((void (*)(uint64_t))__twr_v476)(__twr_v477);
    __twr_v478 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v479 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v478)(_mng_buffer403, __twr_v479);
    goto _jkl_epilogue;
    __twr_l128:;
    __twr_v480 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v481 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v482 = *(uint64_t*)(__twr_v481);
    __twr_v483 = (uint64_t)(&_mng_simpletokbuf435);
    __twr_v484 = 16ULL;
    __twr_v485 = __twr_v483 + __twr_v484;
    __twr_v486 = *(uint64_t*)(__twr_v485);
    __twr_v487 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v480)(__twr_v482, __twr_v486);
    _mng_macro488 = __twr_v487;
    __twr_v489 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v489)(__twr_v483);
    if (__twr_v487) { goto __twr_l130; } else { goto __twr_l131; }
    __twr_l131:;
    __twr_v490 = (uint64_t)(&LexTokenError);
    __twr_v491 = (uint64_t)(&"Not a defined macro name");
    __twr_v492 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v490)(_mng_token402, __twr_v491, __twr_v492, __twr_v492, __twr_v492);
    __twr_l130:;
    __twr_v493 = 256ULL;
    __twr_v494 = _mng_macro488 + __twr_v493;
    __twr_v495 = *(uint8_t*)(__twr_v494);
    if (!(__twr_v495)) { goto __twr_l132; } else { goto __twr_l133; }
    __twr_l133:;
    __twr_v496 = (uint64_t)(&LexTokenError);
    __twr_v497 = (uint64_t)(&"Function macros not permitted here");
    __twr_v498 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v496)(_mng_token402, __twr_v497, __twr_v498, __twr_v498, __twr_v498);
    __twr_l132:;
    __twr_v499 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v500 = 80ULL;
    __twr_v501 = _mng_macro488 + __twr_v500;
    __twr_v502 = 96ULL;
    __twr_v503 = _mng_macro488 + __twr_v502;
    __twr_v504 = *(uint64_t*)(__twr_v503);
    __twr_v505 = *(uint64_t*)(__twr_v501);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v499)(_mng_buffer403, __twr_v504, __twr_v505);
    _jkl_epilogue:;
}
uint64_t LexCollectValueNumeric(uint64_t _mng_token506, uint64_t _mng_ignore507) {
    uint64_t _jkl_retv;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t _mng_buffer510[11];
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    __twr_v508 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v509 = (uint64_t)(&_mng_buffer510);
    ((void (*)(uint64_t))__twr_v508)(__twr_v509);
    __twr_v511 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v511)(_mng_token506, __twr_v509, _mng_ignore507);
    if (_mng_ignore507) { goto __twr_l135; } else { goto __twr_l134; }
    __twr_l135:;
    __twr_v512 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v513 = (uint64_t)(&_mng_buffer510);
    ((void (*)(uint64_t))__twr_v512)(__twr_v513);
    __twr_v514 = 0ULL;
    _jkl_retv = __twr_v514;
    goto _jkl_epilogue;
    __twr_l134:;
    __twr_v515 = (uint64_t)(&_mng_buffer510);
    __twr_v516 = 16ULL;
    __twr_v517 = __twr_v515 + __twr_v516;
    __twr_v518 = *(uint64_t*)(__twr_v517);
    __twr_v519 = *(uint8_t*)(__twr_v518);
    __twr_v520 = 48ULL;
    if (__twr_v519 < __twr_v520) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v521 = (uint64_t)(&_mng_buffer510);
    __twr_v522 = 16ULL;
    __twr_v523 = __twr_v521 + __twr_v522;
    __twr_v524 = *(uint64_t*)(__twr_v523);
    __twr_v525 = *(uint8_t*)(__twr_v524);
    __twr_v526 = 57ULL;
    if (__twr_v525 <= __twr_v526) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v527 = (uint64_t)(&LexTokenError);
    __twr_v528 = (uint64_t)(&"Expected numeric value");
    __twr_v529 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v527)(_mng_token506, __twr_v528, __twr_v529, __twr_v529, __twr_v529);
    __twr_l136:;
    __twr_v530 = (uint64_t)(&LexCrunchNumber);
    __twr_v531 = (uint64_t)(&_mng_buffer510);
    __twr_v532 = 16ULL;
    __twr_v533 = __twr_v531 + __twr_v532;
    __twr_v534 = *(uint64_t*)(__twr_v533);
    __twr_v535 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v530)(_mng_token506, __twr_v534);
    __twr_v536 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v536)(__twr_v531);
    _jkl_retv = __twr_v535;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexConsumeCloseParenthesis() {
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t _mng_token539[4];
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    __twr_v537 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v538 = (uint64_t)(&_mng_token539);
    __twr_v540 = ((uint64_t (*)(uint64_t))__twr_v537)(__twr_v538);
    __twr_v541 = 41ULL;
    if (__twr_v540 == __twr_v541) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v542 = (uint64_t)(&LexTokenError);
    __twr_v543 = (uint64_t)(&_mng_token539);
    __twr_v544 = (uint64_t)(&"Expected close parenthesis");
    __twr_v545 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v542)(__twr_v543, __twr_v544, __twr_v545, __twr_v545, __twr_v545);
    __twr_l139:;
    _jkl_epilogue:;
}
void LexDefineMacroFromArgumentString(uint64_t _mng_arg546) {
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t _mng_macro550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t _mng_equalsptr556;
    uint64_t __twr_v557;
    uint64_t _mng_j558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    __twr_v547 = (uint64_t)(&TlAllocateFromZone);
    __twr_v548 = (uint64_t)(&LexMacroZone);
    __twr_v549 = ((uint64_t (*)(uint64_t))__twr_v547)(__twr_v548);
    _mng_macro550 = __twr_v549;
    __twr_v551 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v552 = 80ULL;
    __twr_v553 = __twr_v549 + __twr_v552;
    ((void (*)(uint64_t))__twr_v551)(__twr_v553);
    __twr_v554 = (uint64_t)(&FeIsMacroArgument);
    __twr_v555 = ((uint64_t (*)(uint64_t))__twr_v554)(_mng_arg546);
    _mng_equalsptr556 = __twr_v555;
    __twr_v557 = 0ULL;
    _mng_j558 = __twr_v557;
    if (_mng_arg546 >= __twr_v555) { goto __twr_l142; } else { goto __twr_l141; }
    __twr_l141:;
    __twr_v559 = *(uint8_t*)(_mng_arg546);
    __twr_v560 = 168ULL;
    __twr_v561 = _mng_macro550 + __twr_v560;
    __twr_v562 = 1ULL;
    __twr_v563 = __twr_v561 + _mng_j558;
    *(uint8_t*)(__twr_v563) = __twr_v559;
    __twr_v564 = _mng_j558 + __twr_v562;
    _mng_j558 = __twr_v564;
    __twr_v565 = _mng_arg546 + __twr_v562;
    _mng_arg546 = __twr_v565;
    __twr_l143:;
    if (_mng_arg546 < _mng_equalsptr556) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v566 = 0ULL;
    __twr_v567 = 168ULL;
    __twr_v568 = _mng_macro550 + __twr_v567;
    __twr_v569 = 1ULL;
    __twr_v570 = __twr_v568 + _mng_j558;
    *(uint8_t*)(__twr_v570) = __twr_v566;
    _mng_j558 = __twr_v566;
    __twr_v571 = _mng_equalsptr556 + __twr_v569;
    _mng_equalsptr556 = __twr_v571;
    __twr_v572 = *(uint8_t*)(__twr_v571);
    if (!(__twr_v572)) { goto __twr_l145; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v573 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v574 = 80ULL;
    __twr_v575 = _mng_macro550 + __twr_v574;
    __twr_v576 = *(uint8_t*)(_mng_equalsptr556);
    ((void (*)(uint64_t, uint64_t))__twr_v573)(__twr_v575, __twr_v576);
    __twr_v577 = 1ULL;
    __twr_v578 = _mng_equalsptr556 + __twr_v577;
    _mng_equalsptr556 = __twr_v578;
    __twr_l146:;
    __twr_v579 = *(uint8_t*)(_mng_equalsptr556);
    if (__twr_v579) { goto __twr_l144; } else { goto __twr_l145; }
    __twr_l145:;
    __twr_v580 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v581 = 80ULL;
    __twr_v582 = _mng_macro550 + __twr_v581;
    __twr_v583 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v580)(__twr_v582, __twr_v583);
    __twr_v584 = 256ULL;
    __twr_v585 = _mng_macro550 + __twr_v584;
    *(uint8_t*)(__twr_v585) = __twr_v583;
    __twr_v586 = 257ULL;
    __twr_v587 = _mng_macro550 + __twr_v586;
    *(uint8_t*)(__twr_v587) = __twr_v583;
    __twr_v588 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v589 = (uint64_t)(&LexRootMacroScope);
    __twr_v590 = *(uint64_t*)(__twr_v589);
    __twr_v591 = 168ULL;
    __twr_v592 = _mng_macro550 + __twr_v591;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v588)(__twr_v590, _mng_macro550, __twr_v592);
    _jkl_epilogue:;
}
extern void PrsEnterMacro();
void LexExpandMacro(uint64_t _mng_macro593, uint64_t _mng_token594) {
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t _mng_oldscope606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t _mng_oldmacroscope609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t _mng_stream635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t _mng_trashtoken666[4];
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t _mng_arg676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t _mng_argmacro680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t _mng_foundclose700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    __twr_v595 = 1ULL;
    __twr_v596 = (uint64_t)(&LexMacroDepth);
    __twr_v597 = *(uint32_t*)(__twr_v596);
    __twr_v598 = __twr_v597 + __twr_v595;
    *(uint32_t*)(__twr_v596) = __twr_v598;
    __twr_v599 = *(uint32_t*)(__twr_v596);
    __twr_v600 = 64ULL;
    if (__twr_v599 < __twr_v600) { goto __twr_l147; } else { goto __twr_l148; }
    __twr_l148:;
    __twr_v601 = (uint64_t)(&LexTokenError);
    __twr_v602 = (uint64_t)(&"Too many macros deep!");
    __twr_v603 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v601)(_mng_token594, __twr_v602, __twr_v603, __twr_v603, __twr_v603);
    __twr_l147:;
    __twr_v604 = (uint64_t)(&LexCurrentScope);
    __twr_v605 = *(uint64_t*)(__twr_v604);
    _mng_oldscope606 = __twr_v605;
    __twr_v607 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v608 = *(uint64_t*)(__twr_v607);
    _mng_oldmacroscope609 = __twr_v608;
    __twr_v610 = 257ULL;
    __twr_v611 = _mng_macro593 + __twr_v610;
    __twr_v612 = *(uint8_t*)(__twr_v611);
    if (!(__twr_v612)) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v613 = 232ULL;
    __twr_v614 = _mng_macro593 + __twr_v613;
    __twr_v615 = *(uint64_t*)(__twr_v614);
    __twr_v616 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v616) = __twr_v615;
    __twr_v617 = 240ULL;
    __twr_v618 = _mng_macro593 + __twr_v617;
    __twr_v619 = *(uint64_t*)(__twr_v618);
    __twr_v620 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v620) = __twr_v619;
    goto __twr_l149;
    __twr_l151:;
    __twr_v621 = (uint64_t)(&LexRootScope);
    __twr_v622 = *(uint64_t*)(__twr_v621);
    if (_mng_oldscope606 == __twr_v622) { goto __twr_l152; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v623 = (uint64_t)(&LexCreateSymbolTable);
    __twr_v624 = (uint64_t)(&LexRootScope);
    __twr_v625 = *(uint64_t*)(__twr_v624);
    __twr_v626 = ((uint64_t (*)(uint64_t))__twr_v623)(__twr_v625);
    __twr_v627 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v627) = __twr_v626;
    __twr_l152:;
    __twr_v628 = (uint64_t)(&LexCreateMacroTable);
    __twr_v629 = (uint64_t)(&LexRootMacroScope);
    __twr_v630 = *(uint64_t*)(__twr_v629);
    __twr_v631 = ((uint64_t (*)(uint64_t))__twr_v628)(__twr_v630);
    __twr_v632 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v632) = __twr_v631;
    __twr_l149:;
    __twr_v633 = (uint64_t)(&LexAllocateStream);
    __twr_v634 = ((uint64_t (*)())__twr_v633)();
    _mng_stream635 = __twr_v634;
    __twr_v636 = (uint64_t)(&LexInitializeStream);
    ((void (*)(uint64_t, uint64_t))__twr_v636)(__twr_v634, _mng_macro593);
    __twr_v637 = (uint64_t)(&LexCurrentStream);
    __twr_v638 = *(uint64_t*)(__twr_v637);
    __twr_v639 = 8ULL;
    __twr_v640 = __twr_v638 + __twr_v639;
    __twr_v641 = *(uint64_t*)(__twr_v640);
    __twr_v642 = __twr_v634 + __twr_v639;
    *(uint64_t*)(__twr_v642) = __twr_v641;
    __twr_v643 = 1000000ULL;
    __twr_v644 = 44ULL;
    __twr_v645 = __twr_v634 + __twr_v644;
    *(uint32_t*)(__twr_v645) = __twr_v643;
    __twr_v646 = 80ULL;
    __twr_v647 = _mng_macro593 + __twr_v646;
    __twr_v648 = 96ULL;
    __twr_v649 = _mng_macro593 + __twr_v648;
    __twr_v650 = *(uint64_t*)(__twr_v649);
    __twr_v651 = 24ULL;
    __twr_v652 = __twr_v634 + __twr_v651;
    *(uint64_t*)(__twr_v652) = __twr_v650;
    __twr_v653 = *(uint64_t*)(__twr_v647);
    __twr_v654 = 1ULL;
    __twr_v655 = __twr_v653 - __twr_v654;
    __twr_v656 = 36ULL;
    __twr_v657 = __twr_v634 + __twr_v656;
    *(uint32_t*)(__twr_v657) = __twr_v655;
    __twr_v658 = 72ULL;
    __twr_v659 = __twr_v634 + __twr_v658;
    *(uint64_t*)(__twr_v659) = _mng_oldscope606;
    __twr_v660 = __twr_v634 + __twr_v646;
    *(uint64_t*)(__twr_v660) = _mng_oldmacroscope609;
    __twr_v661 = 256ULL;
    __twr_v662 = _mng_macro593 + __twr_v661;
    __twr_v663 = *(uint8_t*)(__twr_v662);
    if (!(__twr_v663)) { goto __twr_l154; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v664 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v665 = (uint64_t)(&_mng_trashtoken666);
    __twr_v667 = ((uint64_t (*)(uint64_t))__twr_v664)(__twr_v665);
    __twr_v668 = 40ULL;
    if (__twr_v667 == __twr_v668) { goto __twr_l156; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v669 = (uint64_t)(&LexTokenError);
    __twr_v670 = (uint64_t)(&_mng_trashtoken666);
    __twr_v671 = (uint64_t)(&"Expected open parenthesis after function macro name");
    __twr_v672 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v669)(__twr_v670, __twr_v671, __twr_v672, __twr_v672, __twr_v672);
    __twr_l156:;
    __twr_v673 = 248ULL;
    __twr_v674 = _mng_macro593 + __twr_v673;
    __twr_v675 = *(uint64_t*)(__twr_v674);
    _mng_arg676 = __twr_v675;
    if (!(__twr_v675)) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v677 = (uint64_t)(&TlAllocateFromZone);
    __twr_v678 = (uint64_t)(&LexMacroZone);
    __twr_v679 = ((uint64_t (*)(uint64_t))__twr_v677)(__twr_v678);
    _mng_argmacro680 = __twr_v679;
    __twr_v681 = 232ULL;
    __twr_v682 = __twr_v679 + __twr_v681;
    *(uint64_t*)(__twr_v682) = _mng_oldscope606;
    __twr_v683 = 240ULL;
    __twr_v684 = __twr_v679 + __twr_v683;
    *(uint64_t*)(__twr_v684) = _mng_oldmacroscope609;
    __twr_v685 = (uint64_t)(&TlCopyString);
    __twr_v686 = 168ULL;
    __twr_v687 = __twr_v679 + __twr_v686;
    __twr_v688 = 0ULL;
    __twr_v689 = 1ULL;
    __twr_v690 = 56ULL;
    __twr_v691 = _mng_arg676 + __twr_v690;
    __twr_v692 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v685)(__twr_v687, __twr_v691, __twr_v692);
    __twr_v693 = 256ULL;
    __twr_v694 = __twr_v679 + __twr_v693;
    *(uint8_t*)(__twr_v694) = __twr_v688;
    __twr_v695 = 257ULL;
    __twr_v696 = __twr_v679 + __twr_v695;
    *(uint8_t*)(__twr_v696) = __twr_v689;
    __twr_v697 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v698 = 80ULL;
    __twr_v699 = __twr_v679 + __twr_v698;
    ((void (*)(uint64_t))__twr_v697)(__twr_v699);
    _mng_foundclose700 = __twr_v688;
    __twr_l161:;
    __twr_v701 = 2ULL;
    __twr_v702 = _mng_foundclose700 & __twr_v701;
    if (!(__twr_v702)) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v703 = (uint64_t)(&LexTokenError);
    __twr_v704 = (uint64_t)(&_mng_trashtoken666);
    __twr_v705 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v706 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v703)(__twr_v704, __twr_v705, __twr_v706, __twr_v706, __twr_v706);
    __twr_l164:;
    __twr_v707 = (uint64_t)(&LexCollectMacroArgumentContents);
    __twr_v708 = 48ULL;
    __twr_v709 = _mng_argmacro680 + __twr_v708;
    __twr_v710 = 80ULL;
    __twr_v711 = _mng_argmacro680 + __twr_v710;
    __twr_v712 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v707)(__twr_v709, __twr_v711);
    _mng_foundclose700 = __twr_v712;
    __twr_l163:;
    __twr_v713 = 1ULL;
    __twr_v714 = _mng_foundclose700 & __twr_v713;
    if (!(__twr_v714)) { goto __twr_l161; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v715 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v716 = 80ULL;
    __twr_v717 = _mng_argmacro680 + __twr_v716;
    __twr_v718 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v715)(__twr_v717, __twr_v718);
    __twr_v719 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v720 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v721 = *(uint64_t*)(__twr_v720);
    __twr_v722 = 168ULL;
    __twr_v723 = _mng_argmacro680 + __twr_v722;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v719)(__twr_v721, _mng_argmacro680, __twr_v723);
    __twr_v724 = 48ULL;
    __twr_v725 = _mng_arg676 + __twr_v724;
    __twr_v726 = *(uint64_t*)(__twr_v725);
    _mng_arg676 = __twr_v726;
    __twr_v727 = 2ULL;
    __twr_v728 = _mng_foundclose700 & __twr_v727;
    if (!(__twr_v728)) { goto __twr_l168; } else { goto __twr_l167; }
    __twr_l167:;
    if (_mng_arg676) { goto __twr_l170; } else { goto __twr_l169; }
    __twr_l170:;
    __twr_v729 = (uint64_t)(&LexTokenError);
    __twr_v730 = (uint64_t)(&_mng_trashtoken666);
    __twr_v731 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v732 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v729)(__twr_v730, __twr_v731, __twr_v732, __twr_v732, __twr_v732);
    __twr_l169:;
    goto __twr_l166;
    __twr_l168:;
    if (_mng_arg676) { goto __twr_l166; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_l172:;
    __twr_v733 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v734 = (uint64_t)(&_mng_trashtoken666);
    __twr_v735 = ((uint64_t (*)(uint64_t))__twr_v733)(__twr_v734);
    __twr_v736 = 41ULL;
    if (__twr_v735 != __twr_v736) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    goto __twr_l173;
    __twr_l174:;
    goto __twr_l172;
    __twr_l173:;
    __twr_l166:;
    __twr_l160:;
    if (_mng_arg676) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_l154:;
    __twr_v737 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v737)(_mng_stream635);
    __twr_v738 = (uint64_t)(&PrsEnterMacro);
    ((void (*)())__twr_v738)();
    _jkl_epilogue:;
}
void LexParseInclude() {
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t _mng_str741[11];
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t _mng_token744[4];
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t _mng_created755;
    uint64_t _mng_fileblock756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t _mng_filepath761[11];
    uint64_t __twr_v762;
    uint64_t _mng_found763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t _mng_handle782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    __twr_v739 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v740 = (uint64_t)(&_mng_str741);
    ((void (*)(uint64_t))__twr_v739)(__twr_v740);
    __twr_v742 = (uint64_t)(&LexCollectString);
    __twr_v743 = (uint64_t)(&_mng_token744);
    ((void (*)(uint64_t, uint64_t))__twr_v742)(__twr_v743, __twr_v740);
    __twr_v745 = (uint64_t)(&LexFalseCount);
    __twr_v746 = *(uint32_t*)(__twr_v745);
    if (!(__twr_v746)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v747 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v748 = (uint64_t)(&_mng_str741);
    ((void (*)(uint64_t))__twr_v747)(__twr_v748);
    goto _jkl_epilogue;
    __twr_l176:;
    __twr_v749 = (uint64_t)(&FeCreateFileBlock);
    __twr_v750 = (uint64_t)(&_mng_str741);
    __twr_v751 = 16ULL;
    __twr_v752 = __twr_v750 + __twr_v751;
    __twr_v753 = *(uint64_t*)(__twr_v752);
    __twr_v754 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v749)(__twr_v753, (uint64_t)(&_mng_created755));
    _mng_fileblock756 = __twr_v754;
    if (_mng_created755) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v757 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v758 = (uint64_t)(&_mng_str741);
    ((void (*)(uint64_t))__twr_v757)(__twr_v758);
    goto _jkl_epilogue;
    __twr_l178:;
    __twr_v759 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v760 = (uint64_t)(&_mng_filepath761);
    ((void (*)(uint64_t))__twr_v759)(__twr_v760);
    __twr_v762 = 0ULL;
    _mng_found763 = __twr_v762;
    __twr_v764 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v765 = (uint64_t)(&_mng_str741);
    __twr_v766 = 16ULL;
    __twr_v767 = __twr_v765 + __twr_v766;
    __twr_v768 = *(uint64_t*)(__twr_v767);
    __twr_v769 = (uint64_t)(&"<inc>/");
    __twr_v770 = 6ULL;
    __twr_v771 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v764)(__twr_v768, __twr_v769, __twr_v770);
    if (__twr_v771 != __twr_v762) { goto __twr_l182; } else { goto __twr_l181; }
    __twr_l181:;
    __twr_v772 = (uint64_t)(&TlMatchPath);
    __twr_v773 = (uint64_t)(&_mng_str741);
    __twr_v774 = 16ULL;
    __twr_v775 = __twr_v773 + __twr_v774;
    __twr_v776 = *(uint64_t*)(__twr_v775);
    __twr_v777 = 6ULL;
    __twr_v778 = __twr_v776 + __twr_v777;
    __twr_v779 = (uint64_t)(&FeIncludeDirectory);
    __twr_v780 = (uint64_t)(&_mng_filepath761);
    __twr_v781 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v772)(__twr_v778, __twr_v779, __twr_v780, (uint64_t)(&_mng_handle782));
    _mng_found763 = __twr_v781;
    goto __twr_l180;
    __twr_l182:;
    __twr_v783 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v784 = (uint64_t)(&_mng_str741);
    __twr_v785 = 16ULL;
    __twr_v786 = __twr_v784 + __twr_v785;
    __twr_v787 = *(uint64_t*)(__twr_v786);
    __twr_v788 = (uint64_t)(&"<ll>/");
    __twr_v789 = 5ULL;
    __twr_v790 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v783)(__twr_v787, __twr_v788, __twr_v789);
    __twr_v791 = 0ULL;
    if (__twr_v790 != __twr_v791) { goto __twr_l184; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v792 = (uint64_t)(&TlMatchPath);
    __twr_v793 = (uint64_t)(&_mng_str741);
    __twr_v794 = 16ULL;
    __twr_v795 = __twr_v793 + __twr_v794;
    __twr_v796 = *(uint64_t*)(__twr_v795);
    __twr_v797 = 5ULL;
    __twr_v798 = __twr_v796 + __twr_v797;
    __twr_v799 = (uint64_t)(&FeLibraryDirectory);
    __twr_v800 = (uint64_t)(&_mng_filepath761);
    __twr_v801 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v792)(__twr_v798, __twr_v799, __twr_v800, (uint64_t)(&_mng_handle782));
    _mng_found763 = __twr_v801;
    goto __twr_l180;
    __twr_l184:;
    __twr_v802 = (uint64_t)(&TlCopyParentPath);
    __twr_v803 = (uint64_t)(&LexCurrentStream);
    __twr_v804 = *(uint64_t*)(__twr_v803);
    __twr_v805 = 8ULL;
    __twr_v806 = __twr_v804 + __twr_v805;
    __twr_v807 = *(uint64_t*)(__twr_v806);
    __twr_v808 = 48ULL;
    __twr_v809 = __twr_v807 + __twr_v808;
    __twr_v810 = 1ULL;
    __twr_v811 = (uint64_t)(&_mng_filepath761);
    ((void (*)(uint64_t, uint64_t))__twr_v802)(__twr_v809, __twr_v811);
    __twr_v812 = 16ULL;
    __twr_v813 = __twr_v811 + __twr_v812;
    __twr_v814 = *(uint64_t*)(__twr_v813);
    __twr_v815 = *(uint64_t*)(__twr_v811);
    __twr_v816 = __twr_v815 - __twr_v810;
    __twr_v817 = __twr_v814 + __twr_v816;
    __twr_v818 = *(uint8_t*)(__twr_v817);
    __twr_v819 = 47ULL;
    if (__twr_v818 == __twr_v819) { goto __twr_l185; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v820 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v821 = (uint64_t)(&_mng_filepath761);
    __twr_v822 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v820)(__twr_v821, __twr_v822);
    __twr_l185:;
    __twr_v823 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v824 = (uint64_t)(&_mng_filepath761);
    __twr_v825 = (uint64_t)(&_mng_str741);
    __twr_v826 = 16ULL;
    __twr_v827 = __twr_v825 + __twr_v826;
    __twr_v828 = *(uint64_t*)(__twr_v827);
    __twr_v829 = 0ULL;
    __twr_v830 = *(uint64_t*)(__twr_v825);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v823)(__twr_v824, __twr_v828, __twr_v830);
    __twr_v831 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v831)(__twr_v824, __twr_v829);
    __twr_v832 = (uint64_t)(&TlOpenSource);
    __twr_v833 = __twr_v824 + __twr_v826;
    __twr_v834 = *(uint64_t*)(__twr_v833);
    __twr_v835 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v832)(__twr_v834, (uint64_t)(&_mng_handle782));
    if (__twr_v835) { goto __twr_l187; } else { goto __twr_l188; }
    __twr_l188:;
    __twr_v836 = 1ULL;
    _mng_found763 = __twr_v836;
    __twr_l187:;
    __twr_l180:;
    if (_mng_found763) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v837 = (uint64_t)(&LexTokenError);
    __twr_v838 = (uint64_t)(&_mng_token744);
    __twr_v839 = (uint64_t)(&"Failed to include the file.");
    __twr_v840 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v837)(__twr_v838, __twr_v839, __twr_v840, __twr_v840, __twr_v840);
    __twr_l189:;
    __twr_v841 = (uint64_t)(&FeCopyPathFileBlock);
    __twr_v842 = (uint64_t)(&_mng_filepath761);
    __twr_v843 = 16ULL;
    __twr_v844 = __twr_v842 + __twr_v843;
    __twr_v845 = *(uint64_t*)(__twr_v844);
    ((void (*)(uint64_t, uint64_t))__twr_v841)(_mng_fileblock756, __twr_v845);
    __twr_v846 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v846)(__twr_v842);
    __twr_v847 = (uint64_t)(&_mng_str741);
    ((void (*)(uint64_t))__twr_v846)(__twr_v847);
    __twr_v848 = (uint64_t)(&LexCreateFileStream);
    __twr_v849 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v848)(_mng_fileblock756, _mng_handle782);
    __twr_v850 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v850)(__twr_v849);
    _jkl_epilogue:;
}
void LexParseDefine() {
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t _mng_contentsbuffer855[11];
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t _mng_trashtoken858[4];
    uint64_t __twr_v859;
    uint64_t _mng_namebuffer860[8];
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t _mng_macro867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t __twr_v886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t __twr_v893;
    uint64_t __twr_v894;
    uint64_t __twr_v895;
    uint64_t __twr_v896;
    uint64_t __twr_v897;
    uint64_t __twr_v898;
    uint64_t __twr_v899;
    __twr_v851 = (uint64_t)(&LexFalseCount);
    __twr_v852 = *(uint32_t*)(__twr_v851);
    if (!(__twr_v852)) { goto __twr_l191; } else { goto __twr_l192; }
    __twr_l192:;
    __twr_v853 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v854 = (uint64_t)(&_mng_contentsbuffer855);
    ((void (*)(uint64_t))__twr_v853)(__twr_v854);
    __twr_v856 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v857 = (uint64_t)(&_mng_trashtoken858);
    __twr_v859 = (uint64_t)(&_mng_namebuffer860);
    __twr_v861 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v856)(__twr_v857, __twr_v859);
    __twr_v862 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v862)(__twr_v857, __twr_v854, __twr_v861);
    __twr_v863 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v863)(__twr_v854);
    goto _jkl_epilogue;
    __twr_l191:;
    __twr_v864 = (uint64_t)(&TlAllocateFromZone);
    __twr_v865 = (uint64_t)(&LexMacroZone);
    __twr_v866 = ((uint64_t (*)(uint64_t))__twr_v864)(__twr_v865);
    _mng_macro867 = __twr_v866;
    __twr_v868 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v869 = 80ULL;
    __twr_v870 = __twr_v866 + __twr_v869;
    ((void (*)(uint64_t))__twr_v868)(__twr_v870);
    __twr_v871 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v872 = 48ULL;
    __twr_v873 = __twr_v866 + __twr_v872;
    __twr_v874 = 168ULL;
    __twr_v875 = __twr_v866 + __twr_v874;
    ((void (*)(uint64_t, uint64_t))__twr_v871)(__twr_v873, __twr_v875);
    __twr_v876 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v877 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v878 = *(uint64_t*)(__twr_v877);
    __twr_v879 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v876)(__twr_v878, __twr_v875);
    if (!(__twr_v879)) { goto __twr_l193; } else { goto __twr_l194; }
    __twr_l194:;
    __twr_v880 = (uint64_t)(&LexTokenError);
    __twr_v881 = 48ULL;
    __twr_v882 = _mng_macro867 + __twr_v881;
    __twr_v883 = (uint64_t)(&"Macro already defined");
    __twr_v884 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v880)(__twr_v882, __twr_v883, __twr_v884, __twr_v884, __twr_v884);
    __twr_l193:;
    __twr_v885 = 0ULL;
    __twr_v886 = 256ULL;
    __twr_v887 = _mng_macro867 + __twr_v886;
    *(uint8_t*)(__twr_v887) = __twr_v885;
    __twr_v888 = 257ULL;
    __twr_v889 = _mng_macro867 + __twr_v888;
    *(uint8_t*)(__twr_v889) = __twr_v885;
    __twr_v890 = (uint64_t)(&LexCollectValue);
    __twr_v891 = 48ULL;
    __twr_v892 = _mng_macro867 + __twr_v891;
    __twr_v893 = 80ULL;
    __twr_v894 = _mng_macro867 + __twr_v893;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v890)(__twr_v892, __twr_v894, __twr_v885);
    __twr_v895 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v896 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v897 = *(uint64_t*)(__twr_v896);
    __twr_v898 = 168ULL;
    __twr_v899 = _mng_macro867 + __twr_v898;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v895)(__twr_v897, _mng_macro867, __twr_v899);
    _jkl_epilogue:;
}
void LexParseUndefine() {
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t _mng_token902[4];
    uint64_t __twr_v903;
    uint64_t _mng_buffer904[8];
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t __twr_v907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t _mng_oldmacro912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    __twr_v900 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v901 = (uint64_t)(&_mng_token902);
    __twr_v903 = (uint64_t)(&_mng_buffer904);
    ((void (*)(uint64_t, uint64_t))__twr_v900)(__twr_v901, __twr_v903);
    __twr_v905 = (uint64_t)(&LexFalseCount);
    __twr_v906 = *(uint32_t*)(__twr_v905);
    if (!(__twr_v906)) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    goto _jkl_epilogue;
    __twr_l195:;
    __twr_v907 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v908 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v909 = *(uint64_t*)(__twr_v908);
    __twr_v910 = (uint64_t)(&_mng_buffer904);
    __twr_v911 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v907)(__twr_v909, __twr_v910);
    _mng_oldmacro912 = __twr_v911;
    if (__twr_v911) { goto __twr_l197; } else { goto __twr_l198; }
    __twr_l198:;
    goto _jkl_epilogue;
    __twr_l197:;
    __twr_v913 = (uint64_t)(&TlRemoveSymbolTable);
    ((void (*)(uint64_t))__twr_v913)(_mng_oldmacro912);
    __twr_v914 = (uint64_t)(&LexMacroDelete);
    ((void (*)(uint64_t))__twr_v914)(_mng_oldmacro912);
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentName(uint64_t _mng_token915, uint64_t _mng_buffer916) {
    uint64_t _jkl_retv;
    uint64_t __twr_v917;
    uint64_t _mng_len918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t _mng_byte921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint64_t __twr_v933;
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t __twr_v936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    uint64_t __twr_v942;
    uint64_t __twr_v943;
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t __twr_v946;
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    __twr_v917 = 0ULL;
    _mng_len918 = __twr_v917;
    __twr_l199:;
    __twr_v919 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v920 = ((uint64_t (*)(uint64_t))__twr_v919)(_mng_token915);
    _mng_byte921 = __twr_v920;
    __twr_v922 = 41ULL;
    if (__twr_v920 != __twr_v922) { goto __twr_l203; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v923 = 2ULL;
    _jkl_retv = __twr_v923;
    goto _jkl_epilogue;
    goto __twr_l201;
    __twr_l203:;
    __twr_v924 = 44ULL;
    if (_mng_byte921 != __twr_v924) { goto __twr_l201; } else { goto __twr_l204; }
    __twr_l204:;
    goto __twr_l199;
    __twr_l201:;
    goto __twr_l200;
    goto __twr_l199;
    __twr_l200:;
    __twr_l205:;
    __twr_v925 = (uint64_t)(&LexCharTreatment);
    __twr_v926 = __twr_v925 + _mng_byte921;
    __twr_v927 = *(uint8_t*)(__twr_v926);
    __twr_v928 = 3ULL;
    if (__twr_v927 != __twr_v928) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v929 = 0ULL;
    *(uint8_t*)(_mng_buffer916) = __twr_v929;
    __twr_v930 = 1ULL;
    _jkl_retv = __twr_v930;
    goto _jkl_epilogue;
    __twr_l207:;
    __twr_v931 = 41ULL;
    if (_mng_byte921 != __twr_v931) { goto __twr_l209; } else { goto __twr_l210; }
    __twr_l210:;
    __twr_v932 = 0ULL;
    *(uint8_t*)(_mng_buffer916) = __twr_v932;
    __twr_v933 = 3ULL;
    _jkl_retv = __twr_v933;
    goto _jkl_epilogue;
    __twr_l209:;
    __twr_v934 = 44ULL;
    if (_mng_byte921 != __twr_v934) { goto __twr_l211; } else { goto __twr_l212; }
    __twr_l212:;
    __twr_v935 = 0ULL;
    *(uint8_t*)(_mng_buffer916) = __twr_v935;
    __twr_v936 = 1ULL;
    _jkl_retv = __twr_v936;
    goto _jkl_epilogue;
    __twr_l211:;
    __twr_v937 = (uint64_t)(&LexCharTreatment);
    __twr_v938 = __twr_v937 + _mng_byte921;
    __twr_v939 = *(uint8_t*)(__twr_v938);
    __twr_v940 = 0ULL;
    if (__twr_v939 == __twr_v940) { goto __twr_l213; } else { goto __twr_l214; }
    __twr_l214:;
    __twr_v941 = (uint64_t)(&LexTokenError);
    __twr_v942 = (uint64_t)(&"Illegal character in token");
    __twr_v943 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v941)(_mng_token915, __twr_v942, __twr_v943, __twr_v943, __twr_v943);
    __twr_l213:;
    __twr_v944 = 63ULL;
    if (_mng_len918 != __twr_v944) { goto __twr_l215; } else { goto __twr_l216; }
    __twr_l216:;
    __twr_v945 = (uint64_t)(&LexTokenError);
    __twr_v946 = (uint64_t)(&"Token length too great");
    __twr_v947 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v945)(_mng_token915, __twr_v946, __twr_v947, __twr_v947, __twr_v947);
    __twr_l215:;
    *(uint8_t*)(_mng_buffer916) = _mng_byte921;
    __twr_v948 = 1ULL;
    __twr_v949 = _mng_buffer916 + __twr_v948;
    _mng_buffer916 = __twr_v949;
    __twr_v950 = _mng_len918 + __twr_v948;
    _mng_len918 = __twr_v950;
    __twr_v951 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v952 = ((uint64_t (*)())__twr_v951)();
    _mng_byte921 = __twr_v952;
    goto __twr_l205;
    __twr_l206:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectMacroArgumentList(uint64_t _mng_ignore953, uint64_t _mng_o_arglisthead, uint64_t _mng_o_length) {
    uint64_t __twr_v954;
    uint64_t _mng_arglisttail955;
    uint64_t __twr_v956;
    uint64_t __twr_v957;
    uint64_t _mng_hashtable958[196];
    uint64_t _mng_arglisthead959;
    uint64_t _mng_length960;
    uint64_t __twr_v961;
    uint64_t __twr_v962;
    uint64_t _mng_token963[4];
    uint64_t __twr_v964;
    uint64_t _mng_buffer965[8];
    uint64_t __twr_v966;
    uint64_t __twr_v967;
    uint64_t _mng_state968;
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t _mng_created975;
    uint64_t _mng_arg976;
    uint64_t __twr_v977;
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t __twr_v990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    __twr_v954 = 0ULL;
    _mng_arglisttail955 = __twr_v954;
    __twr_v956 = (uint64_t)(&TlInitializeHashTable);
    __twr_v957 = (uint64_t)(&_mng_hashtable958);
    ((void (*)(uint64_t))__twr_v956)(__twr_v957);
    _mng_arglisthead959 = __twr_v954;
    _mng_length960 = __twr_v954;
    __twr_l217:;
    __twr_v961 = (uint64_t)(&LexCollectMacroArgumentName);
    __twr_v962 = (uint64_t)(&_mng_token963);
    __twr_v964 = (uint64_t)(&_mng_buffer965);
    __twr_v966 = 1ULL;
    __twr_v967 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v961)(__twr_v962, __twr_v964);
    _mng_state968 = __twr_v967;
    __twr_v969 = __twr_v967 & __twr_v966;
    if (!(__twr_v969)) { goto __twr_l219; } else { goto __twr_l221; }
    __twr_l221:;
    if (_mng_ignore953) { goto __twr_l219; } else { goto __twr_l220; }
    __twr_l220:;
    __twr_v970 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v971 = (uint64_t)(&_mng_hashtable958);
    __twr_v972 = 120ULL;
    __twr_v973 = (uint64_t)(&_mng_buffer965);
    __twr_v974 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v970)(__twr_v971, __twr_v972, __twr_v973, (uint64_t)(&_mng_created975));
    _mng_arg976 = __twr_v974;
    if (_mng_created975) { goto __twr_l222; } else { goto __twr_l223; }
    __twr_l223:;
    __twr_v977 = (uint64_t)(&LexTokenError);
    __twr_v978 = (uint64_t)(&_mng_token963);
    __twr_v979 = (uint64_t)(&"Macro argument name already used");
    __twr_v980 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v977)(__twr_v978, __twr_v979, __twr_v980, __twr_v980, __twr_v980);
    __twr_l222:;
    __twr_v981 = (uint64_t)(&TlCopyString);
    __twr_v982 = 56ULL;
    __twr_v983 = _mng_arg976 + __twr_v982;
    __twr_v984 = 0ULL;
    __twr_v985 = 1ULL;
    __twr_v986 = (uint64_t)(&_mng_buffer965);
    __twr_v987 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v981)(__twr_v983, __twr_v986, __twr_v987);
    __twr_v988 = _mng_length960 + __twr_v985;
    _mng_length960 = __twr_v988;
    __twr_v989 = 48ULL;
    __twr_v990 = _mng_arg976 + __twr_v989;
    *(uint64_t*)(__twr_v990) = __twr_v984;
    if (_mng_arglisttail955) { goto __twr_l225; } else { goto __twr_l226; }
    __twr_l225:;
    __twr_v991 = 48ULL;
    __twr_v992 = _mng_arglisttail955 + __twr_v991;
    *(uint64_t*)(__twr_v992) = _mng_arg976;
    goto __twr_l224;
    __twr_l226:;
    _mng_arglisthead959 = _mng_arg976;
    __twr_l224:;
    _mng_arglisttail955 = _mng_arg976;
    __twr_l219:;
    __twr_v993 = 2ULL;
    __twr_v994 = _mng_state968 & __twr_v993;
    if (!(__twr_v994)) { goto __twr_l227; } else { goto __twr_l228; }
    __twr_l228:;
    goto _jkl_epilogue;
    __twr_l227:;
    goto __twr_l217;
    __twr_l218:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_arglisthead) = _mng_arglisthead959;
    *(uint64_t*)(_mng_o_length) = _mng_length960;
}
void LexParseMacro() {
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t _mng_macro998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t __twr_v1008;
    uint64_t _mng_trashtoken1009[4];
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t _mng_length1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t _mng_contentsbuffer1026[11];
    uint64_t __twr_v1027;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    __twr_v995 = (uint64_t)(&TlAllocateFromZone);
    __twr_v996 = (uint64_t)(&LexMacroZone);
    __twr_v997 = ((uint64_t (*)(uint64_t))__twr_v995)(__twr_v996);
    _mng_macro998 = __twr_v997;
    __twr_v999 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1000 = 80ULL;
    __twr_v1001 = __twr_v997 + __twr_v1000;
    ((void (*)(uint64_t))__twr_v999)(__twr_v1001);
    __twr_v1002 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1003 = 48ULL;
    __twr_v1004 = __twr_v997 + __twr_v1003;
    __twr_v1005 = 168ULL;
    __twr_v1006 = __twr_v997 + __twr_v1005;
    ((void (*)(uint64_t, uint64_t))__twr_v1002)(__twr_v1004, __twr_v1006);
    __twr_v1007 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v1008 = (uint64_t)(&_mng_trashtoken1009);
    __twr_v1010 = ((uint64_t (*)(uint64_t))__twr_v1007)(__twr_v1008);
    __twr_v1011 = 40ULL;
    if (__twr_v1010 == __twr_v1011) { goto __twr_l229; } else { goto __twr_l230; }
    __twr_l230:;
    __twr_v1012 = (uint64_t)(&LexTokenError);
    __twr_v1013 = (uint64_t)(&_mng_trashtoken1009);
    __twr_v1014 = (uint64_t)(&"Expected an open parenthesis");
    __twr_v1015 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1012)(__twr_v1013, __twr_v1014, __twr_v1015, __twr_v1015, __twr_v1015);
    __twr_l229:;
    __twr_v1016 = (uint64_t)(&LexFalseCount);
    __twr_v1017 = *(uint32_t*)(__twr_v1016);
    if (!(__twr_v1017)) { goto __twr_l231; } else { goto __twr_l232; }
    __twr_l232:;
    __twr_v1018 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1019 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1018)(__twr_v1019, (uint64_t)(&__twr_v1020), (uint64_t)(&_mng_length1021));
    __twr_v1022 = 248ULL;
    __twr_v1023 = _mng_macro998 + __twr_v1022;
    *(uint64_t*)(__twr_v1023) = __twr_v1020;
    __twr_v1024 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1025 = (uint64_t)(&_mng_contentsbuffer1026);
    ((void (*)(uint64_t))__twr_v1024)(__twr_v1025);
    __twr_v1027 = (uint64_t)(&LexCollectValue);
    __twr_v1028 = (uint64_t)(&_mng_trashtoken1009);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1027)(__twr_v1028, __twr_v1025, __twr_v1019);
    __twr_v1029 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1029)(__twr_v1025);
    goto _jkl_epilogue;
    __twr_l231:;
    __twr_v1030 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1031 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1030)(__twr_v1031, (uint64_t)(&__twr_v1032), (uint64_t)(&_mng_length1021));
    __twr_v1033 = 248ULL;
    __twr_v1034 = _mng_macro998 + __twr_v1033;
    *(uint64_t*)(__twr_v1034) = __twr_v1032;
    if (_mng_length1021 != __twr_v1031) { goto __twr_l233; } else { goto __twr_l234; }
    __twr_l234:;
    __twr_v1035 = (uint64_t)(&LexTokenError);
    __twr_v1036 = 48ULL;
    __twr_v1037 = _mng_macro998 + __twr_v1036;
    __twr_v1038 = (uint64_t)(&"Must have at least 1 argument");
    __twr_v1039 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1035)(__twr_v1037, __twr_v1038, __twr_v1039, __twr_v1039, __twr_v1039);
    __twr_l233:;
    __twr_v1040 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1041 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1042 = *(uint64_t*)(__twr_v1041);
    __twr_v1043 = 168ULL;
    __twr_v1044 = _mng_macro998 + __twr_v1043;
    __twr_v1045 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1040)(__twr_v1042, __twr_v1044);
    if (!(__twr_v1045)) { goto __twr_l235; } else { goto __twr_l236; }
    __twr_l236:;
    __twr_v1046 = (uint64_t)(&LexTokenError);
    __twr_v1047 = 48ULL;
    __twr_v1048 = _mng_macro998 + __twr_v1047;
    __twr_v1049 = (uint64_t)(&"Macro already defined");
    __twr_v1050 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1046)(__twr_v1048, __twr_v1049, __twr_v1050, __twr_v1050, __twr_v1050);
    __twr_l235:;
    __twr_v1051 = 1ULL;
    __twr_v1052 = 256ULL;
    __twr_v1053 = _mng_macro998 + __twr_v1052;
    *(uint8_t*)(__twr_v1053) = __twr_v1051;
    __twr_v1054 = 0ULL;
    __twr_v1055 = 257ULL;
    __twr_v1056 = _mng_macro998 + __twr_v1055;
    *(uint8_t*)(__twr_v1056) = __twr_v1054;
    __twr_v1057 = (uint64_t)(&LexCollectValue);
    __twr_v1058 = 48ULL;
    __twr_v1059 = _mng_macro998 + __twr_v1058;
    __twr_v1060 = 80ULL;
    __twr_v1061 = _mng_macro998 + __twr_v1060;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1057)(__twr_v1059, __twr_v1061, __twr_v1054);
    __twr_v1062 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1063 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1064 = *(uint64_t*)(__twr_v1063);
    __twr_v1065 = 168ULL;
    __twr_v1066 = _mng_macro998 + __twr_v1065;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1062)(__twr_v1064, _mng_macro998, __twr_v1066);
    _jkl_epilogue:;
}
void LexParseIf() {
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t _mng_token1069[4];
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t _mng_truthy1075;
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t __twr_v1088;
    uint64_t __twr_v1089;
    uint64_t __twr_v1090;
    uint64_t __twr_v1091;
    uint64_t __twr_v1092;
    __twr_v1067 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1068 = (uint64_t)(&_mng_token1069);
    __twr_v1070 = (uint64_t)(&LexFalseCount);
    __twr_v1071 = *(uint32_t*)(__twr_v1070);
    __twr_v1072 = 0ULL;
    __twr_v1073 = (__twr_v1071 != __twr_v1072);
    __twr_v1074 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1067)(__twr_v1068, __twr_v1073);
    _mng_truthy1075 = __twr_v1074;
    __twr_v1076 = *(uint32_t*)(__twr_v1070);
    if (!(__twr_v1076)) { goto __twr_l237; } else { goto __twr_l238; }
    __twr_l238:;
    __twr_v1077 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1078 = (uint64_t)(&LexIfStack);
    __twr_v1079 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1077)(__twr_v1078, __twr_v1079);
    __twr_v1080 = 1ULL;
    __twr_v1081 = (uint64_t)(&LexFalseCount);
    __twr_v1082 = *(uint32_t*)(__twr_v1081);
    __twr_v1083 = __twr_v1082 + __twr_v1080;
    *(uint32_t*)(__twr_v1081) = __twr_v1083;
    goto _jkl_epilogue;
    __twr_l237:;
    if (_mng_truthy1075) { goto __twr_l240; } else { goto __twr_l241; }
    __twr_l240:;
    __twr_v1084 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1085 = (uint64_t)(&LexIfStack);
    __twr_v1086 = 2ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1084)(__twr_v1085, __twr_v1086);
    goto __twr_l239;
    __twr_l241:;
    __twr_v1087 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1088 = (uint64_t)(&LexIfStack);
    __twr_v1089 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1087)(__twr_v1088, __twr_v1089);
    __twr_v1090 = (uint64_t)(&LexFalseCount);
    __twr_v1091 = *(uint32_t*)(__twr_v1090);
    __twr_v1092 = __twr_v1091 + __twr_v1089;
    *(uint32_t*)(__twr_v1090) = __twr_v1092;
    __twr_l239:;
    _jkl_epilogue:;
}
void LexParseElse() {
    uint64_t __twr_v1093;
    uint64_t __twr_v1094;
    uint64_t __twr_v1095;
    uint64_t __twr_v1096;
    uint64_t __twr_v1097;
    uint64_t __twr_v1098;
    uint64_t __twr_v1099;
    uint64_t __twr_v1100;
    uint64_t __twr_v1101;
    uint64_t __twr_v1102;
    uint64_t __twr_v1103;
    uint64_t __twr_v1104;
    uint64_t __twr_v1105;
    uint64_t __twr_v1106;
    uint64_t __twr_v1107;
    uint64_t _mng_status1108;
    uint64_t __twr_v1109;
    uint64_t __twr_v1110;
    uint64_t __twr_v1111;
    uint64_t __twr_v1112;
    uint64_t __twr_v1113;
    uint64_t __twr_v1114;
    uint64_t __twr_v1115;
    uint64_t __twr_v1116;
    uint64_t __twr_v1117;
    uint64_t __twr_v1118;
    uint64_t __twr_v1119;
    uint64_t __twr_v1120;
    uint64_t __twr_v1121;
    uint64_t __twr_v1122;
    uint64_t __twr_v1123;
    uint64_t __twr_v1124;
    uint64_t __twr_v1125;
    uint64_t __twr_v1126;
    uint64_t __twr_v1127;
    uint64_t __twr_v1128;
    uint64_t __twr_v1129;
    uint64_t __twr_v1130;
    uint64_t __twr_v1131;
    uint64_t __twr_v1132;
    uint64_t __twr_v1133;
    __twr_v1093 = (uint64_t)(&LexIfStack);
    __twr_v1094 = *(uint64_t*)(__twr_v1093);
    if (__twr_v1094) { goto __twr_l242; } else { goto __twr_l243; }
    __twr_l243:;
    __twr_v1095 = (uint64_t)(&LexStreamError);
    __twr_v1096 = (uint64_t)(&"ELSE with no matching IF");
    __twr_v1097 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1095)(__twr_v1096, __twr_v1097, __twr_v1097, __twr_v1097);
    __twr_l242:;
    __twr_v1098 = (uint64_t)(&LexIfStack);
    __twr_v1099 = 16ULL;
    __twr_v1100 = __twr_v1098 + __twr_v1099;
    __twr_v1101 = *(uint64_t*)(__twr_v1100);
    __twr_v1102 = 0ULL;
    __twr_v1103 = *(uint64_t*)(__twr_v1098);
    __twr_v1104 = 1ULL;
    __twr_v1105 = __twr_v1103 - __twr_v1104;
    __twr_v1106 = __twr_v1101 + __twr_v1105;
    __twr_v1107 = *(uint8_t*)(__twr_v1106);
    _mng_status1108 = __twr_v1107;
    if (__twr_v1107 != __twr_v1102) { goto __twr_l244; } else { goto __twr_l245; }
    __twr_l245:;
    goto _jkl_epilogue;
    __twr_l244:;
    __twr_v1109 = 2ULL;
    if (_mng_status1108 != __twr_v1109) { goto __twr_l246; } else { goto __twr_l247; }
    __twr_l247:;
    __twr_v1110 = 0ULL;
    __twr_v1111 = (uint64_t)(&LexIfStack);
    __twr_v1112 = 16ULL;
    __twr_v1113 = __twr_v1111 + __twr_v1112;
    __twr_v1114 = *(uint64_t*)(__twr_v1113);
    __twr_v1115 = *(uint64_t*)(__twr_v1111);
    __twr_v1116 = 1ULL;
    __twr_v1117 = __twr_v1115 - __twr_v1116;
    __twr_v1118 = __twr_v1114 + __twr_v1117;
    *(uint8_t*)(__twr_v1118) = __twr_v1110;
    __twr_v1119 = (uint64_t)(&LexFalseCount);
    __twr_v1120 = *(uint32_t*)(__twr_v1119);
    __twr_v1121 = __twr_v1120 + __twr_v1116;
    *(uint32_t*)(__twr_v1119) = __twr_v1121;
    goto _jkl_epilogue;
    __twr_l246:;
    __twr_v1122 = 2ULL;
    __twr_v1123 = (uint64_t)(&LexIfStack);
    __twr_v1124 = 16ULL;
    __twr_v1125 = __twr_v1123 + __twr_v1124;
    __twr_v1126 = *(uint64_t*)(__twr_v1125);
    __twr_v1127 = *(uint64_t*)(__twr_v1123);
    __twr_v1128 = 1ULL;
    __twr_v1129 = __twr_v1127 - __twr_v1128;
    __twr_v1130 = __twr_v1126 + __twr_v1129;
    *(uint8_t*)(__twr_v1130) = __twr_v1122;
    __twr_v1131 = (uint64_t)(&LexFalseCount);
    __twr_v1132 = *(uint32_t*)(__twr_v1131);
    __twr_v1133 = __twr_v1132 - __twr_v1128;
    *(uint32_t*)(__twr_v1131) = __twr_v1133;
    _jkl_epilogue:;
}
void LexParseElseif() {
    uint64_t __twr_v1134;
    uint64_t __twr_v1135;
    uint64_t __twr_v1136;
    uint64_t __twr_v1137;
    uint64_t __twr_v1138;
    uint64_t __twr_v1139;
    uint64_t __twr_v1140;
    uint64_t __twr_v1141;
    uint64_t __twr_v1142;
    uint64_t __twr_v1143;
    uint64_t __twr_v1144;
    uint64_t __twr_v1145;
    uint64_t __twr_v1146;
    uint64_t __twr_v1147;
    uint64_t __twr_v1148;
    uint64_t _mng_status1149;
    uint64_t __twr_v1150;
    uint64_t __twr_v1151;
    uint64_t _mng_token1152[4];
    uint64_t __twr_v1153;
    uint64_t __twr_v1154;
    uint64_t __twr_v1155;
    uint64_t __twr_v1156;
    uint64_t __twr_v1157;
    uint64_t __twr_v1158;
    uint64_t __twr_v1159;
    uint64_t __twr_v1160;
    uint64_t __twr_v1161;
    uint64_t __twr_v1162;
    uint64_t __twr_v1163;
    uint64_t __twr_v1164;
    uint64_t __twr_v1165;
    uint64_t __twr_v1166;
    uint64_t __twr_v1167;
    uint64_t __twr_v1168;
    uint64_t __twr_v1169;
    uint64_t __twr_v1170;
    uint64_t __twr_v1171;
    uint64_t __twr_v1172;
    uint64_t __twr_v1173;
    uint64_t __twr_v1174;
    uint64_t __twr_v1175;
    uint64_t __twr_v1176;
    uint64_t __twr_v1177;
    uint64_t __twr_v1178;
    uint64_t __twr_v1179;
    uint64_t __twr_v1180;
    uint64_t __twr_v1181;
    uint64_t __twr_v1182;
    uint64_t __twr_v1183;
    uint64_t __twr_v1184;
    uint64_t __twr_v1185;
    uint64_t __twr_v1186;
    __twr_v1134 = (uint64_t)(&LexIfStack);
    __twr_v1135 = *(uint64_t*)(__twr_v1134);
    if (__twr_v1135) { goto __twr_l248; } else { goto __twr_l249; }
    __twr_l249:;
    __twr_v1136 = (uint64_t)(&LexStreamError);
    __twr_v1137 = (uint64_t)(&"ELSEIF with no matching IF");
    __twr_v1138 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1136)(__twr_v1137, __twr_v1138, __twr_v1138, __twr_v1138);
    __twr_l248:;
    __twr_v1139 = (uint64_t)(&LexIfStack);
    __twr_v1140 = 16ULL;
    __twr_v1141 = __twr_v1139 + __twr_v1140;
    __twr_v1142 = *(uint64_t*)(__twr_v1141);
    __twr_v1143 = 0ULL;
    __twr_v1144 = *(uint64_t*)(__twr_v1139);
    __twr_v1145 = 1ULL;
    __twr_v1146 = __twr_v1144 - __twr_v1145;
    __twr_v1147 = __twr_v1142 + __twr_v1146;
    __twr_v1148 = *(uint8_t*)(__twr_v1147);
    _mng_status1149 = __twr_v1148;
    if (__twr_v1148 != __twr_v1143) { goto __twr_l250; } else { goto __twr_l251; }
    __twr_l251:;
    __twr_v1150 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1151 = (uint64_t)(&_mng_token1152);
    __twr_v1153 = 1ULL;
    __twr_v1154 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1150)(__twr_v1151, __twr_v1153);
    goto _jkl_epilogue;
    __twr_l250:;
    __twr_v1155 = 2ULL;
    if (_mng_status1149 != __twr_v1155) { goto __twr_l252; } else { goto __twr_l253; }
    __twr_l253:;
    __twr_v1156 = 0ULL;
    __twr_v1157 = (uint64_t)(&LexIfStack);
    __twr_v1158 = 16ULL;
    __twr_v1159 = __twr_v1157 + __twr_v1158;
    __twr_v1160 = *(uint64_t*)(__twr_v1159);
    __twr_v1161 = *(uint64_t*)(__twr_v1157);
    __twr_v1162 = 1ULL;
    __twr_v1163 = __twr_v1161 - __twr_v1162;
    __twr_v1164 = __twr_v1160 + __twr_v1163;
    *(uint8_t*)(__twr_v1164) = __twr_v1156;
    __twr_v1165 = (uint64_t)(&LexFalseCount);
    __twr_v1166 = *(uint32_t*)(__twr_v1165);
    __twr_v1167 = __twr_v1166 + __twr_v1162;
    *(uint32_t*)(__twr_v1165) = __twr_v1167;
    __twr_v1168 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1169 = (uint64_t)(&_mng_token1152);
    __twr_v1170 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1168)(__twr_v1169, __twr_v1162);
    goto _jkl_epilogue;
    __twr_l252:;
    __twr_v1171 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1172 = (uint64_t)(&_mng_token1152);
    __twr_v1173 = 0ULL;
    __twr_v1174 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1171)(__twr_v1172, __twr_v1173);
    if (!(__twr_v1174)) { goto __twr_l254; } else { goto __twr_l255; }
    __twr_l255:;
    __twr_v1175 = 2ULL;
    __twr_v1176 = (uint64_t)(&LexIfStack);
    __twr_v1177 = 16ULL;
    __twr_v1178 = __twr_v1176 + __twr_v1177;
    __twr_v1179 = *(uint64_t*)(__twr_v1178);
    __twr_v1180 = *(uint64_t*)(__twr_v1176);
    __twr_v1181 = 1ULL;
    __twr_v1182 = __twr_v1180 - __twr_v1181;
    __twr_v1183 = __twr_v1179 + __twr_v1182;
    *(uint8_t*)(__twr_v1183) = __twr_v1175;
    __twr_v1184 = (uint64_t)(&LexFalseCount);
    __twr_v1185 = *(uint32_t*)(__twr_v1184);
    __twr_v1186 = __twr_v1185 - __twr_v1181;
    *(uint32_t*)(__twr_v1184) = __twr_v1186;
    __twr_l254:;
    _jkl_epilogue:;
}
void LexParseEnd() {
    uint64_t __twr_v1187;
    uint64_t __twr_v1188;
    uint64_t __twr_v1189;
    uint64_t __twr_v1190;
    uint64_t __twr_v1191;
    uint64_t __twr_v1192;
    uint64_t __twr_v1193;
    uint64_t __twr_v1194;
    uint64_t _mng_status1195;
    uint64_t __twr_v1196;
    uint64_t __twr_v1197;
    uint64_t __twr_v1198;
    uint64_t __twr_v1199;
    uint64_t __twr_v1200;
    uint64_t __twr_v1201;
    __twr_v1187 = (uint64_t)(&LexIfStack);
    __twr_v1188 = *(uint64_t*)(__twr_v1187);
    if (__twr_v1188) { goto __twr_l256; } else { goto __twr_l257; }
    __twr_l257:;
    __twr_v1189 = (uint64_t)(&LexStreamError);
    __twr_v1190 = (uint64_t)(&"END with no matching IF");
    __twr_v1191 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1189)(__twr_v1190, __twr_v1191, __twr_v1191, __twr_v1191);
    __twr_l256:;
    __twr_v1192 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1193 = (uint64_t)(&LexIfStack);
    __twr_v1194 = ((uint64_t (*)(uint64_t))__twr_v1192)(__twr_v1193);
    _mng_status1195 = __twr_v1194;
    __twr_v1196 = 0ULL;
    if (__twr_v1194 == __twr_v1196) { goto __twr_l259; } else { goto __twr_l260; }
    __twr_l260:;
    __twr_v1197 = 1ULL;
    if (_mng_status1195 != __twr_v1197) { goto __twr_l258; } else { goto __twr_l259; }
    __twr_l259:;
    __twr_v1198 = 1ULL;
    __twr_v1199 = (uint64_t)(&LexFalseCount);
    __twr_v1200 = *(uint32_t*)(__twr_v1199);
    __twr_v1201 = __twr_v1200 - __twr_v1198;
    *(uint32_t*)(__twr_v1199) = __twr_v1201;
    goto _jkl_epilogue;
    __twr_l258:;
    _jkl_epilogue:;
}
void LexParseError() {
    uint64_t __twr_v1202;
    uint64_t __twr_v1203;
    uint64_t _mng_buffer1204[11];
    uint64_t __twr_v1205;
    uint64_t __twr_v1206;
    uint64_t _mng_token1207[4];
    uint64_t __twr_v1208;
    uint64_t __twr_v1209;
    uint64_t __twr_v1210;
    uint64_t __twr_v1211;
    uint64_t __twr_v1212;
    uint64_t __twr_v1213;
    uint64_t __twr_v1214;
    uint64_t __twr_v1215;
    uint64_t __twr_v1216;
    uint64_t __twr_v1217;
    uint64_t __twr_v1218;
    uint64_t __twr_v1219;
    uint64_t __twr_v1220;
    uint64_t __twr_v1221;
    __twr_v1202 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1203 = (uint64_t)(&_mng_buffer1204);
    ((void (*)(uint64_t))__twr_v1202)(__twr_v1203);
    __twr_v1205 = (uint64_t)(&LexCollectValue);
    __twr_v1206 = (uint64_t)(&_mng_token1207);
    __twr_v1208 = (uint64_t)(&LexFalseCount);
    __twr_v1209 = *(uint32_t*)(__twr_v1208);
    __twr_v1210 = 0ULL;
    __twr_v1211 = (__twr_v1209 != __twr_v1210);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1205)(__twr_v1206, __twr_v1203, __twr_v1211);
    __twr_v1212 = *(uint32_t*)(__twr_v1208);
    if (!(__twr_v1212)) { goto __twr_l261; } else { goto __twr_l262; }
    __twr_l262:;
    __twr_v1213 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1214 = (uint64_t)(&_mng_buffer1204);
    ((void (*)(uint64_t))__twr_v1213)(__twr_v1214);
    goto _jkl_epilogue;
    __twr_l261:;
    __twr_v1215 = (uint64_t)(&LexTokenError);
    __twr_v1216 = (uint64_t)(&_mng_token1207);
    __twr_v1217 = (uint64_t)(&_mng_buffer1204);
    __twr_v1218 = 16ULL;
    __twr_v1219 = __twr_v1217 + __twr_v1218;
    __twr_v1220 = *(uint64_t*)(__twr_v1219);
    __twr_v1221 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1215)(__twr_v1216, __twr_v1220, __twr_v1221, __twr_v1221, __twr_v1221);
    _jkl_epilogue:;
}
void LexParsePrint() {
    uint64_t __twr_v1222;
    uint64_t __twr_v1223;
    uint64_t _mng_buffer1224[11];
    uint64_t __twr_v1225;
    uint64_t __twr_v1226;
    uint64_t _mng_token1227[4];
    uint64_t __twr_v1228;
    uint64_t __twr_v1229;
    uint64_t __twr_v1230;
    uint64_t __twr_v1231;
    uint64_t __twr_v1232;
    uint64_t __twr_v1233;
    uint64_t __twr_v1234;
    uint64_t __twr_v1235;
    uint64_t __twr_v1236;
    uint64_t __twr_v1237;
    uint64_t __twr_v1238;
    uint64_t __twr_v1239;
    uint64_t __twr_v1240;
    uint64_t __twr_v1241;
    __twr_v1222 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1223 = (uint64_t)(&_mng_buffer1224);
    ((void (*)(uint64_t))__twr_v1222)(__twr_v1223);
    __twr_v1225 = (uint64_t)(&LexCollectValue);
    __twr_v1226 = (uint64_t)(&_mng_token1227);
    __twr_v1228 = (uint64_t)(&LexFalseCount);
    __twr_v1229 = *(uint32_t*)(__twr_v1228);
    __twr_v1230 = 0ULL;
    __twr_v1231 = (__twr_v1229 != __twr_v1230);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1225)(__twr_v1226, __twr_v1223, __twr_v1231);
    __twr_v1232 = *(uint32_t*)(__twr_v1228);
    if (!(__twr_v1232)) { goto __twr_l263; } else { goto __twr_l264; }
    __twr_l264:;
    __twr_v1233 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1234 = (uint64_t)(&_mng_buffer1224);
    ((void (*)(uint64_t))__twr_v1233)(__twr_v1234);
    goto _jkl_epilogue;
    __twr_l263:;
    __twr_v1235 = (uint64_t)(&TlPrintString);
    __twr_v1236 = (uint64_t)(&_mng_buffer1224);
    __twr_v1237 = 16ULL;
    __twr_v1238 = __twr_v1236 + __twr_v1237;
    __twr_v1239 = *(uint64_t*)(__twr_v1238);
    ((void (*)(uint64_t))__twr_v1235)(__twr_v1239);
    __twr_v1240 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v1235)(__twr_v1240);
    __twr_v1241 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1241)(__twr_v1236);
    _jkl_epilogue:;
}
void LexParseAsm() {
    uint64_t __twr_v1242;
    uint64_t __twr_v1243;
    uint64_t __twr_v1244;
    uint64_t __twr_v1245;
    uint64_t _mng_buffer1246[11];
    uint64_t __twr_v1247;
    uint64_t __twr_v1248;
    uint64_t _mng_token1249[4];
    uint64_t __twr_v1250;
    uint64_t __twr_v1251;
    uint64_t __twr_v1252;
    uint64_t __twr_v1253;
    uint64_t __twr_v1254;
    uint64_t _mng_asmblock1255;
    uint64_t __twr_v1256;
    uint64_t __twr_v1257;
    uint64_t __twr_v1258;
    uint64_t __twr_v1259;
    uint64_t __twr_v1260;
    uint64_t __twr_v1261;
    uint64_t __twr_v1262;
    uint64_t __twr_v1263;
    uint64_t __twr_v1264;
    uint64_t __twr_v1265;
    uint64_t __twr_v1266;
    uint64_t __twr_v1267;
    uint64_t __twr_v1268;
    uint64_t __twr_v1269;
    uint64_t __twr_v1270;
    uint64_t __twr_v1271;
    __twr_v1242 = (uint64_t)(&LexFalseCount);
    __twr_v1243 = *(uint32_t*)(__twr_v1242);
    if (!(__twr_v1243)) { goto __twr_l265; } else { goto __twr_l266; }
    __twr_l266:;
    __twr_v1244 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1245 = (uint64_t)(&_mng_buffer1246);
    ((void (*)(uint64_t))__twr_v1244)(__twr_v1245);
    __twr_v1247 = (uint64_t)(&LexCollectValue);
    __twr_v1248 = (uint64_t)(&_mng_token1249);
    __twr_v1250 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1247)(__twr_v1248, __twr_v1245, __twr_v1250);
    __twr_v1251 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1251)(__twr_v1245);
    goto _jkl_epilogue;
    __twr_l265:;
    __twr_v1252 = (uint64_t)(&TlBumpAlloc);
    __twr_v1253 = 128ULL;
    __twr_v1254 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1252)(__twr_v1253, (uint64_t)(&_mng_asmblock1255));
    if (!(__twr_v1254)) { goto __twr_l267; } else { goto __twr_l268; }
    __twr_l268:;
    __twr_v1256 = (uint64_t)(&TlInternalError);
    __twr_v1257 = (uint64_t)(&"Failed to allocate asm block");
    __twr_v1258 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1256)(__twr_v1257, __twr_v1258, __twr_v1258, __twr_v1258);
    __twr_l267:;
    __twr_v1259 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1260 = 40ULL;
    __twr_v1261 = _mng_asmblock1255 + __twr_v1260;
    ((void (*)(uint64_t))__twr_v1259)(__twr_v1261);
    __twr_v1262 = (uint64_t)(&LexCollectValue);
    __twr_v1263 = 8ULL;
    __twr_v1264 = _mng_asmblock1255 + __twr_v1263;
    __twr_v1265 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1262)(__twr_v1264, __twr_v1261, __twr_v1265);
    *(uint64_t*)(_mng_asmblock1255) = __twr_v1265;
    __twr_v1266 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1267 = *(uint64_t*)(__twr_v1266);
    if (__twr_v1267) { goto __twr_l271; } else { goto __twr_l270; }
    __twr_l270:;
    __twr_v1268 = (uint64_t)(&LexAsmBlockListHead);
    *(uint64_t*)(__twr_v1268) = _mng_asmblock1255;
    goto __twr_l269;
    __twr_l271:;
    __twr_v1269 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1270 = *(uint64_t*)(__twr_v1269);
    *(uint64_t*)(__twr_v1270) = _mng_asmblock1255;
    __twr_l269:;
    __twr_v1271 = (uint64_t)(&LexAsmBlockListTail);
    *(uint64_t*)(__twr_v1271) = _mng_asmblock1255;
    _jkl_epilogue:;
}
void LexParseSection() {
    uint64_t __twr_v1272;
    uint64_t __twr_v1273;
    uint64_t _mng_str1274[11];
    uint64_t __twr_v1275;
    uint64_t __twr_v1276;
    uint64_t _mng_token1277[4];
    uint64_t __twr_v1278;
    uint64_t __twr_v1279;
    uint64_t __twr_v1280;
    uint64_t __twr_v1281;
    uint64_t __twr_v1282;
    uint64_t __twr_v1283;
    uint64_t __twr_v1284;
    uint64_t __twr_v1285;
    uint64_t __twr_v1286;
    uint64_t __twr_v1287;
    uint64_t __twr_v1288;
    uint64_t __twr_v1289;
    uint64_t __twr_v1290;
    uint64_t __twr_v1291;
    uint64_t __twr_v1292;
    uint64_t __twr_v1293;
    uint64_t __twr_v1294;
    uint64_t __twr_v1295;
    uint64_t __twr_v1296;
    __twr_v1272 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1273 = (uint64_t)(&_mng_str1274);
    ((void (*)(uint64_t))__twr_v1272)(__twr_v1273);
    __twr_v1275 = (uint64_t)(&LexCollectString);
    __twr_v1276 = (uint64_t)(&_mng_token1277);
    ((void (*)(uint64_t, uint64_t))__twr_v1275)(__twr_v1276, __twr_v1273);
    __twr_v1278 = (uint64_t)(&LexFalseCount);
    __twr_v1279 = *(uint32_t*)(__twr_v1278);
    if (!(__twr_v1279)) { goto __twr_l272; } else { goto __twr_l273; }
    __twr_l273:;
    __twr_v1280 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1281 = (uint64_t)(&_mng_str1274);
    ((void (*)(uint64_t))__twr_v1280)(__twr_v1281);
    goto _jkl_epilogue;
    __twr_l272:;
    __twr_v1282 = (uint64_t)(&_mng_str1274);
    __twr_v1283 = *(uint64_t*)(__twr_v1282);
    __twr_v1284 = 63ULL;
    if (__twr_v1283 < __twr_v1284) { goto __twr_l274; } else { goto __twr_l275; }
    __twr_l275:;
    __twr_v1285 = (uint64_t)(&LexTokenError);
    __twr_v1286 = (uint64_t)(&_mng_token1277);
    __twr_v1287 = (uint64_t)(&"Section name too long");
    __twr_v1288 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1285)(__twr_v1286, __twr_v1287, __twr_v1288, __twr_v1288, __twr_v1288);
    __twr_l274:;
    __twr_v1289 = (uint64_t)(&LexLookupSection);
    __twr_v1290 = (uint64_t)(&_mng_str1274);
    __twr_v1291 = 16ULL;
    __twr_v1292 = __twr_v1290 + __twr_v1291;
    __twr_v1293 = *(uint64_t*)(__twr_v1292);
    __twr_v1294 = ((uint64_t (*)(uint64_t))__twr_v1289)(__twr_v1293);
    __twr_v1295 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1295)(__twr_v1290);
    __twr_v1296 = (uint64_t)(&LexNextSymbolSection);
    *(uint64_t*)(__twr_v1296) = __twr_v1294;
    _jkl_epilogue:;
}
void LexParseEnterSection() {
    uint64_t __twr_v1297;
    uint64_t __twr_v1298;
    uint64_t _mng_str1299[11];
    uint64_t __twr_v1300;
    uint64_t __twr_v1301;
    uint64_t _mng_token1302[4];
    uint64_t __twr_v1303;
    uint64_t __twr_v1304;
    uint64_t __twr_v1305;
    uint64_t __twr_v1306;
    uint64_t __twr_v1307;
    uint64_t __twr_v1308;
    uint64_t __twr_v1309;
    uint64_t __twr_v1310;
    uint64_t __twr_v1311;
    uint64_t __twr_v1312;
    uint64_t __twr_v1313;
    uint64_t __twr_v1314;
    uint64_t __twr_v1315;
    uint64_t __twr_v1316;
    uint64_t __twr_v1317;
    uint64_t __twr_v1318;
    uint64_t __twr_v1319;
    uint64_t __twr_v1320;
    uint64_t __twr_v1321;
    __twr_v1297 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1298 = (uint64_t)(&_mng_str1299);
    ((void (*)(uint64_t))__twr_v1297)(__twr_v1298);
    __twr_v1300 = (uint64_t)(&LexCollectString);
    __twr_v1301 = (uint64_t)(&_mng_token1302);
    ((void (*)(uint64_t, uint64_t))__twr_v1300)(__twr_v1301, __twr_v1298);
    __twr_v1303 = (uint64_t)(&LexFalseCount);
    __twr_v1304 = *(uint32_t*)(__twr_v1303);
    if (!(__twr_v1304)) { goto __twr_l276; } else { goto __twr_l277; }
    __twr_l277:;
    __twr_v1305 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1306 = (uint64_t)(&_mng_str1299);
    ((void (*)(uint64_t))__twr_v1305)(__twr_v1306);
    goto _jkl_epilogue;
    __twr_l276:;
    __twr_v1307 = (uint64_t)(&_mng_str1299);
    __twr_v1308 = *(uint64_t*)(__twr_v1307);
    __twr_v1309 = 63ULL;
    if (__twr_v1308 < __twr_v1309) { goto __twr_l278; } else { goto __twr_l279; }
    __twr_l279:;
    __twr_v1310 = (uint64_t)(&LexTokenError);
    __twr_v1311 = (uint64_t)(&_mng_token1302);
    __twr_v1312 = (uint64_t)(&"Section name too long");
    __twr_v1313 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1310)(__twr_v1311, __twr_v1312, __twr_v1313, __twr_v1313, __twr_v1313);
    __twr_l278:;
    __twr_v1314 = (uint64_t)(&LexLookupSection);
    __twr_v1315 = (uint64_t)(&_mng_str1299);
    __twr_v1316 = 16ULL;
    __twr_v1317 = __twr_v1315 + __twr_v1316;
    __twr_v1318 = *(uint64_t*)(__twr_v1317);
    __twr_v1319 = ((uint64_t (*)(uint64_t))__twr_v1314)(__twr_v1318);
    __twr_v1320 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1320)(__twr_v1315);
    __twr_v1321 = (uint64_t)(&LexPushSection);
    ((void (*)(uint64_t))__twr_v1321)(__twr_v1319);
    _jkl_epilogue:;
}
void LexParseLeaveSection() {
    uint64_t __twr_v1322;
    uint64_t __twr_v1323;
    uint64_t __twr_v1324;
    uint64_t __twr_v1325;
    uint64_t __twr_v1326;
    uint64_t __twr_v1327;
    __twr_v1322 = (uint64_t)(&LexPopSection);
    __twr_v1323 = ((uint64_t (*)())__twr_v1322)();
    if (__twr_v1323) { goto __twr_l280; } else { goto __twr_l281; }
    __twr_l281:;
    __twr_v1324 = (uint64_t)(&LexTokenError);
    __twr_v1325 = (uint64_t)(&LexDirectiveToken);
    __twr_v1326 = (uint64_t)(&"Section stack was empty");
    __twr_v1327 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1324)(__twr_v1325, __twr_v1326, __twr_v1327, __twr_v1327, __twr_v1327);
    __twr_l280:;
    _jkl_epilogue:;
}
void LexOperatorEquals(uint64_t _mng_buffer1328, uint64_t _mng_ignore1329) {
    uint64_t __twr_v1330;
    uint64_t __twr_v1331;
    uint64_t _mng_token1332[4];
    uint64_t __twr_v1333;
    uint64_t __twr_v1334;
    uint64_t __twr_v1335;
    uint64_t __twr_v1336;
    uint64_t __twr_v1337;
    uint64_t __twr_v1338;
    uint64_t __twr_v1339;
    uint64_t __twr_v1340;
    __twr_v1330 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1331 = (uint64_t)(&_mng_token1332);
    __twr_v1333 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1330)(__twr_v1331, _mng_ignore1329);
    __twr_v1334 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1330)(__twr_v1331, _mng_ignore1329);
    __twr_v1335 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1335)();
    __twr_v1336 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1337 = (__twr_v1333 == __twr_v1334);
    __twr_v1338 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1336)(_mng_buffer1328, __twr_v1337, __twr_v1338);
    __twr_v1339 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1340 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1339)(_mng_buffer1328, __twr_v1340);
    _jkl_epilogue:;
}
void LexOperatorLteq(uint64_t _mng_buffer1341, uint64_t _mng_ignore1342) {
    uint64_t __twr_v1343;
    uint64_t __twr_v1344;
    uint64_t _mng_token1345[4];
    uint64_t __twr_v1346;
    uint64_t __twr_v1347;
    uint64_t __twr_v1348;
    uint64_t __twr_v1349;
    uint64_t __twr_v1350;
    uint64_t __twr_v1351;
    uint64_t __twr_v1352;
    uint64_t __twr_v1353;
    __twr_v1343 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1344 = (uint64_t)(&_mng_token1345);
    __twr_v1346 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1343)(__twr_v1344, _mng_ignore1342);
    __twr_v1347 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1343)(__twr_v1344, _mng_ignore1342);
    __twr_v1348 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1348)();
    __twr_v1349 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1350 = (__twr_v1346 <= __twr_v1347);
    __twr_v1351 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1349)(_mng_buffer1341, __twr_v1350, __twr_v1351);
    __twr_v1352 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1353 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1352)(_mng_buffer1341, __twr_v1353);
    _jkl_epilogue:;
}
void LexOperatorGteq(uint64_t _mng_buffer1354, uint64_t _mng_ignore1355) {
    uint64_t __twr_v1356;
    uint64_t __twr_v1357;
    uint64_t _mng_token1358[4];
    uint64_t __twr_v1359;
    uint64_t __twr_v1360;
    uint64_t __twr_v1361;
    uint64_t __twr_v1362;
    uint64_t __twr_v1363;
    uint64_t __twr_v1364;
    uint64_t __twr_v1365;
    uint64_t __twr_v1366;
    __twr_v1356 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1357 = (uint64_t)(&_mng_token1358);
    __twr_v1359 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1356)(__twr_v1357, _mng_ignore1355);
    __twr_v1360 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1356)(__twr_v1357, _mng_ignore1355);
    __twr_v1361 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1361)();
    __twr_v1362 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1363 = (__twr_v1359 >= __twr_v1360);
    __twr_v1364 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1362)(_mng_buffer1354, __twr_v1363, __twr_v1364);
    __twr_v1365 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1366 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1365)(_mng_buffer1354, __twr_v1366);
    _jkl_epilogue:;
}
void LexOperatorNeq(uint64_t _mng_buffer1367, uint64_t _mng_ignore1368) {
    uint64_t __twr_v1369;
    uint64_t __twr_v1370;
    uint64_t _mng_token1371[4];
    uint64_t __twr_v1372;
    uint64_t __twr_v1373;
    uint64_t __twr_v1374;
    uint64_t __twr_v1375;
    uint64_t __twr_v1376;
    uint64_t __twr_v1377;
    uint64_t __twr_v1378;
    uint64_t __twr_v1379;
    __twr_v1369 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1370 = (uint64_t)(&_mng_token1371);
    __twr_v1372 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1369)(__twr_v1370, _mng_ignore1368);
    __twr_v1373 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1369)(__twr_v1370, _mng_ignore1368);
    __twr_v1374 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1374)();
    __twr_v1375 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1376 = (__twr_v1372 != __twr_v1373);
    __twr_v1377 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1375)(_mng_buffer1367, __twr_v1376, __twr_v1377);
    __twr_v1378 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1379 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1378)(_mng_buffer1367, __twr_v1379);
    _jkl_epilogue:;
}
void LexOperatorLt(uint64_t _mng_buffer1380, uint64_t _mng_ignore1381) {
    uint64_t __twr_v1382;
    uint64_t __twr_v1383;
    uint64_t _mng_token1384[4];
    uint64_t __twr_v1385;
    uint64_t __twr_v1386;
    uint64_t __twr_v1387;
    uint64_t __twr_v1388;
    uint64_t __twr_v1389;
    uint64_t __twr_v1390;
    uint64_t __twr_v1391;
    uint64_t __twr_v1392;
    __twr_v1382 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1383 = (uint64_t)(&_mng_token1384);
    __twr_v1385 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1382)(__twr_v1383, _mng_ignore1381);
    __twr_v1386 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1382)(__twr_v1383, _mng_ignore1381);
    __twr_v1387 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1387)();
    __twr_v1388 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1389 = (__twr_v1385 < __twr_v1386);
    __twr_v1390 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1388)(_mng_buffer1380, __twr_v1389, __twr_v1390);
    __twr_v1391 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1392 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1391)(_mng_buffer1380, __twr_v1392);
    _jkl_epilogue:;
}
void LexOperatorGt(uint64_t _mng_buffer1393, uint64_t _mng_ignore1394) {
    uint64_t __twr_v1395;
    uint64_t __twr_v1396;
    uint64_t _mng_token1397[4];
    uint64_t __twr_v1398;
    uint64_t __twr_v1399;
    uint64_t __twr_v1400;
    uint64_t __twr_v1401;
    uint64_t __twr_v1402;
    uint64_t __twr_v1403;
    uint64_t __twr_v1404;
    uint64_t __twr_v1405;
    __twr_v1395 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1396 = (uint64_t)(&_mng_token1397);
    __twr_v1398 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1395)(__twr_v1396, _mng_ignore1394);
    __twr_v1399 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1395)(__twr_v1396, _mng_ignore1394);
    __twr_v1400 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1400)();
    __twr_v1401 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1402 = (__twr_v1398 > __twr_v1399);
    __twr_v1403 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1401)(_mng_buffer1393, __twr_v1402, __twr_v1403);
    __twr_v1404 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1405 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1404)(_mng_buffer1393, __twr_v1405);
    _jkl_epilogue:;
}
void LexOperatorAdd(uint64_t _mng_buffer1406, uint64_t _mng_ignore1407) {
    uint64_t __twr_v1408;
    uint64_t __twr_v1409;
    uint64_t _mng_token1410[4];
    uint64_t __twr_v1411;
    uint64_t __twr_v1412;
    uint64_t __twr_v1413;
    uint64_t __twr_v1414;
    uint64_t __twr_v1415;
    uint64_t __twr_v1416;
    uint64_t __twr_v1417;
    uint64_t __twr_v1418;
    __twr_v1408 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1409 = (uint64_t)(&_mng_token1410);
    __twr_v1411 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1408)(__twr_v1409, _mng_ignore1407);
    __twr_v1412 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1408)(__twr_v1409, _mng_ignore1407);
    __twr_v1413 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1413)();
    __twr_v1414 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1415 = __twr_v1411 + __twr_v1412;
    __twr_v1416 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1414)(_mng_buffer1406, __twr_v1415, __twr_v1416);
    __twr_v1417 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1418 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1417)(_mng_buffer1406, __twr_v1418);
    _jkl_epilogue:;
}
void LexOperatorSub(uint64_t _mng_buffer1419, uint64_t _mng_ignore1420) {
    uint64_t __twr_v1421;
    uint64_t __twr_v1422;
    uint64_t _mng_token1423[4];
    uint64_t __twr_v1424;
    uint64_t __twr_v1425;
    uint64_t __twr_v1426;
    uint64_t __twr_v1427;
    uint64_t __twr_v1428;
    uint64_t __twr_v1429;
    uint64_t __twr_v1430;
    uint64_t __twr_v1431;
    __twr_v1421 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1422 = (uint64_t)(&_mng_token1423);
    __twr_v1424 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1421)(__twr_v1422, _mng_ignore1420);
    __twr_v1425 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1421)(__twr_v1422, _mng_ignore1420);
    __twr_v1426 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1426)();
    __twr_v1427 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1428 = __twr_v1424 - __twr_v1425;
    __twr_v1429 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1427)(_mng_buffer1419, __twr_v1428, __twr_v1429);
    __twr_v1430 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1431 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1430)(_mng_buffer1419, __twr_v1431);
    _jkl_epilogue:;
}
void LexOperatorMul(uint64_t _mng_buffer1432, uint64_t _mng_ignore1433) {
    uint64_t __twr_v1434;
    uint64_t __twr_v1435;
    uint64_t _mng_token1436[4];
    uint64_t __twr_v1437;
    uint64_t __twr_v1438;
    uint64_t __twr_v1439;
    uint64_t __twr_v1440;
    uint64_t __twr_v1441;
    uint64_t __twr_v1442;
    uint64_t __twr_v1443;
    uint64_t __twr_v1444;
    __twr_v1434 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1435 = (uint64_t)(&_mng_token1436);
    __twr_v1437 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1434)(__twr_v1435, _mng_ignore1433);
    __twr_v1438 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1434)(__twr_v1435, _mng_ignore1433);
    __twr_v1439 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1439)();
    __twr_v1440 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1441 = __twr_v1437 * __twr_v1438;
    __twr_v1442 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1440)(_mng_buffer1432, __twr_v1441, __twr_v1442);
    __twr_v1443 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1444 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1443)(_mng_buffer1432, __twr_v1444);
    _jkl_epilogue:;
}
void LexOperatorDiv(uint64_t _mng_buffer1445, uint64_t _mng_ignore1446) {
    uint64_t __twr_v1447;
    uint64_t __twr_v1448;
    uint64_t _mng_token1449[4];
    uint64_t __twr_v1450;
    uint64_t __twr_v1451;
    uint64_t __twr_v1452;
    uint64_t __twr_v1453;
    uint64_t __twr_v1454;
    uint64_t __twr_v1455;
    uint64_t __twr_v1456;
    uint64_t __twr_v1457;
    __twr_v1447 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1448 = (uint64_t)(&_mng_token1449);
    __twr_v1450 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1447)(__twr_v1448, _mng_ignore1446);
    __twr_v1451 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1447)(__twr_v1448, _mng_ignore1446);
    __twr_v1452 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1452)();
    __twr_v1453 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1454 = __twr_v1450 / __twr_v1451;
    __twr_v1455 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1453)(_mng_buffer1445, __twr_v1454, __twr_v1455);
    __twr_v1456 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1457 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1456)(_mng_buffer1445, __twr_v1457);
    _jkl_epilogue:;
}
void LexOperatorLsh(uint64_t _mng_buffer1458, uint64_t _mng_ignore1459) {
    uint64_t __twr_v1460;
    uint64_t __twr_v1461;
    uint64_t _mng_token1462[4];
    uint64_t __twr_v1463;
    uint64_t __twr_v1464;
    uint64_t __twr_v1465;
    uint64_t __twr_v1466;
    uint64_t __twr_v1467;
    uint64_t __twr_v1468;
    uint64_t __twr_v1469;
    uint64_t __twr_v1470;
    __twr_v1460 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1461 = (uint64_t)(&_mng_token1462);
    __twr_v1463 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1460)(__twr_v1461, _mng_ignore1459);
    __twr_v1464 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1460)(__twr_v1461, _mng_ignore1459);
    __twr_v1465 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1465)();
    __twr_v1466 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1467 = __twr_v1463 << __twr_v1464;
    __twr_v1468 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1466)(_mng_buffer1458, __twr_v1467, __twr_v1468);
    __twr_v1469 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1470 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1469)(_mng_buffer1458, __twr_v1470);
    _jkl_epilogue:;
}
void LexOperatorRsh(uint64_t _mng_buffer1471, uint64_t _mng_ignore1472) {
    uint64_t __twr_v1473;
    uint64_t __twr_v1474;
    uint64_t _mng_token1475[4];
    uint64_t __twr_v1476;
    uint64_t __twr_v1477;
    uint64_t __twr_v1478;
    uint64_t __twr_v1479;
    uint64_t __twr_v1480;
    uint64_t __twr_v1481;
    uint64_t __twr_v1482;
    uint64_t __twr_v1483;
    __twr_v1473 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1474 = (uint64_t)(&_mng_token1475);
    __twr_v1476 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1473)(__twr_v1474, _mng_ignore1472);
    __twr_v1477 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1473)(__twr_v1474, _mng_ignore1472);
    __twr_v1478 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1478)();
    __twr_v1479 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1480 = __twr_v1476 >> __twr_v1477;
    __twr_v1481 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1479)(_mng_buffer1471, __twr_v1480, __twr_v1481);
    __twr_v1482 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1483 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1482)(_mng_buffer1471, __twr_v1483);
    _jkl_epilogue:;
}
void LexOperatorStrcat(uint64_t _mng_buffer1484, uint64_t _mng_ignore1485) {
    uint64_t __twr_v1486;
    uint64_t __twr_v1487;
    uint64_t _mng_token1488[4];
    uint64_t __twr_v1489;
    uint64_t __twr_v1490;
    uint64_t __twr_v1491;
    __twr_v1486 = (uint64_t)(&LexCollectValue);
    __twr_v1487 = (uint64_t)(&_mng_token1488);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1486)(__twr_v1487, _mng_buffer1484, _mng_ignore1485);
    __twr_v1489 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1490 = ((uint64_t (*)(uint64_t))__twr_v1489)(_mng_buffer1484);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1486)(__twr_v1487, _mng_buffer1484, _mng_ignore1485);
    __twr_v1491 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1491)();
    _jkl_epilogue:;
}
void LexOperatorStrcmp(uint64_t _mng_buffer1492, uint64_t _mng_ignore1493) {
    uint64_t __twr_v1494;
    uint64_t __twr_v1495;
    uint64_t _mng_str11496[11];
    uint64_t __twr_v1497;
    uint64_t _mng_str21498[11];
    uint64_t __twr_v1499;
    uint64_t __twr_v1500;
    uint64_t _mng_token1501[4];
    uint64_t __twr_v1502;
    uint64_t __twr_v1503;
    uint64_t __twr_v1504;
    uint64_t __twr_v1505;
    uint64_t __twr_v1506;
    uint64_t __twr_v1507;
    uint64_t __twr_v1508;
    uint64_t __twr_v1509;
    uint64_t __twr_v1510;
    uint64_t __twr_v1511;
    uint64_t __twr_v1512;
    uint64_t __twr_v1513;
    uint64_t __twr_v1514;
    uint64_t __twr_v1515;
    __twr_v1494 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1495 = (uint64_t)(&_mng_str11496);
    ((void (*)(uint64_t))__twr_v1494)(__twr_v1495);
    __twr_v1497 = (uint64_t)(&_mng_str21498);
    ((void (*)(uint64_t))__twr_v1494)(__twr_v1497);
    __twr_v1499 = (uint64_t)(&LexCollectValue);
    __twr_v1500 = (uint64_t)(&_mng_token1501);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1499)(__twr_v1500, __twr_v1495, _mng_ignore1493);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1499)(__twr_v1500, __twr_v1497, _mng_ignore1493);
    __twr_v1502 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1502)(__twr_v1495);
    ((void (*)(uint64_t))__twr_v1502)(__twr_v1497);
    __twr_v1503 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1503)();
    __twr_v1504 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1505 = (uint64_t)(&TlCompareString);
    __twr_v1506 = 16ULL;
    __twr_v1507 = __twr_v1495 + __twr_v1506;
    __twr_v1508 = *(uint64_t*)(__twr_v1507);
    __twr_v1509 = __twr_v1497 + __twr_v1506;
    __twr_v1510 = *(uint64_t*)(__twr_v1509);
    __twr_v1511 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1505)(__twr_v1508, __twr_v1510);
    __twr_v1512 = 0ULL;
    __twr_v1513 = (__twr_v1511 == __twr_v1512);
    __twr_v1514 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1504)(_mng_buffer1492, __twr_v1513, __twr_v1514);
    __twr_v1515 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1515)(_mng_buffer1492, __twr_v1512);
    _jkl_epilogue:;
}
void LexOperatorNot(uint64_t _mng_buffer1516, uint64_t _mng_ignore1517) {
    uint64_t __twr_v1518;
    uint64_t __twr_v1519;
    uint64_t _mng_token1520[4];
    uint64_t __twr_v1521;
    uint64_t __twr_v1522;
    uint64_t __twr_v1523;
    uint64_t __twr_v1524;
    uint64_t __twr_v1525;
    uint64_t __twr_v1526;
    uint64_t __twr_v1527;
    __twr_v1518 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1519 = (uint64_t)(&_mng_token1520);
    __twr_v1521 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1518)(__twr_v1519, _mng_ignore1517);
    __twr_v1522 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1522)();
    __twr_v1523 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1524 = !__twr_v1521;
    __twr_v1525 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1523)(_mng_buffer1516, __twr_v1524, __twr_v1525);
    __twr_v1526 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1527 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1526)(_mng_buffer1516, __twr_v1527);
    _jkl_epilogue:;
}
void LexOperatorOr(uint64_t _mng_buffer1528, uint64_t _mng_ignore1529) {
    uint64_t __twr_v1530;
    uint64_t __twr_v1531;
    uint64_t _mng_token1532[4];
    uint64_t __twr_v1533;
    uint64_t __twr_v1534;
    uint64_t _mng_num21535;
    uint64_t __twr_v1536;
    uint64_t __twr_v1537;
    uint64_t __twr_v1538;
    uint64_t __twr_v1539;
    uint64_t __twr_v1540;
    uint64_t __twr_v1541;
    uint64_t __twr_v1542;
    uint64_t __twr_v1543;
    __twr_v1530 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1531 = (uint64_t)(&_mng_token1532);
    __twr_v1533 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1530)(__twr_v1531, _mng_ignore1529);
    __twr_v1534 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1530)(__twr_v1531, _mng_ignore1529);
    _mng_num21535 = __twr_v1534;
    __twr_v1536 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1536)();
    __twr_v1537 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (__twr_v1533) { goto __twr_l283; } else { goto __twr_l282; }
    __twr_l282:;
    if (_mng_num21535) { goto __twr_l283; } else { goto __twr_l284; }
    __twr_l283:;
    __twr_v1538 = 1ULL;
    __twr_v1539 = __twr_v1538;
    goto __twr_l285;
    __twr_l284:;
    __twr_v1540 = 0ULL;
    __twr_v1539 = __twr_v1540;
    __twr_l285:;
    __twr_v1541 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1537)(_mng_buffer1528, __twr_v1539, __twr_v1541);
    __twr_v1542 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1543 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1542)(_mng_buffer1528, __twr_v1543);
    _jkl_epilogue:;
}
void LexOperatorAnd(uint64_t _mng_buffer1544, uint64_t _mng_ignore1545) {
    uint64_t __twr_v1546;
    uint64_t __twr_v1547;
    uint64_t _mng_token1548[4];
    uint64_t __twr_v1549;
    uint64_t __twr_v1550;
    uint64_t _mng_num21551;
    uint64_t __twr_v1552;
    uint64_t __twr_v1553;
    uint64_t __twr_v1554;
    uint64_t __twr_v1555;
    uint64_t __twr_v1556;
    uint64_t __twr_v1557;
    uint64_t __twr_v1558;
    uint64_t __twr_v1559;
    __twr_v1546 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1547 = (uint64_t)(&_mng_token1548);
    __twr_v1549 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1546)(__twr_v1547, _mng_ignore1545);
    __twr_v1550 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1546)(__twr_v1547, _mng_ignore1545);
    _mng_num21551 = __twr_v1550;
    __twr_v1552 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1552)();
    __twr_v1553 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (!(__twr_v1549)) { goto __twr_l288; } else { goto __twr_l286; }
    __twr_l286:;
    if (_mng_num21551) { goto __twr_l287; } else { goto __twr_l288; }
    __twr_l287:;
    __twr_v1554 = 1ULL;
    __twr_v1555 = __twr_v1554;
    goto __twr_l289;
    __twr_l288:;
    __twr_v1556 = 0ULL;
    __twr_v1555 = __twr_v1556;
    __twr_l289:;
    __twr_v1557 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1553)(_mng_buffer1544, __twr_v1555, __twr_v1557);
    __twr_v1558 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1559 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1558)(_mng_buffer1544, __twr_v1559);
    _jkl_epilogue:;
}
void LexOperatorDefined(uint64_t _mng_buffer1560, uint64_t _mng_ignore1561) {
    uint64_t __twr_v1562;
    uint64_t __twr_v1563;
    uint64_t _mng_token1564[4];
    uint64_t __twr_v1565;
    uint64_t _mng_tokbuffer1566[8];
    uint64_t __twr_v1567;
    uint64_t __twr_v1568;
    uint64_t __twr_v1569;
    uint64_t __twr_v1570;
    uint64_t __twr_v1571;
    uint64_t __twr_v1572;
    uint64_t __twr_v1573;
    uint64_t __twr_v1574;
    uint64_t __twr_v1575;
    uint64_t __twr_v1576;
    __twr_v1562 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1563 = (uint64_t)(&_mng_token1564);
    __twr_v1565 = (uint64_t)(&_mng_tokbuffer1566);
    __twr_v1567 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1562)(__twr_v1563, __twr_v1565);
    __twr_v1568 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1568)();
    __twr_v1569 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1570 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1571 = *(uint64_t*)(__twr_v1570);
    __twr_v1572 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1569)(__twr_v1571, __twr_v1565);
    __twr_v1573 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1574 = (__twr_v1572 != __twr_v1567);
    __twr_v1575 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1573)(_mng_buffer1560, __twr_v1574, __twr_v1575);
    __twr_v1576 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1576)(_mng_buffer1560, __twr_v1567);
    _jkl_epilogue:;
}
void LexOperatorBitNot(uint64_t _mng_buffer1577, uint64_t _mng_ignore1578) {
    uint64_t __twr_v1579;
    uint64_t __twr_v1580;
    uint64_t _mng_token1581[4];
    uint64_t __twr_v1582;
    uint64_t __twr_v1583;
    uint64_t __twr_v1584;
    uint64_t __twr_v1585;
    uint64_t __twr_v1586;
    uint64_t __twr_v1587;
    uint64_t __twr_v1588;
    __twr_v1579 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1580 = (uint64_t)(&_mng_token1581);
    __twr_v1582 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1579)(__twr_v1580, _mng_ignore1578);
    __twr_v1583 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1583)();
    __twr_v1584 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1585 = ~__twr_v1582;
    __twr_v1586 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1584)(_mng_buffer1577, __twr_v1585, __twr_v1586);
    __twr_v1587 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1588 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1587)(_mng_buffer1577, __twr_v1588);
    _jkl_epilogue:;
}
void LexOperatorBitOr(uint64_t _mng_buffer1589, uint64_t _mng_ignore1590) {
    uint64_t __twr_v1591;
    uint64_t __twr_v1592;
    uint64_t _mng_token1593[4];
    uint64_t __twr_v1594;
    uint64_t __twr_v1595;
    uint64_t __twr_v1596;
    uint64_t __twr_v1597;
    uint64_t __twr_v1598;
    uint64_t __twr_v1599;
    uint64_t __twr_v1600;
    uint64_t __twr_v1601;
    __twr_v1591 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1592 = (uint64_t)(&_mng_token1593);
    __twr_v1594 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1591)(__twr_v1592, _mng_ignore1590);
    __twr_v1595 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1591)(__twr_v1592, _mng_ignore1590);
    __twr_v1596 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1596)();
    __twr_v1597 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1598 = __twr_v1594 | __twr_v1595;
    __twr_v1599 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1597)(_mng_buffer1589, __twr_v1598, __twr_v1599);
    __twr_v1600 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1601 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1600)(_mng_buffer1589, __twr_v1601);
    _jkl_epilogue:;
}
void LexOperatorBitXor(uint64_t _mng_buffer1602, uint64_t _mng_ignore1603) {
    uint64_t __twr_v1604;
    uint64_t __twr_v1605;
    uint64_t _mng_token1606[4];
    uint64_t __twr_v1607;
    uint64_t __twr_v1608;
    uint64_t __twr_v1609;
    uint64_t __twr_v1610;
    uint64_t __twr_v1611;
    uint64_t __twr_v1612;
    uint64_t __twr_v1613;
    uint64_t __twr_v1614;
    __twr_v1604 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1605 = (uint64_t)(&_mng_token1606);
    __twr_v1607 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1604)(__twr_v1605, _mng_ignore1603);
    __twr_v1608 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1604)(__twr_v1605, _mng_ignore1603);
    __twr_v1609 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1609)();
    __twr_v1610 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1611 = __twr_v1607 ^ __twr_v1608;
    __twr_v1612 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1610)(_mng_buffer1602, __twr_v1611, __twr_v1612);
    __twr_v1613 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1614 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1613)(_mng_buffer1602, __twr_v1614);
    _jkl_epilogue:;
}
void LexOperatorBitAnd(uint64_t _mng_buffer1615, uint64_t _mng_ignore1616) {
    uint64_t __twr_v1617;
    uint64_t __twr_v1618;
    uint64_t _mng_token1619[4];
    uint64_t __twr_v1620;
    uint64_t __twr_v1621;
    uint64_t __twr_v1622;
    uint64_t __twr_v1623;
    uint64_t __twr_v1624;
    uint64_t __twr_v1625;
    uint64_t __twr_v1626;
    uint64_t __twr_v1627;
    __twr_v1617 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1618 = (uint64_t)(&_mng_token1619);
    __twr_v1620 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1617)(__twr_v1618, _mng_ignore1616);
    __twr_v1621 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1617)(__twr_v1618, _mng_ignore1616);
    __twr_v1622 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1622)();
    __twr_v1623 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1624 = __twr_v1620 & __twr_v1621;
    __twr_v1625 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1623)(_mng_buffer1615, __twr_v1624, __twr_v1625);
    __twr_v1626 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1627 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1626)(_mng_buffer1615, __twr_v1627);
    _jkl_epilogue:;
}
void LexParseDirective() {
    uint64_t __twr_v1628;
    uint64_t __twr_v1629;
    uint64_t __twr_v1630;
    uint64_t _mng_buffer1631[8];
    uint64_t __twr_v1632;
    uint64_t __twr_v1633;
    uint64_t __twr_v1634;
    uint64_t _mng_directive1635;
    uint64_t __twr_v1636;
    uint64_t __twr_v1637;
    uint64_t __twr_v1638;
    uint64_t __twr_v1639;
    uint64_t __twr_v1640;
    uint64_t __twr_v1641;
    uint64_t __twr_v1642;
    __twr_v1628 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1629 = (uint64_t)(&LexDirectiveToken);
    __twr_v1630 = (uint64_t)(&_mng_buffer1631);
    ((void (*)(uint64_t, uint64_t))__twr_v1628)(__twr_v1629, __twr_v1630);
    __twr_v1632 = (uint64_t)(&TlLookupHashTable);
    __twr_v1633 = (uint64_t)(&LexDirectiveHashTable);
    __twr_v1634 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1632)(__twr_v1633, __twr_v1630);
    _mng_directive1635 = __twr_v1634;
    if (__twr_v1634) { goto __twr_l290; } else { goto __twr_l291; }
    __twr_l291:;
    __twr_v1636 = (uint64_t)(&LexTokenError);
    __twr_v1637 = (uint64_t)(&LexDirectiveToken);
    __twr_v1638 = (uint64_t)(&"Unknown directive");
    __twr_v1639 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1636)(__twr_v1637, __twr_v1638, __twr_v1639, __twr_v1639, __twr_v1639);
    __twr_l290:;
    __twr_v1640 = 48ULL;
    __twr_v1641 = _mng_directive1635 + __twr_v1640;
    __twr_v1642 = *(uint64_t*)(__twr_v1641);
    ((void (*)())__twr_v1642)();
    _jkl_epilogue:;
}
void LexInitializePreprocessor() {
    uint64_t __twr_v1643;
    uint64_t __twr_v1644;
    uint64_t __twr_v1645;
    uint64_t __twr_v1646;
    uint64_t __twr_v1647;
    uint64_t __twr_v1648;
    uint64_t __twr_v1649;
    uint64_t __twr_v1650;
    uint64_t __twr_v1651;
    uint64_t __twr_v1652;
    uint64_t __twr_v1653;
    uint64_t __twr_v1654;
    uint64_t __twr_v1655;
    uint64_t __twr_v1656;
    uint64_t __twr_v1657;
    uint64_t __twr_v1658;
    uint64_t __twr_v1659;
    uint64_t __twr_v1660;
    uint64_t __twr_v1661;
    uint64_t __twr_v1662;
    uint64_t __twr_v1663;
    uint64_t __twr_v1664;
    uint64_t __twr_v1665;
    uint64_t __twr_v1666;
    uint64_t __twr_v1667;
    uint64_t __twr_v1668;
    uint64_t __twr_v1669;
    uint64_t __twr_v1670;
    uint64_t __twr_v1671;
    uint64_t __twr_v1672;
    uint64_t __twr_v1673;
    uint64_t __twr_v1674;
    uint64_t __twr_v1675;
    uint64_t __twr_v1676;
    uint64_t __twr_v1677;
    uint64_t __twr_v1678;
    uint64_t __twr_v1679;
    uint64_t __twr_v1680;
    uint64_t __twr_v1681;
    uint64_t __twr_v1682;
    uint64_t __twr_v1683;
    uint64_t __twr_v1684;
    uint64_t __twr_v1685;
    uint64_t __twr_v1686;
    uint64_t __twr_v1687;
    uint64_t __twr_v1688;
    uint64_t __twr_v1689;
    uint64_t __twr_v1690;
    uint64_t __twr_v1691;
    uint64_t __twr_v1692;
    uint64_t __twr_v1693;
    uint64_t __twr_v1694;
    uint64_t __twr_v1695;
    uint64_t __twr_v1696;
    uint64_t __twr_v1697;
    uint64_t __twr_v1698;
    uint64_t __twr_v1699;
    uint64_t __twr_v1700;
    uint64_t __twr_v1701;
    uint64_t __twr_v1702;
    uint64_t __twr_v1703;
    uint64_t __twr_v1704;
    uint64_t __twr_v1705;
    uint64_t __twr_v1706;
    uint64_t __twr_v1707;
    uint64_t __twr_v1708;
    uint64_t __twr_v1709;
    uint64_t __twr_v1710;
    uint64_t __twr_v1711;
    uint64_t __twr_v1712;
    uint64_t __twr_v1713;
    uint64_t __twr_v1714;
    uint64_t __twr_v1715;
    uint64_t __twr_v1716;
    uint64_t __twr_v1717;
    uint64_t __twr_v1718;
    uint64_t __twr_v1719;
    uint64_t __twr_v1720;
    uint64_t __twr_v1721;
    uint64_t __twr_v1722;
    uint64_t __twr_v1723;
    uint64_t __twr_v1724;
    uint64_t __twr_v1725;
    uint64_t __twr_v1726;
    __twr_v1643 = (uint64_t)(&TlInitializeHashTable);
    __twr_v1644 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t))__twr_v1643)(__twr_v1644);
    __twr_v1645 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t))__twr_v1643)(__twr_v1645);
    __twr_v1646 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1647 = (uint64_t)(&LexIfStack);
    ((void (*)(uint64_t))__twr_v1646)(__twr_v1647);
    __twr_v1648 = (uint64_t)(&LexCreateMacroTable);
    __twr_v1649 = 0ULL;
    __twr_v1650 = ((uint64_t (*)(uint64_t))__twr_v1648)(__twr_v1649);
    __twr_v1651 = (uint64_t)(&LexRootMacroScope);
    *(uint64_t*)(__twr_v1651) = __twr_v1650;
    __twr_v1652 = *(uint64_t*)(__twr_v1651);
    __twr_v1653 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v1653) = __twr_v1652;
    __twr_v1654 = (uint64_t)(&TlInitializeZone);
    __twr_v1655 = (uint64_t)(&LexMacroZone);
    __twr_v1656 = 258ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1654)(__twr_v1655, __twr_v1656);
    __twr_v1657 = (uint64_t)(&LexInsertDirective);
    __twr_v1658 = (uint64_t)(&"INCLUDE");
    __twr_v1659 = (uint64_t)(&LexParseInclude);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1658, __twr_v1659);
    __twr_v1660 = (uint64_t)(&"DEFINE");
    __twr_v1661 = (uint64_t)(&LexParseDefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1660, __twr_v1661);
    __twr_v1662 = (uint64_t)(&"MACRO");
    __twr_v1663 = (uint64_t)(&LexParseMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1662, __twr_v1663);
    __twr_v1664 = (uint64_t)(&"IF");
    __twr_v1665 = (uint64_t)(&LexParseIf);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1664, __twr_v1665);
    __twr_v1666 = (uint64_t)(&"ELSE");
    __twr_v1667 = (uint64_t)(&LexParseElse);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1666, __twr_v1667);
    __twr_v1668 = (uint64_t)(&"ELSEIF");
    __twr_v1669 = (uint64_t)(&LexParseElseif);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1668, __twr_v1669);
    __twr_v1670 = (uint64_t)(&"END");
    __twr_v1671 = (uint64_t)(&LexParseEnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1670, __twr_v1671);
    __twr_v1672 = (uint64_t)(&"UNDEFINE");
    __twr_v1673 = (uint64_t)(&LexParseUndefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1672, __twr_v1673);
    __twr_v1674 = (uint64_t)(&"ERROR");
    __twr_v1675 = (uint64_t)(&LexParseError);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1674, __twr_v1675);
    __twr_v1676 = (uint64_t)(&"PRINT");
    __twr_v1677 = (uint64_t)(&LexParsePrint);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1676, __twr_v1677);
    __twr_v1678 = (uint64_t)(&"ASM");
    __twr_v1679 = (uint64_t)(&LexParseAsm);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1678, __twr_v1679);
    __twr_v1680 = (uint64_t)(&"SECTION");
    __twr_v1681 = (uint64_t)(&LexParseSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1680, __twr_v1681);
    __twr_v1682 = (uint64_t)(&"ENTERSECTION");
    __twr_v1683 = (uint64_t)(&LexParseEnterSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1682, __twr_v1683);
    __twr_v1684 = (uint64_t)(&"LEAVESECTION");
    __twr_v1685 = (uint64_t)(&LexParseLeaveSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1657)(__twr_v1684, __twr_v1685);
    __twr_v1686 = (uint64_t)(&LexInsertOperator);
    __twr_v1687 = (uint64_t)(&"==");
    __twr_v1688 = (uint64_t)(&LexOperatorEquals);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1687, __twr_v1688);
    __twr_v1689 = (uint64_t)(&"<=");
    __twr_v1690 = (uint64_t)(&LexOperatorLteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1689, __twr_v1690);
    __twr_v1691 = (uint64_t)(&">=");
    __twr_v1692 = (uint64_t)(&LexOperatorGteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1691, __twr_v1692);
    __twr_v1693 = (uint64_t)(&"!=");
    __twr_v1694 = (uint64_t)(&LexOperatorNeq);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1693, __twr_v1694);
    __twr_v1695 = (uint64_t)(&"+");
    __twr_v1696 = (uint64_t)(&LexOperatorAdd);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1695, __twr_v1696);
    __twr_v1697 = (uint64_t)(&"-");
    __twr_v1698 = (uint64_t)(&LexOperatorSub);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1697, __twr_v1698);
    __twr_v1699 = (uint64_t)(&"*");
    __twr_v1700 = (uint64_t)(&LexOperatorMul);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1699, __twr_v1700);
    __twr_v1701 = (uint64_t)(&"/");
    __twr_v1702 = (uint64_t)(&LexOperatorDiv);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1701, __twr_v1702);
    __twr_v1703 = (uint64_t)(&"<<");
    __twr_v1704 = (uint64_t)(&LexOperatorLsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1703, __twr_v1704);
    __twr_v1705 = (uint64_t)(&">>");
    __twr_v1706 = (uint64_t)(&LexOperatorRsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1705, __twr_v1706);
    __twr_v1707 = (uint64_t)(&"STRCAT");
    __twr_v1708 = (uint64_t)(&LexOperatorStrcat);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1707, __twr_v1708);
    __twr_v1709 = (uint64_t)(&"STRCMP");
    __twr_v1710 = (uint64_t)(&LexOperatorStrcmp);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1709, __twr_v1710);
    __twr_v1711 = (uint64_t)(&"NOT");
    __twr_v1712 = (uint64_t)(&LexOperatorNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1711, __twr_v1712);
    __twr_v1713 = (uint64_t)(&"OR");
    __twr_v1714 = (uint64_t)(&LexOperatorOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1713, __twr_v1714);
    __twr_v1715 = (uint64_t)(&"AND");
    __twr_v1716 = (uint64_t)(&LexOperatorAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1715, __twr_v1716);
    __twr_v1717 = (uint64_t)(&"DEFINED");
    __twr_v1718 = (uint64_t)(&LexOperatorDefined);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1717, __twr_v1718);
    __twr_v1719 = (uint64_t)(&"~");
    __twr_v1720 = (uint64_t)(&LexOperatorBitNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1719, __twr_v1720);
    __twr_v1721 = (uint64_t)(&"|");
    __twr_v1722 = (uint64_t)(&LexOperatorBitOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1721, __twr_v1722);
    __twr_v1723 = (uint64_t)(&"$");
    __twr_v1724 = (uint64_t)(&LexOperatorBitXor);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1723, __twr_v1724);
    __twr_v1725 = (uint64_t)(&"&");
    __twr_v1726 = (uint64_t)(&LexOperatorBitAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1686)(__twr_v1725, __twr_v1726);
    _jkl_epilogue:;
}

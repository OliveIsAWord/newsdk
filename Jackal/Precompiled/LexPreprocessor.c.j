#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_ptr20);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_ptr22);
extern void TlFree(uint64_t _mng_ptr23);
extern uint64_t TlCompareString(uint64_t _mng_str124, uint64_t _mng_str225);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str126, uint64_t _mng_str227, uint64_t _mng_count28);
extern void TlCopyString(uint64_t _mng_dest29, uint64_t _mng_src30, uint64_t _mng_bufsize31);
extern uint64_t TlOpenSource(uint64_t _mng_filename32, uint64_t _mng_handle33);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_handle35);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_created54);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable55, uint64_t _mng_key56);
extern void TlRemoveHashTable(uint64_t _mng_entry57);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable58, uint64_t _mng_enumfunc59);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable60, uint64_t _mng_key61, uint64_t _mng_hash62);
extern uint64_t TlHashString(uint64_t _mng_str63);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable64, uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope67, uint64_t _mng_deletefunc68);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable69);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_name71);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable72, uint64_t _mng_entry73, uint64_t _mng_name74);
extern void TlRemoveSymbolTable(uint64_t _mng_entry75);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array77);
extern void TlInsertDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_byte79);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array80, uint64_t _mng_srcbuf81, uint64_t _mng_length82);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array83, uint64_t _mng_number84, uint64_t _mng_base85);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array86);
extern uint64_t TlMatchPath(uint64_t _mng_path87, uint64_t _mng_pathset88, uint64_t _mng_resultingpath89, uint64_t _mng_handle90);
extern void TlCopyParentPath(uint64_t _mng_srcpath91, uint64_t _mng_destpath92);
extern void TlInitializeZone(uint64_t _mng_zone93, uint64_t _mng_blocksize94);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone95);
extern void TlFreeToZone(uint64_t _mng_zone96, uint64_t _mng_block97);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant98);
extern void TlPunchValue(uint64_t _mng_ptr99, uint64_t _mng_value100, uint64_t _mng_bytes101);
extern void JklCompileProgram(uint64_t _mng_argc102, uint64_t _mng_argv103);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg104);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename105, uint64_t _mng_created106);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock107, uint64_t _mng_filepath108);
extern uint64_t LexLookupSection(uint64_t _mng_name109);
extern void LexPushSection(uint64_t _mng_section110);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[212];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope111);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg112);
extern void LexExpandMacro(uint64_t _mng_macro113, uint64_t _mng_token114);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream115, uint64_t _mng_macro116);
extern void LexUninitializeStream(uint64_t _mng_stream117);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream118);
extern void LexPushStream(uint64_t _mng_stream119);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream120, uint64_t _mng_fileblock121, uint64_t _mng_handle122);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock123, uint64_t _mng_handle124);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope125);
extern uint64_t LexResetScope(uint64_t _mng_scope126);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope127);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest128, uint64_t _mng_src129);
extern void LexGetToken(uint64_t _mng_token130);
extern void LexPutbackToken(uint64_t _mng_token131);
extern uint64_t LexMatchToken(uint64_t _mng_token132, uint64_t _mng_type133, uint64_t _mng_subtype134);
extern void LexStreamError(uint64_t _mng_str135, uint64_t _mng_err1136, uint64_t _mng_err2137, uint64_t _mng_err3138);
extern void LexTokenError(uint64_t _mng_token139, uint64_t _mng_str140, uint64_t _mng_err1141, uint64_t _mng_err2142, uint64_t _mng_err3143);
extern uint64_t LexCrunchNumber(uint64_t _mng_token144, uint64_t _mng_buffer145);
uint64_t LexRootMacroScope = 0ULL;
uint64_t LexCurrentMacroScope = 0ULL;
uint32_t LexMacroDepth = 0ULL;
uint64_t LexAsmBlockListHead = 0ULL;
uint64_t LexAsmBlockListTail = 0ULL;
uint64_t LexDirectiveHashTable[196];
uint64_t LexOperatorHashTable[196];
uint64_t LexIfStack[11];
uint64_t LexMacroZone[2];
uint64_t LexDirectiveToken[4];
uint64_t LexDirectiveBumpArray[112];
uint64_t LexDirectiveBumpIndex = 0ULL;
void LexInsertDirective(uint64_t _mng_name146, uint64_t _mng_parsefunc147) {
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    __twr_v148 = (uint64_t)(&LexDirectiveBumpArray);
    __twr_v149 = (uint64_t)(&LexDirectiveBumpIndex);
    __twr_v150 = *(uint64_t*)(__twr_v149);
    __twr_v151 = 56ULL;
    __twr_v152 = __twr_v150 * __twr_v151;
    __twr_v153 = __twr_v148 + __twr_v152;
    __twr_v154 = 1ULL;
    __twr_v155 = __twr_v150 + __twr_v154;
    *(uint64_t*)(__twr_v149) = __twr_v155;
    __twr_v156 = 48ULL;
    __twr_v157 = __twr_v153 + __twr_v156;
    *(uint64_t*)(__twr_v157) = _mng_parsefunc147;
    __twr_v158 = (uint64_t)(&TlInsertHashTable);
    __twr_v159 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v158)(__twr_v159, __twr_v153, _mng_name146);
}
uint64_t LexOperatorBumpArray[224];
uint64_t LexOperatorBumpIndex = 0ULL;
void LexInsertOperator(uint64_t _mng_name160, uint64_t _mng_parsefunc161) {
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    __twr_v162 = (uint64_t)(&LexOperatorBumpArray);
    __twr_v163 = (uint64_t)(&LexOperatorBumpIndex);
    __twr_v164 = *(uint64_t*)(__twr_v163);
    __twr_v165 = 56ULL;
    __twr_v166 = __twr_v164 * __twr_v165;
    __twr_v167 = __twr_v162 + __twr_v166;
    __twr_v168 = 1ULL;
    __twr_v169 = __twr_v164 + __twr_v168;
    *(uint64_t*)(__twr_v163) = __twr_v169;
    __twr_v170 = 48ULL;
    __twr_v171 = __twr_v167 + __twr_v170;
    *(uint64_t*)(__twr_v171) = _mng_parsefunc161;
    __twr_v172 = (uint64_t)(&TlInsertHashTable);
    __twr_v173 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v172)(__twr_v173, __twr_v167, _mng_name160);
}
void LexMacroDelete(uint64_t _mng_entry174) {
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    __twr_v175 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v176 = 80ULL;
    __twr_v177 = _mng_entry174 + __twr_v176;
    ((void (*)(uint64_t))__twr_v175)(__twr_v177);
    __twr_v178 = (uint64_t)(&TlFreeToZone);
    __twr_v179 = (uint64_t)(&LexMacroZone);
    ((void (*)(uint64_t, uint64_t))__twr_v178)(__twr_v179, _mng_entry174);
}
uint64_t LexCreateMacroTable(uint64_t _mng_outerscope180) {
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    __twr_v181 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v182 = (uint64_t)(&LexMacroDelete);
    __twr_v183 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v181)(_mng_outerscope180, __twr_v182);
    return __twr_v183;
}
uint64_t LexNextNonWhitespaceCharacter(uint64_t _mng_token184) {
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t _mng_stream187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint8_t _mng_byte204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    __twr_v185 = (uint64_t)(&LexCurrentStream);
    __twr_v186 = *(uint64_t*)(__twr_v185);
    _mng_stream187 = __twr_v186;
    if (!(__twr_v186)) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v188 = 8ULL;
    __twr_v189 = _mng_stream187 + __twr_v188;
    __twr_v190 = *(uint64_t*)(__twr_v189);
    __twr_v191 = _mng_token184 + __twr_v188;
    *(uint64_t*)(__twr_v191) = __twr_v190;
    __twr_v192 = 44ULL;
    __twr_v193 = _mng_stream187 + __twr_v192;
    __twr_v194 = *(uint32_t*)(__twr_v193);
    __twr_v195 = 16ULL;
    __twr_v196 = _mng_token184 + __twr_v195;
    *(uint32_t*)(__twr_v196) = __twr_v194;
    __twr_v197 = 48ULL;
    __twr_v198 = _mng_stream187 + __twr_v197;
    __twr_v199 = *(uint32_t*)(__twr_v198);
    __twr_v200 = 20ULL;
    __twr_v201 = _mng_token184 + __twr_v200;
    *(uint32_t*)(__twr_v201) = __twr_v199;
    __twr_l1:;
    __twr_v202 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v203 = ((uint64_t (*)())__twr_v202)();
    _mng_byte204 = __twr_v203;
    __twr_v205 = (uint64_t)(&LexCharTreatment);
    __twr_v206 = __twr_v205 + __twr_v203;
    __twr_v207 = *(uint8_t*)(__twr_v206);
    __twr_v208 = 3ULL;
    if (__twr_v207 != __twr_v208) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v209 = (uint64_t)(&LexCurrentStream);
    __twr_v210 = *(uint64_t*)(__twr_v209);
    _mng_stream187 = __twr_v210;
    if (!(__twr_v210)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v211 = 8ULL;
    __twr_v212 = _mng_stream187 + __twr_v211;
    __twr_v213 = *(uint64_t*)(__twr_v212);
    __twr_v214 = _mng_token184 + __twr_v211;
    *(uint64_t*)(__twr_v214) = __twr_v213;
    __twr_v215 = 44ULL;
    __twr_v216 = _mng_stream187 + __twr_v215;
    __twr_v217 = *(uint32_t*)(__twr_v216);
    __twr_v218 = 16ULL;
    __twr_v219 = _mng_token184 + __twr_v218;
    *(uint32_t*)(__twr_v219) = __twr_v217;
    __twr_v220 = 48ULL;
    __twr_v221 = _mng_stream187 + __twr_v220;
    __twr_v222 = *(uint32_t*)(__twr_v221);
    __twr_v223 = 20ULL;
    __twr_v224 = _mng_token184 + __twr_v223;
    *(uint32_t*)(__twr_v224) = __twr_v222;
    __twr_l6:;
    __twr_v225 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v226 = ((uint64_t (*)())__twr_v225)();
    _mng_byte204 = __twr_v226;
    __twr_l5:;
    __twr_v227 = (uint64_t)(&LexCharTreatment);
    __twr_v228 = __twr_v227 + _mng_byte204;
    __twr_v229 = *(uint8_t*)(__twr_v228);
    __twr_v230 = 3ULL;
    if (__twr_v229 == __twr_v230) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v231 = 0ULL;
    if (_mng_byte204 != __twr_v231) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v232 = (uint64_t)(&LexStreamError);
    __twr_v233 = (uint64_t)(&"Unexpected EOF while parsing directive");
    __twr_v234 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v232)(__twr_v233, __twr_v234, __twr_v234, __twr_v234);
    __twr_l8:;
    return _mng_byte204;
}
void LexCollectDirectiveToken(uint64_t _mng_token235, uint64_t _mng_buffer236) {
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint8_t _mng_byte239;
    uint64_t __twr_v240;
    uint64_t _mng_len241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    __twr_v237 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v238 = ((uint64_t (*)(uint64_t))__twr_v237)(_mng_token235);
    _mng_byte239 = __twr_v238;
    __twr_v240 = 0ULL;
    _mng_len241 = __twr_v240;
    __twr_v242 = (uint64_t)(&LexCharTreatment);
    __twr_v243 = __twr_v242 + __twr_v238;
    __twr_v244 = *(uint8_t*)(__twr_v243);
    __twr_v245 = 3ULL;
    if (__twr_v244 == __twr_v245) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v246 = (uint64_t)(&LexCharTreatment);
    __twr_v247 = __twr_v246 + _mng_byte239;
    __twr_v248 = *(uint8_t*)(__twr_v247);
    __twr_v249 = 0ULL;
    if (__twr_v248 == __twr_v249) { goto __twr_l13; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v250 = (uint64_t)(&LexCharTreatment);
    __twr_v251 = 1ULL;
    __twr_v252 = __twr_v250 + _mng_byte239;
    __twr_v253 = *(uint8_t*)(__twr_v252);
    if (__twr_v253 == __twr_v251) { goto __twr_l13; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v254 = (uint64_t)(&LexCharTreatment);
    __twr_v255 = __twr_v254 + _mng_byte239;
    __twr_v256 = *(uint8_t*)(__twr_v255);
    __twr_v257 = 2ULL;
    if (__twr_v256 == __twr_v257) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v258 = (uint64_t)(&LexTokenError);
    __twr_v259 = (uint64_t)(&"Illegal character in token");
    __twr_v260 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v258)(_mng_token235, __twr_v259, __twr_v260, __twr_v260, __twr_v260);
    __twr_l13:;
    __twr_v261 = 63ULL;
    if (_mng_len241 != __twr_v261) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v262 = (uint64_t)(&LexTokenError);
    __twr_v263 = (uint64_t)(&"Token length too great");
    __twr_v264 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v262)(_mng_token235, __twr_v263, __twr_v264, __twr_v264, __twr_v264);
    __twr_l17:;
    *(uint8_t*)(_mng_buffer236) = _mng_byte239;
    __twr_v265 = 1ULL;
    __twr_v266 = _mng_buffer236 + __twr_v265;
    _mng_buffer236 = __twr_v266;
    __twr_v267 = _mng_len241 + __twr_v265;
    _mng_len241 = __twr_v267;
    __twr_v268 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v269 = ((uint64_t (*)())__twr_v268)();
    _mng_byte239 = __twr_v269;
    __twr_l12:;
    __twr_v270 = (uint64_t)(&LexCharTreatment);
    __twr_v271 = __twr_v270 + _mng_byte239;
    __twr_v272 = *(uint8_t*)(__twr_v271);
    __twr_v273 = 3ULL;
    if (__twr_v272 != __twr_v273) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v274 = 0ULL;
    *(uint8_t*)(_mng_buffer236) = __twr_v274;
}
void LexGetPreprocessorString(uint64_t _mng_token275, uint64_t _mng_buffer276) {
    uint64_t __twr_v277;
    uint64_t _mng_backslash278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint8_t _mng_byte281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    __twr_v277 = 0ULL;
    _mng_backslash278 = __twr_v277;
    __twr_l19:;
    __twr_v279 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v280 = ((uint64_t (*)())__twr_v279)();
    _mng_byte281 = __twr_v280;
    __twr_v282 = 0ULL;
    if (__twr_v280 != __twr_v282) { goto __twr_l21; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v283 = (uint64_t)(&LexTokenError);
    __twr_v284 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v285 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v283)(_mng_token275, __twr_v284, __twr_v285, __twr_v285, __twr_v285);
    __twr_l21:;
    __twr_v286 = 34ULL;
    if (_mng_byte281 != __twr_v286) { goto __twr_l23; } else { goto __twr_l25; }
    __twr_l25:;
    if (_mng_backslash278) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    return;
    __twr_l23:;
    __twr_v287 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v287)(_mng_buffer276, _mng_byte281);
    if (_mng_backslash278) { goto __twr_l27; } else { goto __twr_l26; }
    __twr_l27:;
    __twr_v288 = 0ULL;
    _mng_backslash278 = __twr_v288;
    goto __twr_l19;
    __twr_l26:;
    __twr_v289 = 92ULL;
    __twr_v290 = (_mng_byte281 == __twr_v289);
    _mng_backslash278 = __twr_v290;
    goto __twr_l19;
    __twr_l20:;
}
void LexCollectString(uint64_t _mng_token291, uint64_t _mng_buffer292) {
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    __twr_v293 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v294 = ((uint64_t (*)(uint64_t))__twr_v293)(_mng_token291);
    __twr_v295 = 34ULL;
    if (__twr_v294 == __twr_v295) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v296 = (uint64_t)(&LexTokenError);
    __twr_v297 = (uint64_t)(&"Expected a string");
    __twr_v298 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v296)(_mng_token291, __twr_v297, __twr_v298, __twr_v298, __twr_v298);
    __twr_l28:;
    __twr_v299 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v299)(_mng_token291, _mng_buffer292);
    __twr_v300 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v301 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v300)(_mng_buffer292, __twr_v301);
}
void LexGetComplexString(uint64_t _mng_token302, uint64_t _mng_buffer303) {
    uint64_t __twr_v304;
    uint64_t _mng_bracketdepth305;
    uint64_t __twr_v306;
    uint64_t _mng_comment307;
    uint64_t _mng_backslash308;
    uint64_t _mng_instring309;
    uint64_t _mng_inliteral310;
    uint64_t _mng_sawforwardslash311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint8_t _mng_byte314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    __twr_v304 = 1ULL;
    _mng_bracketdepth305 = __twr_v304;
    __twr_v306 = 0ULL;
    _mng_comment307 = __twr_v306;
    _mng_backslash308 = __twr_v306;
    _mng_instring309 = __twr_v306;
    _mng_inliteral310 = __twr_v306;
    _mng_sawforwardslash311 = __twr_v306;
    __twr_l30:;
    __twr_v312 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v313 = ((uint64_t (*)())__twr_v312)();
    _mng_byte314 = __twr_v313;
    __twr_v315 = 0ULL;
    if (__twr_v313 != __twr_v315) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v316 = (uint64_t)(&LexTokenError);
    __twr_v317 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v318 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v316)(_mng_token302, __twr_v317, __twr_v318, __twr_v318, __twr_v318);
    __twr_l32:;
    if (_mng_comment307) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l35:;
    __twr_v319 = 10ULL;
    if (_mng_byte314 != __twr_v319) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v320 = 0ULL;
    _mng_comment307 = __twr_v320;
    goto __twr_l37;
    __twr_l39:;
    __twr_v321 = 0ULL;
    _mng_byte314 = __twr_v321;
    goto __twr_l30;
    __twr_l37:;
    goto __twr_l34;
    __twr_l36:;
    __twr_v322 = 47ULL;
    if (_mng_byte314 == __twr_v322) { goto __twr_l34; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v323 = 0ULL;
    _mng_sawforwardslash311 = __twr_v323;
    __twr_l34:;
    if (_mng_backslash308) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l42:;
    __twr_v324 = 0ULL;
    _mng_backslash308 = __twr_v324;
    goto __twr_l41;
    __twr_l43:;
    __twr_v325 = 92ULL;
    if (_mng_byte314 != __twr_v325) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v326 = 1ULL;
    _mng_backslash308 = __twr_v326;
    goto __twr_l41;
    __twr_l45:;
    if (_mng_instring309) { goto __twr_l46; } else { goto __twr_l47; }
    __twr_l46:;
    __twr_v327 = 34ULL;
    __twr_v328 = (_mng_byte314 == __twr_v327);
    __twr_v329 = !__twr_v328;
    _mng_instring309 = __twr_v329;
    goto __twr_l41;
    __twr_l47:;
    if (_mng_inliteral310) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l48:;
    __twr_v330 = 39ULL;
    __twr_v331 = (_mng_byte314 == __twr_v330);
    __twr_v332 = !__twr_v331;
    _mng_inliteral310 = __twr_v332;
    goto __twr_l41;
    __twr_l49:;
    __twr_v333 = 47ULL;
    if (_mng_byte314 != __twr_v333) { goto __twr_l51; } else { goto __twr_l50; }
    __twr_l50:;
    if (_mng_sawforwardslash311) { goto __twr_l53; } else { goto __twr_l54; }
    __twr_l53:;
    __twr_v334 = 0ULL;
    _mng_sawforwardslash311 = __twr_v334;
    __twr_v335 = 1ULL;
    _mng_comment307 = __twr_v335;
    goto __twr_l52;
    __twr_l54:;
    __twr_v336 = 1ULL;
    _mng_sawforwardslash311 = __twr_v336;
    __twr_l52:;
    goto __twr_l41;
    __twr_l51:;
    __twr_v337 = 34ULL;
    if (_mng_byte314 != __twr_v337) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v338 = 1ULL;
    _mng_instring309 = __twr_v338;
    goto __twr_l41;
    __twr_l56:;
    __twr_v339 = 39ULL;
    if (_mng_byte314 != __twr_v339) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v340 = 1ULL;
    _mng_inliteral310 = __twr_v340;
    goto __twr_l41;
    __twr_l58:;
    __twr_v341 = 91ULL;
    if (_mng_byte314 != __twr_v341) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v342 = 1ULL;
    __twr_v343 = _mng_bracketdepth305 + __twr_v342;
    _mng_bracketdepth305 = __twr_v343;
    goto __twr_l41;
    __twr_l60:;
    __twr_v344 = 93ULL;
    if (_mng_byte314 != __twr_v344) { goto __twr_l41; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v345 = 1ULL;
    __twr_v346 = _mng_bracketdepth305 - __twr_v345;
    _mng_bracketdepth305 = __twr_v346;
    __twr_v347 = 0ULL;
    if (__twr_v346 != __twr_v347) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    goto __twr_l31;
    __twr_l62:;
    __twr_l41:;
    __twr_v348 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v348)(_mng_buffer303, _mng_byte314);
    __twr_v349 = 0ULL;
    _mng_byte314 = __twr_v349;
    goto __twr_l30;
    __twr_l31:;
}
uint64_t LexCollectMacroArgumentContents(uint64_t _mng_token350, uint64_t _mng_buffer351) {
    uint64_t __twr_v352;
    uint64_t _mng_bracketdepth353;
    uint64_t __twr_v354;
    uint64_t _mng_comment355;
    uint64_t _mng_backslash356;
    uint64_t _mng_instring357;
    uint64_t _mng_inliteral358;
    uint64_t _mng_sawforwardslash359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint8_t _mng_byte362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    __twr_v352 = 1ULL;
    _mng_bracketdepth353 = __twr_v352;
    __twr_v354 = 0ULL;
    _mng_comment355 = __twr_v354;
    _mng_backslash356 = __twr_v354;
    _mng_instring357 = __twr_v354;
    _mng_inliteral358 = __twr_v354;
    _mng_sawforwardslash359 = __twr_v354;
    __twr_l64:;
    __twr_v360 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v361 = ((uint64_t (*)(uint64_t))__twr_v360)(_mng_token350);
    _mng_byte362 = __twr_v361;
    __twr_v363 = 41ULL;
    if (__twr_v361 != __twr_v363) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v364 = 2ULL;
    return __twr_v364;
    __twr_l66:;
    __twr_v365 = 44ULL;
    if (_mng_byte362 != __twr_v365) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    goto __twr_l64;
    __twr_l68:;
    goto __twr_l65;
    goto __twr_l64;
    __twr_l65:;
    __twr_l70:;
    if (_mng_comment355) { goto __twr_l75; } else { goto __twr_l74; }
    __twr_l75:;
    __twr_v366 = 10ULL;
    if (_mng_byte362 != __twr_v366) { goto __twr_l74; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v367 = 0ULL;
    _mng_comment355 = __twr_v367;
    goto __twr_l72;
    __twr_l74:;
    __twr_v368 = 47ULL;
    if (_mng_byte362 == __twr_v368) { goto __twr_l72; } else { goto __twr_l76; }
    __twr_l76:;
    __twr_v369 = 0ULL;
    _mng_sawforwardslash359 = __twr_v369;
    __twr_l72:;
    if (_mng_comment355) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l78:;
    goto __twr_l77;
    __twr_l79:;
    if (_mng_backslash356) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l80:;
    __twr_v370 = 0ULL;
    _mng_backslash356 = __twr_v370;
    goto __twr_l77;
    __twr_l81:;
    __twr_v371 = 92ULL;
    if (_mng_byte362 != __twr_v371) { goto __twr_l83; } else { goto __twr_l82; }
    __twr_l82:;
    __twr_v372 = 1ULL;
    _mng_backslash356 = __twr_v372;
    goto __twr_l77;
    __twr_l83:;
    if (_mng_instring357) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l84:;
    __twr_v373 = 34ULL;
    __twr_v374 = (_mng_byte362 == __twr_v373);
    __twr_v375 = !__twr_v374;
    _mng_instring357 = __twr_v375;
    goto __twr_l77;
    __twr_l85:;
    if (_mng_inliteral358) { goto __twr_l86; } else { goto __twr_l87; }
    __twr_l86:;
    __twr_v376 = 39ULL;
    __twr_v377 = (_mng_byte362 == __twr_v376);
    __twr_v378 = !__twr_v377;
    _mng_inliteral358 = __twr_v378;
    goto __twr_l77;
    __twr_l87:;
    __twr_v379 = 47ULL;
    if (_mng_byte362 != __twr_v379) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    if (_mng_sawforwardslash359) { goto __twr_l91; } else { goto __twr_l92; }
    __twr_l91:;
    __twr_v380 = 1ULL;
    __twr_v381 = 0ULL;
    __twr_v382 = *(uint64_t*)(_mng_buffer351);
    __twr_v383 = __twr_v382 - __twr_v380;
    *(uint64_t*)(_mng_buffer351) = __twr_v383;
    _mng_sawforwardslash359 = __twr_v381;
    _mng_comment355 = __twr_v380;
    goto __twr_l90;
    __twr_l92:;
    __twr_v384 = 1ULL;
    _mng_sawforwardslash359 = __twr_v384;
    __twr_l90:;
    goto __twr_l77;
    __twr_l89:;
    __twr_v385 = 34ULL;
    if (_mng_byte362 != __twr_v385) { goto __twr_l94; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v386 = 1ULL;
    _mng_instring357 = __twr_v386;
    goto __twr_l77;
    __twr_l94:;
    __twr_v387 = 39ULL;
    if (_mng_byte362 != __twr_v387) { goto __twr_l96; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v388 = 1ULL;
    _mng_inliteral358 = __twr_v388;
    goto __twr_l77;
    __twr_l96:;
    __twr_v389 = 40ULL;
    if (_mng_byte362 != __twr_v389) { goto __twr_l98; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v390 = 1ULL;
    __twr_v391 = _mng_bracketdepth353 + __twr_v390;
    _mng_bracketdepth353 = __twr_v391;
    goto __twr_l77;
    __twr_l98:;
    __twr_v392 = 41ULL;
    if (_mng_byte362 != __twr_v392) { goto __twr_l100; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v393 = 1ULL;
    __twr_v394 = _mng_bracketdepth353 - __twr_v393;
    _mng_bracketdepth353 = __twr_v394;
    __twr_v395 = 0ULL;
    if (__twr_v394 != __twr_v395) { goto __twr_l101; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v396 = 3ULL;
    return __twr_v396;
    __twr_l101:;
    goto __twr_l77;
    __twr_l100:;
    __twr_v397 = 1ULL;
    if (_mng_bracketdepth353 != __twr_v397) { goto __twr_l104; } else { goto __twr_l105; }
    __twr_l105:;
    __twr_v398 = 44ULL;
    if (_mng_byte362 != __twr_v398) { goto __twr_l104; } else { goto __twr_l103; }
    __twr_l103:;
    goto __twr_l71;
    goto __twr_l77;
    __twr_l104:;
    __twr_v399 = 10ULL;
    if (_mng_byte362 != __twr_v399) { goto __twr_l77; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v400 = 32ULL;
    _mng_byte362 = __twr_v400;
    __twr_l77:;
    if (_mng_comment355) { goto __twr_l107; } else { goto __twr_l109; }
    __twr_l109:;
    if (_mng_backslash356) { goto __twr_l107; } else { goto __twr_l108; }
    __twr_l108:;
    __twr_v401 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v401)(_mng_buffer351, _mng_byte362);
    __twr_l107:;
    __twr_v402 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v403 = ((uint64_t (*)())__twr_v402)();
    _mng_byte362 = __twr_v403;
    __twr_v404 = 0ULL;
    if (__twr_v403 != __twr_v404) { goto __twr_l110; } else { goto __twr_l111; }
    __twr_l111:;
    __twr_v405 = (uint64_t)(&LexTokenError);
    __twr_v406 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v407 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v405)(_mng_token350, __twr_v406, __twr_v407, __twr_v407, __twr_v407);
    __twr_l110:;
    goto __twr_l70;
    __twr_l71:;
    __twr_v408 = 1ULL;
    return __twr_v408;
}
void LexCollectValue(uint64_t _mng_token409, uint64_t _mng_buffer410, uint64_t _mng_ignore411) {
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint8_t _mng_byte414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t _mng_optoken426[4];
    uint64_t __twr_v427;
    uint64_t _mng_opbuffer428[8];
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t _mng_operator432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t _mng_simpletokbuf442[11];
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t _mng_macro495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    __twr_v412 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v413 = ((uint64_t (*)(uint64_t))__twr_v412)(_mng_token409);
    _mng_byte414 = __twr_v413;
    __twr_v415 = 34ULL;
    if (__twr_v413 != __twr_v415) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    __twr_v416 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v416)(_mng_token409, _mng_buffer410);
    __twr_v417 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v418 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v417)(_mng_buffer410, __twr_v418);
    return;
    goto __twr_l112;
    __twr_l114:;
    __twr_v419 = 91ULL;
    if (_mng_byte414 != __twr_v419) { goto __twr_l116; } else { goto __twr_l115; }
    __twr_l115:;
    __twr_v420 = (uint64_t)(&LexGetComplexString);
    ((void (*)(uint64_t, uint64_t))__twr_v420)(_mng_token409, _mng_buffer410);
    __twr_v421 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v422 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v421)(_mng_buffer410, __twr_v422);
    return;
    goto __twr_l112;
    __twr_l116:;
    __twr_v423 = 40ULL;
    if (_mng_byte414 != __twr_v423) { goto __twr_l112; } else { goto __twr_l117; }
    __twr_l117:;
    __twr_v424 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v425 = (uint64_t)(&_mng_optoken426);
    __twr_v427 = (uint64_t)(&_mng_opbuffer428);
    ((void (*)(uint64_t, uint64_t))__twr_v424)(__twr_v425, __twr_v427);
    __twr_v429 = (uint64_t)(&TlLookupHashTable);
    __twr_v430 = (uint64_t)(&LexOperatorHashTable);
    __twr_v431 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v429)(__twr_v430, __twr_v427);
    _mng_operator432 = __twr_v431;
    if (__twr_v431) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v433 = (uint64_t)(&LexTokenError);
    __twr_v434 = (uint64_t)(&_mng_optoken426);
    __twr_v435 = (uint64_t)(&"Unknown operator");
    __twr_v436 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v433)(__twr_v434, __twr_v435, __twr_v436, __twr_v436, __twr_v436);
    __twr_l118:;
    __twr_v437 = 48ULL;
    __twr_v438 = _mng_operator432 + __twr_v437;
    __twr_v439 = *(uint64_t*)(__twr_v438);
    ((void (*)(uint64_t, uint64_t))__twr_v439)(_mng_buffer410, _mng_ignore411);
    return;
    __twr_l112:;
    __twr_v440 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v441 = (uint64_t)(&_mng_simpletokbuf442);
    ((void (*)(uint64_t))__twr_v440)(__twr_v441);
    __twr_v443 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v443)(__twr_v441, _mng_byte414);
    __twr_v444 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v445 = ((uint64_t (*)())__twr_v444)();
    _mng_byte414 = __twr_v445;
    __twr_v446 = (uint64_t)(&LexCharTreatment);
    __twr_v447 = __twr_v446 + __twr_v445;
    __twr_v448 = *(uint8_t*)(__twr_v447);
    __twr_v449 = 3ULL;
    if (__twr_v448 == __twr_v449) { goto __twr_l121; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v450 = 0ULL;
    if (_mng_byte414 != __twr_v450) { goto __twr_l123; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v451 = (uint64_t)(&LexTokenError);
    __twr_v452 = (uint64_t)(&"Unexpected EOF");
    __twr_v453 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v451)(_mng_token409, __twr_v452, __twr_v453, __twr_v453, __twr_v453);
    __twr_l123:;
    __twr_v454 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v455 = (uint64_t)(&_mng_simpletokbuf442);
    ((void (*)(uint64_t, uint64_t))__twr_v454)(__twr_v455, _mng_byte414);
    __twr_v456 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v457 = ((uint64_t (*)())__twr_v456)();
    _mng_byte414 = __twr_v457;
    __twr_l122:;
    __twr_v458 = (uint64_t)(&LexCharTreatment);
    __twr_v459 = __twr_v458 + _mng_byte414;
    __twr_v460 = *(uint8_t*)(__twr_v459);
    __twr_v461 = 3ULL;
    if (__twr_v460 != __twr_v461) { goto __twr_l120; } else { goto __twr_l121; }
    __twr_l121:;
    __twr_v462 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v463 = (uint64_t)(&_mng_simpletokbuf442);
    __twr_v464 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v462)(__twr_v463, __twr_v464);
    __twr_v465 = 16ULL;
    __twr_v466 = __twr_v463 + __twr_v465;
    __twr_v467 = *(uint64_t*)(__twr_v466);
    __twr_v468 = *(uint8_t*)(__twr_v467);
    __twr_v469 = 48ULL;
    if (__twr_v468 < __twr_v469) { goto __twr_l125; } else { goto __twr_l127; }
    __twr_l127:;
    __twr_v470 = (uint64_t)(&_mng_simpletokbuf442);
    __twr_v471 = 16ULL;
    __twr_v472 = __twr_v470 + __twr_v471;
    __twr_v473 = *(uint64_t*)(__twr_v472);
    __twr_v474 = *(uint8_t*)(__twr_v473);
    __twr_v475 = 57ULL;
    if (__twr_v474 > __twr_v475) { goto __twr_l125; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v476 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v477 = (uint64_t)(&_mng_simpletokbuf442);
    __twr_v478 = 16ULL;
    __twr_v479 = __twr_v477 + __twr_v478;
    __twr_v480 = *(uint64_t*)(__twr_v479);
    __twr_v481 = *(uint64_t*)(__twr_v477);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v476)(_mng_buffer410, __twr_v480, __twr_v481);
    __twr_v482 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v482)(__twr_v477);
    return;
    __twr_l125:;
    if (_mng_ignore411) { goto __twr_l129; } else { goto __twr_l128; }
    __twr_l129:;
    __twr_v483 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v484 = (uint64_t)(&_mng_simpletokbuf442);
    ((void (*)(uint64_t))__twr_v483)(__twr_v484);
    __twr_v485 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v486 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v485)(_mng_buffer410, __twr_v486);
    return;
    __twr_l128:;
    __twr_v487 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v488 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v489 = *(uint64_t*)(__twr_v488);
    __twr_v490 = (uint64_t)(&_mng_simpletokbuf442);
    __twr_v491 = 16ULL;
    __twr_v492 = __twr_v490 + __twr_v491;
    __twr_v493 = *(uint64_t*)(__twr_v492);
    __twr_v494 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v487)(__twr_v489, __twr_v493);
    _mng_macro495 = __twr_v494;
    __twr_v496 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v496)(__twr_v490);
    if (__twr_v494) { goto __twr_l130; } else { goto __twr_l131; }
    __twr_l131:;
    __twr_v497 = (uint64_t)(&LexTokenError);
    __twr_v498 = (uint64_t)(&"Not a defined macro name");
    __twr_v499 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v497)(_mng_token409, __twr_v498, __twr_v499, __twr_v499, __twr_v499);
    __twr_l130:;
    __twr_v500 = 256ULL;
    __twr_v501 = _mng_macro495 + __twr_v500;
    __twr_v502 = *(uint8_t*)(__twr_v501);
    if (!(__twr_v502)) { goto __twr_l132; } else { goto __twr_l133; }
    __twr_l133:;
    __twr_v503 = (uint64_t)(&LexTokenError);
    __twr_v504 = (uint64_t)(&"Function macros not permitted here");
    __twr_v505 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v503)(_mng_token409, __twr_v504, __twr_v505, __twr_v505, __twr_v505);
    __twr_l132:;
    __twr_v506 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v507 = 80ULL;
    __twr_v508 = _mng_macro495 + __twr_v507;
    __twr_v509 = 96ULL;
    __twr_v510 = _mng_macro495 + __twr_v509;
    __twr_v511 = *(uint64_t*)(__twr_v510);
    __twr_v512 = *(uint64_t*)(__twr_v508);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v506)(_mng_buffer410, __twr_v511, __twr_v512);
}
uint64_t LexCollectValueNumeric(uint64_t _mng_token513, uint64_t _mng_ignore514) {
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t _mng_buffer517[11];
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    __twr_v515 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v516 = (uint64_t)(&_mng_buffer517);
    ((void (*)(uint64_t))__twr_v515)(__twr_v516);
    __twr_v518 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v518)(_mng_token513, __twr_v516, _mng_ignore514);
    if (_mng_ignore514) { goto __twr_l135; } else { goto __twr_l134; }
    __twr_l135:;
    __twr_v519 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v520 = (uint64_t)(&_mng_buffer517);
    ((void (*)(uint64_t))__twr_v519)(__twr_v520);
    __twr_v521 = 0ULL;
    return __twr_v521;
    __twr_l134:;
    __twr_v522 = (uint64_t)(&_mng_buffer517);
    __twr_v523 = 16ULL;
    __twr_v524 = __twr_v522 + __twr_v523;
    __twr_v525 = *(uint64_t*)(__twr_v524);
    __twr_v526 = *(uint8_t*)(__twr_v525);
    __twr_v527 = 48ULL;
    if (__twr_v526 < __twr_v527) { goto __twr_l137; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v528 = (uint64_t)(&_mng_buffer517);
    __twr_v529 = 16ULL;
    __twr_v530 = __twr_v528 + __twr_v529;
    __twr_v531 = *(uint64_t*)(__twr_v530);
    __twr_v532 = *(uint8_t*)(__twr_v531);
    __twr_v533 = 57ULL;
    if (__twr_v532 <= __twr_v533) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v534 = (uint64_t)(&LexTokenError);
    __twr_v535 = (uint64_t)(&"Expected numeric value");
    __twr_v536 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v534)(_mng_token513, __twr_v535, __twr_v536, __twr_v536, __twr_v536);
    __twr_l136:;
    __twr_v537 = (uint64_t)(&LexCrunchNumber);
    __twr_v538 = (uint64_t)(&_mng_buffer517);
    __twr_v539 = 16ULL;
    __twr_v540 = __twr_v538 + __twr_v539;
    __twr_v541 = *(uint64_t*)(__twr_v540);
    __twr_v542 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v537)(_mng_token513, __twr_v541);
    __twr_v543 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v543)(__twr_v538);
    return __twr_v542;
}
void LexConsumeCloseParenthesis() {
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t _mng_token546[4];
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    __twr_v544 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v545 = (uint64_t)(&_mng_token546);
    __twr_v547 = ((uint64_t (*)(uint64_t))__twr_v544)(__twr_v545);
    __twr_v548 = 41ULL;
    if (__twr_v547 == __twr_v548) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v549 = (uint64_t)(&LexTokenError);
    __twr_v550 = (uint64_t)(&_mng_token546);
    __twr_v551 = (uint64_t)(&"Expected close parenthesis");
    __twr_v552 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v549)(__twr_v550, __twr_v551, __twr_v552, __twr_v552, __twr_v552);
    __twr_l139:;
}
void LexDefineMacroFromArgumentString(uint64_t _mng_arg553) {
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t _mng_macro557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t _mng_equalsptr563;
    uint64_t __twr_v564;
    uint64_t _mng_j565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    __twr_v554 = (uint64_t)(&TlAllocateFromZone);
    __twr_v555 = (uint64_t)(&LexMacroZone);
    __twr_v556 = ((uint64_t (*)(uint64_t))__twr_v554)(__twr_v555);
    _mng_macro557 = __twr_v556;
    __twr_v558 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v559 = 80ULL;
    __twr_v560 = __twr_v556 + __twr_v559;
    ((void (*)(uint64_t))__twr_v558)(__twr_v560);
    __twr_v561 = (uint64_t)(&FeIsMacroArgument);
    __twr_v562 = ((uint64_t (*)(uint64_t))__twr_v561)(_mng_arg553);
    _mng_equalsptr563 = __twr_v562;
    __twr_v564 = 0ULL;
    _mng_j565 = __twr_v564;
    if (_mng_arg553 >= __twr_v562) { goto __twr_l142; } else { goto __twr_l141; }
    __twr_l141:;
    __twr_v566 = *(uint8_t*)(_mng_arg553);
    __twr_v567 = 168ULL;
    __twr_v568 = _mng_macro557 + __twr_v567;
    __twr_v569 = 1ULL;
    __twr_v570 = __twr_v568 + _mng_j565;
    *(uint8_t*)(__twr_v570) = __twr_v566;
    __twr_v571 = _mng_j565 + __twr_v569;
    _mng_j565 = __twr_v571;
    __twr_v572 = _mng_arg553 + __twr_v569;
    _mng_arg553 = __twr_v572;
    __twr_l143:;
    if (_mng_arg553 < _mng_equalsptr563) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v573 = 0ULL;
    __twr_v574 = 168ULL;
    __twr_v575 = _mng_macro557 + __twr_v574;
    __twr_v576 = 1ULL;
    __twr_v577 = __twr_v575 + _mng_j565;
    *(uint8_t*)(__twr_v577) = __twr_v573;
    _mng_j565 = __twr_v573;
    __twr_v578 = _mng_equalsptr563 + __twr_v576;
    _mng_equalsptr563 = __twr_v578;
    __twr_v579 = *(uint8_t*)(__twr_v578);
    if (!(__twr_v579)) { goto __twr_l145; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v580 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v581 = 80ULL;
    __twr_v582 = _mng_macro557 + __twr_v581;
    __twr_v583 = *(uint8_t*)(_mng_equalsptr563);
    ((void (*)(uint64_t, uint64_t))__twr_v580)(__twr_v582, __twr_v583);
    __twr_v584 = 1ULL;
    __twr_v585 = _mng_equalsptr563 + __twr_v584;
    _mng_equalsptr563 = __twr_v585;
    __twr_l146:;
    __twr_v586 = *(uint8_t*)(_mng_equalsptr563);
    if (__twr_v586) { goto __twr_l144; } else { goto __twr_l145; }
    __twr_l145:;
    __twr_v587 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v588 = 80ULL;
    __twr_v589 = _mng_macro557 + __twr_v588;
    __twr_v590 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v587)(__twr_v589, __twr_v590);
    __twr_v591 = 256ULL;
    __twr_v592 = _mng_macro557 + __twr_v591;
    *(uint8_t*)(__twr_v592) = __twr_v590;
    __twr_v593 = 257ULL;
    __twr_v594 = _mng_macro557 + __twr_v593;
    *(uint8_t*)(__twr_v594) = __twr_v590;
    __twr_v595 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v596 = (uint64_t)(&LexRootMacroScope);
    __twr_v597 = *(uint64_t*)(__twr_v596);
    __twr_v598 = 168ULL;
    __twr_v599 = _mng_macro557 + __twr_v598;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v595)(__twr_v597, _mng_macro557, __twr_v599);
}
extern void PrsEnterMacro();
void LexExpandMacro(uint64_t _mng_macro600, uint64_t _mng_token601) {
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t _mng_oldscope613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t _mng_oldmacroscope616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t _mng_stream642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t _mng_trashtoken673[4];
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t _mng_arg683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t _mng_argmacro687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint8_t _mng_foundclose707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    __twr_v602 = 1ULL;
    __twr_v603 = (uint64_t)(&LexMacroDepth);
    __twr_v604 = *(uint32_t*)(__twr_v603);
    __twr_v605 = __twr_v604 + __twr_v602;
    *(uint32_t*)(__twr_v603) = __twr_v605;
    __twr_v606 = *(uint32_t*)(__twr_v603);
    __twr_v607 = 64ULL;
    if (__twr_v606 < __twr_v607) { goto __twr_l147; } else { goto __twr_l148; }
    __twr_l148:;
    __twr_v608 = (uint64_t)(&LexTokenError);
    __twr_v609 = (uint64_t)(&"Too many macros deep!");
    __twr_v610 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v608)(_mng_token601, __twr_v609, __twr_v610, __twr_v610, __twr_v610);
    __twr_l147:;
    __twr_v611 = (uint64_t)(&LexCurrentScope);
    __twr_v612 = *(uint64_t*)(__twr_v611);
    _mng_oldscope613 = __twr_v612;
    __twr_v614 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v615 = *(uint64_t*)(__twr_v614);
    _mng_oldmacroscope616 = __twr_v615;
    __twr_v617 = 257ULL;
    __twr_v618 = _mng_macro600 + __twr_v617;
    __twr_v619 = *(uint8_t*)(__twr_v618);
    if (!(__twr_v619)) { goto __twr_l151; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v620 = 232ULL;
    __twr_v621 = _mng_macro600 + __twr_v620;
    __twr_v622 = *(uint64_t*)(__twr_v621);
    __twr_v623 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v623) = __twr_v622;
    __twr_v624 = 240ULL;
    __twr_v625 = _mng_macro600 + __twr_v624;
    __twr_v626 = *(uint64_t*)(__twr_v625);
    __twr_v627 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v627) = __twr_v626;
    goto __twr_l149;
    __twr_l151:;
    __twr_v628 = (uint64_t)(&LexRootScope);
    __twr_v629 = *(uint64_t*)(__twr_v628);
    if (_mng_oldscope613 == __twr_v629) { goto __twr_l152; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v630 = (uint64_t)(&LexCreateSymbolTable);
    __twr_v631 = (uint64_t)(&LexRootScope);
    __twr_v632 = *(uint64_t*)(__twr_v631);
    __twr_v633 = ((uint64_t (*)(uint64_t))__twr_v630)(__twr_v632);
    __twr_v634 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v634) = __twr_v633;
    __twr_l152:;
    __twr_v635 = (uint64_t)(&LexCreateMacroTable);
    __twr_v636 = (uint64_t)(&LexRootMacroScope);
    __twr_v637 = *(uint64_t*)(__twr_v636);
    __twr_v638 = ((uint64_t (*)(uint64_t))__twr_v635)(__twr_v637);
    __twr_v639 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v639) = __twr_v638;
    __twr_l149:;
    __twr_v640 = (uint64_t)(&LexAllocateStream);
    __twr_v641 = ((uint64_t (*)())__twr_v640)();
    _mng_stream642 = __twr_v641;
    __twr_v643 = (uint64_t)(&LexInitializeStream);
    ((void (*)(uint64_t, uint64_t))__twr_v643)(__twr_v641, _mng_macro600);
    __twr_v644 = (uint64_t)(&LexCurrentStream);
    __twr_v645 = *(uint64_t*)(__twr_v644);
    __twr_v646 = 8ULL;
    __twr_v647 = __twr_v645 + __twr_v646;
    __twr_v648 = *(uint64_t*)(__twr_v647);
    __twr_v649 = __twr_v641 + __twr_v646;
    *(uint64_t*)(__twr_v649) = __twr_v648;
    __twr_v650 = 1000000ULL;
    __twr_v651 = 44ULL;
    __twr_v652 = __twr_v641 + __twr_v651;
    *(uint32_t*)(__twr_v652) = __twr_v650;
    __twr_v653 = 80ULL;
    __twr_v654 = _mng_macro600 + __twr_v653;
    __twr_v655 = 96ULL;
    __twr_v656 = _mng_macro600 + __twr_v655;
    __twr_v657 = *(uint64_t*)(__twr_v656);
    __twr_v658 = 24ULL;
    __twr_v659 = __twr_v641 + __twr_v658;
    *(uint64_t*)(__twr_v659) = __twr_v657;
    __twr_v660 = *(uint64_t*)(__twr_v654);
    __twr_v661 = 1ULL;
    __twr_v662 = __twr_v660 - __twr_v661;
    __twr_v663 = 36ULL;
    __twr_v664 = __twr_v641 + __twr_v663;
    *(uint32_t*)(__twr_v664) = __twr_v662;
    __twr_v665 = 72ULL;
    __twr_v666 = __twr_v641 + __twr_v665;
    *(uint64_t*)(__twr_v666) = _mng_oldscope613;
    __twr_v667 = __twr_v641 + __twr_v653;
    *(uint64_t*)(__twr_v667) = _mng_oldmacroscope616;
    __twr_v668 = 256ULL;
    __twr_v669 = _mng_macro600 + __twr_v668;
    __twr_v670 = *(uint8_t*)(__twr_v669);
    if (!(__twr_v670)) { goto __twr_l154; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v671 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v672 = (uint64_t)(&_mng_trashtoken673);
    __twr_v674 = ((uint64_t (*)(uint64_t))__twr_v671)(__twr_v672);
    __twr_v675 = 40ULL;
    if (__twr_v674 == __twr_v675) { goto __twr_l156; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v676 = (uint64_t)(&LexTokenError);
    __twr_v677 = (uint64_t)(&_mng_trashtoken673);
    __twr_v678 = (uint64_t)(&"Expected open parenthesis after function macro name");
    __twr_v679 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v676)(__twr_v677, __twr_v678, __twr_v679, __twr_v679, __twr_v679);
    __twr_l156:;
    __twr_v680 = 248ULL;
    __twr_v681 = _mng_macro600 + __twr_v680;
    __twr_v682 = *(uint64_t*)(__twr_v681);
    _mng_arg683 = __twr_v682;
    if (!(__twr_v682)) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v684 = (uint64_t)(&TlAllocateFromZone);
    __twr_v685 = (uint64_t)(&LexMacroZone);
    __twr_v686 = ((uint64_t (*)(uint64_t))__twr_v684)(__twr_v685);
    _mng_argmacro687 = __twr_v686;
    __twr_v688 = 232ULL;
    __twr_v689 = __twr_v686 + __twr_v688;
    *(uint64_t*)(__twr_v689) = _mng_oldscope613;
    __twr_v690 = 240ULL;
    __twr_v691 = __twr_v686 + __twr_v690;
    *(uint64_t*)(__twr_v691) = _mng_oldmacroscope616;
    __twr_v692 = (uint64_t)(&TlCopyString);
    __twr_v693 = 168ULL;
    __twr_v694 = __twr_v686 + __twr_v693;
    __twr_v695 = 0ULL;
    __twr_v696 = 1ULL;
    __twr_v697 = 56ULL;
    __twr_v698 = _mng_arg683 + __twr_v697;
    __twr_v699 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v692)(__twr_v694, __twr_v698, __twr_v699);
    __twr_v700 = 256ULL;
    __twr_v701 = __twr_v686 + __twr_v700;
    *(uint8_t*)(__twr_v701) = __twr_v695;
    __twr_v702 = 257ULL;
    __twr_v703 = __twr_v686 + __twr_v702;
    *(uint8_t*)(__twr_v703) = __twr_v696;
    __twr_v704 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v705 = 80ULL;
    __twr_v706 = __twr_v686 + __twr_v705;
    ((void (*)(uint64_t))__twr_v704)(__twr_v706);
    _mng_foundclose707 = __twr_v695;
    goto __twr_l161;
    __twr_l161:;
    __twr_v708 = 2ULL;
    __twr_v709 = _mng_foundclose707 & __twr_v708;
    if (!(__twr_v709)) { goto __twr_l164; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v710 = (uint64_t)(&LexTokenError);
    __twr_v711 = (uint64_t)(&_mng_trashtoken673);
    __twr_v712 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v713 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v710)(__twr_v711, __twr_v712, __twr_v713, __twr_v713, __twr_v713);
    __twr_l164:;
    __twr_v714 = (uint64_t)(&LexCollectMacroArgumentContents);
    __twr_v715 = 48ULL;
    __twr_v716 = _mng_argmacro687 + __twr_v715;
    __twr_v717 = 80ULL;
    __twr_v718 = _mng_argmacro687 + __twr_v717;
    __twr_v719 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v714)(__twr_v716, __twr_v718);
    _mng_foundclose707 = __twr_v719;
    __twr_l163:;
    __twr_v720 = 1ULL;
    __twr_v721 = _mng_foundclose707 & __twr_v720;
    if (!(__twr_v721)) { goto __twr_l161; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v722 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v723 = 80ULL;
    __twr_v724 = _mng_argmacro687 + __twr_v723;
    __twr_v725 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v722)(__twr_v724, __twr_v725);
    __twr_v726 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v727 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v728 = *(uint64_t*)(__twr_v727);
    __twr_v729 = 168ULL;
    __twr_v730 = _mng_argmacro687 + __twr_v729;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v726)(__twr_v728, _mng_argmacro687, __twr_v730);
    __twr_v731 = 48ULL;
    __twr_v732 = _mng_arg683 + __twr_v731;
    __twr_v733 = *(uint64_t*)(__twr_v732);
    _mng_arg683 = __twr_v733;
    __twr_v734 = 2ULL;
    __twr_v735 = _mng_foundclose707 & __twr_v734;
    if (!(__twr_v735)) { goto __twr_l168; } else { goto __twr_l167; }
    __twr_l167:;
    if (_mng_arg683) { goto __twr_l170; } else { goto __twr_l169; }
    __twr_l170:;
    __twr_v736 = (uint64_t)(&LexTokenError);
    __twr_v737 = (uint64_t)(&_mng_trashtoken673);
    __twr_v738 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v739 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v736)(__twr_v737, __twr_v738, __twr_v739, __twr_v739, __twr_v739);
    __twr_l169:;
    goto __twr_l166;
    __twr_l168:;
    if (_mng_arg683) { goto __twr_l166; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_l172:;
    __twr_v740 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v741 = (uint64_t)(&_mng_trashtoken673);
    __twr_v742 = ((uint64_t (*)(uint64_t))__twr_v740)(__twr_v741);
    __twr_v743 = 41ULL;
    if (__twr_v742 != __twr_v743) { goto __twr_l174; } else { goto __twr_l175; }
    __twr_l175:;
    goto __twr_l173;
    __twr_l174:;
    goto __twr_l172;
    __twr_l173:;
    __twr_l166:;
    __twr_l160:;
    if (_mng_arg683) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_l154:;
    __twr_v744 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v744)(_mng_stream642);
    __twr_v745 = (uint64_t)(&PrsEnterMacro);
    ((void (*)())__twr_v745)();
}
void LexParseInclude() {
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t _mng_str748[11];
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t _mng_token751[4];
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint8_t _mng_created762;
    uint64_t __twr_v763;
    uint64_t _mng_fileblock764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t _mng_filepath769[11];
    uint64_t __twr_v770;
    uint64_t _mng_found771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t _mng_handle790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    __twr_v746 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v747 = (uint64_t)(&_mng_str748);
    ((void (*)(uint64_t))__twr_v746)(__twr_v747);
    __twr_v749 = (uint64_t)(&LexCollectString);
    __twr_v750 = (uint64_t)(&_mng_token751);
    ((void (*)(uint64_t, uint64_t))__twr_v749)(__twr_v750, __twr_v747);
    __twr_v752 = (uint64_t)(&LexFalseCount);
    __twr_v753 = *(uint32_t*)(__twr_v752);
    if (!(__twr_v753)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v754 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v755 = (uint64_t)(&_mng_str748);
    ((void (*)(uint64_t))__twr_v754)(__twr_v755);
    return;
    __twr_l176:;
    __twr_v756 = (uint64_t)(&FeCreateFileBlock);
    __twr_v757 = (uint64_t)(&_mng_str748);
    __twr_v758 = 16ULL;
    __twr_v759 = __twr_v757 + __twr_v758;
    __twr_v760 = *(uint64_t*)(__twr_v759);
    __twr_v761 = (uint64_t)(&_mng_created762);
    __twr_v763 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v756)(__twr_v760, __twr_v761);
    _mng_fileblock764 = __twr_v763;
    if (_mng_created762) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v765 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v766 = (uint64_t)(&_mng_str748);
    ((void (*)(uint64_t))__twr_v765)(__twr_v766);
    return;
    __twr_l178:;
    __twr_v767 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v768 = (uint64_t)(&_mng_filepath769);
    ((void (*)(uint64_t))__twr_v767)(__twr_v768);
    __twr_v770 = 0ULL;
    _mng_found771 = __twr_v770;
    __twr_v772 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v773 = (uint64_t)(&_mng_str748);
    __twr_v774 = 16ULL;
    __twr_v775 = __twr_v773 + __twr_v774;
    __twr_v776 = *(uint64_t*)(__twr_v775);
    __twr_v777 = (uint64_t)(&"<inc>/");
    __twr_v778 = 6ULL;
    __twr_v779 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v772)(__twr_v776, __twr_v777, __twr_v778);
    if (__twr_v779 != __twr_v770) { goto __twr_l182; } else { goto __twr_l181; }
    __twr_l181:;
    __twr_v780 = (uint64_t)(&TlMatchPath);
    __twr_v781 = (uint64_t)(&_mng_str748);
    __twr_v782 = 16ULL;
    __twr_v783 = __twr_v781 + __twr_v782;
    __twr_v784 = *(uint64_t*)(__twr_v783);
    __twr_v785 = 6ULL;
    __twr_v786 = __twr_v784 + __twr_v785;
    __twr_v787 = (uint64_t)(&FeIncludeDirectory);
    __twr_v788 = (uint64_t)(&_mng_filepath769);
    __twr_v789 = (uint64_t)(&_mng_handle790);
    __twr_v791 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v780)(__twr_v786, __twr_v787, __twr_v788, __twr_v789);
    _mng_found771 = __twr_v791;
    goto __twr_l180;
    __twr_l182:;
    __twr_v792 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v793 = (uint64_t)(&_mng_str748);
    __twr_v794 = 16ULL;
    __twr_v795 = __twr_v793 + __twr_v794;
    __twr_v796 = *(uint64_t*)(__twr_v795);
    __twr_v797 = (uint64_t)(&"<ll>/");
    __twr_v798 = 5ULL;
    __twr_v799 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v792)(__twr_v796, __twr_v797, __twr_v798);
    __twr_v800 = 0ULL;
    if (__twr_v799 != __twr_v800) { goto __twr_l184; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v801 = (uint64_t)(&TlMatchPath);
    __twr_v802 = (uint64_t)(&_mng_str748);
    __twr_v803 = 16ULL;
    __twr_v804 = __twr_v802 + __twr_v803;
    __twr_v805 = *(uint64_t*)(__twr_v804);
    __twr_v806 = 5ULL;
    __twr_v807 = __twr_v805 + __twr_v806;
    __twr_v808 = (uint64_t)(&FeLibraryDirectory);
    __twr_v809 = (uint64_t)(&_mng_filepath769);
    __twr_v810 = (uint64_t)(&_mng_handle790);
    __twr_v811 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v801)(__twr_v807, __twr_v808, __twr_v809, __twr_v810);
    _mng_found771 = __twr_v811;
    goto __twr_l180;
    __twr_l184:;
    __twr_v812 = (uint64_t)(&TlCopyParentPath);
    __twr_v813 = (uint64_t)(&LexCurrentStream);
    __twr_v814 = *(uint64_t*)(__twr_v813);
    __twr_v815 = 8ULL;
    __twr_v816 = __twr_v814 + __twr_v815;
    __twr_v817 = *(uint64_t*)(__twr_v816);
    __twr_v818 = 48ULL;
    __twr_v819 = __twr_v817 + __twr_v818;
    __twr_v820 = 1ULL;
    __twr_v821 = (uint64_t)(&_mng_filepath769);
    ((void (*)(uint64_t, uint64_t))__twr_v812)(__twr_v819, __twr_v821);
    __twr_v822 = 16ULL;
    __twr_v823 = __twr_v821 + __twr_v822;
    __twr_v824 = *(uint64_t*)(__twr_v823);
    __twr_v825 = *(uint64_t*)(__twr_v821);
    __twr_v826 = __twr_v825 - __twr_v820;
    __twr_v827 = __twr_v824 + __twr_v826;
    __twr_v828 = *(uint8_t*)(__twr_v827);
    __twr_v829 = 47ULL;
    if (__twr_v828 == __twr_v829) { goto __twr_l185; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_v830 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v831 = (uint64_t)(&_mng_filepath769);
    __twr_v832 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v830)(__twr_v831, __twr_v832);
    __twr_l185:;
    __twr_v833 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v834 = (uint64_t)(&_mng_filepath769);
    __twr_v835 = (uint64_t)(&_mng_str748);
    __twr_v836 = 16ULL;
    __twr_v837 = __twr_v835 + __twr_v836;
    __twr_v838 = *(uint64_t*)(__twr_v837);
    __twr_v839 = 0ULL;
    __twr_v840 = *(uint64_t*)(__twr_v835);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v833)(__twr_v834, __twr_v838, __twr_v840);
    __twr_v841 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v841)(__twr_v834, __twr_v839);
    __twr_v842 = (uint64_t)(&TlOpenSource);
    __twr_v843 = __twr_v834 + __twr_v836;
    __twr_v844 = *(uint64_t*)(__twr_v843);
    __twr_v845 = (uint64_t)(&_mng_handle790);
    __twr_v846 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v842)(__twr_v844, __twr_v845);
    if (__twr_v846) { goto __twr_l187; } else { goto __twr_l188; }
    __twr_l188:;
    __twr_v847 = 1ULL;
    _mng_found771 = __twr_v847;
    __twr_l187:;
    __twr_l180:;
    if (_mng_found771) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v848 = (uint64_t)(&LexTokenError);
    __twr_v849 = (uint64_t)(&_mng_token751);
    __twr_v850 = (uint64_t)(&"Failed to include the file.");
    __twr_v851 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v848)(__twr_v849, __twr_v850, __twr_v851, __twr_v851, __twr_v851);
    __twr_l189:;
    __twr_v852 = (uint64_t)(&FeCopyPathFileBlock);
    __twr_v853 = (uint64_t)(&_mng_filepath769);
    __twr_v854 = 16ULL;
    __twr_v855 = __twr_v853 + __twr_v854;
    __twr_v856 = *(uint64_t*)(__twr_v855);
    ((void (*)(uint64_t, uint64_t))__twr_v852)(_mng_fileblock764, __twr_v856);
    __twr_v857 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v857)(__twr_v853);
    __twr_v858 = (uint64_t)(&_mng_str748);
    ((void (*)(uint64_t))__twr_v857)(__twr_v858);
    __twr_v859 = (uint64_t)(&LexCreateFileStream);
    __twr_v860 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v859)(_mng_fileblock764, _mng_handle790);
    __twr_v861 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v861)(__twr_v860);
}
void LexParseDefine() {
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t _mng_contentsbuffer866[11];
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t _mng_trashtoken869[4];
    uint64_t __twr_v870;
    uint64_t _mng_namebuffer871[8];
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t _mng_macro878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t __twr_v886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t __twr_v893;
    uint64_t __twr_v894;
    uint64_t __twr_v895;
    uint64_t __twr_v896;
    uint64_t __twr_v897;
    uint64_t __twr_v898;
    uint64_t __twr_v899;
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t __twr_v902;
    uint64_t __twr_v903;
    uint64_t __twr_v904;
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t __twr_v907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    __twr_v862 = (uint64_t)(&LexFalseCount);
    __twr_v863 = *(uint32_t*)(__twr_v862);
    if (!(__twr_v863)) { goto __twr_l191; } else { goto __twr_l192; }
    __twr_l192:;
    __twr_v864 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v865 = (uint64_t)(&_mng_contentsbuffer866);
    ((void (*)(uint64_t))__twr_v864)(__twr_v865);
    __twr_v867 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v868 = (uint64_t)(&_mng_trashtoken869);
    __twr_v870 = (uint64_t)(&_mng_namebuffer871);
    __twr_v872 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v867)(__twr_v868, __twr_v870);
    __twr_v873 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v873)(__twr_v868, __twr_v865, __twr_v872);
    __twr_v874 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v874)(__twr_v865);
    return;
    __twr_l191:;
    __twr_v875 = (uint64_t)(&TlAllocateFromZone);
    __twr_v876 = (uint64_t)(&LexMacroZone);
    __twr_v877 = ((uint64_t (*)(uint64_t))__twr_v875)(__twr_v876);
    _mng_macro878 = __twr_v877;
    __twr_v879 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v880 = 80ULL;
    __twr_v881 = __twr_v877 + __twr_v880;
    ((void (*)(uint64_t))__twr_v879)(__twr_v881);
    __twr_v882 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v883 = 48ULL;
    __twr_v884 = __twr_v877 + __twr_v883;
    __twr_v885 = 168ULL;
    __twr_v886 = __twr_v877 + __twr_v885;
    ((void (*)(uint64_t, uint64_t))__twr_v882)(__twr_v884, __twr_v886);
    __twr_v887 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v888 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v889 = *(uint64_t*)(__twr_v888);
    __twr_v890 = __twr_v877 + __twr_v885;
    __twr_v891 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v887)(__twr_v889, __twr_v890);
    if (!(__twr_v891)) { goto __twr_l193; } else { goto __twr_l194; }
    __twr_l194:;
    __twr_v892 = (uint64_t)(&LexTokenError);
    __twr_v893 = 48ULL;
    __twr_v894 = _mng_macro878 + __twr_v893;
    __twr_v895 = (uint64_t)(&"Macro already defined");
    __twr_v896 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v892)(__twr_v894, __twr_v895, __twr_v896, __twr_v896, __twr_v896);
    __twr_l193:;
    __twr_v897 = 0ULL;
    __twr_v898 = 256ULL;
    __twr_v899 = _mng_macro878 + __twr_v898;
    *(uint8_t*)(__twr_v899) = __twr_v897;
    __twr_v900 = 257ULL;
    __twr_v901 = _mng_macro878 + __twr_v900;
    *(uint8_t*)(__twr_v901) = __twr_v897;
    __twr_v902 = (uint64_t)(&LexCollectValue);
    __twr_v903 = 48ULL;
    __twr_v904 = _mng_macro878 + __twr_v903;
    __twr_v905 = 80ULL;
    __twr_v906 = _mng_macro878 + __twr_v905;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v902)(__twr_v904, __twr_v906, __twr_v897);
    __twr_v907 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v908 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v909 = *(uint64_t*)(__twr_v908);
    __twr_v910 = 168ULL;
    __twr_v911 = _mng_macro878 + __twr_v910;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v907)(__twr_v909, _mng_macro878, __twr_v911);
}
void LexParseUndefine() {
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t _mng_token914[4];
    uint64_t __twr_v915;
    uint64_t _mng_buffer916[8];
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t _mng_oldmacro924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    __twr_v912 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v913 = (uint64_t)(&_mng_token914);
    __twr_v915 = (uint64_t)(&_mng_buffer916);
    ((void (*)(uint64_t, uint64_t))__twr_v912)(__twr_v913, __twr_v915);
    __twr_v917 = (uint64_t)(&LexFalseCount);
    __twr_v918 = *(uint32_t*)(__twr_v917);
    if (!(__twr_v918)) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    return;
    __twr_l195:;
    __twr_v919 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v920 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v921 = *(uint64_t*)(__twr_v920);
    __twr_v922 = (uint64_t)(&_mng_buffer916);
    __twr_v923 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v919)(__twr_v921, __twr_v922);
    _mng_oldmacro924 = __twr_v923;
    if (__twr_v923) { goto __twr_l197; } else { goto __twr_l198; }
    __twr_l198:;
    return;
    __twr_l197:;
    __twr_v925 = (uint64_t)(&TlRemoveSymbolTable);
    ((void (*)(uint64_t))__twr_v925)(_mng_oldmacro924);
    __twr_v926 = (uint64_t)(&LexMacroDelete);
    ((void (*)(uint64_t))__twr_v926)(_mng_oldmacro924);
}
uint64_t LexCollectMacroArgumentName(uint64_t _mng_token927, uint64_t _mng_buffer928) {
    uint64_t __twr_v929;
    uint64_t _mng_len930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint8_t _mng_byte933;
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t __twr_v936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    uint64_t __twr_v942;
    uint64_t __twr_v943;
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t __twr_v946;
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t __twr_v953;
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    uint64_t __twr_v956;
    uint64_t __twr_v957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t __twr_v961;
    uint64_t __twr_v962;
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    __twr_v929 = 0ULL;
    _mng_len930 = __twr_v929;
    __twr_l199:;
    __twr_v931 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v932 = ((uint64_t (*)(uint64_t))__twr_v931)(_mng_token927);
    _mng_byte933 = __twr_v932;
    __twr_v934 = 41ULL;
    if (__twr_v932 != __twr_v934) { goto __twr_l203; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v935 = 2ULL;
    return __twr_v935;
    goto __twr_l201;
    __twr_l203:;
    __twr_v936 = 44ULL;
    if (_mng_byte933 != __twr_v936) { goto __twr_l201; } else { goto __twr_l204; }
    __twr_l204:;
    goto __twr_l199;
    __twr_l201:;
    goto __twr_l200;
    goto __twr_l199;
    __twr_l200:;
    __twr_l205:;
    __twr_v937 = (uint64_t)(&LexCharTreatment);
    __twr_v938 = __twr_v937 + _mng_byte933;
    __twr_v939 = *(uint8_t*)(__twr_v938);
    __twr_v940 = 3ULL;
    if (__twr_v939 != __twr_v940) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v941 = 0ULL;
    *(uint8_t*)(_mng_buffer928) = __twr_v941;
    __twr_v942 = 1ULL;
    return __twr_v942;
    __twr_l207:;
    __twr_v943 = 41ULL;
    if (_mng_byte933 != __twr_v943) { goto __twr_l209; } else { goto __twr_l210; }
    __twr_l210:;
    __twr_v944 = 0ULL;
    *(uint8_t*)(_mng_buffer928) = __twr_v944;
    __twr_v945 = 3ULL;
    return __twr_v945;
    __twr_l209:;
    __twr_v946 = 44ULL;
    if (_mng_byte933 != __twr_v946) { goto __twr_l211; } else { goto __twr_l212; }
    __twr_l212:;
    __twr_v947 = 0ULL;
    *(uint8_t*)(_mng_buffer928) = __twr_v947;
    __twr_v948 = 1ULL;
    return __twr_v948;
    __twr_l211:;
    __twr_v949 = (uint64_t)(&LexCharTreatment);
    __twr_v950 = __twr_v949 + _mng_byte933;
    __twr_v951 = *(uint8_t*)(__twr_v950);
    __twr_v952 = 0ULL;
    if (__twr_v951 == __twr_v952) { goto __twr_l213; } else { goto __twr_l214; }
    __twr_l214:;
    __twr_v953 = (uint64_t)(&LexTokenError);
    __twr_v954 = (uint64_t)(&"Illegal character in token");
    __twr_v955 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v953)(_mng_token927, __twr_v954, __twr_v955, __twr_v955, __twr_v955);
    __twr_l213:;
    __twr_v956 = 63ULL;
    if (_mng_len930 != __twr_v956) { goto __twr_l215; } else { goto __twr_l216; }
    __twr_l216:;
    __twr_v957 = (uint64_t)(&LexTokenError);
    __twr_v958 = (uint64_t)(&"Token length too great");
    __twr_v959 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v957)(_mng_token927, __twr_v958, __twr_v959, __twr_v959, __twr_v959);
    __twr_l215:;
    *(uint8_t*)(_mng_buffer928) = _mng_byte933;
    __twr_v960 = 1ULL;
    __twr_v961 = _mng_buffer928 + __twr_v960;
    _mng_buffer928 = __twr_v961;
    __twr_v962 = _mng_len930 + __twr_v960;
    _mng_len930 = __twr_v962;
    __twr_v963 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v964 = ((uint64_t (*)())__twr_v963)();
    _mng_byte933 = __twr_v964;
    goto __twr_l205;
    __twr_l206:;
}
void LexCollectMacroArgumentList(uint64_t _mng_ignore965, uint64_t _mng_arglisthead966, uint64_t _mng_length967) {
    uint64_t __twr_v968;
    uint64_t _mng_arglisttail969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t _mng_hashtable972[196];
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t _mng_token975[4];
    uint64_t __twr_v976;
    uint64_t _mng_buffer977[8];
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint8_t _mng_state980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint8_t _mng_created987;
    uint64_t __twr_v988;
    uint64_t _mng_arg989;
    uint64_t __twr_v990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t __twr_v1008;
    __twr_v968 = 0ULL;
    _mng_arglisttail969 = __twr_v968;
    __twr_v970 = (uint64_t)(&TlInitializeHashTable);
    __twr_v971 = (uint64_t)(&_mng_hashtable972);
    ((void (*)(uint64_t))__twr_v970)(__twr_v971);
    *(uint64_t*)(_mng_arglisthead966) = __twr_v968;
    *(uint32_t*)(_mng_length967) = __twr_v968;
    __twr_l217:;
    __twr_v973 = (uint64_t)(&LexCollectMacroArgumentName);
    __twr_v974 = (uint64_t)(&_mng_token975);
    __twr_v976 = (uint64_t)(&_mng_buffer977);
    __twr_v978 = 1ULL;
    __twr_v979 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v973)(__twr_v974, __twr_v976);
    _mng_state980 = __twr_v979;
    __twr_v981 = __twr_v979 & __twr_v978;
    if (!(__twr_v981)) { goto __twr_l219; } else { goto __twr_l221; }
    __twr_l221:;
    if (_mng_ignore965) { goto __twr_l219; } else { goto __twr_l220; }
    __twr_l220:;
    __twr_v982 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v983 = (uint64_t)(&_mng_hashtable972);
    __twr_v984 = 120ULL;
    __twr_v985 = (uint64_t)(&_mng_buffer977);
    __twr_v986 = (uint64_t)(&_mng_created987);
    __twr_v988 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v982)(__twr_v983, __twr_v984, __twr_v985, __twr_v986);
    _mng_arg989 = __twr_v988;
    if (_mng_created987) { goto __twr_l222; } else { goto __twr_l223; }
    __twr_l223:;
    __twr_v990 = (uint64_t)(&LexTokenError);
    __twr_v991 = (uint64_t)(&_mng_token975);
    __twr_v992 = (uint64_t)(&"Macro argument name already used");
    __twr_v993 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v990)(__twr_v991, __twr_v992, __twr_v993, __twr_v993, __twr_v993);
    __twr_l222:;
    __twr_v994 = (uint64_t)(&TlCopyString);
    __twr_v995 = 56ULL;
    __twr_v996 = _mng_arg989 + __twr_v995;
    __twr_v997 = 0ULL;
    __twr_v998 = 1ULL;
    __twr_v999 = (uint64_t)(&_mng_buffer977);
    __twr_v1000 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v994)(__twr_v996, __twr_v999, __twr_v1000);
    __twr_v1001 = *(uint32_t*)(_mng_length967);
    __twr_v1002 = __twr_v1001 + __twr_v998;
    *(uint32_t*)(_mng_length967) = __twr_v1002;
    __twr_v1003 = 48ULL;
    __twr_v1004 = _mng_arg989 + __twr_v1003;
    *(uint64_t*)(__twr_v1004) = __twr_v997;
    if (_mng_arglisttail969) { goto __twr_l225; } else { goto __twr_l226; }
    __twr_l225:;
    __twr_v1005 = 48ULL;
    __twr_v1006 = _mng_arglisttail969 + __twr_v1005;
    *(uint64_t*)(__twr_v1006) = _mng_arg989;
    goto __twr_l224;
    __twr_l226:;
    *(uint64_t*)(_mng_arglisthead966) = _mng_arg989;
    __twr_l224:;
    _mng_arglisttail969 = _mng_arg989;
    __twr_l219:;
    __twr_v1007 = 2ULL;
    __twr_v1008 = _mng_state980 & __twr_v1007;
    if (!(__twr_v1008)) { goto __twr_l227; } else { goto __twr_l228; }
    __twr_l228:;
    return;
    __twr_l227:;
    goto __twr_l217;
    __twr_l218:;
}
void LexParseMacro() {
    uint64_t __twr_v1009;
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t _mng_macro1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t _mng_trashtoken1023[4];
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    uint32_t _mng_length1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t _mng_contentsbuffer1040[11];
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    __twr_v1009 = (uint64_t)(&TlAllocateFromZone);
    __twr_v1010 = (uint64_t)(&LexMacroZone);
    __twr_v1011 = ((uint64_t (*)(uint64_t))__twr_v1009)(__twr_v1010);
    _mng_macro1012 = __twr_v1011;
    __twr_v1013 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1014 = 80ULL;
    __twr_v1015 = __twr_v1011 + __twr_v1014;
    ((void (*)(uint64_t))__twr_v1013)(__twr_v1015);
    __twr_v1016 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1017 = 48ULL;
    __twr_v1018 = __twr_v1011 + __twr_v1017;
    __twr_v1019 = 168ULL;
    __twr_v1020 = __twr_v1011 + __twr_v1019;
    ((void (*)(uint64_t, uint64_t))__twr_v1016)(__twr_v1018, __twr_v1020);
    __twr_v1021 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v1022 = (uint64_t)(&_mng_trashtoken1023);
    __twr_v1024 = ((uint64_t (*)(uint64_t))__twr_v1021)(__twr_v1022);
    __twr_v1025 = 40ULL;
    if (__twr_v1024 == __twr_v1025) { goto __twr_l229; } else { goto __twr_l230; }
    __twr_l230:;
    __twr_v1026 = (uint64_t)(&LexTokenError);
    __twr_v1027 = (uint64_t)(&_mng_trashtoken1023);
    __twr_v1028 = (uint64_t)(&"Expected an open parenthesis");
    __twr_v1029 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1026)(__twr_v1027, __twr_v1028, __twr_v1029, __twr_v1029, __twr_v1029);
    __twr_l229:;
    __twr_v1030 = (uint64_t)(&LexFalseCount);
    __twr_v1031 = *(uint32_t*)(__twr_v1030);
    if (!(__twr_v1031)) { goto __twr_l231; } else { goto __twr_l232; }
    __twr_l232:;
    __twr_v1032 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1033 = 1ULL;
    __twr_v1034 = 248ULL;
    __twr_v1035 = _mng_macro1012 + __twr_v1034;
    __twr_v1036 = (uint64_t)(&_mng_length1037);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1032)(__twr_v1033, __twr_v1035, __twr_v1036);
    __twr_v1038 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1039 = (uint64_t)(&_mng_contentsbuffer1040);
    ((void (*)(uint64_t))__twr_v1038)(__twr_v1039);
    __twr_v1041 = (uint64_t)(&LexCollectValue);
    __twr_v1042 = (uint64_t)(&_mng_trashtoken1023);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1041)(__twr_v1042, __twr_v1039, __twr_v1033);
    __twr_v1043 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1043)(__twr_v1039);
    return;
    __twr_l231:;
    __twr_v1044 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1045 = 0ULL;
    __twr_v1046 = 248ULL;
    __twr_v1047 = _mng_macro1012 + __twr_v1046;
    __twr_v1048 = (uint64_t)(&_mng_length1037);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1044)(__twr_v1045, __twr_v1047, __twr_v1048);
    if (_mng_length1037 != __twr_v1045) { goto __twr_l233; } else { goto __twr_l234; }
    __twr_l234:;
    __twr_v1049 = (uint64_t)(&LexTokenError);
    __twr_v1050 = 48ULL;
    __twr_v1051 = _mng_macro1012 + __twr_v1050;
    __twr_v1052 = (uint64_t)(&"Must have at least 1 argument");
    __twr_v1053 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1049)(__twr_v1051, __twr_v1052, __twr_v1053, __twr_v1053, __twr_v1053);
    __twr_l233:;
    __twr_v1054 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1055 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1056 = *(uint64_t*)(__twr_v1055);
    __twr_v1057 = 168ULL;
    __twr_v1058 = _mng_macro1012 + __twr_v1057;
    __twr_v1059 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1054)(__twr_v1056, __twr_v1058);
    if (!(__twr_v1059)) { goto __twr_l235; } else { goto __twr_l236; }
    __twr_l236:;
    __twr_v1060 = (uint64_t)(&LexTokenError);
    __twr_v1061 = 48ULL;
    __twr_v1062 = _mng_macro1012 + __twr_v1061;
    __twr_v1063 = (uint64_t)(&"Macro already defined");
    __twr_v1064 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1060)(__twr_v1062, __twr_v1063, __twr_v1064, __twr_v1064, __twr_v1064);
    __twr_l235:;
    __twr_v1065 = 1ULL;
    __twr_v1066 = 256ULL;
    __twr_v1067 = _mng_macro1012 + __twr_v1066;
    *(uint8_t*)(__twr_v1067) = __twr_v1065;
    __twr_v1068 = 0ULL;
    __twr_v1069 = 257ULL;
    __twr_v1070 = _mng_macro1012 + __twr_v1069;
    *(uint8_t*)(__twr_v1070) = __twr_v1068;
    __twr_v1071 = (uint64_t)(&LexCollectValue);
    __twr_v1072 = 48ULL;
    __twr_v1073 = _mng_macro1012 + __twr_v1072;
    __twr_v1074 = 80ULL;
    __twr_v1075 = _mng_macro1012 + __twr_v1074;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1071)(__twr_v1073, __twr_v1075, __twr_v1068);
    __twr_v1076 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1077 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1078 = *(uint64_t*)(__twr_v1077);
    __twr_v1079 = 168ULL;
    __twr_v1080 = _mng_macro1012 + __twr_v1079;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1076)(__twr_v1078, _mng_macro1012, __twr_v1080);
}
void LexParseIf() {
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t _mng_token1083[4];
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t __twr_v1088;
    uint64_t _mng_truthy1089;
    uint64_t __twr_v1090;
    uint64_t __twr_v1091;
    uint64_t __twr_v1092;
    uint64_t __twr_v1093;
    uint64_t __twr_v1094;
    uint64_t __twr_v1095;
    uint64_t __twr_v1096;
    uint64_t __twr_v1097;
    uint64_t __twr_v1098;
    uint64_t __twr_v1099;
    uint64_t __twr_v1100;
    uint64_t __twr_v1101;
    uint64_t __twr_v1102;
    uint64_t __twr_v1103;
    uint64_t __twr_v1104;
    uint64_t __twr_v1105;
    uint64_t __twr_v1106;
    __twr_v1081 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1082 = (uint64_t)(&_mng_token1083);
    __twr_v1084 = (uint64_t)(&LexFalseCount);
    __twr_v1085 = *(uint32_t*)(__twr_v1084);
    __twr_v1086 = 0ULL;
    __twr_v1087 = (__twr_v1085 != __twr_v1086);
    __twr_v1088 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1081)(__twr_v1082, __twr_v1087);
    _mng_truthy1089 = __twr_v1088;
    __twr_v1090 = *(uint32_t*)(__twr_v1084);
    if (!(__twr_v1090)) { goto __twr_l237; } else { goto __twr_l238; }
    __twr_l238:;
    __twr_v1091 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1092 = (uint64_t)(&LexIfStack);
    __twr_v1093 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1091)(__twr_v1092, __twr_v1093);
    __twr_v1094 = 1ULL;
    __twr_v1095 = (uint64_t)(&LexFalseCount);
    __twr_v1096 = *(uint32_t*)(__twr_v1095);
    __twr_v1097 = __twr_v1096 + __twr_v1094;
    *(uint32_t*)(__twr_v1095) = __twr_v1097;
    return;
    __twr_l237:;
    if (_mng_truthy1089) { goto __twr_l240; } else { goto __twr_l241; }
    __twr_l240:;
    __twr_v1098 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1099 = (uint64_t)(&LexIfStack);
    __twr_v1100 = 2ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1098)(__twr_v1099, __twr_v1100);
    goto __twr_l239;
    __twr_l241:;
    __twr_v1101 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1102 = (uint64_t)(&LexIfStack);
    __twr_v1103 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1101)(__twr_v1102, __twr_v1103);
    __twr_v1104 = (uint64_t)(&LexFalseCount);
    __twr_v1105 = *(uint32_t*)(__twr_v1104);
    __twr_v1106 = __twr_v1105 + __twr_v1103;
    *(uint32_t*)(__twr_v1104) = __twr_v1106;
    __twr_l239:;
}
void LexParseElse() {
    uint64_t __twr_v1107;
    uint64_t __twr_v1108;
    uint64_t __twr_v1109;
    uint64_t __twr_v1110;
    uint64_t __twr_v1111;
    uint64_t __twr_v1112;
    uint64_t __twr_v1113;
    uint64_t __twr_v1114;
    uint64_t __twr_v1115;
    uint64_t __twr_v1116;
    uint64_t __twr_v1117;
    uint64_t __twr_v1118;
    uint64_t __twr_v1119;
    uint64_t __twr_v1120;
    uint64_t __twr_v1121;
    uint8_t _mng_status1122;
    uint64_t __twr_v1123;
    uint64_t __twr_v1124;
    uint64_t __twr_v1125;
    uint64_t __twr_v1126;
    uint64_t __twr_v1127;
    uint64_t __twr_v1128;
    uint64_t __twr_v1129;
    uint64_t __twr_v1130;
    uint64_t __twr_v1131;
    uint64_t __twr_v1132;
    uint64_t __twr_v1133;
    uint64_t __twr_v1134;
    uint64_t __twr_v1135;
    uint64_t __twr_v1136;
    uint64_t __twr_v1137;
    uint64_t __twr_v1138;
    uint64_t __twr_v1139;
    uint64_t __twr_v1140;
    uint64_t __twr_v1141;
    uint64_t __twr_v1142;
    uint64_t __twr_v1143;
    uint64_t __twr_v1144;
    uint64_t __twr_v1145;
    uint64_t __twr_v1146;
    uint64_t __twr_v1147;
    __twr_v1107 = (uint64_t)(&LexIfStack);
    __twr_v1108 = *(uint64_t*)(__twr_v1107);
    if (__twr_v1108) { goto __twr_l242; } else { goto __twr_l243; }
    __twr_l243:;
    __twr_v1109 = (uint64_t)(&LexStreamError);
    __twr_v1110 = (uint64_t)(&"ELSE with no matching IF");
    __twr_v1111 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1109)(__twr_v1110, __twr_v1111, __twr_v1111, __twr_v1111);
    __twr_l242:;
    __twr_v1112 = (uint64_t)(&LexIfStack);
    __twr_v1113 = 16ULL;
    __twr_v1114 = __twr_v1112 + __twr_v1113;
    __twr_v1115 = *(uint64_t*)(__twr_v1114);
    __twr_v1116 = 0ULL;
    __twr_v1117 = *(uint64_t*)(__twr_v1112);
    __twr_v1118 = 1ULL;
    __twr_v1119 = __twr_v1117 - __twr_v1118;
    __twr_v1120 = __twr_v1115 + __twr_v1119;
    __twr_v1121 = *(uint8_t*)(__twr_v1120);
    _mng_status1122 = __twr_v1121;
    if (__twr_v1121 != __twr_v1116) { goto __twr_l244; } else { goto __twr_l245; }
    __twr_l245:;
    return;
    __twr_l244:;
    __twr_v1123 = 2ULL;
    if (_mng_status1122 != __twr_v1123) { goto __twr_l246; } else { goto __twr_l247; }
    __twr_l247:;
    __twr_v1124 = 0ULL;
    __twr_v1125 = (uint64_t)(&LexIfStack);
    __twr_v1126 = 16ULL;
    __twr_v1127 = __twr_v1125 + __twr_v1126;
    __twr_v1128 = *(uint64_t*)(__twr_v1127);
    __twr_v1129 = *(uint64_t*)(__twr_v1125);
    __twr_v1130 = 1ULL;
    __twr_v1131 = __twr_v1129 - __twr_v1130;
    __twr_v1132 = __twr_v1128 + __twr_v1131;
    *(uint8_t*)(__twr_v1132) = __twr_v1124;
    __twr_v1133 = (uint64_t)(&LexFalseCount);
    __twr_v1134 = *(uint32_t*)(__twr_v1133);
    __twr_v1135 = __twr_v1134 + __twr_v1130;
    *(uint32_t*)(__twr_v1133) = __twr_v1135;
    return;
    __twr_l246:;
    __twr_v1136 = 2ULL;
    __twr_v1137 = (uint64_t)(&LexIfStack);
    __twr_v1138 = 16ULL;
    __twr_v1139 = __twr_v1137 + __twr_v1138;
    __twr_v1140 = *(uint64_t*)(__twr_v1139);
    __twr_v1141 = *(uint64_t*)(__twr_v1137);
    __twr_v1142 = 1ULL;
    __twr_v1143 = __twr_v1141 - __twr_v1142;
    __twr_v1144 = __twr_v1140 + __twr_v1143;
    *(uint8_t*)(__twr_v1144) = __twr_v1136;
    __twr_v1145 = (uint64_t)(&LexFalseCount);
    __twr_v1146 = *(uint32_t*)(__twr_v1145);
    __twr_v1147 = __twr_v1146 - __twr_v1142;
    *(uint32_t*)(__twr_v1145) = __twr_v1147;
}
void LexParseElseif() {
    uint64_t __twr_v1148;
    uint64_t __twr_v1149;
    uint64_t __twr_v1150;
    uint64_t __twr_v1151;
    uint64_t __twr_v1152;
    uint64_t __twr_v1153;
    uint64_t __twr_v1154;
    uint64_t __twr_v1155;
    uint64_t __twr_v1156;
    uint64_t __twr_v1157;
    uint64_t __twr_v1158;
    uint64_t __twr_v1159;
    uint64_t __twr_v1160;
    uint64_t __twr_v1161;
    uint64_t __twr_v1162;
    uint8_t _mng_status1163;
    uint64_t __twr_v1164;
    uint64_t __twr_v1165;
    uint64_t _mng_token1166[4];
    uint64_t __twr_v1167;
    uint64_t __twr_v1168;
    uint64_t __twr_v1169;
    uint64_t __twr_v1170;
    uint64_t __twr_v1171;
    uint64_t __twr_v1172;
    uint64_t __twr_v1173;
    uint64_t __twr_v1174;
    uint64_t __twr_v1175;
    uint64_t __twr_v1176;
    uint64_t __twr_v1177;
    uint64_t __twr_v1178;
    uint64_t __twr_v1179;
    uint64_t __twr_v1180;
    uint64_t __twr_v1181;
    uint64_t __twr_v1182;
    uint64_t __twr_v1183;
    uint64_t __twr_v1184;
    uint64_t __twr_v1185;
    uint64_t __twr_v1186;
    uint64_t __twr_v1187;
    uint64_t __twr_v1188;
    uint64_t __twr_v1189;
    uint64_t __twr_v1190;
    uint64_t __twr_v1191;
    uint64_t __twr_v1192;
    uint64_t __twr_v1193;
    uint64_t __twr_v1194;
    uint64_t __twr_v1195;
    uint64_t __twr_v1196;
    uint64_t __twr_v1197;
    uint64_t __twr_v1198;
    uint64_t __twr_v1199;
    uint64_t __twr_v1200;
    __twr_v1148 = (uint64_t)(&LexIfStack);
    __twr_v1149 = *(uint64_t*)(__twr_v1148);
    if (__twr_v1149) { goto __twr_l248; } else { goto __twr_l249; }
    __twr_l249:;
    __twr_v1150 = (uint64_t)(&LexStreamError);
    __twr_v1151 = (uint64_t)(&"ELSEIF with no matching IF");
    __twr_v1152 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1150)(__twr_v1151, __twr_v1152, __twr_v1152, __twr_v1152);
    __twr_l248:;
    __twr_v1153 = (uint64_t)(&LexIfStack);
    __twr_v1154 = 16ULL;
    __twr_v1155 = __twr_v1153 + __twr_v1154;
    __twr_v1156 = *(uint64_t*)(__twr_v1155);
    __twr_v1157 = 0ULL;
    __twr_v1158 = *(uint64_t*)(__twr_v1153);
    __twr_v1159 = 1ULL;
    __twr_v1160 = __twr_v1158 - __twr_v1159;
    __twr_v1161 = __twr_v1156 + __twr_v1160;
    __twr_v1162 = *(uint8_t*)(__twr_v1161);
    _mng_status1163 = __twr_v1162;
    if (__twr_v1162 != __twr_v1157) { goto __twr_l250; } else { goto __twr_l251; }
    __twr_l251:;
    __twr_v1164 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1165 = (uint64_t)(&_mng_token1166);
    __twr_v1167 = 1ULL;
    __twr_v1168 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1164)(__twr_v1165, __twr_v1167);
    return;
    __twr_l250:;
    __twr_v1169 = 2ULL;
    if (_mng_status1163 != __twr_v1169) { goto __twr_l252; } else { goto __twr_l253; }
    __twr_l253:;
    __twr_v1170 = 0ULL;
    __twr_v1171 = (uint64_t)(&LexIfStack);
    __twr_v1172 = 16ULL;
    __twr_v1173 = __twr_v1171 + __twr_v1172;
    __twr_v1174 = *(uint64_t*)(__twr_v1173);
    __twr_v1175 = *(uint64_t*)(__twr_v1171);
    __twr_v1176 = 1ULL;
    __twr_v1177 = __twr_v1175 - __twr_v1176;
    __twr_v1178 = __twr_v1174 + __twr_v1177;
    *(uint8_t*)(__twr_v1178) = __twr_v1170;
    __twr_v1179 = (uint64_t)(&LexFalseCount);
    __twr_v1180 = *(uint32_t*)(__twr_v1179);
    __twr_v1181 = __twr_v1180 + __twr_v1176;
    *(uint32_t*)(__twr_v1179) = __twr_v1181;
    __twr_v1182 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1183 = (uint64_t)(&_mng_token1166);
    __twr_v1184 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1182)(__twr_v1183, __twr_v1176);
    return;
    __twr_l252:;
    __twr_v1185 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1186 = (uint64_t)(&_mng_token1166);
    __twr_v1187 = 0ULL;
    __twr_v1188 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1185)(__twr_v1186, __twr_v1187);
    if (!(__twr_v1188)) { goto __twr_l254; } else { goto __twr_l255; }
    __twr_l255:;
    __twr_v1189 = 2ULL;
    __twr_v1190 = (uint64_t)(&LexIfStack);
    __twr_v1191 = 16ULL;
    __twr_v1192 = __twr_v1190 + __twr_v1191;
    __twr_v1193 = *(uint64_t*)(__twr_v1192);
    __twr_v1194 = *(uint64_t*)(__twr_v1190);
    __twr_v1195 = 1ULL;
    __twr_v1196 = __twr_v1194 - __twr_v1195;
    __twr_v1197 = __twr_v1193 + __twr_v1196;
    *(uint8_t*)(__twr_v1197) = __twr_v1189;
    __twr_v1198 = (uint64_t)(&LexFalseCount);
    __twr_v1199 = *(uint32_t*)(__twr_v1198);
    __twr_v1200 = __twr_v1199 - __twr_v1195;
    *(uint32_t*)(__twr_v1198) = __twr_v1200;
    __twr_l254:;
}
void LexParseEnd() {
    uint64_t __twr_v1201;
    uint64_t __twr_v1202;
    uint64_t __twr_v1203;
    uint64_t __twr_v1204;
    uint64_t __twr_v1205;
    uint64_t __twr_v1206;
    uint64_t __twr_v1207;
    uint64_t __twr_v1208;
    uint64_t _mng_status1209;
    uint64_t __twr_v1210;
    uint64_t __twr_v1211;
    uint64_t __twr_v1212;
    uint64_t __twr_v1213;
    uint64_t __twr_v1214;
    uint64_t __twr_v1215;
    __twr_v1201 = (uint64_t)(&LexIfStack);
    __twr_v1202 = *(uint64_t*)(__twr_v1201);
    if (__twr_v1202) { goto __twr_l256; } else { goto __twr_l257; }
    __twr_l257:;
    __twr_v1203 = (uint64_t)(&LexStreamError);
    __twr_v1204 = (uint64_t)(&"END with no matching IF");
    __twr_v1205 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1203)(__twr_v1204, __twr_v1205, __twr_v1205, __twr_v1205);
    __twr_l256:;
    __twr_v1206 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1207 = (uint64_t)(&LexIfStack);
    __twr_v1208 = ((uint64_t (*)(uint64_t))__twr_v1206)(__twr_v1207);
    _mng_status1209 = __twr_v1208;
    __twr_v1210 = 0ULL;
    if (__twr_v1208 == __twr_v1210) { goto __twr_l259; } else { goto __twr_l260; }
    __twr_l260:;
    __twr_v1211 = 1ULL;
    if (_mng_status1209 != __twr_v1211) { goto __twr_l258; } else { goto __twr_l259; }
    __twr_l259:;
    __twr_v1212 = 1ULL;
    __twr_v1213 = (uint64_t)(&LexFalseCount);
    __twr_v1214 = *(uint32_t*)(__twr_v1213);
    __twr_v1215 = __twr_v1214 - __twr_v1212;
    *(uint32_t*)(__twr_v1213) = __twr_v1215;
    return;
    __twr_l258:;
}
void LexParseError() {
    uint64_t __twr_v1216;
    uint64_t __twr_v1217;
    uint64_t _mng_buffer1218[11];
    uint64_t __twr_v1219;
    uint64_t __twr_v1220;
    uint64_t _mng_token1221[4];
    uint64_t __twr_v1222;
    uint64_t __twr_v1223;
    uint64_t __twr_v1224;
    uint64_t __twr_v1225;
    uint64_t __twr_v1226;
    uint64_t __twr_v1227;
    uint64_t __twr_v1228;
    uint64_t __twr_v1229;
    uint64_t __twr_v1230;
    uint64_t __twr_v1231;
    uint64_t __twr_v1232;
    uint64_t __twr_v1233;
    uint64_t __twr_v1234;
    uint64_t __twr_v1235;
    __twr_v1216 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1217 = (uint64_t)(&_mng_buffer1218);
    ((void (*)(uint64_t))__twr_v1216)(__twr_v1217);
    __twr_v1219 = (uint64_t)(&LexCollectValue);
    __twr_v1220 = (uint64_t)(&_mng_token1221);
    __twr_v1222 = (uint64_t)(&LexFalseCount);
    __twr_v1223 = *(uint32_t*)(__twr_v1222);
    __twr_v1224 = 0ULL;
    __twr_v1225 = (__twr_v1223 != __twr_v1224);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1219)(__twr_v1220, __twr_v1217, __twr_v1225);
    __twr_v1226 = *(uint32_t*)(__twr_v1222);
    if (!(__twr_v1226)) { goto __twr_l261; } else { goto __twr_l262; }
    __twr_l262:;
    __twr_v1227 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1228 = (uint64_t)(&_mng_buffer1218);
    ((void (*)(uint64_t))__twr_v1227)(__twr_v1228);
    return;
    __twr_l261:;
    __twr_v1229 = (uint64_t)(&LexTokenError);
    __twr_v1230 = (uint64_t)(&_mng_token1221);
    __twr_v1231 = (uint64_t)(&_mng_buffer1218);
    __twr_v1232 = 16ULL;
    __twr_v1233 = __twr_v1231 + __twr_v1232;
    __twr_v1234 = *(uint64_t*)(__twr_v1233);
    __twr_v1235 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1229)(__twr_v1230, __twr_v1234, __twr_v1235, __twr_v1235, __twr_v1235);
}
void LexParsePrint() {
    uint64_t __twr_v1236;
    uint64_t __twr_v1237;
    uint64_t _mng_buffer1238[11];
    uint64_t __twr_v1239;
    uint64_t __twr_v1240;
    uint64_t _mng_token1241[4];
    uint64_t __twr_v1242;
    uint64_t __twr_v1243;
    uint64_t __twr_v1244;
    uint64_t __twr_v1245;
    uint64_t __twr_v1246;
    uint64_t __twr_v1247;
    uint64_t __twr_v1248;
    uint64_t __twr_v1249;
    uint64_t __twr_v1250;
    uint64_t __twr_v1251;
    uint64_t __twr_v1252;
    uint64_t __twr_v1253;
    uint64_t __twr_v1254;
    uint64_t __twr_v1255;
    __twr_v1236 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1237 = (uint64_t)(&_mng_buffer1238);
    ((void (*)(uint64_t))__twr_v1236)(__twr_v1237);
    __twr_v1239 = (uint64_t)(&LexCollectValue);
    __twr_v1240 = (uint64_t)(&_mng_token1241);
    __twr_v1242 = (uint64_t)(&LexFalseCount);
    __twr_v1243 = *(uint32_t*)(__twr_v1242);
    __twr_v1244 = 0ULL;
    __twr_v1245 = (__twr_v1243 != __twr_v1244);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1239)(__twr_v1240, __twr_v1237, __twr_v1245);
    __twr_v1246 = *(uint32_t*)(__twr_v1242);
    if (!(__twr_v1246)) { goto __twr_l263; } else { goto __twr_l264; }
    __twr_l264:;
    __twr_v1247 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1248 = (uint64_t)(&_mng_buffer1238);
    ((void (*)(uint64_t))__twr_v1247)(__twr_v1248);
    return;
    __twr_l263:;
    __twr_v1249 = (uint64_t)(&TlPrintString);
    __twr_v1250 = (uint64_t)(&_mng_buffer1238);
    __twr_v1251 = 16ULL;
    __twr_v1252 = __twr_v1250 + __twr_v1251;
    __twr_v1253 = *(uint64_t*)(__twr_v1252);
    ((void (*)(uint64_t))__twr_v1249)(__twr_v1253);
    __twr_v1254 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v1249)(__twr_v1254);
    __twr_v1255 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1255)(__twr_v1250);
}
void LexParseAsm() {
    uint64_t __twr_v1256;
    uint64_t __twr_v1257;
    uint64_t __twr_v1258;
    uint64_t __twr_v1259;
    uint64_t _mng_buffer1260[11];
    uint64_t __twr_v1261;
    uint64_t __twr_v1262;
    uint64_t _mng_token1263[4];
    uint64_t __twr_v1264;
    uint64_t __twr_v1265;
    uint64_t __twr_v1266;
    uint64_t __twr_v1267;
    uint64_t __twr_v1268;
    uint64_t _mng_asmblock1269;
    uint64_t __twr_v1270;
    uint64_t __twr_v1271;
    uint64_t __twr_v1272;
    uint64_t __twr_v1273;
    uint64_t __twr_v1274;
    uint64_t __twr_v1275;
    uint64_t __twr_v1276;
    uint64_t __twr_v1277;
    uint64_t __twr_v1278;
    uint64_t __twr_v1279;
    uint64_t __twr_v1280;
    uint64_t __twr_v1281;
    uint64_t __twr_v1282;
    uint64_t __twr_v1283;
    uint64_t __twr_v1284;
    uint64_t __twr_v1285;
    uint64_t __twr_v1286;
    uint64_t __twr_v1287;
    __twr_v1256 = (uint64_t)(&LexFalseCount);
    __twr_v1257 = *(uint32_t*)(__twr_v1256);
    if (!(__twr_v1257)) { goto __twr_l265; } else { goto __twr_l266; }
    __twr_l266:;
    __twr_v1258 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1259 = (uint64_t)(&_mng_buffer1260);
    ((void (*)(uint64_t))__twr_v1258)(__twr_v1259);
    __twr_v1261 = (uint64_t)(&LexCollectValue);
    __twr_v1262 = (uint64_t)(&_mng_token1263);
    __twr_v1264 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1261)(__twr_v1262, __twr_v1259, __twr_v1264);
    __twr_v1265 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1265)(__twr_v1259);
    return;
    __twr_l265:;
    __twr_v1266 = (uint64_t)(&TlBumpAlloc);
    __twr_v1267 = 128ULL;
    __twr_v1268 = (uint64_t)(&_mng_asmblock1269);
    __twr_v1270 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1266)(__twr_v1267, __twr_v1268);
    if (!(__twr_v1270)) { goto __twr_l267; } else { goto __twr_l268; }
    __twr_l268:;
    __twr_v1271 = (uint64_t)(&TlInternalError);
    __twr_v1272 = (uint64_t)(&"Failed to allocate asm block");
    __twr_v1273 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1271)(__twr_v1272, __twr_v1273, __twr_v1273, __twr_v1273);
    __twr_l267:;
    __twr_v1274 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1275 = 40ULL;
    __twr_v1276 = _mng_asmblock1269 + __twr_v1275;
    ((void (*)(uint64_t))__twr_v1274)(__twr_v1276);
    __twr_v1277 = (uint64_t)(&LexCollectValue);
    __twr_v1278 = 8ULL;
    __twr_v1279 = _mng_asmblock1269 + __twr_v1278;
    __twr_v1280 = _mng_asmblock1269 + __twr_v1275;
    __twr_v1281 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1277)(__twr_v1279, __twr_v1280, __twr_v1281);
    *(uint64_t*)(_mng_asmblock1269) = __twr_v1281;
    __twr_v1282 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1283 = *(uint64_t*)(__twr_v1282);
    if (__twr_v1283) { goto __twr_l271; } else { goto __twr_l270; }
    __twr_l270:;
    __twr_v1284 = (uint64_t)(&LexAsmBlockListHead);
    *(uint64_t*)(__twr_v1284) = _mng_asmblock1269;
    goto __twr_l269;
    __twr_l271:;
    __twr_v1285 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1286 = *(uint64_t*)(__twr_v1285);
    *(uint64_t*)(__twr_v1286) = _mng_asmblock1269;
    __twr_l269:;
    __twr_v1287 = (uint64_t)(&LexAsmBlockListTail);
    *(uint64_t*)(__twr_v1287) = _mng_asmblock1269;
}
void LexParseSection() {
    uint64_t __twr_v1288;
    uint64_t __twr_v1289;
    uint64_t _mng_str1290[11];
    uint64_t __twr_v1291;
    uint64_t __twr_v1292;
    uint64_t _mng_token1293[4];
    uint64_t __twr_v1294;
    uint64_t __twr_v1295;
    uint64_t __twr_v1296;
    uint64_t __twr_v1297;
    uint64_t __twr_v1298;
    uint64_t __twr_v1299;
    uint64_t __twr_v1300;
    uint64_t __twr_v1301;
    uint64_t __twr_v1302;
    uint64_t __twr_v1303;
    uint64_t __twr_v1304;
    uint64_t __twr_v1305;
    uint64_t __twr_v1306;
    uint64_t __twr_v1307;
    uint64_t __twr_v1308;
    uint64_t __twr_v1309;
    uint64_t __twr_v1310;
    uint64_t __twr_v1311;
    uint64_t __twr_v1312;
    __twr_v1288 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1289 = (uint64_t)(&_mng_str1290);
    ((void (*)(uint64_t))__twr_v1288)(__twr_v1289);
    __twr_v1291 = (uint64_t)(&LexCollectString);
    __twr_v1292 = (uint64_t)(&_mng_token1293);
    ((void (*)(uint64_t, uint64_t))__twr_v1291)(__twr_v1292, __twr_v1289);
    __twr_v1294 = (uint64_t)(&LexFalseCount);
    __twr_v1295 = *(uint32_t*)(__twr_v1294);
    if (!(__twr_v1295)) { goto __twr_l272; } else { goto __twr_l273; }
    __twr_l273:;
    __twr_v1296 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1297 = (uint64_t)(&_mng_str1290);
    ((void (*)(uint64_t))__twr_v1296)(__twr_v1297);
    return;
    __twr_l272:;
    __twr_v1298 = (uint64_t)(&_mng_str1290);
    __twr_v1299 = *(uint64_t*)(__twr_v1298);
    __twr_v1300 = 63ULL;
    if (__twr_v1299 < __twr_v1300) { goto __twr_l274; } else { goto __twr_l275; }
    __twr_l275:;
    __twr_v1301 = (uint64_t)(&LexTokenError);
    __twr_v1302 = (uint64_t)(&_mng_token1293);
    __twr_v1303 = (uint64_t)(&"Section name too long");
    __twr_v1304 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1301)(__twr_v1302, __twr_v1303, __twr_v1304, __twr_v1304, __twr_v1304);
    __twr_l274:;
    __twr_v1305 = (uint64_t)(&LexLookupSection);
    __twr_v1306 = (uint64_t)(&_mng_str1290);
    __twr_v1307 = 16ULL;
    __twr_v1308 = __twr_v1306 + __twr_v1307;
    __twr_v1309 = *(uint64_t*)(__twr_v1308);
    __twr_v1310 = ((uint64_t (*)(uint64_t))__twr_v1305)(__twr_v1309);
    __twr_v1311 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1311)(__twr_v1306);
    __twr_v1312 = (uint64_t)(&LexNextSymbolSection);
    *(uint64_t*)(__twr_v1312) = __twr_v1310;
}
void LexParseEnterSection() {
    uint64_t __twr_v1313;
    uint64_t __twr_v1314;
    uint64_t _mng_str1315[11];
    uint64_t __twr_v1316;
    uint64_t __twr_v1317;
    uint64_t _mng_token1318[4];
    uint64_t __twr_v1319;
    uint64_t __twr_v1320;
    uint64_t __twr_v1321;
    uint64_t __twr_v1322;
    uint64_t __twr_v1323;
    uint64_t __twr_v1324;
    uint64_t __twr_v1325;
    uint64_t __twr_v1326;
    uint64_t __twr_v1327;
    uint64_t __twr_v1328;
    uint64_t __twr_v1329;
    uint64_t __twr_v1330;
    uint64_t __twr_v1331;
    uint64_t __twr_v1332;
    uint64_t __twr_v1333;
    uint64_t __twr_v1334;
    uint64_t __twr_v1335;
    uint64_t __twr_v1336;
    uint64_t __twr_v1337;
    __twr_v1313 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1314 = (uint64_t)(&_mng_str1315);
    ((void (*)(uint64_t))__twr_v1313)(__twr_v1314);
    __twr_v1316 = (uint64_t)(&LexCollectString);
    __twr_v1317 = (uint64_t)(&_mng_token1318);
    ((void (*)(uint64_t, uint64_t))__twr_v1316)(__twr_v1317, __twr_v1314);
    __twr_v1319 = (uint64_t)(&LexFalseCount);
    __twr_v1320 = *(uint32_t*)(__twr_v1319);
    if (!(__twr_v1320)) { goto __twr_l276; } else { goto __twr_l277; }
    __twr_l277:;
    __twr_v1321 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1322 = (uint64_t)(&_mng_str1315);
    ((void (*)(uint64_t))__twr_v1321)(__twr_v1322);
    return;
    __twr_l276:;
    __twr_v1323 = (uint64_t)(&_mng_str1315);
    __twr_v1324 = *(uint64_t*)(__twr_v1323);
    __twr_v1325 = 63ULL;
    if (__twr_v1324 < __twr_v1325) { goto __twr_l278; } else { goto __twr_l279; }
    __twr_l279:;
    __twr_v1326 = (uint64_t)(&LexTokenError);
    __twr_v1327 = (uint64_t)(&_mng_token1318);
    __twr_v1328 = (uint64_t)(&"Section name too long");
    __twr_v1329 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1326)(__twr_v1327, __twr_v1328, __twr_v1329, __twr_v1329, __twr_v1329);
    __twr_l278:;
    __twr_v1330 = (uint64_t)(&LexLookupSection);
    __twr_v1331 = (uint64_t)(&_mng_str1315);
    __twr_v1332 = 16ULL;
    __twr_v1333 = __twr_v1331 + __twr_v1332;
    __twr_v1334 = *(uint64_t*)(__twr_v1333);
    __twr_v1335 = ((uint64_t (*)(uint64_t))__twr_v1330)(__twr_v1334);
    __twr_v1336 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1336)(__twr_v1331);
    __twr_v1337 = (uint64_t)(&LexPushSection);
    ((void (*)(uint64_t))__twr_v1337)(__twr_v1335);
}
void LexParseLeaveSection() {
    uint64_t __twr_v1338;
    uint64_t __twr_v1339;
    uint64_t __twr_v1340;
    uint64_t __twr_v1341;
    uint64_t __twr_v1342;
    uint64_t __twr_v1343;
    __twr_v1338 = (uint64_t)(&LexPopSection);
    __twr_v1339 = ((uint64_t (*)())__twr_v1338)();
    if (__twr_v1339) { goto __twr_l280; } else { goto __twr_l281; }
    __twr_l281:;
    __twr_v1340 = (uint64_t)(&LexTokenError);
    __twr_v1341 = (uint64_t)(&LexDirectiveToken);
    __twr_v1342 = (uint64_t)(&"Section stack was empty");
    __twr_v1343 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1340)(__twr_v1341, __twr_v1342, __twr_v1343, __twr_v1343, __twr_v1343);
    __twr_l280:;
}
void LexOperatorEquals(uint64_t _mng_buffer1344, uint64_t _mng_ignore1345) {
    uint64_t __twr_v1346;
    uint64_t __twr_v1347;
    uint64_t _mng_token1348[4];
    uint64_t __twr_v1349;
    uint64_t __twr_v1350;
    uint64_t __twr_v1351;
    uint64_t __twr_v1352;
    uint64_t __twr_v1353;
    uint64_t __twr_v1354;
    uint64_t __twr_v1355;
    uint64_t __twr_v1356;
    __twr_v1346 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1347 = (uint64_t)(&_mng_token1348);
    __twr_v1349 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1346)(__twr_v1347, _mng_ignore1345);
    __twr_v1350 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1346)(__twr_v1347, _mng_ignore1345);
    __twr_v1351 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1351)();
    __twr_v1352 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1353 = (__twr_v1349 == __twr_v1350);
    __twr_v1354 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1352)(_mng_buffer1344, __twr_v1353, __twr_v1354);
    __twr_v1355 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1356 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1355)(_mng_buffer1344, __twr_v1356);
}
void LexOperatorLteq(uint64_t _mng_buffer1357, uint64_t _mng_ignore1358) {
    uint64_t __twr_v1359;
    uint64_t __twr_v1360;
    uint64_t _mng_token1361[4];
    uint64_t __twr_v1362;
    uint64_t __twr_v1363;
    uint64_t __twr_v1364;
    uint64_t __twr_v1365;
    uint64_t __twr_v1366;
    uint64_t __twr_v1367;
    uint64_t __twr_v1368;
    uint64_t __twr_v1369;
    __twr_v1359 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1360 = (uint64_t)(&_mng_token1361);
    __twr_v1362 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1359)(__twr_v1360, _mng_ignore1358);
    __twr_v1363 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1359)(__twr_v1360, _mng_ignore1358);
    __twr_v1364 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1364)();
    __twr_v1365 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1366 = (__twr_v1362 <= __twr_v1363);
    __twr_v1367 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1365)(_mng_buffer1357, __twr_v1366, __twr_v1367);
    __twr_v1368 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1369 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1368)(_mng_buffer1357, __twr_v1369);
}
void LexOperatorGteq(uint64_t _mng_buffer1370, uint64_t _mng_ignore1371) {
    uint64_t __twr_v1372;
    uint64_t __twr_v1373;
    uint64_t _mng_token1374[4];
    uint64_t __twr_v1375;
    uint64_t __twr_v1376;
    uint64_t __twr_v1377;
    uint64_t __twr_v1378;
    uint64_t __twr_v1379;
    uint64_t __twr_v1380;
    uint64_t __twr_v1381;
    uint64_t __twr_v1382;
    __twr_v1372 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1373 = (uint64_t)(&_mng_token1374);
    __twr_v1375 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1372)(__twr_v1373, _mng_ignore1371);
    __twr_v1376 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1372)(__twr_v1373, _mng_ignore1371);
    __twr_v1377 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1377)();
    __twr_v1378 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1379 = (__twr_v1375 >= __twr_v1376);
    __twr_v1380 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1378)(_mng_buffer1370, __twr_v1379, __twr_v1380);
    __twr_v1381 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1382 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1381)(_mng_buffer1370, __twr_v1382);
}
void LexOperatorNeq(uint64_t _mng_buffer1383, uint64_t _mng_ignore1384) {
    uint64_t __twr_v1385;
    uint64_t __twr_v1386;
    uint64_t _mng_token1387[4];
    uint64_t __twr_v1388;
    uint64_t __twr_v1389;
    uint64_t __twr_v1390;
    uint64_t __twr_v1391;
    uint64_t __twr_v1392;
    uint64_t __twr_v1393;
    uint64_t __twr_v1394;
    uint64_t __twr_v1395;
    __twr_v1385 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1386 = (uint64_t)(&_mng_token1387);
    __twr_v1388 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1385)(__twr_v1386, _mng_ignore1384);
    __twr_v1389 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1385)(__twr_v1386, _mng_ignore1384);
    __twr_v1390 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1390)();
    __twr_v1391 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1392 = (__twr_v1388 != __twr_v1389);
    __twr_v1393 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1391)(_mng_buffer1383, __twr_v1392, __twr_v1393);
    __twr_v1394 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1395 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1394)(_mng_buffer1383, __twr_v1395);
}
void LexOperatorLt(uint64_t _mng_buffer1396, uint64_t _mng_ignore1397) {
    uint64_t __twr_v1398;
    uint64_t __twr_v1399;
    uint64_t _mng_token1400[4];
    uint64_t __twr_v1401;
    uint64_t __twr_v1402;
    uint64_t __twr_v1403;
    uint64_t __twr_v1404;
    uint64_t __twr_v1405;
    uint64_t __twr_v1406;
    uint64_t __twr_v1407;
    uint64_t __twr_v1408;
    __twr_v1398 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1399 = (uint64_t)(&_mng_token1400);
    __twr_v1401 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1398)(__twr_v1399, _mng_ignore1397);
    __twr_v1402 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1398)(__twr_v1399, _mng_ignore1397);
    __twr_v1403 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1403)();
    __twr_v1404 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1405 = (__twr_v1401 < __twr_v1402);
    __twr_v1406 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1404)(_mng_buffer1396, __twr_v1405, __twr_v1406);
    __twr_v1407 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1408 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1407)(_mng_buffer1396, __twr_v1408);
}
void LexOperatorGt(uint64_t _mng_buffer1409, uint64_t _mng_ignore1410) {
    uint64_t __twr_v1411;
    uint64_t __twr_v1412;
    uint64_t _mng_token1413[4];
    uint64_t __twr_v1414;
    uint64_t __twr_v1415;
    uint64_t __twr_v1416;
    uint64_t __twr_v1417;
    uint64_t __twr_v1418;
    uint64_t __twr_v1419;
    uint64_t __twr_v1420;
    uint64_t __twr_v1421;
    __twr_v1411 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1412 = (uint64_t)(&_mng_token1413);
    __twr_v1414 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1411)(__twr_v1412, _mng_ignore1410);
    __twr_v1415 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1411)(__twr_v1412, _mng_ignore1410);
    __twr_v1416 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1416)();
    __twr_v1417 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1418 = (__twr_v1414 > __twr_v1415);
    __twr_v1419 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1417)(_mng_buffer1409, __twr_v1418, __twr_v1419);
    __twr_v1420 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1421 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1420)(_mng_buffer1409, __twr_v1421);
}
void LexOperatorAdd(uint64_t _mng_buffer1422, uint64_t _mng_ignore1423) {
    uint64_t __twr_v1424;
    uint64_t __twr_v1425;
    uint64_t _mng_token1426[4];
    uint64_t __twr_v1427;
    uint64_t __twr_v1428;
    uint64_t __twr_v1429;
    uint64_t __twr_v1430;
    uint64_t __twr_v1431;
    uint64_t __twr_v1432;
    uint64_t __twr_v1433;
    uint64_t __twr_v1434;
    __twr_v1424 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1425 = (uint64_t)(&_mng_token1426);
    __twr_v1427 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1424)(__twr_v1425, _mng_ignore1423);
    __twr_v1428 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1424)(__twr_v1425, _mng_ignore1423);
    __twr_v1429 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1429)();
    __twr_v1430 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1431 = __twr_v1427 + __twr_v1428;
    __twr_v1432 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1430)(_mng_buffer1422, __twr_v1431, __twr_v1432);
    __twr_v1433 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1434 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1433)(_mng_buffer1422, __twr_v1434);
}
void LexOperatorSub(uint64_t _mng_buffer1435, uint64_t _mng_ignore1436) {
    uint64_t __twr_v1437;
    uint64_t __twr_v1438;
    uint64_t _mng_token1439[4];
    uint64_t __twr_v1440;
    uint64_t __twr_v1441;
    uint64_t __twr_v1442;
    uint64_t __twr_v1443;
    uint64_t __twr_v1444;
    uint64_t __twr_v1445;
    uint64_t __twr_v1446;
    uint64_t __twr_v1447;
    __twr_v1437 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1438 = (uint64_t)(&_mng_token1439);
    __twr_v1440 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1437)(__twr_v1438, _mng_ignore1436);
    __twr_v1441 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1437)(__twr_v1438, _mng_ignore1436);
    __twr_v1442 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1442)();
    __twr_v1443 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1444 = __twr_v1440 - __twr_v1441;
    __twr_v1445 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1443)(_mng_buffer1435, __twr_v1444, __twr_v1445);
    __twr_v1446 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1447 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1446)(_mng_buffer1435, __twr_v1447);
}
void LexOperatorMul(uint64_t _mng_buffer1448, uint64_t _mng_ignore1449) {
    uint64_t __twr_v1450;
    uint64_t __twr_v1451;
    uint64_t _mng_token1452[4];
    uint64_t __twr_v1453;
    uint64_t __twr_v1454;
    uint64_t __twr_v1455;
    uint64_t __twr_v1456;
    uint64_t __twr_v1457;
    uint64_t __twr_v1458;
    uint64_t __twr_v1459;
    uint64_t __twr_v1460;
    __twr_v1450 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1451 = (uint64_t)(&_mng_token1452);
    __twr_v1453 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1450)(__twr_v1451, _mng_ignore1449);
    __twr_v1454 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1450)(__twr_v1451, _mng_ignore1449);
    __twr_v1455 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1455)();
    __twr_v1456 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1457 = __twr_v1453 * __twr_v1454;
    __twr_v1458 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1456)(_mng_buffer1448, __twr_v1457, __twr_v1458);
    __twr_v1459 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1460 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1459)(_mng_buffer1448, __twr_v1460);
}
void LexOperatorDiv(uint64_t _mng_buffer1461, uint64_t _mng_ignore1462) {
    uint64_t __twr_v1463;
    uint64_t __twr_v1464;
    uint64_t _mng_token1465[4];
    uint64_t __twr_v1466;
    uint64_t __twr_v1467;
    uint64_t __twr_v1468;
    uint64_t __twr_v1469;
    uint64_t __twr_v1470;
    uint64_t __twr_v1471;
    uint64_t __twr_v1472;
    uint64_t __twr_v1473;
    __twr_v1463 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1464 = (uint64_t)(&_mng_token1465);
    __twr_v1466 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1463)(__twr_v1464, _mng_ignore1462);
    __twr_v1467 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1463)(__twr_v1464, _mng_ignore1462);
    __twr_v1468 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1468)();
    __twr_v1469 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1470 = __twr_v1466 / __twr_v1467;
    __twr_v1471 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1469)(_mng_buffer1461, __twr_v1470, __twr_v1471);
    __twr_v1472 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1473 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1472)(_mng_buffer1461, __twr_v1473);
}
void LexOperatorLsh(uint64_t _mng_buffer1474, uint64_t _mng_ignore1475) {
    uint64_t __twr_v1476;
    uint64_t __twr_v1477;
    uint64_t _mng_token1478[4];
    uint64_t __twr_v1479;
    uint64_t __twr_v1480;
    uint64_t __twr_v1481;
    uint64_t __twr_v1482;
    uint64_t __twr_v1483;
    uint64_t __twr_v1484;
    uint64_t __twr_v1485;
    uint64_t __twr_v1486;
    __twr_v1476 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1477 = (uint64_t)(&_mng_token1478);
    __twr_v1479 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1476)(__twr_v1477, _mng_ignore1475);
    __twr_v1480 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1476)(__twr_v1477, _mng_ignore1475);
    __twr_v1481 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1481)();
    __twr_v1482 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1483 = __twr_v1479 << __twr_v1480;
    __twr_v1484 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1482)(_mng_buffer1474, __twr_v1483, __twr_v1484);
    __twr_v1485 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1486 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1485)(_mng_buffer1474, __twr_v1486);
}
void LexOperatorRsh(uint64_t _mng_buffer1487, uint64_t _mng_ignore1488) {
    uint64_t __twr_v1489;
    uint64_t __twr_v1490;
    uint64_t _mng_token1491[4];
    uint64_t __twr_v1492;
    uint64_t __twr_v1493;
    uint64_t __twr_v1494;
    uint64_t __twr_v1495;
    uint64_t __twr_v1496;
    uint64_t __twr_v1497;
    uint64_t __twr_v1498;
    uint64_t __twr_v1499;
    __twr_v1489 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1490 = (uint64_t)(&_mng_token1491);
    __twr_v1492 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1489)(__twr_v1490, _mng_ignore1488);
    __twr_v1493 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1489)(__twr_v1490, _mng_ignore1488);
    __twr_v1494 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1494)();
    __twr_v1495 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1496 = __twr_v1492 >> __twr_v1493;
    __twr_v1497 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1495)(_mng_buffer1487, __twr_v1496, __twr_v1497);
    __twr_v1498 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1499 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1498)(_mng_buffer1487, __twr_v1499);
}
void LexOperatorStrcat(uint64_t _mng_buffer1500, uint64_t _mng_ignore1501) {
    uint64_t __twr_v1502;
    uint64_t __twr_v1503;
    uint64_t _mng_token1504[4];
    uint64_t __twr_v1505;
    uint64_t __twr_v1506;
    uint64_t __twr_v1507;
    __twr_v1502 = (uint64_t)(&LexCollectValue);
    __twr_v1503 = (uint64_t)(&_mng_token1504);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1502)(__twr_v1503, _mng_buffer1500, _mng_ignore1501);
    __twr_v1505 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1506 = ((uint64_t (*)(uint64_t))__twr_v1505)(_mng_buffer1500);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1502)(__twr_v1503, _mng_buffer1500, _mng_ignore1501);
    __twr_v1507 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1507)();
}
void LexOperatorStrcmp(uint64_t _mng_buffer1508, uint64_t _mng_ignore1509) {
    uint64_t __twr_v1510;
    uint64_t __twr_v1511;
    uint64_t _mng_str11512[11];
    uint64_t __twr_v1513;
    uint64_t _mng_str21514[11];
    uint64_t __twr_v1515;
    uint64_t __twr_v1516;
    uint64_t _mng_token1517[4];
    uint64_t __twr_v1518;
    uint64_t __twr_v1519;
    uint64_t __twr_v1520;
    uint64_t __twr_v1521;
    uint64_t __twr_v1522;
    uint64_t __twr_v1523;
    uint64_t __twr_v1524;
    uint64_t __twr_v1525;
    uint64_t __twr_v1526;
    uint64_t __twr_v1527;
    uint64_t __twr_v1528;
    uint64_t __twr_v1529;
    uint64_t __twr_v1530;
    uint64_t __twr_v1531;
    __twr_v1510 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1511 = (uint64_t)(&_mng_str11512);
    ((void (*)(uint64_t))__twr_v1510)(__twr_v1511);
    __twr_v1513 = (uint64_t)(&_mng_str21514);
    ((void (*)(uint64_t))__twr_v1510)(__twr_v1513);
    __twr_v1515 = (uint64_t)(&LexCollectValue);
    __twr_v1516 = (uint64_t)(&_mng_token1517);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1515)(__twr_v1516, __twr_v1511, _mng_ignore1509);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1515)(__twr_v1516, __twr_v1513, _mng_ignore1509);
    __twr_v1518 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1518)(__twr_v1511);
    ((void (*)(uint64_t))__twr_v1518)(__twr_v1513);
    __twr_v1519 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1519)();
    __twr_v1520 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1521 = (uint64_t)(&TlCompareString);
    __twr_v1522 = 16ULL;
    __twr_v1523 = __twr_v1511 + __twr_v1522;
    __twr_v1524 = *(uint64_t*)(__twr_v1523);
    __twr_v1525 = __twr_v1513 + __twr_v1522;
    __twr_v1526 = *(uint64_t*)(__twr_v1525);
    __twr_v1527 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1521)(__twr_v1524, __twr_v1526);
    __twr_v1528 = 0ULL;
    __twr_v1529 = (__twr_v1527 == __twr_v1528);
    __twr_v1530 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1520)(_mng_buffer1508, __twr_v1529, __twr_v1530);
    __twr_v1531 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1531)(_mng_buffer1508, __twr_v1528);
}
void LexOperatorNot(uint64_t _mng_buffer1532, uint64_t _mng_ignore1533) {
    uint64_t __twr_v1534;
    uint64_t __twr_v1535;
    uint64_t _mng_token1536[4];
    uint64_t __twr_v1537;
    uint64_t __twr_v1538;
    uint64_t __twr_v1539;
    uint64_t __twr_v1540;
    uint64_t __twr_v1541;
    uint64_t __twr_v1542;
    uint64_t __twr_v1543;
    __twr_v1534 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1535 = (uint64_t)(&_mng_token1536);
    __twr_v1537 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1534)(__twr_v1535, _mng_ignore1533);
    __twr_v1538 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1538)();
    __twr_v1539 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1540 = !__twr_v1537;
    __twr_v1541 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1539)(_mng_buffer1532, __twr_v1540, __twr_v1541);
    __twr_v1542 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1543 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1542)(_mng_buffer1532, __twr_v1543);
}
void LexOperatorOr(uint64_t _mng_buffer1544, uint64_t _mng_ignore1545) {
    uint64_t __twr_v1546;
    uint64_t __twr_v1547;
    uint64_t _mng_token1548[4];
    uint64_t __twr_v1549;
    uint64_t __twr_v1550;
    uint64_t _mng_num21551;
    uint64_t __twr_v1552;
    uint64_t __twr_v1553;
    uint64_t __twr_v1554;
    uint64_t __twr_v1555;
    uint64_t __twr_v1556;
    uint64_t __twr_v1557;
    uint64_t __twr_v1558;
    uint64_t __twr_v1559;
    __twr_v1546 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1547 = (uint64_t)(&_mng_token1548);
    __twr_v1549 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1546)(__twr_v1547, _mng_ignore1545);
    __twr_v1550 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1546)(__twr_v1547, _mng_ignore1545);
    _mng_num21551 = __twr_v1550;
    __twr_v1552 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1552)();
    __twr_v1553 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (__twr_v1549) { goto __twr_l283; } else { goto __twr_l282; }
    __twr_l282:;
    if (_mng_num21551) { goto __twr_l283; } else { goto __twr_l284; }
    __twr_l283:;
    __twr_v1554 = 1ULL;
    __twr_v1555 = __twr_v1554;
    goto __twr_l285;
    __twr_l284:;
    __twr_v1556 = 0ULL;
    __twr_v1555 = __twr_v1556;
    __twr_l285:;
    __twr_v1557 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1553)(_mng_buffer1544, __twr_v1555, __twr_v1557);
    __twr_v1558 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1559 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1558)(_mng_buffer1544, __twr_v1559);
}
void LexOperatorAnd(uint64_t _mng_buffer1560, uint64_t _mng_ignore1561) {
    uint64_t __twr_v1562;
    uint64_t __twr_v1563;
    uint64_t _mng_token1564[4];
    uint64_t __twr_v1565;
    uint64_t __twr_v1566;
    uint64_t _mng_num21567;
    uint64_t __twr_v1568;
    uint64_t __twr_v1569;
    uint64_t __twr_v1570;
    uint64_t __twr_v1571;
    uint64_t __twr_v1572;
    uint64_t __twr_v1573;
    uint64_t __twr_v1574;
    uint64_t __twr_v1575;
    __twr_v1562 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1563 = (uint64_t)(&_mng_token1564);
    __twr_v1565 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1562)(__twr_v1563, _mng_ignore1561);
    __twr_v1566 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1562)(__twr_v1563, _mng_ignore1561);
    _mng_num21567 = __twr_v1566;
    __twr_v1568 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1568)();
    __twr_v1569 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (!(__twr_v1565)) { goto __twr_l288; } else { goto __twr_l286; }
    __twr_l286:;
    if (_mng_num21567) { goto __twr_l287; } else { goto __twr_l288; }
    __twr_l287:;
    __twr_v1570 = 1ULL;
    __twr_v1571 = __twr_v1570;
    goto __twr_l289;
    __twr_l288:;
    __twr_v1572 = 0ULL;
    __twr_v1571 = __twr_v1572;
    __twr_l289:;
    __twr_v1573 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1569)(_mng_buffer1560, __twr_v1571, __twr_v1573);
    __twr_v1574 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1575 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1574)(_mng_buffer1560, __twr_v1575);
}
void LexOperatorDefined(uint64_t _mng_buffer1576, uint64_t _mng_ignore1577) {
    uint64_t __twr_v1578;
    uint64_t __twr_v1579;
    uint64_t _mng_token1580[4];
    uint64_t __twr_v1581;
    uint64_t _mng_tokbuffer1582[8];
    uint64_t __twr_v1583;
    uint64_t __twr_v1584;
    uint64_t __twr_v1585;
    uint64_t __twr_v1586;
    uint64_t __twr_v1587;
    uint64_t __twr_v1588;
    uint64_t __twr_v1589;
    uint64_t __twr_v1590;
    uint64_t __twr_v1591;
    uint64_t __twr_v1592;
    __twr_v1578 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1579 = (uint64_t)(&_mng_token1580);
    __twr_v1581 = (uint64_t)(&_mng_tokbuffer1582);
    __twr_v1583 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1578)(__twr_v1579, __twr_v1581);
    __twr_v1584 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1584)();
    __twr_v1585 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1586 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1587 = *(uint64_t*)(__twr_v1586);
    __twr_v1588 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1585)(__twr_v1587, __twr_v1581);
    __twr_v1589 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1590 = (__twr_v1588 != __twr_v1583);
    __twr_v1591 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1589)(_mng_buffer1576, __twr_v1590, __twr_v1591);
    __twr_v1592 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1592)(_mng_buffer1576, __twr_v1583);
}
void LexOperatorBitNot(uint64_t _mng_buffer1593, uint64_t _mng_ignore1594) {
    uint64_t __twr_v1595;
    uint64_t __twr_v1596;
    uint64_t _mng_token1597[4];
    uint64_t __twr_v1598;
    uint64_t __twr_v1599;
    uint64_t __twr_v1600;
    uint64_t __twr_v1601;
    uint64_t __twr_v1602;
    uint64_t __twr_v1603;
    uint64_t __twr_v1604;
    __twr_v1595 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1596 = (uint64_t)(&_mng_token1597);
    __twr_v1598 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1595)(__twr_v1596, _mng_ignore1594);
    __twr_v1599 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1599)();
    __twr_v1600 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1601 = ~__twr_v1598;
    __twr_v1602 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1600)(_mng_buffer1593, __twr_v1601, __twr_v1602);
    __twr_v1603 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1604 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1603)(_mng_buffer1593, __twr_v1604);
}
void LexOperatorBitOr(uint64_t _mng_buffer1605, uint64_t _mng_ignore1606) {
    uint64_t __twr_v1607;
    uint64_t __twr_v1608;
    uint64_t _mng_token1609[4];
    uint64_t __twr_v1610;
    uint64_t __twr_v1611;
    uint64_t __twr_v1612;
    uint64_t __twr_v1613;
    uint64_t __twr_v1614;
    uint64_t __twr_v1615;
    uint64_t __twr_v1616;
    uint64_t __twr_v1617;
    __twr_v1607 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1608 = (uint64_t)(&_mng_token1609);
    __twr_v1610 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1607)(__twr_v1608, _mng_ignore1606);
    __twr_v1611 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1607)(__twr_v1608, _mng_ignore1606);
    __twr_v1612 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1612)();
    __twr_v1613 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1614 = __twr_v1610 | __twr_v1611;
    __twr_v1615 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1613)(_mng_buffer1605, __twr_v1614, __twr_v1615);
    __twr_v1616 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1617 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1616)(_mng_buffer1605, __twr_v1617);
}
void LexOperatorBitXor(uint64_t _mng_buffer1618, uint64_t _mng_ignore1619) {
    uint64_t __twr_v1620;
    uint64_t __twr_v1621;
    uint64_t _mng_token1622[4];
    uint64_t __twr_v1623;
    uint64_t __twr_v1624;
    uint64_t __twr_v1625;
    uint64_t __twr_v1626;
    uint64_t __twr_v1627;
    uint64_t __twr_v1628;
    uint64_t __twr_v1629;
    uint64_t __twr_v1630;
    __twr_v1620 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1621 = (uint64_t)(&_mng_token1622);
    __twr_v1623 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1620)(__twr_v1621, _mng_ignore1619);
    __twr_v1624 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1620)(__twr_v1621, _mng_ignore1619);
    __twr_v1625 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1625)();
    __twr_v1626 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1627 = __twr_v1623 ^ __twr_v1624;
    __twr_v1628 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1626)(_mng_buffer1618, __twr_v1627, __twr_v1628);
    __twr_v1629 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1630 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1629)(_mng_buffer1618, __twr_v1630);
}
void LexOperatorBitAnd(uint64_t _mng_buffer1631, uint64_t _mng_ignore1632) {
    uint64_t __twr_v1633;
    uint64_t __twr_v1634;
    uint64_t _mng_token1635[4];
    uint64_t __twr_v1636;
    uint64_t __twr_v1637;
    uint64_t __twr_v1638;
    uint64_t __twr_v1639;
    uint64_t __twr_v1640;
    uint64_t __twr_v1641;
    uint64_t __twr_v1642;
    uint64_t __twr_v1643;
    __twr_v1633 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1634 = (uint64_t)(&_mng_token1635);
    __twr_v1636 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1633)(__twr_v1634, _mng_ignore1632);
    __twr_v1637 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1633)(__twr_v1634, _mng_ignore1632);
    __twr_v1638 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1638)();
    __twr_v1639 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1640 = __twr_v1636 & __twr_v1637;
    __twr_v1641 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1639)(_mng_buffer1631, __twr_v1640, __twr_v1641);
    __twr_v1642 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1643 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1642)(_mng_buffer1631, __twr_v1643);
}
void LexParseDirective() {
    uint64_t __twr_v1644;
    uint64_t __twr_v1645;
    uint64_t __twr_v1646;
    uint64_t _mng_buffer1647[8];
    uint64_t __twr_v1648;
    uint64_t __twr_v1649;
    uint64_t __twr_v1650;
    uint64_t _mng_directive1651;
    uint64_t __twr_v1652;
    uint64_t __twr_v1653;
    uint64_t __twr_v1654;
    uint64_t __twr_v1655;
    uint64_t __twr_v1656;
    uint64_t __twr_v1657;
    uint64_t __twr_v1658;
    __twr_v1644 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1645 = (uint64_t)(&LexDirectiveToken);
    __twr_v1646 = (uint64_t)(&_mng_buffer1647);
    ((void (*)(uint64_t, uint64_t))__twr_v1644)(__twr_v1645, __twr_v1646);
    __twr_v1648 = (uint64_t)(&TlLookupHashTable);
    __twr_v1649 = (uint64_t)(&LexDirectiveHashTable);
    __twr_v1650 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1648)(__twr_v1649, __twr_v1646);
    _mng_directive1651 = __twr_v1650;
    if (__twr_v1650) { goto __twr_l290; } else { goto __twr_l291; }
    __twr_l291:;
    __twr_v1652 = (uint64_t)(&LexTokenError);
    __twr_v1653 = (uint64_t)(&LexDirectiveToken);
    __twr_v1654 = (uint64_t)(&"Unknown directive");
    __twr_v1655 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1652)(__twr_v1653, __twr_v1654, __twr_v1655, __twr_v1655, __twr_v1655);
    __twr_l290:;
    __twr_v1656 = 48ULL;
    __twr_v1657 = _mng_directive1651 + __twr_v1656;
    __twr_v1658 = *(uint64_t*)(__twr_v1657);
    ((void (*)())__twr_v1658)();
}
void LexInitializePreprocessor() {
    uint64_t __twr_v1659;
    uint64_t __twr_v1660;
    uint64_t __twr_v1661;
    uint64_t __twr_v1662;
    uint64_t __twr_v1663;
    uint64_t __twr_v1664;
    uint64_t __twr_v1665;
    uint64_t __twr_v1666;
    uint64_t __twr_v1667;
    uint64_t __twr_v1668;
    uint64_t __twr_v1669;
    uint64_t __twr_v1670;
    uint64_t __twr_v1671;
    uint64_t __twr_v1672;
    uint64_t __twr_v1673;
    uint64_t __twr_v1674;
    uint64_t __twr_v1675;
    uint64_t __twr_v1676;
    uint64_t __twr_v1677;
    uint64_t __twr_v1678;
    uint64_t __twr_v1679;
    uint64_t __twr_v1680;
    uint64_t __twr_v1681;
    uint64_t __twr_v1682;
    uint64_t __twr_v1683;
    uint64_t __twr_v1684;
    uint64_t __twr_v1685;
    uint64_t __twr_v1686;
    uint64_t __twr_v1687;
    uint64_t __twr_v1688;
    uint64_t __twr_v1689;
    uint64_t __twr_v1690;
    uint64_t __twr_v1691;
    uint64_t __twr_v1692;
    uint64_t __twr_v1693;
    uint64_t __twr_v1694;
    uint64_t __twr_v1695;
    uint64_t __twr_v1696;
    uint64_t __twr_v1697;
    uint64_t __twr_v1698;
    uint64_t __twr_v1699;
    uint64_t __twr_v1700;
    uint64_t __twr_v1701;
    uint64_t __twr_v1702;
    uint64_t __twr_v1703;
    uint64_t __twr_v1704;
    uint64_t __twr_v1705;
    uint64_t __twr_v1706;
    uint64_t __twr_v1707;
    uint64_t __twr_v1708;
    uint64_t __twr_v1709;
    uint64_t __twr_v1710;
    uint64_t __twr_v1711;
    uint64_t __twr_v1712;
    uint64_t __twr_v1713;
    uint64_t __twr_v1714;
    uint64_t __twr_v1715;
    uint64_t __twr_v1716;
    uint64_t __twr_v1717;
    uint64_t __twr_v1718;
    uint64_t __twr_v1719;
    uint64_t __twr_v1720;
    uint64_t __twr_v1721;
    uint64_t __twr_v1722;
    uint64_t __twr_v1723;
    uint64_t __twr_v1724;
    uint64_t __twr_v1725;
    uint64_t __twr_v1726;
    uint64_t __twr_v1727;
    uint64_t __twr_v1728;
    uint64_t __twr_v1729;
    uint64_t __twr_v1730;
    uint64_t __twr_v1731;
    uint64_t __twr_v1732;
    uint64_t __twr_v1733;
    uint64_t __twr_v1734;
    uint64_t __twr_v1735;
    uint64_t __twr_v1736;
    uint64_t __twr_v1737;
    uint64_t __twr_v1738;
    uint64_t __twr_v1739;
    uint64_t __twr_v1740;
    uint64_t __twr_v1741;
    uint64_t __twr_v1742;
    __twr_v1659 = (uint64_t)(&TlInitializeHashTable);
    __twr_v1660 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t))__twr_v1659)(__twr_v1660);
    __twr_v1661 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t))__twr_v1659)(__twr_v1661);
    __twr_v1662 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1663 = (uint64_t)(&LexIfStack);
    ((void (*)(uint64_t))__twr_v1662)(__twr_v1663);
    __twr_v1664 = (uint64_t)(&LexCreateMacroTable);
    __twr_v1665 = 0ULL;
    __twr_v1666 = ((uint64_t (*)(uint64_t))__twr_v1664)(__twr_v1665);
    __twr_v1667 = (uint64_t)(&LexRootMacroScope);
    *(uint64_t*)(__twr_v1667) = __twr_v1666;
    __twr_v1668 = *(uint64_t*)(__twr_v1667);
    __twr_v1669 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v1669) = __twr_v1668;
    __twr_v1670 = (uint64_t)(&TlInitializeZone);
    __twr_v1671 = (uint64_t)(&LexMacroZone);
    __twr_v1672 = 258ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1670)(__twr_v1671, __twr_v1672);
    __twr_v1673 = (uint64_t)(&LexInsertDirective);
    __twr_v1674 = (uint64_t)(&"INCLUDE");
    __twr_v1675 = (uint64_t)(&LexParseInclude);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1674, __twr_v1675);
    __twr_v1676 = (uint64_t)(&"DEFINE");
    __twr_v1677 = (uint64_t)(&LexParseDefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1676, __twr_v1677);
    __twr_v1678 = (uint64_t)(&"MACRO");
    __twr_v1679 = (uint64_t)(&LexParseMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1678, __twr_v1679);
    __twr_v1680 = (uint64_t)(&"IF");
    __twr_v1681 = (uint64_t)(&LexParseIf);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1680, __twr_v1681);
    __twr_v1682 = (uint64_t)(&"ELSE");
    __twr_v1683 = (uint64_t)(&LexParseElse);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1682, __twr_v1683);
    __twr_v1684 = (uint64_t)(&"ELSEIF");
    __twr_v1685 = (uint64_t)(&LexParseElseif);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1684, __twr_v1685);
    __twr_v1686 = (uint64_t)(&"END");
    __twr_v1687 = (uint64_t)(&LexParseEnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1686, __twr_v1687);
    __twr_v1688 = (uint64_t)(&"UNDEFINE");
    __twr_v1689 = (uint64_t)(&LexParseUndefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1688, __twr_v1689);
    __twr_v1690 = (uint64_t)(&"ERROR");
    __twr_v1691 = (uint64_t)(&LexParseError);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1690, __twr_v1691);
    __twr_v1692 = (uint64_t)(&"PRINT");
    __twr_v1693 = (uint64_t)(&LexParsePrint);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1692, __twr_v1693);
    __twr_v1694 = (uint64_t)(&"ASM");
    __twr_v1695 = (uint64_t)(&LexParseAsm);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1694, __twr_v1695);
    __twr_v1696 = (uint64_t)(&"SECTION");
    __twr_v1697 = (uint64_t)(&LexParseSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1696, __twr_v1697);
    __twr_v1698 = (uint64_t)(&"ENTERSECTION");
    __twr_v1699 = (uint64_t)(&LexParseEnterSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1698, __twr_v1699);
    __twr_v1700 = (uint64_t)(&"LEAVESECTION");
    __twr_v1701 = (uint64_t)(&LexParseLeaveSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1673)(__twr_v1700, __twr_v1701);
    __twr_v1702 = (uint64_t)(&LexInsertOperator);
    __twr_v1703 = (uint64_t)(&"==");
    __twr_v1704 = (uint64_t)(&LexOperatorEquals);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1703, __twr_v1704);
    __twr_v1705 = (uint64_t)(&"<=");
    __twr_v1706 = (uint64_t)(&LexOperatorLteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1705, __twr_v1706);
    __twr_v1707 = (uint64_t)(&">=");
    __twr_v1708 = (uint64_t)(&LexOperatorGteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1707, __twr_v1708);
    __twr_v1709 = (uint64_t)(&"!=");
    __twr_v1710 = (uint64_t)(&LexOperatorNeq);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1709, __twr_v1710);
    __twr_v1711 = (uint64_t)(&"+");
    __twr_v1712 = (uint64_t)(&LexOperatorAdd);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1711, __twr_v1712);
    __twr_v1713 = (uint64_t)(&"-");
    __twr_v1714 = (uint64_t)(&LexOperatorSub);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1713, __twr_v1714);
    __twr_v1715 = (uint64_t)(&"*");
    __twr_v1716 = (uint64_t)(&LexOperatorMul);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1715, __twr_v1716);
    __twr_v1717 = (uint64_t)(&"/");
    __twr_v1718 = (uint64_t)(&LexOperatorDiv);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1717, __twr_v1718);
    __twr_v1719 = (uint64_t)(&"<<");
    __twr_v1720 = (uint64_t)(&LexOperatorLsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1719, __twr_v1720);
    __twr_v1721 = (uint64_t)(&">>");
    __twr_v1722 = (uint64_t)(&LexOperatorRsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1721, __twr_v1722);
    __twr_v1723 = (uint64_t)(&"STRCAT");
    __twr_v1724 = (uint64_t)(&LexOperatorStrcat);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1723, __twr_v1724);
    __twr_v1725 = (uint64_t)(&"STRCMP");
    __twr_v1726 = (uint64_t)(&LexOperatorStrcmp);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1725, __twr_v1726);
    __twr_v1727 = (uint64_t)(&"NOT");
    __twr_v1728 = (uint64_t)(&LexOperatorNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1727, __twr_v1728);
    __twr_v1729 = (uint64_t)(&"OR");
    __twr_v1730 = (uint64_t)(&LexOperatorOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1729, __twr_v1730);
    __twr_v1731 = (uint64_t)(&"AND");
    __twr_v1732 = (uint64_t)(&LexOperatorAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1731, __twr_v1732);
    __twr_v1733 = (uint64_t)(&"DEFINED");
    __twr_v1734 = (uint64_t)(&LexOperatorDefined);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1733, __twr_v1734);
    __twr_v1735 = (uint64_t)(&"~");
    __twr_v1736 = (uint64_t)(&LexOperatorBitNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1735, __twr_v1736);
    __twr_v1737 = (uint64_t)(&"|");
    __twr_v1738 = (uint64_t)(&LexOperatorBitOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1737, __twr_v1738);
    __twr_v1739 = (uint64_t)(&"$");
    __twr_v1740 = (uint64_t)(&LexOperatorBitXor);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1739, __twr_v1740);
    __twr_v1741 = (uint64_t)(&"&");
    __twr_v1742 = (uint64_t)(&LexOperatorBitAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1702)(__twr_v1741, __twr_v1742);
}

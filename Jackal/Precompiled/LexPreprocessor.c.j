#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern void TlInitializeZone(uint64_t _mng_zone96, uint64_t _mng_blocksize97);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone98);
extern void TlFreeToZone(uint64_t _mng_zone99, uint64_t _mng_block100);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant101);
extern void TlPunchValue(uint64_t _mng_ptr102, uint64_t _mng_value103, uint64_t _mng_bytes104);
extern void JklCompileProgram(uint64_t _mng_argc105, uint64_t _mng_argv106);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg107);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename108, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock109, uint64_t _mng_filepath110);
extern uint64_t LexLookupSection(uint64_t _mng_name111);
extern void LexPushSection(uint64_t _mng_section112);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope113);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg114);
extern void LexExpandMacro(uint64_t _mng_macro115, uint64_t _mng_token116);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream117, uint64_t _mng_macro118);
extern void LexUninitializeStream(uint64_t _mng_stream119);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream120);
extern void LexPushStream(uint64_t _mng_stream121);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream122, uint64_t _mng_fileblock123, uint64_t _mng_handle124);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock125, uint64_t _mng_handle126);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope127);
extern uint64_t LexResetScope(uint64_t _mng_scope128);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope129);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest130, uint64_t _mng_src131);
extern void LexGetToken(uint64_t _mng_token132);
extern void LexPutbackToken(uint64_t _mng_token133);
extern uint64_t LexMatchToken(uint64_t _mng_token134, uint64_t _mng_type135, uint64_t _mng_subtype136);
extern void LexStreamError(uint64_t _mng_str137, uint64_t _mng_err1138, uint64_t _mng_err2139, uint64_t _mng_err3140);
extern void LexTokenError(uint64_t _mng_token141, uint64_t _mng_str142, uint64_t _mng_err1143, uint64_t _mng_err2144, uint64_t _mng_err3145);
extern uint64_t LexCrunchNumber(uint64_t _mng_token146, uint64_t _mng_buffer147);
uint64_t LexRootMacroScope = 0ULL;
uint64_t LexCurrentMacroScope = 0ULL;
uint32_t LexMacroDepth = 0ULL;
uint64_t LexAsmBlockListHead = 0ULL;
uint64_t LexAsmBlockListTail = 0ULL;
uint64_t LexDirectiveHashTable[196];
uint64_t LexOperatorHashTable[196];
uint64_t LexIfStack[11];
uint64_t LexMacroZone[2];
uint64_t LexDirectiveToken[4];
uint64_t LexDirectiveBumpArray[112];
uint64_t LexDirectiveBumpIndex = 0ULL;
void LexInsertDirective(uint64_t _mng_name148, uint64_t _mng_parsefunc149) {
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t _mng_directive156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    __twr_v150 = (uint64_t)(&LexDirectiveBumpArray);
    __twr_v151 = (uint64_t)(&LexDirectiveBumpIndex);
    __twr_v152 = *(uint64_t*)(__twr_v151);
    __twr_v153 = 56ULL;
    __twr_v154 = __twr_v152 * __twr_v153;
    __twr_v155 = __twr_v150 + __twr_v154;
    _mng_directive156 = __twr_v155;
    __twr_v157 = 1ULL;
    __twr_v158 = __twr_v152 + __twr_v157;
    *(uint64_t*)(__twr_v151) = __twr_v158;
    __twr_v159 = 48ULL;
    __twr_v160 = _mng_directive156 + __twr_v159;
    *(uint64_t*)(__twr_v160) = _mng_parsefunc149;
    __twr_v161 = (uint64_t)(&TlInsertHashTable);
    __twr_v162 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v161)(__twr_v162, _mng_directive156, _mng_name148);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexOperatorBumpArray[224];
uint64_t LexOperatorBumpIndex = 0ULL;
void LexInsertOperator(uint64_t _mng_name163, uint64_t _mng_parsefunc164) {
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t _mng_operator171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    __twr_v165 = (uint64_t)(&LexOperatorBumpArray);
    __twr_v166 = (uint64_t)(&LexOperatorBumpIndex);
    __twr_v167 = *(uint64_t*)(__twr_v166);
    __twr_v168 = 56ULL;
    __twr_v169 = __twr_v167 * __twr_v168;
    __twr_v170 = __twr_v165 + __twr_v169;
    _mng_operator171 = __twr_v170;
    __twr_v172 = 1ULL;
    __twr_v173 = __twr_v167 + __twr_v172;
    *(uint64_t*)(__twr_v166) = __twr_v173;
    __twr_v174 = 48ULL;
    __twr_v175 = _mng_operator171 + __twr_v174;
    *(uint64_t*)(__twr_v175) = _mng_parsefunc164;
    __twr_v176 = (uint64_t)(&TlInsertHashTable);
    __twr_v177 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v176)(__twr_v177, _mng_operator171, _mng_name163);
    __twr_l2:;
    _jkl_epilogue:;
}
void LexMacroDelete(uint64_t _mng_entry178) {
    uint64_t _mng_macro179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    _mng_macro179 = _mng_entry178;
    __twr_v180 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v181 = 80ULL;
    __twr_v182 = _mng_macro179 + __twr_v181;
    ((void (*)(uint64_t))__twr_v180)(__twr_v182);
    __twr_v183 = (uint64_t)(&TlFreeToZone);
    __twr_v184 = (uint64_t)(&LexMacroZone);
    ((void (*)(uint64_t, uint64_t))__twr_v183)(__twr_v184, _mng_entry178);
    __twr_l3:;
    _jkl_epilogue:;
}
uint64_t LexCreateMacroTable(uint64_t _mng_outerscope185) {
    uint64_t _jkl_retv;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    __twr_v186 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v187 = (uint64_t)(&LexMacroDelete);
    __twr_v188 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v186)(_mng_outerscope185, __twr_v187);
    _jkl_retv = __twr_v188;
    goto _jkl_epilogue;
    __twr_l4:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexNextNonWhitespaceCharacter(uint64_t _mng_token189) {
    uint64_t _jkl_retv;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t _mng_stream192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t _mng_byte209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    __twr_v190 = (uint64_t)(&LexCurrentStream);
    __twr_v191 = *(uint64_t*)(__twr_v190);
    _mng_stream192 = __twr_v191;
    if (!(_mng_stream192)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v193 = 8ULL;
    __twr_v194 = _mng_stream192 + __twr_v193;
    __twr_v195 = *(uint64_t*)(__twr_v194);
    __twr_v196 = _mng_token189 + __twr_v193;
    *(uint64_t*)(__twr_v196) = __twr_v195;
    __twr_v197 = 44ULL;
    __twr_v198 = _mng_stream192 + __twr_v197;
    __twr_v199 = *(uint32_t*)(__twr_v198);
    __twr_v200 = 16ULL;
    __twr_v201 = _mng_token189 + __twr_v200;
    *(uint32_t*)(__twr_v201) = __twr_v199;
    __twr_v202 = 48ULL;
    __twr_v203 = _mng_stream192 + __twr_v202;
    __twr_v204 = *(uint32_t*)(__twr_v203);
    __twr_v205 = 20ULL;
    __twr_v206 = _mng_token189 + __twr_v205;
    *(uint32_t*)(__twr_v206) = __twr_v204;
    __twr_l6:;
    __twr_v207 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v208 = ((uint64_t (*)())__twr_v207)();
    _mng_byte209 = __twr_v208;
    __twr_v210 = (uint64_t)(&LexCharTreatment);
    __twr_v211 = __twr_v210 + _mng_byte209;
    __twr_v212 = *(uint8_t*)(__twr_v211);
    __twr_v213 = 3ULL;
    if (__twr_v212 != __twr_v213) { goto __twr_l9; } else { goto __twr_l8; }
    __twr_l8:;
    __twr_v214 = (uint64_t)(&LexCurrentStream);
    __twr_v215 = *(uint64_t*)(__twr_v214);
    _mng_stream192 = __twr_v215;
    if (!(_mng_stream192)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v216 = 8ULL;
    __twr_v217 = _mng_stream192 + __twr_v216;
    __twr_v218 = *(uint64_t*)(__twr_v217);
    __twr_v219 = _mng_token189 + __twr_v216;
    *(uint64_t*)(__twr_v219) = __twr_v218;
    __twr_v220 = 44ULL;
    __twr_v221 = _mng_stream192 + __twr_v220;
    __twr_v222 = *(uint32_t*)(__twr_v221);
    __twr_v223 = 16ULL;
    __twr_v224 = _mng_token189 + __twr_v223;
    *(uint32_t*)(__twr_v224) = __twr_v222;
    __twr_v225 = 48ULL;
    __twr_v226 = _mng_stream192 + __twr_v225;
    __twr_v227 = *(uint32_t*)(__twr_v226);
    __twr_v228 = 20ULL;
    __twr_v229 = _mng_token189 + __twr_v228;
    *(uint32_t*)(__twr_v229) = __twr_v227;
    __twr_l11:;
    __twr_v230 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v231 = ((uint64_t (*)())__twr_v230)();
    _mng_byte209 = __twr_v231;
    __twr_l10:;
    __twr_v232 = (uint64_t)(&LexCharTreatment);
    __twr_v233 = __twr_v232 + _mng_byte209;
    __twr_v234 = *(uint8_t*)(__twr_v233);
    __twr_v235 = 3ULL;
    if (__twr_v234 == __twr_v235) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    if (_mng_byte209) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v236 = (uint64_t)(&LexStreamError);
    __twr_v237 = (uint64_t)(&"Unexpected EOF while parsing directive");
    __twr_v238 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v236)(__twr_v237, __twr_v238, __twr_v238, __twr_v238);
    __twr_l13:;
    _jkl_retv = _mng_byte209;
    goto _jkl_epilogue;
    __twr_l5:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectDirectiveToken(uint64_t _mng_token239, uint64_t _mng_buffer240) {
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t _mng_byte243;
    uint64_t _mng_len244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    __twr_v241 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v242 = ((uint64_t (*)(uint64_t))__twr_v241)(_mng_token239);
    _mng_byte243 = __twr_v242;
    _mng_len244 = 0ULL;
    __twr_v245 = (uint64_t)(&LexCharTreatment);
    __twr_v246 = __twr_v245 + _mng_byte243;
    __twr_v247 = *(uint8_t*)(__twr_v246);
    __twr_v248 = 3ULL;
    if (__twr_v247 == __twr_v248) { goto __twr_l17; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v249 = (uint64_t)(&LexCharTreatment);
    __twr_v250 = __twr_v249 + _mng_byte243;
    __twr_v251 = *(uint8_t*)(__twr_v250);
    if (!(__twr_v251)) { goto __twr_l19; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v252 = (uint64_t)(&LexCharTreatment);
    __twr_v253 = 1ULL;
    __twr_v254 = __twr_v252 + _mng_byte243;
    __twr_v255 = *(uint8_t*)(__twr_v254);
    if (__twr_v255 == __twr_v253) { goto __twr_l19; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v256 = (uint64_t)(&LexCharTreatment);
    __twr_v257 = __twr_v256 + _mng_byte243;
    __twr_v258 = *(uint8_t*)(__twr_v257);
    __twr_v259 = 2ULL;
    if (__twr_v258 == __twr_v259) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v260 = (uint64_t)(&LexTokenError);
    __twr_v261 = (uint64_t)(&"Illegal character in token");
    __twr_v262 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v260)(_mng_token239, __twr_v261, __twr_v262, __twr_v262, __twr_v262);
    __twr_l19:;
    __twr_v263 = 63ULL;
    if (_mng_len244 != __twr_v263) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v264 = (uint64_t)(&LexTokenError);
    __twr_v265 = (uint64_t)(&"Token length too great");
    __twr_v266 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v264)(_mng_token239, __twr_v265, __twr_v266, __twr_v266, __twr_v266);
    __twr_l23:;
    *(uint8_t*)(_mng_buffer240) = _mng_byte243;
    __twr_v267 = 1ULL;
    __twr_v268 = _mng_buffer240 + __twr_v267;
    _mng_buffer240 = __twr_v268;
    __twr_v269 = _mng_len244 + __twr_v267;
    _mng_len244 = __twr_v269;
    __twr_v270 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v271 = ((uint64_t (*)())__twr_v270)();
    _mng_byte243 = __twr_v271;
    __twr_l18:;
    __twr_v272 = (uint64_t)(&LexCharTreatment);
    __twr_v273 = __twr_v272 + _mng_byte243;
    __twr_v274 = *(uint8_t*)(__twr_v273);
    __twr_v275 = 3ULL;
    if (__twr_v274 != __twr_v275) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v276 = 0ULL;
    *(uint8_t*)(_mng_buffer240) = __twr_v276;
    __twr_l15:;
    _jkl_epilogue:;
}
void LexGetPreprocessorString(uint64_t _mng_token277, uint64_t _mng_buffer278) {
    uint64_t _mng_backslash279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t _mng_byte282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    _mng_backslash279 = 0ULL;
    __twr_l26:;
    __twr_v280 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v281 = ((uint64_t (*)())__twr_v280)();
    _mng_byte282 = __twr_v281;
    if (_mng_byte282) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v283 = (uint64_t)(&LexTokenError);
    __twr_v284 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v285 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v283)(_mng_token277, __twr_v284, __twr_v285, __twr_v285, __twr_v285);
    __twr_l28:;
    __twr_v286 = 34ULL;
    if (_mng_byte282 != __twr_v286) { goto __twr_l30; } else { goto __twr_l32; }
    __twr_l32:;
    if (_mng_backslash279) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    __twr_v287 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v287)(_mng_buffer278, _mng_byte282);
    if (!(_mng_backslash279)) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    _mng_backslash279 = 0ULL;
    goto __twr_l26;
    __twr_l33:;
    __twr_v288 = 92ULL;
    __twr_v289 = (_mng_byte282 == __twr_v288);
    _mng_backslash279 = __twr_v289;
    goto __twr_l26;
    __twr_l27:;
    __twr_l25:;
    _jkl_epilogue:;
}
void LexCollectString(uint64_t _mng_token290, uint64_t _mng_buffer291) {
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t _mng_byte294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    __twr_v292 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v293 = ((uint64_t (*)(uint64_t))__twr_v292)(_mng_token290);
    _mng_byte294 = __twr_v293;
    __twr_v295 = 34ULL;
    if (_mng_byte294 == __twr_v295) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    __twr_v296 = (uint64_t)(&LexTokenError);
    __twr_v297 = (uint64_t)(&"Expected a string");
    __twr_v298 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v296)(_mng_token290, __twr_v297, __twr_v298, __twr_v298, __twr_v298);
    __twr_l36:;
    __twr_v299 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v299)(_mng_token290, _mng_buffer291);
    __twr_v300 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v301 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v300)(_mng_buffer291, __twr_v301);
    __twr_l35:;
    _jkl_epilogue:;
}
void LexGetComplexString(uint64_t _mng_token302, uint64_t _mng_buffer303) {
    uint64_t _mng_bracketdepth304;
    uint64_t _mng_comment305;
    uint64_t _mng_backslash306;
    uint64_t _mng_instring307;
    uint64_t _mng_inliteral308;
    uint64_t _mng_sawforwardslash309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t _mng_byte312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    _mng_bracketdepth304 = 1ULL;
    _mng_comment305 = 0ULL;
    _mng_backslash306 = 0ULL;
    _mng_instring307 = 0ULL;
    _mng_inliteral308 = 0ULL;
    _mng_sawforwardslash309 = 0ULL;
    __twr_l39:;
    __twr_v310 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v311 = ((uint64_t (*)())__twr_v310)();
    _mng_byte312 = __twr_v311;
    if (_mng_byte312) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v313 = (uint64_t)(&LexTokenError);
    __twr_v314 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v315 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v313)(_mng_token302, __twr_v314, __twr_v315, __twr_v315, __twr_v315);
    __twr_l41:;
    if (!(_mng_comment305)) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v316 = 10ULL;
    if (_mng_byte312 != __twr_v316) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_comment305 = 0ULL;
    goto __twr_l46;
    __twr_l48:;
    _mng_byte312 = 0ULL;
    goto __twr_l39;
    __twr_l46:;
    goto __twr_l43;
    __twr_l45:;
    __twr_v317 = 47ULL;
    if (_mng_byte312 == __twr_v317) { goto __twr_l43; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_sawforwardslash309 = 0ULL;
    __twr_l43:;
    if (!(_mng_backslash306)) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_backslash306 = 0ULL;
    goto __twr_l50;
    __twr_l52:;
    __twr_v318 = 92ULL;
    if (_mng_byte312 != __twr_v318) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_backslash306 = 1ULL;
    goto __twr_l50;
    __twr_l54:;
    if (!(_mng_instring307)) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v319 = 34ULL;
    __twr_v320 = (_mng_byte312 == __twr_v319);
    __twr_v321 = !__twr_v320;
    _mng_instring307 = __twr_v321;
    goto __twr_l50;
    __twr_l56:;
    if (!(_mng_inliteral308)) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v322 = 39ULL;
    __twr_v323 = (_mng_byte312 == __twr_v322);
    __twr_v324 = !__twr_v323;
    _mng_inliteral308 = __twr_v324;
    goto __twr_l50;
    __twr_l58:;
    __twr_v325 = 47ULL;
    if (_mng_byte312 != __twr_v325) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    if (!(_mng_sawforwardslash309)) { goto __twr_l63; } else { goto __twr_l62; }
    __twr_l62:;
    _mng_sawforwardslash309 = 0ULL;
    _mng_comment305 = 1ULL;
    goto __twr_l61;
    __twr_l63:;
    _mng_sawforwardslash309 = 1ULL;
    __twr_l61:;
    goto __twr_l50;
    __twr_l60:;
    __twr_v326 = 34ULL;
    if (_mng_byte312 != __twr_v326) { goto __twr_l65; } else { goto __twr_l64; }
    __twr_l64:;
    _mng_instring307 = 1ULL;
    goto __twr_l50;
    __twr_l65:;
    __twr_v327 = 39ULL;
    if (_mng_byte312 != __twr_v327) { goto __twr_l67; } else { goto __twr_l66; }
    __twr_l66:;
    _mng_inliteral308 = 1ULL;
    goto __twr_l50;
    __twr_l67:;
    __twr_v328 = 91ULL;
    if (_mng_byte312 != __twr_v328) { goto __twr_l69; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v329 = 1ULL;
    __twr_v330 = _mng_bracketdepth304 + __twr_v329;
    _mng_bracketdepth304 = __twr_v330;
    goto __twr_l50;
    __twr_l69:;
    __twr_v331 = 93ULL;
    if (_mng_byte312 != __twr_v331) { goto __twr_l50; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v332 = 1ULL;
    __twr_v333 = _mng_bracketdepth304 - __twr_v332;
    _mng_bracketdepth304 = __twr_v333;
    if (_mng_bracketdepth304) { goto __twr_l71; } else { goto __twr_l72; }
    __twr_l72:;
    goto __twr_l40;
    __twr_l71:;
    __twr_l50:;
    __twr_v334 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v334)(_mng_buffer303, _mng_byte312);
    _mng_byte312 = 0ULL;
    goto __twr_l39;
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentContents(uint64_t _mng_token335, uint64_t _mng_buffer336) {
    uint64_t _jkl_retv;
    uint64_t _mng_bracketdepth337;
    uint64_t _mng_comment338;
    uint64_t _mng_backslash339;
    uint64_t _mng_instring340;
    uint64_t _mng_inliteral341;
    uint64_t _mng_sawforwardslash342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t _mng_byte345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    _mng_bracketdepth337 = 1ULL;
    _mng_comment338 = 0ULL;
    _mng_backslash339 = 0ULL;
    _mng_instring340 = 0ULL;
    _mng_inliteral341 = 0ULL;
    _mng_sawforwardslash342 = 0ULL;
    __twr_l74:;
    __twr_v343 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v344 = ((uint64_t (*)(uint64_t))__twr_v343)(_mng_token335);
    _mng_byte345 = __twr_v344;
    __twr_v346 = 41ULL;
    if (_mng_byte345 != __twr_v346) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v347 = 2ULL;
    _jkl_retv = __twr_v347;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v348 = 44ULL;
    if (_mng_byte345 != __twr_v348) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    goto __twr_l74;
    __twr_l78:;
    goto __twr_l75;
    goto __twr_l74;
    __twr_l75:;
    __twr_l80:;
    if (!(_mng_comment338)) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v349 = 10ULL;
    if (_mng_byte345 != __twr_v349) { goto __twr_l84; } else { goto __twr_l83; }
    __twr_l83:;
    _mng_comment338 = 0ULL;
    goto __twr_l82;
    __twr_l84:;
    __twr_v350 = 47ULL;
    if (_mng_byte345 == __twr_v350) { goto __twr_l82; } else { goto __twr_l86; }
    __twr_l86:;
    _mng_sawforwardslash342 = 0ULL;
    __twr_l82:;
    if (!(_mng_comment338)) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    goto __twr_l87;
    __twr_l89:;
    if (!(_mng_backslash339)) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    _mng_backslash339 = 0ULL;
    goto __twr_l87;
    __twr_l91:;
    __twr_v351 = 92ULL;
    if (_mng_byte345 != __twr_v351) { goto __twr_l93; } else { goto __twr_l92; }
    __twr_l92:;
    _mng_backslash339 = 1ULL;
    goto __twr_l87;
    __twr_l93:;
    if (!(_mng_instring340)) { goto __twr_l95; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v352 = 34ULL;
    __twr_v353 = (_mng_byte345 == __twr_v352);
    __twr_v354 = !__twr_v353;
    _mng_instring340 = __twr_v354;
    goto __twr_l87;
    __twr_l95:;
    if (!(_mng_inliteral341)) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v355 = 39ULL;
    __twr_v356 = (_mng_byte345 == __twr_v355);
    __twr_v357 = !__twr_v356;
    _mng_inliteral341 = __twr_v357;
    goto __twr_l87;
    __twr_l97:;
    __twr_v358 = 47ULL;
    if (_mng_byte345 != __twr_v358) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    if (!(_mng_sawforwardslash342)) { goto __twr_l102; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v359 = 1ULL;
    __twr_v360 = *(uint64_t*)(_mng_buffer336);
    __twr_v361 = __twr_v360 - __twr_v359;
    *(uint64_t*)(_mng_buffer336) = __twr_v361;
    _mng_sawforwardslash342 = 0ULL;
    _mng_comment338 = 1ULL;
    goto __twr_l100;
    __twr_l102:;
    _mng_sawforwardslash342 = 1ULL;
    __twr_l100:;
    goto __twr_l87;
    __twr_l99:;
    __twr_v362 = 34ULL;
    if (_mng_byte345 != __twr_v362) { goto __twr_l104; } else { goto __twr_l103; }
    __twr_l103:;
    _mng_instring340 = 1ULL;
    goto __twr_l87;
    __twr_l104:;
    __twr_v363 = 39ULL;
    if (_mng_byte345 != __twr_v363) { goto __twr_l106; } else { goto __twr_l105; }
    __twr_l105:;
    _mng_inliteral341 = 1ULL;
    goto __twr_l87;
    __twr_l106:;
    __twr_v364 = 40ULL;
    if (_mng_byte345 != __twr_v364) { goto __twr_l108; } else { goto __twr_l107; }
    __twr_l107:;
    __twr_v365 = 1ULL;
    __twr_v366 = _mng_bracketdepth337 + __twr_v365;
    _mng_bracketdepth337 = __twr_v366;
    goto __twr_l87;
    __twr_l108:;
    __twr_v367 = 41ULL;
    if (_mng_byte345 != __twr_v367) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v368 = 1ULL;
    __twr_v369 = _mng_bracketdepth337 - __twr_v368;
    _mng_bracketdepth337 = __twr_v369;
    if (_mng_bracketdepth337) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v370 = 3ULL;
    _jkl_retv = __twr_v370;
    goto _jkl_epilogue;
    __twr_l111:;
    goto __twr_l87;
    __twr_l110:;
    __twr_v371 = 1ULL;
    if (_mng_bracketdepth337 != __twr_v371) { goto __twr_l114; } else { goto __twr_l115; }
    __twr_l115:;
    __twr_v372 = 44ULL;
    if (_mng_byte345 != __twr_v372) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    goto __twr_l81;
    goto __twr_l87;
    __twr_l114:;
    __twr_v373 = 10ULL;
    if (_mng_byte345 != __twr_v373) { goto __twr_l87; } else { goto __twr_l116; }
    __twr_l116:;
    _mng_byte345 = 32ULL;
    __twr_l87:;
    if (_mng_comment338) { goto __twr_l117; } else { goto __twr_l119; }
    __twr_l119:;
    if (_mng_backslash339) { goto __twr_l117; } else { goto __twr_l118; }
    __twr_l118:;
    __twr_v374 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v374)(_mng_buffer336, _mng_byte345);
    __twr_l117:;
    __twr_v375 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v376 = ((uint64_t (*)())__twr_v375)();
    _mng_byte345 = __twr_v376;
    if (_mng_byte345) { goto __twr_l120; } else { goto __twr_l121; }
    __twr_l121:;
    __twr_v377 = (uint64_t)(&LexTokenError);
    __twr_v378 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v379 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v377)(_mng_token335, __twr_v378, __twr_v379, __twr_v379, __twr_v379);
    __twr_l120:;
    goto __twr_l80;
    __twr_l81:;
    __twr_v380 = 1ULL;
    _jkl_retv = __twr_v380;
    goto _jkl_epilogue;
    __twr_l73:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectValue(uint64_t _mng_token381, uint64_t _mng_buffer382, uint64_t _mng_ignore383) {
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t _mng_byte386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t _mng_optoken398[4];
    uint64_t __twr_v399;
    uint64_t _mng_opbuffer400[8];
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t _mng_operator404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t _mng_simpletokbuf414[11];
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t _mng_macro466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    __twr_v384 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v385 = ((uint64_t (*)(uint64_t))__twr_v384)(_mng_token381);
    _mng_byte386 = __twr_v385;
    __twr_v387 = 34ULL;
    if (_mng_byte386 != __twr_v387) { goto __twr_l125; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v388 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v388)(_mng_token381, _mng_buffer382);
    __twr_v389 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v390 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v389)(_mng_buffer382, __twr_v390);
    goto _jkl_epilogue;
    goto __twr_l123;
    __twr_l125:;
    __twr_v391 = 91ULL;
    if (_mng_byte386 != __twr_v391) { goto __twr_l127; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v392 = (uint64_t)(&LexGetComplexString);
    ((void (*)(uint64_t, uint64_t))__twr_v392)(_mng_token381, _mng_buffer382);
    __twr_v393 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v394 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v393)(_mng_buffer382, __twr_v394);
    goto _jkl_epilogue;
    goto __twr_l123;
    __twr_l127:;
    __twr_v395 = 40ULL;
    if (_mng_byte386 != __twr_v395) { goto __twr_l123; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v396 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v397 = (uint64_t)(&_mng_optoken398);
    __twr_v399 = (uint64_t)(&_mng_opbuffer400);
    ((void (*)(uint64_t, uint64_t))__twr_v396)(__twr_v397, __twr_v399);
    __twr_v401 = (uint64_t)(&TlLookupHashTable);
    __twr_v402 = (uint64_t)(&LexOperatorHashTable);
    __twr_v403 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v401)(__twr_v402, __twr_v399);
    _mng_operator404 = __twr_v403;
    if (_mng_operator404) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v405 = (uint64_t)(&LexTokenError);
    __twr_v406 = (uint64_t)(&_mng_optoken398);
    __twr_v407 = (uint64_t)(&"Unknown operator");
    __twr_v408 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v405)(__twr_v406, __twr_v407, __twr_v408, __twr_v408, __twr_v408);
    __twr_l129:;
    __twr_v409 = 48ULL;
    __twr_v410 = _mng_operator404 + __twr_v409;
    __twr_v411 = *(uint64_t*)(__twr_v410);
    ((void (*)(uint64_t, uint64_t))__twr_v411)(_mng_buffer382, _mng_ignore383);
    goto _jkl_epilogue;
    __twr_l123:;
    __twr_v412 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v413 = (uint64_t)(&_mng_simpletokbuf414);
    ((void (*)(uint64_t))__twr_v412)(__twr_v413);
    __twr_v415 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v415)(__twr_v413, _mng_byte386);
    __twr_v416 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v417 = ((uint64_t (*)())__twr_v416)();
    _mng_byte386 = __twr_v417;
    __twr_v418 = (uint64_t)(&LexCharTreatment);
    __twr_v419 = __twr_v418 + _mng_byte386;
    __twr_v420 = *(uint8_t*)(__twr_v419);
    __twr_v421 = 3ULL;
    if (__twr_v420 == __twr_v421) { goto __twr_l132; } else { goto __twr_l131; }
    __twr_l131:;
    if (_mng_byte386) { goto __twr_l134; } else { goto __twr_l135; }
    __twr_l135:;
    __twr_v422 = (uint64_t)(&LexTokenError);
    __twr_v423 = (uint64_t)(&"Unexpected EOF");
    __twr_v424 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v422)(_mng_token381, __twr_v423, __twr_v424, __twr_v424, __twr_v424);
    __twr_l134:;
    __twr_v425 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v426 = (uint64_t)(&_mng_simpletokbuf414);
    ((void (*)(uint64_t, uint64_t))__twr_v425)(__twr_v426, _mng_byte386);
    __twr_v427 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v428 = ((uint64_t (*)())__twr_v427)();
    _mng_byte386 = __twr_v428;
    __twr_l133:;
    __twr_v429 = (uint64_t)(&LexCharTreatment);
    __twr_v430 = __twr_v429 + _mng_byte386;
    __twr_v431 = *(uint8_t*)(__twr_v430);
    __twr_v432 = 3ULL;
    if (__twr_v431 != __twr_v432) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v433 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v434 = (uint64_t)(&_mng_simpletokbuf414);
    __twr_v435 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v433)(__twr_v434, __twr_v435);
    __twr_v436 = 16ULL;
    __twr_v437 = __twr_v434 + __twr_v436;
    __twr_v438 = *(uint64_t*)(__twr_v437);
    __twr_v439 = *(uint8_t*)(__twr_v438);
    __twr_v440 = 48ULL;
    if (__twr_v439 < __twr_v440) { goto __twr_l136; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v441 = (uint64_t)(&_mng_simpletokbuf414);
    __twr_v442 = 16ULL;
    __twr_v443 = __twr_v441 + __twr_v442;
    __twr_v444 = *(uint64_t*)(__twr_v443);
    __twr_v445 = *(uint8_t*)(__twr_v444);
    __twr_v446 = 57ULL;
    if (__twr_v445 > __twr_v446) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v447 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v448 = (uint64_t)(&_mng_simpletokbuf414);
    __twr_v449 = 16ULL;
    __twr_v450 = __twr_v448 + __twr_v449;
    __twr_v451 = *(uint64_t*)(__twr_v450);
    __twr_v452 = *(uint64_t*)(__twr_v448);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v447)(_mng_buffer382, __twr_v451, __twr_v452);
    __twr_v453 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v453)(__twr_v448);
    goto _jkl_epilogue;
    __twr_l136:;
    if (!(_mng_ignore383)) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v454 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v455 = (uint64_t)(&_mng_simpletokbuf414);
    ((void (*)(uint64_t))__twr_v454)(__twr_v455);
    __twr_v456 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v457 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v456)(_mng_buffer382, __twr_v457);
    goto _jkl_epilogue;
    __twr_l139:;
    __twr_v458 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v459 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v460 = *(uint64_t*)(__twr_v459);
    __twr_v461 = (uint64_t)(&_mng_simpletokbuf414);
    __twr_v462 = 16ULL;
    __twr_v463 = __twr_v461 + __twr_v462;
    __twr_v464 = *(uint64_t*)(__twr_v463);
    __twr_v465 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v458)(__twr_v460, __twr_v464);
    _mng_macro466 = __twr_v465;
    __twr_v467 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v467)(__twr_v461);
    if (_mng_macro466) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v468 = (uint64_t)(&LexTokenError);
    __twr_v469 = (uint64_t)(&"Not a defined macro name");
    __twr_v470 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v468)(_mng_token381, __twr_v469, __twr_v470, __twr_v470, __twr_v470);
    __twr_l141:;
    __twr_v471 = 256ULL;
    __twr_v472 = _mng_macro466 + __twr_v471;
    __twr_v473 = *(uint8_t*)(__twr_v472);
    if (!(__twr_v473)) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v474 = (uint64_t)(&LexTokenError);
    __twr_v475 = (uint64_t)(&"Function macros not permitted here");
    __twr_v476 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v474)(_mng_token381, __twr_v475, __twr_v476, __twr_v476, __twr_v476);
    __twr_l143:;
    __twr_v477 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v478 = 80ULL;
    __twr_v479 = _mng_macro466 + __twr_v478;
    __twr_v480 = 96ULL;
    __twr_v481 = _mng_macro466 + __twr_v480;
    __twr_v482 = *(uint64_t*)(__twr_v481);
    __twr_v483 = *(uint64_t*)(__twr_v479);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v477)(_mng_buffer382, __twr_v482, __twr_v483);
    __twr_l122:;
    _jkl_epilogue:;
}
uint64_t LexCollectValueNumeric(uint64_t _mng_token484, uint64_t _mng_ignore485) {
    uint64_t _jkl_retv;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t _mng_buffer488[11];
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t _mng_num514;
    uint64_t __twr_v515;
    __twr_v486 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v487 = (uint64_t)(&_mng_buffer488);
    ((void (*)(uint64_t))__twr_v486)(__twr_v487);
    __twr_v489 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v489)(_mng_token484, __twr_v487, _mng_ignore485);
    if (!(_mng_ignore485)) { goto __twr_l146; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v490 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v491 = (uint64_t)(&_mng_buffer488);
    ((void (*)(uint64_t))__twr_v490)(__twr_v491);
    __twr_v492 = 0ULL;
    _jkl_retv = __twr_v492;
    goto _jkl_epilogue;
    __twr_l146:;
    __twr_v493 = (uint64_t)(&_mng_buffer488);
    __twr_v494 = 16ULL;
    __twr_v495 = __twr_v493 + __twr_v494;
    __twr_v496 = *(uint64_t*)(__twr_v495);
    __twr_v497 = *(uint8_t*)(__twr_v496);
    __twr_v498 = 48ULL;
    if (__twr_v497 < __twr_v498) { goto __twr_l149; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v499 = (uint64_t)(&_mng_buffer488);
    __twr_v500 = 16ULL;
    __twr_v501 = __twr_v499 + __twr_v500;
    __twr_v502 = *(uint64_t*)(__twr_v501);
    __twr_v503 = *(uint8_t*)(__twr_v502);
    __twr_v504 = 57ULL;
    if (__twr_v503 <= __twr_v504) { goto __twr_l148; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v505 = (uint64_t)(&LexTokenError);
    __twr_v506 = (uint64_t)(&"Expected numeric value");
    __twr_v507 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v505)(_mng_token484, __twr_v506, __twr_v507, __twr_v507, __twr_v507);
    __twr_l148:;
    __twr_v508 = (uint64_t)(&LexCrunchNumber);
    __twr_v509 = (uint64_t)(&_mng_buffer488);
    __twr_v510 = 16ULL;
    __twr_v511 = __twr_v509 + __twr_v510;
    __twr_v512 = *(uint64_t*)(__twr_v511);
    __twr_v513 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v508)(_mng_token484, __twr_v512);
    _mng_num514 = __twr_v513;
    __twr_v515 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v515)(__twr_v509);
    _jkl_retv = _mng_num514;
    goto _jkl_epilogue;
    __twr_l145:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexConsumeCloseParenthesis() {
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t _mng_token518[4];
    uint64_t __twr_v519;
    uint64_t _mng_byte520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    __twr_v516 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v517 = (uint64_t)(&_mng_token518);
    __twr_v519 = ((uint64_t (*)(uint64_t))__twr_v516)(__twr_v517);
    _mng_byte520 = __twr_v519;
    __twr_v521 = 41ULL;
    if (_mng_byte520 == __twr_v521) { goto __twr_l152; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v522 = (uint64_t)(&LexTokenError);
    __twr_v523 = (uint64_t)(&_mng_token518);
    __twr_v524 = (uint64_t)(&"Expected close parenthesis");
    __twr_v525 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v522)(__twr_v523, __twr_v524, __twr_v525, __twr_v525, __twr_v525);
    __twr_l152:;
    __twr_l151:;
    _jkl_epilogue:;
}
void LexDefineMacroFromArgumentString(uint64_t _mng_arg526) {
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t _mng_macro530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t _mng_equalsptr536;
    uint64_t _mng_j537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    __twr_v527 = (uint64_t)(&TlAllocateFromZone);
    __twr_v528 = (uint64_t)(&LexMacroZone);
    __twr_v529 = ((uint64_t (*)(uint64_t))__twr_v527)(__twr_v528);
    _mng_macro530 = __twr_v529;
    __twr_v531 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v532 = 80ULL;
    __twr_v533 = _mng_macro530 + __twr_v532;
    ((void (*)(uint64_t))__twr_v531)(__twr_v533);
    __twr_v534 = (uint64_t)(&FeIsMacroArgument);
    __twr_v535 = ((uint64_t (*)(uint64_t))__twr_v534)(_mng_arg526);
    _mng_equalsptr536 = __twr_v535;
    _mng_j537 = 0ULL;
    if (_mng_arg526 >= _mng_equalsptr536) { goto __twr_l156; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v538 = *(uint8_t*)(_mng_arg526);
    __twr_v539 = 168ULL;
    __twr_v540 = _mng_macro530 + __twr_v539;
    __twr_v541 = 1ULL;
    __twr_v542 = __twr_v540 + _mng_j537;
    *(uint8_t*)(__twr_v542) = __twr_v538;
    __twr_v543 = _mng_j537 + __twr_v541;
    _mng_j537 = __twr_v543;
    __twr_v544 = _mng_arg526 + __twr_v541;
    _mng_arg526 = __twr_v544;
    __twr_l157:;
    if (_mng_arg526 < _mng_equalsptr536) { goto __twr_l155; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v545 = 0ULL;
    __twr_v546 = 168ULL;
    __twr_v547 = _mng_macro530 + __twr_v546;
    __twr_v548 = 1ULL;
    __twr_v549 = __twr_v547 + _mng_j537;
    *(uint8_t*)(__twr_v549) = __twr_v545;
    _mng_j537 = 0ULL;
    __twr_v550 = _mng_equalsptr536 + __twr_v548;
    _mng_equalsptr536 = __twr_v550;
    __twr_v551 = *(uint8_t*)(_mng_equalsptr536);
    if (!(__twr_v551)) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v552 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v553 = 80ULL;
    __twr_v554 = _mng_macro530 + __twr_v553;
    __twr_v555 = *(uint8_t*)(_mng_equalsptr536);
    ((void (*)(uint64_t, uint64_t))__twr_v552)(__twr_v554, __twr_v555);
    __twr_v556 = 1ULL;
    __twr_v557 = _mng_equalsptr536 + __twr_v556;
    _mng_equalsptr536 = __twr_v557;
    __twr_l160:;
    __twr_v558 = *(uint8_t*)(_mng_equalsptr536);
    if (__twr_v558) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_v559 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v560 = 80ULL;
    __twr_v561 = _mng_macro530 + __twr_v560;
    __twr_v562 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v559)(__twr_v561, __twr_v562);
    __twr_v563 = 256ULL;
    __twr_v564 = _mng_macro530 + __twr_v563;
    *(uint8_t*)(__twr_v564) = __twr_v562;
    __twr_v565 = 257ULL;
    __twr_v566 = _mng_macro530 + __twr_v565;
    *(uint8_t*)(__twr_v566) = __twr_v562;
    __twr_v567 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v568 = (uint64_t)(&LexRootMacroScope);
    __twr_v569 = *(uint64_t*)(__twr_v568);
    __twr_v570 = 168ULL;
    __twr_v571 = _mng_macro530 + __twr_v570;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v567)(__twr_v569, _mng_macro530, __twr_v571);
    __twr_l154:;
    _jkl_epilogue:;
}
extern void PrsEnterMacro();
void LexExpandMacro(uint64_t _mng_macro572, uint64_t _mng_token573) {
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t _mng_oldscope585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t _mng_oldmacroscope588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t _mng_stream614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t _mng_trashtoken645[4];
    uint64_t __twr_v646;
    uint64_t _mng_byte647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t _mng_arg656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t _mng_argmacro660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t _mng_foundclose680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    __twr_v574 = 1ULL;
    __twr_v575 = (uint64_t)(&LexMacroDepth);
    __twr_v576 = *(uint32_t*)(__twr_v575);
    __twr_v577 = __twr_v576 + __twr_v574;
    *(uint32_t*)(__twr_v575) = __twr_v577;
    __twr_v578 = *(uint32_t*)(__twr_v575);
    __twr_v579 = 64ULL;
    if (__twr_v578 < __twr_v579) { goto __twr_l162; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v580 = (uint64_t)(&LexTokenError);
    __twr_v581 = (uint64_t)(&"Too many macros deep!");
    __twr_v582 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v580)(_mng_token573, __twr_v581, __twr_v582, __twr_v582, __twr_v582);
    __twr_l162:;
    __twr_v583 = (uint64_t)(&LexCurrentScope);
    __twr_v584 = *(uint64_t*)(__twr_v583);
    _mng_oldscope585 = __twr_v584;
    __twr_v586 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v587 = *(uint64_t*)(__twr_v586);
    _mng_oldmacroscope588 = __twr_v587;
    __twr_v589 = 257ULL;
    __twr_v590 = _mng_macro572 + __twr_v589;
    __twr_v591 = *(uint8_t*)(__twr_v590);
    if (!(__twr_v591)) { goto __twr_l166; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v592 = 232ULL;
    __twr_v593 = _mng_macro572 + __twr_v592;
    __twr_v594 = *(uint64_t*)(__twr_v593);
    __twr_v595 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v595) = __twr_v594;
    __twr_v596 = 240ULL;
    __twr_v597 = _mng_macro572 + __twr_v596;
    __twr_v598 = *(uint64_t*)(__twr_v597);
    __twr_v599 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v599) = __twr_v598;
    goto __twr_l164;
    __twr_l166:;
    __twr_v600 = (uint64_t)(&LexRootScope);
    __twr_v601 = *(uint64_t*)(__twr_v600);
    if (_mng_oldscope585 == __twr_v601) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v602 = (uint64_t)(&LexCreateSymbolTable);
    __twr_v603 = (uint64_t)(&LexRootScope);
    __twr_v604 = *(uint64_t*)(__twr_v603);
    __twr_v605 = ((uint64_t (*)(uint64_t))__twr_v602)(__twr_v604);
    __twr_v606 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v606) = __twr_v605;
    __twr_l167:;
    __twr_v607 = (uint64_t)(&LexCreateMacroTable);
    __twr_v608 = (uint64_t)(&LexRootMacroScope);
    __twr_v609 = *(uint64_t*)(__twr_v608);
    __twr_v610 = ((uint64_t (*)(uint64_t))__twr_v607)(__twr_v609);
    __twr_v611 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v611) = __twr_v610;
    __twr_l164:;
    __twr_v612 = (uint64_t)(&LexAllocateStream);
    __twr_v613 = ((uint64_t (*)())__twr_v612)();
    _mng_stream614 = __twr_v613;
    __twr_v615 = (uint64_t)(&LexInitializeStream);
    ((void (*)(uint64_t, uint64_t))__twr_v615)(_mng_stream614, _mng_macro572);
    __twr_v616 = (uint64_t)(&LexCurrentStream);
    __twr_v617 = *(uint64_t*)(__twr_v616);
    __twr_v618 = 8ULL;
    __twr_v619 = __twr_v617 + __twr_v618;
    __twr_v620 = *(uint64_t*)(__twr_v619);
    __twr_v621 = _mng_stream614 + __twr_v618;
    *(uint64_t*)(__twr_v621) = __twr_v620;
    __twr_v622 = 1000000ULL;
    __twr_v623 = 44ULL;
    __twr_v624 = _mng_stream614 + __twr_v623;
    *(uint32_t*)(__twr_v624) = __twr_v622;
    __twr_v625 = 80ULL;
    __twr_v626 = _mng_macro572 + __twr_v625;
    __twr_v627 = 96ULL;
    __twr_v628 = _mng_macro572 + __twr_v627;
    __twr_v629 = *(uint64_t*)(__twr_v628);
    __twr_v630 = 24ULL;
    __twr_v631 = _mng_stream614 + __twr_v630;
    *(uint64_t*)(__twr_v631) = __twr_v629;
    __twr_v632 = *(uint64_t*)(__twr_v626);
    __twr_v633 = 1ULL;
    __twr_v634 = __twr_v632 - __twr_v633;
    __twr_v635 = 36ULL;
    __twr_v636 = _mng_stream614 + __twr_v635;
    *(uint32_t*)(__twr_v636) = __twr_v634;
    __twr_v637 = 72ULL;
    __twr_v638 = _mng_stream614 + __twr_v637;
    *(uint64_t*)(__twr_v638) = _mng_oldscope585;
    __twr_v639 = _mng_stream614 + __twr_v625;
    *(uint64_t*)(__twr_v639) = _mng_oldmacroscope588;
    __twr_v640 = 256ULL;
    __twr_v641 = _mng_macro572 + __twr_v640;
    __twr_v642 = *(uint8_t*)(__twr_v641);
    if (!(__twr_v642)) { goto __twr_l169; } else { goto __twr_l170; }
    __twr_l170:;
    __twr_v643 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v644 = (uint64_t)(&_mng_trashtoken645);
    __twr_v646 = ((uint64_t (*)(uint64_t))__twr_v643)(__twr_v644);
    _mng_byte647 = __twr_v646;
    __twr_v648 = 40ULL;
    if (_mng_byte647 == __twr_v648) { goto __twr_l171; } else { goto __twr_l172; }
    __twr_l172:;
    __twr_v649 = (uint64_t)(&LexTokenError);
    __twr_v650 = (uint64_t)(&_mng_trashtoken645);
    __twr_v651 = (uint64_t)(&"Expected open parenthesis after function macro name");
    __twr_v652 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v649)(__twr_v650, __twr_v651, __twr_v652, __twr_v652, __twr_v652);
    __twr_l171:;
    __twr_v653 = 248ULL;
    __twr_v654 = _mng_macro572 + __twr_v653;
    __twr_v655 = *(uint64_t*)(__twr_v654);
    _mng_arg656 = __twr_v655;
    if (!(_mng_arg656)) { goto __twr_l174; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v657 = (uint64_t)(&TlAllocateFromZone);
    __twr_v658 = (uint64_t)(&LexMacroZone);
    __twr_v659 = ((uint64_t (*)(uint64_t))__twr_v657)(__twr_v658);
    _mng_argmacro660 = __twr_v659;
    __twr_v661 = 232ULL;
    __twr_v662 = _mng_argmacro660 + __twr_v661;
    *(uint64_t*)(__twr_v662) = _mng_oldscope585;
    __twr_v663 = 240ULL;
    __twr_v664 = _mng_argmacro660 + __twr_v663;
    *(uint64_t*)(__twr_v664) = _mng_oldmacroscope588;
    __twr_v665 = (uint64_t)(&TlCopyString);
    __twr_v666 = 168ULL;
    __twr_v667 = _mng_argmacro660 + __twr_v666;
    __twr_v668 = 0ULL;
    __twr_v669 = 1ULL;
    __twr_v670 = 56ULL;
    __twr_v671 = _mng_arg656 + __twr_v670;
    __twr_v672 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v665)(__twr_v667, __twr_v671, __twr_v672);
    __twr_v673 = 256ULL;
    __twr_v674 = _mng_argmacro660 + __twr_v673;
    *(uint8_t*)(__twr_v674) = __twr_v668;
    __twr_v675 = 257ULL;
    __twr_v676 = _mng_argmacro660 + __twr_v675;
    *(uint8_t*)(__twr_v676) = __twr_v669;
    __twr_v677 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v678 = 80ULL;
    __twr_v679 = _mng_argmacro660 + __twr_v678;
    ((void (*)(uint64_t))__twr_v677)(__twr_v679);
    _mng_foundclose680 = 0ULL;
    __twr_l176:;
    __twr_v681 = 2ULL;
    __twr_v682 = _mng_foundclose680 & __twr_v681;
    if (!(__twr_v682)) { goto __twr_l179; } else { goto __twr_l180; }
    __twr_l180:;
    __twr_v683 = (uint64_t)(&LexTokenError);
    __twr_v684 = (uint64_t)(&_mng_trashtoken645);
    __twr_v685 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v686 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v683)(__twr_v684, __twr_v685, __twr_v686, __twr_v686, __twr_v686);
    __twr_l179:;
    __twr_v687 = (uint64_t)(&LexCollectMacroArgumentContents);
    __twr_v688 = 48ULL;
    __twr_v689 = _mng_argmacro660 + __twr_v688;
    __twr_v690 = 80ULL;
    __twr_v691 = _mng_argmacro660 + __twr_v690;
    __twr_v692 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v687)(__twr_v689, __twr_v691);
    _mng_foundclose680 = __twr_v692;
    __twr_l178:;
    __twr_v693 = 1ULL;
    __twr_v694 = _mng_foundclose680 & __twr_v693;
    if (!(__twr_v694)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v695 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v696 = 80ULL;
    __twr_v697 = _mng_argmacro660 + __twr_v696;
    __twr_v698 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v695)(__twr_v697, __twr_v698);
    __twr_v699 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v700 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v701 = *(uint64_t*)(__twr_v700);
    __twr_v702 = 168ULL;
    __twr_v703 = _mng_argmacro660 + __twr_v702;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v699)(__twr_v701, _mng_argmacro660, __twr_v703);
    __twr_v704 = 48ULL;
    __twr_v705 = _mng_arg656 + __twr_v704;
    __twr_v706 = *(uint64_t*)(__twr_v705);
    _mng_arg656 = __twr_v706;
    __twr_v707 = 2ULL;
    __twr_v708 = _mng_foundclose680 & __twr_v707;
    if (!(__twr_v708)) { goto __twr_l183; } else { goto __twr_l182; }
    __twr_l182:;
    if (!(_mng_arg656)) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v709 = (uint64_t)(&LexTokenError);
    __twr_v710 = (uint64_t)(&_mng_trashtoken645);
    __twr_v711 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v712 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v709)(__twr_v710, __twr_v711, __twr_v712, __twr_v712, __twr_v712);
    __twr_l184:;
    goto __twr_l181;
    __twr_l183:;
    if (_mng_arg656) { goto __twr_l181; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_l187:;
    __twr_v713 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v714 = (uint64_t)(&_mng_trashtoken645);
    __twr_v715 = ((uint64_t (*)(uint64_t))__twr_v713)(__twr_v714);
    _mng_byte647 = __twr_v715;
    __twr_v716 = 41ULL;
    if (_mng_byte647 != __twr_v716) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    goto __twr_l188;
    __twr_l189:;
    goto __twr_l187;
    __twr_l188:;
    __twr_l181:;
    __twr_l175:;
    if (_mng_arg656) { goto __twr_l173; } else { goto __twr_l174; }
    __twr_l174:;
    __twr_l169:;
    __twr_v717 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v717)(_mng_stream614);
    __twr_v718 = (uint64_t)(&PrsEnterMacro);
    ((void (*)())__twr_v718)();
    __twr_l161:;
    _jkl_epilogue:;
}
void LexParseInclude() {
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t _mng_str721[11];
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t _mng_token724[4];
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t _mng_created735;
    uint64_t _mng_fileblock736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t _mng_filepath741[11];
    uint64_t _mng_found742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t __twr_v752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t _mng_handle761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t _mng_status818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t _mng_stream832;
    uint64_t __twr_v833;
    __twr_v719 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v720 = (uint64_t)(&_mng_str721);
    ((void (*)(uint64_t))__twr_v719)(__twr_v720);
    __twr_v722 = (uint64_t)(&LexCollectString);
    __twr_v723 = (uint64_t)(&_mng_token724);
    ((void (*)(uint64_t, uint64_t))__twr_v722)(__twr_v723, __twr_v720);
    __twr_v725 = (uint64_t)(&LexFalseCount);
    __twr_v726 = *(uint32_t*)(__twr_v725);
    if (!(__twr_v726)) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v727 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v728 = (uint64_t)(&_mng_str721);
    ((void (*)(uint64_t))__twr_v727)(__twr_v728);
    goto _jkl_epilogue;
    __twr_l192:;
    __twr_v729 = (uint64_t)(&FeCreateFileBlock);
    __twr_v730 = (uint64_t)(&_mng_str721);
    __twr_v731 = 16ULL;
    __twr_v732 = __twr_v730 + __twr_v731;
    __twr_v733 = *(uint64_t*)(__twr_v732);
    __twr_v734 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v729)(__twr_v733, (uint64_t)(&_mng_created735));
    _mng_fileblock736 = __twr_v734;
    if (_mng_created735) { goto __twr_l194; } else { goto __twr_l195; }
    __twr_l195:;
    __twr_v737 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v738 = (uint64_t)(&_mng_str721);
    ((void (*)(uint64_t))__twr_v737)(__twr_v738);
    goto _jkl_epilogue;
    __twr_l194:;
    __twr_v739 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v740 = (uint64_t)(&_mng_filepath741);
    ((void (*)(uint64_t))__twr_v739)(__twr_v740);
    _mng_found742 = 0ULL;
    __twr_v743 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v744 = (uint64_t)(&_mng_str721);
    __twr_v745 = 16ULL;
    __twr_v746 = __twr_v744 + __twr_v745;
    __twr_v747 = *(uint64_t*)(__twr_v746);
    __twr_v748 = (uint64_t)(&"<inc>/");
    __twr_v749 = 6ULL;
    __twr_v750 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v743)(__twr_v747, __twr_v748, __twr_v749);
    if (__twr_v750) { goto __twr_l198; } else { goto __twr_l197; }
    __twr_l197:;
    __twr_v751 = (uint64_t)(&TlMatchPath);
    __twr_v752 = (uint64_t)(&_mng_str721);
    __twr_v753 = 16ULL;
    __twr_v754 = __twr_v752 + __twr_v753;
    __twr_v755 = *(uint64_t*)(__twr_v754);
    __twr_v756 = 6ULL;
    __twr_v757 = __twr_v755 + __twr_v756;
    __twr_v758 = (uint64_t)(&FeIncludeDirectory);
    __twr_v759 = (uint64_t)(&_mng_filepath741);
    __twr_v760 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v751)(__twr_v757, __twr_v758, __twr_v759, (uint64_t)(&_mng_handle761));
    _mng_found742 = __twr_v760;
    goto __twr_l196;
    __twr_l198:;
    __twr_v762 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v763 = (uint64_t)(&_mng_str721);
    __twr_v764 = 16ULL;
    __twr_v765 = __twr_v763 + __twr_v764;
    __twr_v766 = *(uint64_t*)(__twr_v765);
    __twr_v767 = (uint64_t)(&"<ll>/");
    __twr_v768 = 5ULL;
    __twr_v769 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v762)(__twr_v766, __twr_v767, __twr_v768);
    if (__twr_v769) { goto __twr_l200; } else { goto __twr_l199; }
    __twr_l199:;
    __twr_v770 = (uint64_t)(&TlMatchPath);
    __twr_v771 = (uint64_t)(&_mng_str721);
    __twr_v772 = 16ULL;
    __twr_v773 = __twr_v771 + __twr_v772;
    __twr_v774 = *(uint64_t*)(__twr_v773);
    __twr_v775 = 5ULL;
    __twr_v776 = __twr_v774 + __twr_v775;
    __twr_v777 = (uint64_t)(&FeLibraryDirectory);
    __twr_v778 = (uint64_t)(&_mng_filepath741);
    __twr_v779 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v770)(__twr_v776, __twr_v777, __twr_v778, (uint64_t)(&_mng_handle761));
    _mng_found742 = __twr_v779;
    goto __twr_l196;
    __twr_l200:;
    __twr_v780 = (uint64_t)(&TlCopyParentPath);
    __twr_v781 = (uint64_t)(&LexCurrentStream);
    __twr_v782 = *(uint64_t*)(__twr_v781);
    __twr_v783 = 8ULL;
    __twr_v784 = __twr_v782 + __twr_v783;
    __twr_v785 = *(uint64_t*)(__twr_v784);
    __twr_v786 = 48ULL;
    __twr_v787 = __twr_v785 + __twr_v786;
    __twr_v788 = (uint64_t)(&_mng_filepath741);
    ((void (*)(uint64_t, uint64_t))__twr_v780)(__twr_v787, __twr_v788);
    __twr_v789 = *(uint64_t*)(__twr_v788);
    if (__twr_v789) { goto __twr_l203; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v790 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v791 = (uint64_t)(&_mng_filepath741);
    __twr_v792 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v790)(__twr_v791, __twr_v792);
    __twr_v793 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v790)(__twr_v791, __twr_v793);
    goto __twr_l201;
    __twr_l203:;
    __twr_v794 = (uint64_t)(&_mng_filepath741);
    __twr_v795 = 16ULL;
    __twr_v796 = __twr_v794 + __twr_v795;
    __twr_v797 = *(uint64_t*)(__twr_v796);
    __twr_v798 = *(uint64_t*)(__twr_v794);
    __twr_v799 = 1ULL;
    __twr_v800 = __twr_v798 - __twr_v799;
    __twr_v801 = __twr_v797 + __twr_v800;
    __twr_v802 = *(uint8_t*)(__twr_v801);
    __twr_v803 = 47ULL;
    if (__twr_v802 == __twr_v803) { goto __twr_l201; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v804 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v805 = (uint64_t)(&_mng_filepath741);
    __twr_v806 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v804)(__twr_v805, __twr_v806);
    __twr_l201:;
    __twr_v807 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v808 = (uint64_t)(&_mng_filepath741);
    __twr_v809 = (uint64_t)(&_mng_str721);
    __twr_v810 = 16ULL;
    __twr_v811 = __twr_v809 + __twr_v810;
    __twr_v812 = *(uint64_t*)(__twr_v811);
    __twr_v813 = *(uint64_t*)(__twr_v809);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v807)(__twr_v808, __twr_v812, __twr_v813);
    __twr_v814 = (uint64_t)(&TlOpenSource);
    __twr_v815 = __twr_v808 + __twr_v810;
    __twr_v816 = *(uint64_t*)(__twr_v815);
    __twr_v817 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v814)(__twr_v816, (uint64_t)(&_mng_handle761));
    _mng_status818 = __twr_v817;
    if (_mng_status818) { goto __twr_l205; } else { goto __twr_l206; }
    __twr_l206:;
    _mng_found742 = 1ULL;
    __twr_l205:;
    __twr_l196:;
    if (_mng_found742) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v819 = (uint64_t)(&LexTokenError);
    __twr_v820 = (uint64_t)(&_mng_token724);
    __twr_v821 = (uint64_t)(&"Failed to include the file.");
    __twr_v822 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v819)(__twr_v820, __twr_v821, __twr_v822, __twr_v822, __twr_v822);
    __twr_l207:;
    __twr_v823 = (uint64_t)(&FeCopyPathFileBlock);
    __twr_v824 = (uint64_t)(&_mng_filepath741);
    __twr_v825 = 16ULL;
    __twr_v826 = __twr_v824 + __twr_v825;
    __twr_v827 = *(uint64_t*)(__twr_v826);
    ((void (*)(uint64_t, uint64_t))__twr_v823)(_mng_fileblock736, __twr_v827);
    __twr_v828 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v828)(__twr_v824);
    __twr_v829 = (uint64_t)(&_mng_str721);
    ((void (*)(uint64_t))__twr_v828)(__twr_v829);
    __twr_v830 = (uint64_t)(&LexCreateFileStream);
    __twr_v831 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v830)(_mng_fileblock736, _mng_handle761);
    _mng_stream832 = __twr_v831;
    __twr_v833 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v833)(_mng_stream832);
    __twr_l191:;
    _jkl_epilogue:;
}
void LexParseDefine() {
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t _mng_contentsbuffer838[11];
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t _mng_trashtoken841[4];
    uint64_t __twr_v842;
    uint64_t _mng_namebuffer843[8];
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t _mng_macro850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t _mng_oldmacro863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t __twr_v886;
    uint64_t __twr_v887;
    uint64_t __twr_v888;
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    __twr_v834 = (uint64_t)(&LexFalseCount);
    __twr_v835 = *(uint32_t*)(__twr_v834);
    if (!(__twr_v835)) { goto __twr_l210; } else { goto __twr_l211; }
    __twr_l211:;
    __twr_v836 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v837 = (uint64_t)(&_mng_contentsbuffer838);
    ((void (*)(uint64_t))__twr_v836)(__twr_v837);
    __twr_v839 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v840 = (uint64_t)(&_mng_trashtoken841);
    __twr_v842 = (uint64_t)(&_mng_namebuffer843);
    __twr_v844 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v839)(__twr_v840, __twr_v842);
    __twr_v845 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v845)(__twr_v840, __twr_v837, __twr_v844);
    __twr_v846 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v846)(__twr_v837);
    goto _jkl_epilogue;
    __twr_l210:;
    __twr_v847 = (uint64_t)(&TlAllocateFromZone);
    __twr_v848 = (uint64_t)(&LexMacroZone);
    __twr_v849 = ((uint64_t (*)(uint64_t))__twr_v847)(__twr_v848);
    _mng_macro850 = __twr_v849;
    __twr_v851 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v852 = 80ULL;
    __twr_v853 = _mng_macro850 + __twr_v852;
    ((void (*)(uint64_t))__twr_v851)(__twr_v853);
    __twr_v854 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v855 = 48ULL;
    __twr_v856 = _mng_macro850 + __twr_v855;
    __twr_v857 = 168ULL;
    __twr_v858 = _mng_macro850 + __twr_v857;
    ((void (*)(uint64_t, uint64_t))__twr_v854)(__twr_v856, __twr_v858);
    __twr_v859 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v860 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v861 = *(uint64_t*)(__twr_v860);
    __twr_v862 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v859)(__twr_v861, __twr_v858);
    _mng_oldmacro863 = __twr_v862;
    if (!(_mng_oldmacro863)) { goto __twr_l212; } else { goto __twr_l214; }
    __twr_l214:;
    __twr_v864 = 32ULL;
    __twr_v865 = _mng_oldmacro863 + __twr_v864;
    __twr_v866 = *(uint64_t*)(__twr_v865);
    __twr_v867 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v868 = *(uint64_t*)(__twr_v867);
    __twr_v869 = 8ULL;
    __twr_v870 = __twr_v868 + __twr_v869;
    if (__twr_v866 != __twr_v870) { goto __twr_l212; } else { goto __twr_l213; }
    __twr_l213:;
    __twr_v871 = (uint64_t)(&LexTokenError);
    __twr_v872 = 48ULL;
    __twr_v873 = _mng_macro850 + __twr_v872;
    __twr_v874 = (uint64_t)(&"Macro already defined");
    __twr_v875 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v871)(__twr_v873, __twr_v874, __twr_v875, __twr_v875, __twr_v875);
    __twr_l212:;
    __twr_v876 = 0ULL;
    __twr_v877 = 256ULL;
    __twr_v878 = _mng_macro850 + __twr_v877;
    *(uint8_t*)(__twr_v878) = __twr_v876;
    __twr_v879 = 257ULL;
    __twr_v880 = _mng_macro850 + __twr_v879;
    *(uint8_t*)(__twr_v880) = __twr_v876;
    __twr_v881 = (uint64_t)(&LexCollectValue);
    __twr_v882 = 48ULL;
    __twr_v883 = _mng_macro850 + __twr_v882;
    __twr_v884 = 80ULL;
    __twr_v885 = _mng_macro850 + __twr_v884;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v881)(__twr_v883, __twr_v885, __twr_v876);
    __twr_v886 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v887 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v888 = *(uint64_t*)(__twr_v887);
    __twr_v889 = 168ULL;
    __twr_v890 = _mng_macro850 + __twr_v889;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v886)(__twr_v888, _mng_macro850, __twr_v890);
    __twr_l209:;
    _jkl_epilogue:;
}
void LexParseUndefine() {
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t _mng_token893[4];
    uint64_t __twr_v894;
    uint64_t _mng_buffer895[8];
    uint64_t __twr_v896;
    uint64_t __twr_v897;
    uint64_t __twr_v898;
    uint64_t __twr_v899;
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t __twr_v902;
    uint64_t _mng_oldmacro903;
    uint64_t __twr_v904;
    uint64_t __twr_v905;
    __twr_v891 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v892 = (uint64_t)(&_mng_token893);
    __twr_v894 = (uint64_t)(&_mng_buffer895);
    ((void (*)(uint64_t, uint64_t))__twr_v891)(__twr_v892, __twr_v894);
    __twr_v896 = (uint64_t)(&LexFalseCount);
    __twr_v897 = *(uint32_t*)(__twr_v896);
    if (!(__twr_v897)) { goto __twr_l216; } else { goto __twr_l217; }
    __twr_l217:;
    goto _jkl_epilogue;
    __twr_l216:;
    __twr_v898 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v899 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v900 = *(uint64_t*)(__twr_v899);
    __twr_v901 = (uint64_t)(&_mng_buffer895);
    __twr_v902 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v898)(__twr_v900, __twr_v901);
    _mng_oldmacro903 = __twr_v902;
    if (_mng_oldmacro903) { goto __twr_l218; } else { goto __twr_l219; }
    __twr_l219:;
    goto _jkl_epilogue;
    __twr_l218:;
    __twr_v904 = (uint64_t)(&TlRemoveSymbolTable);
    ((void (*)(uint64_t))__twr_v904)(_mng_oldmacro903);
    __twr_v905 = (uint64_t)(&LexMacroDelete);
    ((void (*)(uint64_t))__twr_v905)(_mng_oldmacro903);
    __twr_l215:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentName(uint64_t _mng_token906, uint64_t _mng_buffer907) {
    uint64_t _jkl_retv;
    uint64_t _mng_len908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t _mng_byte911;
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    uint64_t __twr_v915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint64_t __twr_v933;
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t __twr_v936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    _mng_len908 = 0ULL;
    __twr_l221:;
    __twr_v909 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v910 = ((uint64_t (*)(uint64_t))__twr_v909)(_mng_token906);
    _mng_byte911 = __twr_v910;
    __twr_v912 = 41ULL;
    if (_mng_byte911 != __twr_v912) { goto __twr_l225; } else { goto __twr_l224; }
    __twr_l224:;
    __twr_v913 = 2ULL;
    _jkl_retv = __twr_v913;
    goto _jkl_epilogue;
    goto __twr_l223;
    __twr_l225:;
    __twr_v914 = 44ULL;
    if (_mng_byte911 != __twr_v914) { goto __twr_l223; } else { goto __twr_l226; }
    __twr_l226:;
    goto __twr_l221;
    __twr_l223:;
    goto __twr_l222;
    goto __twr_l221;
    __twr_l222:;
    __twr_l227:;
    __twr_v915 = (uint64_t)(&LexCharTreatment);
    __twr_v916 = __twr_v915 + _mng_byte911;
    __twr_v917 = *(uint8_t*)(__twr_v916);
    __twr_v918 = 3ULL;
    if (__twr_v917 != __twr_v918) { goto __twr_l229; } else { goto __twr_l230; }
    __twr_l230:;
    __twr_v919 = 0ULL;
    *(uint8_t*)(_mng_buffer907) = __twr_v919;
    __twr_v920 = 1ULL;
    _jkl_retv = __twr_v920;
    goto _jkl_epilogue;
    __twr_l229:;
    __twr_v921 = 41ULL;
    if (_mng_byte911 != __twr_v921) { goto __twr_l231; } else { goto __twr_l232; }
    __twr_l232:;
    __twr_v922 = 0ULL;
    *(uint8_t*)(_mng_buffer907) = __twr_v922;
    __twr_v923 = 3ULL;
    _jkl_retv = __twr_v923;
    goto _jkl_epilogue;
    __twr_l231:;
    __twr_v924 = 44ULL;
    if (_mng_byte911 != __twr_v924) { goto __twr_l233; } else { goto __twr_l234; }
    __twr_l234:;
    __twr_v925 = 0ULL;
    *(uint8_t*)(_mng_buffer907) = __twr_v925;
    __twr_v926 = 1ULL;
    _jkl_retv = __twr_v926;
    goto _jkl_epilogue;
    __twr_l233:;
    __twr_v927 = (uint64_t)(&LexCharTreatment);
    __twr_v928 = __twr_v927 + _mng_byte911;
    __twr_v929 = *(uint8_t*)(__twr_v928);
    if (!(__twr_v929)) { goto __twr_l235; } else { goto __twr_l236; }
    __twr_l236:;
    __twr_v930 = (uint64_t)(&LexTokenError);
    __twr_v931 = (uint64_t)(&"Illegal character in token");
    __twr_v932 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v930)(_mng_token906, __twr_v931, __twr_v932, __twr_v932, __twr_v932);
    __twr_l235:;
    __twr_v933 = 63ULL;
    if (_mng_len908 != __twr_v933) { goto __twr_l237; } else { goto __twr_l238; }
    __twr_l238:;
    __twr_v934 = (uint64_t)(&LexTokenError);
    __twr_v935 = (uint64_t)(&"Token length too great");
    __twr_v936 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v934)(_mng_token906, __twr_v935, __twr_v936, __twr_v936, __twr_v936);
    __twr_l237:;
    *(uint8_t*)(_mng_buffer907) = _mng_byte911;
    __twr_v937 = 1ULL;
    __twr_v938 = _mng_buffer907 + __twr_v937;
    _mng_buffer907 = __twr_v938;
    __twr_v939 = _mng_len908 + __twr_v937;
    _mng_len908 = __twr_v939;
    __twr_v940 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v941 = ((uint64_t (*)())__twr_v940)();
    _mng_byte911 = __twr_v941;
    goto __twr_l227;
    __twr_l228:;
    __twr_l220:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectMacroArgumentList(uint64_t _mng_ignore942, uint64_t _mng_o_arglisthead, uint64_t _mng_o_length) {
    uint64_t _mng_arglisttail943;
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t _mng_hashtable946[196];
    uint64_t _mng_arglisthead947;
    uint64_t _mng_length948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    uint64_t _mng_token951[4];
    uint64_t __twr_v952;
    uint64_t _mng_buffer953[8];
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    uint64_t _mng_state956;
    uint64_t __twr_v957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t __twr_v961;
    uint64_t __twr_v962;
    uint64_t _mng_created963;
    uint64_t _mng_arg964;
    uint64_t __twr_v965;
    uint64_t __twr_v966;
    uint64_t __twr_v967;
    uint64_t __twr_v968;
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t __twr_v975;
    uint64_t __twr_v976;
    uint64_t __twr_v977;
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    _mng_arglisttail943 = 0ULL;
    __twr_v944 = (uint64_t)(&TlInitializeHashTable);
    __twr_v945 = (uint64_t)(&_mng_hashtable946);
    ((void (*)(uint64_t))__twr_v944)(__twr_v945);
    _mng_arglisthead947 = 0ULL;
    _mng_length948 = 0ULL;
    __twr_l240:;
    __twr_v949 = (uint64_t)(&LexCollectMacroArgumentName);
    __twr_v950 = (uint64_t)(&_mng_token951);
    __twr_v952 = (uint64_t)(&_mng_buffer953);
    __twr_v954 = 1ULL;
    __twr_v955 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v949)(__twr_v950, __twr_v952);
    _mng_state956 = __twr_v955;
    __twr_v957 = _mng_state956 & __twr_v954;
    if (!(__twr_v957)) { goto __twr_l242; } else { goto __twr_l244; }
    __twr_l244:;
    if (_mng_ignore942) { goto __twr_l242; } else { goto __twr_l243; }
    __twr_l243:;
    __twr_v958 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v959 = (uint64_t)(&_mng_hashtable946);
    __twr_v960 = 120ULL;
    __twr_v961 = (uint64_t)(&_mng_buffer953);
    __twr_v962 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v958)(__twr_v959, __twr_v960, __twr_v961, (uint64_t)(&_mng_created963));
    _mng_arg964 = __twr_v962;
    if (_mng_created963) { goto __twr_l245; } else { goto __twr_l246; }
    __twr_l246:;
    __twr_v965 = (uint64_t)(&LexTokenError);
    __twr_v966 = (uint64_t)(&_mng_token951);
    __twr_v967 = (uint64_t)(&"Macro argument name already used");
    __twr_v968 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v965)(__twr_v966, __twr_v967, __twr_v968, __twr_v968, __twr_v968);
    __twr_l245:;
    __twr_v969 = (uint64_t)(&TlCopyString);
    __twr_v970 = 56ULL;
    __twr_v971 = _mng_arg964 + __twr_v970;
    __twr_v972 = 1ULL;
    __twr_v973 = (uint64_t)(&_mng_buffer953);
    __twr_v974 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v969)(__twr_v971, __twr_v973, __twr_v974);
    __twr_v975 = _mng_length948 + __twr_v972;
    _mng_length948 = __twr_v975;
    __twr_v976 = 0ULL;
    __twr_v977 = 48ULL;
    __twr_v978 = _mng_arg964 + __twr_v977;
    *(uint64_t*)(__twr_v978) = __twr_v976;
    if (!(_mng_arglisttail943)) { goto __twr_l249; } else { goto __twr_l248; }
    __twr_l248:;
    __twr_v979 = 48ULL;
    __twr_v980 = _mng_arglisttail943 + __twr_v979;
    *(uint64_t*)(__twr_v980) = _mng_arg964;
    goto __twr_l247;
    __twr_l249:;
    _mng_arglisthead947 = _mng_arg964;
    __twr_l247:;
    _mng_arglisttail943 = _mng_arg964;
    __twr_l242:;
    __twr_v981 = 2ULL;
    __twr_v982 = _mng_state956 & __twr_v981;
    if (!(__twr_v982)) { goto __twr_l250; } else { goto __twr_l251; }
    __twr_l251:;
    goto _jkl_epilogue;
    __twr_l250:;
    goto __twr_l240;
    __twr_l241:;
    __twr_l239:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_arglisthead) = _mng_arglisthead947;
    *(uint64_t*)(_mng_o_length) = _mng_length948;
}
void LexParseMacro() {
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t _mng_macro986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t __twr_v990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t _mng_trashtoken997[4];
    uint64_t __twr_v998;
    uint64_t _mng_byte999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t __twr_v1008;
    uint64_t __twr_v1009;
    uint64_t _mng_length1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t _mng_contentsbuffer1015[11];
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t _mng_oldmacro1035;
    uint64_t __twr_v1036;
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    __twr_v983 = (uint64_t)(&TlAllocateFromZone);
    __twr_v984 = (uint64_t)(&LexMacroZone);
    __twr_v985 = ((uint64_t (*)(uint64_t))__twr_v983)(__twr_v984);
    _mng_macro986 = __twr_v985;
    __twr_v987 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v988 = 80ULL;
    __twr_v989 = _mng_macro986 + __twr_v988;
    ((void (*)(uint64_t))__twr_v987)(__twr_v989);
    __twr_v990 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v991 = 48ULL;
    __twr_v992 = _mng_macro986 + __twr_v991;
    __twr_v993 = 168ULL;
    __twr_v994 = _mng_macro986 + __twr_v993;
    ((void (*)(uint64_t, uint64_t))__twr_v990)(__twr_v992, __twr_v994);
    __twr_v995 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v996 = (uint64_t)(&_mng_trashtoken997);
    __twr_v998 = ((uint64_t (*)(uint64_t))__twr_v995)(__twr_v996);
    _mng_byte999 = __twr_v998;
    __twr_v1000 = 40ULL;
    if (_mng_byte999 == __twr_v1000) { goto __twr_l253; } else { goto __twr_l254; }
    __twr_l254:;
    __twr_v1001 = (uint64_t)(&LexTokenError);
    __twr_v1002 = (uint64_t)(&_mng_trashtoken997);
    __twr_v1003 = (uint64_t)(&"Expected an open parenthesis");
    __twr_v1004 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1001)(__twr_v1002, __twr_v1003, __twr_v1004, __twr_v1004, __twr_v1004);
    __twr_l253:;
    __twr_v1005 = (uint64_t)(&LexFalseCount);
    __twr_v1006 = *(uint32_t*)(__twr_v1005);
    if (!(__twr_v1006)) { goto __twr_l255; } else { goto __twr_l256; }
    __twr_l256:;
    __twr_v1007 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1008 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1007)(__twr_v1008, (uint64_t)(&__twr_v1009), (uint64_t)(&_mng_length1010));
    __twr_v1011 = 248ULL;
    __twr_v1012 = _mng_macro986 + __twr_v1011;
    *(uint64_t*)(__twr_v1012) = __twr_v1009;
    __twr_v1013 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1014 = (uint64_t)(&_mng_contentsbuffer1015);
    ((void (*)(uint64_t))__twr_v1013)(__twr_v1014);
    __twr_v1016 = (uint64_t)(&LexCollectValue);
    __twr_v1017 = (uint64_t)(&_mng_trashtoken997);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1016)(__twr_v1017, __twr_v1014, __twr_v1008);
    __twr_v1018 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1018)(__twr_v1014);
    goto _jkl_epilogue;
    __twr_l255:;
    __twr_v1019 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1020 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1019)(__twr_v1020, (uint64_t)(&__twr_v1021), (uint64_t)(&_mng_length1010));
    __twr_v1022 = 248ULL;
    __twr_v1023 = _mng_macro986 + __twr_v1022;
    *(uint64_t*)(__twr_v1023) = __twr_v1021;
    if (_mng_length1010) { goto __twr_l257; } else { goto __twr_l258; }
    __twr_l258:;
    __twr_v1024 = (uint64_t)(&LexTokenError);
    __twr_v1025 = 48ULL;
    __twr_v1026 = _mng_macro986 + __twr_v1025;
    __twr_v1027 = (uint64_t)(&"Must have at least 1 argument");
    __twr_v1028 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1024)(__twr_v1026, __twr_v1027, __twr_v1028, __twr_v1028, __twr_v1028);
    __twr_l257:;
    __twr_v1029 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1030 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1031 = *(uint64_t*)(__twr_v1030);
    __twr_v1032 = 168ULL;
    __twr_v1033 = _mng_macro986 + __twr_v1032;
    __twr_v1034 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1029)(__twr_v1031, __twr_v1033);
    _mng_oldmacro1035 = __twr_v1034;
    if (!(_mng_oldmacro1035)) { goto __twr_l259; } else { goto __twr_l260; }
    __twr_l260:;
    __twr_v1036 = (uint64_t)(&LexTokenError);
    __twr_v1037 = 48ULL;
    __twr_v1038 = _mng_macro986 + __twr_v1037;
    __twr_v1039 = (uint64_t)(&"Macro already defined");
    __twr_v1040 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1036)(__twr_v1038, __twr_v1039, __twr_v1040, __twr_v1040, __twr_v1040);
    __twr_l259:;
    __twr_v1041 = 1ULL;
    __twr_v1042 = 256ULL;
    __twr_v1043 = _mng_macro986 + __twr_v1042;
    *(uint8_t*)(__twr_v1043) = __twr_v1041;
    __twr_v1044 = 0ULL;
    __twr_v1045 = 257ULL;
    __twr_v1046 = _mng_macro986 + __twr_v1045;
    *(uint8_t*)(__twr_v1046) = __twr_v1044;
    __twr_v1047 = (uint64_t)(&LexCollectValue);
    __twr_v1048 = 48ULL;
    __twr_v1049 = _mng_macro986 + __twr_v1048;
    __twr_v1050 = 80ULL;
    __twr_v1051 = _mng_macro986 + __twr_v1050;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1047)(__twr_v1049, __twr_v1051, __twr_v1044);
    __twr_v1052 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1053 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1054 = *(uint64_t*)(__twr_v1053);
    __twr_v1055 = 168ULL;
    __twr_v1056 = _mng_macro986 + __twr_v1055;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1052)(__twr_v1054, _mng_macro986, __twr_v1056);
    __twr_l252:;
    _jkl_epilogue:;
}
void LexParseIf() {
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t _mng_token1059[4];
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t _mng_truthy1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    __twr_v1057 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1058 = (uint64_t)(&_mng_token1059);
    __twr_v1060 = (uint64_t)(&LexFalseCount);
    __twr_v1061 = *(uint32_t*)(__twr_v1060);
    __twr_v1062 = 0ULL;
    __twr_v1063 = (__twr_v1061 != __twr_v1062);
    __twr_v1064 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1057)(__twr_v1058, __twr_v1063);
    _mng_truthy1065 = __twr_v1064;
    __twr_v1066 = *(uint32_t*)(__twr_v1060);
    if (!(__twr_v1066)) { goto __twr_l262; } else { goto __twr_l263; }
    __twr_l263:;
    __twr_v1067 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1068 = (uint64_t)(&LexIfStack);
    __twr_v1069 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1067)(__twr_v1068, __twr_v1069);
    __twr_v1070 = 1ULL;
    __twr_v1071 = (uint64_t)(&LexFalseCount);
    __twr_v1072 = *(uint32_t*)(__twr_v1071);
    __twr_v1073 = __twr_v1072 + __twr_v1070;
    *(uint32_t*)(__twr_v1071) = __twr_v1073;
    goto _jkl_epilogue;
    __twr_l262:;
    if (!(_mng_truthy1065)) { goto __twr_l266; } else { goto __twr_l265; }
    __twr_l265:;
    __twr_v1074 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1075 = (uint64_t)(&LexIfStack);
    __twr_v1076 = 2ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1074)(__twr_v1075, __twr_v1076);
    goto __twr_l264;
    __twr_l266:;
    __twr_v1077 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1078 = (uint64_t)(&LexIfStack);
    __twr_v1079 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1077)(__twr_v1078, __twr_v1079);
    __twr_v1080 = (uint64_t)(&LexFalseCount);
    __twr_v1081 = *(uint32_t*)(__twr_v1080);
    __twr_v1082 = __twr_v1081 + __twr_v1079;
    *(uint32_t*)(__twr_v1080) = __twr_v1082;
    __twr_l264:;
    __twr_l261:;
    _jkl_epilogue:;
}
void LexParseElse() {
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t __twr_v1088;
    uint64_t __twr_v1089;
    uint64_t __twr_v1090;
    uint64_t __twr_v1091;
    uint64_t __twr_v1092;
    uint64_t __twr_v1093;
    uint64_t __twr_v1094;
    uint64_t __twr_v1095;
    uint64_t __twr_v1096;
    uint64_t _mng_status1097;
    uint64_t __twr_v1098;
    uint64_t __twr_v1099;
    uint64_t __twr_v1100;
    uint64_t __twr_v1101;
    uint64_t __twr_v1102;
    uint64_t __twr_v1103;
    uint64_t __twr_v1104;
    uint64_t __twr_v1105;
    uint64_t __twr_v1106;
    uint64_t __twr_v1107;
    uint64_t __twr_v1108;
    uint64_t __twr_v1109;
    uint64_t __twr_v1110;
    uint64_t __twr_v1111;
    uint64_t __twr_v1112;
    uint64_t __twr_v1113;
    uint64_t __twr_v1114;
    uint64_t __twr_v1115;
    uint64_t __twr_v1116;
    uint64_t __twr_v1117;
    uint64_t __twr_v1118;
    uint64_t __twr_v1119;
    uint64_t __twr_v1120;
    uint64_t __twr_v1121;
    uint64_t __twr_v1122;
    __twr_v1083 = (uint64_t)(&LexIfStack);
    __twr_v1084 = *(uint64_t*)(__twr_v1083);
    if (__twr_v1084) { goto __twr_l268; } else { goto __twr_l269; }
    __twr_l269:;
    __twr_v1085 = (uint64_t)(&LexStreamError);
    __twr_v1086 = (uint64_t)(&"ELSE with no matching IF");
    __twr_v1087 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1085)(__twr_v1086, __twr_v1087, __twr_v1087, __twr_v1087);
    __twr_l268:;
    __twr_v1088 = (uint64_t)(&LexIfStack);
    __twr_v1089 = 16ULL;
    __twr_v1090 = __twr_v1088 + __twr_v1089;
    __twr_v1091 = *(uint64_t*)(__twr_v1090);
    __twr_v1092 = *(uint64_t*)(__twr_v1088);
    __twr_v1093 = 1ULL;
    __twr_v1094 = __twr_v1092 - __twr_v1093;
    __twr_v1095 = __twr_v1091 + __twr_v1094;
    __twr_v1096 = *(uint8_t*)(__twr_v1095);
    _mng_status1097 = __twr_v1096;
    if (_mng_status1097) { goto __twr_l270; } else { goto __twr_l271; }
    __twr_l271:;
    goto _jkl_epilogue;
    __twr_l270:;
    __twr_v1098 = 2ULL;
    if (_mng_status1097 != __twr_v1098) { goto __twr_l272; } else { goto __twr_l273; }
    __twr_l273:;
    __twr_v1099 = 0ULL;
    __twr_v1100 = (uint64_t)(&LexIfStack);
    __twr_v1101 = 16ULL;
    __twr_v1102 = __twr_v1100 + __twr_v1101;
    __twr_v1103 = *(uint64_t*)(__twr_v1102);
    __twr_v1104 = *(uint64_t*)(__twr_v1100);
    __twr_v1105 = 1ULL;
    __twr_v1106 = __twr_v1104 - __twr_v1105;
    __twr_v1107 = __twr_v1103 + __twr_v1106;
    *(uint8_t*)(__twr_v1107) = __twr_v1099;
    __twr_v1108 = (uint64_t)(&LexFalseCount);
    __twr_v1109 = *(uint32_t*)(__twr_v1108);
    __twr_v1110 = __twr_v1109 + __twr_v1105;
    *(uint32_t*)(__twr_v1108) = __twr_v1110;
    goto _jkl_epilogue;
    __twr_l272:;
    __twr_v1111 = 2ULL;
    __twr_v1112 = (uint64_t)(&LexIfStack);
    __twr_v1113 = 16ULL;
    __twr_v1114 = __twr_v1112 + __twr_v1113;
    __twr_v1115 = *(uint64_t*)(__twr_v1114);
    __twr_v1116 = *(uint64_t*)(__twr_v1112);
    __twr_v1117 = 1ULL;
    __twr_v1118 = __twr_v1116 - __twr_v1117;
    __twr_v1119 = __twr_v1115 + __twr_v1118;
    *(uint8_t*)(__twr_v1119) = __twr_v1111;
    __twr_v1120 = (uint64_t)(&LexFalseCount);
    __twr_v1121 = *(uint32_t*)(__twr_v1120);
    __twr_v1122 = __twr_v1121 - __twr_v1117;
    *(uint32_t*)(__twr_v1120) = __twr_v1122;
    __twr_l267:;
    _jkl_epilogue:;
}
void LexParseElseif() {
    uint64_t __twr_v1123;
    uint64_t __twr_v1124;
    uint64_t __twr_v1125;
    uint64_t __twr_v1126;
    uint64_t __twr_v1127;
    uint64_t __twr_v1128;
    uint64_t __twr_v1129;
    uint64_t __twr_v1130;
    uint64_t __twr_v1131;
    uint64_t __twr_v1132;
    uint64_t __twr_v1133;
    uint64_t __twr_v1134;
    uint64_t __twr_v1135;
    uint64_t __twr_v1136;
    uint64_t _mng_status1137;
    uint64_t __twr_v1138;
    uint64_t __twr_v1139;
    uint64_t _mng_token1140[4];
    uint64_t __twr_v1141;
    uint64_t __twr_v1142;
    uint64_t __twr_v1143;
    uint64_t __twr_v1144;
    uint64_t __twr_v1145;
    uint64_t __twr_v1146;
    uint64_t __twr_v1147;
    uint64_t __twr_v1148;
    uint64_t __twr_v1149;
    uint64_t __twr_v1150;
    uint64_t __twr_v1151;
    uint64_t __twr_v1152;
    uint64_t __twr_v1153;
    uint64_t __twr_v1154;
    uint64_t __twr_v1155;
    uint64_t __twr_v1156;
    uint64_t __twr_v1157;
    uint64_t __twr_v1158;
    uint64_t __twr_v1159;
    uint64_t __twr_v1160;
    uint64_t __twr_v1161;
    uint64_t __twr_v1162;
    uint64_t _mng_truthy1163;
    uint64_t __twr_v1164;
    uint64_t __twr_v1165;
    uint64_t __twr_v1166;
    uint64_t __twr_v1167;
    uint64_t __twr_v1168;
    uint64_t __twr_v1169;
    uint64_t __twr_v1170;
    uint64_t __twr_v1171;
    uint64_t __twr_v1172;
    uint64_t __twr_v1173;
    uint64_t __twr_v1174;
    uint64_t __twr_v1175;
    __twr_v1123 = (uint64_t)(&LexIfStack);
    __twr_v1124 = *(uint64_t*)(__twr_v1123);
    if (__twr_v1124) { goto __twr_l275; } else { goto __twr_l276; }
    __twr_l276:;
    __twr_v1125 = (uint64_t)(&LexStreamError);
    __twr_v1126 = (uint64_t)(&"ELSEIF with no matching IF");
    __twr_v1127 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1125)(__twr_v1126, __twr_v1127, __twr_v1127, __twr_v1127);
    __twr_l275:;
    __twr_v1128 = (uint64_t)(&LexIfStack);
    __twr_v1129 = 16ULL;
    __twr_v1130 = __twr_v1128 + __twr_v1129;
    __twr_v1131 = *(uint64_t*)(__twr_v1130);
    __twr_v1132 = *(uint64_t*)(__twr_v1128);
    __twr_v1133 = 1ULL;
    __twr_v1134 = __twr_v1132 - __twr_v1133;
    __twr_v1135 = __twr_v1131 + __twr_v1134;
    __twr_v1136 = *(uint8_t*)(__twr_v1135);
    _mng_status1137 = __twr_v1136;
    if (_mng_status1137) { goto __twr_l277; } else { goto __twr_l278; }
    __twr_l278:;
    __twr_v1138 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1139 = (uint64_t)(&_mng_token1140);
    __twr_v1141 = 1ULL;
    __twr_v1142 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1138)(__twr_v1139, __twr_v1141);
    goto _jkl_epilogue;
    __twr_l277:;
    __twr_v1143 = 2ULL;
    if (_mng_status1137 != __twr_v1143) { goto __twr_l279; } else { goto __twr_l280; }
    __twr_l280:;
    __twr_v1144 = 0ULL;
    __twr_v1145 = (uint64_t)(&LexIfStack);
    __twr_v1146 = 16ULL;
    __twr_v1147 = __twr_v1145 + __twr_v1146;
    __twr_v1148 = *(uint64_t*)(__twr_v1147);
    __twr_v1149 = *(uint64_t*)(__twr_v1145);
    __twr_v1150 = 1ULL;
    __twr_v1151 = __twr_v1149 - __twr_v1150;
    __twr_v1152 = __twr_v1148 + __twr_v1151;
    *(uint8_t*)(__twr_v1152) = __twr_v1144;
    __twr_v1153 = (uint64_t)(&LexFalseCount);
    __twr_v1154 = *(uint32_t*)(__twr_v1153);
    __twr_v1155 = __twr_v1154 + __twr_v1150;
    *(uint32_t*)(__twr_v1153) = __twr_v1155;
    __twr_v1156 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1157 = (uint64_t)(&_mng_token1140);
    __twr_v1158 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1156)(__twr_v1157, __twr_v1150);
    goto _jkl_epilogue;
    __twr_l279:;
    __twr_v1159 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1160 = (uint64_t)(&_mng_token1140);
    __twr_v1161 = 0ULL;
    __twr_v1162 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1159)(__twr_v1160, __twr_v1161);
    _mng_truthy1163 = __twr_v1162;
    if (!(_mng_truthy1163)) { goto __twr_l281; } else { goto __twr_l282; }
    __twr_l282:;
    __twr_v1164 = 2ULL;
    __twr_v1165 = (uint64_t)(&LexIfStack);
    __twr_v1166 = 16ULL;
    __twr_v1167 = __twr_v1165 + __twr_v1166;
    __twr_v1168 = *(uint64_t*)(__twr_v1167);
    __twr_v1169 = *(uint64_t*)(__twr_v1165);
    __twr_v1170 = 1ULL;
    __twr_v1171 = __twr_v1169 - __twr_v1170;
    __twr_v1172 = __twr_v1168 + __twr_v1171;
    *(uint8_t*)(__twr_v1172) = __twr_v1164;
    __twr_v1173 = (uint64_t)(&LexFalseCount);
    __twr_v1174 = *(uint32_t*)(__twr_v1173);
    __twr_v1175 = __twr_v1174 - __twr_v1170;
    *(uint32_t*)(__twr_v1173) = __twr_v1175;
    __twr_l281:;
    __twr_l274:;
    _jkl_epilogue:;
}
void LexParseEnd() {
    uint64_t __twr_v1176;
    uint64_t __twr_v1177;
    uint64_t __twr_v1178;
    uint64_t __twr_v1179;
    uint64_t __twr_v1180;
    uint64_t __twr_v1181;
    uint64_t __twr_v1182;
    uint64_t __twr_v1183;
    uint64_t _mng_status1184;
    uint64_t __twr_v1185;
    uint64_t __twr_v1186;
    uint64_t __twr_v1187;
    uint64_t __twr_v1188;
    uint64_t __twr_v1189;
    __twr_v1176 = (uint64_t)(&LexIfStack);
    __twr_v1177 = *(uint64_t*)(__twr_v1176);
    if (__twr_v1177) { goto __twr_l284; } else { goto __twr_l285; }
    __twr_l285:;
    __twr_v1178 = (uint64_t)(&LexStreamError);
    __twr_v1179 = (uint64_t)(&"END with no matching IF");
    __twr_v1180 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1178)(__twr_v1179, __twr_v1180, __twr_v1180, __twr_v1180);
    __twr_l284:;
    __twr_v1181 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1182 = (uint64_t)(&LexIfStack);
    __twr_v1183 = ((uint64_t (*)(uint64_t))__twr_v1181)(__twr_v1182);
    _mng_status1184 = __twr_v1183;
    if (!(_mng_status1184)) { goto __twr_l287; } else { goto __twr_l288; }
    __twr_l288:;
    __twr_v1185 = 1ULL;
    if (_mng_status1184 != __twr_v1185) { goto __twr_l286; } else { goto __twr_l287; }
    __twr_l287:;
    __twr_v1186 = 1ULL;
    __twr_v1187 = (uint64_t)(&LexFalseCount);
    __twr_v1188 = *(uint32_t*)(__twr_v1187);
    __twr_v1189 = __twr_v1188 - __twr_v1186;
    *(uint32_t*)(__twr_v1187) = __twr_v1189;
    goto _jkl_epilogue;
    __twr_l286:;
    __twr_l283:;
    _jkl_epilogue:;
}
void LexParseError() {
    uint64_t __twr_v1190;
    uint64_t __twr_v1191;
    uint64_t _mng_buffer1192[11];
    uint64_t __twr_v1193;
    uint64_t __twr_v1194;
    uint64_t _mng_token1195[4];
    uint64_t __twr_v1196;
    uint64_t __twr_v1197;
    uint64_t __twr_v1198;
    uint64_t __twr_v1199;
    uint64_t __twr_v1200;
    uint64_t __twr_v1201;
    uint64_t __twr_v1202;
    uint64_t __twr_v1203;
    uint64_t __twr_v1204;
    uint64_t __twr_v1205;
    uint64_t __twr_v1206;
    uint64_t __twr_v1207;
    uint64_t __twr_v1208;
    uint64_t __twr_v1209;
    __twr_v1190 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1191 = (uint64_t)(&_mng_buffer1192);
    ((void (*)(uint64_t))__twr_v1190)(__twr_v1191);
    __twr_v1193 = (uint64_t)(&LexCollectValue);
    __twr_v1194 = (uint64_t)(&_mng_token1195);
    __twr_v1196 = (uint64_t)(&LexFalseCount);
    __twr_v1197 = *(uint32_t*)(__twr_v1196);
    __twr_v1198 = 0ULL;
    __twr_v1199 = (__twr_v1197 != __twr_v1198);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1193)(__twr_v1194, __twr_v1191, __twr_v1199);
    __twr_v1200 = *(uint32_t*)(__twr_v1196);
    if (!(__twr_v1200)) { goto __twr_l290; } else { goto __twr_l291; }
    __twr_l291:;
    __twr_v1201 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1202 = (uint64_t)(&_mng_buffer1192);
    ((void (*)(uint64_t))__twr_v1201)(__twr_v1202);
    goto _jkl_epilogue;
    __twr_l290:;
    __twr_v1203 = (uint64_t)(&LexTokenError);
    __twr_v1204 = (uint64_t)(&_mng_token1195);
    __twr_v1205 = (uint64_t)(&_mng_buffer1192);
    __twr_v1206 = 16ULL;
    __twr_v1207 = __twr_v1205 + __twr_v1206;
    __twr_v1208 = *(uint64_t*)(__twr_v1207);
    __twr_v1209 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1203)(__twr_v1204, __twr_v1208, __twr_v1209, __twr_v1209, __twr_v1209);
    __twr_l289:;
    _jkl_epilogue:;
}
void LexParsePrint() {
    uint64_t __twr_v1210;
    uint64_t __twr_v1211;
    uint64_t _mng_buffer1212[11];
    uint64_t __twr_v1213;
    uint64_t __twr_v1214;
    uint64_t _mng_token1215[4];
    uint64_t __twr_v1216;
    uint64_t __twr_v1217;
    uint64_t __twr_v1218;
    uint64_t __twr_v1219;
    uint64_t __twr_v1220;
    uint64_t __twr_v1221;
    uint64_t __twr_v1222;
    uint64_t __twr_v1223;
    uint64_t __twr_v1224;
    uint64_t __twr_v1225;
    uint64_t __twr_v1226;
    uint64_t __twr_v1227;
    uint64_t __twr_v1228;
    uint64_t __twr_v1229;
    __twr_v1210 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1211 = (uint64_t)(&_mng_buffer1212);
    ((void (*)(uint64_t))__twr_v1210)(__twr_v1211);
    __twr_v1213 = (uint64_t)(&LexCollectValue);
    __twr_v1214 = (uint64_t)(&_mng_token1215);
    __twr_v1216 = (uint64_t)(&LexFalseCount);
    __twr_v1217 = *(uint32_t*)(__twr_v1216);
    __twr_v1218 = 0ULL;
    __twr_v1219 = (__twr_v1217 != __twr_v1218);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1213)(__twr_v1214, __twr_v1211, __twr_v1219);
    __twr_v1220 = *(uint32_t*)(__twr_v1216);
    if (!(__twr_v1220)) { goto __twr_l293; } else { goto __twr_l294; }
    __twr_l294:;
    __twr_v1221 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1222 = (uint64_t)(&_mng_buffer1212);
    ((void (*)(uint64_t))__twr_v1221)(__twr_v1222);
    goto _jkl_epilogue;
    __twr_l293:;
    __twr_v1223 = (uint64_t)(&TlPrintString);
    __twr_v1224 = (uint64_t)(&_mng_buffer1212);
    __twr_v1225 = 16ULL;
    __twr_v1226 = __twr_v1224 + __twr_v1225;
    __twr_v1227 = *(uint64_t*)(__twr_v1226);
    ((void (*)(uint64_t))__twr_v1223)(__twr_v1227);
    __twr_v1228 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v1223)(__twr_v1228);
    __twr_v1229 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1229)(__twr_v1224);
    __twr_l292:;
    _jkl_epilogue:;
}
void LexParseAsm() {
    uint64_t __twr_v1230;
    uint64_t __twr_v1231;
    uint64_t __twr_v1232;
    uint64_t __twr_v1233;
    uint64_t _mng_buffer1234[11];
    uint64_t __twr_v1235;
    uint64_t __twr_v1236;
    uint64_t _mng_token1237[4];
    uint64_t __twr_v1238;
    uint64_t __twr_v1239;
    uint64_t __twr_v1240;
    uint64_t __twr_v1241;
    uint64_t __twr_v1242;
    uint64_t _mng_asmblock1243;
    uint64_t _mng_status1244;
    uint64_t __twr_v1245;
    uint64_t __twr_v1246;
    uint64_t __twr_v1247;
    uint64_t __twr_v1248;
    uint64_t __twr_v1249;
    uint64_t __twr_v1250;
    uint64_t __twr_v1251;
    uint64_t __twr_v1252;
    uint64_t __twr_v1253;
    uint64_t __twr_v1254;
    uint64_t __twr_v1255;
    uint64_t __twr_v1256;
    uint64_t __twr_v1257;
    uint64_t __twr_v1258;
    uint64_t __twr_v1259;
    uint64_t __twr_v1260;
    uint64_t __twr_v1261;
    uint64_t __twr_v1262;
    uint64_t __twr_v1263;
    uint64_t __twr_v1264;
    uint64_t __twr_v1265;
    uint64_t __twr_v1266;
    uint64_t __twr_v1267;
    uint64_t __twr_v1268;
    uint64_t __twr_v1269;
    uint64_t __twr_v1270;
    uint64_t __twr_v1271;
    __twr_v1230 = (uint64_t)(&LexFalseCount);
    __twr_v1231 = *(uint32_t*)(__twr_v1230);
    if (!(__twr_v1231)) { goto __twr_l296; } else { goto __twr_l297; }
    __twr_l297:;
    __twr_v1232 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1233 = (uint64_t)(&_mng_buffer1234);
    ((void (*)(uint64_t))__twr_v1232)(__twr_v1233);
    __twr_v1235 = (uint64_t)(&LexCollectValue);
    __twr_v1236 = (uint64_t)(&_mng_token1237);
    __twr_v1238 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1235)(__twr_v1236, __twr_v1233, __twr_v1238);
    __twr_v1239 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1239)(__twr_v1233);
    goto _jkl_epilogue;
    __twr_l296:;
    __twr_v1240 = (uint64_t)(&TlBumpAlloc);
    __twr_v1241 = 136ULL;
    __twr_v1242 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1240)(__twr_v1241, (uint64_t)(&_mng_asmblock1243));
    _mng_status1244 = __twr_v1242;
    if (!(_mng_status1244)) { goto __twr_l298; } else { goto __twr_l299; }
    __twr_l299:;
    __twr_v1245 = (uint64_t)(&TlInternalError);
    __twr_v1246 = (uint64_t)(&"Failed to allocate asm block");
    __twr_v1247 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1245)(__twr_v1246, __twr_v1247, __twr_v1247, __twr_v1247);
    __twr_l298:;
    __twr_v1248 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1249 = 48ULL;
    __twr_v1250 = _mng_asmblock1243 + __twr_v1249;
    ((void (*)(uint64_t))__twr_v1248)(__twr_v1250);
    __twr_v1251 = (uint64_t)(&LexCollectValue);
    __twr_v1252 = 16ULL;
    __twr_v1253 = _mng_asmblock1243 + __twr_v1252;
    __twr_v1254 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1251)(__twr_v1253, __twr_v1250, __twr_v1254);
    __twr_v1255 = (uint64_t)(&LexCurrentSection);
    __twr_v1256 = *(uint64_t*)(__twr_v1255);
    __twr_v1257 = (uint64_t)(&LexDefaultSection);
    if (__twr_v1256 != __twr_v1257) { goto __twr_l302; } else { goto __twr_l301; }
    __twr_l301:;
    __twr_v1258 = (uint64_t)(&LexTextSection);
    __twr_v1259 = 8ULL;
    __twr_v1260 = _mng_asmblock1243 + __twr_v1259;
    *(uint64_t*)(__twr_v1260) = __twr_v1258;
    goto __twr_l300;
    __twr_l302:;
    __twr_v1261 = (uint64_t)(&LexCurrentSection);
    __twr_v1262 = *(uint64_t*)(__twr_v1261);
    __twr_v1263 = 8ULL;
    __twr_v1264 = _mng_asmblock1243 + __twr_v1263;
    *(uint64_t*)(__twr_v1264) = __twr_v1262;
    __twr_l300:;
    __twr_v1265 = 0ULL;
    *(uint64_t*)(_mng_asmblock1243) = __twr_v1265;
    __twr_v1266 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1267 = *(uint64_t*)(__twr_v1266);
    if (__twr_v1267) { goto __twr_l305; } else { goto __twr_l304; }
    __twr_l304:;
    __twr_v1268 = (uint64_t)(&LexAsmBlockListHead);
    *(uint64_t*)(__twr_v1268) = _mng_asmblock1243;
    goto __twr_l303;
    __twr_l305:;
    __twr_v1269 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1270 = *(uint64_t*)(__twr_v1269);
    *(uint64_t*)(__twr_v1270) = _mng_asmblock1243;
    __twr_l303:;
    __twr_v1271 = (uint64_t)(&LexAsmBlockListTail);
    *(uint64_t*)(__twr_v1271) = _mng_asmblock1243;
    __twr_l295:;
    _jkl_epilogue:;
}
void LexParseSection() {
    uint64_t __twr_v1272;
    uint64_t __twr_v1273;
    uint64_t _mng_str1274[11];
    uint64_t __twr_v1275;
    uint64_t __twr_v1276;
    uint64_t _mng_token1277[4];
    uint64_t __twr_v1278;
    uint64_t __twr_v1279;
    uint64_t __twr_v1280;
    uint64_t __twr_v1281;
    uint64_t __twr_v1282;
    uint64_t __twr_v1283;
    uint64_t __twr_v1284;
    uint64_t __twr_v1285;
    uint64_t __twr_v1286;
    uint64_t __twr_v1287;
    uint64_t __twr_v1288;
    uint64_t __twr_v1289;
    uint64_t __twr_v1290;
    uint64_t __twr_v1291;
    uint64_t __twr_v1292;
    uint64_t __twr_v1293;
    uint64_t __twr_v1294;
    uint64_t _mng_section1295;
    uint64_t __twr_v1296;
    uint64_t __twr_v1297;
    __twr_v1272 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1273 = (uint64_t)(&_mng_str1274);
    ((void (*)(uint64_t))__twr_v1272)(__twr_v1273);
    __twr_v1275 = (uint64_t)(&LexCollectString);
    __twr_v1276 = (uint64_t)(&_mng_token1277);
    ((void (*)(uint64_t, uint64_t))__twr_v1275)(__twr_v1276, __twr_v1273);
    __twr_v1278 = (uint64_t)(&LexFalseCount);
    __twr_v1279 = *(uint32_t*)(__twr_v1278);
    if (!(__twr_v1279)) { goto __twr_l307; } else { goto __twr_l308; }
    __twr_l308:;
    __twr_v1280 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1281 = (uint64_t)(&_mng_str1274);
    ((void (*)(uint64_t))__twr_v1280)(__twr_v1281);
    goto _jkl_epilogue;
    __twr_l307:;
    __twr_v1282 = (uint64_t)(&_mng_str1274);
    __twr_v1283 = *(uint64_t*)(__twr_v1282);
    __twr_v1284 = 63ULL;
    if (__twr_v1283 < __twr_v1284) { goto __twr_l309; } else { goto __twr_l310; }
    __twr_l310:;
    __twr_v1285 = (uint64_t)(&LexTokenError);
    __twr_v1286 = (uint64_t)(&_mng_token1277);
    __twr_v1287 = (uint64_t)(&"Section name too long");
    __twr_v1288 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1285)(__twr_v1286, __twr_v1287, __twr_v1288, __twr_v1288, __twr_v1288);
    __twr_l309:;
    __twr_v1289 = (uint64_t)(&LexLookupSection);
    __twr_v1290 = (uint64_t)(&_mng_str1274);
    __twr_v1291 = 16ULL;
    __twr_v1292 = __twr_v1290 + __twr_v1291;
    __twr_v1293 = *(uint64_t*)(__twr_v1292);
    __twr_v1294 = ((uint64_t (*)(uint64_t))__twr_v1289)(__twr_v1293);
    _mng_section1295 = __twr_v1294;
    __twr_v1296 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1296)(__twr_v1290);
    __twr_v1297 = (uint64_t)(&LexNextSymbolSection);
    *(uint64_t*)(__twr_v1297) = _mng_section1295;
    __twr_l306:;
    _jkl_epilogue:;
}
void LexParseEnterSection() {
    uint64_t __twr_v1298;
    uint64_t __twr_v1299;
    uint64_t _mng_str1300[11];
    uint64_t __twr_v1301;
    uint64_t __twr_v1302;
    uint64_t _mng_token1303[4];
    uint64_t __twr_v1304;
    uint64_t __twr_v1305;
    uint64_t __twr_v1306;
    uint64_t __twr_v1307;
    uint64_t __twr_v1308;
    uint64_t __twr_v1309;
    uint64_t __twr_v1310;
    uint64_t __twr_v1311;
    uint64_t __twr_v1312;
    uint64_t __twr_v1313;
    uint64_t __twr_v1314;
    uint64_t __twr_v1315;
    uint64_t __twr_v1316;
    uint64_t __twr_v1317;
    uint64_t __twr_v1318;
    uint64_t __twr_v1319;
    uint64_t __twr_v1320;
    uint64_t _mng_section1321;
    uint64_t __twr_v1322;
    uint64_t __twr_v1323;
    __twr_v1298 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1299 = (uint64_t)(&_mng_str1300);
    ((void (*)(uint64_t))__twr_v1298)(__twr_v1299);
    __twr_v1301 = (uint64_t)(&LexCollectString);
    __twr_v1302 = (uint64_t)(&_mng_token1303);
    ((void (*)(uint64_t, uint64_t))__twr_v1301)(__twr_v1302, __twr_v1299);
    __twr_v1304 = (uint64_t)(&LexFalseCount);
    __twr_v1305 = *(uint32_t*)(__twr_v1304);
    if (!(__twr_v1305)) { goto __twr_l312; } else { goto __twr_l313; }
    __twr_l313:;
    __twr_v1306 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1307 = (uint64_t)(&_mng_str1300);
    ((void (*)(uint64_t))__twr_v1306)(__twr_v1307);
    goto _jkl_epilogue;
    __twr_l312:;
    __twr_v1308 = (uint64_t)(&_mng_str1300);
    __twr_v1309 = *(uint64_t*)(__twr_v1308);
    __twr_v1310 = 63ULL;
    if (__twr_v1309 < __twr_v1310) { goto __twr_l314; } else { goto __twr_l315; }
    __twr_l315:;
    __twr_v1311 = (uint64_t)(&LexTokenError);
    __twr_v1312 = (uint64_t)(&_mng_token1303);
    __twr_v1313 = (uint64_t)(&"Section name too long");
    __twr_v1314 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1311)(__twr_v1312, __twr_v1313, __twr_v1314, __twr_v1314, __twr_v1314);
    __twr_l314:;
    __twr_v1315 = (uint64_t)(&LexLookupSection);
    __twr_v1316 = (uint64_t)(&_mng_str1300);
    __twr_v1317 = 16ULL;
    __twr_v1318 = __twr_v1316 + __twr_v1317;
    __twr_v1319 = *(uint64_t*)(__twr_v1318);
    __twr_v1320 = ((uint64_t (*)(uint64_t))__twr_v1315)(__twr_v1319);
    _mng_section1321 = __twr_v1320;
    __twr_v1322 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1322)(__twr_v1316);
    __twr_v1323 = (uint64_t)(&LexPushSection);
    ((void (*)(uint64_t))__twr_v1323)(_mng_section1321);
    __twr_l311:;
    _jkl_epilogue:;
}
void LexParseLeaveSection() {
    uint64_t __twr_v1324;
    uint64_t __twr_v1325;
    uint64_t _mng_popped1326;
    uint64_t __twr_v1327;
    uint64_t __twr_v1328;
    uint64_t __twr_v1329;
    uint64_t __twr_v1330;
    __twr_v1324 = (uint64_t)(&LexPopSection);
    __twr_v1325 = ((uint64_t (*)())__twr_v1324)();
    _mng_popped1326 = __twr_v1325;
    if (_mng_popped1326) { goto __twr_l317; } else { goto __twr_l318; }
    __twr_l318:;
    __twr_v1327 = (uint64_t)(&LexTokenError);
    __twr_v1328 = (uint64_t)(&LexDirectiveToken);
    __twr_v1329 = (uint64_t)(&"Section stack was empty");
    __twr_v1330 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1327)(__twr_v1328, __twr_v1329, __twr_v1330, __twr_v1330, __twr_v1330);
    __twr_l317:;
    __twr_l316:;
    _jkl_epilogue:;
}
void LexOperatorEquals(uint64_t _mng_buffer1331, uint64_t _mng_ignore1332) {
    uint64_t __twr_v1333;
    uint64_t __twr_v1334;
    uint64_t _mng_token1335[4];
    uint64_t __twr_v1336;
    uint64_t _mng_num11337;
    uint64_t __twr_v1338;
    uint64_t _mng_num21339;
    uint64_t __twr_v1340;
    uint64_t __twr_v1341;
    uint64_t __twr_v1342;
    uint64_t __twr_v1343;
    uint64_t __twr_v1344;
    uint64_t __twr_v1345;
    __twr_v1333 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1334 = (uint64_t)(&_mng_token1335);
    __twr_v1336 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1333)(__twr_v1334, _mng_ignore1332);
    _mng_num11337 = __twr_v1336;
    __twr_v1338 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1333)(__twr_v1334, _mng_ignore1332);
    _mng_num21339 = __twr_v1338;
    __twr_v1340 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1340)();
    __twr_v1341 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1342 = (_mng_num11337 == _mng_num21339);
    __twr_v1343 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1341)(_mng_buffer1331, __twr_v1342, __twr_v1343);
    __twr_v1344 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1345 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1344)(_mng_buffer1331, __twr_v1345);
    __twr_l319:;
    _jkl_epilogue:;
}
void LexOperatorLteq(uint64_t _mng_buffer1346, uint64_t _mng_ignore1347) {
    uint64_t __twr_v1348;
    uint64_t __twr_v1349;
    uint64_t _mng_token1350[4];
    uint64_t __twr_v1351;
    uint64_t _mng_num11352;
    uint64_t __twr_v1353;
    uint64_t _mng_num21354;
    uint64_t __twr_v1355;
    uint64_t __twr_v1356;
    uint64_t __twr_v1357;
    uint64_t __twr_v1358;
    uint64_t __twr_v1359;
    uint64_t __twr_v1360;
    __twr_v1348 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1349 = (uint64_t)(&_mng_token1350);
    __twr_v1351 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1348)(__twr_v1349, _mng_ignore1347);
    _mng_num11352 = __twr_v1351;
    __twr_v1353 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1348)(__twr_v1349, _mng_ignore1347);
    _mng_num21354 = __twr_v1353;
    __twr_v1355 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1355)();
    __twr_v1356 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1357 = (_mng_num11352 <= _mng_num21354);
    __twr_v1358 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1356)(_mng_buffer1346, __twr_v1357, __twr_v1358);
    __twr_v1359 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1360 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1359)(_mng_buffer1346, __twr_v1360);
    __twr_l320:;
    _jkl_epilogue:;
}
void LexOperatorGteq(uint64_t _mng_buffer1361, uint64_t _mng_ignore1362) {
    uint64_t __twr_v1363;
    uint64_t __twr_v1364;
    uint64_t _mng_token1365[4];
    uint64_t __twr_v1366;
    uint64_t _mng_num11367;
    uint64_t __twr_v1368;
    uint64_t _mng_num21369;
    uint64_t __twr_v1370;
    uint64_t __twr_v1371;
    uint64_t __twr_v1372;
    uint64_t __twr_v1373;
    uint64_t __twr_v1374;
    uint64_t __twr_v1375;
    __twr_v1363 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1364 = (uint64_t)(&_mng_token1365);
    __twr_v1366 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1363)(__twr_v1364, _mng_ignore1362);
    _mng_num11367 = __twr_v1366;
    __twr_v1368 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1363)(__twr_v1364, _mng_ignore1362);
    _mng_num21369 = __twr_v1368;
    __twr_v1370 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1370)();
    __twr_v1371 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1372 = (_mng_num11367 >= _mng_num21369);
    __twr_v1373 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1371)(_mng_buffer1361, __twr_v1372, __twr_v1373);
    __twr_v1374 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1375 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1374)(_mng_buffer1361, __twr_v1375);
    __twr_l321:;
    _jkl_epilogue:;
}
void LexOperatorNeq(uint64_t _mng_buffer1376, uint64_t _mng_ignore1377) {
    uint64_t __twr_v1378;
    uint64_t __twr_v1379;
    uint64_t _mng_token1380[4];
    uint64_t __twr_v1381;
    uint64_t _mng_num11382;
    uint64_t __twr_v1383;
    uint64_t _mng_num21384;
    uint64_t __twr_v1385;
    uint64_t __twr_v1386;
    uint64_t __twr_v1387;
    uint64_t __twr_v1388;
    uint64_t __twr_v1389;
    uint64_t __twr_v1390;
    __twr_v1378 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1379 = (uint64_t)(&_mng_token1380);
    __twr_v1381 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1378)(__twr_v1379, _mng_ignore1377);
    _mng_num11382 = __twr_v1381;
    __twr_v1383 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1378)(__twr_v1379, _mng_ignore1377);
    _mng_num21384 = __twr_v1383;
    __twr_v1385 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1385)();
    __twr_v1386 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1387 = (_mng_num11382 != _mng_num21384);
    __twr_v1388 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1386)(_mng_buffer1376, __twr_v1387, __twr_v1388);
    __twr_v1389 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1390 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1389)(_mng_buffer1376, __twr_v1390);
    __twr_l322:;
    _jkl_epilogue:;
}
void LexOperatorLt(uint64_t _mng_buffer1391, uint64_t _mng_ignore1392) {
    uint64_t __twr_v1393;
    uint64_t __twr_v1394;
    uint64_t _mng_token1395[4];
    uint64_t __twr_v1396;
    uint64_t _mng_num11397;
    uint64_t __twr_v1398;
    uint64_t _mng_num21399;
    uint64_t __twr_v1400;
    uint64_t __twr_v1401;
    uint64_t __twr_v1402;
    uint64_t __twr_v1403;
    uint64_t __twr_v1404;
    uint64_t __twr_v1405;
    __twr_v1393 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1394 = (uint64_t)(&_mng_token1395);
    __twr_v1396 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1393)(__twr_v1394, _mng_ignore1392);
    _mng_num11397 = __twr_v1396;
    __twr_v1398 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1393)(__twr_v1394, _mng_ignore1392);
    _mng_num21399 = __twr_v1398;
    __twr_v1400 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1400)();
    __twr_v1401 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1402 = (_mng_num11397 < _mng_num21399);
    __twr_v1403 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1401)(_mng_buffer1391, __twr_v1402, __twr_v1403);
    __twr_v1404 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1405 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1404)(_mng_buffer1391, __twr_v1405);
    __twr_l323:;
    _jkl_epilogue:;
}
void LexOperatorGt(uint64_t _mng_buffer1406, uint64_t _mng_ignore1407) {
    uint64_t __twr_v1408;
    uint64_t __twr_v1409;
    uint64_t _mng_token1410[4];
    uint64_t __twr_v1411;
    uint64_t _mng_num11412;
    uint64_t __twr_v1413;
    uint64_t _mng_num21414;
    uint64_t __twr_v1415;
    uint64_t __twr_v1416;
    uint64_t __twr_v1417;
    uint64_t __twr_v1418;
    uint64_t __twr_v1419;
    uint64_t __twr_v1420;
    __twr_v1408 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1409 = (uint64_t)(&_mng_token1410);
    __twr_v1411 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1408)(__twr_v1409, _mng_ignore1407);
    _mng_num11412 = __twr_v1411;
    __twr_v1413 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1408)(__twr_v1409, _mng_ignore1407);
    _mng_num21414 = __twr_v1413;
    __twr_v1415 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1415)();
    __twr_v1416 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1417 = (_mng_num11412 > _mng_num21414);
    __twr_v1418 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1416)(_mng_buffer1406, __twr_v1417, __twr_v1418);
    __twr_v1419 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1420 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1419)(_mng_buffer1406, __twr_v1420);
    __twr_l324:;
    _jkl_epilogue:;
}
void LexOperatorAdd(uint64_t _mng_buffer1421, uint64_t _mng_ignore1422) {
    uint64_t __twr_v1423;
    uint64_t __twr_v1424;
    uint64_t _mng_token1425[4];
    uint64_t __twr_v1426;
    uint64_t _mng_num11427;
    uint64_t __twr_v1428;
    uint64_t _mng_num21429;
    uint64_t __twr_v1430;
    uint64_t __twr_v1431;
    uint64_t __twr_v1432;
    uint64_t __twr_v1433;
    uint64_t __twr_v1434;
    uint64_t __twr_v1435;
    __twr_v1423 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1424 = (uint64_t)(&_mng_token1425);
    __twr_v1426 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1423)(__twr_v1424, _mng_ignore1422);
    _mng_num11427 = __twr_v1426;
    __twr_v1428 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1423)(__twr_v1424, _mng_ignore1422);
    _mng_num21429 = __twr_v1428;
    __twr_v1430 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1430)();
    __twr_v1431 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1432 = _mng_num11427 + _mng_num21429;
    __twr_v1433 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1431)(_mng_buffer1421, __twr_v1432, __twr_v1433);
    __twr_v1434 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1435 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1434)(_mng_buffer1421, __twr_v1435);
    __twr_l325:;
    _jkl_epilogue:;
}
void LexOperatorSub(uint64_t _mng_buffer1436, uint64_t _mng_ignore1437) {
    uint64_t __twr_v1438;
    uint64_t __twr_v1439;
    uint64_t _mng_token1440[4];
    uint64_t __twr_v1441;
    uint64_t _mng_num11442;
    uint64_t __twr_v1443;
    uint64_t _mng_num21444;
    uint64_t __twr_v1445;
    uint64_t __twr_v1446;
    uint64_t __twr_v1447;
    uint64_t __twr_v1448;
    uint64_t __twr_v1449;
    uint64_t __twr_v1450;
    __twr_v1438 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1439 = (uint64_t)(&_mng_token1440);
    __twr_v1441 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1438)(__twr_v1439, _mng_ignore1437);
    _mng_num11442 = __twr_v1441;
    __twr_v1443 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1438)(__twr_v1439, _mng_ignore1437);
    _mng_num21444 = __twr_v1443;
    __twr_v1445 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1445)();
    __twr_v1446 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1447 = _mng_num11442 - _mng_num21444;
    __twr_v1448 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1446)(_mng_buffer1436, __twr_v1447, __twr_v1448);
    __twr_v1449 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1450 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1449)(_mng_buffer1436, __twr_v1450);
    __twr_l326:;
    _jkl_epilogue:;
}
void LexOperatorMul(uint64_t _mng_buffer1451, uint64_t _mng_ignore1452) {
    uint64_t __twr_v1453;
    uint64_t __twr_v1454;
    uint64_t _mng_token1455[4];
    uint64_t __twr_v1456;
    uint64_t _mng_num11457;
    uint64_t __twr_v1458;
    uint64_t _mng_num21459;
    uint64_t __twr_v1460;
    uint64_t __twr_v1461;
    uint64_t __twr_v1462;
    uint64_t __twr_v1463;
    uint64_t __twr_v1464;
    uint64_t __twr_v1465;
    __twr_v1453 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1454 = (uint64_t)(&_mng_token1455);
    __twr_v1456 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1453)(__twr_v1454, _mng_ignore1452);
    _mng_num11457 = __twr_v1456;
    __twr_v1458 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1453)(__twr_v1454, _mng_ignore1452);
    _mng_num21459 = __twr_v1458;
    __twr_v1460 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1460)();
    __twr_v1461 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1462 = _mng_num11457 * _mng_num21459;
    __twr_v1463 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1461)(_mng_buffer1451, __twr_v1462, __twr_v1463);
    __twr_v1464 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1465 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1464)(_mng_buffer1451, __twr_v1465);
    __twr_l327:;
    _jkl_epilogue:;
}
void LexOperatorDiv(uint64_t _mng_buffer1466, uint64_t _mng_ignore1467) {
    uint64_t __twr_v1468;
    uint64_t __twr_v1469;
    uint64_t _mng_token1470[4];
    uint64_t __twr_v1471;
    uint64_t _mng_num11472;
    uint64_t __twr_v1473;
    uint64_t _mng_num21474;
    uint64_t __twr_v1475;
    uint64_t __twr_v1476;
    uint64_t __twr_v1477;
    uint64_t __twr_v1478;
    uint64_t __twr_v1479;
    uint64_t __twr_v1480;
    __twr_v1468 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1469 = (uint64_t)(&_mng_token1470);
    __twr_v1471 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1468)(__twr_v1469, _mng_ignore1467);
    _mng_num11472 = __twr_v1471;
    __twr_v1473 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1468)(__twr_v1469, _mng_ignore1467);
    _mng_num21474 = __twr_v1473;
    __twr_v1475 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1475)();
    __twr_v1476 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1477 = _mng_num11472 / _mng_num21474;
    __twr_v1478 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1476)(_mng_buffer1466, __twr_v1477, __twr_v1478);
    __twr_v1479 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1480 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1479)(_mng_buffer1466, __twr_v1480);
    __twr_l328:;
    _jkl_epilogue:;
}
void LexOperatorLsh(uint64_t _mng_buffer1481, uint64_t _mng_ignore1482) {
    uint64_t __twr_v1483;
    uint64_t __twr_v1484;
    uint64_t _mng_token1485[4];
    uint64_t __twr_v1486;
    uint64_t _mng_num11487;
    uint64_t __twr_v1488;
    uint64_t _mng_num21489;
    uint64_t __twr_v1490;
    uint64_t __twr_v1491;
    uint64_t __twr_v1492;
    uint64_t __twr_v1493;
    uint64_t __twr_v1494;
    uint64_t __twr_v1495;
    __twr_v1483 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1484 = (uint64_t)(&_mng_token1485);
    __twr_v1486 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1483)(__twr_v1484, _mng_ignore1482);
    _mng_num11487 = __twr_v1486;
    __twr_v1488 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1483)(__twr_v1484, _mng_ignore1482);
    _mng_num21489 = __twr_v1488;
    __twr_v1490 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1490)();
    __twr_v1491 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1492 = _mng_num11487 << _mng_num21489;
    __twr_v1493 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1491)(_mng_buffer1481, __twr_v1492, __twr_v1493);
    __twr_v1494 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1495 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1494)(_mng_buffer1481, __twr_v1495);
    __twr_l329:;
    _jkl_epilogue:;
}
void LexOperatorRsh(uint64_t _mng_buffer1496, uint64_t _mng_ignore1497) {
    uint64_t __twr_v1498;
    uint64_t __twr_v1499;
    uint64_t _mng_token1500[4];
    uint64_t __twr_v1501;
    uint64_t _mng_num11502;
    uint64_t __twr_v1503;
    uint64_t _mng_num21504;
    uint64_t __twr_v1505;
    uint64_t __twr_v1506;
    uint64_t __twr_v1507;
    uint64_t __twr_v1508;
    uint64_t __twr_v1509;
    uint64_t __twr_v1510;
    __twr_v1498 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1499 = (uint64_t)(&_mng_token1500);
    __twr_v1501 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1498)(__twr_v1499, _mng_ignore1497);
    _mng_num11502 = __twr_v1501;
    __twr_v1503 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1498)(__twr_v1499, _mng_ignore1497);
    _mng_num21504 = __twr_v1503;
    __twr_v1505 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1505)();
    __twr_v1506 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1507 = _mng_num11502 >> _mng_num21504;
    __twr_v1508 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1506)(_mng_buffer1496, __twr_v1507, __twr_v1508);
    __twr_v1509 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1510 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1509)(_mng_buffer1496, __twr_v1510);
    __twr_l330:;
    _jkl_epilogue:;
}
void LexOperatorStrcat(uint64_t _mng_buffer1511, uint64_t _mng_ignore1512) {
    uint64_t __twr_v1513;
    uint64_t __twr_v1514;
    uint64_t _mng_token1515[4];
    uint64_t __twr_v1516;
    uint64_t __twr_v1517;
    uint64_t __twr_v1518;
    __twr_v1513 = (uint64_t)(&LexCollectValue);
    __twr_v1514 = (uint64_t)(&_mng_token1515);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1513)(__twr_v1514, _mng_buffer1511, _mng_ignore1512);
    __twr_v1516 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1517 = ((uint64_t (*)(uint64_t))__twr_v1516)(_mng_buffer1511);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1513)(__twr_v1514, _mng_buffer1511, _mng_ignore1512);
    __twr_v1518 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1518)();
    __twr_l331:;
    _jkl_epilogue:;
}
void LexOperatorStrcmp(uint64_t _mng_buffer1519, uint64_t _mng_ignore1520) {
    uint64_t __twr_v1521;
    uint64_t __twr_v1522;
    uint64_t _mng_str11523[11];
    uint64_t __twr_v1524;
    uint64_t _mng_str21525[11];
    uint64_t __twr_v1526;
    uint64_t __twr_v1527;
    uint64_t _mng_token1528[4];
    uint64_t __twr_v1529;
    uint64_t __twr_v1530;
    uint64_t __twr_v1531;
    uint64_t __twr_v1532;
    uint64_t __twr_v1533;
    uint64_t __twr_v1534;
    uint64_t __twr_v1535;
    uint64_t __twr_v1536;
    uint64_t __twr_v1537;
    uint64_t __twr_v1538;
    uint64_t __twr_v1539;
    uint64_t __twr_v1540;
    uint64_t __twr_v1541;
    uint64_t __twr_v1542;
    __twr_v1521 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1522 = (uint64_t)(&_mng_str11523);
    ((void (*)(uint64_t))__twr_v1521)(__twr_v1522);
    __twr_v1524 = (uint64_t)(&_mng_str21525);
    ((void (*)(uint64_t))__twr_v1521)(__twr_v1524);
    __twr_v1526 = (uint64_t)(&LexCollectValue);
    __twr_v1527 = (uint64_t)(&_mng_token1528);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1526)(__twr_v1527, __twr_v1522, _mng_ignore1520);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1526)(__twr_v1527, __twr_v1524, _mng_ignore1520);
    __twr_v1529 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1529)(__twr_v1522);
    ((void (*)(uint64_t))__twr_v1529)(__twr_v1524);
    __twr_v1530 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1530)();
    __twr_v1531 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1532 = (uint64_t)(&TlCompareString);
    __twr_v1533 = 16ULL;
    __twr_v1534 = __twr_v1522 + __twr_v1533;
    __twr_v1535 = *(uint64_t*)(__twr_v1534);
    __twr_v1536 = __twr_v1524 + __twr_v1533;
    __twr_v1537 = *(uint64_t*)(__twr_v1536);
    __twr_v1538 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1532)(__twr_v1535, __twr_v1537);
    __twr_v1539 = 0ULL;
    __twr_v1540 = (__twr_v1538 == __twr_v1539);
    __twr_v1541 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1531)(_mng_buffer1519, __twr_v1540, __twr_v1541);
    __twr_v1542 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1542)(_mng_buffer1519, __twr_v1539);
    __twr_l332:;
    _jkl_epilogue:;
}
void LexOperatorNot(uint64_t _mng_buffer1543, uint64_t _mng_ignore1544) {
    uint64_t __twr_v1545;
    uint64_t __twr_v1546;
    uint64_t _mng_token1547[4];
    uint64_t __twr_v1548;
    uint64_t _mng_num11549;
    uint64_t __twr_v1550;
    uint64_t __twr_v1551;
    uint64_t __twr_v1552;
    uint64_t __twr_v1553;
    uint64_t __twr_v1554;
    uint64_t __twr_v1555;
    __twr_v1545 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1546 = (uint64_t)(&_mng_token1547);
    __twr_v1548 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1545)(__twr_v1546, _mng_ignore1544);
    _mng_num11549 = __twr_v1548;
    __twr_v1550 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1550)();
    __twr_v1551 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1552 = !_mng_num11549;
    __twr_v1553 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1551)(_mng_buffer1543, __twr_v1552, __twr_v1553);
    __twr_v1554 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1555 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1554)(_mng_buffer1543, __twr_v1555);
    __twr_l333:;
    _jkl_epilogue:;
}
void LexOperatorOr(uint64_t _mng_buffer1556, uint64_t _mng_ignore1557) {
    uint64_t __twr_v1558;
    uint64_t __twr_v1559;
    uint64_t _mng_token1560[4];
    uint64_t __twr_v1561;
    uint64_t _mng_num11562;
    uint64_t __twr_v1563;
    uint64_t _mng_num21564;
    uint64_t __twr_v1565;
    uint64_t __twr_v1566;
    uint64_t __twr_v1567;
    uint64_t __twr_v1568;
    uint64_t __twr_v1569;
    uint64_t __twr_v1570;
    __twr_v1558 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1559 = (uint64_t)(&_mng_token1560);
    __twr_v1561 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1558)(__twr_v1559, _mng_ignore1557);
    _mng_num11562 = __twr_v1561;
    __twr_v1563 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1558)(__twr_v1559, _mng_ignore1557);
    _mng_num21564 = __twr_v1563;
    __twr_v1565 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1565)();
    __twr_v1566 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (_mng_num11562) { goto __twr_l336; } else { goto __twr_l335; }
    __twr_l335:;
    if (!(_mng_num21564)) { goto __twr_l337; } else { goto __twr_l336; }
    __twr_l336:;
    __twr_v1567 = 1ULL;
    goto __twr_l338;
    __twr_l337:;
    __twr_v1567 = 0ULL;
    __twr_l338:;
    __twr_v1568 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1566)(_mng_buffer1556, __twr_v1567, __twr_v1568);
    __twr_v1569 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1570 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1569)(_mng_buffer1556, __twr_v1570);
    __twr_l334:;
    _jkl_epilogue:;
}
void LexOperatorAnd(uint64_t _mng_buffer1571, uint64_t _mng_ignore1572) {
    uint64_t __twr_v1573;
    uint64_t __twr_v1574;
    uint64_t _mng_token1575[4];
    uint64_t __twr_v1576;
    uint64_t _mng_num11577;
    uint64_t __twr_v1578;
    uint64_t _mng_num21579;
    uint64_t __twr_v1580;
    uint64_t __twr_v1581;
    uint64_t __twr_v1582;
    uint64_t __twr_v1583;
    uint64_t __twr_v1584;
    uint64_t __twr_v1585;
    __twr_v1573 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1574 = (uint64_t)(&_mng_token1575);
    __twr_v1576 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1573)(__twr_v1574, _mng_ignore1572);
    _mng_num11577 = __twr_v1576;
    __twr_v1578 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1573)(__twr_v1574, _mng_ignore1572);
    _mng_num21579 = __twr_v1578;
    __twr_v1580 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1580)();
    __twr_v1581 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (!(_mng_num11577)) { goto __twr_l342; } else { goto __twr_l340; }
    __twr_l340:;
    if (!(_mng_num21579)) { goto __twr_l342; } else { goto __twr_l341; }
    __twr_l341:;
    __twr_v1582 = 1ULL;
    goto __twr_l343;
    __twr_l342:;
    __twr_v1582 = 0ULL;
    __twr_l343:;
    __twr_v1583 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1581)(_mng_buffer1571, __twr_v1582, __twr_v1583);
    __twr_v1584 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1585 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1584)(_mng_buffer1571, __twr_v1585);
    __twr_l339:;
    _jkl_epilogue:;
}
void LexOperatorDefined(uint64_t _mng_buffer1586, uint64_t _mng_ignore1587) {
    uint64_t __twr_v1588;
    uint64_t __twr_v1589;
    uint64_t _mng_token1590[4];
    uint64_t __twr_v1591;
    uint64_t _mng_tokbuffer1592[8];
    uint64_t __twr_v1593;
    uint64_t __twr_v1594;
    uint64_t __twr_v1595;
    uint64_t __twr_v1596;
    uint64_t __twr_v1597;
    uint64_t __twr_v1598;
    uint64_t _mng_macro1599;
    uint64_t __twr_v1600;
    uint64_t __twr_v1601;
    uint64_t __twr_v1602;
    uint64_t __twr_v1603;
    __twr_v1588 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1589 = (uint64_t)(&_mng_token1590);
    __twr_v1591 = (uint64_t)(&_mng_tokbuffer1592);
    __twr_v1593 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1588)(__twr_v1589, __twr_v1591);
    __twr_v1594 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1594)();
    __twr_v1595 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1596 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1597 = *(uint64_t*)(__twr_v1596);
    __twr_v1598 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1595)(__twr_v1597, __twr_v1591);
    _mng_macro1599 = __twr_v1598;
    __twr_v1600 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1601 = (_mng_macro1599 != __twr_v1593);
    __twr_v1602 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1600)(_mng_buffer1586, __twr_v1601, __twr_v1602);
    __twr_v1603 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1603)(_mng_buffer1586, __twr_v1593);
    __twr_l344:;
    _jkl_epilogue:;
}
void LexOperatorBitNot(uint64_t _mng_buffer1604, uint64_t _mng_ignore1605) {
    uint64_t __twr_v1606;
    uint64_t __twr_v1607;
    uint64_t _mng_token1608[4];
    uint64_t __twr_v1609;
    uint64_t _mng_num11610;
    uint64_t __twr_v1611;
    uint64_t __twr_v1612;
    uint64_t __twr_v1613;
    uint64_t __twr_v1614;
    uint64_t __twr_v1615;
    uint64_t __twr_v1616;
    __twr_v1606 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1607 = (uint64_t)(&_mng_token1608);
    __twr_v1609 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1606)(__twr_v1607, _mng_ignore1605);
    _mng_num11610 = __twr_v1609;
    __twr_v1611 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1611)();
    __twr_v1612 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1613 = ~_mng_num11610;
    __twr_v1614 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1612)(_mng_buffer1604, __twr_v1613, __twr_v1614);
    __twr_v1615 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1616 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1615)(_mng_buffer1604, __twr_v1616);
    __twr_l345:;
    _jkl_epilogue:;
}
void LexOperatorBitOr(uint64_t _mng_buffer1617, uint64_t _mng_ignore1618) {
    uint64_t __twr_v1619;
    uint64_t __twr_v1620;
    uint64_t _mng_token1621[4];
    uint64_t __twr_v1622;
    uint64_t _mng_num11623;
    uint64_t __twr_v1624;
    uint64_t _mng_num21625;
    uint64_t __twr_v1626;
    uint64_t __twr_v1627;
    uint64_t __twr_v1628;
    uint64_t __twr_v1629;
    uint64_t __twr_v1630;
    uint64_t __twr_v1631;
    __twr_v1619 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1620 = (uint64_t)(&_mng_token1621);
    __twr_v1622 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1619)(__twr_v1620, _mng_ignore1618);
    _mng_num11623 = __twr_v1622;
    __twr_v1624 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1619)(__twr_v1620, _mng_ignore1618);
    _mng_num21625 = __twr_v1624;
    __twr_v1626 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1626)();
    __twr_v1627 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1628 = _mng_num11623 | _mng_num21625;
    __twr_v1629 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1627)(_mng_buffer1617, __twr_v1628, __twr_v1629);
    __twr_v1630 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1631 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1630)(_mng_buffer1617, __twr_v1631);
    __twr_l346:;
    _jkl_epilogue:;
}
void LexOperatorBitXor(uint64_t _mng_buffer1632, uint64_t _mng_ignore1633) {
    uint64_t __twr_v1634;
    uint64_t __twr_v1635;
    uint64_t _mng_token1636[4];
    uint64_t __twr_v1637;
    uint64_t _mng_num11638;
    uint64_t __twr_v1639;
    uint64_t _mng_num21640;
    uint64_t __twr_v1641;
    uint64_t __twr_v1642;
    uint64_t __twr_v1643;
    uint64_t __twr_v1644;
    uint64_t __twr_v1645;
    uint64_t __twr_v1646;
    __twr_v1634 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1635 = (uint64_t)(&_mng_token1636);
    __twr_v1637 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1634)(__twr_v1635, _mng_ignore1633);
    _mng_num11638 = __twr_v1637;
    __twr_v1639 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1634)(__twr_v1635, _mng_ignore1633);
    _mng_num21640 = __twr_v1639;
    __twr_v1641 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1641)();
    __twr_v1642 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1643 = _mng_num11638 ^ _mng_num21640;
    __twr_v1644 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1642)(_mng_buffer1632, __twr_v1643, __twr_v1644);
    __twr_v1645 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1646 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1645)(_mng_buffer1632, __twr_v1646);
    __twr_l347:;
    _jkl_epilogue:;
}
void LexOperatorBitAnd(uint64_t _mng_buffer1647, uint64_t _mng_ignore1648) {
    uint64_t __twr_v1649;
    uint64_t __twr_v1650;
    uint64_t _mng_token1651[4];
    uint64_t __twr_v1652;
    uint64_t _mng_num11653;
    uint64_t __twr_v1654;
    uint64_t _mng_num21655;
    uint64_t __twr_v1656;
    uint64_t __twr_v1657;
    uint64_t __twr_v1658;
    uint64_t __twr_v1659;
    uint64_t __twr_v1660;
    uint64_t __twr_v1661;
    __twr_v1649 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1650 = (uint64_t)(&_mng_token1651);
    __twr_v1652 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1649)(__twr_v1650, _mng_ignore1648);
    _mng_num11653 = __twr_v1652;
    __twr_v1654 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1649)(__twr_v1650, _mng_ignore1648);
    _mng_num21655 = __twr_v1654;
    __twr_v1656 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1656)();
    __twr_v1657 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1658 = _mng_num11653 & _mng_num21655;
    __twr_v1659 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1657)(_mng_buffer1647, __twr_v1658, __twr_v1659);
    __twr_v1660 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1661 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1660)(_mng_buffer1647, __twr_v1661);
    __twr_l348:;
    _jkl_epilogue:;
}
void LexParseDirective() {
    uint64_t __twr_v1662;
    uint64_t __twr_v1663;
    uint64_t __twr_v1664;
    uint64_t _mng_buffer1665[8];
    uint64_t __twr_v1666;
    uint64_t __twr_v1667;
    uint64_t __twr_v1668;
    uint64_t _mng_directive1669;
    uint64_t __twr_v1670;
    uint64_t __twr_v1671;
    uint64_t __twr_v1672;
    uint64_t __twr_v1673;
    uint64_t __twr_v1674;
    uint64_t __twr_v1675;
    uint64_t __twr_v1676;
    __twr_v1662 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1663 = (uint64_t)(&LexDirectiveToken);
    __twr_v1664 = (uint64_t)(&_mng_buffer1665);
    ((void (*)(uint64_t, uint64_t))__twr_v1662)(__twr_v1663, __twr_v1664);
    __twr_v1666 = (uint64_t)(&TlLookupHashTable);
    __twr_v1667 = (uint64_t)(&LexDirectiveHashTable);
    __twr_v1668 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1666)(__twr_v1667, __twr_v1664);
    _mng_directive1669 = __twr_v1668;
    if (_mng_directive1669) { goto __twr_l350; } else { goto __twr_l351; }
    __twr_l351:;
    __twr_v1670 = (uint64_t)(&LexTokenError);
    __twr_v1671 = (uint64_t)(&LexDirectiveToken);
    __twr_v1672 = (uint64_t)(&"Unknown directive");
    __twr_v1673 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1670)(__twr_v1671, __twr_v1672, __twr_v1673, __twr_v1673, __twr_v1673);
    __twr_l350:;
    __twr_v1674 = 48ULL;
    __twr_v1675 = _mng_directive1669 + __twr_v1674;
    __twr_v1676 = *(uint64_t*)(__twr_v1675);
    ((void (*)())__twr_v1676)();
    __twr_l349:;
    _jkl_epilogue:;
}
void LexInitializePreprocessor() {
    uint64_t __twr_v1677;
    uint64_t __twr_v1678;
    uint64_t __twr_v1679;
    uint64_t __twr_v1680;
    uint64_t __twr_v1681;
    uint64_t __twr_v1682;
    uint64_t __twr_v1683;
    uint64_t __twr_v1684;
    uint64_t __twr_v1685;
    uint64_t __twr_v1686;
    uint64_t __twr_v1687;
    uint64_t __twr_v1688;
    uint64_t __twr_v1689;
    uint64_t __twr_v1690;
    uint64_t __twr_v1691;
    uint64_t __twr_v1692;
    uint64_t __twr_v1693;
    uint64_t __twr_v1694;
    uint64_t __twr_v1695;
    uint64_t __twr_v1696;
    uint64_t __twr_v1697;
    uint64_t __twr_v1698;
    uint64_t __twr_v1699;
    uint64_t __twr_v1700;
    uint64_t __twr_v1701;
    uint64_t __twr_v1702;
    uint64_t __twr_v1703;
    uint64_t __twr_v1704;
    uint64_t __twr_v1705;
    uint64_t __twr_v1706;
    uint64_t __twr_v1707;
    uint64_t __twr_v1708;
    uint64_t __twr_v1709;
    uint64_t __twr_v1710;
    uint64_t __twr_v1711;
    uint64_t __twr_v1712;
    uint64_t __twr_v1713;
    uint64_t __twr_v1714;
    uint64_t __twr_v1715;
    uint64_t __twr_v1716;
    uint64_t __twr_v1717;
    uint64_t __twr_v1718;
    uint64_t __twr_v1719;
    uint64_t __twr_v1720;
    uint64_t __twr_v1721;
    uint64_t __twr_v1722;
    uint64_t __twr_v1723;
    uint64_t __twr_v1724;
    uint64_t __twr_v1725;
    uint64_t __twr_v1726;
    uint64_t __twr_v1727;
    uint64_t __twr_v1728;
    uint64_t __twr_v1729;
    uint64_t __twr_v1730;
    uint64_t __twr_v1731;
    uint64_t __twr_v1732;
    uint64_t __twr_v1733;
    uint64_t __twr_v1734;
    uint64_t __twr_v1735;
    uint64_t __twr_v1736;
    uint64_t __twr_v1737;
    uint64_t __twr_v1738;
    uint64_t __twr_v1739;
    uint64_t __twr_v1740;
    uint64_t __twr_v1741;
    uint64_t __twr_v1742;
    uint64_t __twr_v1743;
    uint64_t __twr_v1744;
    uint64_t __twr_v1745;
    uint64_t __twr_v1746;
    uint64_t __twr_v1747;
    uint64_t __twr_v1748;
    uint64_t __twr_v1749;
    uint64_t __twr_v1750;
    uint64_t __twr_v1751;
    uint64_t __twr_v1752;
    uint64_t __twr_v1753;
    uint64_t __twr_v1754;
    uint64_t __twr_v1755;
    uint64_t __twr_v1756;
    uint64_t __twr_v1757;
    uint64_t __twr_v1758;
    uint64_t __twr_v1759;
    uint64_t __twr_v1760;
    __twr_v1677 = (uint64_t)(&TlInitializeHashTable);
    __twr_v1678 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t))__twr_v1677)(__twr_v1678);
    __twr_v1679 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t))__twr_v1677)(__twr_v1679);
    __twr_v1680 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1681 = (uint64_t)(&LexIfStack);
    ((void (*)(uint64_t))__twr_v1680)(__twr_v1681);
    __twr_v1682 = (uint64_t)(&LexCreateMacroTable);
    __twr_v1683 = 0ULL;
    __twr_v1684 = ((uint64_t (*)(uint64_t))__twr_v1682)(__twr_v1683);
    __twr_v1685 = (uint64_t)(&LexRootMacroScope);
    *(uint64_t*)(__twr_v1685) = __twr_v1684;
    __twr_v1686 = *(uint64_t*)(__twr_v1685);
    __twr_v1687 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v1687) = __twr_v1686;
    __twr_v1688 = (uint64_t)(&TlInitializeZone);
    __twr_v1689 = (uint64_t)(&LexMacroZone);
    __twr_v1690 = 258ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1688)(__twr_v1689, __twr_v1690);
    __twr_v1691 = (uint64_t)(&LexInsertDirective);
    __twr_v1692 = (uint64_t)(&"INCLUDE");
    __twr_v1693 = (uint64_t)(&LexParseInclude);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1692, __twr_v1693);
    __twr_v1694 = (uint64_t)(&"DEFINE");
    __twr_v1695 = (uint64_t)(&LexParseDefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1694, __twr_v1695);
    __twr_v1696 = (uint64_t)(&"MACRO");
    __twr_v1697 = (uint64_t)(&LexParseMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1696, __twr_v1697);
    __twr_v1698 = (uint64_t)(&"IF");
    __twr_v1699 = (uint64_t)(&LexParseIf);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1698, __twr_v1699);
    __twr_v1700 = (uint64_t)(&"ELSE");
    __twr_v1701 = (uint64_t)(&LexParseElse);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1700, __twr_v1701);
    __twr_v1702 = (uint64_t)(&"ELSEIF");
    __twr_v1703 = (uint64_t)(&LexParseElseif);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1702, __twr_v1703);
    __twr_v1704 = (uint64_t)(&"END");
    __twr_v1705 = (uint64_t)(&LexParseEnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1704, __twr_v1705);
    __twr_v1706 = (uint64_t)(&"UNDEFINE");
    __twr_v1707 = (uint64_t)(&LexParseUndefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1706, __twr_v1707);
    __twr_v1708 = (uint64_t)(&"ERROR");
    __twr_v1709 = (uint64_t)(&LexParseError);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1708, __twr_v1709);
    __twr_v1710 = (uint64_t)(&"PRINT");
    __twr_v1711 = (uint64_t)(&LexParsePrint);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1710, __twr_v1711);
    __twr_v1712 = (uint64_t)(&"ASM");
    __twr_v1713 = (uint64_t)(&LexParseAsm);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1712, __twr_v1713);
    __twr_v1714 = (uint64_t)(&"SECTION");
    __twr_v1715 = (uint64_t)(&LexParseSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1714, __twr_v1715);
    __twr_v1716 = (uint64_t)(&"ENTERSECTION");
    __twr_v1717 = (uint64_t)(&LexParseEnterSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1716, __twr_v1717);
    __twr_v1718 = (uint64_t)(&"LEAVESECTION");
    __twr_v1719 = (uint64_t)(&LexParseLeaveSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1691)(__twr_v1718, __twr_v1719);
    __twr_v1720 = (uint64_t)(&LexInsertOperator);
    __twr_v1721 = (uint64_t)(&"==");
    __twr_v1722 = (uint64_t)(&LexOperatorEquals);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1721, __twr_v1722);
    __twr_v1723 = (uint64_t)(&"<=");
    __twr_v1724 = (uint64_t)(&LexOperatorLteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1723, __twr_v1724);
    __twr_v1725 = (uint64_t)(&">=");
    __twr_v1726 = (uint64_t)(&LexOperatorGteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1725, __twr_v1726);
    __twr_v1727 = (uint64_t)(&"!=");
    __twr_v1728 = (uint64_t)(&LexOperatorNeq);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1727, __twr_v1728);
    __twr_v1729 = (uint64_t)(&"+");
    __twr_v1730 = (uint64_t)(&LexOperatorAdd);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1729, __twr_v1730);
    __twr_v1731 = (uint64_t)(&"-");
    __twr_v1732 = (uint64_t)(&LexOperatorSub);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1731, __twr_v1732);
    __twr_v1733 = (uint64_t)(&"*");
    __twr_v1734 = (uint64_t)(&LexOperatorMul);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1733, __twr_v1734);
    __twr_v1735 = (uint64_t)(&"/");
    __twr_v1736 = (uint64_t)(&LexOperatorDiv);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1735, __twr_v1736);
    __twr_v1737 = (uint64_t)(&"<<");
    __twr_v1738 = (uint64_t)(&LexOperatorLsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1737, __twr_v1738);
    __twr_v1739 = (uint64_t)(&">>");
    __twr_v1740 = (uint64_t)(&LexOperatorRsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1739, __twr_v1740);
    __twr_v1741 = (uint64_t)(&"STRCAT");
    __twr_v1742 = (uint64_t)(&LexOperatorStrcat);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1741, __twr_v1742);
    __twr_v1743 = (uint64_t)(&"STRCMP");
    __twr_v1744 = (uint64_t)(&LexOperatorStrcmp);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1743, __twr_v1744);
    __twr_v1745 = (uint64_t)(&"NOT");
    __twr_v1746 = (uint64_t)(&LexOperatorNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1745, __twr_v1746);
    __twr_v1747 = (uint64_t)(&"OR");
    __twr_v1748 = (uint64_t)(&LexOperatorOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1747, __twr_v1748);
    __twr_v1749 = (uint64_t)(&"AND");
    __twr_v1750 = (uint64_t)(&LexOperatorAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1749, __twr_v1750);
    __twr_v1751 = (uint64_t)(&"DEFINED");
    __twr_v1752 = (uint64_t)(&LexOperatorDefined);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1751, __twr_v1752);
    __twr_v1753 = (uint64_t)(&"~");
    __twr_v1754 = (uint64_t)(&LexOperatorBitNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1753, __twr_v1754);
    __twr_v1755 = (uint64_t)(&"|");
    __twr_v1756 = (uint64_t)(&LexOperatorBitOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1755, __twr_v1756);
    __twr_v1757 = (uint64_t)(&"$");
    __twr_v1758 = (uint64_t)(&LexOperatorBitXor);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1757, __twr_v1758);
    __twr_v1759 = (uint64_t)(&"&");
    __twr_v1760 = (uint64_t)(&LexOperatorBitAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1720)(__twr_v1759, __twr_v1760);
    __twr_l352:;
    _jkl_epilogue:;
}

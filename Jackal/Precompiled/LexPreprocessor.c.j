#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern void TlInitializeZone(uint64_t _mng_zone87, uint64_t _mng_blocksize88);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone89);
extern void TlFreeToZone(uint64_t _mng_zone90, uint64_t _mng_block91);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant92);
extern void TlPunchValue(uint64_t _mng_ptr93, uint64_t _mng_value94, uint64_t _mng_bytes95);
extern void JklCompileProgram(uint64_t _mng_argc96, uint64_t _mng_argv97);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg98);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename99, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock100, uint64_t _mng_filepath101);
extern uint64_t LexLookupSection(uint64_t _mng_name102);
extern void LexPushSection(uint64_t _mng_section103);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope104);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg105);
extern void LexExpandMacro(uint64_t _mng_macro106, uint64_t _mng_token107);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream108, uint64_t _mng_macro109);
extern void LexUninitializeStream(uint64_t _mng_stream110);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream111);
extern void LexPushStream(uint64_t _mng_stream112);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream113, uint64_t _mng_fileblock114, uint64_t _mng_handle115);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock116, uint64_t _mng_handle117);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope118);
extern uint64_t LexResetScope(uint64_t _mng_scope119);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope120);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest121, uint64_t _mng_src122);
extern void LexGetToken(uint64_t _mng_token123);
extern void LexPutbackToken(uint64_t _mng_token124);
extern uint64_t LexMatchToken(uint64_t _mng_token125, uint64_t _mng_type126, uint64_t _mng_subtype127);
extern void LexStreamError(uint64_t _mng_str128, uint64_t _mng_err1129, uint64_t _mng_err2130, uint64_t _mng_err3131);
extern void LexTokenError(uint64_t _mng_token132, uint64_t _mng_str133, uint64_t _mng_err1134, uint64_t _mng_err2135, uint64_t _mng_err3136);
extern uint64_t LexCrunchNumber(uint64_t _mng_token137, uint64_t _mng_buffer138);
uint64_t LexRootMacroScope = 0ULL;
uint64_t LexCurrentMacroScope = 0ULL;
uint32_t LexMacroDepth = 0ULL;
uint64_t LexAsmBlockListHead = 0ULL;
uint64_t LexAsmBlockListTail = 0ULL;
uint64_t LexDirectiveHashTable[196];
uint64_t LexOperatorHashTable[196];
uint64_t LexIfStack[11];
uint64_t LexMacroZone[2];
uint64_t LexDirectiveToken[4];
uint64_t LexDirectiveBumpArray[112];
uint64_t LexDirectiveBumpIndex = 0ULL;
void LexInsertDirective(uint64_t _mng_name139, uint64_t _mng_parsefunc140) {
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t _mng_directive147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    __twr_v141 = (uint64_t)(&LexDirectiveBumpArray);
    __twr_v142 = (uint64_t)(&LexDirectiveBumpIndex);
    __twr_v143 = *(uint64_t*)(__twr_v142);
    __twr_v144 = 56ULL;
    __twr_v145 = __twr_v143 * __twr_v144;
    __twr_v146 = __twr_v141 + __twr_v145;
    _mng_directive147 = __twr_v146;
    __twr_v148 = 1ULL;
    __twr_v149 = __twr_v143 + __twr_v148;
    *(uint64_t*)(__twr_v142) = __twr_v149;
    __twr_v150 = 48ULL;
    __twr_v151 = _mng_directive147 + __twr_v150;
    *(uint64_t*)(__twr_v151) = _mng_parsefunc140;
    __twr_v152 = (uint64_t)(&TlInsertHashTable);
    __twr_v153 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v152)(__twr_v153, _mng_directive147, _mng_name139);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexOperatorBumpArray[224];
uint64_t LexOperatorBumpIndex = 0ULL;
void LexInsertOperator(uint64_t _mng_name154, uint64_t _mng_parsefunc155) {
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t _mng_operator162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    __twr_v156 = (uint64_t)(&LexOperatorBumpArray);
    __twr_v157 = (uint64_t)(&LexOperatorBumpIndex);
    __twr_v158 = *(uint64_t*)(__twr_v157);
    __twr_v159 = 56ULL;
    __twr_v160 = __twr_v158 * __twr_v159;
    __twr_v161 = __twr_v156 + __twr_v160;
    _mng_operator162 = __twr_v161;
    __twr_v163 = 1ULL;
    __twr_v164 = __twr_v158 + __twr_v163;
    *(uint64_t*)(__twr_v157) = __twr_v164;
    __twr_v165 = 48ULL;
    __twr_v166 = _mng_operator162 + __twr_v165;
    *(uint64_t*)(__twr_v166) = _mng_parsefunc155;
    __twr_v167 = (uint64_t)(&TlInsertHashTable);
    __twr_v168 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v167)(__twr_v168, _mng_operator162, _mng_name154);
    __twr_l2:;
    _jkl_epilogue:;
}
void LexMacroDelete(uint64_t _mng_entry169) {
    uint64_t _mng_macro170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    _mng_macro170 = _mng_entry169;
    __twr_v171 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v172 = 80ULL;
    __twr_v173 = _mng_macro170 + __twr_v172;
    ((void (*)(uint64_t))__twr_v171)(__twr_v173);
    __twr_v174 = (uint64_t)(&TlFreeToZone);
    __twr_v175 = (uint64_t)(&LexMacroZone);
    ((void (*)(uint64_t, uint64_t))__twr_v174)(__twr_v175, _mng_entry169);
    __twr_l3:;
    _jkl_epilogue:;
}
uint64_t LexCreateMacroTable(uint64_t _mng_outerscope176) {
    uint64_t _jkl_retv;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    __twr_v177 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v178 = (uint64_t)(&LexMacroDelete);
    __twr_v179 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v177)(_mng_outerscope176, __twr_v178);
    _jkl_retv = __twr_v179;
    goto _jkl_epilogue;
    __twr_l4:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexNextNonWhitespaceCharacter(uint64_t _mng_token180) {
    uint64_t _jkl_retv;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t _mng_stream183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t _mng_byte200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    __twr_v181 = (uint64_t)(&LexCurrentStream);
    __twr_v182 = *(uint64_t*)(__twr_v181);
    _mng_stream183 = __twr_v182;
    if (!(_mng_stream183)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v184 = 8ULL;
    __twr_v185 = _mng_stream183 + __twr_v184;
    __twr_v186 = *(uint64_t*)(__twr_v185);
    __twr_v187 = _mng_token180 + __twr_v184;
    *(uint64_t*)(__twr_v187) = __twr_v186;
    __twr_v188 = 44ULL;
    __twr_v189 = _mng_stream183 + __twr_v188;
    __twr_v190 = *(uint32_t*)(__twr_v189);
    __twr_v191 = 16ULL;
    __twr_v192 = _mng_token180 + __twr_v191;
    *(uint32_t*)(__twr_v192) = __twr_v190;
    __twr_v193 = 48ULL;
    __twr_v194 = _mng_stream183 + __twr_v193;
    __twr_v195 = *(uint32_t*)(__twr_v194);
    __twr_v196 = 20ULL;
    __twr_v197 = _mng_token180 + __twr_v196;
    *(uint32_t*)(__twr_v197) = __twr_v195;
    __twr_l6:;
    __twr_v198 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v199 = ((uint64_t (*)())__twr_v198)();
    _mng_byte200 = __twr_v199;
    __twr_v201 = (uint64_t)(&LexCharTreatment);
    __twr_v202 = __twr_v201 + _mng_byte200;
    __twr_v203 = *(uint8_t*)(__twr_v202);
    __twr_v204 = 3ULL;
    if (__twr_v203 != __twr_v204) { goto __twr_l9; } else { goto __twr_l8; }
    __twr_l8:;
    __twr_v205 = (uint64_t)(&LexCurrentStream);
    __twr_v206 = *(uint64_t*)(__twr_v205);
    _mng_stream183 = __twr_v206;
    if (!(_mng_stream183)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v207 = 8ULL;
    __twr_v208 = _mng_stream183 + __twr_v207;
    __twr_v209 = *(uint64_t*)(__twr_v208);
    __twr_v210 = _mng_token180 + __twr_v207;
    *(uint64_t*)(__twr_v210) = __twr_v209;
    __twr_v211 = 44ULL;
    __twr_v212 = _mng_stream183 + __twr_v211;
    __twr_v213 = *(uint32_t*)(__twr_v212);
    __twr_v214 = 16ULL;
    __twr_v215 = _mng_token180 + __twr_v214;
    *(uint32_t*)(__twr_v215) = __twr_v213;
    __twr_v216 = 48ULL;
    __twr_v217 = _mng_stream183 + __twr_v216;
    __twr_v218 = *(uint32_t*)(__twr_v217);
    __twr_v219 = 20ULL;
    __twr_v220 = _mng_token180 + __twr_v219;
    *(uint32_t*)(__twr_v220) = __twr_v218;
    __twr_l11:;
    __twr_v221 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v222 = ((uint64_t (*)())__twr_v221)();
    _mng_byte200 = __twr_v222;
    __twr_l10:;
    __twr_v223 = (uint64_t)(&LexCharTreatment);
    __twr_v224 = __twr_v223 + _mng_byte200;
    __twr_v225 = *(uint8_t*)(__twr_v224);
    __twr_v226 = 3ULL;
    if (__twr_v225 == __twr_v226) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    if (_mng_byte200) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v227 = (uint64_t)(&LexStreamError);
    __twr_v228 = (uint64_t)(&"Unexpected EOF while parsing directive");
    __twr_v229 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v227)(__twr_v228, __twr_v229, __twr_v229, __twr_v229);
    __twr_l13:;
    _jkl_retv = _mng_byte200;
    goto _jkl_epilogue;
    __twr_l5:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectDirectiveToken(uint64_t _mng_token230, uint64_t _mng_buffer231) {
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t _mng_byte234;
    uint64_t _mng_len235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    __twr_v232 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v233 = ((uint64_t (*)(uint64_t))__twr_v232)(_mng_token230);
    _mng_byte234 = __twr_v233;
    _mng_len235 = 0ULL;
    __twr_v236 = (uint64_t)(&LexCharTreatment);
    __twr_v237 = __twr_v236 + _mng_byte234;
    __twr_v238 = *(uint8_t*)(__twr_v237);
    __twr_v239 = 3ULL;
    if (__twr_v238 == __twr_v239) { goto __twr_l17; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v240 = (uint64_t)(&LexCharTreatment);
    __twr_v241 = __twr_v240 + _mng_byte234;
    __twr_v242 = *(uint8_t*)(__twr_v241);
    if (!(__twr_v242)) { goto __twr_l19; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v243 = (uint64_t)(&LexCharTreatment);
    __twr_v244 = 1ULL;
    __twr_v245 = __twr_v243 + _mng_byte234;
    __twr_v246 = *(uint8_t*)(__twr_v245);
    if (__twr_v246 == __twr_v244) { goto __twr_l19; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v247 = (uint64_t)(&LexCharTreatment);
    __twr_v248 = __twr_v247 + _mng_byte234;
    __twr_v249 = *(uint8_t*)(__twr_v248);
    __twr_v250 = 2ULL;
    if (__twr_v249 == __twr_v250) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v251 = (uint64_t)(&LexTokenError);
    __twr_v252 = (uint64_t)(&"Illegal character in token");
    __twr_v253 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v251)(_mng_token230, __twr_v252, __twr_v253, __twr_v253, __twr_v253);
    __twr_l19:;
    __twr_v254 = 63ULL;
    if (_mng_len235 != __twr_v254) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v255 = (uint64_t)(&LexTokenError);
    __twr_v256 = (uint64_t)(&"Token length too great");
    __twr_v257 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(_mng_token230, __twr_v256, __twr_v257, __twr_v257, __twr_v257);
    __twr_l23:;
    *(uint8_t*)(_mng_buffer231) = _mng_byte234;
    __twr_v258 = 1ULL;
    __twr_v259 = _mng_buffer231 + __twr_v258;
    _mng_buffer231 = __twr_v259;
    __twr_v260 = _mng_len235 + __twr_v258;
    _mng_len235 = __twr_v260;
    __twr_v261 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v262 = ((uint64_t (*)())__twr_v261)();
    _mng_byte234 = __twr_v262;
    __twr_l18:;
    __twr_v263 = (uint64_t)(&LexCharTreatment);
    __twr_v264 = __twr_v263 + _mng_byte234;
    __twr_v265 = *(uint8_t*)(__twr_v264);
    __twr_v266 = 3ULL;
    if (__twr_v265 != __twr_v266) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v267 = 0ULL;
    *(uint8_t*)(_mng_buffer231) = __twr_v267;
    __twr_l15:;
    _jkl_epilogue:;
}
void LexGetPreprocessorString(uint64_t _mng_token268, uint64_t _mng_buffer269) {
    uint64_t _mng_backslash270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t _mng_byte273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    _mng_backslash270 = 0ULL;
    __twr_l26:;
    __twr_v271 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v272 = ((uint64_t (*)())__twr_v271)();
    _mng_byte273 = __twr_v272;
    if (_mng_byte273) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v274 = (uint64_t)(&LexTokenError);
    __twr_v275 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v276 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v274)(_mng_token268, __twr_v275, __twr_v276, __twr_v276, __twr_v276);
    __twr_l28:;
    __twr_v277 = 34ULL;
    if (_mng_byte273 != __twr_v277) { goto __twr_l30; } else { goto __twr_l32; }
    __twr_l32:;
    if (_mng_backslash270) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    __twr_v278 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v278)(_mng_buffer269, _mng_byte273);
    if (!(_mng_backslash270)) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    _mng_backslash270 = 0ULL;
    goto __twr_l26;
    __twr_l33:;
    __twr_v279 = 92ULL;
    __twr_v280 = (_mng_byte273 == __twr_v279);
    _mng_backslash270 = __twr_v280;
    goto __twr_l26;
    __twr_l27:;
    __twr_l25:;
    _jkl_epilogue:;
}
void LexCollectString(uint64_t _mng_token281, uint64_t _mng_buffer282) {
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_byte285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    __twr_v283 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v284 = ((uint64_t (*)(uint64_t))__twr_v283)(_mng_token281);
    _mng_byte285 = __twr_v284;
    __twr_v286 = 34ULL;
    if (_mng_byte285 == __twr_v286) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    __twr_v287 = (uint64_t)(&LexTokenError);
    __twr_v288 = (uint64_t)(&"Expected a string");
    __twr_v289 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v287)(_mng_token281, __twr_v288, __twr_v289, __twr_v289, __twr_v289);
    __twr_l36:;
    __twr_v290 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v290)(_mng_token281, _mng_buffer282);
    __twr_v291 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v292 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v291)(_mng_buffer282, __twr_v292);
    __twr_l35:;
    _jkl_epilogue:;
}
void LexGetComplexString(uint64_t _mng_token293, uint64_t _mng_buffer294) {
    uint64_t _mng_bracketdepth295;
    uint64_t _mng_comment296;
    uint64_t _mng_backslash297;
    uint64_t _mng_instring298;
    uint64_t _mng_inliteral299;
    uint64_t _mng_sawforwardslash300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t _mng_byte303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    _mng_bracketdepth295 = 1ULL;
    _mng_comment296 = 0ULL;
    _mng_backslash297 = 0ULL;
    _mng_instring298 = 0ULL;
    _mng_inliteral299 = 0ULL;
    _mng_sawforwardslash300 = 0ULL;
    __twr_l39:;
    __twr_v301 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v302 = ((uint64_t (*)())__twr_v301)();
    _mng_byte303 = __twr_v302;
    if (_mng_byte303) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v304 = (uint64_t)(&LexTokenError);
    __twr_v305 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v306 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v304)(_mng_token293, __twr_v305, __twr_v306, __twr_v306, __twr_v306);
    __twr_l41:;
    if (!(_mng_comment296)) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v307 = 10ULL;
    if (_mng_byte303 != __twr_v307) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_comment296 = 0ULL;
    goto __twr_l46;
    __twr_l48:;
    _mng_byte303 = 0ULL;
    goto __twr_l39;
    __twr_l46:;
    goto __twr_l43;
    __twr_l45:;
    __twr_v308 = 47ULL;
    if (_mng_byte303 == __twr_v308) { goto __twr_l43; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_sawforwardslash300 = 0ULL;
    __twr_l43:;
    if (!(_mng_backslash297)) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_backslash297 = 0ULL;
    goto __twr_l50;
    __twr_l52:;
    __twr_v309 = 92ULL;
    if (_mng_byte303 != __twr_v309) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_backslash297 = 1ULL;
    goto __twr_l50;
    __twr_l54:;
    if (!(_mng_instring298)) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v310 = 34ULL;
    __twr_v311 = (_mng_byte303 == __twr_v310);
    __twr_v312 = !__twr_v311;
    _mng_instring298 = __twr_v312;
    goto __twr_l50;
    __twr_l56:;
    if (!(_mng_inliteral299)) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v313 = 39ULL;
    __twr_v314 = (_mng_byte303 == __twr_v313);
    __twr_v315 = !__twr_v314;
    _mng_inliteral299 = __twr_v315;
    goto __twr_l50;
    __twr_l58:;
    __twr_v316 = 47ULL;
    if (_mng_byte303 != __twr_v316) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    if (!(_mng_sawforwardslash300)) { goto __twr_l63; } else { goto __twr_l62; }
    __twr_l62:;
    _mng_sawforwardslash300 = 0ULL;
    _mng_comment296 = 1ULL;
    goto __twr_l61;
    __twr_l63:;
    _mng_sawforwardslash300 = 1ULL;
    __twr_l61:;
    goto __twr_l50;
    __twr_l60:;
    __twr_v317 = 34ULL;
    if (_mng_byte303 != __twr_v317) { goto __twr_l65; } else { goto __twr_l64; }
    __twr_l64:;
    _mng_instring298 = 1ULL;
    goto __twr_l50;
    __twr_l65:;
    __twr_v318 = 39ULL;
    if (_mng_byte303 != __twr_v318) { goto __twr_l67; } else { goto __twr_l66; }
    __twr_l66:;
    _mng_inliteral299 = 1ULL;
    goto __twr_l50;
    __twr_l67:;
    __twr_v319 = 91ULL;
    if (_mng_byte303 != __twr_v319) { goto __twr_l69; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v320 = 1ULL;
    __twr_v321 = _mng_bracketdepth295 + __twr_v320;
    _mng_bracketdepth295 = __twr_v321;
    goto __twr_l50;
    __twr_l69:;
    __twr_v322 = 93ULL;
    if (_mng_byte303 != __twr_v322) { goto __twr_l50; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v323 = 1ULL;
    __twr_v324 = _mng_bracketdepth295 - __twr_v323;
    _mng_bracketdepth295 = __twr_v324;
    if (_mng_bracketdepth295) { goto __twr_l71; } else { goto __twr_l72; }
    __twr_l72:;
    goto __twr_l40;
    __twr_l71:;
    __twr_l50:;
    __twr_v325 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v325)(_mng_buffer294, _mng_byte303);
    _mng_byte303 = 0ULL;
    goto __twr_l39;
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentContents(uint64_t _mng_token326, uint64_t _mng_buffer327) {
    uint64_t _jkl_retv;
    uint64_t _mng_bracketdepth328;
    uint64_t _mng_comment329;
    uint64_t _mng_backslash330;
    uint64_t _mng_instring331;
    uint64_t _mng_inliteral332;
    uint64_t _mng_sawforwardslash333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t _mng_byte336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    _mng_bracketdepth328 = 1ULL;
    _mng_comment329 = 0ULL;
    _mng_backslash330 = 0ULL;
    _mng_instring331 = 0ULL;
    _mng_inliteral332 = 0ULL;
    _mng_sawforwardslash333 = 0ULL;
    __twr_l74:;
    __twr_v334 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v335 = ((uint64_t (*)(uint64_t))__twr_v334)(_mng_token326);
    _mng_byte336 = __twr_v335;
    __twr_v337 = 41ULL;
    if (_mng_byte336 != __twr_v337) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v338 = 2ULL;
    _jkl_retv = __twr_v338;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v339 = 44ULL;
    if (_mng_byte336 != __twr_v339) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    goto __twr_l74;
    __twr_l78:;
    goto __twr_l75;
    goto __twr_l74;
    __twr_l75:;
    __twr_l80:;
    if (!(_mng_comment329)) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v340 = 10ULL;
    if (_mng_byte336 != __twr_v340) { goto __twr_l84; } else { goto __twr_l83; }
    __twr_l83:;
    _mng_comment329 = 0ULL;
    goto __twr_l82;
    __twr_l84:;
    __twr_v341 = 47ULL;
    if (_mng_byte336 == __twr_v341) { goto __twr_l82; } else { goto __twr_l86; }
    __twr_l86:;
    _mng_sawforwardslash333 = 0ULL;
    __twr_l82:;
    if (!(_mng_comment329)) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    goto __twr_l87;
    __twr_l89:;
    if (!(_mng_backslash330)) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    _mng_backslash330 = 0ULL;
    goto __twr_l87;
    __twr_l91:;
    __twr_v342 = 92ULL;
    if (_mng_byte336 != __twr_v342) { goto __twr_l93; } else { goto __twr_l92; }
    __twr_l92:;
    _mng_backslash330 = 1ULL;
    goto __twr_l87;
    __twr_l93:;
    if (!(_mng_instring331)) { goto __twr_l95; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v343 = 34ULL;
    __twr_v344 = (_mng_byte336 == __twr_v343);
    __twr_v345 = !__twr_v344;
    _mng_instring331 = __twr_v345;
    goto __twr_l87;
    __twr_l95:;
    if (!(_mng_inliteral332)) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v346 = 39ULL;
    __twr_v347 = (_mng_byte336 == __twr_v346);
    __twr_v348 = !__twr_v347;
    _mng_inliteral332 = __twr_v348;
    goto __twr_l87;
    __twr_l97:;
    __twr_v349 = 47ULL;
    if (_mng_byte336 != __twr_v349) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    if (!(_mng_sawforwardslash333)) { goto __twr_l102; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v350 = 1ULL;
    __twr_v351 = *(uint64_t*)(_mng_buffer327);
    __twr_v352 = __twr_v351 - __twr_v350;
    *(uint64_t*)(_mng_buffer327) = __twr_v352;
    _mng_sawforwardslash333 = 0ULL;
    _mng_comment329 = 1ULL;
    goto __twr_l100;
    __twr_l102:;
    _mng_sawforwardslash333 = 1ULL;
    __twr_l100:;
    goto __twr_l87;
    __twr_l99:;
    __twr_v353 = 34ULL;
    if (_mng_byte336 != __twr_v353) { goto __twr_l104; } else { goto __twr_l103; }
    __twr_l103:;
    _mng_instring331 = 1ULL;
    goto __twr_l87;
    __twr_l104:;
    __twr_v354 = 39ULL;
    if (_mng_byte336 != __twr_v354) { goto __twr_l106; } else { goto __twr_l105; }
    __twr_l105:;
    _mng_inliteral332 = 1ULL;
    goto __twr_l87;
    __twr_l106:;
    __twr_v355 = 40ULL;
    if (_mng_byte336 != __twr_v355) { goto __twr_l108; } else { goto __twr_l107; }
    __twr_l107:;
    __twr_v356 = 1ULL;
    __twr_v357 = _mng_bracketdepth328 + __twr_v356;
    _mng_bracketdepth328 = __twr_v357;
    goto __twr_l87;
    __twr_l108:;
    __twr_v358 = 41ULL;
    if (_mng_byte336 != __twr_v358) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v359 = 1ULL;
    __twr_v360 = _mng_bracketdepth328 - __twr_v359;
    _mng_bracketdepth328 = __twr_v360;
    if (_mng_bracketdepth328) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v361 = 3ULL;
    _jkl_retv = __twr_v361;
    goto _jkl_epilogue;
    __twr_l111:;
    goto __twr_l87;
    __twr_l110:;
    __twr_v362 = 1ULL;
    if (_mng_bracketdepth328 != __twr_v362) { goto __twr_l114; } else { goto __twr_l115; }
    __twr_l115:;
    __twr_v363 = 44ULL;
    if (_mng_byte336 != __twr_v363) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    goto __twr_l81;
    goto __twr_l87;
    __twr_l114:;
    __twr_v364 = 10ULL;
    if (_mng_byte336 != __twr_v364) { goto __twr_l87; } else { goto __twr_l116; }
    __twr_l116:;
    _mng_byte336 = 32ULL;
    __twr_l87:;
    if (_mng_comment329) { goto __twr_l117; } else { goto __twr_l119; }
    __twr_l119:;
    if (_mng_backslash330) { goto __twr_l117; } else { goto __twr_l118; }
    __twr_l118:;
    __twr_v365 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v365)(_mng_buffer327, _mng_byte336);
    __twr_l117:;
    __twr_v366 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v367 = ((uint64_t (*)())__twr_v366)();
    _mng_byte336 = __twr_v367;
    if (_mng_byte336) { goto __twr_l120; } else { goto __twr_l121; }
    __twr_l121:;
    __twr_v368 = (uint64_t)(&LexTokenError);
    __twr_v369 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v370 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v368)(_mng_token326, __twr_v369, __twr_v370, __twr_v370, __twr_v370);
    __twr_l120:;
    goto __twr_l80;
    __twr_l81:;
    __twr_v371 = 1ULL;
    _jkl_retv = __twr_v371;
    goto _jkl_epilogue;
    __twr_l73:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectValue(uint64_t _mng_token372, uint64_t _mng_buffer373, uint64_t _mng_ignore374) {
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t _mng_byte377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t _mng_optoken389[4];
    uint64_t __twr_v390;
    uint64_t _mng_opbuffer391[8];
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t _mng_operator395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t _mng_simpletokbuf405[11];
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t _mng_macro457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    __twr_v375 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v376 = ((uint64_t (*)(uint64_t))__twr_v375)(_mng_token372);
    _mng_byte377 = __twr_v376;
    __twr_v378 = 34ULL;
    if (_mng_byte377 != __twr_v378) { goto __twr_l125; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v379 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v379)(_mng_token372, _mng_buffer373);
    __twr_v380 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v381 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v380)(_mng_buffer373, __twr_v381);
    goto _jkl_epilogue;
    goto __twr_l123;
    __twr_l125:;
    __twr_v382 = 91ULL;
    if (_mng_byte377 != __twr_v382) { goto __twr_l127; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v383 = (uint64_t)(&LexGetComplexString);
    ((void (*)(uint64_t, uint64_t))__twr_v383)(_mng_token372, _mng_buffer373);
    __twr_v384 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v385 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v384)(_mng_buffer373, __twr_v385);
    goto _jkl_epilogue;
    goto __twr_l123;
    __twr_l127:;
    __twr_v386 = 40ULL;
    if (_mng_byte377 != __twr_v386) { goto __twr_l123; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v387 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v388 = (uint64_t)(&_mng_optoken389);
    __twr_v390 = (uint64_t)(&_mng_opbuffer391);
    ((void (*)(uint64_t, uint64_t))__twr_v387)(__twr_v388, __twr_v390);
    __twr_v392 = (uint64_t)(&TlLookupHashTable);
    __twr_v393 = (uint64_t)(&LexOperatorHashTable);
    __twr_v394 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v392)(__twr_v393, __twr_v390);
    _mng_operator395 = __twr_v394;
    if (_mng_operator395) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v396 = (uint64_t)(&LexTokenError);
    __twr_v397 = (uint64_t)(&_mng_optoken389);
    __twr_v398 = (uint64_t)(&"Unknown operator");
    __twr_v399 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v396)(__twr_v397, __twr_v398, __twr_v399, __twr_v399, __twr_v399);
    __twr_l129:;
    __twr_v400 = 48ULL;
    __twr_v401 = _mng_operator395 + __twr_v400;
    __twr_v402 = *(uint64_t*)(__twr_v401);
    ((void (*)(uint64_t, uint64_t))__twr_v402)(_mng_buffer373, _mng_ignore374);
    goto _jkl_epilogue;
    __twr_l123:;
    __twr_v403 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v404 = (uint64_t)(&_mng_simpletokbuf405);
    ((void (*)(uint64_t))__twr_v403)(__twr_v404);
    __twr_v406 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v406)(__twr_v404, _mng_byte377);
    __twr_v407 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v408 = ((uint64_t (*)())__twr_v407)();
    _mng_byte377 = __twr_v408;
    __twr_v409 = (uint64_t)(&LexCharTreatment);
    __twr_v410 = __twr_v409 + _mng_byte377;
    __twr_v411 = *(uint8_t*)(__twr_v410);
    __twr_v412 = 3ULL;
    if (__twr_v411 == __twr_v412) { goto __twr_l132; } else { goto __twr_l131; }
    __twr_l131:;
    if (_mng_byte377) { goto __twr_l134; } else { goto __twr_l135; }
    __twr_l135:;
    __twr_v413 = (uint64_t)(&LexTokenError);
    __twr_v414 = (uint64_t)(&"Unexpected EOF");
    __twr_v415 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v413)(_mng_token372, __twr_v414, __twr_v415, __twr_v415, __twr_v415);
    __twr_l134:;
    __twr_v416 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v417 = (uint64_t)(&_mng_simpletokbuf405);
    ((void (*)(uint64_t, uint64_t))__twr_v416)(__twr_v417, _mng_byte377);
    __twr_v418 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v419 = ((uint64_t (*)())__twr_v418)();
    _mng_byte377 = __twr_v419;
    __twr_l133:;
    __twr_v420 = (uint64_t)(&LexCharTreatment);
    __twr_v421 = __twr_v420 + _mng_byte377;
    __twr_v422 = *(uint8_t*)(__twr_v421);
    __twr_v423 = 3ULL;
    if (__twr_v422 != __twr_v423) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v424 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v425 = (uint64_t)(&_mng_simpletokbuf405);
    __twr_v426 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v424)(__twr_v425, __twr_v426);
    __twr_v427 = 16ULL;
    __twr_v428 = __twr_v425 + __twr_v427;
    __twr_v429 = *(uint64_t*)(__twr_v428);
    __twr_v430 = *(uint8_t*)(__twr_v429);
    __twr_v431 = 48ULL;
    if (__twr_v430 < __twr_v431) { goto __twr_l136; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v432 = (uint64_t)(&_mng_simpletokbuf405);
    __twr_v433 = 16ULL;
    __twr_v434 = __twr_v432 + __twr_v433;
    __twr_v435 = *(uint64_t*)(__twr_v434);
    __twr_v436 = *(uint8_t*)(__twr_v435);
    __twr_v437 = 57ULL;
    if (__twr_v436 > __twr_v437) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v438 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v439 = (uint64_t)(&_mng_simpletokbuf405);
    __twr_v440 = 16ULL;
    __twr_v441 = __twr_v439 + __twr_v440;
    __twr_v442 = *(uint64_t*)(__twr_v441);
    __twr_v443 = *(uint64_t*)(__twr_v439);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v438)(_mng_buffer373, __twr_v442, __twr_v443);
    __twr_v444 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v444)(__twr_v439);
    goto _jkl_epilogue;
    __twr_l136:;
    if (!(_mng_ignore374)) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v445 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v446 = (uint64_t)(&_mng_simpletokbuf405);
    ((void (*)(uint64_t))__twr_v445)(__twr_v446);
    __twr_v447 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v448 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v447)(_mng_buffer373, __twr_v448);
    goto _jkl_epilogue;
    __twr_l139:;
    __twr_v449 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v450 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v451 = *(uint64_t*)(__twr_v450);
    __twr_v452 = (uint64_t)(&_mng_simpletokbuf405);
    __twr_v453 = 16ULL;
    __twr_v454 = __twr_v452 + __twr_v453;
    __twr_v455 = *(uint64_t*)(__twr_v454);
    __twr_v456 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v449)(__twr_v451, __twr_v455);
    _mng_macro457 = __twr_v456;
    __twr_v458 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v458)(__twr_v452);
    if (_mng_macro457) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v459 = (uint64_t)(&LexTokenError);
    __twr_v460 = (uint64_t)(&"Not a defined macro name");
    __twr_v461 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v459)(_mng_token372, __twr_v460, __twr_v461, __twr_v461, __twr_v461);
    __twr_l141:;
    __twr_v462 = 256ULL;
    __twr_v463 = _mng_macro457 + __twr_v462;
    __twr_v464 = *(uint8_t*)(__twr_v463);
    if (!(__twr_v464)) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v465 = (uint64_t)(&LexTokenError);
    __twr_v466 = (uint64_t)(&"Function macros not permitted here");
    __twr_v467 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v465)(_mng_token372, __twr_v466, __twr_v467, __twr_v467, __twr_v467);
    __twr_l143:;
    __twr_v468 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v469 = 80ULL;
    __twr_v470 = _mng_macro457 + __twr_v469;
    __twr_v471 = 96ULL;
    __twr_v472 = _mng_macro457 + __twr_v471;
    __twr_v473 = *(uint64_t*)(__twr_v472);
    __twr_v474 = *(uint64_t*)(__twr_v470);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v468)(_mng_buffer373, __twr_v473, __twr_v474);
    __twr_l122:;
    _jkl_epilogue:;
}
uint64_t LexCollectValueNumeric(uint64_t _mng_token475, uint64_t _mng_ignore476) {
    uint64_t _jkl_retv;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t _mng_buffer479[11];
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t _mng_num505;
    uint64_t __twr_v506;
    __twr_v477 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v478 = (uint64_t)(&_mng_buffer479);
    ((void (*)(uint64_t))__twr_v477)(__twr_v478);
    __twr_v480 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v480)(_mng_token475, __twr_v478, _mng_ignore476);
    if (!(_mng_ignore476)) { goto __twr_l146; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v481 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v482 = (uint64_t)(&_mng_buffer479);
    ((void (*)(uint64_t))__twr_v481)(__twr_v482);
    __twr_v483 = 0ULL;
    _jkl_retv = __twr_v483;
    goto _jkl_epilogue;
    __twr_l146:;
    __twr_v484 = (uint64_t)(&_mng_buffer479);
    __twr_v485 = 16ULL;
    __twr_v486 = __twr_v484 + __twr_v485;
    __twr_v487 = *(uint64_t*)(__twr_v486);
    __twr_v488 = *(uint8_t*)(__twr_v487);
    __twr_v489 = 48ULL;
    if (__twr_v488 < __twr_v489) { goto __twr_l149; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v490 = (uint64_t)(&_mng_buffer479);
    __twr_v491 = 16ULL;
    __twr_v492 = __twr_v490 + __twr_v491;
    __twr_v493 = *(uint64_t*)(__twr_v492);
    __twr_v494 = *(uint8_t*)(__twr_v493);
    __twr_v495 = 57ULL;
    if (__twr_v494 <= __twr_v495) { goto __twr_l148; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v496 = (uint64_t)(&LexTokenError);
    __twr_v497 = (uint64_t)(&"Expected numeric value");
    __twr_v498 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v496)(_mng_token475, __twr_v497, __twr_v498, __twr_v498, __twr_v498);
    __twr_l148:;
    __twr_v499 = (uint64_t)(&LexCrunchNumber);
    __twr_v500 = (uint64_t)(&_mng_buffer479);
    __twr_v501 = 16ULL;
    __twr_v502 = __twr_v500 + __twr_v501;
    __twr_v503 = *(uint64_t*)(__twr_v502);
    __twr_v504 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v499)(_mng_token475, __twr_v503);
    _mng_num505 = __twr_v504;
    __twr_v506 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v506)(__twr_v500);
    _jkl_retv = _mng_num505;
    goto _jkl_epilogue;
    __twr_l145:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexConsumeCloseParenthesis() {
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t _mng_token509[4];
    uint64_t __twr_v510;
    uint64_t _mng_byte511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    __twr_v507 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v508 = (uint64_t)(&_mng_token509);
    __twr_v510 = ((uint64_t (*)(uint64_t))__twr_v507)(__twr_v508);
    _mng_byte511 = __twr_v510;
    __twr_v512 = 41ULL;
    if (_mng_byte511 == __twr_v512) { goto __twr_l152; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v513 = (uint64_t)(&LexTokenError);
    __twr_v514 = (uint64_t)(&_mng_token509);
    __twr_v515 = (uint64_t)(&"Expected close parenthesis");
    __twr_v516 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v513)(__twr_v514, __twr_v515, __twr_v516, __twr_v516, __twr_v516);
    __twr_l152:;
    __twr_l151:;
    _jkl_epilogue:;
}
void LexDefineMacroFromArgumentString(uint64_t _mng_arg517) {
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t _mng_macro521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t _mng_equalsptr527;
    uint64_t _mng_j528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    __twr_v518 = (uint64_t)(&TlAllocateFromZone);
    __twr_v519 = (uint64_t)(&LexMacroZone);
    __twr_v520 = ((uint64_t (*)(uint64_t))__twr_v518)(__twr_v519);
    _mng_macro521 = __twr_v520;
    __twr_v522 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v523 = 80ULL;
    __twr_v524 = _mng_macro521 + __twr_v523;
    ((void (*)(uint64_t))__twr_v522)(__twr_v524);
    __twr_v525 = (uint64_t)(&FeIsMacroArgument);
    __twr_v526 = ((uint64_t (*)(uint64_t))__twr_v525)(_mng_arg517);
    _mng_equalsptr527 = __twr_v526;
    _mng_j528 = 0ULL;
    if (_mng_arg517 >= _mng_equalsptr527) { goto __twr_l156; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v529 = *(uint8_t*)(_mng_arg517);
    __twr_v530 = 168ULL;
    __twr_v531 = _mng_macro521 + __twr_v530;
    __twr_v532 = 1ULL;
    __twr_v533 = __twr_v531 + _mng_j528;
    *(uint8_t*)(__twr_v533) = __twr_v529;
    __twr_v534 = _mng_j528 + __twr_v532;
    _mng_j528 = __twr_v534;
    __twr_v535 = _mng_arg517 + __twr_v532;
    _mng_arg517 = __twr_v535;
    __twr_l157:;
    if (_mng_arg517 < _mng_equalsptr527) { goto __twr_l155; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v536 = 0ULL;
    __twr_v537 = 168ULL;
    __twr_v538 = _mng_macro521 + __twr_v537;
    __twr_v539 = 1ULL;
    __twr_v540 = __twr_v538 + _mng_j528;
    *(uint8_t*)(__twr_v540) = __twr_v536;
    _mng_j528 = 0ULL;
    __twr_v541 = _mng_equalsptr527 + __twr_v539;
    _mng_equalsptr527 = __twr_v541;
    __twr_v542 = *(uint8_t*)(_mng_equalsptr527);
    if (!(__twr_v542)) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v543 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v544 = 80ULL;
    __twr_v545 = _mng_macro521 + __twr_v544;
    __twr_v546 = *(uint8_t*)(_mng_equalsptr527);
    ((void (*)(uint64_t, uint64_t))__twr_v543)(__twr_v545, __twr_v546);
    __twr_v547 = 1ULL;
    __twr_v548 = _mng_equalsptr527 + __twr_v547;
    _mng_equalsptr527 = __twr_v548;
    __twr_l160:;
    __twr_v549 = *(uint8_t*)(_mng_equalsptr527);
    if (__twr_v549) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_v550 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v551 = 80ULL;
    __twr_v552 = _mng_macro521 + __twr_v551;
    __twr_v553 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v550)(__twr_v552, __twr_v553);
    __twr_v554 = 256ULL;
    __twr_v555 = _mng_macro521 + __twr_v554;
    *(uint8_t*)(__twr_v555) = __twr_v553;
    __twr_v556 = 257ULL;
    __twr_v557 = _mng_macro521 + __twr_v556;
    *(uint8_t*)(__twr_v557) = __twr_v553;
    __twr_v558 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v559 = (uint64_t)(&LexRootMacroScope);
    __twr_v560 = *(uint64_t*)(__twr_v559);
    __twr_v561 = 168ULL;
    __twr_v562 = _mng_macro521 + __twr_v561;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v558)(__twr_v560, _mng_macro521, __twr_v562);
    __twr_l154:;
    _jkl_epilogue:;
}
extern void PrsEnterMacro();
void LexExpandMacro(uint64_t _mng_macro563, uint64_t _mng_token564) {
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t _mng_oldscope576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t _mng_oldmacroscope579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t _mng_stream605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t _mng_trashtoken636[4];
    uint64_t __twr_v637;
    uint64_t _mng_byte638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t _mng_arg647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t _mng_argmacro651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t _mng_foundclose671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    __twr_v565 = 1ULL;
    __twr_v566 = (uint64_t)(&LexMacroDepth);
    __twr_v567 = *(uint32_t*)(__twr_v566);
    __twr_v568 = __twr_v567 + __twr_v565;
    *(uint32_t*)(__twr_v566) = __twr_v568;
    __twr_v569 = *(uint32_t*)(__twr_v566);
    __twr_v570 = 64ULL;
    if (__twr_v569 < __twr_v570) { goto __twr_l162; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v571 = (uint64_t)(&LexTokenError);
    __twr_v572 = (uint64_t)(&"Too many macros deep!");
    __twr_v573 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v571)(_mng_token564, __twr_v572, __twr_v573, __twr_v573, __twr_v573);
    __twr_l162:;
    __twr_v574 = (uint64_t)(&LexCurrentScope);
    __twr_v575 = *(uint64_t*)(__twr_v574);
    _mng_oldscope576 = __twr_v575;
    __twr_v577 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v578 = *(uint64_t*)(__twr_v577);
    _mng_oldmacroscope579 = __twr_v578;
    __twr_v580 = 257ULL;
    __twr_v581 = _mng_macro563 + __twr_v580;
    __twr_v582 = *(uint8_t*)(__twr_v581);
    if (!(__twr_v582)) { goto __twr_l166; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v583 = 232ULL;
    __twr_v584 = _mng_macro563 + __twr_v583;
    __twr_v585 = *(uint64_t*)(__twr_v584);
    __twr_v586 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v586) = __twr_v585;
    __twr_v587 = 240ULL;
    __twr_v588 = _mng_macro563 + __twr_v587;
    __twr_v589 = *(uint64_t*)(__twr_v588);
    __twr_v590 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v590) = __twr_v589;
    goto __twr_l164;
    __twr_l166:;
    __twr_v591 = (uint64_t)(&LexRootScope);
    __twr_v592 = *(uint64_t*)(__twr_v591);
    if (_mng_oldscope576 == __twr_v592) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v593 = (uint64_t)(&LexCreateSymbolTable);
    __twr_v594 = (uint64_t)(&LexRootScope);
    __twr_v595 = *(uint64_t*)(__twr_v594);
    __twr_v596 = ((uint64_t (*)(uint64_t))__twr_v593)(__twr_v595);
    __twr_v597 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v597) = __twr_v596;
    __twr_l167:;
    __twr_v598 = (uint64_t)(&LexCreateMacroTable);
    __twr_v599 = (uint64_t)(&LexRootMacroScope);
    __twr_v600 = *(uint64_t*)(__twr_v599);
    __twr_v601 = ((uint64_t (*)(uint64_t))__twr_v598)(__twr_v600);
    __twr_v602 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v602) = __twr_v601;
    __twr_l164:;
    __twr_v603 = (uint64_t)(&LexAllocateStream);
    __twr_v604 = ((uint64_t (*)())__twr_v603)();
    _mng_stream605 = __twr_v604;
    __twr_v606 = (uint64_t)(&LexInitializeStream);
    ((void (*)(uint64_t, uint64_t))__twr_v606)(_mng_stream605, _mng_macro563);
    __twr_v607 = (uint64_t)(&LexCurrentStream);
    __twr_v608 = *(uint64_t*)(__twr_v607);
    __twr_v609 = 8ULL;
    __twr_v610 = __twr_v608 + __twr_v609;
    __twr_v611 = *(uint64_t*)(__twr_v610);
    __twr_v612 = _mng_stream605 + __twr_v609;
    *(uint64_t*)(__twr_v612) = __twr_v611;
    __twr_v613 = 1000000ULL;
    __twr_v614 = 44ULL;
    __twr_v615 = _mng_stream605 + __twr_v614;
    *(uint32_t*)(__twr_v615) = __twr_v613;
    __twr_v616 = 80ULL;
    __twr_v617 = _mng_macro563 + __twr_v616;
    __twr_v618 = 96ULL;
    __twr_v619 = _mng_macro563 + __twr_v618;
    __twr_v620 = *(uint64_t*)(__twr_v619);
    __twr_v621 = 24ULL;
    __twr_v622 = _mng_stream605 + __twr_v621;
    *(uint64_t*)(__twr_v622) = __twr_v620;
    __twr_v623 = *(uint64_t*)(__twr_v617);
    __twr_v624 = 1ULL;
    __twr_v625 = __twr_v623 - __twr_v624;
    __twr_v626 = 36ULL;
    __twr_v627 = _mng_stream605 + __twr_v626;
    *(uint32_t*)(__twr_v627) = __twr_v625;
    __twr_v628 = 72ULL;
    __twr_v629 = _mng_stream605 + __twr_v628;
    *(uint64_t*)(__twr_v629) = _mng_oldscope576;
    __twr_v630 = _mng_stream605 + __twr_v616;
    *(uint64_t*)(__twr_v630) = _mng_oldmacroscope579;
    __twr_v631 = 256ULL;
    __twr_v632 = _mng_macro563 + __twr_v631;
    __twr_v633 = *(uint8_t*)(__twr_v632);
    if (!(__twr_v633)) { goto __twr_l169; } else { goto __twr_l170; }
    __twr_l170:;
    __twr_v634 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v635 = (uint64_t)(&_mng_trashtoken636);
    __twr_v637 = ((uint64_t (*)(uint64_t))__twr_v634)(__twr_v635);
    _mng_byte638 = __twr_v637;
    __twr_v639 = 40ULL;
    if (_mng_byte638 == __twr_v639) { goto __twr_l171; } else { goto __twr_l172; }
    __twr_l172:;
    __twr_v640 = (uint64_t)(&LexTokenError);
    __twr_v641 = (uint64_t)(&_mng_trashtoken636);
    __twr_v642 = (uint64_t)(&"Expected open parenthesis after function macro name");
    __twr_v643 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v640)(__twr_v641, __twr_v642, __twr_v643, __twr_v643, __twr_v643);
    __twr_l171:;
    __twr_v644 = 248ULL;
    __twr_v645 = _mng_macro563 + __twr_v644;
    __twr_v646 = *(uint64_t*)(__twr_v645);
    _mng_arg647 = __twr_v646;
    if (!(_mng_arg647)) { goto __twr_l174; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v648 = (uint64_t)(&TlAllocateFromZone);
    __twr_v649 = (uint64_t)(&LexMacroZone);
    __twr_v650 = ((uint64_t (*)(uint64_t))__twr_v648)(__twr_v649);
    _mng_argmacro651 = __twr_v650;
    __twr_v652 = 232ULL;
    __twr_v653 = _mng_argmacro651 + __twr_v652;
    *(uint64_t*)(__twr_v653) = _mng_oldscope576;
    __twr_v654 = 240ULL;
    __twr_v655 = _mng_argmacro651 + __twr_v654;
    *(uint64_t*)(__twr_v655) = _mng_oldmacroscope579;
    __twr_v656 = (uint64_t)(&TlCopyString);
    __twr_v657 = 168ULL;
    __twr_v658 = _mng_argmacro651 + __twr_v657;
    __twr_v659 = 0ULL;
    __twr_v660 = 1ULL;
    __twr_v661 = 56ULL;
    __twr_v662 = _mng_arg647 + __twr_v661;
    __twr_v663 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v656)(__twr_v658, __twr_v662, __twr_v663);
    __twr_v664 = 256ULL;
    __twr_v665 = _mng_argmacro651 + __twr_v664;
    *(uint8_t*)(__twr_v665) = __twr_v659;
    __twr_v666 = 257ULL;
    __twr_v667 = _mng_argmacro651 + __twr_v666;
    *(uint8_t*)(__twr_v667) = __twr_v660;
    __twr_v668 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v669 = 80ULL;
    __twr_v670 = _mng_argmacro651 + __twr_v669;
    ((void (*)(uint64_t))__twr_v668)(__twr_v670);
    _mng_foundclose671 = 0ULL;
    __twr_l176:;
    __twr_v672 = 2ULL;
    __twr_v673 = _mng_foundclose671 & __twr_v672;
    if (!(__twr_v673)) { goto __twr_l179; } else { goto __twr_l180; }
    __twr_l180:;
    __twr_v674 = (uint64_t)(&LexTokenError);
    __twr_v675 = (uint64_t)(&_mng_trashtoken636);
    __twr_v676 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v677 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v674)(__twr_v675, __twr_v676, __twr_v677, __twr_v677, __twr_v677);
    __twr_l179:;
    __twr_v678 = (uint64_t)(&LexCollectMacroArgumentContents);
    __twr_v679 = 48ULL;
    __twr_v680 = _mng_argmacro651 + __twr_v679;
    __twr_v681 = 80ULL;
    __twr_v682 = _mng_argmacro651 + __twr_v681;
    __twr_v683 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v678)(__twr_v680, __twr_v682);
    _mng_foundclose671 = __twr_v683;
    __twr_l178:;
    __twr_v684 = 1ULL;
    __twr_v685 = _mng_foundclose671 & __twr_v684;
    if (!(__twr_v685)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v686 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v687 = 80ULL;
    __twr_v688 = _mng_argmacro651 + __twr_v687;
    __twr_v689 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v686)(__twr_v688, __twr_v689);
    __twr_v690 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v691 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v692 = *(uint64_t*)(__twr_v691);
    __twr_v693 = 168ULL;
    __twr_v694 = _mng_argmacro651 + __twr_v693;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v690)(__twr_v692, _mng_argmacro651, __twr_v694);
    __twr_v695 = 48ULL;
    __twr_v696 = _mng_arg647 + __twr_v695;
    __twr_v697 = *(uint64_t*)(__twr_v696);
    _mng_arg647 = __twr_v697;
    __twr_v698 = 2ULL;
    __twr_v699 = _mng_foundclose671 & __twr_v698;
    if (!(__twr_v699)) { goto __twr_l183; } else { goto __twr_l182; }
    __twr_l182:;
    if (!(_mng_arg647)) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v700 = (uint64_t)(&LexTokenError);
    __twr_v701 = (uint64_t)(&_mng_trashtoken636);
    __twr_v702 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v703 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v700)(__twr_v701, __twr_v702, __twr_v703, __twr_v703, __twr_v703);
    __twr_l184:;
    goto __twr_l181;
    __twr_l183:;
    if (_mng_arg647) { goto __twr_l181; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_l187:;
    __twr_v704 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v705 = (uint64_t)(&_mng_trashtoken636);
    __twr_v706 = ((uint64_t (*)(uint64_t))__twr_v704)(__twr_v705);
    _mng_byte638 = __twr_v706;
    __twr_v707 = 41ULL;
    if (_mng_byte638 != __twr_v707) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    goto __twr_l188;
    __twr_l189:;
    goto __twr_l187;
    __twr_l188:;
    __twr_l181:;
    __twr_l175:;
    if (_mng_arg647) { goto __twr_l173; } else { goto __twr_l174; }
    __twr_l174:;
    __twr_l169:;
    __twr_v708 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v708)(_mng_stream605);
    __twr_v709 = (uint64_t)(&PrsEnterMacro);
    ((void (*)())__twr_v709)();
    __twr_l161:;
    _jkl_epilogue:;
}
void LexParseInclude() {
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t _mng_str712[11];
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t _mng_token715[4];
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t _mng_created726;
    uint64_t _mng_fileblock727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t _mng_filepath732[11];
    uint64_t _mng_found733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t _mng_handle752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t _mng_status811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t _mng_stream825;
    uint64_t __twr_v826;
    __twr_v710 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v711 = (uint64_t)(&_mng_str712);
    ((void (*)(uint64_t))__twr_v710)(__twr_v711);
    __twr_v713 = (uint64_t)(&LexCollectString);
    __twr_v714 = (uint64_t)(&_mng_token715);
    ((void (*)(uint64_t, uint64_t))__twr_v713)(__twr_v714, __twr_v711);
    __twr_v716 = (uint64_t)(&LexFalseCount);
    __twr_v717 = *(uint32_t*)(__twr_v716);
    if (!(__twr_v717)) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v718 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v719 = (uint64_t)(&_mng_str712);
    ((void (*)(uint64_t))__twr_v718)(__twr_v719);
    goto _jkl_epilogue;
    __twr_l192:;
    __twr_v720 = (uint64_t)(&FeCreateFileBlock);
    __twr_v721 = (uint64_t)(&_mng_str712);
    __twr_v722 = 16ULL;
    __twr_v723 = __twr_v721 + __twr_v722;
    __twr_v724 = *(uint64_t*)(__twr_v723);
    __twr_v725 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v720)(__twr_v724, (uint64_t)(&_mng_created726));
    _mng_fileblock727 = __twr_v725;
    if (_mng_created726) { goto __twr_l194; } else { goto __twr_l195; }
    __twr_l195:;
    __twr_v728 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v729 = (uint64_t)(&_mng_str712);
    ((void (*)(uint64_t))__twr_v728)(__twr_v729);
    goto _jkl_epilogue;
    __twr_l194:;
    __twr_v730 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v731 = (uint64_t)(&_mng_filepath732);
    ((void (*)(uint64_t))__twr_v730)(__twr_v731);
    _mng_found733 = 0ULL;
    __twr_v734 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v735 = (uint64_t)(&_mng_str712);
    __twr_v736 = 16ULL;
    __twr_v737 = __twr_v735 + __twr_v736;
    __twr_v738 = *(uint64_t*)(__twr_v737);
    __twr_v739 = (uint64_t)(&"<inc>/");
    __twr_v740 = 6ULL;
    __twr_v741 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v734)(__twr_v738, __twr_v739, __twr_v740);
    if (__twr_v741) { goto __twr_l198; } else { goto __twr_l197; }
    __twr_l197:;
    __twr_v742 = (uint64_t)(&TlMatchPath);
    __twr_v743 = (uint64_t)(&_mng_str712);
    __twr_v744 = 16ULL;
    __twr_v745 = __twr_v743 + __twr_v744;
    __twr_v746 = *(uint64_t*)(__twr_v745);
    __twr_v747 = 6ULL;
    __twr_v748 = __twr_v746 + __twr_v747;
    __twr_v749 = (uint64_t)(&FeIncludeDirectory);
    __twr_v750 = (uint64_t)(&_mng_filepath732);
    __twr_v751 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v742)(__twr_v748, __twr_v749, __twr_v750, (uint64_t)(&_mng_handle752));
    _mng_found733 = __twr_v751;
    goto __twr_l196;
    __twr_l198:;
    __twr_v753 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v754 = (uint64_t)(&_mng_str712);
    __twr_v755 = 16ULL;
    __twr_v756 = __twr_v754 + __twr_v755;
    __twr_v757 = *(uint64_t*)(__twr_v756);
    __twr_v758 = (uint64_t)(&"<ll>/");
    __twr_v759 = 5ULL;
    __twr_v760 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v753)(__twr_v757, __twr_v758, __twr_v759);
    if (__twr_v760) { goto __twr_l200; } else { goto __twr_l199; }
    __twr_l199:;
    __twr_v761 = (uint64_t)(&TlMatchPath);
    __twr_v762 = (uint64_t)(&_mng_str712);
    __twr_v763 = 16ULL;
    __twr_v764 = __twr_v762 + __twr_v763;
    __twr_v765 = *(uint64_t*)(__twr_v764);
    __twr_v766 = 5ULL;
    __twr_v767 = __twr_v765 + __twr_v766;
    __twr_v768 = (uint64_t)(&FeLibraryDirectory);
    __twr_v769 = (uint64_t)(&_mng_filepath732);
    __twr_v770 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v761)(__twr_v767, __twr_v768, __twr_v769, (uint64_t)(&_mng_handle752));
    _mng_found733 = __twr_v770;
    goto __twr_l196;
    __twr_l200:;
    __twr_v771 = (uint64_t)(&TlCopyParentPath);
    __twr_v772 = (uint64_t)(&LexCurrentStream);
    __twr_v773 = *(uint64_t*)(__twr_v772);
    __twr_v774 = 8ULL;
    __twr_v775 = __twr_v773 + __twr_v774;
    __twr_v776 = *(uint64_t*)(__twr_v775);
    __twr_v777 = 48ULL;
    __twr_v778 = __twr_v776 + __twr_v777;
    __twr_v779 = (uint64_t)(&_mng_filepath732);
    ((void (*)(uint64_t, uint64_t))__twr_v771)(__twr_v778, __twr_v779);
    __twr_v780 = *(uint64_t*)(__twr_v779);
    if (__twr_v780) { goto __twr_l203; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v781 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v782 = (uint64_t)(&_mng_filepath732);
    __twr_v783 = 46ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v781)(__twr_v782, __twr_v783);
    __twr_v784 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v781)(__twr_v782, __twr_v784);
    goto __twr_l201;
    __twr_l203:;
    __twr_v785 = (uint64_t)(&_mng_filepath732);
    __twr_v786 = 16ULL;
    __twr_v787 = __twr_v785 + __twr_v786;
    __twr_v788 = *(uint64_t*)(__twr_v787);
    __twr_v789 = *(uint64_t*)(__twr_v785);
    __twr_v790 = 1ULL;
    __twr_v791 = __twr_v789 - __twr_v790;
    __twr_v792 = __twr_v788 + __twr_v791;
    __twr_v793 = *(uint8_t*)(__twr_v792);
    __twr_v794 = 47ULL;
    if (__twr_v793 == __twr_v794) { goto __twr_l201; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v795 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v796 = (uint64_t)(&_mng_filepath732);
    __twr_v797 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v795)(__twr_v796, __twr_v797);
    __twr_l201:;
    __twr_v798 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v799 = (uint64_t)(&_mng_filepath732);
    __twr_v800 = (uint64_t)(&_mng_str712);
    __twr_v801 = 16ULL;
    __twr_v802 = __twr_v800 + __twr_v801;
    __twr_v803 = *(uint64_t*)(__twr_v802);
    __twr_v804 = 0ULL;
    __twr_v805 = *(uint64_t*)(__twr_v800);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v798)(__twr_v799, __twr_v803, __twr_v805);
    __twr_v806 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v806)(__twr_v799, __twr_v804);
    __twr_v807 = (uint64_t)(&TlOpenSource);
    __twr_v808 = __twr_v799 + __twr_v801;
    __twr_v809 = *(uint64_t*)(__twr_v808);
    __twr_v810 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v807)(__twr_v809, (uint64_t)(&_mng_handle752));
    _mng_status811 = __twr_v810;
    if (_mng_status811) { goto __twr_l205; } else { goto __twr_l206; }
    __twr_l206:;
    _mng_found733 = 1ULL;
    __twr_l205:;
    __twr_l196:;
    if (_mng_found733) { goto __twr_l207; } else { goto __twr_l208; }
    __twr_l208:;
    __twr_v812 = (uint64_t)(&LexTokenError);
    __twr_v813 = (uint64_t)(&_mng_token715);
    __twr_v814 = (uint64_t)(&"Failed to include the file.");
    __twr_v815 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v812)(__twr_v813, __twr_v814, __twr_v815, __twr_v815, __twr_v815);
    __twr_l207:;
    __twr_v816 = (uint64_t)(&FeCopyPathFileBlock);
    __twr_v817 = (uint64_t)(&_mng_filepath732);
    __twr_v818 = 16ULL;
    __twr_v819 = __twr_v817 + __twr_v818;
    __twr_v820 = *(uint64_t*)(__twr_v819);
    ((void (*)(uint64_t, uint64_t))__twr_v816)(_mng_fileblock727, __twr_v820);
    __twr_v821 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v821)(__twr_v817);
    __twr_v822 = (uint64_t)(&_mng_str712);
    ((void (*)(uint64_t))__twr_v821)(__twr_v822);
    __twr_v823 = (uint64_t)(&LexCreateFileStream);
    __twr_v824 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v823)(_mng_fileblock727, _mng_handle752);
    _mng_stream825 = __twr_v824;
    __twr_v826 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v826)(_mng_stream825);
    __twr_l191:;
    _jkl_epilogue:;
}
void LexParseDefine() {
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t _mng_contentsbuffer831[11];
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t _mng_trashtoken834[4];
    uint64_t __twr_v835;
    uint64_t _mng_namebuffer836[8];
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t _mng_macro843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t _mng_oldmacro856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t __twr_v874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t __twr_v883;
    __twr_v827 = (uint64_t)(&LexFalseCount);
    __twr_v828 = *(uint32_t*)(__twr_v827);
    if (!(__twr_v828)) { goto __twr_l210; } else { goto __twr_l211; }
    __twr_l211:;
    __twr_v829 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v830 = (uint64_t)(&_mng_contentsbuffer831);
    ((void (*)(uint64_t))__twr_v829)(__twr_v830);
    __twr_v832 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v833 = (uint64_t)(&_mng_trashtoken834);
    __twr_v835 = (uint64_t)(&_mng_namebuffer836);
    __twr_v837 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v832)(__twr_v833, __twr_v835);
    __twr_v838 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v838)(__twr_v833, __twr_v830, __twr_v837);
    __twr_v839 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v839)(__twr_v830);
    goto _jkl_epilogue;
    __twr_l210:;
    __twr_v840 = (uint64_t)(&TlAllocateFromZone);
    __twr_v841 = (uint64_t)(&LexMacroZone);
    __twr_v842 = ((uint64_t (*)(uint64_t))__twr_v840)(__twr_v841);
    _mng_macro843 = __twr_v842;
    __twr_v844 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v845 = 80ULL;
    __twr_v846 = _mng_macro843 + __twr_v845;
    ((void (*)(uint64_t))__twr_v844)(__twr_v846);
    __twr_v847 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v848 = 48ULL;
    __twr_v849 = _mng_macro843 + __twr_v848;
    __twr_v850 = 168ULL;
    __twr_v851 = _mng_macro843 + __twr_v850;
    ((void (*)(uint64_t, uint64_t))__twr_v847)(__twr_v849, __twr_v851);
    __twr_v852 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v853 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v854 = *(uint64_t*)(__twr_v853);
    __twr_v855 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v852)(__twr_v854, __twr_v851);
    _mng_oldmacro856 = __twr_v855;
    if (!(_mng_oldmacro856)) { goto __twr_l212; } else { goto __twr_l214; }
    __twr_l214:;
    __twr_v857 = 32ULL;
    __twr_v858 = _mng_oldmacro856 + __twr_v857;
    __twr_v859 = *(uint64_t*)(__twr_v858);
    __twr_v860 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v861 = *(uint64_t*)(__twr_v860);
    __twr_v862 = 8ULL;
    __twr_v863 = __twr_v861 + __twr_v862;
    if (__twr_v859 != __twr_v863) { goto __twr_l212; } else { goto __twr_l213; }
    __twr_l213:;
    __twr_v864 = (uint64_t)(&LexTokenError);
    __twr_v865 = 48ULL;
    __twr_v866 = _mng_macro843 + __twr_v865;
    __twr_v867 = (uint64_t)(&"Macro already defined");
    __twr_v868 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v864)(__twr_v866, __twr_v867, __twr_v868, __twr_v868, __twr_v868);
    __twr_l212:;
    __twr_v869 = 0ULL;
    __twr_v870 = 256ULL;
    __twr_v871 = _mng_macro843 + __twr_v870;
    *(uint8_t*)(__twr_v871) = __twr_v869;
    __twr_v872 = 257ULL;
    __twr_v873 = _mng_macro843 + __twr_v872;
    *(uint8_t*)(__twr_v873) = __twr_v869;
    __twr_v874 = (uint64_t)(&LexCollectValue);
    __twr_v875 = 48ULL;
    __twr_v876 = _mng_macro843 + __twr_v875;
    __twr_v877 = 80ULL;
    __twr_v878 = _mng_macro843 + __twr_v877;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v874)(__twr_v876, __twr_v878, __twr_v869);
    __twr_v879 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v880 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v881 = *(uint64_t*)(__twr_v880);
    __twr_v882 = 168ULL;
    __twr_v883 = _mng_macro843 + __twr_v882;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v879)(__twr_v881, _mng_macro843, __twr_v883);
    __twr_l209:;
    _jkl_epilogue:;
}
void LexParseUndefine() {
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t _mng_token886[4];
    uint64_t __twr_v887;
    uint64_t _mng_buffer888[8];
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t __twr_v893;
    uint64_t __twr_v894;
    uint64_t __twr_v895;
    uint64_t _mng_oldmacro896;
    uint64_t __twr_v897;
    uint64_t __twr_v898;
    __twr_v884 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v885 = (uint64_t)(&_mng_token886);
    __twr_v887 = (uint64_t)(&_mng_buffer888);
    ((void (*)(uint64_t, uint64_t))__twr_v884)(__twr_v885, __twr_v887);
    __twr_v889 = (uint64_t)(&LexFalseCount);
    __twr_v890 = *(uint32_t*)(__twr_v889);
    if (!(__twr_v890)) { goto __twr_l216; } else { goto __twr_l217; }
    __twr_l217:;
    goto _jkl_epilogue;
    __twr_l216:;
    __twr_v891 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v892 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v893 = *(uint64_t*)(__twr_v892);
    __twr_v894 = (uint64_t)(&_mng_buffer888);
    __twr_v895 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v891)(__twr_v893, __twr_v894);
    _mng_oldmacro896 = __twr_v895;
    if (_mng_oldmacro896) { goto __twr_l218; } else { goto __twr_l219; }
    __twr_l219:;
    goto _jkl_epilogue;
    __twr_l218:;
    __twr_v897 = (uint64_t)(&TlRemoveSymbolTable);
    ((void (*)(uint64_t))__twr_v897)(_mng_oldmacro896);
    __twr_v898 = (uint64_t)(&LexMacroDelete);
    ((void (*)(uint64_t))__twr_v898)(_mng_oldmacro896);
    __twr_l215:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentName(uint64_t _mng_token899, uint64_t _mng_buffer900) {
    uint64_t _jkl_retv;
    uint64_t _mng_len901;
    uint64_t __twr_v902;
    uint64_t __twr_v903;
    uint64_t _mng_byte904;
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t __twr_v907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    uint64_t __twr_v915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint64_t __twr_v933;
    uint64_t __twr_v934;
    _mng_len901 = 0ULL;
    __twr_l221:;
    __twr_v902 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v903 = ((uint64_t (*)(uint64_t))__twr_v902)(_mng_token899);
    _mng_byte904 = __twr_v903;
    __twr_v905 = 41ULL;
    if (_mng_byte904 != __twr_v905) { goto __twr_l225; } else { goto __twr_l224; }
    __twr_l224:;
    __twr_v906 = 2ULL;
    _jkl_retv = __twr_v906;
    goto _jkl_epilogue;
    goto __twr_l223;
    __twr_l225:;
    __twr_v907 = 44ULL;
    if (_mng_byte904 != __twr_v907) { goto __twr_l223; } else { goto __twr_l226; }
    __twr_l226:;
    goto __twr_l221;
    __twr_l223:;
    goto __twr_l222;
    goto __twr_l221;
    __twr_l222:;
    __twr_l227:;
    __twr_v908 = (uint64_t)(&LexCharTreatment);
    __twr_v909 = __twr_v908 + _mng_byte904;
    __twr_v910 = *(uint8_t*)(__twr_v909);
    __twr_v911 = 3ULL;
    if (__twr_v910 != __twr_v911) { goto __twr_l229; } else { goto __twr_l230; }
    __twr_l230:;
    __twr_v912 = 0ULL;
    *(uint8_t*)(_mng_buffer900) = __twr_v912;
    __twr_v913 = 1ULL;
    _jkl_retv = __twr_v913;
    goto _jkl_epilogue;
    __twr_l229:;
    __twr_v914 = 41ULL;
    if (_mng_byte904 != __twr_v914) { goto __twr_l231; } else { goto __twr_l232; }
    __twr_l232:;
    __twr_v915 = 0ULL;
    *(uint8_t*)(_mng_buffer900) = __twr_v915;
    __twr_v916 = 3ULL;
    _jkl_retv = __twr_v916;
    goto _jkl_epilogue;
    __twr_l231:;
    __twr_v917 = 44ULL;
    if (_mng_byte904 != __twr_v917) { goto __twr_l233; } else { goto __twr_l234; }
    __twr_l234:;
    __twr_v918 = 0ULL;
    *(uint8_t*)(_mng_buffer900) = __twr_v918;
    __twr_v919 = 1ULL;
    _jkl_retv = __twr_v919;
    goto _jkl_epilogue;
    __twr_l233:;
    __twr_v920 = (uint64_t)(&LexCharTreatment);
    __twr_v921 = __twr_v920 + _mng_byte904;
    __twr_v922 = *(uint8_t*)(__twr_v921);
    if (!(__twr_v922)) { goto __twr_l235; } else { goto __twr_l236; }
    __twr_l236:;
    __twr_v923 = (uint64_t)(&LexTokenError);
    __twr_v924 = (uint64_t)(&"Illegal character in token");
    __twr_v925 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v923)(_mng_token899, __twr_v924, __twr_v925, __twr_v925, __twr_v925);
    __twr_l235:;
    __twr_v926 = 63ULL;
    if (_mng_len901 != __twr_v926) { goto __twr_l237; } else { goto __twr_l238; }
    __twr_l238:;
    __twr_v927 = (uint64_t)(&LexTokenError);
    __twr_v928 = (uint64_t)(&"Token length too great");
    __twr_v929 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v927)(_mng_token899, __twr_v928, __twr_v929, __twr_v929, __twr_v929);
    __twr_l237:;
    *(uint8_t*)(_mng_buffer900) = _mng_byte904;
    __twr_v930 = 1ULL;
    __twr_v931 = _mng_buffer900 + __twr_v930;
    _mng_buffer900 = __twr_v931;
    __twr_v932 = _mng_len901 + __twr_v930;
    _mng_len901 = __twr_v932;
    __twr_v933 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v934 = ((uint64_t (*)())__twr_v933)();
    _mng_byte904 = __twr_v934;
    goto __twr_l227;
    __twr_l228:;
    __twr_l220:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectMacroArgumentList(uint64_t _mng_ignore935, uint64_t _mng_o_arglisthead, uint64_t _mng_o_length) {
    uint64_t _mng_arglisttail936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t _mng_hashtable939[196];
    uint64_t _mng_arglisthead940;
    uint64_t _mng_length941;
    uint64_t __twr_v942;
    uint64_t __twr_v943;
    uint64_t _mng_token944[4];
    uint64_t __twr_v945;
    uint64_t _mng_buffer946[8];
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t _mng_state949;
    uint64_t __twr_v950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t __twr_v953;
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    uint64_t _mng_created956;
    uint64_t _mng_arg957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t __twr_v961;
    uint64_t __twr_v962;
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    uint64_t __twr_v965;
    uint64_t __twr_v966;
    uint64_t __twr_v967;
    uint64_t __twr_v968;
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t __twr_v975;
    _mng_arglisttail936 = 0ULL;
    __twr_v937 = (uint64_t)(&TlInitializeHashTable);
    __twr_v938 = (uint64_t)(&_mng_hashtable939);
    ((void (*)(uint64_t))__twr_v937)(__twr_v938);
    _mng_arglisthead940 = 0ULL;
    _mng_length941 = 0ULL;
    __twr_l240:;
    __twr_v942 = (uint64_t)(&LexCollectMacroArgumentName);
    __twr_v943 = (uint64_t)(&_mng_token944);
    __twr_v945 = (uint64_t)(&_mng_buffer946);
    __twr_v947 = 1ULL;
    __twr_v948 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v942)(__twr_v943, __twr_v945);
    _mng_state949 = __twr_v948;
    __twr_v950 = _mng_state949 & __twr_v947;
    if (!(__twr_v950)) { goto __twr_l242; } else { goto __twr_l244; }
    __twr_l244:;
    if (_mng_ignore935) { goto __twr_l242; } else { goto __twr_l243; }
    __twr_l243:;
    __twr_v951 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v952 = (uint64_t)(&_mng_hashtable939);
    __twr_v953 = 120ULL;
    __twr_v954 = (uint64_t)(&_mng_buffer946);
    __twr_v955 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v951)(__twr_v952, __twr_v953, __twr_v954, (uint64_t)(&_mng_created956));
    _mng_arg957 = __twr_v955;
    if (_mng_created956) { goto __twr_l245; } else { goto __twr_l246; }
    __twr_l246:;
    __twr_v958 = (uint64_t)(&LexTokenError);
    __twr_v959 = (uint64_t)(&_mng_token944);
    __twr_v960 = (uint64_t)(&"Macro argument name already used");
    __twr_v961 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v958)(__twr_v959, __twr_v960, __twr_v961, __twr_v961, __twr_v961);
    __twr_l245:;
    __twr_v962 = (uint64_t)(&TlCopyString);
    __twr_v963 = 56ULL;
    __twr_v964 = _mng_arg957 + __twr_v963;
    __twr_v965 = 1ULL;
    __twr_v966 = (uint64_t)(&_mng_buffer946);
    __twr_v967 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v962)(__twr_v964, __twr_v966, __twr_v967);
    __twr_v968 = _mng_length941 + __twr_v965;
    _mng_length941 = __twr_v968;
    __twr_v969 = 0ULL;
    __twr_v970 = 48ULL;
    __twr_v971 = _mng_arg957 + __twr_v970;
    *(uint64_t*)(__twr_v971) = __twr_v969;
    if (!(_mng_arglisttail936)) { goto __twr_l249; } else { goto __twr_l248; }
    __twr_l248:;
    __twr_v972 = 48ULL;
    __twr_v973 = _mng_arglisttail936 + __twr_v972;
    *(uint64_t*)(__twr_v973) = _mng_arg957;
    goto __twr_l247;
    __twr_l249:;
    _mng_arglisthead940 = _mng_arg957;
    __twr_l247:;
    _mng_arglisttail936 = _mng_arg957;
    __twr_l242:;
    __twr_v974 = 2ULL;
    __twr_v975 = _mng_state949 & __twr_v974;
    if (!(__twr_v975)) { goto __twr_l250; } else { goto __twr_l251; }
    __twr_l251:;
    goto _jkl_epilogue;
    __twr_l250:;
    goto __twr_l240;
    __twr_l241:;
    __twr_l239:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_arglisthead) = _mng_arglisthead940;
    *(uint64_t*)(_mng_o_length) = _mng_length941;
}
void LexParseMacro() {
    uint64_t __twr_v976;
    uint64_t __twr_v977;
    uint64_t __twr_v978;
    uint64_t _mng_macro979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t _mng_trashtoken990[4];
    uint64_t __twr_v991;
    uint64_t _mng_byte992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t _mng_length1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t _mng_contentsbuffer1008[11];
    uint64_t __twr_v1009;
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t _mng_oldmacro1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    __twr_v976 = (uint64_t)(&TlAllocateFromZone);
    __twr_v977 = (uint64_t)(&LexMacroZone);
    __twr_v978 = ((uint64_t (*)(uint64_t))__twr_v976)(__twr_v977);
    _mng_macro979 = __twr_v978;
    __twr_v980 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v981 = 80ULL;
    __twr_v982 = _mng_macro979 + __twr_v981;
    ((void (*)(uint64_t))__twr_v980)(__twr_v982);
    __twr_v983 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v984 = 48ULL;
    __twr_v985 = _mng_macro979 + __twr_v984;
    __twr_v986 = 168ULL;
    __twr_v987 = _mng_macro979 + __twr_v986;
    ((void (*)(uint64_t, uint64_t))__twr_v983)(__twr_v985, __twr_v987);
    __twr_v988 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v989 = (uint64_t)(&_mng_trashtoken990);
    __twr_v991 = ((uint64_t (*)(uint64_t))__twr_v988)(__twr_v989);
    _mng_byte992 = __twr_v991;
    __twr_v993 = 40ULL;
    if (_mng_byte992 == __twr_v993) { goto __twr_l253; } else { goto __twr_l254; }
    __twr_l254:;
    __twr_v994 = (uint64_t)(&LexTokenError);
    __twr_v995 = (uint64_t)(&_mng_trashtoken990);
    __twr_v996 = (uint64_t)(&"Expected an open parenthesis");
    __twr_v997 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v994)(__twr_v995, __twr_v996, __twr_v997, __twr_v997, __twr_v997);
    __twr_l253:;
    __twr_v998 = (uint64_t)(&LexFalseCount);
    __twr_v999 = *(uint32_t*)(__twr_v998);
    if (!(__twr_v999)) { goto __twr_l255; } else { goto __twr_l256; }
    __twr_l256:;
    __twr_v1000 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1001 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1000)(__twr_v1001, (uint64_t)(&__twr_v1002), (uint64_t)(&_mng_length1003));
    __twr_v1004 = 248ULL;
    __twr_v1005 = _mng_macro979 + __twr_v1004;
    *(uint64_t*)(__twr_v1005) = __twr_v1002;
    __twr_v1006 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1007 = (uint64_t)(&_mng_contentsbuffer1008);
    ((void (*)(uint64_t))__twr_v1006)(__twr_v1007);
    __twr_v1009 = (uint64_t)(&LexCollectValue);
    __twr_v1010 = (uint64_t)(&_mng_trashtoken990);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1009)(__twr_v1010, __twr_v1007, __twr_v1001);
    __twr_v1011 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1011)(__twr_v1007);
    goto _jkl_epilogue;
    __twr_l255:;
    __twr_v1012 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1013 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1012)(__twr_v1013, (uint64_t)(&__twr_v1014), (uint64_t)(&_mng_length1003));
    __twr_v1015 = 248ULL;
    __twr_v1016 = _mng_macro979 + __twr_v1015;
    *(uint64_t*)(__twr_v1016) = __twr_v1014;
    if (_mng_length1003) { goto __twr_l257; } else { goto __twr_l258; }
    __twr_l258:;
    __twr_v1017 = (uint64_t)(&LexTokenError);
    __twr_v1018 = 48ULL;
    __twr_v1019 = _mng_macro979 + __twr_v1018;
    __twr_v1020 = (uint64_t)(&"Must have at least 1 argument");
    __twr_v1021 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1017)(__twr_v1019, __twr_v1020, __twr_v1021, __twr_v1021, __twr_v1021);
    __twr_l257:;
    __twr_v1022 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1023 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1024 = *(uint64_t*)(__twr_v1023);
    __twr_v1025 = 168ULL;
    __twr_v1026 = _mng_macro979 + __twr_v1025;
    __twr_v1027 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1022)(__twr_v1024, __twr_v1026);
    _mng_oldmacro1028 = __twr_v1027;
    if (!(_mng_oldmacro1028)) { goto __twr_l259; } else { goto __twr_l260; }
    __twr_l260:;
    __twr_v1029 = (uint64_t)(&LexTokenError);
    __twr_v1030 = 48ULL;
    __twr_v1031 = _mng_macro979 + __twr_v1030;
    __twr_v1032 = (uint64_t)(&"Macro already defined");
    __twr_v1033 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1029)(__twr_v1031, __twr_v1032, __twr_v1033, __twr_v1033, __twr_v1033);
    __twr_l259:;
    __twr_v1034 = 1ULL;
    __twr_v1035 = 256ULL;
    __twr_v1036 = _mng_macro979 + __twr_v1035;
    *(uint8_t*)(__twr_v1036) = __twr_v1034;
    __twr_v1037 = 0ULL;
    __twr_v1038 = 257ULL;
    __twr_v1039 = _mng_macro979 + __twr_v1038;
    *(uint8_t*)(__twr_v1039) = __twr_v1037;
    __twr_v1040 = (uint64_t)(&LexCollectValue);
    __twr_v1041 = 48ULL;
    __twr_v1042 = _mng_macro979 + __twr_v1041;
    __twr_v1043 = 80ULL;
    __twr_v1044 = _mng_macro979 + __twr_v1043;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1040)(__twr_v1042, __twr_v1044, __twr_v1037);
    __twr_v1045 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1046 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1047 = *(uint64_t*)(__twr_v1046);
    __twr_v1048 = 168ULL;
    __twr_v1049 = _mng_macro979 + __twr_v1048;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1045)(__twr_v1047, _mng_macro979, __twr_v1049);
    __twr_l252:;
    _jkl_epilogue:;
}
void LexParseIf() {
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t _mng_token1052[4];
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t _mng_truthy1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    __twr_v1050 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1051 = (uint64_t)(&_mng_token1052);
    __twr_v1053 = (uint64_t)(&LexFalseCount);
    __twr_v1054 = *(uint32_t*)(__twr_v1053);
    __twr_v1055 = 0ULL;
    __twr_v1056 = (__twr_v1054 != __twr_v1055);
    __twr_v1057 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1050)(__twr_v1051, __twr_v1056);
    _mng_truthy1058 = __twr_v1057;
    __twr_v1059 = *(uint32_t*)(__twr_v1053);
    if (!(__twr_v1059)) { goto __twr_l262; } else { goto __twr_l263; }
    __twr_l263:;
    __twr_v1060 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1061 = (uint64_t)(&LexIfStack);
    __twr_v1062 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1060)(__twr_v1061, __twr_v1062);
    __twr_v1063 = 1ULL;
    __twr_v1064 = (uint64_t)(&LexFalseCount);
    __twr_v1065 = *(uint32_t*)(__twr_v1064);
    __twr_v1066 = __twr_v1065 + __twr_v1063;
    *(uint32_t*)(__twr_v1064) = __twr_v1066;
    goto _jkl_epilogue;
    __twr_l262:;
    if (!(_mng_truthy1058)) { goto __twr_l266; } else { goto __twr_l265; }
    __twr_l265:;
    __twr_v1067 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1068 = (uint64_t)(&LexIfStack);
    __twr_v1069 = 2ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1067)(__twr_v1068, __twr_v1069);
    goto __twr_l264;
    __twr_l266:;
    __twr_v1070 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1071 = (uint64_t)(&LexIfStack);
    __twr_v1072 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1070)(__twr_v1071, __twr_v1072);
    __twr_v1073 = (uint64_t)(&LexFalseCount);
    __twr_v1074 = *(uint32_t*)(__twr_v1073);
    __twr_v1075 = __twr_v1074 + __twr_v1072;
    *(uint32_t*)(__twr_v1073) = __twr_v1075;
    __twr_l264:;
    __twr_l261:;
    _jkl_epilogue:;
}
void LexParseElse() {
    uint64_t __twr_v1076;
    uint64_t __twr_v1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t __twr_v1088;
    uint64_t __twr_v1089;
    uint64_t _mng_status1090;
    uint64_t __twr_v1091;
    uint64_t __twr_v1092;
    uint64_t __twr_v1093;
    uint64_t __twr_v1094;
    uint64_t __twr_v1095;
    uint64_t __twr_v1096;
    uint64_t __twr_v1097;
    uint64_t __twr_v1098;
    uint64_t __twr_v1099;
    uint64_t __twr_v1100;
    uint64_t __twr_v1101;
    uint64_t __twr_v1102;
    uint64_t __twr_v1103;
    uint64_t __twr_v1104;
    uint64_t __twr_v1105;
    uint64_t __twr_v1106;
    uint64_t __twr_v1107;
    uint64_t __twr_v1108;
    uint64_t __twr_v1109;
    uint64_t __twr_v1110;
    uint64_t __twr_v1111;
    uint64_t __twr_v1112;
    uint64_t __twr_v1113;
    uint64_t __twr_v1114;
    uint64_t __twr_v1115;
    __twr_v1076 = (uint64_t)(&LexIfStack);
    __twr_v1077 = *(uint64_t*)(__twr_v1076);
    if (__twr_v1077) { goto __twr_l268; } else { goto __twr_l269; }
    __twr_l269:;
    __twr_v1078 = (uint64_t)(&LexStreamError);
    __twr_v1079 = (uint64_t)(&"ELSE with no matching IF");
    __twr_v1080 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1078)(__twr_v1079, __twr_v1080, __twr_v1080, __twr_v1080);
    __twr_l268:;
    __twr_v1081 = (uint64_t)(&LexIfStack);
    __twr_v1082 = 16ULL;
    __twr_v1083 = __twr_v1081 + __twr_v1082;
    __twr_v1084 = *(uint64_t*)(__twr_v1083);
    __twr_v1085 = *(uint64_t*)(__twr_v1081);
    __twr_v1086 = 1ULL;
    __twr_v1087 = __twr_v1085 - __twr_v1086;
    __twr_v1088 = __twr_v1084 + __twr_v1087;
    __twr_v1089 = *(uint8_t*)(__twr_v1088);
    _mng_status1090 = __twr_v1089;
    if (_mng_status1090) { goto __twr_l270; } else { goto __twr_l271; }
    __twr_l271:;
    goto _jkl_epilogue;
    __twr_l270:;
    __twr_v1091 = 2ULL;
    if (_mng_status1090 != __twr_v1091) { goto __twr_l272; } else { goto __twr_l273; }
    __twr_l273:;
    __twr_v1092 = 0ULL;
    __twr_v1093 = (uint64_t)(&LexIfStack);
    __twr_v1094 = 16ULL;
    __twr_v1095 = __twr_v1093 + __twr_v1094;
    __twr_v1096 = *(uint64_t*)(__twr_v1095);
    __twr_v1097 = *(uint64_t*)(__twr_v1093);
    __twr_v1098 = 1ULL;
    __twr_v1099 = __twr_v1097 - __twr_v1098;
    __twr_v1100 = __twr_v1096 + __twr_v1099;
    *(uint8_t*)(__twr_v1100) = __twr_v1092;
    __twr_v1101 = (uint64_t)(&LexFalseCount);
    __twr_v1102 = *(uint32_t*)(__twr_v1101);
    __twr_v1103 = __twr_v1102 + __twr_v1098;
    *(uint32_t*)(__twr_v1101) = __twr_v1103;
    goto _jkl_epilogue;
    __twr_l272:;
    __twr_v1104 = 2ULL;
    __twr_v1105 = (uint64_t)(&LexIfStack);
    __twr_v1106 = 16ULL;
    __twr_v1107 = __twr_v1105 + __twr_v1106;
    __twr_v1108 = *(uint64_t*)(__twr_v1107);
    __twr_v1109 = *(uint64_t*)(__twr_v1105);
    __twr_v1110 = 1ULL;
    __twr_v1111 = __twr_v1109 - __twr_v1110;
    __twr_v1112 = __twr_v1108 + __twr_v1111;
    *(uint8_t*)(__twr_v1112) = __twr_v1104;
    __twr_v1113 = (uint64_t)(&LexFalseCount);
    __twr_v1114 = *(uint32_t*)(__twr_v1113);
    __twr_v1115 = __twr_v1114 - __twr_v1110;
    *(uint32_t*)(__twr_v1113) = __twr_v1115;
    __twr_l267:;
    _jkl_epilogue:;
}
void LexParseElseif() {
    uint64_t __twr_v1116;
    uint64_t __twr_v1117;
    uint64_t __twr_v1118;
    uint64_t __twr_v1119;
    uint64_t __twr_v1120;
    uint64_t __twr_v1121;
    uint64_t __twr_v1122;
    uint64_t __twr_v1123;
    uint64_t __twr_v1124;
    uint64_t __twr_v1125;
    uint64_t __twr_v1126;
    uint64_t __twr_v1127;
    uint64_t __twr_v1128;
    uint64_t __twr_v1129;
    uint64_t _mng_status1130;
    uint64_t __twr_v1131;
    uint64_t __twr_v1132;
    uint64_t _mng_token1133[4];
    uint64_t __twr_v1134;
    uint64_t __twr_v1135;
    uint64_t __twr_v1136;
    uint64_t __twr_v1137;
    uint64_t __twr_v1138;
    uint64_t __twr_v1139;
    uint64_t __twr_v1140;
    uint64_t __twr_v1141;
    uint64_t __twr_v1142;
    uint64_t __twr_v1143;
    uint64_t __twr_v1144;
    uint64_t __twr_v1145;
    uint64_t __twr_v1146;
    uint64_t __twr_v1147;
    uint64_t __twr_v1148;
    uint64_t __twr_v1149;
    uint64_t __twr_v1150;
    uint64_t __twr_v1151;
    uint64_t __twr_v1152;
    uint64_t __twr_v1153;
    uint64_t __twr_v1154;
    uint64_t __twr_v1155;
    uint64_t _mng_truthy1156;
    uint64_t __twr_v1157;
    uint64_t __twr_v1158;
    uint64_t __twr_v1159;
    uint64_t __twr_v1160;
    uint64_t __twr_v1161;
    uint64_t __twr_v1162;
    uint64_t __twr_v1163;
    uint64_t __twr_v1164;
    uint64_t __twr_v1165;
    uint64_t __twr_v1166;
    uint64_t __twr_v1167;
    uint64_t __twr_v1168;
    __twr_v1116 = (uint64_t)(&LexIfStack);
    __twr_v1117 = *(uint64_t*)(__twr_v1116);
    if (__twr_v1117) { goto __twr_l275; } else { goto __twr_l276; }
    __twr_l276:;
    __twr_v1118 = (uint64_t)(&LexStreamError);
    __twr_v1119 = (uint64_t)(&"ELSEIF with no matching IF");
    __twr_v1120 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1118)(__twr_v1119, __twr_v1120, __twr_v1120, __twr_v1120);
    __twr_l275:;
    __twr_v1121 = (uint64_t)(&LexIfStack);
    __twr_v1122 = 16ULL;
    __twr_v1123 = __twr_v1121 + __twr_v1122;
    __twr_v1124 = *(uint64_t*)(__twr_v1123);
    __twr_v1125 = *(uint64_t*)(__twr_v1121);
    __twr_v1126 = 1ULL;
    __twr_v1127 = __twr_v1125 - __twr_v1126;
    __twr_v1128 = __twr_v1124 + __twr_v1127;
    __twr_v1129 = *(uint8_t*)(__twr_v1128);
    _mng_status1130 = __twr_v1129;
    if (_mng_status1130) { goto __twr_l277; } else { goto __twr_l278; }
    __twr_l278:;
    __twr_v1131 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1132 = (uint64_t)(&_mng_token1133);
    __twr_v1134 = 1ULL;
    __twr_v1135 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1131)(__twr_v1132, __twr_v1134);
    goto _jkl_epilogue;
    __twr_l277:;
    __twr_v1136 = 2ULL;
    if (_mng_status1130 != __twr_v1136) { goto __twr_l279; } else { goto __twr_l280; }
    __twr_l280:;
    __twr_v1137 = 0ULL;
    __twr_v1138 = (uint64_t)(&LexIfStack);
    __twr_v1139 = 16ULL;
    __twr_v1140 = __twr_v1138 + __twr_v1139;
    __twr_v1141 = *(uint64_t*)(__twr_v1140);
    __twr_v1142 = *(uint64_t*)(__twr_v1138);
    __twr_v1143 = 1ULL;
    __twr_v1144 = __twr_v1142 - __twr_v1143;
    __twr_v1145 = __twr_v1141 + __twr_v1144;
    *(uint8_t*)(__twr_v1145) = __twr_v1137;
    __twr_v1146 = (uint64_t)(&LexFalseCount);
    __twr_v1147 = *(uint32_t*)(__twr_v1146);
    __twr_v1148 = __twr_v1147 + __twr_v1143;
    *(uint32_t*)(__twr_v1146) = __twr_v1148;
    __twr_v1149 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1150 = (uint64_t)(&_mng_token1133);
    __twr_v1151 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1149)(__twr_v1150, __twr_v1143);
    goto _jkl_epilogue;
    __twr_l279:;
    __twr_v1152 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1153 = (uint64_t)(&_mng_token1133);
    __twr_v1154 = 0ULL;
    __twr_v1155 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1152)(__twr_v1153, __twr_v1154);
    _mng_truthy1156 = __twr_v1155;
    if (!(_mng_truthy1156)) { goto __twr_l281; } else { goto __twr_l282; }
    __twr_l282:;
    __twr_v1157 = 2ULL;
    __twr_v1158 = (uint64_t)(&LexIfStack);
    __twr_v1159 = 16ULL;
    __twr_v1160 = __twr_v1158 + __twr_v1159;
    __twr_v1161 = *(uint64_t*)(__twr_v1160);
    __twr_v1162 = *(uint64_t*)(__twr_v1158);
    __twr_v1163 = 1ULL;
    __twr_v1164 = __twr_v1162 - __twr_v1163;
    __twr_v1165 = __twr_v1161 + __twr_v1164;
    *(uint8_t*)(__twr_v1165) = __twr_v1157;
    __twr_v1166 = (uint64_t)(&LexFalseCount);
    __twr_v1167 = *(uint32_t*)(__twr_v1166);
    __twr_v1168 = __twr_v1167 - __twr_v1163;
    *(uint32_t*)(__twr_v1166) = __twr_v1168;
    __twr_l281:;
    __twr_l274:;
    _jkl_epilogue:;
}
void LexParseEnd() {
    uint64_t __twr_v1169;
    uint64_t __twr_v1170;
    uint64_t __twr_v1171;
    uint64_t __twr_v1172;
    uint64_t __twr_v1173;
    uint64_t __twr_v1174;
    uint64_t __twr_v1175;
    uint64_t __twr_v1176;
    uint64_t _mng_status1177;
    uint64_t __twr_v1178;
    uint64_t __twr_v1179;
    uint64_t __twr_v1180;
    uint64_t __twr_v1181;
    uint64_t __twr_v1182;
    __twr_v1169 = (uint64_t)(&LexIfStack);
    __twr_v1170 = *(uint64_t*)(__twr_v1169);
    if (__twr_v1170) { goto __twr_l284; } else { goto __twr_l285; }
    __twr_l285:;
    __twr_v1171 = (uint64_t)(&LexStreamError);
    __twr_v1172 = (uint64_t)(&"END with no matching IF");
    __twr_v1173 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1171)(__twr_v1172, __twr_v1173, __twr_v1173, __twr_v1173);
    __twr_l284:;
    __twr_v1174 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1175 = (uint64_t)(&LexIfStack);
    __twr_v1176 = ((uint64_t (*)(uint64_t))__twr_v1174)(__twr_v1175);
    _mng_status1177 = __twr_v1176;
    if (!(_mng_status1177)) { goto __twr_l287; } else { goto __twr_l288; }
    __twr_l288:;
    __twr_v1178 = 1ULL;
    if (_mng_status1177 != __twr_v1178) { goto __twr_l286; } else { goto __twr_l287; }
    __twr_l287:;
    __twr_v1179 = 1ULL;
    __twr_v1180 = (uint64_t)(&LexFalseCount);
    __twr_v1181 = *(uint32_t*)(__twr_v1180);
    __twr_v1182 = __twr_v1181 - __twr_v1179;
    *(uint32_t*)(__twr_v1180) = __twr_v1182;
    goto _jkl_epilogue;
    __twr_l286:;
    __twr_l283:;
    _jkl_epilogue:;
}
void LexParseError() {
    uint64_t __twr_v1183;
    uint64_t __twr_v1184;
    uint64_t _mng_buffer1185[11];
    uint64_t __twr_v1186;
    uint64_t __twr_v1187;
    uint64_t _mng_token1188[4];
    uint64_t __twr_v1189;
    uint64_t __twr_v1190;
    uint64_t __twr_v1191;
    uint64_t __twr_v1192;
    uint64_t __twr_v1193;
    uint64_t __twr_v1194;
    uint64_t __twr_v1195;
    uint64_t __twr_v1196;
    uint64_t __twr_v1197;
    uint64_t __twr_v1198;
    uint64_t __twr_v1199;
    uint64_t __twr_v1200;
    uint64_t __twr_v1201;
    uint64_t __twr_v1202;
    __twr_v1183 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1184 = (uint64_t)(&_mng_buffer1185);
    ((void (*)(uint64_t))__twr_v1183)(__twr_v1184);
    __twr_v1186 = (uint64_t)(&LexCollectValue);
    __twr_v1187 = (uint64_t)(&_mng_token1188);
    __twr_v1189 = (uint64_t)(&LexFalseCount);
    __twr_v1190 = *(uint32_t*)(__twr_v1189);
    __twr_v1191 = 0ULL;
    __twr_v1192 = (__twr_v1190 != __twr_v1191);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1186)(__twr_v1187, __twr_v1184, __twr_v1192);
    __twr_v1193 = *(uint32_t*)(__twr_v1189);
    if (!(__twr_v1193)) { goto __twr_l290; } else { goto __twr_l291; }
    __twr_l291:;
    __twr_v1194 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1195 = (uint64_t)(&_mng_buffer1185);
    ((void (*)(uint64_t))__twr_v1194)(__twr_v1195);
    goto _jkl_epilogue;
    __twr_l290:;
    __twr_v1196 = (uint64_t)(&LexTokenError);
    __twr_v1197 = (uint64_t)(&_mng_token1188);
    __twr_v1198 = (uint64_t)(&_mng_buffer1185);
    __twr_v1199 = 16ULL;
    __twr_v1200 = __twr_v1198 + __twr_v1199;
    __twr_v1201 = *(uint64_t*)(__twr_v1200);
    __twr_v1202 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1196)(__twr_v1197, __twr_v1201, __twr_v1202, __twr_v1202, __twr_v1202);
    __twr_l289:;
    _jkl_epilogue:;
}
void LexParsePrint() {
    uint64_t __twr_v1203;
    uint64_t __twr_v1204;
    uint64_t _mng_buffer1205[11];
    uint64_t __twr_v1206;
    uint64_t __twr_v1207;
    uint64_t _mng_token1208[4];
    uint64_t __twr_v1209;
    uint64_t __twr_v1210;
    uint64_t __twr_v1211;
    uint64_t __twr_v1212;
    uint64_t __twr_v1213;
    uint64_t __twr_v1214;
    uint64_t __twr_v1215;
    uint64_t __twr_v1216;
    uint64_t __twr_v1217;
    uint64_t __twr_v1218;
    uint64_t __twr_v1219;
    uint64_t __twr_v1220;
    uint64_t __twr_v1221;
    uint64_t __twr_v1222;
    __twr_v1203 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1204 = (uint64_t)(&_mng_buffer1205);
    ((void (*)(uint64_t))__twr_v1203)(__twr_v1204);
    __twr_v1206 = (uint64_t)(&LexCollectValue);
    __twr_v1207 = (uint64_t)(&_mng_token1208);
    __twr_v1209 = (uint64_t)(&LexFalseCount);
    __twr_v1210 = *(uint32_t*)(__twr_v1209);
    __twr_v1211 = 0ULL;
    __twr_v1212 = (__twr_v1210 != __twr_v1211);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1206)(__twr_v1207, __twr_v1204, __twr_v1212);
    __twr_v1213 = *(uint32_t*)(__twr_v1209);
    if (!(__twr_v1213)) { goto __twr_l293; } else { goto __twr_l294; }
    __twr_l294:;
    __twr_v1214 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1215 = (uint64_t)(&_mng_buffer1205);
    ((void (*)(uint64_t))__twr_v1214)(__twr_v1215);
    goto _jkl_epilogue;
    __twr_l293:;
    __twr_v1216 = (uint64_t)(&TlPrintString);
    __twr_v1217 = (uint64_t)(&_mng_buffer1205);
    __twr_v1218 = 16ULL;
    __twr_v1219 = __twr_v1217 + __twr_v1218;
    __twr_v1220 = *(uint64_t*)(__twr_v1219);
    ((void (*)(uint64_t))__twr_v1216)(__twr_v1220);
    __twr_v1221 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v1216)(__twr_v1221);
    __twr_v1222 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1222)(__twr_v1217);
    __twr_l292:;
    _jkl_epilogue:;
}
void LexParseAsm() {
    uint64_t __twr_v1223;
    uint64_t __twr_v1224;
    uint64_t __twr_v1225;
    uint64_t __twr_v1226;
    uint64_t _mng_buffer1227[11];
    uint64_t __twr_v1228;
    uint64_t __twr_v1229;
    uint64_t _mng_token1230[4];
    uint64_t __twr_v1231;
    uint64_t __twr_v1232;
    uint64_t __twr_v1233;
    uint64_t __twr_v1234;
    uint64_t __twr_v1235;
    uint64_t _mng_asmblock1236;
    uint64_t _mng_status1237;
    uint64_t __twr_v1238;
    uint64_t __twr_v1239;
    uint64_t __twr_v1240;
    uint64_t __twr_v1241;
    uint64_t __twr_v1242;
    uint64_t __twr_v1243;
    uint64_t __twr_v1244;
    uint64_t __twr_v1245;
    uint64_t __twr_v1246;
    uint64_t __twr_v1247;
    uint64_t __twr_v1248;
    uint64_t __twr_v1249;
    uint64_t __twr_v1250;
    uint64_t __twr_v1251;
    uint64_t __twr_v1252;
    uint64_t __twr_v1253;
    uint64_t __twr_v1254;
    uint64_t __twr_v1255;
    uint64_t __twr_v1256;
    uint64_t __twr_v1257;
    uint64_t __twr_v1258;
    uint64_t __twr_v1259;
    uint64_t __twr_v1260;
    uint64_t __twr_v1261;
    uint64_t __twr_v1262;
    uint64_t __twr_v1263;
    uint64_t __twr_v1264;
    __twr_v1223 = (uint64_t)(&LexFalseCount);
    __twr_v1224 = *(uint32_t*)(__twr_v1223);
    if (!(__twr_v1224)) { goto __twr_l296; } else { goto __twr_l297; }
    __twr_l297:;
    __twr_v1225 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1226 = (uint64_t)(&_mng_buffer1227);
    ((void (*)(uint64_t))__twr_v1225)(__twr_v1226);
    __twr_v1228 = (uint64_t)(&LexCollectValue);
    __twr_v1229 = (uint64_t)(&_mng_token1230);
    __twr_v1231 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1228)(__twr_v1229, __twr_v1226, __twr_v1231);
    __twr_v1232 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1232)(__twr_v1226);
    goto _jkl_epilogue;
    __twr_l296:;
    __twr_v1233 = (uint64_t)(&TlBumpAlloc);
    __twr_v1234 = 136ULL;
    __twr_v1235 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1233)(__twr_v1234, (uint64_t)(&_mng_asmblock1236));
    _mng_status1237 = __twr_v1235;
    if (!(_mng_status1237)) { goto __twr_l298; } else { goto __twr_l299; }
    __twr_l299:;
    __twr_v1238 = (uint64_t)(&TlInternalError);
    __twr_v1239 = (uint64_t)(&"Failed to allocate asm block");
    __twr_v1240 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1238)(__twr_v1239, __twr_v1240, __twr_v1240, __twr_v1240);
    __twr_l298:;
    __twr_v1241 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1242 = 48ULL;
    __twr_v1243 = _mng_asmblock1236 + __twr_v1242;
    ((void (*)(uint64_t))__twr_v1241)(__twr_v1243);
    __twr_v1244 = (uint64_t)(&LexCollectValue);
    __twr_v1245 = 16ULL;
    __twr_v1246 = _mng_asmblock1236 + __twr_v1245;
    __twr_v1247 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1244)(__twr_v1246, __twr_v1243, __twr_v1247);
    __twr_v1248 = (uint64_t)(&LexCurrentSection);
    __twr_v1249 = *(uint64_t*)(__twr_v1248);
    __twr_v1250 = (uint64_t)(&LexDefaultSection);
    if (__twr_v1249 != __twr_v1250) { goto __twr_l302; } else { goto __twr_l301; }
    __twr_l301:;
    __twr_v1251 = (uint64_t)(&LexTextSection);
    __twr_v1252 = 8ULL;
    __twr_v1253 = _mng_asmblock1236 + __twr_v1252;
    *(uint64_t*)(__twr_v1253) = __twr_v1251;
    goto __twr_l300;
    __twr_l302:;
    __twr_v1254 = (uint64_t)(&LexCurrentSection);
    __twr_v1255 = *(uint64_t*)(__twr_v1254);
    __twr_v1256 = 8ULL;
    __twr_v1257 = _mng_asmblock1236 + __twr_v1256;
    *(uint64_t*)(__twr_v1257) = __twr_v1255;
    __twr_l300:;
    __twr_v1258 = 0ULL;
    *(uint64_t*)(_mng_asmblock1236) = __twr_v1258;
    __twr_v1259 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1260 = *(uint64_t*)(__twr_v1259);
    if (__twr_v1260) { goto __twr_l305; } else { goto __twr_l304; }
    __twr_l304:;
    __twr_v1261 = (uint64_t)(&LexAsmBlockListHead);
    *(uint64_t*)(__twr_v1261) = _mng_asmblock1236;
    goto __twr_l303;
    __twr_l305:;
    __twr_v1262 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1263 = *(uint64_t*)(__twr_v1262);
    *(uint64_t*)(__twr_v1263) = _mng_asmblock1236;
    __twr_l303:;
    __twr_v1264 = (uint64_t)(&LexAsmBlockListTail);
    *(uint64_t*)(__twr_v1264) = _mng_asmblock1236;
    __twr_l295:;
    _jkl_epilogue:;
}
void LexParseSection() {
    uint64_t __twr_v1265;
    uint64_t __twr_v1266;
    uint64_t _mng_str1267[11];
    uint64_t __twr_v1268;
    uint64_t __twr_v1269;
    uint64_t _mng_token1270[4];
    uint64_t __twr_v1271;
    uint64_t __twr_v1272;
    uint64_t __twr_v1273;
    uint64_t __twr_v1274;
    uint64_t __twr_v1275;
    uint64_t __twr_v1276;
    uint64_t __twr_v1277;
    uint64_t __twr_v1278;
    uint64_t __twr_v1279;
    uint64_t __twr_v1280;
    uint64_t __twr_v1281;
    uint64_t __twr_v1282;
    uint64_t __twr_v1283;
    uint64_t __twr_v1284;
    uint64_t __twr_v1285;
    uint64_t __twr_v1286;
    uint64_t __twr_v1287;
    uint64_t _mng_section1288;
    uint64_t __twr_v1289;
    uint64_t __twr_v1290;
    __twr_v1265 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1266 = (uint64_t)(&_mng_str1267);
    ((void (*)(uint64_t))__twr_v1265)(__twr_v1266);
    __twr_v1268 = (uint64_t)(&LexCollectString);
    __twr_v1269 = (uint64_t)(&_mng_token1270);
    ((void (*)(uint64_t, uint64_t))__twr_v1268)(__twr_v1269, __twr_v1266);
    __twr_v1271 = (uint64_t)(&LexFalseCount);
    __twr_v1272 = *(uint32_t*)(__twr_v1271);
    if (!(__twr_v1272)) { goto __twr_l307; } else { goto __twr_l308; }
    __twr_l308:;
    __twr_v1273 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1274 = (uint64_t)(&_mng_str1267);
    ((void (*)(uint64_t))__twr_v1273)(__twr_v1274);
    goto _jkl_epilogue;
    __twr_l307:;
    __twr_v1275 = (uint64_t)(&_mng_str1267);
    __twr_v1276 = *(uint64_t*)(__twr_v1275);
    __twr_v1277 = 63ULL;
    if (__twr_v1276 < __twr_v1277) { goto __twr_l309; } else { goto __twr_l310; }
    __twr_l310:;
    __twr_v1278 = (uint64_t)(&LexTokenError);
    __twr_v1279 = (uint64_t)(&_mng_token1270);
    __twr_v1280 = (uint64_t)(&"Section name too long");
    __twr_v1281 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1278)(__twr_v1279, __twr_v1280, __twr_v1281, __twr_v1281, __twr_v1281);
    __twr_l309:;
    __twr_v1282 = (uint64_t)(&LexLookupSection);
    __twr_v1283 = (uint64_t)(&_mng_str1267);
    __twr_v1284 = 16ULL;
    __twr_v1285 = __twr_v1283 + __twr_v1284;
    __twr_v1286 = *(uint64_t*)(__twr_v1285);
    __twr_v1287 = ((uint64_t (*)(uint64_t))__twr_v1282)(__twr_v1286);
    _mng_section1288 = __twr_v1287;
    __twr_v1289 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1289)(__twr_v1283);
    __twr_v1290 = (uint64_t)(&LexNextSymbolSection);
    *(uint64_t*)(__twr_v1290) = _mng_section1288;
    __twr_l306:;
    _jkl_epilogue:;
}
void LexParseEnterSection() {
    uint64_t __twr_v1291;
    uint64_t __twr_v1292;
    uint64_t _mng_str1293[11];
    uint64_t __twr_v1294;
    uint64_t __twr_v1295;
    uint64_t _mng_token1296[4];
    uint64_t __twr_v1297;
    uint64_t __twr_v1298;
    uint64_t __twr_v1299;
    uint64_t __twr_v1300;
    uint64_t __twr_v1301;
    uint64_t __twr_v1302;
    uint64_t __twr_v1303;
    uint64_t __twr_v1304;
    uint64_t __twr_v1305;
    uint64_t __twr_v1306;
    uint64_t __twr_v1307;
    uint64_t __twr_v1308;
    uint64_t __twr_v1309;
    uint64_t __twr_v1310;
    uint64_t __twr_v1311;
    uint64_t __twr_v1312;
    uint64_t __twr_v1313;
    uint64_t _mng_section1314;
    uint64_t __twr_v1315;
    uint64_t __twr_v1316;
    __twr_v1291 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1292 = (uint64_t)(&_mng_str1293);
    ((void (*)(uint64_t))__twr_v1291)(__twr_v1292);
    __twr_v1294 = (uint64_t)(&LexCollectString);
    __twr_v1295 = (uint64_t)(&_mng_token1296);
    ((void (*)(uint64_t, uint64_t))__twr_v1294)(__twr_v1295, __twr_v1292);
    __twr_v1297 = (uint64_t)(&LexFalseCount);
    __twr_v1298 = *(uint32_t*)(__twr_v1297);
    if (!(__twr_v1298)) { goto __twr_l312; } else { goto __twr_l313; }
    __twr_l313:;
    __twr_v1299 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1300 = (uint64_t)(&_mng_str1293);
    ((void (*)(uint64_t))__twr_v1299)(__twr_v1300);
    goto _jkl_epilogue;
    __twr_l312:;
    __twr_v1301 = (uint64_t)(&_mng_str1293);
    __twr_v1302 = *(uint64_t*)(__twr_v1301);
    __twr_v1303 = 63ULL;
    if (__twr_v1302 < __twr_v1303) { goto __twr_l314; } else { goto __twr_l315; }
    __twr_l315:;
    __twr_v1304 = (uint64_t)(&LexTokenError);
    __twr_v1305 = (uint64_t)(&_mng_token1296);
    __twr_v1306 = (uint64_t)(&"Section name too long");
    __twr_v1307 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1304)(__twr_v1305, __twr_v1306, __twr_v1307, __twr_v1307, __twr_v1307);
    __twr_l314:;
    __twr_v1308 = (uint64_t)(&LexLookupSection);
    __twr_v1309 = (uint64_t)(&_mng_str1293);
    __twr_v1310 = 16ULL;
    __twr_v1311 = __twr_v1309 + __twr_v1310;
    __twr_v1312 = *(uint64_t*)(__twr_v1311);
    __twr_v1313 = ((uint64_t (*)(uint64_t))__twr_v1308)(__twr_v1312);
    _mng_section1314 = __twr_v1313;
    __twr_v1315 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1315)(__twr_v1309);
    __twr_v1316 = (uint64_t)(&LexPushSection);
    ((void (*)(uint64_t))__twr_v1316)(_mng_section1314);
    __twr_l311:;
    _jkl_epilogue:;
}
void LexParseLeaveSection() {
    uint64_t __twr_v1317;
    uint64_t __twr_v1318;
    uint64_t _mng_popped1319;
    uint64_t __twr_v1320;
    uint64_t __twr_v1321;
    uint64_t __twr_v1322;
    uint64_t __twr_v1323;
    __twr_v1317 = (uint64_t)(&LexPopSection);
    __twr_v1318 = ((uint64_t (*)())__twr_v1317)();
    _mng_popped1319 = __twr_v1318;
    if (_mng_popped1319) { goto __twr_l317; } else { goto __twr_l318; }
    __twr_l318:;
    __twr_v1320 = (uint64_t)(&LexTokenError);
    __twr_v1321 = (uint64_t)(&LexDirectiveToken);
    __twr_v1322 = (uint64_t)(&"Section stack was empty");
    __twr_v1323 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1320)(__twr_v1321, __twr_v1322, __twr_v1323, __twr_v1323, __twr_v1323);
    __twr_l317:;
    __twr_l316:;
    _jkl_epilogue:;
}
void LexOperatorEquals(uint64_t _mng_buffer1324, uint64_t _mng_ignore1325) {
    uint64_t __twr_v1326;
    uint64_t __twr_v1327;
    uint64_t _mng_token1328[4];
    uint64_t __twr_v1329;
    uint64_t _mng_num11330;
    uint64_t __twr_v1331;
    uint64_t _mng_num21332;
    uint64_t __twr_v1333;
    uint64_t __twr_v1334;
    uint64_t __twr_v1335;
    uint64_t __twr_v1336;
    uint64_t __twr_v1337;
    uint64_t __twr_v1338;
    __twr_v1326 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1327 = (uint64_t)(&_mng_token1328);
    __twr_v1329 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1326)(__twr_v1327, _mng_ignore1325);
    _mng_num11330 = __twr_v1329;
    __twr_v1331 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1326)(__twr_v1327, _mng_ignore1325);
    _mng_num21332 = __twr_v1331;
    __twr_v1333 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1333)();
    __twr_v1334 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1335 = (_mng_num11330 == _mng_num21332);
    __twr_v1336 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1334)(_mng_buffer1324, __twr_v1335, __twr_v1336);
    __twr_v1337 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1338 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1337)(_mng_buffer1324, __twr_v1338);
    __twr_l319:;
    _jkl_epilogue:;
}
void LexOperatorLteq(uint64_t _mng_buffer1339, uint64_t _mng_ignore1340) {
    uint64_t __twr_v1341;
    uint64_t __twr_v1342;
    uint64_t _mng_token1343[4];
    uint64_t __twr_v1344;
    uint64_t _mng_num11345;
    uint64_t __twr_v1346;
    uint64_t _mng_num21347;
    uint64_t __twr_v1348;
    uint64_t __twr_v1349;
    uint64_t __twr_v1350;
    uint64_t __twr_v1351;
    uint64_t __twr_v1352;
    uint64_t __twr_v1353;
    __twr_v1341 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1342 = (uint64_t)(&_mng_token1343);
    __twr_v1344 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1341)(__twr_v1342, _mng_ignore1340);
    _mng_num11345 = __twr_v1344;
    __twr_v1346 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1341)(__twr_v1342, _mng_ignore1340);
    _mng_num21347 = __twr_v1346;
    __twr_v1348 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1348)();
    __twr_v1349 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1350 = (_mng_num11345 <= _mng_num21347);
    __twr_v1351 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1349)(_mng_buffer1339, __twr_v1350, __twr_v1351);
    __twr_v1352 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1353 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1352)(_mng_buffer1339, __twr_v1353);
    __twr_l320:;
    _jkl_epilogue:;
}
void LexOperatorGteq(uint64_t _mng_buffer1354, uint64_t _mng_ignore1355) {
    uint64_t __twr_v1356;
    uint64_t __twr_v1357;
    uint64_t _mng_token1358[4];
    uint64_t __twr_v1359;
    uint64_t _mng_num11360;
    uint64_t __twr_v1361;
    uint64_t _mng_num21362;
    uint64_t __twr_v1363;
    uint64_t __twr_v1364;
    uint64_t __twr_v1365;
    uint64_t __twr_v1366;
    uint64_t __twr_v1367;
    uint64_t __twr_v1368;
    __twr_v1356 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1357 = (uint64_t)(&_mng_token1358);
    __twr_v1359 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1356)(__twr_v1357, _mng_ignore1355);
    _mng_num11360 = __twr_v1359;
    __twr_v1361 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1356)(__twr_v1357, _mng_ignore1355);
    _mng_num21362 = __twr_v1361;
    __twr_v1363 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1363)();
    __twr_v1364 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1365 = (_mng_num11360 >= _mng_num21362);
    __twr_v1366 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1364)(_mng_buffer1354, __twr_v1365, __twr_v1366);
    __twr_v1367 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1368 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1367)(_mng_buffer1354, __twr_v1368);
    __twr_l321:;
    _jkl_epilogue:;
}
void LexOperatorNeq(uint64_t _mng_buffer1369, uint64_t _mng_ignore1370) {
    uint64_t __twr_v1371;
    uint64_t __twr_v1372;
    uint64_t _mng_token1373[4];
    uint64_t __twr_v1374;
    uint64_t _mng_num11375;
    uint64_t __twr_v1376;
    uint64_t _mng_num21377;
    uint64_t __twr_v1378;
    uint64_t __twr_v1379;
    uint64_t __twr_v1380;
    uint64_t __twr_v1381;
    uint64_t __twr_v1382;
    uint64_t __twr_v1383;
    __twr_v1371 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1372 = (uint64_t)(&_mng_token1373);
    __twr_v1374 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1371)(__twr_v1372, _mng_ignore1370);
    _mng_num11375 = __twr_v1374;
    __twr_v1376 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1371)(__twr_v1372, _mng_ignore1370);
    _mng_num21377 = __twr_v1376;
    __twr_v1378 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1378)();
    __twr_v1379 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1380 = (_mng_num11375 != _mng_num21377);
    __twr_v1381 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1379)(_mng_buffer1369, __twr_v1380, __twr_v1381);
    __twr_v1382 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1383 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1382)(_mng_buffer1369, __twr_v1383);
    __twr_l322:;
    _jkl_epilogue:;
}
void LexOperatorLt(uint64_t _mng_buffer1384, uint64_t _mng_ignore1385) {
    uint64_t __twr_v1386;
    uint64_t __twr_v1387;
    uint64_t _mng_token1388[4];
    uint64_t __twr_v1389;
    uint64_t _mng_num11390;
    uint64_t __twr_v1391;
    uint64_t _mng_num21392;
    uint64_t __twr_v1393;
    uint64_t __twr_v1394;
    uint64_t __twr_v1395;
    uint64_t __twr_v1396;
    uint64_t __twr_v1397;
    uint64_t __twr_v1398;
    __twr_v1386 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1387 = (uint64_t)(&_mng_token1388);
    __twr_v1389 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1386)(__twr_v1387, _mng_ignore1385);
    _mng_num11390 = __twr_v1389;
    __twr_v1391 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1386)(__twr_v1387, _mng_ignore1385);
    _mng_num21392 = __twr_v1391;
    __twr_v1393 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1393)();
    __twr_v1394 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1395 = (_mng_num11390 < _mng_num21392);
    __twr_v1396 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1394)(_mng_buffer1384, __twr_v1395, __twr_v1396);
    __twr_v1397 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1398 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1397)(_mng_buffer1384, __twr_v1398);
    __twr_l323:;
    _jkl_epilogue:;
}
void LexOperatorGt(uint64_t _mng_buffer1399, uint64_t _mng_ignore1400) {
    uint64_t __twr_v1401;
    uint64_t __twr_v1402;
    uint64_t _mng_token1403[4];
    uint64_t __twr_v1404;
    uint64_t _mng_num11405;
    uint64_t __twr_v1406;
    uint64_t _mng_num21407;
    uint64_t __twr_v1408;
    uint64_t __twr_v1409;
    uint64_t __twr_v1410;
    uint64_t __twr_v1411;
    uint64_t __twr_v1412;
    uint64_t __twr_v1413;
    __twr_v1401 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1402 = (uint64_t)(&_mng_token1403);
    __twr_v1404 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1401)(__twr_v1402, _mng_ignore1400);
    _mng_num11405 = __twr_v1404;
    __twr_v1406 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1401)(__twr_v1402, _mng_ignore1400);
    _mng_num21407 = __twr_v1406;
    __twr_v1408 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1408)();
    __twr_v1409 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1410 = (_mng_num11405 > _mng_num21407);
    __twr_v1411 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1409)(_mng_buffer1399, __twr_v1410, __twr_v1411);
    __twr_v1412 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1413 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1412)(_mng_buffer1399, __twr_v1413);
    __twr_l324:;
    _jkl_epilogue:;
}
void LexOperatorAdd(uint64_t _mng_buffer1414, uint64_t _mng_ignore1415) {
    uint64_t __twr_v1416;
    uint64_t __twr_v1417;
    uint64_t _mng_token1418[4];
    uint64_t __twr_v1419;
    uint64_t _mng_num11420;
    uint64_t __twr_v1421;
    uint64_t _mng_num21422;
    uint64_t __twr_v1423;
    uint64_t __twr_v1424;
    uint64_t __twr_v1425;
    uint64_t __twr_v1426;
    uint64_t __twr_v1427;
    uint64_t __twr_v1428;
    __twr_v1416 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1417 = (uint64_t)(&_mng_token1418);
    __twr_v1419 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1416)(__twr_v1417, _mng_ignore1415);
    _mng_num11420 = __twr_v1419;
    __twr_v1421 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1416)(__twr_v1417, _mng_ignore1415);
    _mng_num21422 = __twr_v1421;
    __twr_v1423 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1423)();
    __twr_v1424 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1425 = _mng_num11420 + _mng_num21422;
    __twr_v1426 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1424)(_mng_buffer1414, __twr_v1425, __twr_v1426);
    __twr_v1427 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1428 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1427)(_mng_buffer1414, __twr_v1428);
    __twr_l325:;
    _jkl_epilogue:;
}
void LexOperatorSub(uint64_t _mng_buffer1429, uint64_t _mng_ignore1430) {
    uint64_t __twr_v1431;
    uint64_t __twr_v1432;
    uint64_t _mng_token1433[4];
    uint64_t __twr_v1434;
    uint64_t _mng_num11435;
    uint64_t __twr_v1436;
    uint64_t _mng_num21437;
    uint64_t __twr_v1438;
    uint64_t __twr_v1439;
    uint64_t __twr_v1440;
    uint64_t __twr_v1441;
    uint64_t __twr_v1442;
    uint64_t __twr_v1443;
    __twr_v1431 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1432 = (uint64_t)(&_mng_token1433);
    __twr_v1434 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1431)(__twr_v1432, _mng_ignore1430);
    _mng_num11435 = __twr_v1434;
    __twr_v1436 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1431)(__twr_v1432, _mng_ignore1430);
    _mng_num21437 = __twr_v1436;
    __twr_v1438 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1438)();
    __twr_v1439 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1440 = _mng_num11435 - _mng_num21437;
    __twr_v1441 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1439)(_mng_buffer1429, __twr_v1440, __twr_v1441);
    __twr_v1442 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1443 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1442)(_mng_buffer1429, __twr_v1443);
    __twr_l326:;
    _jkl_epilogue:;
}
void LexOperatorMul(uint64_t _mng_buffer1444, uint64_t _mng_ignore1445) {
    uint64_t __twr_v1446;
    uint64_t __twr_v1447;
    uint64_t _mng_token1448[4];
    uint64_t __twr_v1449;
    uint64_t _mng_num11450;
    uint64_t __twr_v1451;
    uint64_t _mng_num21452;
    uint64_t __twr_v1453;
    uint64_t __twr_v1454;
    uint64_t __twr_v1455;
    uint64_t __twr_v1456;
    uint64_t __twr_v1457;
    uint64_t __twr_v1458;
    __twr_v1446 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1447 = (uint64_t)(&_mng_token1448);
    __twr_v1449 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1446)(__twr_v1447, _mng_ignore1445);
    _mng_num11450 = __twr_v1449;
    __twr_v1451 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1446)(__twr_v1447, _mng_ignore1445);
    _mng_num21452 = __twr_v1451;
    __twr_v1453 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1453)();
    __twr_v1454 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1455 = _mng_num11450 * _mng_num21452;
    __twr_v1456 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1454)(_mng_buffer1444, __twr_v1455, __twr_v1456);
    __twr_v1457 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1458 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1457)(_mng_buffer1444, __twr_v1458);
    __twr_l327:;
    _jkl_epilogue:;
}
void LexOperatorDiv(uint64_t _mng_buffer1459, uint64_t _mng_ignore1460) {
    uint64_t __twr_v1461;
    uint64_t __twr_v1462;
    uint64_t _mng_token1463[4];
    uint64_t __twr_v1464;
    uint64_t _mng_num11465;
    uint64_t __twr_v1466;
    uint64_t _mng_num21467;
    uint64_t __twr_v1468;
    uint64_t __twr_v1469;
    uint64_t __twr_v1470;
    uint64_t __twr_v1471;
    uint64_t __twr_v1472;
    uint64_t __twr_v1473;
    __twr_v1461 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1462 = (uint64_t)(&_mng_token1463);
    __twr_v1464 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1461)(__twr_v1462, _mng_ignore1460);
    _mng_num11465 = __twr_v1464;
    __twr_v1466 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1461)(__twr_v1462, _mng_ignore1460);
    _mng_num21467 = __twr_v1466;
    __twr_v1468 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1468)();
    __twr_v1469 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1470 = _mng_num11465 / _mng_num21467;
    __twr_v1471 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1469)(_mng_buffer1459, __twr_v1470, __twr_v1471);
    __twr_v1472 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1473 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1472)(_mng_buffer1459, __twr_v1473);
    __twr_l328:;
    _jkl_epilogue:;
}
void LexOperatorLsh(uint64_t _mng_buffer1474, uint64_t _mng_ignore1475) {
    uint64_t __twr_v1476;
    uint64_t __twr_v1477;
    uint64_t _mng_token1478[4];
    uint64_t __twr_v1479;
    uint64_t _mng_num11480;
    uint64_t __twr_v1481;
    uint64_t _mng_num21482;
    uint64_t __twr_v1483;
    uint64_t __twr_v1484;
    uint64_t __twr_v1485;
    uint64_t __twr_v1486;
    uint64_t __twr_v1487;
    uint64_t __twr_v1488;
    __twr_v1476 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1477 = (uint64_t)(&_mng_token1478);
    __twr_v1479 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1476)(__twr_v1477, _mng_ignore1475);
    _mng_num11480 = __twr_v1479;
    __twr_v1481 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1476)(__twr_v1477, _mng_ignore1475);
    _mng_num21482 = __twr_v1481;
    __twr_v1483 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1483)();
    __twr_v1484 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1485 = _mng_num11480 << _mng_num21482;
    __twr_v1486 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1484)(_mng_buffer1474, __twr_v1485, __twr_v1486);
    __twr_v1487 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1488 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1487)(_mng_buffer1474, __twr_v1488);
    __twr_l329:;
    _jkl_epilogue:;
}
void LexOperatorRsh(uint64_t _mng_buffer1489, uint64_t _mng_ignore1490) {
    uint64_t __twr_v1491;
    uint64_t __twr_v1492;
    uint64_t _mng_token1493[4];
    uint64_t __twr_v1494;
    uint64_t _mng_num11495;
    uint64_t __twr_v1496;
    uint64_t _mng_num21497;
    uint64_t __twr_v1498;
    uint64_t __twr_v1499;
    uint64_t __twr_v1500;
    uint64_t __twr_v1501;
    uint64_t __twr_v1502;
    uint64_t __twr_v1503;
    __twr_v1491 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1492 = (uint64_t)(&_mng_token1493);
    __twr_v1494 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1491)(__twr_v1492, _mng_ignore1490);
    _mng_num11495 = __twr_v1494;
    __twr_v1496 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1491)(__twr_v1492, _mng_ignore1490);
    _mng_num21497 = __twr_v1496;
    __twr_v1498 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1498)();
    __twr_v1499 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1500 = _mng_num11495 >> _mng_num21497;
    __twr_v1501 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1499)(_mng_buffer1489, __twr_v1500, __twr_v1501);
    __twr_v1502 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1503 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1502)(_mng_buffer1489, __twr_v1503);
    __twr_l330:;
    _jkl_epilogue:;
}
void LexOperatorStrcat(uint64_t _mng_buffer1504, uint64_t _mng_ignore1505) {
    uint64_t __twr_v1506;
    uint64_t __twr_v1507;
    uint64_t _mng_token1508[4];
    uint64_t __twr_v1509;
    uint64_t __twr_v1510;
    uint64_t __twr_v1511;
    __twr_v1506 = (uint64_t)(&LexCollectValue);
    __twr_v1507 = (uint64_t)(&_mng_token1508);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1506)(__twr_v1507, _mng_buffer1504, _mng_ignore1505);
    __twr_v1509 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1510 = ((uint64_t (*)(uint64_t))__twr_v1509)(_mng_buffer1504);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1506)(__twr_v1507, _mng_buffer1504, _mng_ignore1505);
    __twr_v1511 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1511)();
    __twr_l331:;
    _jkl_epilogue:;
}
void LexOperatorStrcmp(uint64_t _mng_buffer1512, uint64_t _mng_ignore1513) {
    uint64_t __twr_v1514;
    uint64_t __twr_v1515;
    uint64_t _mng_str11516[11];
    uint64_t __twr_v1517;
    uint64_t _mng_str21518[11];
    uint64_t __twr_v1519;
    uint64_t __twr_v1520;
    uint64_t _mng_token1521[4];
    uint64_t __twr_v1522;
    uint64_t __twr_v1523;
    uint64_t __twr_v1524;
    uint64_t __twr_v1525;
    uint64_t __twr_v1526;
    uint64_t __twr_v1527;
    uint64_t __twr_v1528;
    uint64_t __twr_v1529;
    uint64_t __twr_v1530;
    uint64_t __twr_v1531;
    uint64_t __twr_v1532;
    uint64_t __twr_v1533;
    uint64_t __twr_v1534;
    uint64_t __twr_v1535;
    __twr_v1514 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1515 = (uint64_t)(&_mng_str11516);
    ((void (*)(uint64_t))__twr_v1514)(__twr_v1515);
    __twr_v1517 = (uint64_t)(&_mng_str21518);
    ((void (*)(uint64_t))__twr_v1514)(__twr_v1517);
    __twr_v1519 = (uint64_t)(&LexCollectValue);
    __twr_v1520 = (uint64_t)(&_mng_token1521);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1519)(__twr_v1520, __twr_v1515, _mng_ignore1513);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1519)(__twr_v1520, __twr_v1517, _mng_ignore1513);
    __twr_v1522 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1522)(__twr_v1515);
    ((void (*)(uint64_t))__twr_v1522)(__twr_v1517);
    __twr_v1523 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1523)();
    __twr_v1524 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1525 = (uint64_t)(&TlCompareString);
    __twr_v1526 = 16ULL;
    __twr_v1527 = __twr_v1515 + __twr_v1526;
    __twr_v1528 = *(uint64_t*)(__twr_v1527);
    __twr_v1529 = __twr_v1517 + __twr_v1526;
    __twr_v1530 = *(uint64_t*)(__twr_v1529);
    __twr_v1531 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1525)(__twr_v1528, __twr_v1530);
    __twr_v1532 = 0ULL;
    __twr_v1533 = (__twr_v1531 == __twr_v1532);
    __twr_v1534 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1524)(_mng_buffer1512, __twr_v1533, __twr_v1534);
    __twr_v1535 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1535)(_mng_buffer1512, __twr_v1532);
    __twr_l332:;
    _jkl_epilogue:;
}
void LexOperatorNot(uint64_t _mng_buffer1536, uint64_t _mng_ignore1537) {
    uint64_t __twr_v1538;
    uint64_t __twr_v1539;
    uint64_t _mng_token1540[4];
    uint64_t __twr_v1541;
    uint64_t _mng_num11542;
    uint64_t __twr_v1543;
    uint64_t __twr_v1544;
    uint64_t __twr_v1545;
    uint64_t __twr_v1546;
    uint64_t __twr_v1547;
    uint64_t __twr_v1548;
    __twr_v1538 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1539 = (uint64_t)(&_mng_token1540);
    __twr_v1541 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1538)(__twr_v1539, _mng_ignore1537);
    _mng_num11542 = __twr_v1541;
    __twr_v1543 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1543)();
    __twr_v1544 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1545 = !_mng_num11542;
    __twr_v1546 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1544)(_mng_buffer1536, __twr_v1545, __twr_v1546);
    __twr_v1547 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1548 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1547)(_mng_buffer1536, __twr_v1548);
    __twr_l333:;
    _jkl_epilogue:;
}
void LexOperatorOr(uint64_t _mng_buffer1549, uint64_t _mng_ignore1550) {
    uint64_t __twr_v1551;
    uint64_t __twr_v1552;
    uint64_t _mng_token1553[4];
    uint64_t __twr_v1554;
    uint64_t _mng_num11555;
    uint64_t __twr_v1556;
    uint64_t _mng_num21557;
    uint64_t __twr_v1558;
    uint64_t __twr_v1559;
    uint64_t __twr_v1560;
    uint64_t __twr_v1561;
    uint64_t __twr_v1562;
    uint64_t __twr_v1563;
    __twr_v1551 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1552 = (uint64_t)(&_mng_token1553);
    __twr_v1554 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1551)(__twr_v1552, _mng_ignore1550);
    _mng_num11555 = __twr_v1554;
    __twr_v1556 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1551)(__twr_v1552, _mng_ignore1550);
    _mng_num21557 = __twr_v1556;
    __twr_v1558 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1558)();
    __twr_v1559 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (_mng_num11555) { goto __twr_l336; } else { goto __twr_l335; }
    __twr_l335:;
    if (!(_mng_num21557)) { goto __twr_l337; } else { goto __twr_l336; }
    __twr_l336:;
    __twr_v1560 = 1ULL;
    goto __twr_l338;
    __twr_l337:;
    __twr_v1560 = 0ULL;
    __twr_l338:;
    __twr_v1561 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1559)(_mng_buffer1549, __twr_v1560, __twr_v1561);
    __twr_v1562 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1563 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1562)(_mng_buffer1549, __twr_v1563);
    __twr_l334:;
    _jkl_epilogue:;
}
void LexOperatorAnd(uint64_t _mng_buffer1564, uint64_t _mng_ignore1565) {
    uint64_t __twr_v1566;
    uint64_t __twr_v1567;
    uint64_t _mng_token1568[4];
    uint64_t __twr_v1569;
    uint64_t _mng_num11570;
    uint64_t __twr_v1571;
    uint64_t _mng_num21572;
    uint64_t __twr_v1573;
    uint64_t __twr_v1574;
    uint64_t __twr_v1575;
    uint64_t __twr_v1576;
    uint64_t __twr_v1577;
    uint64_t __twr_v1578;
    __twr_v1566 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1567 = (uint64_t)(&_mng_token1568);
    __twr_v1569 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1566)(__twr_v1567, _mng_ignore1565);
    _mng_num11570 = __twr_v1569;
    __twr_v1571 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1566)(__twr_v1567, _mng_ignore1565);
    _mng_num21572 = __twr_v1571;
    __twr_v1573 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1573)();
    __twr_v1574 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (!(_mng_num11570)) { goto __twr_l342; } else { goto __twr_l340; }
    __twr_l340:;
    if (!(_mng_num21572)) { goto __twr_l342; } else { goto __twr_l341; }
    __twr_l341:;
    __twr_v1575 = 1ULL;
    goto __twr_l343;
    __twr_l342:;
    __twr_v1575 = 0ULL;
    __twr_l343:;
    __twr_v1576 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1574)(_mng_buffer1564, __twr_v1575, __twr_v1576);
    __twr_v1577 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1578 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1577)(_mng_buffer1564, __twr_v1578);
    __twr_l339:;
    _jkl_epilogue:;
}
void LexOperatorDefined(uint64_t _mng_buffer1579, uint64_t _mng_ignore1580) {
    uint64_t __twr_v1581;
    uint64_t __twr_v1582;
    uint64_t _mng_token1583[4];
    uint64_t __twr_v1584;
    uint64_t _mng_tokbuffer1585[8];
    uint64_t __twr_v1586;
    uint64_t __twr_v1587;
    uint64_t __twr_v1588;
    uint64_t __twr_v1589;
    uint64_t __twr_v1590;
    uint64_t __twr_v1591;
    uint64_t _mng_macro1592;
    uint64_t __twr_v1593;
    uint64_t __twr_v1594;
    uint64_t __twr_v1595;
    uint64_t __twr_v1596;
    __twr_v1581 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1582 = (uint64_t)(&_mng_token1583);
    __twr_v1584 = (uint64_t)(&_mng_tokbuffer1585);
    __twr_v1586 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1581)(__twr_v1582, __twr_v1584);
    __twr_v1587 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1587)();
    __twr_v1588 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1589 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1590 = *(uint64_t*)(__twr_v1589);
    __twr_v1591 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1588)(__twr_v1590, __twr_v1584);
    _mng_macro1592 = __twr_v1591;
    __twr_v1593 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1594 = (_mng_macro1592 != __twr_v1586);
    __twr_v1595 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1593)(_mng_buffer1579, __twr_v1594, __twr_v1595);
    __twr_v1596 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1596)(_mng_buffer1579, __twr_v1586);
    __twr_l344:;
    _jkl_epilogue:;
}
void LexOperatorBitNot(uint64_t _mng_buffer1597, uint64_t _mng_ignore1598) {
    uint64_t __twr_v1599;
    uint64_t __twr_v1600;
    uint64_t _mng_token1601[4];
    uint64_t __twr_v1602;
    uint64_t _mng_num11603;
    uint64_t __twr_v1604;
    uint64_t __twr_v1605;
    uint64_t __twr_v1606;
    uint64_t __twr_v1607;
    uint64_t __twr_v1608;
    uint64_t __twr_v1609;
    __twr_v1599 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1600 = (uint64_t)(&_mng_token1601);
    __twr_v1602 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1599)(__twr_v1600, _mng_ignore1598);
    _mng_num11603 = __twr_v1602;
    __twr_v1604 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1604)();
    __twr_v1605 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1606 = ~_mng_num11603;
    __twr_v1607 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1605)(_mng_buffer1597, __twr_v1606, __twr_v1607);
    __twr_v1608 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1609 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1608)(_mng_buffer1597, __twr_v1609);
    __twr_l345:;
    _jkl_epilogue:;
}
void LexOperatorBitOr(uint64_t _mng_buffer1610, uint64_t _mng_ignore1611) {
    uint64_t __twr_v1612;
    uint64_t __twr_v1613;
    uint64_t _mng_token1614[4];
    uint64_t __twr_v1615;
    uint64_t _mng_num11616;
    uint64_t __twr_v1617;
    uint64_t _mng_num21618;
    uint64_t __twr_v1619;
    uint64_t __twr_v1620;
    uint64_t __twr_v1621;
    uint64_t __twr_v1622;
    uint64_t __twr_v1623;
    uint64_t __twr_v1624;
    __twr_v1612 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1613 = (uint64_t)(&_mng_token1614);
    __twr_v1615 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1612)(__twr_v1613, _mng_ignore1611);
    _mng_num11616 = __twr_v1615;
    __twr_v1617 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1612)(__twr_v1613, _mng_ignore1611);
    _mng_num21618 = __twr_v1617;
    __twr_v1619 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1619)();
    __twr_v1620 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1621 = _mng_num11616 | _mng_num21618;
    __twr_v1622 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1620)(_mng_buffer1610, __twr_v1621, __twr_v1622);
    __twr_v1623 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1624 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1623)(_mng_buffer1610, __twr_v1624);
    __twr_l346:;
    _jkl_epilogue:;
}
void LexOperatorBitXor(uint64_t _mng_buffer1625, uint64_t _mng_ignore1626) {
    uint64_t __twr_v1627;
    uint64_t __twr_v1628;
    uint64_t _mng_token1629[4];
    uint64_t __twr_v1630;
    uint64_t _mng_num11631;
    uint64_t __twr_v1632;
    uint64_t _mng_num21633;
    uint64_t __twr_v1634;
    uint64_t __twr_v1635;
    uint64_t __twr_v1636;
    uint64_t __twr_v1637;
    uint64_t __twr_v1638;
    uint64_t __twr_v1639;
    __twr_v1627 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1628 = (uint64_t)(&_mng_token1629);
    __twr_v1630 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1627)(__twr_v1628, _mng_ignore1626);
    _mng_num11631 = __twr_v1630;
    __twr_v1632 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1627)(__twr_v1628, _mng_ignore1626);
    _mng_num21633 = __twr_v1632;
    __twr_v1634 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1634)();
    __twr_v1635 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1636 = _mng_num11631 ^ _mng_num21633;
    __twr_v1637 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1635)(_mng_buffer1625, __twr_v1636, __twr_v1637);
    __twr_v1638 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1639 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1638)(_mng_buffer1625, __twr_v1639);
    __twr_l347:;
    _jkl_epilogue:;
}
void LexOperatorBitAnd(uint64_t _mng_buffer1640, uint64_t _mng_ignore1641) {
    uint64_t __twr_v1642;
    uint64_t __twr_v1643;
    uint64_t _mng_token1644[4];
    uint64_t __twr_v1645;
    uint64_t _mng_num11646;
    uint64_t __twr_v1647;
    uint64_t _mng_num21648;
    uint64_t __twr_v1649;
    uint64_t __twr_v1650;
    uint64_t __twr_v1651;
    uint64_t __twr_v1652;
    uint64_t __twr_v1653;
    uint64_t __twr_v1654;
    __twr_v1642 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1643 = (uint64_t)(&_mng_token1644);
    __twr_v1645 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1642)(__twr_v1643, _mng_ignore1641);
    _mng_num11646 = __twr_v1645;
    __twr_v1647 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1642)(__twr_v1643, _mng_ignore1641);
    _mng_num21648 = __twr_v1647;
    __twr_v1649 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1649)();
    __twr_v1650 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1651 = _mng_num11646 & _mng_num21648;
    __twr_v1652 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1650)(_mng_buffer1640, __twr_v1651, __twr_v1652);
    __twr_v1653 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1654 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1653)(_mng_buffer1640, __twr_v1654);
    __twr_l348:;
    _jkl_epilogue:;
}
void LexParseDirective() {
    uint64_t __twr_v1655;
    uint64_t __twr_v1656;
    uint64_t __twr_v1657;
    uint64_t _mng_buffer1658[8];
    uint64_t __twr_v1659;
    uint64_t __twr_v1660;
    uint64_t __twr_v1661;
    uint64_t _mng_directive1662;
    uint64_t __twr_v1663;
    uint64_t __twr_v1664;
    uint64_t __twr_v1665;
    uint64_t __twr_v1666;
    uint64_t __twr_v1667;
    uint64_t __twr_v1668;
    uint64_t __twr_v1669;
    __twr_v1655 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1656 = (uint64_t)(&LexDirectiveToken);
    __twr_v1657 = (uint64_t)(&_mng_buffer1658);
    ((void (*)(uint64_t, uint64_t))__twr_v1655)(__twr_v1656, __twr_v1657);
    __twr_v1659 = (uint64_t)(&TlLookupHashTable);
    __twr_v1660 = (uint64_t)(&LexDirectiveHashTable);
    __twr_v1661 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1659)(__twr_v1660, __twr_v1657);
    _mng_directive1662 = __twr_v1661;
    if (_mng_directive1662) { goto __twr_l350; } else { goto __twr_l351; }
    __twr_l351:;
    __twr_v1663 = (uint64_t)(&LexTokenError);
    __twr_v1664 = (uint64_t)(&LexDirectiveToken);
    __twr_v1665 = (uint64_t)(&"Unknown directive");
    __twr_v1666 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1663)(__twr_v1664, __twr_v1665, __twr_v1666, __twr_v1666, __twr_v1666);
    __twr_l350:;
    __twr_v1667 = 48ULL;
    __twr_v1668 = _mng_directive1662 + __twr_v1667;
    __twr_v1669 = *(uint64_t*)(__twr_v1668);
    ((void (*)())__twr_v1669)();
    __twr_l349:;
    _jkl_epilogue:;
}
void LexInitializePreprocessor() {
    uint64_t __twr_v1670;
    uint64_t __twr_v1671;
    uint64_t __twr_v1672;
    uint64_t __twr_v1673;
    uint64_t __twr_v1674;
    uint64_t __twr_v1675;
    uint64_t __twr_v1676;
    uint64_t __twr_v1677;
    uint64_t __twr_v1678;
    uint64_t __twr_v1679;
    uint64_t __twr_v1680;
    uint64_t __twr_v1681;
    uint64_t __twr_v1682;
    uint64_t __twr_v1683;
    uint64_t __twr_v1684;
    uint64_t __twr_v1685;
    uint64_t __twr_v1686;
    uint64_t __twr_v1687;
    uint64_t __twr_v1688;
    uint64_t __twr_v1689;
    uint64_t __twr_v1690;
    uint64_t __twr_v1691;
    uint64_t __twr_v1692;
    uint64_t __twr_v1693;
    uint64_t __twr_v1694;
    uint64_t __twr_v1695;
    uint64_t __twr_v1696;
    uint64_t __twr_v1697;
    uint64_t __twr_v1698;
    uint64_t __twr_v1699;
    uint64_t __twr_v1700;
    uint64_t __twr_v1701;
    uint64_t __twr_v1702;
    uint64_t __twr_v1703;
    uint64_t __twr_v1704;
    uint64_t __twr_v1705;
    uint64_t __twr_v1706;
    uint64_t __twr_v1707;
    uint64_t __twr_v1708;
    uint64_t __twr_v1709;
    uint64_t __twr_v1710;
    uint64_t __twr_v1711;
    uint64_t __twr_v1712;
    uint64_t __twr_v1713;
    uint64_t __twr_v1714;
    uint64_t __twr_v1715;
    uint64_t __twr_v1716;
    uint64_t __twr_v1717;
    uint64_t __twr_v1718;
    uint64_t __twr_v1719;
    uint64_t __twr_v1720;
    uint64_t __twr_v1721;
    uint64_t __twr_v1722;
    uint64_t __twr_v1723;
    uint64_t __twr_v1724;
    uint64_t __twr_v1725;
    uint64_t __twr_v1726;
    uint64_t __twr_v1727;
    uint64_t __twr_v1728;
    uint64_t __twr_v1729;
    uint64_t __twr_v1730;
    uint64_t __twr_v1731;
    uint64_t __twr_v1732;
    uint64_t __twr_v1733;
    uint64_t __twr_v1734;
    uint64_t __twr_v1735;
    uint64_t __twr_v1736;
    uint64_t __twr_v1737;
    uint64_t __twr_v1738;
    uint64_t __twr_v1739;
    uint64_t __twr_v1740;
    uint64_t __twr_v1741;
    uint64_t __twr_v1742;
    uint64_t __twr_v1743;
    uint64_t __twr_v1744;
    uint64_t __twr_v1745;
    uint64_t __twr_v1746;
    uint64_t __twr_v1747;
    uint64_t __twr_v1748;
    uint64_t __twr_v1749;
    uint64_t __twr_v1750;
    uint64_t __twr_v1751;
    uint64_t __twr_v1752;
    uint64_t __twr_v1753;
    __twr_v1670 = (uint64_t)(&TlInitializeHashTable);
    __twr_v1671 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t))__twr_v1670)(__twr_v1671);
    __twr_v1672 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t))__twr_v1670)(__twr_v1672);
    __twr_v1673 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1674 = (uint64_t)(&LexIfStack);
    ((void (*)(uint64_t))__twr_v1673)(__twr_v1674);
    __twr_v1675 = (uint64_t)(&LexCreateMacroTable);
    __twr_v1676 = 0ULL;
    __twr_v1677 = ((uint64_t (*)(uint64_t))__twr_v1675)(__twr_v1676);
    __twr_v1678 = (uint64_t)(&LexRootMacroScope);
    *(uint64_t*)(__twr_v1678) = __twr_v1677;
    __twr_v1679 = *(uint64_t*)(__twr_v1678);
    __twr_v1680 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v1680) = __twr_v1679;
    __twr_v1681 = (uint64_t)(&TlInitializeZone);
    __twr_v1682 = (uint64_t)(&LexMacroZone);
    __twr_v1683 = 258ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1681)(__twr_v1682, __twr_v1683);
    __twr_v1684 = (uint64_t)(&LexInsertDirective);
    __twr_v1685 = (uint64_t)(&"INCLUDE");
    __twr_v1686 = (uint64_t)(&LexParseInclude);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1685, __twr_v1686);
    __twr_v1687 = (uint64_t)(&"DEFINE");
    __twr_v1688 = (uint64_t)(&LexParseDefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1687, __twr_v1688);
    __twr_v1689 = (uint64_t)(&"MACRO");
    __twr_v1690 = (uint64_t)(&LexParseMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1689, __twr_v1690);
    __twr_v1691 = (uint64_t)(&"IF");
    __twr_v1692 = (uint64_t)(&LexParseIf);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1691, __twr_v1692);
    __twr_v1693 = (uint64_t)(&"ELSE");
    __twr_v1694 = (uint64_t)(&LexParseElse);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1693, __twr_v1694);
    __twr_v1695 = (uint64_t)(&"ELSEIF");
    __twr_v1696 = (uint64_t)(&LexParseElseif);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1695, __twr_v1696);
    __twr_v1697 = (uint64_t)(&"END");
    __twr_v1698 = (uint64_t)(&LexParseEnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1697, __twr_v1698);
    __twr_v1699 = (uint64_t)(&"UNDEFINE");
    __twr_v1700 = (uint64_t)(&LexParseUndefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1699, __twr_v1700);
    __twr_v1701 = (uint64_t)(&"ERROR");
    __twr_v1702 = (uint64_t)(&LexParseError);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1701, __twr_v1702);
    __twr_v1703 = (uint64_t)(&"PRINT");
    __twr_v1704 = (uint64_t)(&LexParsePrint);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1703, __twr_v1704);
    __twr_v1705 = (uint64_t)(&"ASM");
    __twr_v1706 = (uint64_t)(&LexParseAsm);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1705, __twr_v1706);
    __twr_v1707 = (uint64_t)(&"SECTION");
    __twr_v1708 = (uint64_t)(&LexParseSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1707, __twr_v1708);
    __twr_v1709 = (uint64_t)(&"ENTERSECTION");
    __twr_v1710 = (uint64_t)(&LexParseEnterSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1709, __twr_v1710);
    __twr_v1711 = (uint64_t)(&"LEAVESECTION");
    __twr_v1712 = (uint64_t)(&LexParseLeaveSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1684)(__twr_v1711, __twr_v1712);
    __twr_v1713 = (uint64_t)(&LexInsertOperator);
    __twr_v1714 = (uint64_t)(&"==");
    __twr_v1715 = (uint64_t)(&LexOperatorEquals);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1714, __twr_v1715);
    __twr_v1716 = (uint64_t)(&"<=");
    __twr_v1717 = (uint64_t)(&LexOperatorLteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1716, __twr_v1717);
    __twr_v1718 = (uint64_t)(&">=");
    __twr_v1719 = (uint64_t)(&LexOperatorGteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1718, __twr_v1719);
    __twr_v1720 = (uint64_t)(&"!=");
    __twr_v1721 = (uint64_t)(&LexOperatorNeq);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1720, __twr_v1721);
    __twr_v1722 = (uint64_t)(&"+");
    __twr_v1723 = (uint64_t)(&LexOperatorAdd);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1722, __twr_v1723);
    __twr_v1724 = (uint64_t)(&"-");
    __twr_v1725 = (uint64_t)(&LexOperatorSub);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1724, __twr_v1725);
    __twr_v1726 = (uint64_t)(&"*");
    __twr_v1727 = (uint64_t)(&LexOperatorMul);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1726, __twr_v1727);
    __twr_v1728 = (uint64_t)(&"/");
    __twr_v1729 = (uint64_t)(&LexOperatorDiv);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1728, __twr_v1729);
    __twr_v1730 = (uint64_t)(&"<<");
    __twr_v1731 = (uint64_t)(&LexOperatorLsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1730, __twr_v1731);
    __twr_v1732 = (uint64_t)(&">>");
    __twr_v1733 = (uint64_t)(&LexOperatorRsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1732, __twr_v1733);
    __twr_v1734 = (uint64_t)(&"STRCAT");
    __twr_v1735 = (uint64_t)(&LexOperatorStrcat);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1734, __twr_v1735);
    __twr_v1736 = (uint64_t)(&"STRCMP");
    __twr_v1737 = (uint64_t)(&LexOperatorStrcmp);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1736, __twr_v1737);
    __twr_v1738 = (uint64_t)(&"NOT");
    __twr_v1739 = (uint64_t)(&LexOperatorNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1738, __twr_v1739);
    __twr_v1740 = (uint64_t)(&"OR");
    __twr_v1741 = (uint64_t)(&LexOperatorOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1740, __twr_v1741);
    __twr_v1742 = (uint64_t)(&"AND");
    __twr_v1743 = (uint64_t)(&LexOperatorAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1742, __twr_v1743);
    __twr_v1744 = (uint64_t)(&"DEFINED");
    __twr_v1745 = (uint64_t)(&LexOperatorDefined);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1744, __twr_v1745);
    __twr_v1746 = (uint64_t)(&"~");
    __twr_v1747 = (uint64_t)(&LexOperatorBitNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1746, __twr_v1747);
    __twr_v1748 = (uint64_t)(&"|");
    __twr_v1749 = (uint64_t)(&LexOperatorBitOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1748, __twr_v1749);
    __twr_v1750 = (uint64_t)(&"$");
    __twr_v1751 = (uint64_t)(&LexOperatorBitXor);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1750, __twr_v1751);
    __twr_v1752 = (uint64_t)(&"&");
    __twr_v1753 = (uint64_t)(&LexOperatorBitAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1713)(__twr_v1752, __twr_v1753);
    __twr_l352:;
    _jkl_epilogue:;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern void TlInitializeZone(uint64_t _mng_zone87, uint64_t _mng_blocksize88);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone89);
extern void TlFreeToZone(uint64_t _mng_zone90, uint64_t _mng_block91);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant92);
extern void TlPunchValue(uint64_t _mng_ptr93, uint64_t _mng_value94, uint64_t _mng_bytes95);
extern void JklCompileProgram(uint64_t _mng_argc96, uint64_t _mng_argv97);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg98);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename99, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock100, uint64_t _mng_filepath101);
extern uint64_t LexLookupSection(uint64_t _mng_name102);
extern void LexPushSection(uint64_t _mng_section103);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope104);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg105);
extern void LexExpandMacro(uint64_t _mng_macro106, uint64_t _mng_token107);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream108, uint64_t _mng_macro109);
extern void LexUninitializeStream(uint64_t _mng_stream110);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream111);
extern void LexPushStream(uint64_t _mng_stream112);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream113, uint64_t _mng_fileblock114, uint64_t _mng_handle115);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock116, uint64_t _mng_handle117);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope118);
extern uint64_t LexResetScope(uint64_t _mng_scope119);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope120);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest121, uint64_t _mng_src122);
extern void LexGetToken(uint64_t _mng_token123);
extern void LexPutbackToken(uint64_t _mng_token124);
extern uint64_t LexMatchToken(uint64_t _mng_token125, uint64_t _mng_type126, uint64_t _mng_subtype127);
extern void LexStreamError(uint64_t _mng_str128, uint64_t _mng_err1129, uint64_t _mng_err2130, uint64_t _mng_err3131);
extern void LexTokenError(uint64_t _mng_token132, uint64_t _mng_str133, uint64_t _mng_err1134, uint64_t _mng_err2135, uint64_t _mng_err3136);
extern uint64_t LexCrunchNumber(uint64_t _mng_token137, uint64_t _mng_buffer138);
uint64_t LexRootMacroScope = 0ULL;
uint64_t LexCurrentMacroScope = 0ULL;
uint32_t LexMacroDepth = 0ULL;
uint64_t LexAsmBlockListHead = 0ULL;
uint64_t LexAsmBlockListTail = 0ULL;
uint64_t LexDirectiveHashTable[196];
uint64_t LexOperatorHashTable[196];
uint64_t LexIfStack[11];
uint64_t LexMacroZone[2];
uint64_t LexDirectiveToken[4];
uint64_t LexDirectiveBumpArray[112];
uint64_t LexDirectiveBumpIndex = 0ULL;
void LexInsertDirective(uint64_t _mng_name139, uint64_t _mng_parsefunc140) {
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t _mng_directive147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    __twr_v141 = (uint64_t)(&LexDirectiveBumpArray);
    __twr_v142 = (uint64_t)(&LexDirectiveBumpIndex);
    __twr_v143 = *(uint64_t*)(__twr_v142);
    __twr_v144 = 56ULL;
    __twr_v145 = __twr_v143 * __twr_v144;
    __twr_v146 = __twr_v141 + __twr_v145;
    _mng_directive147 = __twr_v146;
    __twr_v148 = 1ULL;
    __twr_v149 = __twr_v143 + __twr_v148;
    *(uint64_t*)(__twr_v142) = __twr_v149;
    __twr_v150 = 48ULL;
    __twr_v151 = _mng_directive147 + __twr_v150;
    *(uint64_t*)(__twr_v151) = _mng_parsefunc140;
    __twr_v152 = (uint64_t)(&TlInsertHashTable);
    __twr_v153 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v152)(__twr_v153, _mng_directive147, _mng_name139);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexOperatorBumpArray[224];
uint64_t LexOperatorBumpIndex = 0ULL;
void LexInsertOperator(uint64_t _mng_name154, uint64_t _mng_parsefunc155) {
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t _mng_operator162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    __twr_v156 = (uint64_t)(&LexOperatorBumpArray);
    __twr_v157 = (uint64_t)(&LexOperatorBumpIndex);
    __twr_v158 = *(uint64_t*)(__twr_v157);
    __twr_v159 = 56ULL;
    __twr_v160 = __twr_v158 * __twr_v159;
    __twr_v161 = __twr_v156 + __twr_v160;
    _mng_operator162 = __twr_v161;
    __twr_v163 = 1ULL;
    __twr_v164 = __twr_v158 + __twr_v163;
    *(uint64_t*)(__twr_v157) = __twr_v164;
    __twr_v165 = 48ULL;
    __twr_v166 = _mng_operator162 + __twr_v165;
    *(uint64_t*)(__twr_v166) = _mng_parsefunc155;
    __twr_v167 = (uint64_t)(&TlInsertHashTable);
    __twr_v168 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v167)(__twr_v168, _mng_operator162, _mng_name154);
    __twr_l2:;
    _jkl_epilogue:;
}
void LexMacroDelete(uint64_t _mng_entry169) {
    uint64_t _mng_macro170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    _mng_macro170 = _mng_entry169;
    __twr_v171 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v172 = 80ULL;
    __twr_v173 = _mng_macro170 + __twr_v172;
    ((void (*)(uint64_t))__twr_v171)(__twr_v173);
    __twr_v174 = (uint64_t)(&TlFreeToZone);
    __twr_v175 = (uint64_t)(&LexMacroZone);
    ((void (*)(uint64_t, uint64_t))__twr_v174)(__twr_v175, _mng_entry169);
    __twr_l3:;
    _jkl_epilogue:;
}
uint64_t LexCreateMacroTable(uint64_t _mng_outerscope176) {
    uint64_t _jkl_retv;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    __twr_v177 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v178 = (uint64_t)(&LexMacroDelete);
    __twr_v179 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v177)(_mng_outerscope176, __twr_v178);
    _jkl_retv = __twr_v179;
    goto _jkl_epilogue;
    __twr_l4:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexNextNonWhitespaceCharacter(uint64_t _mng_token180) {
    uint64_t _jkl_retv;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t _mng_stream183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t _mng_byte200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    __twr_v181 = (uint64_t)(&LexCurrentStream);
    __twr_v182 = *(uint64_t*)(__twr_v181);
    _mng_stream183 = __twr_v182;
    if (!(_mng_stream183)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v184 = 8ULL;
    __twr_v185 = _mng_stream183 + __twr_v184;
    __twr_v186 = *(uint64_t*)(__twr_v185);
    __twr_v187 = _mng_token180 + __twr_v184;
    *(uint64_t*)(__twr_v187) = __twr_v186;
    __twr_v188 = 44ULL;
    __twr_v189 = _mng_stream183 + __twr_v188;
    __twr_v190 = *(uint32_t*)(__twr_v189);
    __twr_v191 = 16ULL;
    __twr_v192 = _mng_token180 + __twr_v191;
    *(uint32_t*)(__twr_v192) = __twr_v190;
    __twr_v193 = 48ULL;
    __twr_v194 = _mng_stream183 + __twr_v193;
    __twr_v195 = *(uint32_t*)(__twr_v194);
    __twr_v196 = 20ULL;
    __twr_v197 = _mng_token180 + __twr_v196;
    *(uint32_t*)(__twr_v197) = __twr_v195;
    __twr_l6:;
    __twr_v198 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v199 = ((uint64_t (*)())__twr_v198)();
    _mng_byte200 = __twr_v199;
    __twr_v201 = (uint64_t)(&LexCharTreatment);
    __twr_v202 = __twr_v201 + _mng_byte200;
    __twr_v203 = *(uint8_t*)(__twr_v202);
    __twr_v204 = 3ULL;
    if (__twr_v203 != __twr_v204) { goto __twr_l9; } else { goto __twr_l8; }
    __twr_l8:;
    __twr_v205 = (uint64_t)(&LexCurrentStream);
    __twr_v206 = *(uint64_t*)(__twr_v205);
    _mng_stream183 = __twr_v206;
    if (!(_mng_stream183)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v207 = 8ULL;
    __twr_v208 = _mng_stream183 + __twr_v207;
    __twr_v209 = *(uint64_t*)(__twr_v208);
    __twr_v210 = _mng_token180 + __twr_v207;
    *(uint64_t*)(__twr_v210) = __twr_v209;
    __twr_v211 = 44ULL;
    __twr_v212 = _mng_stream183 + __twr_v211;
    __twr_v213 = *(uint32_t*)(__twr_v212);
    __twr_v214 = 16ULL;
    __twr_v215 = _mng_token180 + __twr_v214;
    *(uint32_t*)(__twr_v215) = __twr_v213;
    __twr_v216 = 48ULL;
    __twr_v217 = _mng_stream183 + __twr_v216;
    __twr_v218 = *(uint32_t*)(__twr_v217);
    __twr_v219 = 20ULL;
    __twr_v220 = _mng_token180 + __twr_v219;
    *(uint32_t*)(__twr_v220) = __twr_v218;
    __twr_l11:;
    __twr_v221 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v222 = ((uint64_t (*)())__twr_v221)();
    _mng_byte200 = __twr_v222;
    __twr_l10:;
    __twr_v223 = (uint64_t)(&LexCharTreatment);
    __twr_v224 = __twr_v223 + _mng_byte200;
    __twr_v225 = *(uint8_t*)(__twr_v224);
    __twr_v226 = 3ULL;
    if (__twr_v225 == __twr_v226) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    if (_mng_byte200) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v227 = (uint64_t)(&LexStreamError);
    __twr_v228 = (uint64_t)(&"Unexpected EOF while parsing directive");
    __twr_v229 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v227)(__twr_v228, __twr_v229, __twr_v229, __twr_v229);
    __twr_l13:;
    _jkl_retv = _mng_byte200;
    goto _jkl_epilogue;
    __twr_l5:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectDirectiveToken(uint64_t _mng_token230, uint64_t _mng_buffer231) {
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t _mng_byte234;
    uint64_t _mng_len235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    __twr_v232 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v233 = ((uint64_t (*)(uint64_t))__twr_v232)(_mng_token230);
    _mng_byte234 = __twr_v233;
    _mng_len235 = 0ULL;
    __twr_v236 = (uint64_t)(&LexCharTreatment);
    __twr_v237 = __twr_v236 + _mng_byte234;
    __twr_v238 = *(uint8_t*)(__twr_v237);
    __twr_v239 = 3ULL;
    if (__twr_v238 == __twr_v239) { goto __twr_l17; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v240 = (uint64_t)(&LexCharTreatment);
    __twr_v241 = __twr_v240 + _mng_byte234;
    __twr_v242 = *(uint8_t*)(__twr_v241);
    if (!(__twr_v242)) { goto __twr_l19; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v243 = (uint64_t)(&LexCharTreatment);
    __twr_v244 = 1ULL;
    __twr_v245 = __twr_v243 + _mng_byte234;
    __twr_v246 = *(uint8_t*)(__twr_v245);
    if (__twr_v246 == __twr_v244) { goto __twr_l19; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v247 = (uint64_t)(&LexCharTreatment);
    __twr_v248 = __twr_v247 + _mng_byte234;
    __twr_v249 = *(uint8_t*)(__twr_v248);
    __twr_v250 = 2ULL;
    if (__twr_v249 == __twr_v250) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v251 = (uint64_t)(&LexTokenError);
    __twr_v252 = (uint64_t)(&"Illegal character in token");
    __twr_v253 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v251)(_mng_token230, __twr_v252, __twr_v253, __twr_v253, __twr_v253);
    __twr_l19:;
    __twr_v254 = 63ULL;
    if (_mng_len235 != __twr_v254) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v255 = (uint64_t)(&LexTokenError);
    __twr_v256 = (uint64_t)(&"Token length too great");
    __twr_v257 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v255)(_mng_token230, __twr_v256, __twr_v257, __twr_v257, __twr_v257);
    __twr_l23:;
    *(uint8_t*)(_mng_buffer231) = _mng_byte234;
    __twr_v258 = 1ULL;
    __twr_v259 = _mng_buffer231 + __twr_v258;
    _mng_buffer231 = __twr_v259;
    __twr_v260 = _mng_len235 + __twr_v258;
    _mng_len235 = __twr_v260;
    __twr_v261 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v262 = ((uint64_t (*)())__twr_v261)();
    _mng_byte234 = __twr_v262;
    __twr_l18:;
    __twr_v263 = (uint64_t)(&LexCharTreatment);
    __twr_v264 = __twr_v263 + _mng_byte234;
    __twr_v265 = *(uint8_t*)(__twr_v264);
    __twr_v266 = 3ULL;
    if (__twr_v265 != __twr_v266) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v267 = 0ULL;
    *(uint8_t*)(_mng_buffer231) = __twr_v267;
    __twr_l15:;
    _jkl_epilogue:;
}
void LexGetPreprocessorString(uint64_t _mng_token268, uint64_t _mng_buffer269) {
    uint64_t _mng_backslash270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t _mng_byte273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    _mng_backslash270 = 0ULL;
    __twr_l26:;
    __twr_v271 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v272 = ((uint64_t (*)())__twr_v271)();
    _mng_byte273 = __twr_v272;
    if (_mng_byte273) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v274 = (uint64_t)(&LexTokenError);
    __twr_v275 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v276 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v274)(_mng_token268, __twr_v275, __twr_v276, __twr_v276, __twr_v276);
    __twr_l28:;
    __twr_v277 = 34ULL;
    if (_mng_byte273 != __twr_v277) { goto __twr_l30; } else { goto __twr_l32; }
    __twr_l32:;
    if (_mng_backslash270) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    __twr_v278 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v278)(_mng_buffer269, _mng_byte273);
    if (!(_mng_backslash270)) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    _mng_backslash270 = 0ULL;
    goto __twr_l26;
    __twr_l33:;
    __twr_v279 = 92ULL;
    __twr_v280 = (_mng_byte273 == __twr_v279);
    _mng_backslash270 = __twr_v280;
    goto __twr_l26;
    __twr_l27:;
    __twr_l25:;
    _jkl_epilogue:;
}
void LexCollectString(uint64_t _mng_token281, uint64_t _mng_buffer282) {
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_byte285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    __twr_v283 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v284 = ((uint64_t (*)(uint64_t))__twr_v283)(_mng_token281);
    _mng_byte285 = __twr_v284;
    __twr_v286 = 34ULL;
    if (_mng_byte285 == __twr_v286) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l37:;
    __twr_v287 = (uint64_t)(&LexTokenError);
    __twr_v288 = (uint64_t)(&"Expected a string");
    __twr_v289 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v287)(_mng_token281, __twr_v288, __twr_v289, __twr_v289, __twr_v289);
    __twr_l36:;
    __twr_v290 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v290)(_mng_token281, _mng_buffer282);
    __twr_v291 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v292 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v291)(_mng_buffer282, __twr_v292);
    __twr_l35:;
    _jkl_epilogue:;
}
void LexGetComplexString(uint64_t _mng_token293, uint64_t _mng_buffer294) {
    uint64_t _mng_bracketdepth295;
    uint64_t _mng_comment296;
    uint64_t _mng_backslash297;
    uint64_t _mng_instring298;
    uint64_t _mng_inliteral299;
    uint64_t _mng_sawforwardslash300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t _mng_byte303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    _mng_bracketdepth295 = 1ULL;
    _mng_comment296 = 0ULL;
    _mng_backslash297 = 0ULL;
    _mng_instring298 = 0ULL;
    _mng_inliteral299 = 0ULL;
    _mng_sawforwardslash300 = 0ULL;
    __twr_l39:;
    __twr_v301 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v302 = ((uint64_t (*)())__twr_v301)();
    _mng_byte303 = __twr_v302;
    if (_mng_byte303) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v304 = (uint64_t)(&LexTokenError);
    __twr_v305 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v306 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v304)(_mng_token293, __twr_v305, __twr_v306, __twr_v306, __twr_v306);
    __twr_l41:;
    if (!(_mng_comment296)) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v307 = 10ULL;
    if (_mng_byte303 != __twr_v307) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_comment296 = 0ULL;
    goto __twr_l46;
    __twr_l48:;
    _mng_byte303 = 0ULL;
    goto __twr_l39;
    __twr_l46:;
    goto __twr_l43;
    __twr_l45:;
    __twr_v308 = 47ULL;
    if (_mng_byte303 == __twr_v308) { goto __twr_l43; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_sawforwardslash300 = 0ULL;
    __twr_l43:;
    if (!(_mng_backslash297)) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_backslash297 = 0ULL;
    goto __twr_l50;
    __twr_l52:;
    __twr_v309 = 92ULL;
    if (_mng_byte303 != __twr_v309) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_backslash297 = 1ULL;
    goto __twr_l50;
    __twr_l54:;
    if (!(_mng_instring298)) { goto __twr_l56; } else { goto __twr_l55; }
    __twr_l55:;
    __twr_v310 = 34ULL;
    __twr_v311 = (_mng_byte303 == __twr_v310);
    __twr_v312 = !__twr_v311;
    _mng_instring298 = __twr_v312;
    goto __twr_l50;
    __twr_l56:;
    if (!(_mng_inliteral299)) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v313 = 39ULL;
    __twr_v314 = (_mng_byte303 == __twr_v313);
    __twr_v315 = !__twr_v314;
    _mng_inliteral299 = __twr_v315;
    goto __twr_l50;
    __twr_l58:;
    __twr_v316 = 47ULL;
    if (_mng_byte303 != __twr_v316) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    if (!(_mng_sawforwardslash300)) { goto __twr_l63; } else { goto __twr_l62; }
    __twr_l62:;
    _mng_sawforwardslash300 = 0ULL;
    _mng_comment296 = 1ULL;
    goto __twr_l61;
    __twr_l63:;
    _mng_sawforwardslash300 = 1ULL;
    __twr_l61:;
    goto __twr_l50;
    __twr_l60:;
    __twr_v317 = 34ULL;
    if (_mng_byte303 != __twr_v317) { goto __twr_l65; } else { goto __twr_l64; }
    __twr_l64:;
    _mng_instring298 = 1ULL;
    goto __twr_l50;
    __twr_l65:;
    __twr_v318 = 39ULL;
    if (_mng_byte303 != __twr_v318) { goto __twr_l67; } else { goto __twr_l66; }
    __twr_l66:;
    _mng_inliteral299 = 1ULL;
    goto __twr_l50;
    __twr_l67:;
    __twr_v319 = 91ULL;
    if (_mng_byte303 != __twr_v319) { goto __twr_l69; } else { goto __twr_l68; }
    __twr_l68:;
    __twr_v320 = 1ULL;
    __twr_v321 = _mng_bracketdepth295 + __twr_v320;
    _mng_bracketdepth295 = __twr_v321;
    goto __twr_l50;
    __twr_l69:;
    __twr_v322 = 93ULL;
    if (_mng_byte303 != __twr_v322) { goto __twr_l50; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v323 = 1ULL;
    __twr_v324 = _mng_bracketdepth295 - __twr_v323;
    _mng_bracketdepth295 = __twr_v324;
    if (_mng_bracketdepth295) { goto __twr_l71; } else { goto __twr_l72; }
    __twr_l72:;
    goto __twr_l40;
    __twr_l71:;
    __twr_l50:;
    __twr_v325 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v325)(_mng_buffer294, _mng_byte303);
    _mng_byte303 = 0ULL;
    goto __twr_l39;
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentContents(uint64_t _mng_token326, uint64_t _mng_buffer327) {
    uint64_t _jkl_retv;
    uint64_t _mng_bracketdepth328;
    uint64_t _mng_comment329;
    uint64_t _mng_backslash330;
    uint64_t _mng_instring331;
    uint64_t _mng_inliteral332;
    uint64_t _mng_sawforwardslash333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t _mng_byte336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    _mng_bracketdepth328 = 1ULL;
    _mng_comment329 = 0ULL;
    _mng_backslash330 = 0ULL;
    _mng_instring331 = 0ULL;
    _mng_inliteral332 = 0ULL;
    _mng_sawforwardslash333 = 0ULL;
    __twr_l74:;
    __twr_v334 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v335 = ((uint64_t (*)(uint64_t))__twr_v334)(_mng_token326);
    _mng_byte336 = __twr_v335;
    __twr_v337 = 41ULL;
    if (_mng_byte336 != __twr_v337) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v338 = 2ULL;
    _jkl_retv = __twr_v338;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v339 = 44ULL;
    if (_mng_byte336 != __twr_v339) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    goto __twr_l74;
    __twr_l78:;
    goto __twr_l75;
    goto __twr_l74;
    __twr_l75:;
    __twr_l80:;
    if (!(_mng_comment329)) { goto __twr_l84; } else { goto __twr_l85; }
    __twr_l85:;
    __twr_v340 = 10ULL;
    if (_mng_byte336 != __twr_v340) { goto __twr_l84; } else { goto __twr_l83; }
    __twr_l83:;
    _mng_comment329 = 0ULL;
    goto __twr_l82;
    __twr_l84:;
    __twr_v341 = 47ULL;
    if (_mng_byte336 == __twr_v341) { goto __twr_l82; } else { goto __twr_l86; }
    __twr_l86:;
    _mng_sawforwardslash333 = 0ULL;
    __twr_l82:;
    if (!(_mng_comment329)) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    goto __twr_l87;
    __twr_l89:;
    if (!(_mng_backslash330)) { goto __twr_l91; } else { goto __twr_l90; }
    __twr_l90:;
    _mng_backslash330 = 0ULL;
    goto __twr_l87;
    __twr_l91:;
    __twr_v342 = 92ULL;
    if (_mng_byte336 != __twr_v342) { goto __twr_l93; } else { goto __twr_l92; }
    __twr_l92:;
    _mng_backslash330 = 1ULL;
    goto __twr_l87;
    __twr_l93:;
    if (!(_mng_instring331)) { goto __twr_l95; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v343 = 34ULL;
    __twr_v344 = (_mng_byte336 == __twr_v343);
    __twr_v345 = !__twr_v344;
    _mng_instring331 = __twr_v345;
    goto __twr_l87;
    __twr_l95:;
    if (!(_mng_inliteral332)) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v346 = 39ULL;
    __twr_v347 = (_mng_byte336 == __twr_v346);
    __twr_v348 = !__twr_v347;
    _mng_inliteral332 = __twr_v348;
    goto __twr_l87;
    __twr_l97:;
    __twr_v349 = 47ULL;
    if (_mng_byte336 != __twr_v349) { goto __twr_l99; } else { goto __twr_l98; }
    __twr_l98:;
    if (!(_mng_sawforwardslash333)) { goto __twr_l102; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v350 = 1ULL;
    __twr_v351 = *(uint64_t*)(_mng_buffer327);
    __twr_v352 = __twr_v351 - __twr_v350;
    *(uint64_t*)(_mng_buffer327) = __twr_v352;
    _mng_sawforwardslash333 = 0ULL;
    _mng_comment329 = 1ULL;
    goto __twr_l100;
    __twr_l102:;
    _mng_sawforwardslash333 = 1ULL;
    __twr_l100:;
    goto __twr_l87;
    __twr_l99:;
    __twr_v353 = 34ULL;
    if (_mng_byte336 != __twr_v353) { goto __twr_l104; } else { goto __twr_l103; }
    __twr_l103:;
    _mng_instring331 = 1ULL;
    goto __twr_l87;
    __twr_l104:;
    __twr_v354 = 39ULL;
    if (_mng_byte336 != __twr_v354) { goto __twr_l106; } else { goto __twr_l105; }
    __twr_l105:;
    _mng_inliteral332 = 1ULL;
    goto __twr_l87;
    __twr_l106:;
    __twr_v355 = 40ULL;
    if (_mng_byte336 != __twr_v355) { goto __twr_l108; } else { goto __twr_l107; }
    __twr_l107:;
    __twr_v356 = 1ULL;
    __twr_v357 = _mng_bracketdepth328 + __twr_v356;
    _mng_bracketdepth328 = __twr_v357;
    goto __twr_l87;
    __twr_l108:;
    __twr_v358 = 41ULL;
    if (_mng_byte336 != __twr_v358) { goto __twr_l110; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v359 = 1ULL;
    __twr_v360 = _mng_bracketdepth328 - __twr_v359;
    _mng_bracketdepth328 = __twr_v360;
    if (_mng_bracketdepth328) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v361 = 3ULL;
    _jkl_retv = __twr_v361;
    goto _jkl_epilogue;
    __twr_l111:;
    goto __twr_l87;
    __twr_l110:;
    __twr_v362 = 1ULL;
    if (_mng_bracketdepth328 != __twr_v362) { goto __twr_l114; } else { goto __twr_l115; }
    __twr_l115:;
    __twr_v363 = 44ULL;
    if (_mng_byte336 != __twr_v363) { goto __twr_l114; } else { goto __twr_l113; }
    __twr_l113:;
    goto __twr_l81;
    goto __twr_l87;
    __twr_l114:;
    __twr_v364 = 10ULL;
    if (_mng_byte336 != __twr_v364) { goto __twr_l87; } else { goto __twr_l116; }
    __twr_l116:;
    _mng_byte336 = 32ULL;
    __twr_l87:;
    if (_mng_comment329) { goto __twr_l117; } else { goto __twr_l119; }
    __twr_l119:;
    if (_mng_backslash330) { goto __twr_l117; } else { goto __twr_l118; }
    __twr_l118:;
    __twr_v365 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v365)(_mng_buffer327, _mng_byte336);
    __twr_l117:;
    __twr_v366 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v367 = ((uint64_t (*)())__twr_v366)();
    _mng_byte336 = __twr_v367;
    if (_mng_byte336) { goto __twr_l120; } else { goto __twr_l121; }
    __twr_l121:;
    __twr_v368 = (uint64_t)(&LexTokenError);
    __twr_v369 = (uint64_t)(&"Unexpected EOF while parsing string");
    __twr_v370 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v368)(_mng_token326, __twr_v369, __twr_v370, __twr_v370, __twr_v370);
    __twr_l120:;
    goto __twr_l80;
    __twr_l81:;
    __twr_v371 = 1ULL;
    _jkl_retv = __twr_v371;
    goto _jkl_epilogue;
    __twr_l73:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectValue(uint64_t _mng_token372, uint64_t _mng_buffer373, uint64_t _mng_ignore374) {
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t _mng_byte377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t _mng_optoken389[4];
    uint64_t __twr_v390;
    uint64_t _mng_opbuffer391[8];
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t _mng_operator395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t _mng_simpletokbuf405[11];
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t _mng_macro457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    __twr_v375 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v376 = ((uint64_t (*)(uint64_t))__twr_v375)(_mng_token372);
    _mng_byte377 = __twr_v376;
    __twr_v378 = 34ULL;
    if (_mng_byte377 != __twr_v378) { goto __twr_l125; } else { goto __twr_l124; }
    __twr_l124:;
    __twr_v379 = (uint64_t)(&LexGetPreprocessorString);
    ((void (*)(uint64_t, uint64_t))__twr_v379)(_mng_token372, _mng_buffer373);
    __twr_v380 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v381 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v380)(_mng_buffer373, __twr_v381);
    goto _jkl_epilogue;
    goto __twr_l123;
    __twr_l125:;
    __twr_v382 = 91ULL;
    if (_mng_byte377 != __twr_v382) { goto __twr_l127; } else { goto __twr_l126; }
    __twr_l126:;
    __twr_v383 = (uint64_t)(&LexGetComplexString);
    ((void (*)(uint64_t, uint64_t))__twr_v383)(_mng_token372, _mng_buffer373);
    __twr_v384 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v385 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v384)(_mng_buffer373, __twr_v385);
    goto _jkl_epilogue;
    goto __twr_l123;
    __twr_l127:;
    __twr_v386 = 40ULL;
    if (_mng_byte377 != __twr_v386) { goto __twr_l123; } else { goto __twr_l128; }
    __twr_l128:;
    __twr_v387 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v388 = (uint64_t)(&_mng_optoken389);
    __twr_v390 = (uint64_t)(&_mng_opbuffer391);
    ((void (*)(uint64_t, uint64_t))__twr_v387)(__twr_v388, __twr_v390);
    __twr_v392 = (uint64_t)(&TlLookupHashTable);
    __twr_v393 = (uint64_t)(&LexOperatorHashTable);
    __twr_v394 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v392)(__twr_v393, __twr_v390);
    _mng_operator395 = __twr_v394;
    if (_mng_operator395) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v396 = (uint64_t)(&LexTokenError);
    __twr_v397 = (uint64_t)(&_mng_optoken389);
    __twr_v398 = (uint64_t)(&"Unknown operator");
    __twr_v399 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v396)(__twr_v397, __twr_v398, __twr_v399, __twr_v399, __twr_v399);
    __twr_l129:;
    __twr_v400 = 48ULL;
    __twr_v401 = _mng_operator395 + __twr_v400;
    __twr_v402 = *(uint64_t*)(__twr_v401);
    ((void (*)(uint64_t, uint64_t))__twr_v402)(_mng_buffer373, _mng_ignore374);
    goto _jkl_epilogue;
    __twr_l123:;
    __twr_v403 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v404 = (uint64_t)(&_mng_simpletokbuf405);
    ((void (*)(uint64_t))__twr_v403)(__twr_v404);
    __twr_v406 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v406)(__twr_v404, _mng_byte377);
    __twr_v407 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v408 = ((uint64_t (*)())__twr_v407)();
    _mng_byte377 = __twr_v408;
    __twr_v409 = (uint64_t)(&LexCharTreatment);
    __twr_v410 = __twr_v409 + _mng_byte377;
    __twr_v411 = *(uint8_t*)(__twr_v410);
    __twr_v412 = 3ULL;
    if (__twr_v411 == __twr_v412) { goto __twr_l132; } else { goto __twr_l131; }
    __twr_l131:;
    if (_mng_byte377) { goto __twr_l134; } else { goto __twr_l135; }
    __twr_l135:;
    __twr_v413 = (uint64_t)(&LexTokenError);
    __twr_v414 = (uint64_t)(&"Unexpected EOF");
    __twr_v415 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v413)(_mng_token372, __twr_v414, __twr_v415, __twr_v415, __twr_v415);
    __twr_l134:;
    __twr_v416 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v417 = (uint64_t)(&_mng_simpletokbuf405);
    ((void (*)(uint64_t, uint64_t))__twr_v416)(__twr_v417, _mng_byte377);
    __twr_v418 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v419 = ((uint64_t (*)())__twr_v418)();
    _mng_byte377 = __twr_v419;
    __twr_l133:;
    __twr_v420 = (uint64_t)(&LexCharTreatment);
    __twr_v421 = __twr_v420 + _mng_byte377;
    __twr_v422 = *(uint8_t*)(__twr_v421);
    __twr_v423 = 3ULL;
    if (__twr_v422 != __twr_v423) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v424 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v425 = (uint64_t)(&_mng_simpletokbuf405);
    __twr_v426 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v424)(__twr_v425, __twr_v426);
    __twr_v427 = 16ULL;
    __twr_v428 = __twr_v425 + __twr_v427;
    __twr_v429 = *(uint64_t*)(__twr_v428);
    __twr_v430 = *(uint8_t*)(__twr_v429);
    __twr_v431 = 48ULL;
    if (__twr_v430 < __twr_v431) { goto __twr_l136; } else { goto __twr_l138; }
    __twr_l138:;
    __twr_v432 = (uint64_t)(&_mng_simpletokbuf405);
    __twr_v433 = 16ULL;
    __twr_v434 = __twr_v432 + __twr_v433;
    __twr_v435 = *(uint64_t*)(__twr_v434);
    __twr_v436 = *(uint8_t*)(__twr_v435);
    __twr_v437 = 57ULL;
    if (__twr_v436 > __twr_v437) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    __twr_v438 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v439 = (uint64_t)(&_mng_simpletokbuf405);
    __twr_v440 = 16ULL;
    __twr_v441 = __twr_v439 + __twr_v440;
    __twr_v442 = *(uint64_t*)(__twr_v441);
    __twr_v443 = *(uint64_t*)(__twr_v439);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v438)(_mng_buffer373, __twr_v442, __twr_v443);
    __twr_v444 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v444)(__twr_v439);
    goto _jkl_epilogue;
    __twr_l136:;
    if (!(_mng_ignore374)) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v445 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v446 = (uint64_t)(&_mng_simpletokbuf405);
    ((void (*)(uint64_t))__twr_v445)(__twr_v446);
    __twr_v447 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v448 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v447)(_mng_buffer373, __twr_v448);
    goto _jkl_epilogue;
    __twr_l139:;
    __twr_v449 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v450 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v451 = *(uint64_t*)(__twr_v450);
    __twr_v452 = (uint64_t)(&_mng_simpletokbuf405);
    __twr_v453 = 16ULL;
    __twr_v454 = __twr_v452 + __twr_v453;
    __twr_v455 = *(uint64_t*)(__twr_v454);
    __twr_v456 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v449)(__twr_v451, __twr_v455);
    _mng_macro457 = __twr_v456;
    __twr_v458 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v458)(__twr_v452);
    if (_mng_macro457) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v459 = (uint64_t)(&LexTokenError);
    __twr_v460 = (uint64_t)(&"Not a defined macro name");
    __twr_v461 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v459)(_mng_token372, __twr_v460, __twr_v461, __twr_v461, __twr_v461);
    __twr_l141:;
    __twr_v462 = 256ULL;
    __twr_v463 = _mng_macro457 + __twr_v462;
    __twr_v464 = *(uint8_t*)(__twr_v463);
    if (!(__twr_v464)) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v465 = (uint64_t)(&LexTokenError);
    __twr_v466 = (uint64_t)(&"Function macros not permitted here");
    __twr_v467 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v465)(_mng_token372, __twr_v466, __twr_v467, __twr_v467, __twr_v467);
    __twr_l143:;
    __twr_v468 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v469 = 80ULL;
    __twr_v470 = _mng_macro457 + __twr_v469;
    __twr_v471 = 96ULL;
    __twr_v472 = _mng_macro457 + __twr_v471;
    __twr_v473 = *(uint64_t*)(__twr_v472);
    __twr_v474 = *(uint64_t*)(__twr_v470);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v468)(_mng_buffer373, __twr_v473, __twr_v474);
    __twr_l122:;
    _jkl_epilogue:;
}
uint64_t LexCollectValueNumeric(uint64_t _mng_token475, uint64_t _mng_ignore476) {
    uint64_t _jkl_retv;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t _mng_buffer479[11];
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t _mng_num505;
    uint64_t __twr_v506;
    __twr_v477 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v478 = (uint64_t)(&_mng_buffer479);
    ((void (*)(uint64_t))__twr_v477)(__twr_v478);
    __twr_v480 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v480)(_mng_token475, __twr_v478, _mng_ignore476);
    if (!(_mng_ignore476)) { goto __twr_l146; } else { goto __twr_l147; }
    __twr_l147:;
    __twr_v481 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v482 = (uint64_t)(&_mng_buffer479);
    ((void (*)(uint64_t))__twr_v481)(__twr_v482);
    __twr_v483 = 0ULL;
    _jkl_retv = __twr_v483;
    goto _jkl_epilogue;
    __twr_l146:;
    __twr_v484 = (uint64_t)(&_mng_buffer479);
    __twr_v485 = 16ULL;
    __twr_v486 = __twr_v484 + __twr_v485;
    __twr_v487 = *(uint64_t*)(__twr_v486);
    __twr_v488 = *(uint8_t*)(__twr_v487);
    __twr_v489 = 48ULL;
    if (__twr_v488 < __twr_v489) { goto __twr_l149; } else { goto __twr_l150; }
    __twr_l150:;
    __twr_v490 = (uint64_t)(&_mng_buffer479);
    __twr_v491 = 16ULL;
    __twr_v492 = __twr_v490 + __twr_v491;
    __twr_v493 = *(uint64_t*)(__twr_v492);
    __twr_v494 = *(uint8_t*)(__twr_v493);
    __twr_v495 = 57ULL;
    if (__twr_v494 <= __twr_v495) { goto __twr_l148; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v496 = (uint64_t)(&LexTokenError);
    __twr_v497 = (uint64_t)(&"Expected numeric value");
    __twr_v498 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v496)(_mng_token475, __twr_v497, __twr_v498, __twr_v498, __twr_v498);
    __twr_l148:;
    __twr_v499 = (uint64_t)(&LexCrunchNumber);
    __twr_v500 = (uint64_t)(&_mng_buffer479);
    __twr_v501 = 16ULL;
    __twr_v502 = __twr_v500 + __twr_v501;
    __twr_v503 = *(uint64_t*)(__twr_v502);
    __twr_v504 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v499)(_mng_token475, __twr_v503);
    _mng_num505 = __twr_v504;
    __twr_v506 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v506)(__twr_v500);
    _jkl_retv = _mng_num505;
    goto _jkl_epilogue;
    __twr_l145:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexConsumeCloseParenthesis() {
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t _mng_token509[4];
    uint64_t __twr_v510;
    uint64_t _mng_byte511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    __twr_v507 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v508 = (uint64_t)(&_mng_token509);
    __twr_v510 = ((uint64_t (*)(uint64_t))__twr_v507)(__twr_v508);
    _mng_byte511 = __twr_v510;
    __twr_v512 = 41ULL;
    if (_mng_byte511 == __twr_v512) { goto __twr_l152; } else { goto __twr_l153; }
    __twr_l153:;
    __twr_v513 = (uint64_t)(&LexTokenError);
    __twr_v514 = (uint64_t)(&_mng_token509);
    __twr_v515 = (uint64_t)(&"Expected close parenthesis");
    __twr_v516 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v513)(__twr_v514, __twr_v515, __twr_v516, __twr_v516, __twr_v516);
    __twr_l152:;
    __twr_l151:;
    _jkl_epilogue:;
}
void LexDefineMacroFromArgumentString(uint64_t _mng_arg517) {
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t _mng_macro521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t _mng_equalsptr527;
    uint64_t _mng_j528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    __twr_v518 = (uint64_t)(&TlAllocateFromZone);
    __twr_v519 = (uint64_t)(&LexMacroZone);
    __twr_v520 = ((uint64_t (*)(uint64_t))__twr_v518)(__twr_v519);
    _mng_macro521 = __twr_v520;
    __twr_v522 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v523 = 80ULL;
    __twr_v524 = _mng_macro521 + __twr_v523;
    ((void (*)(uint64_t))__twr_v522)(__twr_v524);
    __twr_v525 = (uint64_t)(&FeIsMacroArgument);
    __twr_v526 = ((uint64_t (*)(uint64_t))__twr_v525)(_mng_arg517);
    _mng_equalsptr527 = __twr_v526;
    _mng_j528 = 0ULL;
    if (_mng_arg517 >= _mng_equalsptr527) { goto __twr_l156; } else { goto __twr_l155; }
    __twr_l155:;
    __twr_v529 = *(uint8_t*)(_mng_arg517);
    __twr_v530 = 168ULL;
    __twr_v531 = _mng_macro521 + __twr_v530;
    __twr_v532 = 1ULL;
    __twr_v533 = __twr_v531 + _mng_j528;
    *(uint8_t*)(__twr_v533) = __twr_v529;
    __twr_v534 = _mng_j528 + __twr_v532;
    _mng_j528 = __twr_v534;
    __twr_v535 = _mng_arg517 + __twr_v532;
    _mng_arg517 = __twr_v535;
    __twr_l157:;
    if (_mng_arg517 < _mng_equalsptr527) { goto __twr_l155; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v536 = 0ULL;
    __twr_v537 = 168ULL;
    __twr_v538 = _mng_macro521 + __twr_v537;
    __twr_v539 = 1ULL;
    __twr_v540 = __twr_v538 + _mng_j528;
    *(uint8_t*)(__twr_v540) = __twr_v536;
    _mng_j528 = 0ULL;
    __twr_v541 = _mng_equalsptr527 + __twr_v539;
    _mng_equalsptr527 = __twr_v541;
    __twr_v542 = *(uint8_t*)(_mng_equalsptr527);
    if (!(__twr_v542)) { goto __twr_l159; } else { goto __twr_l158; }
    __twr_l158:;
    __twr_v543 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v544 = 80ULL;
    __twr_v545 = _mng_macro521 + __twr_v544;
    __twr_v546 = *(uint8_t*)(_mng_equalsptr527);
    ((void (*)(uint64_t, uint64_t))__twr_v543)(__twr_v545, __twr_v546);
    __twr_v547 = 1ULL;
    __twr_v548 = _mng_equalsptr527 + __twr_v547;
    _mng_equalsptr527 = __twr_v548;
    __twr_l160:;
    __twr_v549 = *(uint8_t*)(_mng_equalsptr527);
    if (__twr_v549) { goto __twr_l158; } else { goto __twr_l159; }
    __twr_l159:;
    __twr_v550 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v551 = 80ULL;
    __twr_v552 = _mng_macro521 + __twr_v551;
    __twr_v553 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v550)(__twr_v552, __twr_v553);
    __twr_v554 = 256ULL;
    __twr_v555 = _mng_macro521 + __twr_v554;
    *(uint8_t*)(__twr_v555) = __twr_v553;
    __twr_v556 = 257ULL;
    __twr_v557 = _mng_macro521 + __twr_v556;
    *(uint8_t*)(__twr_v557) = __twr_v553;
    __twr_v558 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v559 = (uint64_t)(&LexRootMacroScope);
    __twr_v560 = *(uint64_t*)(__twr_v559);
    __twr_v561 = 168ULL;
    __twr_v562 = _mng_macro521 + __twr_v561;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v558)(__twr_v560, _mng_macro521, __twr_v562);
    __twr_l154:;
    _jkl_epilogue:;
}
extern void PrsEnterMacro();
void LexExpandMacro(uint64_t _mng_macro563, uint64_t _mng_token564) {
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t _mng_oldscope576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t _mng_oldmacroscope579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t _mng_stream605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t _mng_trashtoken636[4];
    uint64_t __twr_v637;
    uint64_t _mng_byte638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t _mng_arg647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t _mng_argmacro651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t __twr_v658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t _mng_foundclose671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    uint64_t __twr_v687;
    uint64_t __twr_v688;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t __twr_v696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t __twr_v700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t __twr_v703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    __twr_v565 = 1ULL;
    __twr_v566 = (uint64_t)(&LexMacroDepth);
    __twr_v567 = *(uint32_t*)(__twr_v566);
    __twr_v568 = __twr_v567 + __twr_v565;
    *(uint32_t*)(__twr_v566) = __twr_v568;
    __twr_v569 = *(uint32_t*)(__twr_v566);
    __twr_v570 = 64ULL;
    if (__twr_v569 < __twr_v570) { goto __twr_l162; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v571 = (uint64_t)(&LexTokenError);
    __twr_v572 = (uint64_t)(&"Too many macros deep!");
    __twr_v573 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v571)(_mng_token564, __twr_v572, __twr_v573, __twr_v573, __twr_v573);
    __twr_l162:;
    __twr_v574 = (uint64_t)(&LexCurrentScope);
    __twr_v575 = *(uint64_t*)(__twr_v574);
    _mng_oldscope576 = __twr_v575;
    __twr_v577 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v578 = *(uint64_t*)(__twr_v577);
    _mng_oldmacroscope579 = __twr_v578;
    __twr_v580 = 257ULL;
    __twr_v581 = _mng_macro563 + __twr_v580;
    __twr_v582 = *(uint8_t*)(__twr_v581);
    if (!(__twr_v582)) { goto __twr_l166; } else { goto __twr_l165; }
    __twr_l165:;
    __twr_v583 = 232ULL;
    __twr_v584 = _mng_macro563 + __twr_v583;
    __twr_v585 = *(uint64_t*)(__twr_v584);
    __twr_v586 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v586) = __twr_v585;
    __twr_v587 = 240ULL;
    __twr_v588 = _mng_macro563 + __twr_v587;
    __twr_v589 = *(uint64_t*)(__twr_v588);
    __twr_v590 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v590) = __twr_v589;
    goto __twr_l164;
    __twr_l166:;
    __twr_v591 = (uint64_t)(&LexRootScope);
    __twr_v592 = *(uint64_t*)(__twr_v591);
    if (_mng_oldscope576 == __twr_v592) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v593 = (uint64_t)(&LexCreateSymbolTable);
    __twr_v594 = (uint64_t)(&LexRootScope);
    __twr_v595 = *(uint64_t*)(__twr_v594);
    __twr_v596 = ((uint64_t (*)(uint64_t))__twr_v593)(__twr_v595);
    __twr_v597 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v597) = __twr_v596;
    __twr_l167:;
    __twr_v598 = (uint64_t)(&LexCreateMacroTable);
    __twr_v599 = (uint64_t)(&LexRootMacroScope);
    __twr_v600 = *(uint64_t*)(__twr_v599);
    __twr_v601 = ((uint64_t (*)(uint64_t))__twr_v598)(__twr_v600);
    __twr_v602 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v602) = __twr_v601;
    __twr_l164:;
    __twr_v603 = (uint64_t)(&LexAllocateStream);
    __twr_v604 = ((uint64_t (*)())__twr_v603)();
    _mng_stream605 = __twr_v604;
    __twr_v606 = (uint64_t)(&LexInitializeStream);
    ((void (*)(uint64_t, uint64_t))__twr_v606)(_mng_stream605, _mng_macro563);
    __twr_v607 = (uint64_t)(&LexCurrentStream);
    __twr_v608 = *(uint64_t*)(__twr_v607);
    __twr_v609 = 8ULL;
    __twr_v610 = __twr_v608 + __twr_v609;
    __twr_v611 = *(uint64_t*)(__twr_v610);
    __twr_v612 = _mng_stream605 + __twr_v609;
    *(uint64_t*)(__twr_v612) = __twr_v611;
    __twr_v613 = 1000000ULL;
    __twr_v614 = 44ULL;
    __twr_v615 = _mng_stream605 + __twr_v614;
    *(uint32_t*)(__twr_v615) = __twr_v613;
    __twr_v616 = 80ULL;
    __twr_v617 = _mng_macro563 + __twr_v616;
    __twr_v618 = 96ULL;
    __twr_v619 = _mng_macro563 + __twr_v618;
    __twr_v620 = *(uint64_t*)(__twr_v619);
    __twr_v621 = 24ULL;
    __twr_v622 = _mng_stream605 + __twr_v621;
    *(uint64_t*)(__twr_v622) = __twr_v620;
    __twr_v623 = *(uint64_t*)(__twr_v617);
    __twr_v624 = 1ULL;
    __twr_v625 = __twr_v623 - __twr_v624;
    __twr_v626 = 36ULL;
    __twr_v627 = _mng_stream605 + __twr_v626;
    *(uint32_t*)(__twr_v627) = __twr_v625;
    __twr_v628 = 72ULL;
    __twr_v629 = _mng_stream605 + __twr_v628;
    *(uint64_t*)(__twr_v629) = _mng_oldscope576;
    __twr_v630 = _mng_stream605 + __twr_v616;
    *(uint64_t*)(__twr_v630) = _mng_oldmacroscope579;
    __twr_v631 = 256ULL;
    __twr_v632 = _mng_macro563 + __twr_v631;
    __twr_v633 = *(uint8_t*)(__twr_v632);
    if (!(__twr_v633)) { goto __twr_l169; } else { goto __twr_l170; }
    __twr_l170:;
    __twr_v634 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v635 = (uint64_t)(&_mng_trashtoken636);
    __twr_v637 = ((uint64_t (*)(uint64_t))__twr_v634)(__twr_v635);
    _mng_byte638 = __twr_v637;
    __twr_v639 = 40ULL;
    if (_mng_byte638 == __twr_v639) { goto __twr_l171; } else { goto __twr_l172; }
    __twr_l172:;
    __twr_v640 = (uint64_t)(&LexTokenError);
    __twr_v641 = (uint64_t)(&_mng_trashtoken636);
    __twr_v642 = (uint64_t)(&"Expected open parenthesis after function macro name");
    __twr_v643 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v640)(__twr_v641, __twr_v642, __twr_v643, __twr_v643, __twr_v643);
    __twr_l171:;
    __twr_v644 = 248ULL;
    __twr_v645 = _mng_macro563 + __twr_v644;
    __twr_v646 = *(uint64_t*)(__twr_v645);
    _mng_arg647 = __twr_v646;
    if (!(_mng_arg647)) { goto __twr_l174; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v648 = (uint64_t)(&TlAllocateFromZone);
    __twr_v649 = (uint64_t)(&LexMacroZone);
    __twr_v650 = ((uint64_t (*)(uint64_t))__twr_v648)(__twr_v649);
    _mng_argmacro651 = __twr_v650;
    __twr_v652 = 232ULL;
    __twr_v653 = _mng_argmacro651 + __twr_v652;
    *(uint64_t*)(__twr_v653) = _mng_oldscope576;
    __twr_v654 = 240ULL;
    __twr_v655 = _mng_argmacro651 + __twr_v654;
    *(uint64_t*)(__twr_v655) = _mng_oldmacroscope579;
    __twr_v656 = (uint64_t)(&TlCopyString);
    __twr_v657 = 168ULL;
    __twr_v658 = _mng_argmacro651 + __twr_v657;
    __twr_v659 = 0ULL;
    __twr_v660 = 1ULL;
    __twr_v661 = 56ULL;
    __twr_v662 = _mng_arg647 + __twr_v661;
    __twr_v663 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v656)(__twr_v658, __twr_v662, __twr_v663);
    __twr_v664 = 256ULL;
    __twr_v665 = _mng_argmacro651 + __twr_v664;
    *(uint8_t*)(__twr_v665) = __twr_v659;
    __twr_v666 = 257ULL;
    __twr_v667 = _mng_argmacro651 + __twr_v666;
    *(uint8_t*)(__twr_v667) = __twr_v660;
    __twr_v668 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v669 = 80ULL;
    __twr_v670 = _mng_argmacro651 + __twr_v669;
    ((void (*)(uint64_t))__twr_v668)(__twr_v670);
    _mng_foundclose671 = 0ULL;
    __twr_l176:;
    __twr_v672 = 2ULL;
    __twr_v673 = _mng_foundclose671 & __twr_v672;
    if (!(__twr_v673)) { goto __twr_l179; } else { goto __twr_l180; }
    __twr_l180:;
    __twr_v674 = (uint64_t)(&LexTokenError);
    __twr_v675 = (uint64_t)(&_mng_trashtoken636);
    __twr_v676 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v677 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v674)(__twr_v675, __twr_v676, __twr_v677, __twr_v677, __twr_v677);
    __twr_l179:;
    __twr_v678 = (uint64_t)(&LexCollectMacroArgumentContents);
    __twr_v679 = 48ULL;
    __twr_v680 = _mng_argmacro651 + __twr_v679;
    __twr_v681 = 80ULL;
    __twr_v682 = _mng_argmacro651 + __twr_v681;
    __twr_v683 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v678)(__twr_v680, __twr_v682);
    _mng_foundclose671 = __twr_v683;
    __twr_l178:;
    __twr_v684 = 1ULL;
    __twr_v685 = _mng_foundclose671 & __twr_v684;
    if (!(__twr_v685)) { goto __twr_l176; } else { goto __twr_l177; }
    __twr_l177:;
    __twr_v686 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v687 = 80ULL;
    __twr_v688 = _mng_argmacro651 + __twr_v687;
    __twr_v689 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v686)(__twr_v688, __twr_v689);
    __twr_v690 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v691 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v692 = *(uint64_t*)(__twr_v691);
    __twr_v693 = 168ULL;
    __twr_v694 = _mng_argmacro651 + __twr_v693;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v690)(__twr_v692, _mng_argmacro651, __twr_v694);
    __twr_v695 = 48ULL;
    __twr_v696 = _mng_arg647 + __twr_v695;
    __twr_v697 = *(uint64_t*)(__twr_v696);
    _mng_arg647 = __twr_v697;
    __twr_v698 = 2ULL;
    __twr_v699 = _mng_foundclose671 & __twr_v698;
    if (!(__twr_v699)) { goto __twr_l183; } else { goto __twr_l182; }
    __twr_l182:;
    if (!(_mng_arg647)) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v700 = (uint64_t)(&LexTokenError);
    __twr_v701 = (uint64_t)(&_mng_trashtoken636);
    __twr_v702 = (uint64_t)(&"Too few arguments to function macro");
    __twr_v703 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v700)(__twr_v701, __twr_v702, __twr_v703, __twr_v703, __twr_v703);
    __twr_l184:;
    goto __twr_l181;
    __twr_l183:;
    if (_mng_arg647) { goto __twr_l181; } else { goto __twr_l186; }
    __twr_l186:;
    __twr_l187:;
    __twr_v704 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v705 = (uint64_t)(&_mng_trashtoken636);
    __twr_v706 = ((uint64_t (*)(uint64_t))__twr_v704)(__twr_v705);
    _mng_byte638 = __twr_v706;
    __twr_v707 = 41ULL;
    if (_mng_byte638 != __twr_v707) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    goto __twr_l188;
    __twr_l189:;
    goto __twr_l187;
    __twr_l188:;
    __twr_l181:;
    __twr_l175:;
    if (_mng_arg647) { goto __twr_l173; } else { goto __twr_l174; }
    __twr_l174:;
    __twr_l169:;
    __twr_v708 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v708)(_mng_stream605);
    __twr_v709 = (uint64_t)(&PrsEnterMacro);
    ((void (*)())__twr_v709)();
    __twr_l161:;
    _jkl_epilogue:;
}
void LexParseInclude() {
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t _mng_str712[11];
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t _mng_token715[4];
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t __twr_v720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t _mng_created726;
    uint64_t _mng_fileblock727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t _mng_filepath732[11];
    uint64_t _mng_found733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t _mng_handle752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t __twr_v765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t __twr_v770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t __twr_v780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t __twr_v802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t _mng_status805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t _mng_stream819;
    uint64_t __twr_v820;
    __twr_v710 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v711 = (uint64_t)(&_mng_str712);
    ((void (*)(uint64_t))__twr_v710)(__twr_v711);
    __twr_v713 = (uint64_t)(&LexCollectString);
    __twr_v714 = (uint64_t)(&_mng_token715);
    ((void (*)(uint64_t, uint64_t))__twr_v713)(__twr_v714, __twr_v711);
    __twr_v716 = (uint64_t)(&LexFalseCount);
    __twr_v717 = *(uint32_t*)(__twr_v716);
    if (!(__twr_v717)) { goto __twr_l192; } else { goto __twr_l193; }
    __twr_l193:;
    __twr_v718 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v719 = (uint64_t)(&_mng_str712);
    ((void (*)(uint64_t))__twr_v718)(__twr_v719);
    goto _jkl_epilogue;
    __twr_l192:;
    __twr_v720 = (uint64_t)(&FeCreateFileBlock);
    __twr_v721 = (uint64_t)(&_mng_str712);
    __twr_v722 = 16ULL;
    __twr_v723 = __twr_v721 + __twr_v722;
    __twr_v724 = *(uint64_t*)(__twr_v723);
    __twr_v725 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v720)(__twr_v724, (uint64_t)(&_mng_created726));
    _mng_fileblock727 = __twr_v725;
    if (_mng_created726) { goto __twr_l194; } else { goto __twr_l195; }
    __twr_l195:;
    __twr_v728 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v729 = (uint64_t)(&_mng_str712);
    ((void (*)(uint64_t))__twr_v728)(__twr_v729);
    goto _jkl_epilogue;
    __twr_l194:;
    __twr_v730 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v731 = (uint64_t)(&_mng_filepath732);
    ((void (*)(uint64_t))__twr_v730)(__twr_v731);
    _mng_found733 = 0ULL;
    __twr_v734 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v735 = (uint64_t)(&_mng_str712);
    __twr_v736 = 16ULL;
    __twr_v737 = __twr_v735 + __twr_v736;
    __twr_v738 = *(uint64_t*)(__twr_v737);
    __twr_v739 = (uint64_t)(&"<inc>/");
    __twr_v740 = 6ULL;
    __twr_v741 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v734)(__twr_v738, __twr_v739, __twr_v740);
    if (__twr_v741) { goto __twr_l198; } else { goto __twr_l197; }
    __twr_l197:;
    __twr_v742 = (uint64_t)(&TlMatchPath);
    __twr_v743 = (uint64_t)(&_mng_str712);
    __twr_v744 = 16ULL;
    __twr_v745 = __twr_v743 + __twr_v744;
    __twr_v746 = *(uint64_t*)(__twr_v745);
    __twr_v747 = 6ULL;
    __twr_v748 = __twr_v746 + __twr_v747;
    __twr_v749 = (uint64_t)(&FeIncludeDirectory);
    __twr_v750 = (uint64_t)(&_mng_filepath732);
    __twr_v751 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v742)(__twr_v748, __twr_v749, __twr_v750, (uint64_t)(&_mng_handle752));
    _mng_found733 = __twr_v751;
    goto __twr_l196;
    __twr_l198:;
    __twr_v753 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v754 = (uint64_t)(&_mng_str712);
    __twr_v755 = 16ULL;
    __twr_v756 = __twr_v754 + __twr_v755;
    __twr_v757 = *(uint64_t*)(__twr_v756);
    __twr_v758 = (uint64_t)(&"<ll>/");
    __twr_v759 = 5ULL;
    __twr_v760 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v753)(__twr_v757, __twr_v758, __twr_v759);
    if (__twr_v760) { goto __twr_l200; } else { goto __twr_l199; }
    __twr_l199:;
    __twr_v761 = (uint64_t)(&TlMatchPath);
    __twr_v762 = (uint64_t)(&_mng_str712);
    __twr_v763 = 16ULL;
    __twr_v764 = __twr_v762 + __twr_v763;
    __twr_v765 = *(uint64_t*)(__twr_v764);
    __twr_v766 = 5ULL;
    __twr_v767 = __twr_v765 + __twr_v766;
    __twr_v768 = (uint64_t)(&FeLibraryDirectory);
    __twr_v769 = (uint64_t)(&_mng_filepath732);
    __twr_v770 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v761)(__twr_v767, __twr_v768, __twr_v769, (uint64_t)(&_mng_handle752));
    _mng_found733 = __twr_v770;
    goto __twr_l196;
    __twr_l200:;
    __twr_v771 = (uint64_t)(&TlCopyParentPath);
    __twr_v772 = (uint64_t)(&LexCurrentStream);
    __twr_v773 = *(uint64_t*)(__twr_v772);
    __twr_v774 = 8ULL;
    __twr_v775 = __twr_v773 + __twr_v774;
    __twr_v776 = *(uint64_t*)(__twr_v775);
    __twr_v777 = 48ULL;
    __twr_v778 = __twr_v776 + __twr_v777;
    __twr_v779 = 1ULL;
    __twr_v780 = (uint64_t)(&_mng_filepath732);
    ((void (*)(uint64_t, uint64_t))__twr_v771)(__twr_v778, __twr_v780);
    __twr_v781 = 16ULL;
    __twr_v782 = __twr_v780 + __twr_v781;
    __twr_v783 = *(uint64_t*)(__twr_v782);
    __twr_v784 = *(uint64_t*)(__twr_v780);
    __twr_v785 = __twr_v784 - __twr_v779;
    __twr_v786 = __twr_v783 + __twr_v785;
    __twr_v787 = *(uint8_t*)(__twr_v786);
    __twr_v788 = 47ULL;
    if (__twr_v787 == __twr_v788) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v789 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v790 = (uint64_t)(&_mng_filepath732);
    __twr_v791 = 47ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v789)(__twr_v790, __twr_v791);
    __twr_l201:;
    __twr_v792 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v793 = (uint64_t)(&_mng_filepath732);
    __twr_v794 = (uint64_t)(&_mng_str712);
    __twr_v795 = 16ULL;
    __twr_v796 = __twr_v794 + __twr_v795;
    __twr_v797 = *(uint64_t*)(__twr_v796);
    __twr_v798 = 0ULL;
    __twr_v799 = *(uint64_t*)(__twr_v794);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v792)(__twr_v793, __twr_v797, __twr_v799);
    __twr_v800 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v800)(__twr_v793, __twr_v798);
    __twr_v801 = (uint64_t)(&TlOpenSource);
    __twr_v802 = __twr_v793 + __twr_v795;
    __twr_v803 = *(uint64_t*)(__twr_v802);
    __twr_v804 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v801)(__twr_v803, (uint64_t)(&_mng_handle752));
    _mng_status805 = __twr_v804;
    if (_mng_status805) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    _mng_found733 = 1ULL;
    __twr_l203:;
    __twr_l196:;
    if (_mng_found733) { goto __twr_l205; } else { goto __twr_l206; }
    __twr_l206:;
    __twr_v806 = (uint64_t)(&LexTokenError);
    __twr_v807 = (uint64_t)(&_mng_token715);
    __twr_v808 = (uint64_t)(&"Failed to include the file.");
    __twr_v809 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v806)(__twr_v807, __twr_v808, __twr_v809, __twr_v809, __twr_v809);
    __twr_l205:;
    __twr_v810 = (uint64_t)(&FeCopyPathFileBlock);
    __twr_v811 = (uint64_t)(&_mng_filepath732);
    __twr_v812 = 16ULL;
    __twr_v813 = __twr_v811 + __twr_v812;
    __twr_v814 = *(uint64_t*)(__twr_v813);
    ((void (*)(uint64_t, uint64_t))__twr_v810)(_mng_fileblock727, __twr_v814);
    __twr_v815 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v815)(__twr_v811);
    __twr_v816 = (uint64_t)(&_mng_str712);
    ((void (*)(uint64_t))__twr_v815)(__twr_v816);
    __twr_v817 = (uint64_t)(&LexCreateFileStream);
    __twr_v818 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v817)(_mng_fileblock727, _mng_handle752);
    _mng_stream819 = __twr_v818;
    __twr_v820 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v820)(_mng_stream819);
    __twr_l191:;
    _jkl_epilogue:;
}
void LexParseDefine() {
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t _mng_contentsbuffer825[11];
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t _mng_trashtoken828[4];
    uint64_t __twr_v829;
    uint64_t _mng_namebuffer830[8];
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t __twr_v834;
    uint64_t __twr_v835;
    uint64_t __twr_v836;
    uint64_t _mng_macro837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t _mng_oldmacro850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    __twr_v821 = (uint64_t)(&LexFalseCount);
    __twr_v822 = *(uint32_t*)(__twr_v821);
    if (!(__twr_v822)) { goto __twr_l208; } else { goto __twr_l209; }
    __twr_l209:;
    __twr_v823 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v824 = (uint64_t)(&_mng_contentsbuffer825);
    ((void (*)(uint64_t))__twr_v823)(__twr_v824);
    __twr_v826 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v827 = (uint64_t)(&_mng_trashtoken828);
    __twr_v829 = (uint64_t)(&_mng_namebuffer830);
    __twr_v831 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v826)(__twr_v827, __twr_v829);
    __twr_v832 = (uint64_t)(&LexCollectValue);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v832)(__twr_v827, __twr_v824, __twr_v831);
    __twr_v833 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v833)(__twr_v824);
    goto _jkl_epilogue;
    __twr_l208:;
    __twr_v834 = (uint64_t)(&TlAllocateFromZone);
    __twr_v835 = (uint64_t)(&LexMacroZone);
    __twr_v836 = ((uint64_t (*)(uint64_t))__twr_v834)(__twr_v835);
    _mng_macro837 = __twr_v836;
    __twr_v838 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v839 = 80ULL;
    __twr_v840 = _mng_macro837 + __twr_v839;
    ((void (*)(uint64_t))__twr_v838)(__twr_v840);
    __twr_v841 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v842 = 48ULL;
    __twr_v843 = _mng_macro837 + __twr_v842;
    __twr_v844 = 168ULL;
    __twr_v845 = _mng_macro837 + __twr_v844;
    ((void (*)(uint64_t, uint64_t))__twr_v841)(__twr_v843, __twr_v845);
    __twr_v846 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v847 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v848 = *(uint64_t*)(__twr_v847);
    __twr_v849 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v846)(__twr_v848, __twr_v845);
    _mng_oldmacro850 = __twr_v849;
    if (!(_mng_oldmacro850)) { goto __twr_l210; } else { goto __twr_l211; }
    __twr_l211:;
    __twr_v851 = (uint64_t)(&LexTokenError);
    __twr_v852 = 48ULL;
    __twr_v853 = _mng_macro837 + __twr_v852;
    __twr_v854 = (uint64_t)(&"Macro already defined");
    __twr_v855 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v851)(__twr_v853, __twr_v854, __twr_v855, __twr_v855, __twr_v855);
    __twr_l210:;
    __twr_v856 = 0ULL;
    __twr_v857 = 256ULL;
    __twr_v858 = _mng_macro837 + __twr_v857;
    *(uint8_t*)(__twr_v858) = __twr_v856;
    __twr_v859 = 257ULL;
    __twr_v860 = _mng_macro837 + __twr_v859;
    *(uint8_t*)(__twr_v860) = __twr_v856;
    __twr_v861 = (uint64_t)(&LexCollectValue);
    __twr_v862 = 48ULL;
    __twr_v863 = _mng_macro837 + __twr_v862;
    __twr_v864 = 80ULL;
    __twr_v865 = _mng_macro837 + __twr_v864;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v861)(__twr_v863, __twr_v865, __twr_v856);
    __twr_v866 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v867 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v868 = *(uint64_t*)(__twr_v867);
    __twr_v869 = 168ULL;
    __twr_v870 = _mng_macro837 + __twr_v869;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v866)(__twr_v868, _mng_macro837, __twr_v870);
    __twr_l207:;
    _jkl_epilogue:;
}
void LexParseUndefine() {
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t _mng_token873[4];
    uint64_t __twr_v874;
    uint64_t _mng_buffer875[8];
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    uint64_t _mng_oldmacro883;
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    __twr_v871 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v872 = (uint64_t)(&_mng_token873);
    __twr_v874 = (uint64_t)(&_mng_buffer875);
    ((void (*)(uint64_t, uint64_t))__twr_v871)(__twr_v872, __twr_v874);
    __twr_v876 = (uint64_t)(&LexFalseCount);
    __twr_v877 = *(uint32_t*)(__twr_v876);
    if (!(__twr_v877)) { goto __twr_l213; } else { goto __twr_l214; }
    __twr_l214:;
    goto _jkl_epilogue;
    __twr_l213:;
    __twr_v878 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v879 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v880 = *(uint64_t*)(__twr_v879);
    __twr_v881 = (uint64_t)(&_mng_buffer875);
    __twr_v882 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v878)(__twr_v880, __twr_v881);
    _mng_oldmacro883 = __twr_v882;
    if (_mng_oldmacro883) { goto __twr_l215; } else { goto __twr_l216; }
    __twr_l216:;
    goto _jkl_epilogue;
    __twr_l215:;
    __twr_v884 = (uint64_t)(&TlRemoveSymbolTable);
    ((void (*)(uint64_t))__twr_v884)(_mng_oldmacro883);
    __twr_v885 = (uint64_t)(&LexMacroDelete);
    ((void (*)(uint64_t))__twr_v885)(_mng_oldmacro883);
    __twr_l212:;
    _jkl_epilogue:;
}
uint64_t LexCollectMacroArgumentName(uint64_t _mng_token886, uint64_t _mng_buffer887) {
    uint64_t _jkl_retv;
    uint64_t _mng_len888;
    uint64_t __twr_v889;
    uint64_t __twr_v890;
    uint64_t _mng_byte891;
    uint64_t __twr_v892;
    uint64_t __twr_v893;
    uint64_t __twr_v894;
    uint64_t __twr_v895;
    uint64_t __twr_v896;
    uint64_t __twr_v897;
    uint64_t __twr_v898;
    uint64_t __twr_v899;
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t __twr_v902;
    uint64_t __twr_v903;
    uint64_t __twr_v904;
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t __twr_v907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    uint64_t __twr_v915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    _mng_len888 = 0ULL;
    __twr_l218:;
    __twr_v889 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v890 = ((uint64_t (*)(uint64_t))__twr_v889)(_mng_token886);
    _mng_byte891 = __twr_v890;
    __twr_v892 = 41ULL;
    if (_mng_byte891 != __twr_v892) { goto __twr_l222; } else { goto __twr_l221; }
    __twr_l221:;
    __twr_v893 = 2ULL;
    _jkl_retv = __twr_v893;
    goto _jkl_epilogue;
    goto __twr_l220;
    __twr_l222:;
    __twr_v894 = 44ULL;
    if (_mng_byte891 != __twr_v894) { goto __twr_l220; } else { goto __twr_l223; }
    __twr_l223:;
    goto __twr_l218;
    __twr_l220:;
    goto __twr_l219;
    goto __twr_l218;
    __twr_l219:;
    __twr_l224:;
    __twr_v895 = (uint64_t)(&LexCharTreatment);
    __twr_v896 = __twr_v895 + _mng_byte891;
    __twr_v897 = *(uint8_t*)(__twr_v896);
    __twr_v898 = 3ULL;
    if (__twr_v897 != __twr_v898) { goto __twr_l226; } else { goto __twr_l227; }
    __twr_l227:;
    __twr_v899 = 0ULL;
    *(uint8_t*)(_mng_buffer887) = __twr_v899;
    __twr_v900 = 1ULL;
    _jkl_retv = __twr_v900;
    goto _jkl_epilogue;
    __twr_l226:;
    __twr_v901 = 41ULL;
    if (_mng_byte891 != __twr_v901) { goto __twr_l228; } else { goto __twr_l229; }
    __twr_l229:;
    __twr_v902 = 0ULL;
    *(uint8_t*)(_mng_buffer887) = __twr_v902;
    __twr_v903 = 3ULL;
    _jkl_retv = __twr_v903;
    goto _jkl_epilogue;
    __twr_l228:;
    __twr_v904 = 44ULL;
    if (_mng_byte891 != __twr_v904) { goto __twr_l230; } else { goto __twr_l231; }
    __twr_l231:;
    __twr_v905 = 0ULL;
    *(uint8_t*)(_mng_buffer887) = __twr_v905;
    __twr_v906 = 1ULL;
    _jkl_retv = __twr_v906;
    goto _jkl_epilogue;
    __twr_l230:;
    __twr_v907 = (uint64_t)(&LexCharTreatment);
    __twr_v908 = __twr_v907 + _mng_byte891;
    __twr_v909 = *(uint8_t*)(__twr_v908);
    if (!(__twr_v909)) { goto __twr_l232; } else { goto __twr_l233; }
    __twr_l233:;
    __twr_v910 = (uint64_t)(&LexTokenError);
    __twr_v911 = (uint64_t)(&"Illegal character in token");
    __twr_v912 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v910)(_mng_token886, __twr_v911, __twr_v912, __twr_v912, __twr_v912);
    __twr_l232:;
    __twr_v913 = 63ULL;
    if (_mng_len888 != __twr_v913) { goto __twr_l234; } else { goto __twr_l235; }
    __twr_l235:;
    __twr_v914 = (uint64_t)(&LexTokenError);
    __twr_v915 = (uint64_t)(&"Token length too great");
    __twr_v916 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v914)(_mng_token886, __twr_v915, __twr_v916, __twr_v916, __twr_v916);
    __twr_l234:;
    *(uint8_t*)(_mng_buffer887) = _mng_byte891;
    __twr_v917 = 1ULL;
    __twr_v918 = _mng_buffer887 + __twr_v917;
    _mng_buffer887 = __twr_v918;
    __twr_v919 = _mng_len888 + __twr_v917;
    _mng_len888 = __twr_v919;
    __twr_v920 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v921 = ((uint64_t (*)())__twr_v920)();
    _mng_byte891 = __twr_v921;
    goto __twr_l224;
    __twr_l225:;
    __twr_l217:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexCollectMacroArgumentList(uint64_t _mng_ignore922, uint64_t _mng_o_arglisthead, uint64_t _mng_o_length) {
    uint64_t _mng_arglisttail923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t _mng_hashtable926[196];
    uint64_t _mng_arglisthead927;
    uint64_t _mng_length928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t _mng_token931[4];
    uint64_t __twr_v932;
    uint64_t _mng_buffer933[8];
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t _mng_state936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    uint64_t __twr_v942;
    uint64_t _mng_created943;
    uint64_t _mng_arg944;
    uint64_t __twr_v945;
    uint64_t __twr_v946;
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t __twr_v953;
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    uint64_t __twr_v956;
    uint64_t __twr_v957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t __twr_v961;
    uint64_t __twr_v962;
    _mng_arglisttail923 = 0ULL;
    __twr_v924 = (uint64_t)(&TlInitializeHashTable);
    __twr_v925 = (uint64_t)(&_mng_hashtable926);
    ((void (*)(uint64_t))__twr_v924)(__twr_v925);
    _mng_arglisthead927 = 0ULL;
    _mng_length928 = 0ULL;
    __twr_l237:;
    __twr_v929 = (uint64_t)(&LexCollectMacroArgumentName);
    __twr_v930 = (uint64_t)(&_mng_token931);
    __twr_v932 = (uint64_t)(&_mng_buffer933);
    __twr_v934 = 1ULL;
    __twr_v935 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v929)(__twr_v930, __twr_v932);
    _mng_state936 = __twr_v935;
    __twr_v937 = _mng_state936 & __twr_v934;
    if (!(__twr_v937)) { goto __twr_l239; } else { goto __twr_l241; }
    __twr_l241:;
    if (_mng_ignore922) { goto __twr_l239; } else { goto __twr_l240; }
    __twr_l240:;
    __twr_v938 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v939 = (uint64_t)(&_mng_hashtable926);
    __twr_v940 = 120ULL;
    __twr_v941 = (uint64_t)(&_mng_buffer933);
    __twr_v942 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v938)(__twr_v939, __twr_v940, __twr_v941, (uint64_t)(&_mng_created943));
    _mng_arg944 = __twr_v942;
    if (_mng_created943) { goto __twr_l242; } else { goto __twr_l243; }
    __twr_l243:;
    __twr_v945 = (uint64_t)(&LexTokenError);
    __twr_v946 = (uint64_t)(&_mng_token931);
    __twr_v947 = (uint64_t)(&"Macro argument name already used");
    __twr_v948 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v945)(__twr_v946, __twr_v947, __twr_v948, __twr_v948, __twr_v948);
    __twr_l242:;
    __twr_v949 = (uint64_t)(&TlCopyString);
    __twr_v950 = 56ULL;
    __twr_v951 = _mng_arg944 + __twr_v950;
    __twr_v952 = 1ULL;
    __twr_v953 = (uint64_t)(&_mng_buffer933);
    __twr_v954 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v949)(__twr_v951, __twr_v953, __twr_v954);
    __twr_v955 = _mng_length928 + __twr_v952;
    _mng_length928 = __twr_v955;
    __twr_v956 = 0ULL;
    __twr_v957 = 48ULL;
    __twr_v958 = _mng_arg944 + __twr_v957;
    *(uint64_t*)(__twr_v958) = __twr_v956;
    if (!(_mng_arglisttail923)) { goto __twr_l246; } else { goto __twr_l245; }
    __twr_l245:;
    __twr_v959 = 48ULL;
    __twr_v960 = _mng_arglisttail923 + __twr_v959;
    *(uint64_t*)(__twr_v960) = _mng_arg944;
    goto __twr_l244;
    __twr_l246:;
    _mng_arglisthead927 = _mng_arg944;
    __twr_l244:;
    _mng_arglisttail923 = _mng_arg944;
    __twr_l239:;
    __twr_v961 = 2ULL;
    __twr_v962 = _mng_state936 & __twr_v961;
    if (!(__twr_v962)) { goto __twr_l247; } else { goto __twr_l248; }
    __twr_l248:;
    goto _jkl_epilogue;
    __twr_l247:;
    goto __twr_l237;
    __twr_l238:;
    __twr_l236:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_arglisthead) = _mng_arglisthead927;
    *(uint64_t*)(_mng_o_length) = _mng_length928;
}
void LexParseMacro() {
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    uint64_t __twr_v965;
    uint64_t _mng_macro966;
    uint64_t __twr_v967;
    uint64_t __twr_v968;
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t __twr_v975;
    uint64_t __twr_v976;
    uint64_t _mng_trashtoken977[4];
    uint64_t __twr_v978;
    uint64_t _mng_byte979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t _mng_length990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t _mng_contentsbuffer995[11];
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t __twr_v1008;
    uint64_t __twr_v1009;
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t _mng_oldmacro1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    uint64_t __twr_v1018;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t __twr_v1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    uint64_t __twr_v1027;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t __twr_v1030;
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    uint64_t __twr_v1035;
    uint64_t __twr_v1036;
    __twr_v963 = (uint64_t)(&TlAllocateFromZone);
    __twr_v964 = (uint64_t)(&LexMacroZone);
    __twr_v965 = ((uint64_t (*)(uint64_t))__twr_v963)(__twr_v964);
    _mng_macro966 = __twr_v965;
    __twr_v967 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v968 = 80ULL;
    __twr_v969 = _mng_macro966 + __twr_v968;
    ((void (*)(uint64_t))__twr_v967)(__twr_v969);
    __twr_v970 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v971 = 48ULL;
    __twr_v972 = _mng_macro966 + __twr_v971;
    __twr_v973 = 168ULL;
    __twr_v974 = _mng_macro966 + __twr_v973;
    ((void (*)(uint64_t, uint64_t))__twr_v970)(__twr_v972, __twr_v974);
    __twr_v975 = (uint64_t)(&LexNextNonWhitespaceCharacter);
    __twr_v976 = (uint64_t)(&_mng_trashtoken977);
    __twr_v978 = ((uint64_t (*)(uint64_t))__twr_v975)(__twr_v976);
    _mng_byte979 = __twr_v978;
    __twr_v980 = 40ULL;
    if (_mng_byte979 == __twr_v980) { goto __twr_l250; } else { goto __twr_l251; }
    __twr_l251:;
    __twr_v981 = (uint64_t)(&LexTokenError);
    __twr_v982 = (uint64_t)(&_mng_trashtoken977);
    __twr_v983 = (uint64_t)(&"Expected an open parenthesis");
    __twr_v984 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v981)(__twr_v982, __twr_v983, __twr_v984, __twr_v984, __twr_v984);
    __twr_l250:;
    __twr_v985 = (uint64_t)(&LexFalseCount);
    __twr_v986 = *(uint32_t*)(__twr_v985);
    if (!(__twr_v986)) { goto __twr_l252; } else { goto __twr_l253; }
    __twr_l253:;
    __twr_v987 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v988 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v987)(__twr_v988, (uint64_t)(&__twr_v989), (uint64_t)(&_mng_length990));
    __twr_v991 = 248ULL;
    __twr_v992 = _mng_macro966 + __twr_v991;
    *(uint64_t*)(__twr_v992) = __twr_v989;
    __twr_v993 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v994 = (uint64_t)(&_mng_contentsbuffer995);
    ((void (*)(uint64_t))__twr_v993)(__twr_v994);
    __twr_v996 = (uint64_t)(&LexCollectValue);
    __twr_v997 = (uint64_t)(&_mng_trashtoken977);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v996)(__twr_v997, __twr_v994, __twr_v988);
    __twr_v998 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v998)(__twr_v994);
    goto _jkl_epilogue;
    __twr_l252:;
    __twr_v999 = (uint64_t)(&LexCollectMacroArgumentList);
    __twr_v1000 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v999)(__twr_v1000, (uint64_t)(&__twr_v1001), (uint64_t)(&_mng_length990));
    __twr_v1002 = 248ULL;
    __twr_v1003 = _mng_macro966 + __twr_v1002;
    *(uint64_t*)(__twr_v1003) = __twr_v1001;
    if (_mng_length990) { goto __twr_l254; } else { goto __twr_l255; }
    __twr_l255:;
    __twr_v1004 = (uint64_t)(&LexTokenError);
    __twr_v1005 = 48ULL;
    __twr_v1006 = _mng_macro966 + __twr_v1005;
    __twr_v1007 = (uint64_t)(&"Must have at least 1 argument");
    __twr_v1008 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1004)(__twr_v1006, __twr_v1007, __twr_v1008, __twr_v1008, __twr_v1008);
    __twr_l254:;
    __twr_v1009 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1010 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1011 = *(uint64_t*)(__twr_v1010);
    __twr_v1012 = 168ULL;
    __twr_v1013 = _mng_macro966 + __twr_v1012;
    __twr_v1014 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1009)(__twr_v1011, __twr_v1013);
    _mng_oldmacro1015 = __twr_v1014;
    if (!(_mng_oldmacro1015)) { goto __twr_l256; } else { goto __twr_l257; }
    __twr_l257:;
    __twr_v1016 = (uint64_t)(&LexTokenError);
    __twr_v1017 = 48ULL;
    __twr_v1018 = _mng_macro966 + __twr_v1017;
    __twr_v1019 = (uint64_t)(&"Macro already defined");
    __twr_v1020 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1016)(__twr_v1018, __twr_v1019, __twr_v1020, __twr_v1020, __twr_v1020);
    __twr_l256:;
    __twr_v1021 = 1ULL;
    __twr_v1022 = 256ULL;
    __twr_v1023 = _mng_macro966 + __twr_v1022;
    *(uint8_t*)(__twr_v1023) = __twr_v1021;
    __twr_v1024 = 0ULL;
    __twr_v1025 = 257ULL;
    __twr_v1026 = _mng_macro966 + __twr_v1025;
    *(uint8_t*)(__twr_v1026) = __twr_v1024;
    __twr_v1027 = (uint64_t)(&LexCollectValue);
    __twr_v1028 = 48ULL;
    __twr_v1029 = _mng_macro966 + __twr_v1028;
    __twr_v1030 = 80ULL;
    __twr_v1031 = _mng_macro966 + __twr_v1030;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1027)(__twr_v1029, __twr_v1031, __twr_v1024);
    __twr_v1032 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1033 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1034 = *(uint64_t*)(__twr_v1033);
    __twr_v1035 = 168ULL;
    __twr_v1036 = _mng_macro966 + __twr_v1035;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1032)(__twr_v1034, _mng_macro966, __twr_v1036);
    __twr_l249:;
    _jkl_epilogue:;
}
void LexParseIf() {
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    uint64_t _mng_token1039[4];
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t _mng_truthy1045;
    uint64_t __twr_v1046;
    uint64_t __twr_v1047;
    uint64_t __twr_v1048;
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    __twr_v1037 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1038 = (uint64_t)(&_mng_token1039);
    __twr_v1040 = (uint64_t)(&LexFalseCount);
    __twr_v1041 = *(uint32_t*)(__twr_v1040);
    __twr_v1042 = 0ULL;
    __twr_v1043 = (__twr_v1041 != __twr_v1042);
    __twr_v1044 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1037)(__twr_v1038, __twr_v1043);
    _mng_truthy1045 = __twr_v1044;
    __twr_v1046 = *(uint32_t*)(__twr_v1040);
    if (!(__twr_v1046)) { goto __twr_l259; } else { goto __twr_l260; }
    __twr_l260:;
    __twr_v1047 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1048 = (uint64_t)(&LexIfStack);
    __twr_v1049 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1047)(__twr_v1048, __twr_v1049);
    __twr_v1050 = 1ULL;
    __twr_v1051 = (uint64_t)(&LexFalseCount);
    __twr_v1052 = *(uint32_t*)(__twr_v1051);
    __twr_v1053 = __twr_v1052 + __twr_v1050;
    *(uint32_t*)(__twr_v1051) = __twr_v1053;
    goto _jkl_epilogue;
    __twr_l259:;
    if (!(_mng_truthy1045)) { goto __twr_l263; } else { goto __twr_l262; }
    __twr_l262:;
    __twr_v1054 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1055 = (uint64_t)(&LexIfStack);
    __twr_v1056 = 2ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1054)(__twr_v1055, __twr_v1056);
    goto __twr_l261;
    __twr_l263:;
    __twr_v1057 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1058 = (uint64_t)(&LexIfStack);
    __twr_v1059 = 1ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1057)(__twr_v1058, __twr_v1059);
    __twr_v1060 = (uint64_t)(&LexFalseCount);
    __twr_v1061 = *(uint32_t*)(__twr_v1060);
    __twr_v1062 = __twr_v1061 + __twr_v1059;
    *(uint32_t*)(__twr_v1060) = __twr_v1062;
    __twr_l261:;
    __twr_l258:;
    _jkl_epilogue:;
}
void LexParseElse() {
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    uint64_t __twr_v1074;
    uint64_t __twr_v1075;
    uint64_t __twr_v1076;
    uint64_t _mng_status1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    uint64_t __twr_v1087;
    uint64_t __twr_v1088;
    uint64_t __twr_v1089;
    uint64_t __twr_v1090;
    uint64_t __twr_v1091;
    uint64_t __twr_v1092;
    uint64_t __twr_v1093;
    uint64_t __twr_v1094;
    uint64_t __twr_v1095;
    uint64_t __twr_v1096;
    uint64_t __twr_v1097;
    uint64_t __twr_v1098;
    uint64_t __twr_v1099;
    uint64_t __twr_v1100;
    uint64_t __twr_v1101;
    uint64_t __twr_v1102;
    __twr_v1063 = (uint64_t)(&LexIfStack);
    __twr_v1064 = *(uint64_t*)(__twr_v1063);
    if (__twr_v1064) { goto __twr_l265; } else { goto __twr_l266; }
    __twr_l266:;
    __twr_v1065 = (uint64_t)(&LexStreamError);
    __twr_v1066 = (uint64_t)(&"ELSE with no matching IF");
    __twr_v1067 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1065)(__twr_v1066, __twr_v1067, __twr_v1067, __twr_v1067);
    __twr_l265:;
    __twr_v1068 = (uint64_t)(&LexIfStack);
    __twr_v1069 = 16ULL;
    __twr_v1070 = __twr_v1068 + __twr_v1069;
    __twr_v1071 = *(uint64_t*)(__twr_v1070);
    __twr_v1072 = *(uint64_t*)(__twr_v1068);
    __twr_v1073 = 1ULL;
    __twr_v1074 = __twr_v1072 - __twr_v1073;
    __twr_v1075 = __twr_v1071 + __twr_v1074;
    __twr_v1076 = *(uint8_t*)(__twr_v1075);
    _mng_status1077 = __twr_v1076;
    if (_mng_status1077) { goto __twr_l267; } else { goto __twr_l268; }
    __twr_l268:;
    goto _jkl_epilogue;
    __twr_l267:;
    __twr_v1078 = 2ULL;
    if (_mng_status1077 != __twr_v1078) { goto __twr_l269; } else { goto __twr_l270; }
    __twr_l270:;
    __twr_v1079 = 0ULL;
    __twr_v1080 = (uint64_t)(&LexIfStack);
    __twr_v1081 = 16ULL;
    __twr_v1082 = __twr_v1080 + __twr_v1081;
    __twr_v1083 = *(uint64_t*)(__twr_v1082);
    __twr_v1084 = *(uint64_t*)(__twr_v1080);
    __twr_v1085 = 1ULL;
    __twr_v1086 = __twr_v1084 - __twr_v1085;
    __twr_v1087 = __twr_v1083 + __twr_v1086;
    *(uint8_t*)(__twr_v1087) = __twr_v1079;
    __twr_v1088 = (uint64_t)(&LexFalseCount);
    __twr_v1089 = *(uint32_t*)(__twr_v1088);
    __twr_v1090 = __twr_v1089 + __twr_v1085;
    *(uint32_t*)(__twr_v1088) = __twr_v1090;
    goto _jkl_epilogue;
    __twr_l269:;
    __twr_v1091 = 2ULL;
    __twr_v1092 = (uint64_t)(&LexIfStack);
    __twr_v1093 = 16ULL;
    __twr_v1094 = __twr_v1092 + __twr_v1093;
    __twr_v1095 = *(uint64_t*)(__twr_v1094);
    __twr_v1096 = *(uint64_t*)(__twr_v1092);
    __twr_v1097 = 1ULL;
    __twr_v1098 = __twr_v1096 - __twr_v1097;
    __twr_v1099 = __twr_v1095 + __twr_v1098;
    *(uint8_t*)(__twr_v1099) = __twr_v1091;
    __twr_v1100 = (uint64_t)(&LexFalseCount);
    __twr_v1101 = *(uint32_t*)(__twr_v1100);
    __twr_v1102 = __twr_v1101 - __twr_v1097;
    *(uint32_t*)(__twr_v1100) = __twr_v1102;
    __twr_l264:;
    _jkl_epilogue:;
}
void LexParseElseif() {
    uint64_t __twr_v1103;
    uint64_t __twr_v1104;
    uint64_t __twr_v1105;
    uint64_t __twr_v1106;
    uint64_t __twr_v1107;
    uint64_t __twr_v1108;
    uint64_t __twr_v1109;
    uint64_t __twr_v1110;
    uint64_t __twr_v1111;
    uint64_t __twr_v1112;
    uint64_t __twr_v1113;
    uint64_t __twr_v1114;
    uint64_t __twr_v1115;
    uint64_t __twr_v1116;
    uint64_t _mng_status1117;
    uint64_t __twr_v1118;
    uint64_t __twr_v1119;
    uint64_t _mng_token1120[4];
    uint64_t __twr_v1121;
    uint64_t __twr_v1122;
    uint64_t __twr_v1123;
    uint64_t __twr_v1124;
    uint64_t __twr_v1125;
    uint64_t __twr_v1126;
    uint64_t __twr_v1127;
    uint64_t __twr_v1128;
    uint64_t __twr_v1129;
    uint64_t __twr_v1130;
    uint64_t __twr_v1131;
    uint64_t __twr_v1132;
    uint64_t __twr_v1133;
    uint64_t __twr_v1134;
    uint64_t __twr_v1135;
    uint64_t __twr_v1136;
    uint64_t __twr_v1137;
    uint64_t __twr_v1138;
    uint64_t __twr_v1139;
    uint64_t __twr_v1140;
    uint64_t __twr_v1141;
    uint64_t __twr_v1142;
    uint64_t _mng_truthy1143;
    uint64_t __twr_v1144;
    uint64_t __twr_v1145;
    uint64_t __twr_v1146;
    uint64_t __twr_v1147;
    uint64_t __twr_v1148;
    uint64_t __twr_v1149;
    uint64_t __twr_v1150;
    uint64_t __twr_v1151;
    uint64_t __twr_v1152;
    uint64_t __twr_v1153;
    uint64_t __twr_v1154;
    uint64_t __twr_v1155;
    __twr_v1103 = (uint64_t)(&LexIfStack);
    __twr_v1104 = *(uint64_t*)(__twr_v1103);
    if (__twr_v1104) { goto __twr_l272; } else { goto __twr_l273; }
    __twr_l273:;
    __twr_v1105 = (uint64_t)(&LexStreamError);
    __twr_v1106 = (uint64_t)(&"ELSEIF with no matching IF");
    __twr_v1107 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1105)(__twr_v1106, __twr_v1107, __twr_v1107, __twr_v1107);
    __twr_l272:;
    __twr_v1108 = (uint64_t)(&LexIfStack);
    __twr_v1109 = 16ULL;
    __twr_v1110 = __twr_v1108 + __twr_v1109;
    __twr_v1111 = *(uint64_t*)(__twr_v1110);
    __twr_v1112 = *(uint64_t*)(__twr_v1108);
    __twr_v1113 = 1ULL;
    __twr_v1114 = __twr_v1112 - __twr_v1113;
    __twr_v1115 = __twr_v1111 + __twr_v1114;
    __twr_v1116 = *(uint8_t*)(__twr_v1115);
    _mng_status1117 = __twr_v1116;
    if (_mng_status1117) { goto __twr_l274; } else { goto __twr_l275; }
    __twr_l275:;
    __twr_v1118 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1119 = (uint64_t)(&_mng_token1120);
    __twr_v1121 = 1ULL;
    __twr_v1122 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1118)(__twr_v1119, __twr_v1121);
    goto _jkl_epilogue;
    __twr_l274:;
    __twr_v1123 = 2ULL;
    if (_mng_status1117 != __twr_v1123) { goto __twr_l276; } else { goto __twr_l277; }
    __twr_l277:;
    __twr_v1124 = 0ULL;
    __twr_v1125 = (uint64_t)(&LexIfStack);
    __twr_v1126 = 16ULL;
    __twr_v1127 = __twr_v1125 + __twr_v1126;
    __twr_v1128 = *(uint64_t*)(__twr_v1127);
    __twr_v1129 = *(uint64_t*)(__twr_v1125);
    __twr_v1130 = 1ULL;
    __twr_v1131 = __twr_v1129 - __twr_v1130;
    __twr_v1132 = __twr_v1128 + __twr_v1131;
    *(uint8_t*)(__twr_v1132) = __twr_v1124;
    __twr_v1133 = (uint64_t)(&LexFalseCount);
    __twr_v1134 = *(uint32_t*)(__twr_v1133);
    __twr_v1135 = __twr_v1134 + __twr_v1130;
    *(uint32_t*)(__twr_v1133) = __twr_v1135;
    __twr_v1136 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1137 = (uint64_t)(&_mng_token1120);
    __twr_v1138 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1136)(__twr_v1137, __twr_v1130);
    goto _jkl_epilogue;
    __twr_l276:;
    __twr_v1139 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1140 = (uint64_t)(&_mng_token1120);
    __twr_v1141 = 0ULL;
    __twr_v1142 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1139)(__twr_v1140, __twr_v1141);
    _mng_truthy1143 = __twr_v1142;
    if (!(_mng_truthy1143)) { goto __twr_l278; } else { goto __twr_l279; }
    __twr_l279:;
    __twr_v1144 = 2ULL;
    __twr_v1145 = (uint64_t)(&LexIfStack);
    __twr_v1146 = 16ULL;
    __twr_v1147 = __twr_v1145 + __twr_v1146;
    __twr_v1148 = *(uint64_t*)(__twr_v1147);
    __twr_v1149 = *(uint64_t*)(__twr_v1145);
    __twr_v1150 = 1ULL;
    __twr_v1151 = __twr_v1149 - __twr_v1150;
    __twr_v1152 = __twr_v1148 + __twr_v1151;
    *(uint8_t*)(__twr_v1152) = __twr_v1144;
    __twr_v1153 = (uint64_t)(&LexFalseCount);
    __twr_v1154 = *(uint32_t*)(__twr_v1153);
    __twr_v1155 = __twr_v1154 - __twr_v1150;
    *(uint32_t*)(__twr_v1153) = __twr_v1155;
    __twr_l278:;
    __twr_l271:;
    _jkl_epilogue:;
}
void LexParseEnd() {
    uint64_t __twr_v1156;
    uint64_t __twr_v1157;
    uint64_t __twr_v1158;
    uint64_t __twr_v1159;
    uint64_t __twr_v1160;
    uint64_t __twr_v1161;
    uint64_t __twr_v1162;
    uint64_t __twr_v1163;
    uint64_t _mng_status1164;
    uint64_t __twr_v1165;
    uint64_t __twr_v1166;
    uint64_t __twr_v1167;
    uint64_t __twr_v1168;
    uint64_t __twr_v1169;
    __twr_v1156 = (uint64_t)(&LexIfStack);
    __twr_v1157 = *(uint64_t*)(__twr_v1156);
    if (__twr_v1157) { goto __twr_l281; } else { goto __twr_l282; }
    __twr_l282:;
    __twr_v1158 = (uint64_t)(&LexStreamError);
    __twr_v1159 = (uint64_t)(&"END with no matching IF");
    __twr_v1160 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1158)(__twr_v1159, __twr_v1160, __twr_v1160, __twr_v1160);
    __twr_l281:;
    __twr_v1161 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1162 = (uint64_t)(&LexIfStack);
    __twr_v1163 = ((uint64_t (*)(uint64_t))__twr_v1161)(__twr_v1162);
    _mng_status1164 = __twr_v1163;
    if (!(_mng_status1164)) { goto __twr_l284; } else { goto __twr_l285; }
    __twr_l285:;
    __twr_v1165 = 1ULL;
    if (_mng_status1164 != __twr_v1165) { goto __twr_l283; } else { goto __twr_l284; }
    __twr_l284:;
    __twr_v1166 = 1ULL;
    __twr_v1167 = (uint64_t)(&LexFalseCount);
    __twr_v1168 = *(uint32_t*)(__twr_v1167);
    __twr_v1169 = __twr_v1168 - __twr_v1166;
    *(uint32_t*)(__twr_v1167) = __twr_v1169;
    goto _jkl_epilogue;
    __twr_l283:;
    __twr_l280:;
    _jkl_epilogue:;
}
void LexParseError() {
    uint64_t __twr_v1170;
    uint64_t __twr_v1171;
    uint64_t _mng_buffer1172[11];
    uint64_t __twr_v1173;
    uint64_t __twr_v1174;
    uint64_t _mng_token1175[4];
    uint64_t __twr_v1176;
    uint64_t __twr_v1177;
    uint64_t __twr_v1178;
    uint64_t __twr_v1179;
    uint64_t __twr_v1180;
    uint64_t __twr_v1181;
    uint64_t __twr_v1182;
    uint64_t __twr_v1183;
    uint64_t __twr_v1184;
    uint64_t __twr_v1185;
    uint64_t __twr_v1186;
    uint64_t __twr_v1187;
    uint64_t __twr_v1188;
    uint64_t __twr_v1189;
    __twr_v1170 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1171 = (uint64_t)(&_mng_buffer1172);
    ((void (*)(uint64_t))__twr_v1170)(__twr_v1171);
    __twr_v1173 = (uint64_t)(&LexCollectValue);
    __twr_v1174 = (uint64_t)(&_mng_token1175);
    __twr_v1176 = (uint64_t)(&LexFalseCount);
    __twr_v1177 = *(uint32_t*)(__twr_v1176);
    __twr_v1178 = 0ULL;
    __twr_v1179 = (__twr_v1177 != __twr_v1178);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1173)(__twr_v1174, __twr_v1171, __twr_v1179);
    __twr_v1180 = *(uint32_t*)(__twr_v1176);
    if (!(__twr_v1180)) { goto __twr_l287; } else { goto __twr_l288; }
    __twr_l288:;
    __twr_v1181 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1182 = (uint64_t)(&_mng_buffer1172);
    ((void (*)(uint64_t))__twr_v1181)(__twr_v1182);
    goto _jkl_epilogue;
    __twr_l287:;
    __twr_v1183 = (uint64_t)(&LexTokenError);
    __twr_v1184 = (uint64_t)(&_mng_token1175);
    __twr_v1185 = (uint64_t)(&_mng_buffer1172);
    __twr_v1186 = 16ULL;
    __twr_v1187 = __twr_v1185 + __twr_v1186;
    __twr_v1188 = *(uint64_t*)(__twr_v1187);
    __twr_v1189 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1183)(__twr_v1184, __twr_v1188, __twr_v1189, __twr_v1189, __twr_v1189);
    __twr_l286:;
    _jkl_epilogue:;
}
void LexParsePrint() {
    uint64_t __twr_v1190;
    uint64_t __twr_v1191;
    uint64_t _mng_buffer1192[11];
    uint64_t __twr_v1193;
    uint64_t __twr_v1194;
    uint64_t _mng_token1195[4];
    uint64_t __twr_v1196;
    uint64_t __twr_v1197;
    uint64_t __twr_v1198;
    uint64_t __twr_v1199;
    uint64_t __twr_v1200;
    uint64_t __twr_v1201;
    uint64_t __twr_v1202;
    uint64_t __twr_v1203;
    uint64_t __twr_v1204;
    uint64_t __twr_v1205;
    uint64_t __twr_v1206;
    uint64_t __twr_v1207;
    uint64_t __twr_v1208;
    uint64_t __twr_v1209;
    __twr_v1190 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1191 = (uint64_t)(&_mng_buffer1192);
    ((void (*)(uint64_t))__twr_v1190)(__twr_v1191);
    __twr_v1193 = (uint64_t)(&LexCollectValue);
    __twr_v1194 = (uint64_t)(&_mng_token1195);
    __twr_v1196 = (uint64_t)(&LexFalseCount);
    __twr_v1197 = *(uint32_t*)(__twr_v1196);
    __twr_v1198 = 0ULL;
    __twr_v1199 = (__twr_v1197 != __twr_v1198);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1193)(__twr_v1194, __twr_v1191, __twr_v1199);
    __twr_v1200 = *(uint32_t*)(__twr_v1196);
    if (!(__twr_v1200)) { goto __twr_l290; } else { goto __twr_l291; }
    __twr_l291:;
    __twr_v1201 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1202 = (uint64_t)(&_mng_buffer1192);
    ((void (*)(uint64_t))__twr_v1201)(__twr_v1202);
    goto _jkl_epilogue;
    __twr_l290:;
    __twr_v1203 = (uint64_t)(&TlPrintString);
    __twr_v1204 = (uint64_t)(&_mng_buffer1192);
    __twr_v1205 = 16ULL;
    __twr_v1206 = __twr_v1204 + __twr_v1205;
    __twr_v1207 = *(uint64_t*)(__twr_v1206);
    ((void (*)(uint64_t))__twr_v1203)(__twr_v1207);
    __twr_v1208 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v1203)(__twr_v1208);
    __twr_v1209 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1209)(__twr_v1204);
    __twr_l289:;
    _jkl_epilogue:;
}
void LexParseAsm() {
    uint64_t __twr_v1210;
    uint64_t __twr_v1211;
    uint64_t __twr_v1212;
    uint64_t __twr_v1213;
    uint64_t _mng_buffer1214[11];
    uint64_t __twr_v1215;
    uint64_t __twr_v1216;
    uint64_t _mng_token1217[4];
    uint64_t __twr_v1218;
    uint64_t __twr_v1219;
    uint64_t __twr_v1220;
    uint64_t __twr_v1221;
    uint64_t __twr_v1222;
    uint64_t _mng_asmblock1223;
    uint64_t _mng_status1224;
    uint64_t __twr_v1225;
    uint64_t __twr_v1226;
    uint64_t __twr_v1227;
    uint64_t __twr_v1228;
    uint64_t __twr_v1229;
    uint64_t __twr_v1230;
    uint64_t __twr_v1231;
    uint64_t __twr_v1232;
    uint64_t __twr_v1233;
    uint64_t __twr_v1234;
    uint64_t __twr_v1235;
    uint64_t __twr_v1236;
    uint64_t __twr_v1237;
    uint64_t __twr_v1238;
    uint64_t __twr_v1239;
    uint64_t __twr_v1240;
    uint64_t __twr_v1241;
    uint64_t __twr_v1242;
    uint64_t __twr_v1243;
    uint64_t __twr_v1244;
    uint64_t __twr_v1245;
    uint64_t __twr_v1246;
    uint64_t __twr_v1247;
    uint64_t __twr_v1248;
    uint64_t __twr_v1249;
    uint64_t __twr_v1250;
    uint64_t __twr_v1251;
    __twr_v1210 = (uint64_t)(&LexFalseCount);
    __twr_v1211 = *(uint32_t*)(__twr_v1210);
    if (!(__twr_v1211)) { goto __twr_l293; } else { goto __twr_l294; }
    __twr_l294:;
    __twr_v1212 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1213 = (uint64_t)(&_mng_buffer1214);
    ((void (*)(uint64_t))__twr_v1212)(__twr_v1213);
    __twr_v1215 = (uint64_t)(&LexCollectValue);
    __twr_v1216 = (uint64_t)(&_mng_token1217);
    __twr_v1218 = 1ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1215)(__twr_v1216, __twr_v1213, __twr_v1218);
    __twr_v1219 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1219)(__twr_v1213);
    goto _jkl_epilogue;
    __twr_l293:;
    __twr_v1220 = (uint64_t)(&TlBumpAlloc);
    __twr_v1221 = 136ULL;
    __twr_v1222 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1220)(__twr_v1221, (uint64_t)(&_mng_asmblock1223));
    _mng_status1224 = __twr_v1222;
    if (!(_mng_status1224)) { goto __twr_l295; } else { goto __twr_l296; }
    __twr_l296:;
    __twr_v1225 = (uint64_t)(&TlInternalError);
    __twr_v1226 = (uint64_t)(&"Failed to allocate asm block");
    __twr_v1227 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1225)(__twr_v1226, __twr_v1227, __twr_v1227, __twr_v1227);
    __twr_l295:;
    __twr_v1228 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1229 = 48ULL;
    __twr_v1230 = _mng_asmblock1223 + __twr_v1229;
    ((void (*)(uint64_t))__twr_v1228)(__twr_v1230);
    __twr_v1231 = (uint64_t)(&LexCollectValue);
    __twr_v1232 = 16ULL;
    __twr_v1233 = _mng_asmblock1223 + __twr_v1232;
    __twr_v1234 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1231)(__twr_v1233, __twr_v1230, __twr_v1234);
    __twr_v1235 = (uint64_t)(&LexCurrentSection);
    __twr_v1236 = *(uint64_t*)(__twr_v1235);
    __twr_v1237 = (uint64_t)(&LexDefaultSection);
    if (__twr_v1236 != __twr_v1237) { goto __twr_l299; } else { goto __twr_l298; }
    __twr_l298:;
    __twr_v1238 = (uint64_t)(&LexTextSection);
    __twr_v1239 = 8ULL;
    __twr_v1240 = _mng_asmblock1223 + __twr_v1239;
    *(uint64_t*)(__twr_v1240) = __twr_v1238;
    goto __twr_l297;
    __twr_l299:;
    __twr_v1241 = (uint64_t)(&LexCurrentSection);
    __twr_v1242 = *(uint64_t*)(__twr_v1241);
    __twr_v1243 = 8ULL;
    __twr_v1244 = _mng_asmblock1223 + __twr_v1243;
    *(uint64_t*)(__twr_v1244) = __twr_v1242;
    __twr_l297:;
    __twr_v1245 = 0ULL;
    *(uint64_t*)(_mng_asmblock1223) = __twr_v1245;
    __twr_v1246 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1247 = *(uint64_t*)(__twr_v1246);
    if (__twr_v1247) { goto __twr_l302; } else { goto __twr_l301; }
    __twr_l301:;
    __twr_v1248 = (uint64_t)(&LexAsmBlockListHead);
    *(uint64_t*)(__twr_v1248) = _mng_asmblock1223;
    goto __twr_l300;
    __twr_l302:;
    __twr_v1249 = (uint64_t)(&LexAsmBlockListTail);
    __twr_v1250 = *(uint64_t*)(__twr_v1249);
    *(uint64_t*)(__twr_v1250) = _mng_asmblock1223;
    __twr_l300:;
    __twr_v1251 = (uint64_t)(&LexAsmBlockListTail);
    *(uint64_t*)(__twr_v1251) = _mng_asmblock1223;
    __twr_l292:;
    _jkl_epilogue:;
}
void LexParseSection() {
    uint64_t __twr_v1252;
    uint64_t __twr_v1253;
    uint64_t _mng_str1254[11];
    uint64_t __twr_v1255;
    uint64_t __twr_v1256;
    uint64_t _mng_token1257[4];
    uint64_t __twr_v1258;
    uint64_t __twr_v1259;
    uint64_t __twr_v1260;
    uint64_t __twr_v1261;
    uint64_t __twr_v1262;
    uint64_t __twr_v1263;
    uint64_t __twr_v1264;
    uint64_t __twr_v1265;
    uint64_t __twr_v1266;
    uint64_t __twr_v1267;
    uint64_t __twr_v1268;
    uint64_t __twr_v1269;
    uint64_t __twr_v1270;
    uint64_t __twr_v1271;
    uint64_t __twr_v1272;
    uint64_t __twr_v1273;
    uint64_t __twr_v1274;
    uint64_t _mng_section1275;
    uint64_t __twr_v1276;
    uint64_t __twr_v1277;
    __twr_v1252 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1253 = (uint64_t)(&_mng_str1254);
    ((void (*)(uint64_t))__twr_v1252)(__twr_v1253);
    __twr_v1255 = (uint64_t)(&LexCollectString);
    __twr_v1256 = (uint64_t)(&_mng_token1257);
    ((void (*)(uint64_t, uint64_t))__twr_v1255)(__twr_v1256, __twr_v1253);
    __twr_v1258 = (uint64_t)(&LexFalseCount);
    __twr_v1259 = *(uint32_t*)(__twr_v1258);
    if (!(__twr_v1259)) { goto __twr_l304; } else { goto __twr_l305; }
    __twr_l305:;
    __twr_v1260 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1261 = (uint64_t)(&_mng_str1254);
    ((void (*)(uint64_t))__twr_v1260)(__twr_v1261);
    goto _jkl_epilogue;
    __twr_l304:;
    __twr_v1262 = (uint64_t)(&_mng_str1254);
    __twr_v1263 = *(uint64_t*)(__twr_v1262);
    __twr_v1264 = 63ULL;
    if (__twr_v1263 < __twr_v1264) { goto __twr_l306; } else { goto __twr_l307; }
    __twr_l307:;
    __twr_v1265 = (uint64_t)(&LexTokenError);
    __twr_v1266 = (uint64_t)(&_mng_token1257);
    __twr_v1267 = (uint64_t)(&"Section name too long");
    __twr_v1268 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1265)(__twr_v1266, __twr_v1267, __twr_v1268, __twr_v1268, __twr_v1268);
    __twr_l306:;
    __twr_v1269 = (uint64_t)(&LexLookupSection);
    __twr_v1270 = (uint64_t)(&_mng_str1254);
    __twr_v1271 = 16ULL;
    __twr_v1272 = __twr_v1270 + __twr_v1271;
    __twr_v1273 = *(uint64_t*)(__twr_v1272);
    __twr_v1274 = ((uint64_t (*)(uint64_t))__twr_v1269)(__twr_v1273);
    _mng_section1275 = __twr_v1274;
    __twr_v1276 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1276)(__twr_v1270);
    __twr_v1277 = (uint64_t)(&LexNextSymbolSection);
    *(uint64_t*)(__twr_v1277) = _mng_section1275;
    __twr_l303:;
    _jkl_epilogue:;
}
void LexParseEnterSection() {
    uint64_t __twr_v1278;
    uint64_t __twr_v1279;
    uint64_t _mng_str1280[11];
    uint64_t __twr_v1281;
    uint64_t __twr_v1282;
    uint64_t _mng_token1283[4];
    uint64_t __twr_v1284;
    uint64_t __twr_v1285;
    uint64_t __twr_v1286;
    uint64_t __twr_v1287;
    uint64_t __twr_v1288;
    uint64_t __twr_v1289;
    uint64_t __twr_v1290;
    uint64_t __twr_v1291;
    uint64_t __twr_v1292;
    uint64_t __twr_v1293;
    uint64_t __twr_v1294;
    uint64_t __twr_v1295;
    uint64_t __twr_v1296;
    uint64_t __twr_v1297;
    uint64_t __twr_v1298;
    uint64_t __twr_v1299;
    uint64_t __twr_v1300;
    uint64_t _mng_section1301;
    uint64_t __twr_v1302;
    uint64_t __twr_v1303;
    __twr_v1278 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1279 = (uint64_t)(&_mng_str1280);
    ((void (*)(uint64_t))__twr_v1278)(__twr_v1279);
    __twr_v1281 = (uint64_t)(&LexCollectString);
    __twr_v1282 = (uint64_t)(&_mng_token1283);
    ((void (*)(uint64_t, uint64_t))__twr_v1281)(__twr_v1282, __twr_v1279);
    __twr_v1284 = (uint64_t)(&LexFalseCount);
    __twr_v1285 = *(uint32_t*)(__twr_v1284);
    if (!(__twr_v1285)) { goto __twr_l309; } else { goto __twr_l310; }
    __twr_l310:;
    __twr_v1286 = (uint64_t)(&TlUninitializeDynamicBuffer);
    __twr_v1287 = (uint64_t)(&_mng_str1280);
    ((void (*)(uint64_t))__twr_v1286)(__twr_v1287);
    goto _jkl_epilogue;
    __twr_l309:;
    __twr_v1288 = (uint64_t)(&_mng_str1280);
    __twr_v1289 = *(uint64_t*)(__twr_v1288);
    __twr_v1290 = 63ULL;
    if (__twr_v1289 < __twr_v1290) { goto __twr_l311; } else { goto __twr_l312; }
    __twr_l312:;
    __twr_v1291 = (uint64_t)(&LexTokenError);
    __twr_v1292 = (uint64_t)(&_mng_token1283);
    __twr_v1293 = (uint64_t)(&"Section name too long");
    __twr_v1294 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1291)(__twr_v1292, __twr_v1293, __twr_v1294, __twr_v1294, __twr_v1294);
    __twr_l311:;
    __twr_v1295 = (uint64_t)(&LexLookupSection);
    __twr_v1296 = (uint64_t)(&_mng_str1280);
    __twr_v1297 = 16ULL;
    __twr_v1298 = __twr_v1296 + __twr_v1297;
    __twr_v1299 = *(uint64_t*)(__twr_v1298);
    __twr_v1300 = ((uint64_t (*)(uint64_t))__twr_v1295)(__twr_v1299);
    _mng_section1301 = __twr_v1300;
    __twr_v1302 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1302)(__twr_v1296);
    __twr_v1303 = (uint64_t)(&LexPushSection);
    ((void (*)(uint64_t))__twr_v1303)(_mng_section1301);
    __twr_l308:;
    _jkl_epilogue:;
}
void LexParseLeaveSection() {
    uint64_t __twr_v1304;
    uint64_t __twr_v1305;
    uint64_t _mng_popped1306;
    uint64_t __twr_v1307;
    uint64_t __twr_v1308;
    uint64_t __twr_v1309;
    uint64_t __twr_v1310;
    __twr_v1304 = (uint64_t)(&LexPopSection);
    __twr_v1305 = ((uint64_t (*)())__twr_v1304)();
    _mng_popped1306 = __twr_v1305;
    if (_mng_popped1306) { goto __twr_l314; } else { goto __twr_l315; }
    __twr_l315:;
    __twr_v1307 = (uint64_t)(&LexTokenError);
    __twr_v1308 = (uint64_t)(&LexDirectiveToken);
    __twr_v1309 = (uint64_t)(&"Section stack was empty");
    __twr_v1310 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1307)(__twr_v1308, __twr_v1309, __twr_v1310, __twr_v1310, __twr_v1310);
    __twr_l314:;
    __twr_l313:;
    _jkl_epilogue:;
}
void LexOperatorEquals(uint64_t _mng_buffer1311, uint64_t _mng_ignore1312) {
    uint64_t __twr_v1313;
    uint64_t __twr_v1314;
    uint64_t _mng_token1315[4];
    uint64_t __twr_v1316;
    uint64_t _mng_num11317;
    uint64_t __twr_v1318;
    uint64_t _mng_num21319;
    uint64_t __twr_v1320;
    uint64_t __twr_v1321;
    uint64_t __twr_v1322;
    uint64_t __twr_v1323;
    uint64_t __twr_v1324;
    uint64_t __twr_v1325;
    __twr_v1313 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1314 = (uint64_t)(&_mng_token1315);
    __twr_v1316 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1313)(__twr_v1314, _mng_ignore1312);
    _mng_num11317 = __twr_v1316;
    __twr_v1318 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1313)(__twr_v1314, _mng_ignore1312);
    _mng_num21319 = __twr_v1318;
    __twr_v1320 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1320)();
    __twr_v1321 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1322 = (_mng_num11317 == _mng_num21319);
    __twr_v1323 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1321)(_mng_buffer1311, __twr_v1322, __twr_v1323);
    __twr_v1324 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1325 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1324)(_mng_buffer1311, __twr_v1325);
    __twr_l316:;
    _jkl_epilogue:;
}
void LexOperatorLteq(uint64_t _mng_buffer1326, uint64_t _mng_ignore1327) {
    uint64_t __twr_v1328;
    uint64_t __twr_v1329;
    uint64_t _mng_token1330[4];
    uint64_t __twr_v1331;
    uint64_t _mng_num11332;
    uint64_t __twr_v1333;
    uint64_t _mng_num21334;
    uint64_t __twr_v1335;
    uint64_t __twr_v1336;
    uint64_t __twr_v1337;
    uint64_t __twr_v1338;
    uint64_t __twr_v1339;
    uint64_t __twr_v1340;
    __twr_v1328 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1329 = (uint64_t)(&_mng_token1330);
    __twr_v1331 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1328)(__twr_v1329, _mng_ignore1327);
    _mng_num11332 = __twr_v1331;
    __twr_v1333 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1328)(__twr_v1329, _mng_ignore1327);
    _mng_num21334 = __twr_v1333;
    __twr_v1335 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1335)();
    __twr_v1336 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1337 = (_mng_num11332 <= _mng_num21334);
    __twr_v1338 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1336)(_mng_buffer1326, __twr_v1337, __twr_v1338);
    __twr_v1339 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1340 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1339)(_mng_buffer1326, __twr_v1340);
    __twr_l317:;
    _jkl_epilogue:;
}
void LexOperatorGteq(uint64_t _mng_buffer1341, uint64_t _mng_ignore1342) {
    uint64_t __twr_v1343;
    uint64_t __twr_v1344;
    uint64_t _mng_token1345[4];
    uint64_t __twr_v1346;
    uint64_t _mng_num11347;
    uint64_t __twr_v1348;
    uint64_t _mng_num21349;
    uint64_t __twr_v1350;
    uint64_t __twr_v1351;
    uint64_t __twr_v1352;
    uint64_t __twr_v1353;
    uint64_t __twr_v1354;
    uint64_t __twr_v1355;
    __twr_v1343 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1344 = (uint64_t)(&_mng_token1345);
    __twr_v1346 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1343)(__twr_v1344, _mng_ignore1342);
    _mng_num11347 = __twr_v1346;
    __twr_v1348 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1343)(__twr_v1344, _mng_ignore1342);
    _mng_num21349 = __twr_v1348;
    __twr_v1350 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1350)();
    __twr_v1351 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1352 = (_mng_num11347 >= _mng_num21349);
    __twr_v1353 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1351)(_mng_buffer1341, __twr_v1352, __twr_v1353);
    __twr_v1354 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1355 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1354)(_mng_buffer1341, __twr_v1355);
    __twr_l318:;
    _jkl_epilogue:;
}
void LexOperatorNeq(uint64_t _mng_buffer1356, uint64_t _mng_ignore1357) {
    uint64_t __twr_v1358;
    uint64_t __twr_v1359;
    uint64_t _mng_token1360[4];
    uint64_t __twr_v1361;
    uint64_t _mng_num11362;
    uint64_t __twr_v1363;
    uint64_t _mng_num21364;
    uint64_t __twr_v1365;
    uint64_t __twr_v1366;
    uint64_t __twr_v1367;
    uint64_t __twr_v1368;
    uint64_t __twr_v1369;
    uint64_t __twr_v1370;
    __twr_v1358 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1359 = (uint64_t)(&_mng_token1360);
    __twr_v1361 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1358)(__twr_v1359, _mng_ignore1357);
    _mng_num11362 = __twr_v1361;
    __twr_v1363 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1358)(__twr_v1359, _mng_ignore1357);
    _mng_num21364 = __twr_v1363;
    __twr_v1365 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1365)();
    __twr_v1366 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1367 = (_mng_num11362 != _mng_num21364);
    __twr_v1368 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1366)(_mng_buffer1356, __twr_v1367, __twr_v1368);
    __twr_v1369 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1370 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1369)(_mng_buffer1356, __twr_v1370);
    __twr_l319:;
    _jkl_epilogue:;
}
void LexOperatorLt(uint64_t _mng_buffer1371, uint64_t _mng_ignore1372) {
    uint64_t __twr_v1373;
    uint64_t __twr_v1374;
    uint64_t _mng_token1375[4];
    uint64_t __twr_v1376;
    uint64_t _mng_num11377;
    uint64_t __twr_v1378;
    uint64_t _mng_num21379;
    uint64_t __twr_v1380;
    uint64_t __twr_v1381;
    uint64_t __twr_v1382;
    uint64_t __twr_v1383;
    uint64_t __twr_v1384;
    uint64_t __twr_v1385;
    __twr_v1373 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1374 = (uint64_t)(&_mng_token1375);
    __twr_v1376 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1373)(__twr_v1374, _mng_ignore1372);
    _mng_num11377 = __twr_v1376;
    __twr_v1378 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1373)(__twr_v1374, _mng_ignore1372);
    _mng_num21379 = __twr_v1378;
    __twr_v1380 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1380)();
    __twr_v1381 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1382 = (_mng_num11377 < _mng_num21379);
    __twr_v1383 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1381)(_mng_buffer1371, __twr_v1382, __twr_v1383);
    __twr_v1384 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1385 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1384)(_mng_buffer1371, __twr_v1385);
    __twr_l320:;
    _jkl_epilogue:;
}
void LexOperatorGt(uint64_t _mng_buffer1386, uint64_t _mng_ignore1387) {
    uint64_t __twr_v1388;
    uint64_t __twr_v1389;
    uint64_t _mng_token1390[4];
    uint64_t __twr_v1391;
    uint64_t _mng_num11392;
    uint64_t __twr_v1393;
    uint64_t _mng_num21394;
    uint64_t __twr_v1395;
    uint64_t __twr_v1396;
    uint64_t __twr_v1397;
    uint64_t __twr_v1398;
    uint64_t __twr_v1399;
    uint64_t __twr_v1400;
    __twr_v1388 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1389 = (uint64_t)(&_mng_token1390);
    __twr_v1391 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1388)(__twr_v1389, _mng_ignore1387);
    _mng_num11392 = __twr_v1391;
    __twr_v1393 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1388)(__twr_v1389, _mng_ignore1387);
    _mng_num21394 = __twr_v1393;
    __twr_v1395 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1395)();
    __twr_v1396 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1397 = (_mng_num11392 > _mng_num21394);
    __twr_v1398 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1396)(_mng_buffer1386, __twr_v1397, __twr_v1398);
    __twr_v1399 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1400 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1399)(_mng_buffer1386, __twr_v1400);
    __twr_l321:;
    _jkl_epilogue:;
}
void LexOperatorAdd(uint64_t _mng_buffer1401, uint64_t _mng_ignore1402) {
    uint64_t __twr_v1403;
    uint64_t __twr_v1404;
    uint64_t _mng_token1405[4];
    uint64_t __twr_v1406;
    uint64_t _mng_num11407;
    uint64_t __twr_v1408;
    uint64_t _mng_num21409;
    uint64_t __twr_v1410;
    uint64_t __twr_v1411;
    uint64_t __twr_v1412;
    uint64_t __twr_v1413;
    uint64_t __twr_v1414;
    uint64_t __twr_v1415;
    __twr_v1403 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1404 = (uint64_t)(&_mng_token1405);
    __twr_v1406 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1403)(__twr_v1404, _mng_ignore1402);
    _mng_num11407 = __twr_v1406;
    __twr_v1408 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1403)(__twr_v1404, _mng_ignore1402);
    _mng_num21409 = __twr_v1408;
    __twr_v1410 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1410)();
    __twr_v1411 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1412 = _mng_num11407 + _mng_num21409;
    __twr_v1413 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1411)(_mng_buffer1401, __twr_v1412, __twr_v1413);
    __twr_v1414 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1415 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1414)(_mng_buffer1401, __twr_v1415);
    __twr_l322:;
    _jkl_epilogue:;
}
void LexOperatorSub(uint64_t _mng_buffer1416, uint64_t _mng_ignore1417) {
    uint64_t __twr_v1418;
    uint64_t __twr_v1419;
    uint64_t _mng_token1420[4];
    uint64_t __twr_v1421;
    uint64_t _mng_num11422;
    uint64_t __twr_v1423;
    uint64_t _mng_num21424;
    uint64_t __twr_v1425;
    uint64_t __twr_v1426;
    uint64_t __twr_v1427;
    uint64_t __twr_v1428;
    uint64_t __twr_v1429;
    uint64_t __twr_v1430;
    __twr_v1418 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1419 = (uint64_t)(&_mng_token1420);
    __twr_v1421 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1418)(__twr_v1419, _mng_ignore1417);
    _mng_num11422 = __twr_v1421;
    __twr_v1423 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1418)(__twr_v1419, _mng_ignore1417);
    _mng_num21424 = __twr_v1423;
    __twr_v1425 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1425)();
    __twr_v1426 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1427 = _mng_num11422 - _mng_num21424;
    __twr_v1428 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1426)(_mng_buffer1416, __twr_v1427, __twr_v1428);
    __twr_v1429 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1430 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1429)(_mng_buffer1416, __twr_v1430);
    __twr_l323:;
    _jkl_epilogue:;
}
void LexOperatorMul(uint64_t _mng_buffer1431, uint64_t _mng_ignore1432) {
    uint64_t __twr_v1433;
    uint64_t __twr_v1434;
    uint64_t _mng_token1435[4];
    uint64_t __twr_v1436;
    uint64_t _mng_num11437;
    uint64_t __twr_v1438;
    uint64_t _mng_num21439;
    uint64_t __twr_v1440;
    uint64_t __twr_v1441;
    uint64_t __twr_v1442;
    uint64_t __twr_v1443;
    uint64_t __twr_v1444;
    uint64_t __twr_v1445;
    __twr_v1433 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1434 = (uint64_t)(&_mng_token1435);
    __twr_v1436 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1433)(__twr_v1434, _mng_ignore1432);
    _mng_num11437 = __twr_v1436;
    __twr_v1438 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1433)(__twr_v1434, _mng_ignore1432);
    _mng_num21439 = __twr_v1438;
    __twr_v1440 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1440)();
    __twr_v1441 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1442 = _mng_num11437 * _mng_num21439;
    __twr_v1443 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1441)(_mng_buffer1431, __twr_v1442, __twr_v1443);
    __twr_v1444 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1445 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1444)(_mng_buffer1431, __twr_v1445);
    __twr_l324:;
    _jkl_epilogue:;
}
void LexOperatorDiv(uint64_t _mng_buffer1446, uint64_t _mng_ignore1447) {
    uint64_t __twr_v1448;
    uint64_t __twr_v1449;
    uint64_t _mng_token1450[4];
    uint64_t __twr_v1451;
    uint64_t _mng_num11452;
    uint64_t __twr_v1453;
    uint64_t _mng_num21454;
    uint64_t __twr_v1455;
    uint64_t __twr_v1456;
    uint64_t __twr_v1457;
    uint64_t __twr_v1458;
    uint64_t __twr_v1459;
    uint64_t __twr_v1460;
    __twr_v1448 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1449 = (uint64_t)(&_mng_token1450);
    __twr_v1451 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1448)(__twr_v1449, _mng_ignore1447);
    _mng_num11452 = __twr_v1451;
    __twr_v1453 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1448)(__twr_v1449, _mng_ignore1447);
    _mng_num21454 = __twr_v1453;
    __twr_v1455 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1455)();
    __twr_v1456 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1457 = _mng_num11452 / _mng_num21454;
    __twr_v1458 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1456)(_mng_buffer1446, __twr_v1457, __twr_v1458);
    __twr_v1459 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1460 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1459)(_mng_buffer1446, __twr_v1460);
    __twr_l325:;
    _jkl_epilogue:;
}
void LexOperatorLsh(uint64_t _mng_buffer1461, uint64_t _mng_ignore1462) {
    uint64_t __twr_v1463;
    uint64_t __twr_v1464;
    uint64_t _mng_token1465[4];
    uint64_t __twr_v1466;
    uint64_t _mng_num11467;
    uint64_t __twr_v1468;
    uint64_t _mng_num21469;
    uint64_t __twr_v1470;
    uint64_t __twr_v1471;
    uint64_t __twr_v1472;
    uint64_t __twr_v1473;
    uint64_t __twr_v1474;
    uint64_t __twr_v1475;
    __twr_v1463 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1464 = (uint64_t)(&_mng_token1465);
    __twr_v1466 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1463)(__twr_v1464, _mng_ignore1462);
    _mng_num11467 = __twr_v1466;
    __twr_v1468 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1463)(__twr_v1464, _mng_ignore1462);
    _mng_num21469 = __twr_v1468;
    __twr_v1470 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1470)();
    __twr_v1471 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1472 = _mng_num11467 << _mng_num21469;
    __twr_v1473 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1471)(_mng_buffer1461, __twr_v1472, __twr_v1473);
    __twr_v1474 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1475 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1474)(_mng_buffer1461, __twr_v1475);
    __twr_l326:;
    _jkl_epilogue:;
}
void LexOperatorRsh(uint64_t _mng_buffer1476, uint64_t _mng_ignore1477) {
    uint64_t __twr_v1478;
    uint64_t __twr_v1479;
    uint64_t _mng_token1480[4];
    uint64_t __twr_v1481;
    uint64_t _mng_num11482;
    uint64_t __twr_v1483;
    uint64_t _mng_num21484;
    uint64_t __twr_v1485;
    uint64_t __twr_v1486;
    uint64_t __twr_v1487;
    uint64_t __twr_v1488;
    uint64_t __twr_v1489;
    uint64_t __twr_v1490;
    __twr_v1478 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1479 = (uint64_t)(&_mng_token1480);
    __twr_v1481 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1478)(__twr_v1479, _mng_ignore1477);
    _mng_num11482 = __twr_v1481;
    __twr_v1483 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1478)(__twr_v1479, _mng_ignore1477);
    _mng_num21484 = __twr_v1483;
    __twr_v1485 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1485)();
    __twr_v1486 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1487 = _mng_num11482 >> _mng_num21484;
    __twr_v1488 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1486)(_mng_buffer1476, __twr_v1487, __twr_v1488);
    __twr_v1489 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1490 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1489)(_mng_buffer1476, __twr_v1490);
    __twr_l327:;
    _jkl_epilogue:;
}
void LexOperatorStrcat(uint64_t _mng_buffer1491, uint64_t _mng_ignore1492) {
    uint64_t __twr_v1493;
    uint64_t __twr_v1494;
    uint64_t _mng_token1495[4];
    uint64_t __twr_v1496;
    uint64_t __twr_v1497;
    uint64_t __twr_v1498;
    __twr_v1493 = (uint64_t)(&LexCollectValue);
    __twr_v1494 = (uint64_t)(&_mng_token1495);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1493)(__twr_v1494, _mng_buffer1491, _mng_ignore1492);
    __twr_v1496 = (uint64_t)(&TlPopDynamicBuffer);
    __twr_v1497 = ((uint64_t (*)(uint64_t))__twr_v1496)(_mng_buffer1491);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1493)(__twr_v1494, _mng_buffer1491, _mng_ignore1492);
    __twr_v1498 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1498)();
    __twr_l328:;
    _jkl_epilogue:;
}
void LexOperatorStrcmp(uint64_t _mng_buffer1499, uint64_t _mng_ignore1500) {
    uint64_t __twr_v1501;
    uint64_t __twr_v1502;
    uint64_t _mng_str11503[11];
    uint64_t __twr_v1504;
    uint64_t _mng_str21505[11];
    uint64_t __twr_v1506;
    uint64_t __twr_v1507;
    uint64_t _mng_token1508[4];
    uint64_t __twr_v1509;
    uint64_t __twr_v1510;
    uint64_t __twr_v1511;
    uint64_t __twr_v1512;
    uint64_t __twr_v1513;
    uint64_t __twr_v1514;
    uint64_t __twr_v1515;
    uint64_t __twr_v1516;
    uint64_t __twr_v1517;
    uint64_t __twr_v1518;
    uint64_t __twr_v1519;
    uint64_t __twr_v1520;
    uint64_t __twr_v1521;
    uint64_t __twr_v1522;
    __twr_v1501 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1502 = (uint64_t)(&_mng_str11503);
    ((void (*)(uint64_t))__twr_v1501)(__twr_v1502);
    __twr_v1504 = (uint64_t)(&_mng_str21505);
    ((void (*)(uint64_t))__twr_v1501)(__twr_v1504);
    __twr_v1506 = (uint64_t)(&LexCollectValue);
    __twr_v1507 = (uint64_t)(&_mng_token1508);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1506)(__twr_v1507, __twr_v1502, _mng_ignore1500);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1506)(__twr_v1507, __twr_v1504, _mng_ignore1500);
    __twr_v1509 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v1509)(__twr_v1502);
    ((void (*)(uint64_t))__twr_v1509)(__twr_v1504);
    __twr_v1510 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1510)();
    __twr_v1511 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1512 = (uint64_t)(&TlCompareString);
    __twr_v1513 = 16ULL;
    __twr_v1514 = __twr_v1502 + __twr_v1513;
    __twr_v1515 = *(uint64_t*)(__twr_v1514);
    __twr_v1516 = __twr_v1504 + __twr_v1513;
    __twr_v1517 = *(uint64_t*)(__twr_v1516);
    __twr_v1518 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1512)(__twr_v1515, __twr_v1517);
    __twr_v1519 = 0ULL;
    __twr_v1520 = (__twr_v1518 == __twr_v1519);
    __twr_v1521 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1511)(_mng_buffer1499, __twr_v1520, __twr_v1521);
    __twr_v1522 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1522)(_mng_buffer1499, __twr_v1519);
    __twr_l329:;
    _jkl_epilogue:;
}
void LexOperatorNot(uint64_t _mng_buffer1523, uint64_t _mng_ignore1524) {
    uint64_t __twr_v1525;
    uint64_t __twr_v1526;
    uint64_t _mng_token1527[4];
    uint64_t __twr_v1528;
    uint64_t _mng_num11529;
    uint64_t __twr_v1530;
    uint64_t __twr_v1531;
    uint64_t __twr_v1532;
    uint64_t __twr_v1533;
    uint64_t __twr_v1534;
    uint64_t __twr_v1535;
    __twr_v1525 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1526 = (uint64_t)(&_mng_token1527);
    __twr_v1528 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1525)(__twr_v1526, _mng_ignore1524);
    _mng_num11529 = __twr_v1528;
    __twr_v1530 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1530)();
    __twr_v1531 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1532 = !_mng_num11529;
    __twr_v1533 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1531)(_mng_buffer1523, __twr_v1532, __twr_v1533);
    __twr_v1534 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1535 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1534)(_mng_buffer1523, __twr_v1535);
    __twr_l330:;
    _jkl_epilogue:;
}
void LexOperatorOr(uint64_t _mng_buffer1536, uint64_t _mng_ignore1537) {
    uint64_t __twr_v1538;
    uint64_t __twr_v1539;
    uint64_t _mng_token1540[4];
    uint64_t __twr_v1541;
    uint64_t _mng_num11542;
    uint64_t __twr_v1543;
    uint64_t _mng_num21544;
    uint64_t __twr_v1545;
    uint64_t __twr_v1546;
    uint64_t __twr_v1547;
    uint64_t __twr_v1548;
    uint64_t __twr_v1549;
    uint64_t __twr_v1550;
    __twr_v1538 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1539 = (uint64_t)(&_mng_token1540);
    __twr_v1541 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1538)(__twr_v1539, _mng_ignore1537);
    _mng_num11542 = __twr_v1541;
    __twr_v1543 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1538)(__twr_v1539, _mng_ignore1537);
    _mng_num21544 = __twr_v1543;
    __twr_v1545 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1545)();
    __twr_v1546 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (_mng_num11542) { goto __twr_l333; } else { goto __twr_l332; }
    __twr_l332:;
    if (!(_mng_num21544)) { goto __twr_l334; } else { goto __twr_l333; }
    __twr_l333:;
    __twr_v1547 = 1ULL;
    goto __twr_l335;
    __twr_l334:;
    __twr_v1547 = 0ULL;
    __twr_l335:;
    __twr_v1548 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1546)(_mng_buffer1536, __twr_v1547, __twr_v1548);
    __twr_v1549 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1550 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1549)(_mng_buffer1536, __twr_v1550);
    __twr_l331:;
    _jkl_epilogue:;
}
void LexOperatorAnd(uint64_t _mng_buffer1551, uint64_t _mng_ignore1552) {
    uint64_t __twr_v1553;
    uint64_t __twr_v1554;
    uint64_t _mng_token1555[4];
    uint64_t __twr_v1556;
    uint64_t _mng_num11557;
    uint64_t __twr_v1558;
    uint64_t _mng_num21559;
    uint64_t __twr_v1560;
    uint64_t __twr_v1561;
    uint64_t __twr_v1562;
    uint64_t __twr_v1563;
    uint64_t __twr_v1564;
    uint64_t __twr_v1565;
    __twr_v1553 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1554 = (uint64_t)(&_mng_token1555);
    __twr_v1556 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1553)(__twr_v1554, _mng_ignore1552);
    _mng_num11557 = __twr_v1556;
    __twr_v1558 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1553)(__twr_v1554, _mng_ignore1552);
    _mng_num21559 = __twr_v1558;
    __twr_v1560 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1560)();
    __twr_v1561 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    if (!(_mng_num11557)) { goto __twr_l339; } else { goto __twr_l337; }
    __twr_l337:;
    if (!(_mng_num21559)) { goto __twr_l339; } else { goto __twr_l338; }
    __twr_l338:;
    __twr_v1562 = 1ULL;
    goto __twr_l340;
    __twr_l339:;
    __twr_v1562 = 0ULL;
    __twr_l340:;
    __twr_v1563 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1561)(_mng_buffer1551, __twr_v1562, __twr_v1563);
    __twr_v1564 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1565 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1564)(_mng_buffer1551, __twr_v1565);
    __twr_l336:;
    _jkl_epilogue:;
}
void LexOperatorDefined(uint64_t _mng_buffer1566, uint64_t _mng_ignore1567) {
    uint64_t __twr_v1568;
    uint64_t __twr_v1569;
    uint64_t _mng_token1570[4];
    uint64_t __twr_v1571;
    uint64_t _mng_tokbuffer1572[8];
    uint64_t __twr_v1573;
    uint64_t __twr_v1574;
    uint64_t __twr_v1575;
    uint64_t __twr_v1576;
    uint64_t __twr_v1577;
    uint64_t __twr_v1578;
    uint64_t _mng_macro1579;
    uint64_t __twr_v1580;
    uint64_t __twr_v1581;
    uint64_t __twr_v1582;
    uint64_t __twr_v1583;
    __twr_v1568 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1569 = (uint64_t)(&_mng_token1570);
    __twr_v1571 = (uint64_t)(&_mng_tokbuffer1572);
    __twr_v1573 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1568)(__twr_v1569, __twr_v1571);
    __twr_v1574 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1574)();
    __twr_v1575 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v1576 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v1577 = *(uint64_t*)(__twr_v1576);
    __twr_v1578 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1575)(__twr_v1577, __twr_v1571);
    _mng_macro1579 = __twr_v1578;
    __twr_v1580 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1581 = (_mng_macro1579 != __twr_v1573);
    __twr_v1582 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1580)(_mng_buffer1566, __twr_v1581, __twr_v1582);
    __twr_v1583 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v1583)(_mng_buffer1566, __twr_v1573);
    __twr_l341:;
    _jkl_epilogue:;
}
void LexOperatorBitNot(uint64_t _mng_buffer1584, uint64_t _mng_ignore1585) {
    uint64_t __twr_v1586;
    uint64_t __twr_v1587;
    uint64_t _mng_token1588[4];
    uint64_t __twr_v1589;
    uint64_t _mng_num11590;
    uint64_t __twr_v1591;
    uint64_t __twr_v1592;
    uint64_t __twr_v1593;
    uint64_t __twr_v1594;
    uint64_t __twr_v1595;
    uint64_t __twr_v1596;
    __twr_v1586 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1587 = (uint64_t)(&_mng_token1588);
    __twr_v1589 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1586)(__twr_v1587, _mng_ignore1585);
    _mng_num11590 = __twr_v1589;
    __twr_v1591 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1591)();
    __twr_v1592 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1593 = ~_mng_num11590;
    __twr_v1594 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1592)(_mng_buffer1584, __twr_v1593, __twr_v1594);
    __twr_v1595 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1596 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1595)(_mng_buffer1584, __twr_v1596);
    __twr_l342:;
    _jkl_epilogue:;
}
void LexOperatorBitOr(uint64_t _mng_buffer1597, uint64_t _mng_ignore1598) {
    uint64_t __twr_v1599;
    uint64_t __twr_v1600;
    uint64_t _mng_token1601[4];
    uint64_t __twr_v1602;
    uint64_t _mng_num11603;
    uint64_t __twr_v1604;
    uint64_t _mng_num21605;
    uint64_t __twr_v1606;
    uint64_t __twr_v1607;
    uint64_t __twr_v1608;
    uint64_t __twr_v1609;
    uint64_t __twr_v1610;
    uint64_t __twr_v1611;
    __twr_v1599 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1600 = (uint64_t)(&_mng_token1601);
    __twr_v1602 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1599)(__twr_v1600, _mng_ignore1598);
    _mng_num11603 = __twr_v1602;
    __twr_v1604 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1599)(__twr_v1600, _mng_ignore1598);
    _mng_num21605 = __twr_v1604;
    __twr_v1606 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1606)();
    __twr_v1607 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1608 = _mng_num11603 | _mng_num21605;
    __twr_v1609 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1607)(_mng_buffer1597, __twr_v1608, __twr_v1609);
    __twr_v1610 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1611 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1610)(_mng_buffer1597, __twr_v1611);
    __twr_l343:;
    _jkl_epilogue:;
}
void LexOperatorBitXor(uint64_t _mng_buffer1612, uint64_t _mng_ignore1613) {
    uint64_t __twr_v1614;
    uint64_t __twr_v1615;
    uint64_t _mng_token1616[4];
    uint64_t __twr_v1617;
    uint64_t _mng_num11618;
    uint64_t __twr_v1619;
    uint64_t _mng_num21620;
    uint64_t __twr_v1621;
    uint64_t __twr_v1622;
    uint64_t __twr_v1623;
    uint64_t __twr_v1624;
    uint64_t __twr_v1625;
    uint64_t __twr_v1626;
    __twr_v1614 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1615 = (uint64_t)(&_mng_token1616);
    __twr_v1617 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1614)(__twr_v1615, _mng_ignore1613);
    _mng_num11618 = __twr_v1617;
    __twr_v1619 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1614)(__twr_v1615, _mng_ignore1613);
    _mng_num21620 = __twr_v1619;
    __twr_v1621 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1621)();
    __twr_v1622 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1623 = _mng_num11618 ^ _mng_num21620;
    __twr_v1624 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1622)(_mng_buffer1612, __twr_v1623, __twr_v1624);
    __twr_v1625 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1626 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1625)(_mng_buffer1612, __twr_v1626);
    __twr_l344:;
    _jkl_epilogue:;
}
void LexOperatorBitAnd(uint64_t _mng_buffer1627, uint64_t _mng_ignore1628) {
    uint64_t __twr_v1629;
    uint64_t __twr_v1630;
    uint64_t _mng_token1631[4];
    uint64_t __twr_v1632;
    uint64_t _mng_num11633;
    uint64_t __twr_v1634;
    uint64_t _mng_num21635;
    uint64_t __twr_v1636;
    uint64_t __twr_v1637;
    uint64_t __twr_v1638;
    uint64_t __twr_v1639;
    uint64_t __twr_v1640;
    uint64_t __twr_v1641;
    __twr_v1629 = (uint64_t)(&LexCollectValueNumeric);
    __twr_v1630 = (uint64_t)(&_mng_token1631);
    __twr_v1632 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1629)(__twr_v1630, _mng_ignore1628);
    _mng_num11633 = __twr_v1632;
    __twr_v1634 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1629)(__twr_v1630, _mng_ignore1628);
    _mng_num21635 = __twr_v1634;
    __twr_v1636 = (uint64_t)(&LexConsumeCloseParenthesis);
    ((void (*)())__twr_v1636)();
    __twr_v1637 = (uint64_t)(&TlInsertNumberDynamicBuffer);
    __twr_v1638 = _mng_num11633 & _mng_num21635;
    __twr_v1639 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1637)(_mng_buffer1627, __twr_v1638, __twr_v1639);
    __twr_v1640 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v1641 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1640)(_mng_buffer1627, __twr_v1641);
    __twr_l345:;
    _jkl_epilogue:;
}
void LexParseDirective() {
    uint64_t __twr_v1642;
    uint64_t __twr_v1643;
    uint64_t __twr_v1644;
    uint64_t _mng_buffer1645[8];
    uint64_t __twr_v1646;
    uint64_t __twr_v1647;
    uint64_t __twr_v1648;
    uint64_t _mng_directive1649;
    uint64_t __twr_v1650;
    uint64_t __twr_v1651;
    uint64_t __twr_v1652;
    uint64_t __twr_v1653;
    uint64_t __twr_v1654;
    uint64_t __twr_v1655;
    uint64_t __twr_v1656;
    __twr_v1642 = (uint64_t)(&LexCollectDirectiveToken);
    __twr_v1643 = (uint64_t)(&LexDirectiveToken);
    __twr_v1644 = (uint64_t)(&_mng_buffer1645);
    ((void (*)(uint64_t, uint64_t))__twr_v1642)(__twr_v1643, __twr_v1644);
    __twr_v1646 = (uint64_t)(&TlLookupHashTable);
    __twr_v1647 = (uint64_t)(&LexDirectiveHashTable);
    __twr_v1648 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1646)(__twr_v1647, __twr_v1644);
    _mng_directive1649 = __twr_v1648;
    if (_mng_directive1649) { goto __twr_l347; } else { goto __twr_l348; }
    __twr_l348:;
    __twr_v1650 = (uint64_t)(&LexTokenError);
    __twr_v1651 = (uint64_t)(&LexDirectiveToken);
    __twr_v1652 = (uint64_t)(&"Unknown directive");
    __twr_v1653 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1650)(__twr_v1651, __twr_v1652, __twr_v1653, __twr_v1653, __twr_v1653);
    __twr_l347:;
    __twr_v1654 = 48ULL;
    __twr_v1655 = _mng_directive1649 + __twr_v1654;
    __twr_v1656 = *(uint64_t*)(__twr_v1655);
    ((void (*)())__twr_v1656)();
    __twr_l346:;
    _jkl_epilogue:;
}
void LexInitializePreprocessor() {
    uint64_t __twr_v1657;
    uint64_t __twr_v1658;
    uint64_t __twr_v1659;
    uint64_t __twr_v1660;
    uint64_t __twr_v1661;
    uint64_t __twr_v1662;
    uint64_t __twr_v1663;
    uint64_t __twr_v1664;
    uint64_t __twr_v1665;
    uint64_t __twr_v1666;
    uint64_t __twr_v1667;
    uint64_t __twr_v1668;
    uint64_t __twr_v1669;
    uint64_t __twr_v1670;
    uint64_t __twr_v1671;
    uint64_t __twr_v1672;
    uint64_t __twr_v1673;
    uint64_t __twr_v1674;
    uint64_t __twr_v1675;
    uint64_t __twr_v1676;
    uint64_t __twr_v1677;
    uint64_t __twr_v1678;
    uint64_t __twr_v1679;
    uint64_t __twr_v1680;
    uint64_t __twr_v1681;
    uint64_t __twr_v1682;
    uint64_t __twr_v1683;
    uint64_t __twr_v1684;
    uint64_t __twr_v1685;
    uint64_t __twr_v1686;
    uint64_t __twr_v1687;
    uint64_t __twr_v1688;
    uint64_t __twr_v1689;
    uint64_t __twr_v1690;
    uint64_t __twr_v1691;
    uint64_t __twr_v1692;
    uint64_t __twr_v1693;
    uint64_t __twr_v1694;
    uint64_t __twr_v1695;
    uint64_t __twr_v1696;
    uint64_t __twr_v1697;
    uint64_t __twr_v1698;
    uint64_t __twr_v1699;
    uint64_t __twr_v1700;
    uint64_t __twr_v1701;
    uint64_t __twr_v1702;
    uint64_t __twr_v1703;
    uint64_t __twr_v1704;
    uint64_t __twr_v1705;
    uint64_t __twr_v1706;
    uint64_t __twr_v1707;
    uint64_t __twr_v1708;
    uint64_t __twr_v1709;
    uint64_t __twr_v1710;
    uint64_t __twr_v1711;
    uint64_t __twr_v1712;
    uint64_t __twr_v1713;
    uint64_t __twr_v1714;
    uint64_t __twr_v1715;
    uint64_t __twr_v1716;
    uint64_t __twr_v1717;
    uint64_t __twr_v1718;
    uint64_t __twr_v1719;
    uint64_t __twr_v1720;
    uint64_t __twr_v1721;
    uint64_t __twr_v1722;
    uint64_t __twr_v1723;
    uint64_t __twr_v1724;
    uint64_t __twr_v1725;
    uint64_t __twr_v1726;
    uint64_t __twr_v1727;
    uint64_t __twr_v1728;
    uint64_t __twr_v1729;
    uint64_t __twr_v1730;
    uint64_t __twr_v1731;
    uint64_t __twr_v1732;
    uint64_t __twr_v1733;
    uint64_t __twr_v1734;
    uint64_t __twr_v1735;
    uint64_t __twr_v1736;
    uint64_t __twr_v1737;
    uint64_t __twr_v1738;
    uint64_t __twr_v1739;
    uint64_t __twr_v1740;
    __twr_v1657 = (uint64_t)(&TlInitializeHashTable);
    __twr_v1658 = (uint64_t)(&LexDirectiveHashTable);
    ((void (*)(uint64_t))__twr_v1657)(__twr_v1658);
    __twr_v1659 = (uint64_t)(&LexOperatorHashTable);
    ((void (*)(uint64_t))__twr_v1657)(__twr_v1659);
    __twr_v1660 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v1661 = (uint64_t)(&LexIfStack);
    ((void (*)(uint64_t))__twr_v1660)(__twr_v1661);
    __twr_v1662 = (uint64_t)(&LexCreateMacroTable);
    __twr_v1663 = 0ULL;
    __twr_v1664 = ((uint64_t (*)(uint64_t))__twr_v1662)(__twr_v1663);
    __twr_v1665 = (uint64_t)(&LexRootMacroScope);
    *(uint64_t*)(__twr_v1665) = __twr_v1664;
    __twr_v1666 = *(uint64_t*)(__twr_v1665);
    __twr_v1667 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v1667) = __twr_v1666;
    __twr_v1668 = (uint64_t)(&TlInitializeZone);
    __twr_v1669 = (uint64_t)(&LexMacroZone);
    __twr_v1670 = 258ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v1668)(__twr_v1669, __twr_v1670);
    __twr_v1671 = (uint64_t)(&LexInsertDirective);
    __twr_v1672 = (uint64_t)(&"INCLUDE");
    __twr_v1673 = (uint64_t)(&LexParseInclude);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1672, __twr_v1673);
    __twr_v1674 = (uint64_t)(&"DEFINE");
    __twr_v1675 = (uint64_t)(&LexParseDefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1674, __twr_v1675);
    __twr_v1676 = (uint64_t)(&"MACRO");
    __twr_v1677 = (uint64_t)(&LexParseMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1676, __twr_v1677);
    __twr_v1678 = (uint64_t)(&"IF");
    __twr_v1679 = (uint64_t)(&LexParseIf);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1678, __twr_v1679);
    __twr_v1680 = (uint64_t)(&"ELSE");
    __twr_v1681 = (uint64_t)(&LexParseElse);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1680, __twr_v1681);
    __twr_v1682 = (uint64_t)(&"ELSEIF");
    __twr_v1683 = (uint64_t)(&LexParseElseif);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1682, __twr_v1683);
    __twr_v1684 = (uint64_t)(&"END");
    __twr_v1685 = (uint64_t)(&LexParseEnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1684, __twr_v1685);
    __twr_v1686 = (uint64_t)(&"UNDEFINE");
    __twr_v1687 = (uint64_t)(&LexParseUndefine);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1686, __twr_v1687);
    __twr_v1688 = (uint64_t)(&"ERROR");
    __twr_v1689 = (uint64_t)(&LexParseError);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1688, __twr_v1689);
    __twr_v1690 = (uint64_t)(&"PRINT");
    __twr_v1691 = (uint64_t)(&LexParsePrint);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1690, __twr_v1691);
    __twr_v1692 = (uint64_t)(&"ASM");
    __twr_v1693 = (uint64_t)(&LexParseAsm);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1692, __twr_v1693);
    __twr_v1694 = (uint64_t)(&"SECTION");
    __twr_v1695 = (uint64_t)(&LexParseSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1694, __twr_v1695);
    __twr_v1696 = (uint64_t)(&"ENTERSECTION");
    __twr_v1697 = (uint64_t)(&LexParseEnterSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1696, __twr_v1697);
    __twr_v1698 = (uint64_t)(&"LEAVESECTION");
    __twr_v1699 = (uint64_t)(&LexParseLeaveSection);
    ((void (*)(uint64_t, uint64_t))__twr_v1671)(__twr_v1698, __twr_v1699);
    __twr_v1700 = (uint64_t)(&LexInsertOperator);
    __twr_v1701 = (uint64_t)(&"==");
    __twr_v1702 = (uint64_t)(&LexOperatorEquals);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1701, __twr_v1702);
    __twr_v1703 = (uint64_t)(&"<=");
    __twr_v1704 = (uint64_t)(&LexOperatorLteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1703, __twr_v1704);
    __twr_v1705 = (uint64_t)(&">=");
    __twr_v1706 = (uint64_t)(&LexOperatorGteq);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1705, __twr_v1706);
    __twr_v1707 = (uint64_t)(&"!=");
    __twr_v1708 = (uint64_t)(&LexOperatorNeq);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1707, __twr_v1708);
    __twr_v1709 = (uint64_t)(&"+");
    __twr_v1710 = (uint64_t)(&LexOperatorAdd);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1709, __twr_v1710);
    __twr_v1711 = (uint64_t)(&"-");
    __twr_v1712 = (uint64_t)(&LexOperatorSub);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1711, __twr_v1712);
    __twr_v1713 = (uint64_t)(&"*");
    __twr_v1714 = (uint64_t)(&LexOperatorMul);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1713, __twr_v1714);
    __twr_v1715 = (uint64_t)(&"/");
    __twr_v1716 = (uint64_t)(&LexOperatorDiv);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1715, __twr_v1716);
    __twr_v1717 = (uint64_t)(&"<<");
    __twr_v1718 = (uint64_t)(&LexOperatorLsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1717, __twr_v1718);
    __twr_v1719 = (uint64_t)(&">>");
    __twr_v1720 = (uint64_t)(&LexOperatorRsh);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1719, __twr_v1720);
    __twr_v1721 = (uint64_t)(&"STRCAT");
    __twr_v1722 = (uint64_t)(&LexOperatorStrcat);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1721, __twr_v1722);
    __twr_v1723 = (uint64_t)(&"STRCMP");
    __twr_v1724 = (uint64_t)(&LexOperatorStrcmp);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1723, __twr_v1724);
    __twr_v1725 = (uint64_t)(&"NOT");
    __twr_v1726 = (uint64_t)(&LexOperatorNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1725, __twr_v1726);
    __twr_v1727 = (uint64_t)(&"OR");
    __twr_v1728 = (uint64_t)(&LexOperatorOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1727, __twr_v1728);
    __twr_v1729 = (uint64_t)(&"AND");
    __twr_v1730 = (uint64_t)(&LexOperatorAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1729, __twr_v1730);
    __twr_v1731 = (uint64_t)(&"DEFINED");
    __twr_v1732 = (uint64_t)(&LexOperatorDefined);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1731, __twr_v1732);
    __twr_v1733 = (uint64_t)(&"~");
    __twr_v1734 = (uint64_t)(&LexOperatorBitNot);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1733, __twr_v1734);
    __twr_v1735 = (uint64_t)(&"|");
    __twr_v1736 = (uint64_t)(&LexOperatorBitOr);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1735, __twr_v1736);
    __twr_v1737 = (uint64_t)(&"$");
    __twr_v1738 = (uint64_t)(&LexOperatorBitXor);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1737, __twr_v1738);
    __twr_v1739 = (uint64_t)(&"&");
    __twr_v1740 = (uint64_t)(&LexOperatorBitAnd);
    ((void (*)(uint64_t, uint64_t))__twr_v1700)(__twr_v1739, __twr_v1740);
    __twr_l349:;
    _jkl_epilogue:;
}

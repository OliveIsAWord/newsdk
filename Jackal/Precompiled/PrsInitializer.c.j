#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern void TlInitializeZone(uint64_t _mng_zone87, uint64_t _mng_blocksize88);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone89);
extern void TlFreeToZone(uint64_t _mng_zone90, uint64_t _mng_block91);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant92);
extern void TlPunchValue(uint64_t _mng_ptr93, uint64_t _mng_value94, uint64_t _mng_bytes95);
extern void JklCompileProgram(uint64_t _mng_argc96, uint64_t _mng_argv97);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg98);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename99, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock100, uint64_t _mng_filepath101);
extern uint64_t LexLookupSection(uint64_t _mng_name102);
extern void LexPushSection(uint64_t _mng_section103);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope104);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg105);
extern void LexExpandMacro(uint64_t _mng_macro106, uint64_t _mng_token107);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream108, uint64_t _mng_macro109);
extern void LexUninitializeStream(uint64_t _mng_stream110);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream111);
extern void LexPushStream(uint64_t _mng_stream112);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream113, uint64_t _mng_fileblock114, uint64_t _mng_handle115);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock116, uint64_t _mng_handle117);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope118);
extern uint64_t LexResetScope(uint64_t _mng_scope119);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope120);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest121, uint64_t _mng_src122);
extern void LexGetToken(uint64_t _mng_token123);
extern void LexPutbackToken(uint64_t _mng_token124);
extern uint64_t LexMatchToken(uint64_t _mng_token125, uint64_t _mng_type126, uint64_t _mng_subtype127);
extern void LexStreamError(uint64_t _mng_str128, uint64_t _mng_err1129, uint64_t _mng_err2130, uint64_t _mng_err3131);
extern void LexTokenError(uint64_t _mng_token132, uint64_t _mng_str133, uint64_t _mng_err1134, uint64_t _mng_err2135, uint64_t _mng_err3136);
extern uint64_t LexCrunchNumber(uint64_t _mng_token137, uint64_t _mng_buffer138);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node139);
extern uint64_t PrsParseInitializer(uint64_t _mng_errtoken140, uint64_t _mng_type141, uint64_t _mng_contentsarray142, uint64_t _mng_backpatcharray143, uint64_t _mng_contentsoffset144);
extern uint64_t PrsExpression(uint64_t _mng_minprecedence145);
extern void PrsCheckConstant(uint64_t _mng_errtoken146, uint64_t _mng_type147, uint64_t _mng_value148);
extern uint64_t PrsIsCompileTime(uint64_t _mng_node149);
extern uint64_t PrsCreateAstNode(uint64_t _mng_type150, uint64_t _mng_token151);
void PrsInitializeGrowableArray(uint64_t _mng_array152, uint64_t _mng_maxlength153) {
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    __twr_v154 = 0ULL;
    *(uint64_t*)(_mng_array152) = __twr_v154;
    __twr_v155 = 8ULL;
    __twr_v156 = _mng_array152 + __twr_v155;
    *(uint64_t*)(__twr_v156) = __twr_v154;
    __twr_v157 = 16ULL;
    __twr_v158 = _mng_array152 + __twr_v157;
    *(uint64_t*)(__twr_v158) = _mng_maxlength153;
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t PrsIndexGrowableArray(uint64_t _mng_array159, uint64_t _mng_index160, uint64_t _mng_length161, uint64_t _mng_unitlog162) {
    uint64_t _jkl_retv;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t _mng_lengthunits166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t _mng_newbuffer191;
    uint64_t _mng_status192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    __twr_v163 = 8ULL;
    __twr_v164 = _mng_array159 + __twr_v163;
    __twr_v165 = *(uint64_t*)(__twr_v164);
    _mng_lengthunits166 = __twr_v165;
    __twr_v167 = _mng_index160 + _mng_length161;
    if (__twr_v167 > _mng_lengthunits166) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v168 = *(uint64_t*)(_mng_array159);
    __twr_v169 = _mng_index160 << _mng_unitlog162;
    __twr_v170 = __twr_v168 + __twr_v169;
    _jkl_retv = __twr_v170;
    goto _jkl_epilogue;
    __twr_l3:;
    if (_mng_lengthunits166) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    _mng_lengthunits166 = 1ULL;
    __twr_l5:;
    __twr_v171 = _mng_index160 + _mng_length161;
    if (__twr_v171 <= _mng_lengthunits166) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v172 = 1ULL;
    __twr_v173 = _mng_lengthunits166 << __twr_v172;
    _mng_lengthunits166 = __twr_v173;
    __twr_l9:;
    __twr_v174 = _mng_index160 + _mng_length161;
    if (__twr_v174 > _mng_lengthunits166) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l8:;
    __twr_v175 = 16ULL;
    __twr_v176 = _mng_array159 + __twr_v175;
    __twr_v177 = *(uint64_t*)(__twr_v176);
    if (!(__twr_v177)) { goto __twr_l10; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v178 = 16ULL;
    __twr_v179 = _mng_array159 + __twr_v178;
    __twr_v180 = *(uint64_t*)(__twr_v179);
    if (_mng_lengthunits166 <= __twr_v180) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v181 = 16ULL;
    __twr_v182 = _mng_array159 + __twr_v181;
    __twr_v183 = *(uint64_t*)(__twr_v182);
    _mng_lengthunits166 = __twr_v183;
    __twr_l10:;
    __twr_v184 = 7ULL;
    __twr_v185 = _mng_lengthunits166 + __twr_v184;
    _mng_lengthunits166 = __twr_v185;
    __twr_v186 = 18446744073709551608ULL;
    __twr_v187 = _mng_lengthunits166 & __twr_v186;
    _mng_lengthunits166 = __twr_v187;
    __twr_v188 = (uint64_t)(&TlAlloc);
    __twr_v189 = _mng_lengthunits166 << _mng_unitlog162;
    __twr_v190 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v188)(__twr_v189, (uint64_t)(&_mng_newbuffer191));
    _mng_status192 = __twr_v190;
    if (!(_mng_status192)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v193 = (uint64_t)(&TlInternalError);
    __twr_v194 = (uint64_t)(&"Failed to grow array");
    __twr_v195 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v193)(__twr_v194, __twr_v195, __twr_v195, __twr_v195);
    __twr_l13:;
    __twr_v196 = 8ULL;
    __twr_v197 = _mng_array159 + __twr_v196;
    __twr_v198 = *(uint64_t*)(__twr_v197);
    if (!(__twr_v198)) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v199 = (uint64_t)(&TlCopyMemory);
    __twr_v200 = *(uint64_t*)(_mng_array159);
    __twr_v201 = 8ULL;
    __twr_v202 = _mng_array159 + __twr_v201;
    __twr_v203 = *(uint64_t*)(__twr_v202);
    __twr_v204 = __twr_v203 << _mng_unitlog162;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v199)(_mng_newbuffer191, __twr_v200, __twr_v204);
    __twr_v205 = (uint64_t)(&TlFree);
    __twr_v206 = *(uint64_t*)(_mng_array159);
    ((void (*)(uint64_t))__twr_v205)(__twr_v206);
    __twr_l15:;
    __twr_v207 = (uint64_t)(&TlFillMemoryWithByte);
    __twr_v208 = 8ULL;
    __twr_v209 = _mng_array159 + __twr_v208;
    __twr_v210 = *(uint64_t*)(__twr_v209);
    __twr_v211 = __twr_v210 << _mng_unitlog162;
    __twr_v212 = _mng_newbuffer191 + __twr_v211;
    __twr_v213 = _mng_lengthunits166 - __twr_v210;
    __twr_v214 = __twr_v213 << _mng_unitlog162;
    __twr_v215 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v207)(__twr_v212, __twr_v214, __twr_v215);
    *(uint64_t*)(_mng_array159) = _mng_newbuffer191;
    *(uint64_t*)(__twr_v209) = _mng_lengthunits166;
    __twr_v216 = *(uint64_t*)(_mng_array159);
    __twr_v217 = _mng_index160 << _mng_unitlog162;
    __twr_v218 = __twr_v216 + __twr_v217;
    _jkl_retv = __twr_v218;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void PrsParseArrayInitializer(uint64_t _mng_errtoken219, uint64_t _mng_type220, uint64_t _mng_contentsarray221, uint64_t _mng_backpatcharray222, uint64_t _mng_contentsoffset223) {
    uint64_t __twr_v224;
    uint64_t _mng_basetype225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t _mng_elementsize241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t _mng_bound245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t _mng_hasbound249;
    uint64_t _mng_index250;
    uint64_t _mng_offset251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t _mng_token254[4];
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t _mng_expr266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    __twr_v224 = *(uint64_t*)(_mng_type220);
    _mng_basetype225 = __twr_v224;
    __twr_v226 = 80ULL;
    __twr_v227 = _mng_basetype225 + __twr_v226;
    __twr_v228 = *(uint8_t*)(__twr_v227);
    __twr_v229 = 3ULL;
    if (__twr_v228 != __twr_v229) { goto __twr_l19; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v230 = *(uint64_t*)(_mng_basetype225);
    __twr_v231 = 104ULL;
    __twr_v232 = __twr_v230 + __twr_v231;
    __twr_v233 = *(uint64_t*)(__twr_v232);
    _mng_basetype225 = __twr_v233;
    __twr_l20:;
    __twr_v234 = 80ULL;
    __twr_v235 = _mng_basetype225 + __twr_v234;
    __twr_v236 = *(uint8_t*)(__twr_v235);
    __twr_v237 = 3ULL;
    if (__twr_v236 == __twr_v237) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v238 = 16ULL;
    __twr_v239 = _mng_type220 + __twr_v238;
    __twr_v240 = *(uint64_t*)(__twr_v239);
    _mng_elementsize241 = __twr_v240;
    __twr_v242 = 8ULL;
    __twr_v243 = _mng_type220 + __twr_v242;
    __twr_v244 = *(uint64_t*)(__twr_v243);
    _mng_bound245 = __twr_v244;
    __twr_v246 = 24ULL;
    __twr_v247 = _mng_type220 + __twr_v246;
    __twr_v248 = *(uint8_t*)(__twr_v247);
    _mng_hasbound249 = __twr_v248;
    _mng_index250 = 0ULL;
    _mng_offset251 = 0ULL;
    __twr_l21:;
    __twr_v252 = (uint64_t)(&LexMatchToken);
    __twr_v253 = (uint64_t)(&_mng_token254);
    __twr_v255 = 14ULL;
    __twr_v256 = 0ULL;
    __twr_v257 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v252)(__twr_v253, __twr_v255, __twr_v256);
    if (!(__twr_v257)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    goto __twr_l22;
    __twr_l23:;
    __twr_v258 = (uint64_t)(&LexMatchToken);
    __twr_v259 = 0ULL;
    __twr_v260 = 3ULL;
    __twr_v261 = 70ULL;
    __twr_v262 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v258)(__twr_v259, __twr_v260, __twr_v261);
    if (!(__twr_v262)) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v263 = (uint64_t)(&PrsExpression);
    __twr_v264 = 0ULL;
    __twr_v265 = ((uint64_t (*)(uint64_t))__twr_v263)(__twr_v264);
    _mng_expr266 = __twr_v265;
    __twr_v267 = (uint64_t)(&LexMatchToken);
    __twr_v268 = (uint64_t)(&_mng_token254);
    __twr_v269 = 11ULL;
    __twr_v270 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v267)(__twr_v268, __twr_v269, __twr_v264);
    if (__twr_v270) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v271 = (uint64_t)(&LexTokenError);
    __twr_v272 = (uint64_t)(&_mng_token254);
    __twr_v273 = (uint64_t)(&"Expected a right bracket");
    __twr_v274 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v271)(__twr_v272, __twr_v273, __twr_v274, __twr_v274, __twr_v274);
    __twr_l27:;
    __twr_v275 = (uint64_t)(&LexMatchToken);
    __twr_v276 = (uint64_t)(&_mng_token254);
    __twr_v277 = 8ULL;
    __twr_v278 = 73ULL;
    __twr_v279 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v275)(__twr_v276, __twr_v277, __twr_v278);
    if (__twr_v279) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v280 = (uint64_t)(&LexTokenError);
    __twr_v281 = (uint64_t)(&_mng_token254);
    __twr_v282 = (uint64_t)(&"Expected an equals sign");
    __twr_v283 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v280)(__twr_v281, __twr_v282, __twr_v283, __twr_v283, __twr_v283);
    __twr_l29:;
    __twr_v284 = 40ULL;
    __twr_v285 = _mng_expr266 + __twr_v284;
    __twr_v286 = *(uint8_t*)(__twr_v285);
    __twr_v287 = 3ULL;
    if (__twr_v286 == __twr_v287) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v288 = (uint64_t)(&LexTokenError);
    __twr_v289 = 0ULL;
    __twr_v290 = (uint64_t)(&"Expected a constant value");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v288)(_mng_expr266, __twr_v290, __twr_v289, __twr_v289, __twr_v289);
    __twr_l31:;
    __twr_v291 = 48ULL;
    __twr_v292 = _mng_expr266 + __twr_v291;
    __twr_v293 = *(uint64_t*)(__twr_v292);
    _mng_index250 = __twr_v293;
    __twr_v294 = _mng_index250 * _mng_elementsize241;
    _mng_offset251 = __twr_v294;
    __twr_l25:;
    if (_mng_index250 < _mng_bound245) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    if (!(_mng_hasbound249)) { goto __twr_l37; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v295 = (uint64_t)(&LexTokenError);
    __twr_v296 = (uint64_t)(&_mng_token254);
    __twr_v297 = (uint64_t)(&"Index exceeds array bound");
    __twr_v298 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v295)(__twr_v296, __twr_v297, __twr_v298, __twr_v298, __twr_v298);
    goto __twr_l35;
    __twr_l37:;
    __twr_v299 = 1ULL;
    __twr_v300 = _mng_index250 + __twr_v299;
    _mng_bound245 = __twr_v300;
    __twr_v301 = 8ULL;
    __twr_v302 = _mng_type220 + __twr_v301;
    *(uint64_t*)(__twr_v302) = _mng_bound245;
    __twr_l35:;
    __twr_l33:;
    __twr_v303 = (uint64_t)(&PrsParseInitializer);
    __twr_v304 = (uint64_t)(&_mng_token254);
    __twr_v305 = _mng_contentsoffset223 + _mng_offset251;
    __twr_v306 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v303)(__twr_v304, _mng_basetype225, _mng_contentsarray221, _mng_backpatcharray222, __twr_v305);
    __twr_v307 = 72ULL;
    __twr_v308 = _mng_basetype225 + __twr_v307;
    __twr_v309 = *(uint64_t*)(__twr_v308);
    __twr_v310 = _mng_offset251 + __twr_v309;
    __twr_v311 = _mng_type220 + __twr_v307;
    __twr_v312 = *(uint64_t*)(__twr_v311);
    if (__twr_v310 <= __twr_v312) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v313 = 72ULL;
    __twr_v314 = _mng_basetype225 + __twr_v313;
    __twr_v315 = *(uint64_t*)(__twr_v314);
    __twr_v316 = _mng_offset251 + __twr_v315;
    __twr_v317 = _mng_type220 + __twr_v313;
    *(uint64_t*)(__twr_v317) = __twr_v316;
    __twr_l38:;
    __twr_v318 = 1ULL;
    __twr_v319 = _mng_index250 + __twr_v318;
    _mng_index250 = __twr_v319;
    __twr_v320 = _mng_offset251 + _mng_elementsize241;
    _mng_offset251 = __twr_v320;
    __twr_v321 = (uint64_t)(&LexMatchToken);
    __twr_v322 = 0ULL;
    __twr_v323 = 14ULL;
    __twr_v324 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v321)(__twr_v322, __twr_v323, __twr_v322);
    if (!(__twr_v324)) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l41:;
    goto __twr_l22;
    __twr_l40:;
    __twr_v325 = (uint64_t)(&LexMatchToken);
    __twr_v326 = (uint64_t)(&_mng_token254);
    __twr_v327 = 15ULL;
    __twr_v328 = 0ULL;
    __twr_v329 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v325)(__twr_v326, __twr_v327, __twr_v328);
    if (__twr_v329) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v330 = (uint64_t)(&LexTokenError);
    __twr_v331 = (uint64_t)(&_mng_token254);
    __twr_v332 = (uint64_t)(&"Expected a right brace or comma");
    __twr_v333 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v330)(__twr_v331, __twr_v332, __twr_v333, __twr_v333, __twr_v333);
    __twr_l42:;
    goto __twr_l21;
    __twr_l22:;
    __twr_l17:;
    _jkl_epilogue:;
}
void PrsParseStructInitializer(uint64_t _mng_errtoken334, uint64_t _mng_type335, uint64_t _mng_contentsarray336, uint64_t _mng_backpatcharray337, uint64_t _mng_contentsoffset338) {
    uint64_t __twr_v339;
    uint64_t _mng_fieldscope340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t _mng_token347[4];
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t _mng_fieldsymbol377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t _mng_offset398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t _mng_striptype402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    __twr_v339 = *(uint64_t*)(_mng_type335);
    _mng_fieldscope340 = __twr_v339;
    __twr_l45:;
    __twr_v341 = (uint64_t)(&LexMatchToken);
    __twr_v342 = 0ULL;
    __twr_v343 = 14ULL;
    __twr_v344 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v341)(__twr_v342, __twr_v343, __twr_v342);
    if (!(__twr_v344)) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    goto __twr_l46;
    __twr_l47:;
    __twr_v345 = (uint64_t)(&LexMatchToken);
    __twr_v346 = (uint64_t)(&_mng_token347);
    __twr_v348 = 3ULL;
    __twr_v349 = 70ULL;
    __twr_v350 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v345)(__twr_v346, __twr_v348, __twr_v349);
    if (__twr_v350) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_v351 = (uint64_t)(&LexTokenError);
    __twr_v352 = (uint64_t)(&_mng_token347);
    __twr_v353 = (uint64_t)(&"Expected a left bracket");
    __twr_v354 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v351)(__twr_v352, __twr_v353, __twr_v354, __twr_v354, __twr_v354);
    __twr_l49:;
    __twr_v355 = (uint64_t)(&LexEnterOverlayScope);
    ((void (*)(uint64_t))__twr_v355)(_mng_fieldscope340);
    __twr_v356 = (uint64_t)(&LexMatchToken);
    __twr_v357 = (uint64_t)(&_mng_token347);
    __twr_v358 = 18ULL;
    __twr_v359 = 0ULL;
    __twr_v360 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v356)(__twr_v357, __twr_v358, __twr_v359);
    if (__twr_v360) { goto __twr_l51; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v361 = (uint64_t)(&LexTokenError);
    __twr_v362 = (uint64_t)(&_mng_token347);
    __twr_v363 = (uint64_t)(&"Expected an identifier");
    __twr_v364 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v361)(__twr_v362, __twr_v363, __twr_v364, __twr_v364, __twr_v364);
    __twr_l51:;
    __twr_v365 = (uint64_t)(&_mng_token347);
    __twr_v366 = 25ULL;
    __twr_v367 = __twr_v365 + __twr_v366;
    __twr_v368 = *(uint8_t*)(__twr_v367);
    __twr_v369 = 86ULL;
    if (__twr_v368 == __twr_v369) { goto __twr_l53; } else { goto __twr_l54; }
    __twr_l54:;
    __twr_v370 = (uint64_t)(&LexTokenError);
    __twr_v371 = (uint64_t)(&_mng_token347);
    __twr_v372 = (uint64_t)(&"Non-existent field name");
    __twr_v373 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v370)(__twr_v371, __twr_v372, __twr_v373, __twr_v373, __twr_v373);
    __twr_l53:;
    __twr_v374 = (uint64_t)(&_mng_token347);
    __twr_v375 = 0ULL;
    __twr_v376 = *(uint64_t*)(__twr_v374);
    _mng_fieldsymbol377 = __twr_v376;
    __twr_v378 = (uint64_t)(&LexExitOverlayScope);
    ((void (*)())__twr_v378)();
    __twr_v379 = (uint64_t)(&LexMatchToken);
    __twr_v380 = 11ULL;
    __twr_v381 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v379)(__twr_v374, __twr_v380, __twr_v375);
    if (__twr_v381) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v382 = (uint64_t)(&LexTokenError);
    __twr_v383 = (uint64_t)(&_mng_token347);
    __twr_v384 = (uint64_t)(&"Expected a right bracket");
    __twr_v385 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v382)(__twr_v383, __twr_v384, __twr_v385, __twr_v385, __twr_v385);
    __twr_l55:;
    __twr_v386 = (uint64_t)(&LexMatchToken);
    __twr_v387 = (uint64_t)(&_mng_token347);
    __twr_v388 = 8ULL;
    __twr_v389 = 73ULL;
    __twr_v390 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v386)(__twr_v387, __twr_v388, __twr_v389);
    if (__twr_v390) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v391 = (uint64_t)(&LexTokenError);
    __twr_v392 = (uint64_t)(&_mng_token347);
    __twr_v393 = (uint64_t)(&"Expected an equals sign");
    __twr_v394 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v391)(__twr_v392, __twr_v393, __twr_v394, __twr_v394, __twr_v394);
    __twr_l57:;
    __twr_v395 = 88ULL;
    __twr_v396 = _mng_fieldsymbol377 + __twr_v395;
    __twr_v397 = *(uint64_t*)(__twr_v396);
    _mng_offset398 = __twr_v397;
    __twr_v399 = 104ULL;
    __twr_v400 = _mng_fieldsymbol377 + __twr_v399;
    __twr_v401 = *(uint64_t*)(__twr_v400);
    _mng_striptype402 = __twr_v401;
    __twr_v403 = 80ULL;
    __twr_v404 = _mng_striptype402 + __twr_v403;
    __twr_v405 = *(uint8_t*)(__twr_v404);
    __twr_v406 = 3ULL;
    if (__twr_v405 != __twr_v406) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v407 = *(uint64_t*)(_mng_striptype402);
    __twr_v408 = 104ULL;
    __twr_v409 = __twr_v407 + __twr_v408;
    __twr_v410 = *(uint64_t*)(__twr_v409);
    _mng_striptype402 = __twr_v410;
    __twr_l61:;
    __twr_v411 = 80ULL;
    __twr_v412 = _mng_striptype402 + __twr_v411;
    __twr_v413 = *(uint8_t*)(__twr_v412);
    __twr_v414 = 3ULL;
    if (__twr_v413 == __twr_v414) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v415 = (uint64_t)(&PrsParseInitializer);
    __twr_v416 = (uint64_t)(&_mng_token347);
    __twr_v417 = _mng_contentsoffset338 + _mng_offset398;
    __twr_v418 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v415)(__twr_v416, _mng_striptype402, _mng_contentsarray336, _mng_backpatcharray337, __twr_v417);
    __twr_v419 = 72ULL;
    __twr_v420 = _mng_striptype402 + __twr_v419;
    __twr_v421 = *(uint64_t*)(__twr_v420);
    __twr_v422 = _mng_offset398 + __twr_v421;
    __twr_v423 = _mng_type335 + __twr_v419;
    __twr_v424 = *(uint64_t*)(__twr_v423);
    if (__twr_v422 <= __twr_v424) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v425 = 72ULL;
    __twr_v426 = _mng_striptype402 + __twr_v425;
    __twr_v427 = *(uint64_t*)(__twr_v426);
    __twr_v428 = _mng_offset398 + __twr_v427;
    __twr_v429 = _mng_type335 + __twr_v425;
    *(uint64_t*)(__twr_v429) = __twr_v428;
    __twr_l62:;
    __twr_v430 = (uint64_t)(&LexMatchToken);
    __twr_v431 = 0ULL;
    __twr_v432 = 14ULL;
    __twr_v433 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v430)(__twr_v431, __twr_v432, __twr_v431);
    if (!(__twr_v433)) { goto __twr_l64; } else { goto __twr_l65; }
    __twr_l65:;
    goto __twr_l46;
    __twr_l64:;
    __twr_v434 = (uint64_t)(&LexMatchToken);
    __twr_v435 = (uint64_t)(&_mng_token347);
    __twr_v436 = 15ULL;
    __twr_v437 = 0ULL;
    __twr_v438 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v434)(__twr_v435, __twr_v436, __twr_v437);
    if (__twr_v438) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v439 = (uint64_t)(&LexTokenError);
    __twr_v440 = (uint64_t)(&_mng_token347);
    __twr_v441 = (uint64_t)(&"Expected a right brace or comma");
    __twr_v442 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v439)(__twr_v440, __twr_v441, __twr_v442, __twr_v442, __twr_v442);
    __twr_l66:;
    goto __twr_l45;
    __twr_l46:;
    __twr_l44:;
    _jkl_epilogue:;
}
uint64_t PrsParseInitializer(uint64_t _mng_errtoken443, uint64_t _mng_type444, uint64_t _mng_contentsarray445, uint64_t _mng_backpatcharray446, uint64_t _mng_contentsoffset447) {
    uint64_t _jkl_retv;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t _mng_bracetoken458[4];
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t _mng_expr469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t _mng_byteptr493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t _mng_bpptr514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t _mng_node525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    __twr_v448 = 80ULL;
    __twr_v449 = _mng_type444 + __twr_v448;
    __twr_v450 = *(uint8_t*)(__twr_v449);
    __twr_v451 = 1ULL;
    if (__twr_v450 == __twr_v451) { goto __twr_l69; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v452 = 80ULL;
    __twr_v453 = _mng_type444 + __twr_v452;
    __twr_v454 = *(uint8_t*)(__twr_v453);
    __twr_v455 = 5ULL;
    if (__twr_v454 == __twr_v455) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v456 = (uint64_t)(&LexMatchToken);
    __twr_v457 = (uint64_t)(&_mng_bracetoken458);
    __twr_v459 = 13ULL;
    __twr_v460 = 0ULL;
    __twr_v461 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v456)(__twr_v457, __twr_v459, __twr_v460);
    if (!(__twr_v461)) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v462 = (uint64_t)(&LexTokenError);
    __twr_v463 = (uint64_t)(&_mng_bracetoken458);
    __twr_v464 = (uint64_t)(&"Illegal initializer, expected expression");
    __twr_v465 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v462)(__twr_v463, __twr_v464, __twr_v465, __twr_v465, __twr_v465);
    __twr_l72:;
    __twr_v466 = (uint64_t)(&PrsExpression);
    __twr_v467 = 0ULL;
    __twr_v468 = ((uint64_t (*)(uint64_t))__twr_v466)(__twr_v467);
    _mng_expr469 = __twr_v468;
    __twr_v470 = 40ULL;
    __twr_v471 = _mng_expr469 + __twr_v470;
    __twr_v472 = *(uint8_t*)(__twr_v471);
    __twr_v473 = 3ULL;
    if (__twr_v472 != __twr_v473) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v474 = (uint64_t)(&PrsCheckConstant);
    __twr_v475 = 48ULL;
    __twr_v476 = _mng_expr469 + __twr_v475;
    __twr_v477 = *(uint64_t*)(__twr_v476);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v474)(_mng_expr469, _mng_type444, __twr_v477);
    __twr_l74:;
    if (_mng_contentsarray445) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    _jkl_retv = _mng_expr469;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v478 = (uint64_t)(&PrsIsCompileTime);
    __twr_v479 = ((uint64_t (*)(uint64_t))__twr_v478)(_mng_expr469);
    if (__twr_v479) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v480 = (uint64_t)(&LexTokenError);
    __twr_v481 = 0ULL;
    __twr_v482 = (uint64_t)(&"Expected a compile time value");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v480)(_mng_expr469, __twr_v482, __twr_v481, __twr_v481, __twr_v481);
    __twr_l78:;
    __twr_v483 = 40ULL;
    __twr_v484 = _mng_expr469 + __twr_v483;
    __twr_v485 = *(uint8_t*)(__twr_v484);
    __twr_v486 = 3ULL;
    if (__twr_v485 != __twr_v486) { goto __twr_l82; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v487 = (uint64_t)(&PrsIndexGrowableArray);
    __twr_v488 = 72ULL;
    __twr_v489 = _mng_type444 + __twr_v488;
    __twr_v490 = *(uint64_t*)(__twr_v489);
    __twr_v491 = 0ULL;
    __twr_v492 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v487)(_mng_contentsarray445, _mng_contentsoffset447, __twr_v490, __twr_v491);
    _mng_byteptr493 = __twr_v492;
    __twr_v494 = (uint64_t)(&TlPunchValue);
    __twr_v495 = 48ULL;
    __twr_v496 = _mng_expr469 + __twr_v495;
    __twr_v497 = *(uint64_t*)(__twr_v496);
    __twr_v498 = *(uint64_t*)(__twr_v489);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v494)(_mng_byteptr493, __twr_v497, __twr_v498);
    goto __twr_l80;
    __twr_l82:;
    __twr_v499 = 72ULL;
    __twr_v500 = _mng_type444 + __twr_v499;
    __twr_v501 = *(uint64_t*)(__twr_v500);
    __twr_v502 = (uint64_t)(&JklTargetInfo);
    __twr_v503 = *(uint64_t*)(__twr_v502);
    __twr_v504 = 43ULL;
    __twr_v505 = __twr_v503 + __twr_v504;
    __twr_v506 = *(uint8_t*)(__twr_v505);
    if (__twr_v501 >= __twr_v506) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v507 = (uint64_t)(&LexTokenError);
    __twr_v508 = 0ULL;
    __twr_v509 = (uint64_t)(&"This field is smaller than a pointer");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v507)(_mng_expr469, __twr_v509, __twr_v508, __twr_v508, __twr_v508);
    __twr_l83:;
    __twr_v510 = (uint64_t)(&PrsIndexGrowableArray);
    __twr_v511 = 1ULL;
    __twr_v512 = 3ULL;
    __twr_v513 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v510)(_mng_backpatcharray446, _mng_contentsoffset447, __twr_v511, __twr_v512);
    _mng_bpptr514 = __twr_v513;
    *(uint64_t*)(_mng_bpptr514) = _mng_expr469;
    __twr_l80:;
    __twr_v515 = 0ULL;
    _jkl_retv = __twr_v515;
    goto _jkl_epilogue;
    __twr_l69:;
    __twr_v516 = (uint64_t)(&LexMatchToken);
    __twr_v517 = (uint64_t)(&_mng_bracetoken458);
    __twr_v518 = 13ULL;
    __twr_v519 = 0ULL;
    __twr_v520 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v516)(__twr_v517, __twr_v518, __twr_v519);
    if (__twr_v520) { goto __twr_l85; } else { goto __twr_l86; }
    __twr_l86:;
    __twr_v521 = (uint64_t)(&LexTokenError);
    __twr_v522 = (uint64_t)(&_mng_bracetoken458);
    __twr_v523 = (uint64_t)(&"Expected initializer");
    __twr_v524 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v521)(__twr_v522, __twr_v523, __twr_v524, __twr_v524, __twr_v524);
    __twr_l85:;
    _mng_node525 = 0ULL;
    if (_mng_contentsarray445) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v526 = (uint64_t)(&PrsCreateAstNode);
    __twr_v527 = 5ULL;
    __twr_v528 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v526)(__twr_v527, _mng_errtoken443);
    _mng_node525 = __twr_v528;
    __twr_v529 = 48ULL;
    __twr_v530 = _mng_node525 + __twr_v529;
    _mng_contentsarray445 = __twr_v530;
    __twr_v531 = 72ULL;
    __twr_v532 = _mng_node525 + __twr_v531;
    _mng_backpatcharray446 = __twr_v532;
    __twr_v533 = (uint64_t)(&PrsInitializeGrowableArray);
    __twr_v534 = 72ULL;
    __twr_v535 = _mng_type444 + __twr_v534;
    __twr_v536 = *(uint64_t*)(__twr_v535);
    ((void (*)(uint64_t, uint64_t))__twr_v533)(_mng_contentsarray445, __twr_v536);
    __twr_v537 = *(uint64_t*)(__twr_v535);
    ((void (*)(uint64_t, uint64_t))__twr_v533)(_mng_backpatcharray446, __twr_v537);
    _mng_contentsoffset447 = 0ULL;
    __twr_v538 = 80ULL;
    __twr_v539 = _mng_type444 + __twr_v538;
    __twr_v540 = *(uint8_t*)(__twr_v539);
    __twr_v541 = 1ULL;
    if (__twr_v540 != __twr_v541) { goto __twr_l90; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v542 = 24ULL;
    __twr_v543 = _mng_type444 + __twr_v542;
    __twr_v544 = *(uint8_t*)(__twr_v543);
    if (__twr_v544) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v545 = 0ULL;
    __twr_v546 = 72ULL;
    __twr_v547 = _mng_type444 + __twr_v546;
    *(uint64_t*)(__twr_v547) = __twr_v545;
    __twr_v548 = 8ULL;
    __twr_v549 = _mng_type444 + __twr_v548;
    *(uint64_t*)(__twr_v549) = __twr_v545;
    __twr_l90:;
    goto __twr_l87;
    __twr_l89:;
    __twr_v550 = 80ULL;
    __twr_v551 = _mng_type444 + __twr_v550;
    __twr_v552 = *(uint8_t*)(__twr_v551);
    __twr_v553 = 1ULL;
    if (__twr_v552 != __twr_v553) { goto __twr_l87; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v554 = 24ULL;
    __twr_v555 = _mng_type444 + __twr_v554;
    __twr_v556 = *(uint8_t*)(__twr_v555);
    if (__twr_v556) { goto __twr_l87; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v557 = (uint64_t)(&LexTokenError);
    __twr_v558 = (uint64_t)(&_mng_bracetoken458);
    __twr_v559 = (uint64_t)(&"Can't initialize a boundless array");
    __twr_v560 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v557)(__twr_v558, __twr_v559, __twr_v560, __twr_v560, __twr_v560);
    __twr_l87:;
    __twr_v561 = 80ULL;
    __twr_v562 = _mng_type444 + __twr_v561;
    __twr_v563 = *(uint8_t*)(__twr_v562);
    __twr_v564 = 1ULL;
    if (__twr_v563 != __twr_v564) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v565 = (uint64_t)(&PrsParseArrayInitializer);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v565)(_mng_errtoken443, _mng_type444, _mng_contentsarray445, _mng_backpatcharray446, _mng_contentsoffset447);
    goto __twr_l95;
    __twr_l97:;
    __twr_v566 = (uint64_t)(&PrsParseStructInitializer);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v566)(_mng_errtoken443, _mng_type444, _mng_contentsarray445, _mng_backpatcharray446, _mng_contentsoffset447);
    __twr_l95:;
    if (!(_mng_node525)) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v567 = 80ULL;
    __twr_v568 = _mng_type444 + __twr_v567;
    __twr_v569 = *(uint8_t*)(__twr_v568);
    __twr_v570 = 1ULL;
    if (__twr_v569 != __twr_v570) { goto __twr_l100; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v571 = 24ULL;
    __twr_v572 = _mng_type444 + __twr_v571;
    __twr_v573 = *(uint8_t*)(__twr_v572);
    if (__twr_v573) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v574 = 1ULL;
    __twr_v575 = 24ULL;
    __twr_v576 = _mng_type444 + __twr_v575;
    *(uint8_t*)(__twr_v576) = __twr_v574;
    __twr_l100:;
    __twr_v577 = 72ULL;
    __twr_v578 = _mng_type444 + __twr_v577;
    __twr_v579 = *(uint64_t*)(__twr_v578);
    __twr_v580 = 96ULL;
    __twr_v581 = _mng_node525 + __twr_v580;
    *(uint64_t*)(__twr_v581) = __twr_v579;
    __twr_l98:;
    _jkl_retv = _mng_node525;
    goto _jkl_epilogue;
    __twr_l68:;
    _jkl_epilogue:;
    return _jkl_retv;
}

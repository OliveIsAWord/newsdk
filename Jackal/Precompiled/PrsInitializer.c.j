#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine110, uint64_t _mng_arg111, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread112);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex113);
extern void TlReleaseMutex(uint64_t _mng_mutex114);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue115);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore116);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore117);
extern void JklCompileProgram(uint64_t _mng_argc118, uint64_t _mng_argv119);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg120);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename121, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock122, uint64_t _mng_filepath123);
extern uint64_t LexLookupSection(uint64_t _mng_name124);
extern void LexPushSection(uint64_t _mng_section125);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope126);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg127);
extern void LexExpandMacro(uint64_t _mng_macro128, uint64_t _mng_token129);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream130, uint64_t _mng_macro131);
extern void LexUninitializeStream(uint64_t _mng_stream132);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream133);
extern void LexPushStream(uint64_t _mng_stream134);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream135, uint64_t _mng_fileblock136, uint64_t _mng_handle137);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock138, uint64_t _mng_handle139);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope140);
extern uint64_t LexResetScope(uint64_t _mng_scope141);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope142);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest143, uint64_t _mng_src144);
extern void LexGetToken(uint64_t _mng_token145);
extern void LexPutbackToken(uint64_t _mng_token146);
extern uint64_t LexMatchToken(uint64_t _mng_token147, uint64_t _mng_type148, uint64_t _mng_subtype149);
extern void LexStreamError(uint64_t _mng_str150, uint64_t _mng_err1151, uint64_t _mng_err2152, uint64_t _mng_err3153);
extern void LexTokenError(uint64_t _mng_token154, uint64_t _mng_str155, uint64_t _mng_err1156, uint64_t _mng_err2157, uint64_t _mng_err3158);
extern uint64_t LexCrunchNumber(uint64_t _mng_token159, uint64_t _mng_buffer160);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node161);
extern uint64_t PrsParseInitializer(uint64_t _mng_errtoken162, uint64_t _mng_type163, uint64_t _mng_contentsarray164, uint64_t _mng_backpatcharray165, uint64_t _mng_contentsoffset166);
extern uint64_t PrsExpression(uint64_t _mng_minprecedence167);
extern void PrsCheckConstant(uint64_t _mng_errtoken168, uint64_t _mng_type169, uint64_t _mng_value170);
extern uint64_t PrsIsCompileTime(uint64_t _mng_node171);
extern uint64_t PrsCreateAstNode(uint64_t _mng_type172, uint64_t _mng_token173);
void PrsInitializeGrowableArray(uint64_t _mng_array174, uint64_t _mng_maxlength175) {
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    __twr_v176 = 0ULL;
    *(uint64_t*)(_mng_array174) = __twr_v176;
    __twr_v177 = 8ULL;
    __twr_v178 = _mng_array174 + __twr_v177;
    *(uint64_t*)(__twr_v178) = __twr_v176;
    __twr_v179 = 16ULL;
    __twr_v180 = _mng_array174 + __twr_v179;
    *(uint64_t*)(__twr_v180) = _mng_maxlength175;
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t PrsIndexGrowableArray(uint64_t _mng_array181, uint64_t _mng_index182, uint64_t _mng_length183, uint64_t _mng_unitlog184) {
    uint64_t _jkl_retv;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t _mng_lengthunits188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t _mng_newbuffer213;
    uint64_t _mng_status214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    __twr_v185 = 8ULL;
    __twr_v186 = _mng_array181 + __twr_v185;
    __twr_v187 = *(uint64_t*)(__twr_v186);
    _mng_lengthunits188 = __twr_v187;
    __twr_v189 = _mng_index182 + _mng_length183;
    if (__twr_v189 > _mng_lengthunits188) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v190 = *(uint64_t*)(_mng_array181);
    __twr_v191 = _mng_index182 << _mng_unitlog184;
    __twr_v192 = __twr_v190 + __twr_v191;
    _jkl_retv = __twr_v192;
    goto _jkl_epilogue;
    __twr_l3:;
    if (_mng_lengthunits188) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    _mng_lengthunits188 = 1ULL;
    __twr_l5:;
    __twr_v193 = _mng_index182 + _mng_length183;
    if (__twr_v193 <= _mng_lengthunits188) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v194 = 1ULL;
    __twr_v195 = _mng_lengthunits188 << __twr_v194;
    _mng_lengthunits188 = __twr_v195;
    __twr_l9:;
    __twr_v196 = _mng_index182 + _mng_length183;
    if (__twr_v196 > _mng_lengthunits188) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l8:;
    __twr_v197 = 16ULL;
    __twr_v198 = _mng_array181 + __twr_v197;
    __twr_v199 = *(uint64_t*)(__twr_v198);
    if (!(__twr_v199)) { goto __twr_l10; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v200 = 16ULL;
    __twr_v201 = _mng_array181 + __twr_v200;
    __twr_v202 = *(uint64_t*)(__twr_v201);
    if (_mng_lengthunits188 <= __twr_v202) { goto __twr_l10; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v203 = 16ULL;
    __twr_v204 = _mng_array181 + __twr_v203;
    __twr_v205 = *(uint64_t*)(__twr_v204);
    _mng_lengthunits188 = __twr_v205;
    __twr_l10:;
    __twr_v206 = 7ULL;
    __twr_v207 = _mng_lengthunits188 + __twr_v206;
    _mng_lengthunits188 = __twr_v207;
    __twr_v208 = 18446744073709551608ULL;
    __twr_v209 = _mng_lengthunits188 & __twr_v208;
    _mng_lengthunits188 = __twr_v209;
    __twr_v210 = (uint64_t)(&TlAlloc);
    __twr_v211 = _mng_lengthunits188 << _mng_unitlog184;
    __twr_v212 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v210)(__twr_v211, (uint64_t)(&_mng_newbuffer213));
    _mng_status214 = __twr_v212;
    if (!(_mng_status214)) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v215 = (uint64_t)(&TlInternalError);
    __twr_v216 = (uint64_t)(&"Failed to grow array");
    __twr_v217 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v215)(__twr_v216, __twr_v217, __twr_v217, __twr_v217);
    __twr_l13:;
    __twr_v218 = 8ULL;
    __twr_v219 = _mng_array181 + __twr_v218;
    __twr_v220 = *(uint64_t*)(__twr_v219);
    if (!(__twr_v220)) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v221 = (uint64_t)(&TlCopyMemory);
    __twr_v222 = *(uint64_t*)(_mng_array181);
    __twr_v223 = 8ULL;
    __twr_v224 = _mng_array181 + __twr_v223;
    __twr_v225 = *(uint64_t*)(__twr_v224);
    __twr_v226 = __twr_v225 << _mng_unitlog184;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v221)(_mng_newbuffer213, __twr_v222, __twr_v226);
    __twr_v227 = (uint64_t)(&TlFree);
    __twr_v228 = *(uint64_t*)(_mng_array181);
    ((void (*)(uint64_t))__twr_v227)(__twr_v228);
    __twr_l15:;
    __twr_v229 = (uint64_t)(&TlFillMemoryWithByte);
    __twr_v230 = 8ULL;
    __twr_v231 = _mng_array181 + __twr_v230;
    __twr_v232 = *(uint64_t*)(__twr_v231);
    __twr_v233 = __twr_v232 << _mng_unitlog184;
    __twr_v234 = _mng_newbuffer213 + __twr_v233;
    __twr_v235 = _mng_lengthunits188 - __twr_v232;
    __twr_v236 = __twr_v235 << _mng_unitlog184;
    __twr_v237 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v229)(__twr_v234, __twr_v236, __twr_v237);
    *(uint64_t*)(_mng_array181) = _mng_newbuffer213;
    *(uint64_t*)(__twr_v231) = _mng_lengthunits188;
    __twr_v238 = *(uint64_t*)(_mng_array181);
    __twr_v239 = _mng_index182 << _mng_unitlog184;
    __twr_v240 = __twr_v238 + __twr_v239;
    _jkl_retv = __twr_v240;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void PrsParseArrayInitializer(uint64_t _mng_errtoken241, uint64_t _mng_type242, uint64_t _mng_contentsarray243, uint64_t _mng_backpatcharray244, uint64_t _mng_contentsoffset245) {
    uint64_t __twr_v246;
    uint64_t _mng_basetype247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t _mng_elementsize263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t _mng_bound267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t _mng_hasbound271;
    uint64_t _mng_index272;
    uint64_t _mng_offset273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t _mng_token276[4];
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t _mng_expr288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    __twr_v246 = *(uint64_t*)(_mng_type242);
    _mng_basetype247 = __twr_v246;
    __twr_v248 = 80ULL;
    __twr_v249 = _mng_basetype247 + __twr_v248;
    __twr_v250 = *(uint8_t*)(__twr_v249);
    __twr_v251 = 3ULL;
    if (__twr_v250 != __twr_v251) { goto __twr_l19; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v252 = *(uint64_t*)(_mng_basetype247);
    __twr_v253 = 104ULL;
    __twr_v254 = __twr_v252 + __twr_v253;
    __twr_v255 = *(uint64_t*)(__twr_v254);
    _mng_basetype247 = __twr_v255;
    __twr_l20:;
    __twr_v256 = 80ULL;
    __twr_v257 = _mng_basetype247 + __twr_v256;
    __twr_v258 = *(uint8_t*)(__twr_v257);
    __twr_v259 = 3ULL;
    if (__twr_v258 == __twr_v259) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v260 = 16ULL;
    __twr_v261 = _mng_type242 + __twr_v260;
    __twr_v262 = *(uint64_t*)(__twr_v261);
    _mng_elementsize263 = __twr_v262;
    __twr_v264 = 8ULL;
    __twr_v265 = _mng_type242 + __twr_v264;
    __twr_v266 = *(uint64_t*)(__twr_v265);
    _mng_bound267 = __twr_v266;
    __twr_v268 = 24ULL;
    __twr_v269 = _mng_type242 + __twr_v268;
    __twr_v270 = *(uint8_t*)(__twr_v269);
    _mng_hasbound271 = __twr_v270;
    _mng_index272 = 0ULL;
    _mng_offset273 = 0ULL;
    __twr_l21:;
    __twr_v274 = (uint64_t)(&LexMatchToken);
    __twr_v275 = (uint64_t)(&_mng_token276);
    __twr_v277 = 14ULL;
    __twr_v278 = 0ULL;
    __twr_v279 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v274)(__twr_v275, __twr_v277, __twr_v278);
    if (!(__twr_v279)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    goto __twr_l22;
    __twr_l23:;
    __twr_v280 = (uint64_t)(&LexMatchToken);
    __twr_v281 = 0ULL;
    __twr_v282 = 3ULL;
    __twr_v283 = 70ULL;
    __twr_v284 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v280)(__twr_v281, __twr_v282, __twr_v283);
    if (!(__twr_v284)) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v285 = (uint64_t)(&PrsExpression);
    __twr_v286 = 0ULL;
    __twr_v287 = ((uint64_t (*)(uint64_t))__twr_v285)(__twr_v286);
    _mng_expr288 = __twr_v287;
    __twr_v289 = (uint64_t)(&LexMatchToken);
    __twr_v290 = (uint64_t)(&_mng_token276);
    __twr_v291 = 11ULL;
    __twr_v292 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v289)(__twr_v290, __twr_v291, __twr_v286);
    if (__twr_v292) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v293 = (uint64_t)(&LexTokenError);
    __twr_v294 = (uint64_t)(&_mng_token276);
    __twr_v295 = (uint64_t)(&"Expected a right bracket");
    __twr_v296 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v293)(__twr_v294, __twr_v295, __twr_v296, __twr_v296, __twr_v296);
    __twr_l27:;
    __twr_v297 = (uint64_t)(&LexMatchToken);
    __twr_v298 = (uint64_t)(&_mng_token276);
    __twr_v299 = 8ULL;
    __twr_v300 = 73ULL;
    __twr_v301 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v297)(__twr_v298, __twr_v299, __twr_v300);
    if (__twr_v301) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v302 = (uint64_t)(&LexTokenError);
    __twr_v303 = (uint64_t)(&_mng_token276);
    __twr_v304 = (uint64_t)(&"Expected an equals sign");
    __twr_v305 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v302)(__twr_v303, __twr_v304, __twr_v305, __twr_v305, __twr_v305);
    __twr_l29:;
    __twr_v306 = 40ULL;
    __twr_v307 = _mng_expr288 + __twr_v306;
    __twr_v308 = *(uint8_t*)(__twr_v307);
    __twr_v309 = 3ULL;
    if (__twr_v308 == __twr_v309) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v310 = (uint64_t)(&LexTokenError);
    __twr_v311 = 0ULL;
    __twr_v312 = (uint64_t)(&"Expected a constant value");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v310)(_mng_expr288, __twr_v312, __twr_v311, __twr_v311, __twr_v311);
    __twr_l31:;
    __twr_v313 = 48ULL;
    __twr_v314 = _mng_expr288 + __twr_v313;
    __twr_v315 = *(uint64_t*)(__twr_v314);
    _mng_index272 = __twr_v315;
    __twr_v316 = _mng_index272 * _mng_elementsize263;
    _mng_offset273 = __twr_v316;
    __twr_l25:;
    if (_mng_index272 < _mng_bound267) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    if (!(_mng_hasbound271)) { goto __twr_l37; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v317 = (uint64_t)(&LexTokenError);
    __twr_v318 = (uint64_t)(&_mng_token276);
    __twr_v319 = (uint64_t)(&"Index exceeds array bound");
    __twr_v320 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v317)(__twr_v318, __twr_v319, __twr_v320, __twr_v320, __twr_v320);
    goto __twr_l35;
    __twr_l37:;
    __twr_v321 = 1ULL;
    __twr_v322 = _mng_index272 + __twr_v321;
    _mng_bound267 = __twr_v322;
    __twr_v323 = 8ULL;
    __twr_v324 = _mng_type242 + __twr_v323;
    *(uint64_t*)(__twr_v324) = _mng_bound267;
    __twr_l35:;
    __twr_l33:;
    __twr_v325 = (uint64_t)(&PrsParseInitializer);
    __twr_v326 = (uint64_t)(&_mng_token276);
    __twr_v327 = _mng_contentsoffset245 + _mng_offset273;
    __twr_v328 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v325)(__twr_v326, _mng_basetype247, _mng_contentsarray243, _mng_backpatcharray244, __twr_v327);
    __twr_v329 = 72ULL;
    __twr_v330 = _mng_basetype247 + __twr_v329;
    __twr_v331 = *(uint64_t*)(__twr_v330);
    __twr_v332 = _mng_offset273 + __twr_v331;
    __twr_v333 = _mng_type242 + __twr_v329;
    __twr_v334 = *(uint64_t*)(__twr_v333);
    if (__twr_v332 <= __twr_v334) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v335 = 72ULL;
    __twr_v336 = _mng_basetype247 + __twr_v335;
    __twr_v337 = *(uint64_t*)(__twr_v336);
    __twr_v338 = _mng_offset273 + __twr_v337;
    __twr_v339 = _mng_type242 + __twr_v335;
    *(uint64_t*)(__twr_v339) = __twr_v338;
    __twr_l38:;
    __twr_v340 = 1ULL;
    __twr_v341 = _mng_index272 + __twr_v340;
    _mng_index272 = __twr_v341;
    __twr_v342 = _mng_offset273 + _mng_elementsize263;
    _mng_offset273 = __twr_v342;
    __twr_v343 = (uint64_t)(&LexMatchToken);
    __twr_v344 = 0ULL;
    __twr_v345 = 14ULL;
    __twr_v346 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v343)(__twr_v344, __twr_v345, __twr_v344);
    if (!(__twr_v346)) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l41:;
    goto __twr_l22;
    __twr_l40:;
    __twr_v347 = (uint64_t)(&LexMatchToken);
    __twr_v348 = (uint64_t)(&_mng_token276);
    __twr_v349 = 15ULL;
    __twr_v350 = 0ULL;
    __twr_v351 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v347)(__twr_v348, __twr_v349, __twr_v350);
    if (__twr_v351) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v352 = (uint64_t)(&LexTokenError);
    __twr_v353 = (uint64_t)(&_mng_token276);
    __twr_v354 = (uint64_t)(&"Expected a right brace or comma");
    __twr_v355 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v352)(__twr_v353, __twr_v354, __twr_v355, __twr_v355, __twr_v355);
    __twr_l42:;
    goto __twr_l21;
    __twr_l22:;
    __twr_l17:;
    _jkl_epilogue:;
}
void PrsParseStructInitializer(uint64_t _mng_errtoken356, uint64_t _mng_type357, uint64_t _mng_contentsarray358, uint64_t _mng_backpatcharray359, uint64_t _mng_contentsoffset360) {
    uint64_t __twr_v361;
    uint64_t _mng_fieldscope362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t _mng_token369[4];
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t _mng_fieldsymbol399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t _mng_offset420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t _mng_striptype424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    __twr_v361 = *(uint64_t*)(_mng_type357);
    _mng_fieldscope362 = __twr_v361;
    __twr_l45:;
    __twr_v363 = (uint64_t)(&LexMatchToken);
    __twr_v364 = 0ULL;
    __twr_v365 = 14ULL;
    __twr_v366 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v363)(__twr_v364, __twr_v365, __twr_v364);
    if (!(__twr_v366)) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    goto __twr_l46;
    __twr_l47:;
    __twr_v367 = (uint64_t)(&LexMatchToken);
    __twr_v368 = (uint64_t)(&_mng_token369);
    __twr_v370 = 3ULL;
    __twr_v371 = 70ULL;
    __twr_v372 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v367)(__twr_v368, __twr_v370, __twr_v371);
    if (__twr_v372) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_v373 = (uint64_t)(&LexTokenError);
    __twr_v374 = (uint64_t)(&_mng_token369);
    __twr_v375 = (uint64_t)(&"Expected a left bracket");
    __twr_v376 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v373)(__twr_v374, __twr_v375, __twr_v376, __twr_v376, __twr_v376);
    __twr_l49:;
    __twr_v377 = (uint64_t)(&LexEnterOverlayScope);
    ((void (*)(uint64_t))__twr_v377)(_mng_fieldscope362);
    __twr_v378 = (uint64_t)(&LexMatchToken);
    __twr_v379 = (uint64_t)(&_mng_token369);
    __twr_v380 = 18ULL;
    __twr_v381 = 0ULL;
    __twr_v382 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v378)(__twr_v379, __twr_v380, __twr_v381);
    if (__twr_v382) { goto __twr_l51; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v383 = (uint64_t)(&LexTokenError);
    __twr_v384 = (uint64_t)(&_mng_token369);
    __twr_v385 = (uint64_t)(&"Expected an identifier");
    __twr_v386 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v383)(__twr_v384, __twr_v385, __twr_v386, __twr_v386, __twr_v386);
    __twr_l51:;
    __twr_v387 = (uint64_t)(&_mng_token369);
    __twr_v388 = 25ULL;
    __twr_v389 = __twr_v387 + __twr_v388;
    __twr_v390 = *(uint8_t*)(__twr_v389);
    __twr_v391 = 86ULL;
    if (__twr_v390 == __twr_v391) { goto __twr_l53; } else { goto __twr_l54; }
    __twr_l54:;
    __twr_v392 = (uint64_t)(&LexTokenError);
    __twr_v393 = (uint64_t)(&_mng_token369);
    __twr_v394 = (uint64_t)(&"Non-existent field name");
    __twr_v395 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v392)(__twr_v393, __twr_v394, __twr_v395, __twr_v395, __twr_v395);
    __twr_l53:;
    __twr_v396 = (uint64_t)(&_mng_token369);
    __twr_v397 = 0ULL;
    __twr_v398 = *(uint64_t*)(__twr_v396);
    _mng_fieldsymbol399 = __twr_v398;
    __twr_v400 = (uint64_t)(&LexExitOverlayScope);
    ((void (*)())__twr_v400)();
    __twr_v401 = (uint64_t)(&LexMatchToken);
    __twr_v402 = 11ULL;
    __twr_v403 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v401)(__twr_v396, __twr_v402, __twr_v397);
    if (__twr_v403) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v404 = (uint64_t)(&LexTokenError);
    __twr_v405 = (uint64_t)(&_mng_token369);
    __twr_v406 = (uint64_t)(&"Expected a right bracket");
    __twr_v407 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v404)(__twr_v405, __twr_v406, __twr_v407, __twr_v407, __twr_v407);
    __twr_l55:;
    __twr_v408 = (uint64_t)(&LexMatchToken);
    __twr_v409 = (uint64_t)(&_mng_token369);
    __twr_v410 = 8ULL;
    __twr_v411 = 73ULL;
    __twr_v412 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v408)(__twr_v409, __twr_v410, __twr_v411);
    if (__twr_v412) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v413 = (uint64_t)(&LexTokenError);
    __twr_v414 = (uint64_t)(&_mng_token369);
    __twr_v415 = (uint64_t)(&"Expected an equals sign");
    __twr_v416 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v413)(__twr_v414, __twr_v415, __twr_v416, __twr_v416, __twr_v416);
    __twr_l57:;
    __twr_v417 = 88ULL;
    __twr_v418 = _mng_fieldsymbol399 + __twr_v417;
    __twr_v419 = *(uint64_t*)(__twr_v418);
    _mng_offset420 = __twr_v419;
    __twr_v421 = 104ULL;
    __twr_v422 = _mng_fieldsymbol399 + __twr_v421;
    __twr_v423 = *(uint64_t*)(__twr_v422);
    _mng_striptype424 = __twr_v423;
    __twr_v425 = 80ULL;
    __twr_v426 = _mng_striptype424 + __twr_v425;
    __twr_v427 = *(uint8_t*)(__twr_v426);
    __twr_v428 = 3ULL;
    if (__twr_v427 != __twr_v428) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v429 = *(uint64_t*)(_mng_striptype424);
    __twr_v430 = 104ULL;
    __twr_v431 = __twr_v429 + __twr_v430;
    __twr_v432 = *(uint64_t*)(__twr_v431);
    _mng_striptype424 = __twr_v432;
    __twr_l61:;
    __twr_v433 = 80ULL;
    __twr_v434 = _mng_striptype424 + __twr_v433;
    __twr_v435 = *(uint8_t*)(__twr_v434);
    __twr_v436 = 3ULL;
    if (__twr_v435 == __twr_v436) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v437 = (uint64_t)(&PrsParseInitializer);
    __twr_v438 = (uint64_t)(&_mng_token369);
    __twr_v439 = _mng_contentsoffset360 + _mng_offset420;
    __twr_v440 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v437)(__twr_v438, _mng_striptype424, _mng_contentsarray358, _mng_backpatcharray359, __twr_v439);
    __twr_v441 = 72ULL;
    __twr_v442 = _mng_striptype424 + __twr_v441;
    __twr_v443 = *(uint64_t*)(__twr_v442);
    __twr_v444 = _mng_offset420 + __twr_v443;
    __twr_v445 = _mng_type357 + __twr_v441;
    __twr_v446 = *(uint64_t*)(__twr_v445);
    if (__twr_v444 <= __twr_v446) { goto __twr_l62; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v447 = 72ULL;
    __twr_v448 = _mng_striptype424 + __twr_v447;
    __twr_v449 = *(uint64_t*)(__twr_v448);
    __twr_v450 = _mng_offset420 + __twr_v449;
    __twr_v451 = _mng_type357 + __twr_v447;
    *(uint64_t*)(__twr_v451) = __twr_v450;
    __twr_l62:;
    __twr_v452 = (uint64_t)(&LexMatchToken);
    __twr_v453 = 0ULL;
    __twr_v454 = 14ULL;
    __twr_v455 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v452)(__twr_v453, __twr_v454, __twr_v453);
    if (!(__twr_v455)) { goto __twr_l64; } else { goto __twr_l65; }
    __twr_l65:;
    goto __twr_l46;
    __twr_l64:;
    __twr_v456 = (uint64_t)(&LexMatchToken);
    __twr_v457 = (uint64_t)(&_mng_token369);
    __twr_v458 = 15ULL;
    __twr_v459 = 0ULL;
    __twr_v460 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v456)(__twr_v457, __twr_v458, __twr_v459);
    if (__twr_v460) { goto __twr_l66; } else { goto __twr_l67; }
    __twr_l67:;
    __twr_v461 = (uint64_t)(&LexTokenError);
    __twr_v462 = (uint64_t)(&_mng_token369);
    __twr_v463 = (uint64_t)(&"Expected a right brace or comma");
    __twr_v464 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v461)(__twr_v462, __twr_v463, __twr_v464, __twr_v464, __twr_v464);
    __twr_l66:;
    goto __twr_l45;
    __twr_l46:;
    __twr_l44:;
    _jkl_epilogue:;
}
uint64_t PrsParseInitializer(uint64_t _mng_errtoken465, uint64_t _mng_type466, uint64_t _mng_contentsarray467, uint64_t _mng_backpatcharray468, uint64_t _mng_contentsoffset469) {
    uint64_t _jkl_retv;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t _mng_bracetoken480[4];
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t _mng_expr491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t _mng_byteptr515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t _mng_bpptr536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t _mng_node547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    __twr_v470 = 80ULL;
    __twr_v471 = _mng_type466 + __twr_v470;
    __twr_v472 = *(uint8_t*)(__twr_v471);
    __twr_v473 = 1ULL;
    if (__twr_v472 == __twr_v473) { goto __twr_l69; } else { goto __twr_l71; }
    __twr_l71:;
    __twr_v474 = 80ULL;
    __twr_v475 = _mng_type466 + __twr_v474;
    __twr_v476 = *(uint8_t*)(__twr_v475);
    __twr_v477 = 5ULL;
    if (__twr_v476 == __twr_v477) { goto __twr_l69; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v478 = (uint64_t)(&LexMatchToken);
    __twr_v479 = (uint64_t)(&_mng_bracetoken480);
    __twr_v481 = 13ULL;
    __twr_v482 = 0ULL;
    __twr_v483 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v478)(__twr_v479, __twr_v481, __twr_v482);
    if (!(__twr_v483)) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_v484 = (uint64_t)(&LexTokenError);
    __twr_v485 = (uint64_t)(&_mng_bracetoken480);
    __twr_v486 = (uint64_t)(&"Illegal initializer, expected expression");
    __twr_v487 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v484)(__twr_v485, __twr_v486, __twr_v487, __twr_v487, __twr_v487);
    __twr_l72:;
    __twr_v488 = (uint64_t)(&PrsExpression);
    __twr_v489 = 0ULL;
    __twr_v490 = ((uint64_t (*)(uint64_t))__twr_v488)(__twr_v489);
    _mng_expr491 = __twr_v490;
    __twr_v492 = 40ULL;
    __twr_v493 = _mng_expr491 + __twr_v492;
    __twr_v494 = *(uint8_t*)(__twr_v493);
    __twr_v495 = 3ULL;
    if (__twr_v494 != __twr_v495) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v496 = (uint64_t)(&PrsCheckConstant);
    __twr_v497 = 48ULL;
    __twr_v498 = _mng_expr491 + __twr_v497;
    __twr_v499 = *(uint64_t*)(__twr_v498);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v496)(_mng_expr491, _mng_type466, __twr_v499);
    __twr_l74:;
    if (_mng_contentsarray467) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    _jkl_retv = _mng_expr491;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v500 = (uint64_t)(&PrsIsCompileTime);
    __twr_v501 = ((uint64_t (*)(uint64_t))__twr_v500)(_mng_expr491);
    if (__twr_v501) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v502 = (uint64_t)(&LexTokenError);
    __twr_v503 = 0ULL;
    __twr_v504 = (uint64_t)(&"Expected a compile time value");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v502)(_mng_expr491, __twr_v504, __twr_v503, __twr_v503, __twr_v503);
    __twr_l78:;
    __twr_v505 = 40ULL;
    __twr_v506 = _mng_expr491 + __twr_v505;
    __twr_v507 = *(uint8_t*)(__twr_v506);
    __twr_v508 = 3ULL;
    if (__twr_v507 != __twr_v508) { goto __twr_l82; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v509 = (uint64_t)(&PrsIndexGrowableArray);
    __twr_v510 = 72ULL;
    __twr_v511 = _mng_type466 + __twr_v510;
    __twr_v512 = *(uint64_t*)(__twr_v511);
    __twr_v513 = 0ULL;
    __twr_v514 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v509)(_mng_contentsarray467, _mng_contentsoffset469, __twr_v512, __twr_v513);
    _mng_byteptr515 = __twr_v514;
    __twr_v516 = (uint64_t)(&TlPunchValue);
    __twr_v517 = 48ULL;
    __twr_v518 = _mng_expr491 + __twr_v517;
    __twr_v519 = *(uint64_t*)(__twr_v518);
    __twr_v520 = *(uint64_t*)(__twr_v511);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v516)(_mng_byteptr515, __twr_v519, __twr_v520);
    goto __twr_l80;
    __twr_l82:;
    __twr_v521 = 72ULL;
    __twr_v522 = _mng_type466 + __twr_v521;
    __twr_v523 = *(uint64_t*)(__twr_v522);
    __twr_v524 = (uint64_t)(&JklTargetInfo);
    __twr_v525 = *(uint64_t*)(__twr_v524);
    __twr_v526 = 43ULL;
    __twr_v527 = __twr_v525 + __twr_v526;
    __twr_v528 = *(uint8_t*)(__twr_v527);
    if (__twr_v523 >= __twr_v528) { goto __twr_l83; } else { goto __twr_l84; }
    __twr_l84:;
    __twr_v529 = (uint64_t)(&LexTokenError);
    __twr_v530 = 0ULL;
    __twr_v531 = (uint64_t)(&"This field is smaller than a pointer");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v529)(_mng_expr491, __twr_v531, __twr_v530, __twr_v530, __twr_v530);
    __twr_l83:;
    __twr_v532 = (uint64_t)(&PrsIndexGrowableArray);
    __twr_v533 = 1ULL;
    __twr_v534 = 3ULL;
    __twr_v535 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v532)(_mng_backpatcharray468, _mng_contentsoffset469, __twr_v533, __twr_v534);
    _mng_bpptr536 = __twr_v535;
    *(uint64_t*)(_mng_bpptr536) = _mng_expr491;
    __twr_l80:;
    __twr_v537 = 0ULL;
    _jkl_retv = __twr_v537;
    goto _jkl_epilogue;
    __twr_l69:;
    __twr_v538 = (uint64_t)(&LexMatchToken);
    __twr_v539 = (uint64_t)(&_mng_bracetoken480);
    __twr_v540 = 13ULL;
    __twr_v541 = 0ULL;
    __twr_v542 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v538)(__twr_v539, __twr_v540, __twr_v541);
    if (__twr_v542) { goto __twr_l85; } else { goto __twr_l86; }
    __twr_l86:;
    __twr_v543 = (uint64_t)(&LexTokenError);
    __twr_v544 = (uint64_t)(&_mng_bracetoken480);
    __twr_v545 = (uint64_t)(&"Expected initializer");
    __twr_v546 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v543)(__twr_v544, __twr_v545, __twr_v546, __twr_v546, __twr_v546);
    __twr_l85:;
    _mng_node547 = 0ULL;
    if (_mng_contentsarray467) { goto __twr_l89; } else { goto __twr_l88; }
    __twr_l88:;
    __twr_v548 = (uint64_t)(&PrsCreateAstNode);
    __twr_v549 = 5ULL;
    __twr_v550 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v548)(__twr_v549, _mng_errtoken465);
    _mng_node547 = __twr_v550;
    __twr_v551 = 48ULL;
    __twr_v552 = _mng_node547 + __twr_v551;
    _mng_contentsarray467 = __twr_v552;
    __twr_v553 = 72ULL;
    __twr_v554 = _mng_node547 + __twr_v553;
    _mng_backpatcharray468 = __twr_v554;
    __twr_v555 = (uint64_t)(&PrsInitializeGrowableArray);
    __twr_v556 = 72ULL;
    __twr_v557 = _mng_type466 + __twr_v556;
    __twr_v558 = *(uint64_t*)(__twr_v557);
    ((void (*)(uint64_t, uint64_t))__twr_v555)(_mng_contentsarray467, __twr_v558);
    __twr_v559 = *(uint64_t*)(__twr_v557);
    ((void (*)(uint64_t, uint64_t))__twr_v555)(_mng_backpatcharray468, __twr_v559);
    _mng_contentsoffset469 = 0ULL;
    __twr_v560 = 80ULL;
    __twr_v561 = _mng_type466 + __twr_v560;
    __twr_v562 = *(uint8_t*)(__twr_v561);
    __twr_v563 = 1ULL;
    if (__twr_v562 != __twr_v563) { goto __twr_l90; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v564 = 24ULL;
    __twr_v565 = _mng_type466 + __twr_v564;
    __twr_v566 = *(uint8_t*)(__twr_v565);
    if (__twr_v566) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v567 = 0ULL;
    __twr_v568 = 72ULL;
    __twr_v569 = _mng_type466 + __twr_v568;
    *(uint64_t*)(__twr_v569) = __twr_v567;
    __twr_v570 = 8ULL;
    __twr_v571 = _mng_type466 + __twr_v570;
    *(uint64_t*)(__twr_v571) = __twr_v567;
    __twr_l90:;
    goto __twr_l87;
    __twr_l89:;
    __twr_v572 = 80ULL;
    __twr_v573 = _mng_type466 + __twr_v572;
    __twr_v574 = *(uint8_t*)(__twr_v573);
    __twr_v575 = 1ULL;
    if (__twr_v574 != __twr_v575) { goto __twr_l87; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v576 = 24ULL;
    __twr_v577 = _mng_type466 + __twr_v576;
    __twr_v578 = *(uint8_t*)(__twr_v577);
    if (__twr_v578) { goto __twr_l87; } else { goto __twr_l93; }
    __twr_l93:;
    __twr_v579 = (uint64_t)(&LexTokenError);
    __twr_v580 = (uint64_t)(&_mng_bracetoken480);
    __twr_v581 = (uint64_t)(&"Can't initialize a boundless array");
    __twr_v582 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v579)(__twr_v580, __twr_v581, __twr_v582, __twr_v582, __twr_v582);
    __twr_l87:;
    __twr_v583 = 80ULL;
    __twr_v584 = _mng_type466 + __twr_v583;
    __twr_v585 = *(uint8_t*)(__twr_v584);
    __twr_v586 = 1ULL;
    if (__twr_v585 != __twr_v586) { goto __twr_l97; } else { goto __twr_l96; }
    __twr_l96:;
    __twr_v587 = (uint64_t)(&PrsParseArrayInitializer);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v587)(_mng_errtoken465, _mng_type466, _mng_contentsarray467, _mng_backpatcharray468, _mng_contentsoffset469);
    goto __twr_l95;
    __twr_l97:;
    __twr_v588 = (uint64_t)(&PrsParseStructInitializer);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v588)(_mng_errtoken465, _mng_type466, _mng_contentsarray467, _mng_backpatcharray468, _mng_contentsoffset469);
    __twr_l95:;
    if (!(_mng_node547)) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v589 = 80ULL;
    __twr_v590 = _mng_type466 + __twr_v589;
    __twr_v591 = *(uint8_t*)(__twr_v590);
    __twr_v592 = 1ULL;
    if (__twr_v591 != __twr_v592) { goto __twr_l100; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v593 = 24ULL;
    __twr_v594 = _mng_type466 + __twr_v593;
    __twr_v595 = *(uint8_t*)(__twr_v594);
    if (__twr_v595) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v596 = 1ULL;
    __twr_v597 = 24ULL;
    __twr_v598 = _mng_type466 + __twr_v597;
    *(uint8_t*)(__twr_v598) = __twr_v596;
    __twr_l100:;
    __twr_v599 = 72ULL;
    __twr_v600 = _mng_type466 + __twr_v599;
    __twr_v601 = *(uint64_t*)(__twr_v600);
    __twr_v602 = 96ULL;
    __twr_v603 = _mng_node547 + __twr_v602;
    *(uint64_t*)(__twr_v603) = __twr_v601;
    __twr_l98:;
    _jkl_retv = _mng_node547;
    goto _jkl_epilogue;
    __twr_l68:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_ptr20);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_ptr22);
extern void TlFree(uint64_t _mng_ptr23);
extern uint64_t TlCompareString(uint64_t _mng_str124, uint64_t _mng_str225);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str126, uint64_t _mng_str227, uint64_t _mng_count28);
extern void TlCopyString(uint64_t _mng_dest29, uint64_t _mng_src30, uint64_t _mng_bufsize31);
extern uint64_t TlOpenSource(uint64_t _mng_filename32, uint64_t _mng_handle33);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_handle35);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_created54);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable55, uint64_t _mng_key56);
extern void TlRemoveHashTable(uint64_t _mng_entry57);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable58, uint64_t _mng_enumfunc59);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable60, uint64_t _mng_key61, uint64_t _mng_hash62);
extern uint64_t TlHashString(uint64_t _mng_str63);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable64, uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope67, uint64_t _mng_deletefunc68);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable69);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_name71);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable72, uint64_t _mng_entry73, uint64_t _mng_name74);
extern void TlRemoveSymbolTable(uint64_t _mng_entry75);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array77);
extern void TlInsertDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_byte79);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array80, uint64_t _mng_srcbuf81, uint64_t _mng_length82);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array83, uint64_t _mng_number84, uint64_t _mng_base85);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array86);
extern uint64_t TlMatchPath(uint64_t _mng_path87, uint64_t _mng_pathset88, uint64_t _mng_resultingpath89, uint64_t _mng_handle90);
extern void TlCopyParentPath(uint64_t _mng_srcpath91, uint64_t _mng_destpath92);
extern void TlInitializeZone(uint64_t _mng_zone93, uint64_t _mng_blocksize94);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone95);
extern void TlFreeToZone(uint64_t _mng_zone96, uint64_t _mng_block97);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant98);
extern void TlPunchValue(uint64_t _mng_ptr99, uint64_t _mng_value100, uint64_t _mng_bytes101);
void TlInitializeHashTable(uint64_t _mng_hashtable102) {
    uint64_t __twr_v103;
    uint64_t __twr_v104;
    uint64_t _mng_listhead105;
    uint64_t __twr_v106;
    uint64_t __twr_v107;
    uint64_t __twr_v108;
    uint64_t _mng_i109;
    uint64_t __twr_v110;
    uint64_t __twr_v111;
    uint64_t __twr_v112;
    uint64_t __twr_v113;
    uint64_t __twr_v114;
    uint64_t __twr_v115;
    uint64_t _mng_listhead116;
    uint64_t __twr_v117;
    uint64_t __twr_v118;
    uint64_t __twr_v119;
    uint64_t __twr_v120;
    uint64_t __twr_v121;
    uint64_t __twr_v122;
    uint64_t __twr_v123;
    __twr_v103 = 0ULL;
    __twr_v104 = _mng_hashtable102;
    _mng_listhead105 = _mng_hashtable102;
    __twr_v106 = 8ULL;
    __twr_v107 = _mng_hashtable102 + __twr_v106;
    *(uint64_t*)(__twr_v107) = _mng_hashtable102;
    __twr_v108 = _mng_hashtable102;
    *(uint64_t*)(_mng_hashtable102) = _mng_hashtable102;
    _mng_i109 = __twr_v103;
    __twr_v110 = 97ULL;
    goto __twr_l1;
    __twr_l1:;
    __twr_v111 = 16ULL;
    __twr_v112 = _mng_hashtable102 + __twr_v111;
    __twr_v113 = 4ULL;
    __twr_v114 = _mng_i109 << __twr_v113;
    __twr_v115 = __twr_v112 + __twr_v114;
    _mng_listhead116 = __twr_v115;
    __twr_v117 = 8ULL;
    __twr_v118 = __twr_v115 + __twr_v117;
    *(uint64_t*)(__twr_v118) = __twr_v115;
    __twr_v119 = 0ULL;
    __twr_v120 = __twr_v115;
    *(uint64_t*)(__twr_v115) = __twr_v115;
    __twr_v121 = 1ULL;
    __twr_v122 = _mng_i109 + __twr_v121;
    _mng_i109 = __twr_v122;
    __twr_l3:;
    __twr_v123 = 97ULL;
    if (_mng_i109 < __twr_v123) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable124) {
    uint64_t __twr_v125;
    uint64_t _mng_i126;
    uint64_t __twr_v127;
    uint64_t __twr_v128;
    uint64_t _mng_entries129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t __twr_v133;
    uint64_t __twr_v134;
    uint64_t _mng_head135;
    uint64_t __twr_v136;
    uint64_t __twr_v137;
    uint64_t _mng_listentry138;
    uint64_t __twr_v139;
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    __twr_v125 = 0ULL;
    _mng_i126 = __twr_v125;
    __twr_v127 = 97ULL;
    goto __twr_l4;
    __twr_l4:;
    __twr_v128 = 0ULL;
    _mng_entries129 = __twr_v128;
    __twr_v130 = 16ULL;
    __twr_v131 = _mng_hashtable124 + __twr_v130;
    __twr_v132 = 4ULL;
    __twr_v133 = _mng_i126 << __twr_v132;
    __twr_v134 = __twr_v131 + __twr_v133;
    _mng_head135 = __twr_v134;
    __twr_v136 = __twr_v134;
    __twr_v137 = *(uint64_t*)(__twr_v134);
    _mng_listentry138 = __twr_v137;
    if (__twr_v137 != __twr_v134) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l7:;
    __twr_v139 = 1ULL;
    __twr_v140 = _mng_entries129 + __twr_v139;
    _mng_entries129 = __twr_v140;
    __twr_v141 = 0ULL;
    __twr_v142 = _mng_listentry138;
    __twr_v143 = *(uint64_t*)(_mng_listentry138);
    _mng_listentry138 = __twr_v143;
    __twr_l9:;
    if (_mng_listentry138 != _mng_head135) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l8:;
    if (_mng_entries129) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l11:;
    __twr_v144 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v144)(_mng_i126);
    __twr_v145 = (uint64_t)(&TlPrintString);
    __twr_v146 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v145)(__twr_v146);
    ((void (*)(uint64_t))__twr_v144)(_mng_entries129);
    __twr_v147 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v145)(__twr_v147);
    __twr_l10:;
    __twr_v148 = 1ULL;
    __twr_v149 = _mng_i126 + __twr_v148;
    _mng_i126 = __twr_v149;
    __twr_l6:;
    __twr_v150 = 97ULL;
    if (_mng_i126 < __twr_v150) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable151, uint64_t _mng_entry152, uint64_t _mng_key153, uint64_t _mng_hash154) {
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t _mng_listhead164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t _mng_listentry167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t _mng_first170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t _mng_listhead176;
    uint64_t __twr_v177;
    uint64_t _mng_listentry178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t _mng_first181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    __twr_v155 = 32ULL;
    __twr_v156 = _mng_entry152 + __twr_v155;
    *(uint64_t*)(__twr_v156) = _mng_hashtable151;
    __twr_v157 = 40ULL;
    __twr_v158 = _mng_entry152 + __twr_v157;
    *(uint64_t*)(__twr_v158) = _mng_key153;
    __twr_v159 = 16ULL;
    __twr_v160 = _mng_hashtable151 + __twr_v159;
    __twr_v161 = 4ULL;
    __twr_v162 = _mng_hash154 << __twr_v161;
    __twr_v163 = __twr_v160 + __twr_v162;
    _mng_listhead164 = __twr_v163;
    __twr_v165 = 0ULL;
    __twr_v166 = _mng_entry152;
    _mng_listentry167 = _mng_entry152;
    __twr_v168 = __twr_v163;
    __twr_v169 = *(uint64_t*)(__twr_v163);
    _mng_first170 = __twr_v169;
    __twr_v171 = _mng_entry152;
    *(uint64_t*)(_mng_entry152) = __twr_v169;
    __twr_v172 = 8ULL;
    __twr_v173 = _mng_entry152 + __twr_v172;
    *(uint64_t*)(__twr_v173) = __twr_v163;
    __twr_v174 = __twr_v169 + __twr_v172;
    *(uint64_t*)(__twr_v174) = _mng_entry152;
    *(uint64_t*)(__twr_v163) = _mng_entry152;
    __twr_v175 = _mng_hashtable151;
    _mng_listhead176 = _mng_hashtable151;
    __twr_v177 = _mng_entry152 + __twr_v159;
    _mng_listentry178 = __twr_v177;
    __twr_v179 = _mng_hashtable151;
    __twr_v180 = *(uint64_t*)(_mng_hashtable151);
    _mng_first181 = __twr_v180;
    __twr_v182 = __twr_v177;
    *(uint64_t*)(__twr_v177) = __twr_v180;
    __twr_v183 = 24ULL;
    __twr_v184 = _mng_entry152 + __twr_v183;
    *(uint64_t*)(__twr_v184) = _mng_hashtable151;
    __twr_v185 = __twr_v180 + __twr_v172;
    *(uint64_t*)(__twr_v185) = __twr_v177;
    *(uint64_t*)(_mng_hashtable151) = __twr_v177;
}
void TlInsertHashTable(uint64_t _mng_hashtable186, uint64_t _mng_entry187, uint64_t _mng_key188) {
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t _mng_hash191;
    uint64_t __twr_v192;
    __twr_v189 = (uint64_t)(&TlHashString);
    __twr_v190 = ((uint64_t (*)(uint64_t))__twr_v189)(_mng_key188);
    _mng_hash191 = __twr_v190;
    __twr_v192 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v192)(_mng_hashtable186, _mng_entry187, _mng_key188, __twr_v190);
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable193, uint64_t _mng_entrysize194, uint64_t _mng_key195, uint64_t _mng_created196) {
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t _mng_hash199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t _mng_head205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t _mng_listentry209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t _mng_entry212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t _mng_status225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    __twr_v197 = (uint64_t)(&TlHashString);
    __twr_v198 = ((uint64_t (*)(uint64_t))__twr_v197)(_mng_key195);
    _mng_hash199 = __twr_v198;
    __twr_v200 = 16ULL;
    __twr_v201 = _mng_hashtable193 + __twr_v200;
    __twr_v202 = 4ULL;
    __twr_v203 = __twr_v198 << __twr_v202;
    __twr_v204 = __twr_v201 + __twr_v203;
    _mng_head205 = __twr_v204;
    __twr_v206 = 0ULL;
    __twr_v207 = __twr_v204;
    __twr_v208 = *(uint64_t*)(__twr_v204);
    _mng_listentry209 = __twr_v208;
    if (__twr_v208 != __twr_v204) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l12:;
    __twr_v210 = 0ULL;
    __twr_v211 = _mng_listentry209;
    _mng_entry212 = _mng_listentry209;
    __twr_v213 = (uint64_t)(&TlCompareString);
    __twr_v214 = 40ULL;
    __twr_v215 = _mng_listentry209 + __twr_v214;
    __twr_v216 = *(uint64_t*)(__twr_v215);
    __twr_v217 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v213)(_mng_key195, __twr_v216);
    if (__twr_v217 == __twr_v210) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l16:;
    __twr_v218 = 0ULL;
    *(uint8_t*)(_mng_created196) = __twr_v218;
    return _mng_entry212;
    __twr_l15:;
    __twr_v219 = 0ULL;
    __twr_v220 = _mng_listentry209;
    __twr_v221 = *(uint64_t*)(_mng_listentry209);
    _mng_listentry209 = __twr_v221;
    __twr_l14:;
    if (_mng_listentry209 != _mng_head205) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v222 = (uint64_t)(&TlBumpAlloc);
    __twr_v223 = (uint64_t)(&_mng_entry212);
    __twr_v224 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v222)(_mng_entrysize194, __twr_v223);
    _mng_status225 = __twr_v224;
    if (__twr_v224) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l18:;
    __twr_v226 = (uint64_t)(&TlInternalError);
    __twr_v227 = (uint64_t)(&"Failed to allocate entry");
    __twr_v228 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v226)(__twr_v227, __twr_v228, __twr_v228, __twr_v228);
    __twr_l17:;
    __twr_v229 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v229)(_mng_hashtable193, _mng_entry212, _mng_key195, _mng_hash199);
    __twr_v230 = 1ULL;
    *(uint8_t*)(_mng_created196) = __twr_v230;
    return _mng_entry212;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable231, uint64_t _mng_entry232, uint64_t _mng_key233) {
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t _mng_hash236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t _mng_head242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t _mng_listentry246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t _mng_oldentry249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    __twr_v234 = (uint64_t)(&TlHashString);
    __twr_v235 = ((uint64_t (*)(uint64_t))__twr_v234)(_mng_key233);
    _mng_hash236 = __twr_v235;
    __twr_v237 = 16ULL;
    __twr_v238 = _mng_hashtable231 + __twr_v237;
    __twr_v239 = 4ULL;
    __twr_v240 = __twr_v235 << __twr_v239;
    __twr_v241 = __twr_v238 + __twr_v240;
    _mng_head242 = __twr_v241;
    __twr_v243 = 0ULL;
    __twr_v244 = __twr_v241;
    __twr_v245 = *(uint64_t*)(__twr_v241);
    _mng_listentry246 = __twr_v245;
    if (__twr_v245 != __twr_v241) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l19:;
    __twr_v247 = 0ULL;
    __twr_v248 = _mng_listentry246;
    _mng_oldentry249 = _mng_listentry246;
    __twr_v250 = (uint64_t)(&TlCompareString);
    __twr_v251 = 40ULL;
    __twr_v252 = _mng_listentry246 + __twr_v251;
    __twr_v253 = *(uint64_t*)(__twr_v252);
    __twr_v254 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v250)(_mng_key233, __twr_v253);
    if (__twr_v254 == __twr_v247) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l23:;
    return _mng_oldentry249;
    __twr_l22:;
    __twr_v255 = 0ULL;
    __twr_v256 = _mng_listentry246;
    __twr_v257 = *(uint64_t*)(_mng_listentry246);
    _mng_listentry246 = __twr_v257;
    __twr_l21:;
    if (_mng_listentry246 != _mng_head242) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v258 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v258)(_mng_hashtable231, _mng_entry232, _mng_key233, _mng_hash236);
    return _mng_entry232;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable259, uint64_t _mng_key260, uint64_t _mng_hash261) {
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t _mng_head267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t _mng_listentry271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t _mng_entry274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    __twr_v262 = 16ULL;
    __twr_v263 = _mng_hashtable259 + __twr_v262;
    __twr_v264 = 4ULL;
    __twr_v265 = _mng_hash261 << __twr_v264;
    __twr_v266 = __twr_v263 + __twr_v265;
    _mng_head267 = __twr_v266;
    __twr_v268 = 0ULL;
    __twr_v269 = __twr_v266;
    __twr_v270 = *(uint64_t*)(__twr_v266);
    _mng_listentry271 = __twr_v270;
    if (__twr_v270 != __twr_v266) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l24:;
    __twr_v272 = 0ULL;
    __twr_v273 = _mng_listentry271;
    _mng_entry274 = _mng_listentry271;
    __twr_v275 = (uint64_t)(&TlCompareString);
    __twr_v276 = 40ULL;
    __twr_v277 = _mng_listentry271 + __twr_v276;
    __twr_v278 = *(uint64_t*)(__twr_v277);
    __twr_v279 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v275)(_mng_key260, __twr_v278);
    if (__twr_v279 == __twr_v272) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l28:;
    return _mng_entry274;
    __twr_l27:;
    __twr_v280 = 0ULL;
    __twr_v281 = _mng_listentry271;
    __twr_v282 = *(uint64_t*)(_mng_listentry271);
    _mng_listentry271 = __twr_v282;
    __twr_l26:;
    if (_mng_listentry271 != _mng_head267) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v283 = 0ULL;
    return __twr_v283;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable284, uint64_t _mng_key285) {
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t _mng_hash288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    __twr_v286 = (uint64_t)(&TlHashString);
    __twr_v287 = ((uint64_t (*)(uint64_t))__twr_v286)(_mng_key285);
    _mng_hash288 = __twr_v287;
    __twr_v289 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v290 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v289)(_mng_hashtable284, _mng_key285, __twr_v287);
    return __twr_v290;
}
void TlRemoveHashTable(uint64_t _mng_entry291) {
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t _mng_listentry294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t _mng_prev298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t _mng_next301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t _mng_listentry306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t _mng_prev310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t _mng_next313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    __twr_v292 = 0ULL;
    __twr_v293 = _mng_entry291;
    _mng_listentry294 = _mng_entry291;
    __twr_v295 = 8ULL;
    __twr_v296 = _mng_entry291 + __twr_v295;
    __twr_v297 = *(uint64_t*)(__twr_v296);
    _mng_prev298 = __twr_v297;
    __twr_v299 = _mng_entry291;
    __twr_v300 = *(uint64_t*)(_mng_entry291);
    _mng_next301 = __twr_v300;
    __twr_v302 = __twr_v297;
    *(uint64_t*)(__twr_v297) = __twr_v300;
    __twr_v303 = __twr_v300 + __twr_v295;
    *(uint64_t*)(__twr_v303) = __twr_v297;
    __twr_v304 = 16ULL;
    __twr_v305 = _mng_entry291 + __twr_v304;
    _mng_listentry306 = __twr_v305;
    __twr_v307 = 24ULL;
    __twr_v308 = _mng_entry291 + __twr_v307;
    __twr_v309 = *(uint64_t*)(__twr_v308);
    _mng_prev310 = __twr_v309;
    __twr_v311 = __twr_v305;
    __twr_v312 = *(uint64_t*)(__twr_v305);
    _mng_next313 = __twr_v312;
    __twr_v314 = __twr_v309;
    *(uint64_t*)(__twr_v309) = __twr_v312;
    __twr_v315 = __twr_v312 + __twr_v295;
    *(uint64_t*)(__twr_v315) = __twr_v309;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable316, uint64_t _mng_enumfunc317) {
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t _mng_head320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t _mng_listentry323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t _mng_nextentry327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t _mng_entry330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    __twr_v318 = 0ULL;
    __twr_v319 = _mng_hashtable316;
    _mng_head320 = _mng_hashtable316;
    __twr_v321 = _mng_hashtable316;
    __twr_v322 = *(uint64_t*)(_mng_hashtable316);
    _mng_listentry323 = __twr_v322;
    if (__twr_v322 != _mng_hashtable316) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l29:;
    __twr_v324 = 0ULL;
    __twr_v325 = _mng_listentry323;
    __twr_v326 = *(uint64_t*)(_mng_listentry323);
    _mng_nextentry327 = __twr_v326;
    __twr_v328 = 16ULL;
    __twr_v329 = _mng_listentry323 - __twr_v328;
    _mng_entry330 = __twr_v329;
    __twr_v331 = (uint64_t)(&_mng_enumfunc317);
    __twr_v332 = *(uint64_t*)(__twr_v331);
    ((void (*)(uint64_t))__twr_v332)(__twr_v329);
    _mng_listentry323 = __twr_v326;
    __twr_l31:;
    if (_mng_listentry323 != _mng_head320) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
}
uint64_t TlHashString(uint64_t _mng_str333) {
    uint64_t __twr_v334;
    uint64_t _mng_hash335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    __twr_v334 = 0ULL;
    _mng_hash335 = __twr_v334;
    __twr_v336 = *(uint8_t*)(_mng_str333);
    if (__twr_v336) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l32:;
    __twr_v337 = *(uint8_t*)(_mng_str333);
    __twr_v338 = _mng_hash335 + __twr_v337;
    _mng_hash335 = __twr_v338;
    __twr_v339 = 10ULL;
    __twr_v340 = __twr_v338 << __twr_v339;
    __twr_v341 = __twr_v338 + __twr_v340;
    _mng_hash335 = __twr_v341;
    __twr_v342 = 6ULL;
    __twr_v343 = __twr_v341 >> __twr_v342;
    __twr_v344 = __twr_v341 ^ __twr_v343;
    _mng_hash335 = __twr_v344;
    __twr_v345 = 1ULL;
    __twr_v346 = _mng_str333 + __twr_v345;
    _mng_str333 = __twr_v346;
    __twr_l34:;
    __twr_v347 = *(uint8_t*)(_mng_str333);
    if (__twr_v347) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v348 = 3ULL;
    __twr_v349 = _mng_hash335 << __twr_v348;
    __twr_v350 = _mng_hash335 + __twr_v349;
    _mng_hash335 = __twr_v350;
    __twr_v351 = 11ULL;
    __twr_v352 = __twr_v350 >> __twr_v351;
    __twr_v353 = __twr_v350 ^ __twr_v352;
    _mng_hash335 = __twr_v353;
    __twr_v354 = 15ULL;
    __twr_v355 = __twr_v353 << __twr_v354;
    __twr_v356 = __twr_v353 + __twr_v355;
    _mng_hash335 = __twr_v356;
    __twr_v357 = 97ULL;
    __twr_v358 = __twr_v356 % __twr_v357;
    _mng_hash335 = __twr_v358;
    return __twr_v358;
}

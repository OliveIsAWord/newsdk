#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_ptr20);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_ptr22);
extern void TlFree(uint64_t _mng_ptr23);
extern uint64_t TlCompareString(uint64_t _mng_str124, uint64_t _mng_str225);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str126, uint64_t _mng_str227, uint64_t _mng_count28);
extern void TlCopyString(uint64_t _mng_dest29, uint64_t _mng_src30, uint64_t _mng_bufsize31);
extern uint64_t TlOpenSource(uint64_t _mng_filename32, uint64_t _mng_handle33);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_handle35);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_created54);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable55, uint64_t _mng_key56);
extern void TlRemoveHashTable(uint64_t _mng_entry57);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable58, uint64_t _mng_enumfunc59);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable60, uint64_t _mng_key61, uint64_t _mng_hash62);
extern uint64_t TlHashString(uint64_t _mng_str63);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable64, uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope67, uint64_t _mng_deletefunc68);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable69);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_name71);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable72, uint64_t _mng_entry73, uint64_t _mng_name74);
extern void TlRemoveSymbolTable(uint64_t _mng_entry75);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array77);
extern void TlInsertDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_byte79);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array80, uint64_t _mng_srcbuf81, uint64_t _mng_length82);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array83, uint64_t _mng_number84, uint64_t _mng_base85);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array86);
extern uint64_t TlMatchPath(uint64_t _mng_path87, uint64_t _mng_pathset88, uint64_t _mng_resultingpath89, uint64_t _mng_handle90);
extern void TlCopyParentPath(uint64_t _mng_srcpath91, uint64_t _mng_destpath92);
extern void TlInitializeZone(uint64_t _mng_zone93, uint64_t _mng_blocksize94);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone95);
extern void TlFreeToZone(uint64_t _mng_zone96, uint64_t _mng_block97);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant98);
extern void TlPunchValue(uint64_t _mng_ptr99, uint64_t _mng_value100, uint64_t _mng_bytes101);
void TlInitializeHashTable(uint64_t _mng_hashtable102) {
    uint64_t __twr_v103;
    uint64_t __twr_v104;
    uint64_t __twr_v105;
    uint64_t _mng_i106;
    uint64_t __twr_v107;
    uint64_t __twr_v108;
    uint64_t __twr_v109;
    uint64_t __twr_v110;
    uint64_t __twr_v111;
    uint64_t __twr_v112;
    uint64_t __twr_v113;
    uint64_t __twr_v114;
    uint64_t __twr_v115;
    uint64_t __twr_v116;
    __twr_v103 = 0ULL;
    __twr_v104 = 8ULL;
    __twr_v105 = _mng_hashtable102 + __twr_v104;
    *(uint64_t*)(__twr_v105) = _mng_hashtable102;
    *(uint64_t*)(_mng_hashtable102) = _mng_hashtable102;
    _mng_i106 = __twr_v103;
    __twr_l1:;
    __twr_v107 = 16ULL;
    __twr_v108 = _mng_hashtable102 + __twr_v107;
    __twr_v109 = 4ULL;
    __twr_v110 = _mng_i106 << __twr_v109;
    __twr_v111 = __twr_v108 + __twr_v110;
    __twr_v112 = 8ULL;
    __twr_v113 = __twr_v111 + __twr_v112;
    *(uint64_t*)(__twr_v113) = __twr_v111;
    *(uint64_t*)(__twr_v111) = __twr_v111;
    __twr_v114 = 1ULL;
    __twr_v115 = _mng_i106 + __twr_v114;
    _mng_i106 = __twr_v115;
    __twr_l3:;
    __twr_v116 = 97ULL;
    if (_mng_i106 < __twr_v116) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable117) {
    uint64_t __twr_v118;
    uint64_t _mng_i119;
    uint64_t __twr_v120;
    uint64_t _mng_entries121;
    uint64_t __twr_v122;
    uint64_t __twr_v123;
    uint64_t __twr_v124;
    uint64_t __twr_v125;
    uint64_t __twr_v126;
    uint64_t _mng_head127;
    uint64_t __twr_v128;
    uint64_t _mng_listentry129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t __twr_v133;
    uint64_t __twr_v134;
    uint64_t __twr_v135;
    uint64_t __twr_v136;
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    uint64_t __twr_v139;
    __twr_v118 = 0ULL;
    _mng_i119 = __twr_v118;
    __twr_l4:;
    __twr_v120 = 0ULL;
    _mng_entries121 = __twr_v120;
    __twr_v122 = 16ULL;
    __twr_v123 = _mng_hashtable117 + __twr_v122;
    __twr_v124 = 4ULL;
    __twr_v125 = _mng_i119 << __twr_v124;
    __twr_v126 = __twr_v123 + __twr_v125;
    _mng_head127 = __twr_v126;
    __twr_v128 = *(uint64_t*)(__twr_v126);
    _mng_listentry129 = __twr_v128;
    if (__twr_v128 == __twr_v126) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v130 = 1ULL;
    __twr_v131 = _mng_entries121 + __twr_v130;
    _mng_entries121 = __twr_v131;
    __twr_v132 = *(uint64_t*)(_mng_listentry129);
    _mng_listentry129 = __twr_v132;
    __twr_l9:;
    if (_mng_listentry129 != _mng_head127) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l8:;
    if (_mng_entries121) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l11:;
    __twr_v133 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v133)(_mng_i119);
    __twr_v134 = (uint64_t)(&TlPrintString);
    __twr_v135 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v134)(__twr_v135);
    ((void (*)(uint64_t))__twr_v133)(_mng_entries121);
    __twr_v136 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v134)(__twr_v136);
    __twr_l10:;
    __twr_v137 = 1ULL;
    __twr_v138 = _mng_i119 + __twr_v137;
    _mng_i119 = __twr_v138;
    __twr_l6:;
    __twr_v139 = 97ULL;
    if (_mng_i119 < __twr_v139) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable140, uint64_t _mng_entry141, uint64_t _mng_key142, uint64_t _mng_hash143) {
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    __twr_v144 = 32ULL;
    __twr_v145 = _mng_entry141 + __twr_v144;
    *(uint64_t*)(__twr_v145) = _mng_hashtable140;
    __twr_v146 = 40ULL;
    __twr_v147 = _mng_entry141 + __twr_v146;
    *(uint64_t*)(__twr_v147) = _mng_key142;
    __twr_v148 = 16ULL;
    __twr_v149 = _mng_hashtable140 + __twr_v148;
    __twr_v150 = 4ULL;
    __twr_v151 = _mng_hash143 << __twr_v150;
    __twr_v152 = __twr_v149 + __twr_v151;
    __twr_v153 = *(uint64_t*)(__twr_v152);
    *(uint64_t*)(_mng_entry141) = __twr_v153;
    __twr_v154 = 8ULL;
    __twr_v155 = _mng_entry141 + __twr_v154;
    *(uint64_t*)(__twr_v155) = __twr_v152;
    __twr_v156 = __twr_v153 + __twr_v154;
    *(uint64_t*)(__twr_v156) = _mng_entry141;
    *(uint64_t*)(__twr_v152) = _mng_entry141;
    __twr_v157 = _mng_entry141 + __twr_v148;
    __twr_v158 = *(uint64_t*)(_mng_hashtable140);
    *(uint64_t*)(__twr_v157) = __twr_v158;
    __twr_v159 = 24ULL;
    __twr_v160 = _mng_entry141 + __twr_v159;
    *(uint64_t*)(__twr_v160) = _mng_hashtable140;
    __twr_v161 = __twr_v158 + __twr_v154;
    *(uint64_t*)(__twr_v161) = __twr_v157;
    *(uint64_t*)(_mng_hashtable140) = __twr_v157;
}
void TlInsertHashTable(uint64_t _mng_hashtable162, uint64_t _mng_entry163, uint64_t _mng_key164) {
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    __twr_v165 = (uint64_t)(&TlHashString);
    __twr_v166 = ((uint64_t (*)(uint64_t))__twr_v165)(_mng_key164);
    __twr_v167 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v167)(_mng_hashtable162, _mng_entry163, _mng_key164, __twr_v166);
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable168, uint64_t _mng_entrysize169, uint64_t _mng_key170, uint64_t _mng_created171) {
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t _mng_hash174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t _mng_head180;
    uint64_t __twr_v181;
    uint64_t _mng_listentry182;
    uint64_t __twr_v183;
    uint64_t _mng_entry184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    __twr_v172 = (uint64_t)(&TlHashString);
    __twr_v173 = ((uint64_t (*)(uint64_t))__twr_v172)(_mng_key170);
    _mng_hash174 = __twr_v173;
    __twr_v175 = 16ULL;
    __twr_v176 = _mng_hashtable168 + __twr_v175;
    __twr_v177 = 4ULL;
    __twr_v178 = __twr_v173 << __twr_v177;
    __twr_v179 = __twr_v176 + __twr_v178;
    _mng_head180 = __twr_v179;
    __twr_v181 = *(uint64_t*)(__twr_v179);
    _mng_listentry182 = __twr_v181;
    if (__twr_v181 == __twr_v179) { goto __twr_l13; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v183 = 0ULL;
    _mng_entry184 = _mng_listentry182;
    __twr_v185 = (uint64_t)(&TlCompareString);
    __twr_v186 = 40ULL;
    __twr_v187 = _mng_listentry182 + __twr_v186;
    __twr_v188 = *(uint64_t*)(__twr_v187);
    __twr_v189 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v185)(_mng_key170, __twr_v188);
    if (__twr_v189 != __twr_v183) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v190 = 0ULL;
    *(uint8_t*)(_mng_created171) = __twr_v190;
    return _mng_entry184;
    __twr_l15:;
    __twr_v191 = *(uint64_t*)(_mng_listentry182);
    _mng_listentry182 = __twr_v191;
    __twr_l14:;
    if (_mng_listentry182 != _mng_head180) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v192 = (uint64_t)(&TlBumpAlloc);
    __twr_v193 = (uint64_t)(&_mng_entry184);
    __twr_v194 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v192)(_mng_entrysize169, __twr_v193);
    if (!(__twr_v194)) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v195 = (uint64_t)(&TlInternalError);
    __twr_v196 = (uint64_t)(&"Failed to allocate entry");
    __twr_v197 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v195)(__twr_v196, __twr_v197, __twr_v197, __twr_v197);
    __twr_l17:;
    __twr_v198 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v198)(_mng_hashtable168, _mng_entry184, _mng_key170, _mng_hash174);
    __twr_v199 = 1ULL;
    *(uint8_t*)(_mng_created171) = __twr_v199;
    return _mng_entry184;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable200, uint64_t _mng_entry201, uint64_t _mng_key202) {
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t _mng_hash205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t _mng_head211;
    uint64_t __twr_v212;
    uint64_t _mng_listentry213;
    uint64_t __twr_v214;
    uint64_t _mng_oldentry215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    __twr_v203 = (uint64_t)(&TlHashString);
    __twr_v204 = ((uint64_t (*)(uint64_t))__twr_v203)(_mng_key202);
    _mng_hash205 = __twr_v204;
    __twr_v206 = 16ULL;
    __twr_v207 = _mng_hashtable200 + __twr_v206;
    __twr_v208 = 4ULL;
    __twr_v209 = __twr_v204 << __twr_v208;
    __twr_v210 = __twr_v207 + __twr_v209;
    _mng_head211 = __twr_v210;
    __twr_v212 = *(uint64_t*)(__twr_v210);
    _mng_listentry213 = __twr_v212;
    if (__twr_v212 == __twr_v210) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v214 = 0ULL;
    _mng_oldentry215 = _mng_listentry213;
    __twr_v216 = (uint64_t)(&TlCompareString);
    __twr_v217 = 40ULL;
    __twr_v218 = _mng_listentry213 + __twr_v217;
    __twr_v219 = *(uint64_t*)(__twr_v218);
    __twr_v220 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v216)(_mng_key202, __twr_v219);
    if (__twr_v220 != __twr_v214) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    return _mng_oldentry215;
    __twr_l22:;
    __twr_v221 = *(uint64_t*)(_mng_listentry213);
    _mng_listentry213 = __twr_v221;
    __twr_l21:;
    if (_mng_listentry213 != _mng_head211) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v222 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v222)(_mng_hashtable200, _mng_entry201, _mng_key202, _mng_hash205);
    return _mng_entry201;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable223, uint64_t _mng_key224, uint64_t _mng_hash225) {
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t _mng_head231;
    uint64_t __twr_v232;
    uint64_t _mng_listentry233;
    uint64_t __twr_v234;
    uint64_t _mng_entry235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    __twr_v226 = 16ULL;
    __twr_v227 = _mng_hashtable223 + __twr_v226;
    __twr_v228 = 4ULL;
    __twr_v229 = _mng_hash225 << __twr_v228;
    __twr_v230 = __twr_v227 + __twr_v229;
    _mng_head231 = __twr_v230;
    __twr_v232 = *(uint64_t*)(__twr_v230);
    _mng_listentry233 = __twr_v232;
    if (__twr_v232 == __twr_v230) { goto __twr_l25; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v234 = 0ULL;
    _mng_entry235 = _mng_listentry233;
    __twr_v236 = (uint64_t)(&TlCompareString);
    __twr_v237 = 40ULL;
    __twr_v238 = _mng_listentry233 + __twr_v237;
    __twr_v239 = *(uint64_t*)(__twr_v238);
    __twr_v240 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v236)(_mng_key224, __twr_v239);
    if (__twr_v240 != __twr_v234) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    return _mng_entry235;
    __twr_l27:;
    __twr_v241 = *(uint64_t*)(_mng_listentry233);
    _mng_listentry233 = __twr_v241;
    __twr_l26:;
    if (_mng_listentry233 != _mng_head231) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v242 = 0ULL;
    return __twr_v242;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable243, uint64_t _mng_key244) {
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    __twr_v245 = (uint64_t)(&TlHashString);
    __twr_v246 = ((uint64_t (*)(uint64_t))__twr_v245)(_mng_key244);
    __twr_v247 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v248 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v247)(_mng_hashtable243, _mng_key244, __twr_v246);
    return __twr_v248;
}
void TlRemoveHashTable(uint64_t _mng_entry249) {
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    __twr_v250 = 8ULL;
    __twr_v251 = _mng_entry249 + __twr_v250;
    __twr_v252 = *(uint64_t*)(__twr_v251);
    __twr_v253 = *(uint64_t*)(_mng_entry249);
    *(uint64_t*)(__twr_v252) = __twr_v253;
    __twr_v254 = __twr_v253 + __twr_v250;
    *(uint64_t*)(__twr_v254) = __twr_v252;
    __twr_v255 = 16ULL;
    __twr_v256 = _mng_entry249 + __twr_v255;
    __twr_v257 = 24ULL;
    __twr_v258 = _mng_entry249 + __twr_v257;
    __twr_v259 = *(uint64_t*)(__twr_v258);
    __twr_v260 = *(uint64_t*)(__twr_v256);
    *(uint64_t*)(__twr_v259) = __twr_v260;
    __twr_v261 = __twr_v260 + __twr_v250;
    *(uint64_t*)(__twr_v261) = __twr_v259;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable262, uint64_t _mng_enumfunc263) {
    uint64_t _mng_head264;
    uint64_t __twr_v265;
    uint64_t _mng_listentry266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    _mng_head264 = _mng_hashtable262;
    __twr_v265 = *(uint64_t*)(_mng_hashtable262);
    _mng_listentry266 = __twr_v265;
    if (__twr_v265 == _mng_hashtable262) { goto __twr_l30; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v267 = *(uint64_t*)(_mng_listentry266);
    __twr_v268 = 16ULL;
    __twr_v269 = _mng_listentry266 - __twr_v268;
    ((void (*)(uint64_t))_mng_enumfunc263)(__twr_v269);
    _mng_listentry266 = __twr_v267;
    __twr_l31:;
    if (_mng_listentry266 != _mng_head264) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
}
uint64_t TlHashString(uint64_t _mng_str270) {
    uint64_t __twr_v271;
    uint64_t _mng_hash272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    __twr_v271 = 0ULL;
    _mng_hash272 = __twr_v271;
    __twr_v273 = *(uint8_t*)(_mng_str270);
    if (!(__twr_v273)) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v274 = *(uint8_t*)(_mng_str270);
    __twr_v275 = _mng_hash272 + __twr_v274;
    _mng_hash272 = __twr_v275;
    __twr_v276 = 10ULL;
    __twr_v277 = __twr_v275 << __twr_v276;
    __twr_v278 = __twr_v275 + __twr_v277;
    _mng_hash272 = __twr_v278;
    __twr_v279 = 6ULL;
    __twr_v280 = __twr_v278 >> __twr_v279;
    __twr_v281 = __twr_v278 ^ __twr_v280;
    _mng_hash272 = __twr_v281;
    __twr_v282 = 1ULL;
    __twr_v283 = _mng_str270 + __twr_v282;
    _mng_str270 = __twr_v283;
    __twr_l34:;
    __twr_v284 = *(uint8_t*)(_mng_str270);
    if (__twr_v284) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v285 = 3ULL;
    __twr_v286 = _mng_hash272 << __twr_v285;
    __twr_v287 = _mng_hash272 + __twr_v286;
    _mng_hash272 = __twr_v287;
    __twr_v288 = 11ULL;
    __twr_v289 = __twr_v287 >> __twr_v288;
    __twr_v290 = __twr_v287 ^ __twr_v289;
    _mng_hash272 = __twr_v290;
    __twr_v291 = 15ULL;
    __twr_v292 = __twr_v290 << __twr_v291;
    __twr_v293 = __twr_v290 + __twr_v292;
    _mng_hash272 = __twr_v293;
    __twr_v294 = 97ULL;
    __twr_v295 = __twr_v293 % __twr_v294;
    _mng_hash272 = __twr_v295;
    return __twr_v295;
}

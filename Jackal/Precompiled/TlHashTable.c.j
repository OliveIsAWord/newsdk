#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_ptr20);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_ptr22);
extern void TlFree(uint64_t _mng_ptr23);
extern uint64_t TlCompareString(uint64_t _mng_str124, uint64_t _mng_str225);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str126, uint64_t _mng_str227, uint64_t _mng_count28);
extern void TlCopyString(uint64_t _mng_dest29, uint64_t _mng_src30, uint64_t _mng_bufsize31);
extern uint64_t TlOpenSource(uint64_t _mng_filename32, uint64_t _mng_handle33);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_handle35);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_created54);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable55, uint64_t _mng_key56);
extern void TlRemoveHashTable(uint64_t _mng_entry57);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable58, uint64_t _mng_enumfunc59);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable60, uint64_t _mng_key61, uint64_t _mng_hash62);
extern uint64_t TlHashString(uint64_t _mng_str63);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable64, uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope67, uint64_t _mng_deletefunc68);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable69);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_name71);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable72, uint64_t _mng_entry73, uint64_t _mng_name74);
extern void TlRemoveSymbolTable(uint64_t _mng_entry75);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array77);
extern void TlInsertDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_byte79);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array80, uint64_t _mng_srcbuf81, uint64_t _mng_length82);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array83, uint64_t _mng_number84, uint64_t _mng_base85);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array86);
extern uint64_t TlMatchPath(uint64_t _mng_path87, uint64_t _mng_pathset88, uint64_t _mng_resultingpath89, uint64_t _mng_handle90);
extern void TlCopyParentPath(uint64_t _mng_srcpath91, uint64_t _mng_destpath92);
extern void TlInitializeZone(uint64_t _mng_zone93, uint64_t _mng_blocksize94);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone95);
extern void TlFreeToZone(uint64_t _mng_zone96, uint64_t _mng_block97);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant98);
extern void TlPunchValue(uint64_t _mng_ptr99, uint64_t _mng_value100, uint64_t _mng_bytes101);
void TlInitializeHashTable(uint64_t _mng_hashtable102) {
    uint64_t __twr_v103;
    uint64_t __twr_v104;
    uint64_t _mng_listhead105;
    uint64_t __twr_v106;
    uint64_t __twr_v107;
    uint64_t __twr_v108;
    uint64_t _mng_i109;
    uint64_t __twr_v110;
    uint64_t __twr_v111;
    uint64_t __twr_v112;
    uint64_t __twr_v113;
    uint64_t __twr_v114;
    uint64_t _mng_listhead115;
    uint64_t __twr_v116;
    uint64_t __twr_v117;
    uint64_t __twr_v118;
    uint64_t __twr_v119;
    uint64_t __twr_v120;
    uint64_t __twr_v121;
    uint64_t __twr_v122;
    __twr_v103 = 0ULL;
    __twr_v104 = _mng_hashtable102;
    _mng_listhead105 = _mng_hashtable102;
    __twr_v106 = 8ULL;
    __twr_v107 = _mng_hashtable102 + __twr_v106;
    *(uint64_t*)(__twr_v107) = _mng_hashtable102;
    __twr_v108 = _mng_hashtable102;
    *(uint64_t*)(_mng_hashtable102) = _mng_hashtable102;
    _mng_i109 = __twr_v103;
    __twr_v110 = 97ULL;
    if (__twr_v103 < __twr_v110) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l1:;
    __twr_v111 = 16ULL;
    __twr_v112 = _mng_hashtable102 + __twr_v111;
    __twr_v113 = _mng_i109 * __twr_v111;
    __twr_v114 = __twr_v112 + __twr_v113;
    _mng_listhead115 = __twr_v114;
    __twr_v116 = 8ULL;
    __twr_v117 = __twr_v114 + __twr_v116;
    *(uint64_t*)(__twr_v117) = __twr_v114;
    __twr_v118 = 0ULL;
    __twr_v119 = __twr_v114;
    *(uint64_t*)(__twr_v114) = __twr_v114;
    __twr_v120 = 1ULL;
    __twr_v121 = _mng_i109 + __twr_v120;
    _mng_i109 = __twr_v121;
    __twr_l3:;
    __twr_v122 = 97ULL;
    if (_mng_i109 < __twr_v122) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable123) {
    uint64_t __twr_v124;
    uint64_t _mng_i125;
    uint64_t __twr_v126;
    uint64_t __twr_v127;
    uint64_t _mng_entries128;
    uint64_t __twr_v129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t _mng_head133;
    uint64_t __twr_v134;
    uint64_t __twr_v135;
    uint64_t _mng_listentry136;
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    uint64_t __twr_v139;
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    __twr_v124 = 0ULL;
    _mng_i125 = __twr_v124;
    __twr_v126 = 97ULL;
    if (__twr_v124 < __twr_v126) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l4:;
    __twr_v127 = 0ULL;
    _mng_entries128 = __twr_v127;
    __twr_v129 = 16ULL;
    __twr_v130 = _mng_hashtable123 + __twr_v129;
    __twr_v131 = _mng_i125 * __twr_v129;
    __twr_v132 = __twr_v130 + __twr_v131;
    _mng_head133 = __twr_v132;
    __twr_v134 = __twr_v132;
    __twr_v135 = *(uint64_t*)(__twr_v132);
    _mng_listentry136 = __twr_v135;
    if (__twr_v135 != __twr_v132) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l7:;
    __twr_v137 = 1ULL;
    __twr_v138 = _mng_entries128 + __twr_v137;
    _mng_entries128 = __twr_v138;
    __twr_v139 = 0ULL;
    __twr_v140 = _mng_listentry136;
    __twr_v141 = *(uint64_t*)(_mng_listentry136);
    _mng_listentry136 = __twr_v141;
    __twr_l9:;
    if (_mng_listentry136 != _mng_head133) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l8:;
    if (_mng_entries128) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l11:;
    __twr_v142 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v142)(_mng_i125);
    __twr_v143 = (uint64_t)(&TlPrintString);
    __twr_v144 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v143)(__twr_v144);
    ((void (*)(uint64_t))__twr_v142)(_mng_entries128);
    __twr_v145 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v143)(__twr_v145);
    __twr_l10:;
    __twr_v146 = 1ULL;
    __twr_v147 = _mng_i125 + __twr_v146;
    _mng_i125 = __twr_v147;
    __twr_l6:;
    __twr_v148 = 97ULL;
    if (_mng_i125 < __twr_v148) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable149, uint64_t _mng_entry150, uint64_t _mng_key151, uint64_t _mng_hash152) {
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t _mng_listhead161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t _mng_listentry164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t _mng_first167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t _mng_listhead173;
    uint64_t __twr_v174;
    uint64_t _mng_listentry175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t _mng_first178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    __twr_v153 = 32ULL;
    __twr_v154 = _mng_entry150 + __twr_v153;
    *(uint64_t*)(__twr_v154) = _mng_hashtable149;
    __twr_v155 = 40ULL;
    __twr_v156 = _mng_entry150 + __twr_v155;
    *(uint64_t*)(__twr_v156) = _mng_key151;
    __twr_v157 = 16ULL;
    __twr_v158 = _mng_hashtable149 + __twr_v157;
    __twr_v159 = _mng_hash152 * __twr_v157;
    __twr_v160 = __twr_v158 + __twr_v159;
    _mng_listhead161 = __twr_v160;
    __twr_v162 = 0ULL;
    __twr_v163 = _mng_entry150;
    _mng_listentry164 = _mng_entry150;
    __twr_v165 = __twr_v160;
    __twr_v166 = *(uint64_t*)(__twr_v160);
    _mng_first167 = __twr_v166;
    __twr_v168 = _mng_entry150;
    *(uint64_t*)(_mng_entry150) = __twr_v166;
    __twr_v169 = 8ULL;
    __twr_v170 = _mng_entry150 + __twr_v169;
    *(uint64_t*)(__twr_v170) = __twr_v160;
    __twr_v171 = __twr_v166 + __twr_v169;
    *(uint64_t*)(__twr_v171) = _mng_entry150;
    *(uint64_t*)(__twr_v160) = _mng_entry150;
    __twr_v172 = _mng_hashtable149;
    _mng_listhead173 = _mng_hashtable149;
    __twr_v174 = _mng_entry150 + __twr_v157;
    _mng_listentry175 = __twr_v174;
    __twr_v176 = _mng_hashtable149;
    __twr_v177 = *(uint64_t*)(_mng_hashtable149);
    _mng_first178 = __twr_v177;
    __twr_v179 = __twr_v174;
    *(uint64_t*)(__twr_v174) = __twr_v177;
    __twr_v180 = __twr_v174 + __twr_v169;
    *(uint64_t*)(__twr_v180) = _mng_hashtable149;
    __twr_v181 = __twr_v177 + __twr_v169;
    *(uint64_t*)(__twr_v181) = __twr_v174;
    *(uint64_t*)(_mng_hashtable149) = __twr_v174;
}
void TlInsertHashTable(uint64_t _mng_hashtable182, uint64_t _mng_entry183, uint64_t _mng_key184) {
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t _mng_hash187;
    uint64_t __twr_v188;
    __twr_v185 = (uint64_t)(&TlHashString);
    __twr_v186 = ((uint64_t (*)(uint64_t))__twr_v185)(_mng_key184);
    _mng_hash187 = __twr_v186;
    __twr_v188 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v188)(_mng_hashtable182, _mng_entry183, _mng_key184, _mng_hash187);
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable189, uint64_t _mng_entrysize190, uint64_t _mng_key191, uint64_t _mng_created192) {
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_hash195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t _mng_head200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t _mng_listentry204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t _mng_entry207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t _mng_status220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    __twr_v193 = (uint64_t)(&TlHashString);
    __twr_v194 = ((uint64_t (*)(uint64_t))__twr_v193)(_mng_key191);
    _mng_hash195 = __twr_v194;
    __twr_v196 = 16ULL;
    __twr_v197 = _mng_hashtable189 + __twr_v196;
    __twr_v198 = __twr_v194 * __twr_v196;
    __twr_v199 = __twr_v197 + __twr_v198;
    _mng_head200 = __twr_v199;
    __twr_v201 = 0ULL;
    __twr_v202 = __twr_v199;
    __twr_v203 = *(uint64_t*)(__twr_v199);
    _mng_listentry204 = __twr_v203;
    if (__twr_v203 != __twr_v199) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l12:;
    __twr_v205 = 0ULL;
    __twr_v206 = _mng_listentry204 - __twr_v205;
    _mng_entry207 = __twr_v206;
    __twr_v208 = (uint64_t)(&TlCompareString);
    __twr_v209 = 40ULL;
    __twr_v210 = __twr_v206 + __twr_v209;
    __twr_v211 = *(uint64_t*)(__twr_v210);
    __twr_v212 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v208)(_mng_key191, __twr_v211);
    if (__twr_v212 == __twr_v205) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l16:;
    __twr_v213 = 0ULL;
    *(uint8_t*)(_mng_created192) = __twr_v213;
    return _mng_entry207;
    __twr_l15:;
    __twr_v214 = 0ULL;
    __twr_v215 = _mng_listentry204;
    __twr_v216 = *(uint64_t*)(_mng_listentry204);
    _mng_listentry204 = __twr_v216;
    __twr_l14:;
    if (_mng_listentry204 != _mng_head200) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v217 = (uint64_t)(&TlBumpAlloc);
    __twr_v218 = (uint64_t)(&_mng_entry207);
    __twr_v219 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v217)(_mng_entrysize190, __twr_v218);
    _mng_status220 = __twr_v219;
    if (__twr_v219) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l18:;
    __twr_v221 = (uint64_t)(&TlInternalError);
    __twr_v222 = (uint64_t)(&"Failed to allocate entry");
    __twr_v223 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v221)(__twr_v222, __twr_v223, __twr_v223, __twr_v223);
    __twr_l17:;
    __twr_v224 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v224)(_mng_hashtable189, _mng_entry207, _mng_key191, _mng_hash195);
    __twr_v225 = 1ULL;
    *(uint8_t*)(_mng_created192) = __twr_v225;
    return _mng_entry207;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable226, uint64_t _mng_entry227, uint64_t _mng_key228) {
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t _mng_hash231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t _mng_head236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t _mng_listentry240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t _mng_oldentry243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    __twr_v229 = (uint64_t)(&TlHashString);
    __twr_v230 = ((uint64_t (*)(uint64_t))__twr_v229)(_mng_key228);
    _mng_hash231 = __twr_v230;
    __twr_v232 = 16ULL;
    __twr_v233 = _mng_hashtable226 + __twr_v232;
    __twr_v234 = __twr_v230 * __twr_v232;
    __twr_v235 = __twr_v233 + __twr_v234;
    _mng_head236 = __twr_v235;
    __twr_v237 = 0ULL;
    __twr_v238 = __twr_v235;
    __twr_v239 = *(uint64_t*)(__twr_v235);
    _mng_listentry240 = __twr_v239;
    if (__twr_v239 != __twr_v235) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l19:;
    __twr_v241 = 0ULL;
    __twr_v242 = _mng_listentry240 - __twr_v241;
    _mng_oldentry243 = __twr_v242;
    __twr_v244 = (uint64_t)(&TlCompareString);
    __twr_v245 = 40ULL;
    __twr_v246 = __twr_v242 + __twr_v245;
    __twr_v247 = *(uint64_t*)(__twr_v246);
    __twr_v248 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v244)(_mng_key228, __twr_v247);
    if (__twr_v248 == __twr_v241) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l23:;
    return _mng_oldentry243;
    __twr_l22:;
    __twr_v249 = 0ULL;
    __twr_v250 = _mng_listentry240;
    __twr_v251 = *(uint64_t*)(_mng_listentry240);
    _mng_listentry240 = __twr_v251;
    __twr_l21:;
    if (_mng_listentry240 != _mng_head236) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v252 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v252)(_mng_hashtable226, _mng_entry227, _mng_key228, _mng_hash231);
    return _mng_entry227;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable253, uint64_t _mng_key254, uint64_t _mng_hash255) {
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t _mng_head260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t _mng_listentry264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t _mng_entry267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    __twr_v256 = 16ULL;
    __twr_v257 = _mng_hashtable253 + __twr_v256;
    __twr_v258 = _mng_hash255 * __twr_v256;
    __twr_v259 = __twr_v257 + __twr_v258;
    _mng_head260 = __twr_v259;
    __twr_v261 = 0ULL;
    __twr_v262 = __twr_v259;
    __twr_v263 = *(uint64_t*)(__twr_v259);
    _mng_listentry264 = __twr_v263;
    if (__twr_v263 != __twr_v259) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l24:;
    __twr_v265 = 0ULL;
    __twr_v266 = _mng_listentry264 - __twr_v265;
    _mng_entry267 = __twr_v266;
    __twr_v268 = (uint64_t)(&TlCompareString);
    __twr_v269 = 40ULL;
    __twr_v270 = __twr_v266 + __twr_v269;
    __twr_v271 = *(uint64_t*)(__twr_v270);
    __twr_v272 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v268)(_mng_key254, __twr_v271);
    if (__twr_v272 == __twr_v265) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l28:;
    return _mng_entry267;
    __twr_l27:;
    __twr_v273 = 0ULL;
    __twr_v274 = _mng_listentry264;
    __twr_v275 = *(uint64_t*)(_mng_listentry264);
    _mng_listentry264 = __twr_v275;
    __twr_l26:;
    if (_mng_listentry264 != _mng_head260) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v276 = 0ULL;
    return __twr_v276;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable277, uint64_t _mng_key278) {
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t _mng_hash281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    __twr_v279 = (uint64_t)(&TlHashString);
    __twr_v280 = ((uint64_t (*)(uint64_t))__twr_v279)(_mng_key278);
    _mng_hash281 = __twr_v280;
    __twr_v282 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v283 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v282)(_mng_hashtable277, _mng_key278, _mng_hash281);
    return __twr_v283;
}
void TlRemoveHashTable(uint64_t _mng_entry284) {
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t _mng_listentry287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t _mng_prev291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t _mng_next294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t _mng_listentry299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t _mng_prev302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t _mng_next305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    __twr_v285 = 0ULL;
    __twr_v286 = _mng_entry284;
    _mng_listentry287 = _mng_entry284;
    __twr_v288 = 8ULL;
    __twr_v289 = _mng_entry284 + __twr_v288;
    __twr_v290 = *(uint64_t*)(__twr_v289);
    _mng_prev291 = __twr_v290;
    __twr_v292 = _mng_entry284;
    __twr_v293 = *(uint64_t*)(_mng_entry284);
    _mng_next294 = __twr_v293;
    __twr_v295 = __twr_v290;
    *(uint64_t*)(__twr_v290) = __twr_v293;
    __twr_v296 = __twr_v293 + __twr_v288;
    *(uint64_t*)(__twr_v296) = __twr_v290;
    __twr_v297 = 16ULL;
    __twr_v298 = _mng_entry284 + __twr_v297;
    _mng_listentry299 = __twr_v298;
    __twr_v300 = __twr_v298 + __twr_v288;
    __twr_v301 = *(uint64_t*)(__twr_v300);
    _mng_prev302 = __twr_v301;
    __twr_v303 = __twr_v298;
    __twr_v304 = *(uint64_t*)(__twr_v298);
    _mng_next305 = __twr_v304;
    __twr_v306 = __twr_v301;
    *(uint64_t*)(__twr_v301) = __twr_v304;
    __twr_v307 = __twr_v304 + __twr_v288;
    *(uint64_t*)(__twr_v307) = __twr_v301;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable308, uint64_t _mng_enumfunc309) {
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t _mng_head312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t _mng_listentry315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t _mng_nextentry319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t _mng_entry322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    __twr_v310 = 0ULL;
    __twr_v311 = _mng_hashtable308;
    _mng_head312 = _mng_hashtable308;
    __twr_v313 = _mng_hashtable308;
    __twr_v314 = *(uint64_t*)(_mng_hashtable308);
    _mng_listentry315 = __twr_v314;
    if (__twr_v314 != _mng_hashtable308) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l29:;
    __twr_v316 = 0ULL;
    __twr_v317 = _mng_listentry315;
    __twr_v318 = *(uint64_t*)(_mng_listentry315);
    _mng_nextentry319 = __twr_v318;
    __twr_v320 = 16ULL;
    __twr_v321 = _mng_listentry315 - __twr_v320;
    _mng_entry322 = __twr_v321;
    __twr_v323 = (uint64_t)(&_mng_enumfunc309);
    __twr_v324 = *(uint64_t*)(__twr_v323);
    ((void (*)(uint64_t))__twr_v324)(_mng_entry322);
    _mng_listentry315 = __twr_v318;
    __twr_l31:;
    if (_mng_listentry315 != _mng_head312) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
}
uint64_t TlHashString(uint64_t _mng_str325) {
    uint64_t __twr_v326;
    uint64_t _mng_hash327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    __twr_v326 = 0ULL;
    _mng_hash327 = __twr_v326;
    __twr_v328 = *(uint8_t*)(_mng_str325);
    if (__twr_v328) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l32:;
    __twr_v329 = *(uint8_t*)(_mng_str325);
    __twr_v330 = _mng_hash327 + __twr_v329;
    _mng_hash327 = __twr_v330;
    __twr_v331 = 10ULL;
    __twr_v332 = __twr_v330 << __twr_v331;
    __twr_v333 = __twr_v330 + __twr_v332;
    _mng_hash327 = __twr_v333;
    __twr_v334 = 6ULL;
    __twr_v335 = __twr_v333 >> __twr_v334;
    __twr_v336 = __twr_v333 ^ __twr_v335;
    _mng_hash327 = __twr_v336;
    __twr_v337 = 1ULL;
    __twr_v338 = _mng_str325 + __twr_v337;
    _mng_str325 = __twr_v338;
    __twr_l34:;
    __twr_v339 = *(uint8_t*)(_mng_str325);
    if (__twr_v339) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v340 = 3ULL;
    __twr_v341 = _mng_hash327 << __twr_v340;
    __twr_v342 = _mng_hash327 + __twr_v341;
    _mng_hash327 = __twr_v342;
    __twr_v343 = 11ULL;
    __twr_v344 = __twr_v342 >> __twr_v343;
    __twr_v345 = __twr_v342 ^ __twr_v344;
    _mng_hash327 = __twr_v345;
    __twr_v346 = 15ULL;
    __twr_v347 = __twr_v345 << __twr_v346;
    __twr_v348 = __twr_v345 + __twr_v347;
    _mng_hash327 = __twr_v348;
    __twr_v349 = 97ULL;
    __twr_v350 = __twr_v348 % __twr_v349;
    _mng_hash327 = __twr_v350;
    return __twr_v350;
}

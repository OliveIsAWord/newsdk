#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_ptr20);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_ptr22);
extern void TlFree(uint64_t _mng_ptr23);
extern uint64_t TlCompareString(uint64_t _mng_str124, uint64_t _mng_str225);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str126, uint64_t _mng_str227, uint64_t _mng_count28);
extern void TlCopyString(uint64_t _mng_dest29, uint64_t _mng_src30, uint64_t _mng_bufsize31);
extern uint64_t TlOpenSource(uint64_t _mng_filename32, uint64_t _mng_handle33);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_handle35);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_created54);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable55, uint64_t _mng_key56);
extern void TlRemoveHashTable(uint64_t _mng_entry57);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable58, uint64_t _mng_enumfunc59);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable60, uint64_t _mng_key61, uint64_t _mng_hash62);
extern uint64_t TlHashString(uint64_t _mng_str63);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable64, uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope67, uint64_t _mng_deletefunc68);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable69);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_name71);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable72, uint64_t _mng_entry73, uint64_t _mng_name74);
extern void TlRemoveSymbolTable(uint64_t _mng_entry75);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array77);
extern void TlInsertDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_byte79);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array80, uint64_t _mng_srcbuf81, uint64_t _mng_length82);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array83, uint64_t _mng_number84, uint64_t _mng_base85);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array86);
extern uint64_t TlMatchPath(uint64_t _mng_path87, uint64_t _mng_pathset88, uint64_t _mng_resultingpath89, uint64_t _mng_handle90);
extern void TlCopyParentPath(uint64_t _mng_srcpath91, uint64_t _mng_destpath92);
extern void TlInitializeZone(uint64_t _mng_zone93, uint64_t _mng_blocksize94);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone95);
extern void TlFreeToZone(uint64_t _mng_zone96, uint64_t _mng_block97);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant98);
extern void TlPunchValue(uint64_t _mng_ptr99, uint64_t _mng_value100, uint64_t _mng_bytes101);
void TlInitializeHashTable(uint64_t _mng_hashtable102) {
    uint64_t __twr_v103;
    uint64_t __twr_v104;
    uint64_t __twr_v105;
    uint64_t __twr_v106;
    uint64_t __twr_v107;
    uint64_t __twr_v108;
    uint64_t __twr_v109;
    uint64_t __twr_v110;
    __twr_v103 = 0ULL;
    __twr_v104 = 0ULL;
    __twr_v105 = _mng_hashtable102 + __twr_v104;
    *(uint64_t*)(__twr_v105) = __twr_v103;
    __twr_v106 = (uint64_t)(&TlFillMemoryWithByte);
    __twr_v107 = 8ULL;
    __twr_v108 = _mng_hashtable102 + __twr_v107;
    __twr_v109 = 776ULL;
    __twr_v110 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v106)(__twr_v108, __twr_v109, __twr_v110);
}
void TlSummarizeHashTable(uint64_t _mng_hashtable111) {
    uint64_t __twr_v112;
    uint64_t _mng_i113;
    uint64_t __twr_v114;
    uint64_t __twr_v115;
    uint64_t _mng_entries116;
    uint64_t __twr_v117;
    uint64_t __twr_v118;
    uint64_t __twr_v119;
    uint64_t __twr_v120;
    uint64_t __twr_v121;
    uint64_t __twr_v122;
    uint64_t _mng_entry123;
    uint64_t __twr_v124;
    uint64_t __twr_v125;
    uint64_t __twr_v126;
    uint64_t __twr_v127;
    uint64_t __twr_v128;
    uint64_t __twr_v129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t __twr_v133;
    uint64_t __twr_v134;
    uint64_t __twr_v135;
    uint64_t __twr_v136;
    uint64_t __twr_v137;
    __twr_v112 = 0ULL;
    _mng_i113 = __twr_v112;
    __twr_v114 = 97ULL;
    if (_mng_i113 < __twr_v114) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l1:;
    __twr_v115 = 0ULL;
    _mng_entries116 = __twr_v115;
    __twr_v117 = 8ULL;
    __twr_v118 = _mng_hashtable111 + __twr_v117;
    __twr_v119 = 8ULL;
    __twr_v120 = _mng_i113 * __twr_v119;
    __twr_v121 = __twr_v118 + __twr_v120;
    __twr_v122 = *(uint64_t*)(__twr_v121);
    _mng_entry123 = __twr_v122;
    if (_mng_entry123) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l4:;
    __twr_v124 = 1ULL;
    __twr_v125 = _mng_entries116 + __twr_v124;
    _mng_entries116 = __twr_v125;
    __twr_v126 = 0ULL;
    __twr_v127 = _mng_entry123 + __twr_v126;
    __twr_v128 = *(uint64_t*)(__twr_v127);
    _mng_entry123 = __twr_v128;
    __twr_l6:;
    if (_mng_entry123) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
    if (_mng_entries116) { goto __twr_l8; } else { goto __twr_l7; }
    __twr_l8:;
    __twr_v129 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v129)(_mng_i113);
    __twr_v130 = (uint64_t)(&TlPrintString);
    __twr_v131 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v130)(__twr_v131);
    __twr_v132 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v132)(_mng_entries116);
    __twr_v133 = (uint64_t)(&TlPrintString);
    __twr_v134 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v133)(__twr_v134);
    __twr_l7:;
    __twr_v135 = 1ULL;
    __twr_v136 = _mng_i113 + __twr_v135;
    _mng_i113 = __twr_v136;
    __twr_l3:;
    __twr_v137 = 97ULL;
    if (_mng_i113 < __twr_v137) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable138, uint64_t _mng_entry139, uint64_t _mng_key140, uint64_t _mng_hash141) {
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t _mng_head148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    __twr_v142 = 8ULL;
    __twr_v143 = _mng_hashtable138 + __twr_v142;
    __twr_v144 = 8ULL;
    __twr_v145 = _mng_hash141 * __twr_v144;
    __twr_v146 = __twr_v143 + __twr_v145;
    __twr_v147 = *(uint64_t*)(__twr_v146);
    _mng_head148 = __twr_v147;
    __twr_v149 = 32ULL;
    __twr_v150 = _mng_entry139 + __twr_v149;
    *(uint64_t*)(__twr_v150) = _mng_hashtable138;
    __twr_v151 = 40ULL;
    __twr_v152 = _mng_entry139 + __twr_v151;
    *(uint64_t*)(__twr_v152) = _mng_key140;
    __twr_v153 = 48ULL;
    __twr_v154 = _mng_entry139 + __twr_v153;
    *(uint8_t*)(__twr_v154) = _mng_hash141;
    __twr_v155 = 0ULL;
    __twr_v156 = 8ULL;
    __twr_v157 = _mng_entry139 + __twr_v156;
    *(uint64_t*)(__twr_v157) = __twr_v155;
    __twr_v158 = 0ULL;
    __twr_v159 = _mng_entry139 + __twr_v158;
    *(uint64_t*)(__twr_v159) = _mng_head148;
    if (_mng_head148) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l10:;
    __twr_v160 = 8ULL;
    __twr_v161 = _mng_head148 + __twr_v160;
    *(uint64_t*)(__twr_v161) = _mng_entry139;
    __twr_l9:;
    __twr_v162 = 8ULL;
    __twr_v163 = _mng_hashtable138 + __twr_v162;
    __twr_v164 = 8ULL;
    __twr_v165 = _mng_hash141 * __twr_v164;
    __twr_v166 = __twr_v163 + __twr_v165;
    *(uint64_t*)(__twr_v166) = _mng_entry139;
    __twr_v167 = 0ULL;
    __twr_v168 = _mng_hashtable138 + __twr_v167;
    __twr_v169 = *(uint64_t*)(__twr_v168);
    _mng_head148 = __twr_v169;
    __twr_v170 = 0ULL;
    __twr_v171 = 24ULL;
    __twr_v172 = _mng_entry139 + __twr_v171;
    *(uint64_t*)(__twr_v172) = __twr_v170;
    __twr_v173 = 16ULL;
    __twr_v174 = _mng_entry139 + __twr_v173;
    *(uint64_t*)(__twr_v174) = _mng_head148;
    if (_mng_head148) { goto __twr_l12; } else { goto __twr_l11; }
    __twr_l12:;
    __twr_v175 = 8ULL;
    __twr_v176 = _mng_head148 + __twr_v175;
    *(uint64_t*)(__twr_v176) = _mng_entry139;
    __twr_l11:;
    __twr_v177 = 0ULL;
    __twr_v178 = _mng_hashtable138 + __twr_v177;
    *(uint64_t*)(__twr_v178) = _mng_entry139;
}
void TlInsertHashTable(uint64_t _mng_hashtable179, uint64_t _mng_entry180, uint64_t _mng_key181) {
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint32_t _mng_hash184;
    uint64_t __twr_v185;
    __twr_v182 = (uint64_t)(&TlHashString);
    __twr_v183 = ((uint64_t (*)(uint64_t))__twr_v182)(_mng_key181);
    _mng_hash184 = __twr_v183;
    __twr_v185 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v185)(_mng_hashtable179, _mng_entry180, _mng_key181, _mng_hash184);
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable186, uint64_t _mng_entrysize187, uint64_t _mng_key188, uint64_t _mng_created189) {
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint32_t _mng_hash192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t _mng_head199;
    uint64_t _mng_entry200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t _mng_status214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    __twr_v190 = (uint64_t)(&TlHashString);
    __twr_v191 = ((uint64_t (*)(uint64_t))__twr_v190)(_mng_key188);
    _mng_hash192 = __twr_v191;
    __twr_v193 = 8ULL;
    __twr_v194 = _mng_hashtable186 + __twr_v193;
    __twr_v195 = 8ULL;
    __twr_v196 = _mng_hash192 * __twr_v195;
    __twr_v197 = __twr_v194 + __twr_v196;
    __twr_v198 = *(uint64_t*)(__twr_v197);
    _mng_head199 = __twr_v198;
    _mng_entry200 = _mng_head199;
    if (_mng_entry200) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l13:;
    __twr_v201 = (uint64_t)(&TlCompareString);
    __twr_v202 = 40ULL;
    __twr_v203 = _mng_entry200 + __twr_v202;
    __twr_v204 = *(uint64_t*)(__twr_v203);
    __twr_v205 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v201)(_mng_key188, __twr_v204);
    __twr_v206 = 0ULL;
    if (__twr_v205 == __twr_v206) { goto __twr_l17; } else { goto __twr_l16; }
    __twr_l17:;
    __twr_v207 = 0ULL;
    *(uint8_t*)(_mng_created189) = __twr_v207;
    return _mng_entry200;
    __twr_l16:;
    __twr_v208 = 0ULL;
    __twr_v209 = _mng_entry200 + __twr_v208;
    __twr_v210 = *(uint64_t*)(__twr_v209);
    _mng_entry200 = __twr_v210;
    __twr_l15:;
    if (_mng_entry200) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v211 = (uint64_t)(&TlBumpAlloc);
    __twr_v212 = (uint64_t)(&_mng_entry200);
    __twr_v213 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v211)(_mng_entrysize187, __twr_v212);
    _mng_status214 = __twr_v213;
    if (_mng_status214) { goto __twr_l19; } else { goto __twr_l18; }
    __twr_l19:;
    __twr_v215 = (uint64_t)(&TlInternalError);
    __twr_v216 = (uint64_t)(&"Failed to allocate entry");
    __twr_v217 = 0ULL;
    __twr_v218 = 0ULL;
    __twr_v219 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v215)(__twr_v216, __twr_v217, __twr_v218, __twr_v219);
    __twr_l18:;
    __twr_v220 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v220)(_mng_hashtable186, _mng_entry200, _mng_key188, _mng_hash192);
    __twr_v221 = 1ULL;
    *(uint8_t*)(_mng_created189) = __twr_v221;
    return _mng_entry200;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable222, uint64_t _mng_entry223, uint64_t _mng_key224) {
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint32_t _mng_hash227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t _mng_head234;
    uint64_t _mng_oldentry235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    __twr_v225 = (uint64_t)(&TlHashString);
    __twr_v226 = ((uint64_t (*)(uint64_t))__twr_v225)(_mng_key224);
    _mng_hash227 = __twr_v226;
    __twr_v228 = 8ULL;
    __twr_v229 = _mng_hashtable222 + __twr_v228;
    __twr_v230 = 8ULL;
    __twr_v231 = _mng_hash227 * __twr_v230;
    __twr_v232 = __twr_v229 + __twr_v231;
    __twr_v233 = *(uint64_t*)(__twr_v232);
    _mng_head234 = __twr_v233;
    _mng_oldentry235 = _mng_head234;
    if (_mng_oldentry235) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l20:;
    __twr_v236 = (uint64_t)(&TlCompareString);
    __twr_v237 = 40ULL;
    __twr_v238 = _mng_oldentry235 + __twr_v237;
    __twr_v239 = *(uint64_t*)(__twr_v238);
    __twr_v240 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v236)(_mng_key224, __twr_v239);
    __twr_v241 = 0ULL;
    if (__twr_v240 == __twr_v241) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l24:;
    return _mng_oldentry235;
    __twr_l23:;
    __twr_v242 = 0ULL;
    __twr_v243 = _mng_oldentry235 + __twr_v242;
    __twr_v244 = *(uint64_t*)(__twr_v243);
    _mng_oldentry235 = __twr_v244;
    __twr_l22:;
    if (_mng_oldentry235) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v245 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v245)(_mng_hashtable222, _mng_entry223, _mng_key224, _mng_hash227);
    return _mng_entry223;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable246, uint64_t _mng_key247, uint64_t _mng_hash248) {
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t _mng_entry255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    __twr_v249 = 8ULL;
    __twr_v250 = _mng_hashtable246 + __twr_v249;
    __twr_v251 = 8ULL;
    __twr_v252 = _mng_hash248 * __twr_v251;
    __twr_v253 = __twr_v250 + __twr_v252;
    __twr_v254 = *(uint64_t*)(__twr_v253);
    _mng_entry255 = __twr_v254;
    if (_mng_entry255) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l25:;
    __twr_v256 = (uint64_t)(&TlCompareString);
    __twr_v257 = 40ULL;
    __twr_v258 = _mng_entry255 + __twr_v257;
    __twr_v259 = *(uint64_t*)(__twr_v258);
    __twr_v260 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v256)(_mng_key247, __twr_v259);
    __twr_v261 = 0ULL;
    if (__twr_v260 == __twr_v261) { goto __twr_l29; } else { goto __twr_l28; }
    __twr_l29:;
    return _mng_entry255;
    __twr_l28:;
    __twr_v262 = 0ULL;
    __twr_v263 = _mng_entry255 + __twr_v262;
    __twr_v264 = *(uint64_t*)(__twr_v263);
    _mng_entry255 = __twr_v264;
    __twr_l27:;
    if (_mng_entry255) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v265 = 0ULL;
    return __twr_v265;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable266, uint64_t _mng_key267) {
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint32_t _mng_hash270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    __twr_v268 = (uint64_t)(&TlHashString);
    __twr_v269 = ((uint64_t (*)(uint64_t))__twr_v268)(_mng_key267);
    _mng_hash270 = __twr_v269;
    __twr_v271 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v272 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v271)(_mng_hashtable266, _mng_key267, _mng_hash270);
    return __twr_v272;
}
void TlRemoveHashTable(uint64_t _mng_entry273) {
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_hashtable277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint8_t _mng_hash281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_p285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    __twr_v274 = 32ULL;
    __twr_v275 = _mng_entry273 + __twr_v274;
    __twr_v276 = *(uint64_t*)(__twr_v275);
    _mng_hashtable277 = __twr_v276;
    __twr_v278 = 48ULL;
    __twr_v279 = _mng_entry273 + __twr_v278;
    __twr_v280 = *(uint8_t*)(__twr_v279);
    _mng_hash281 = __twr_v280;
    __twr_v282 = 8ULL;
    __twr_v283 = _mng_entry273 + __twr_v282;
    __twr_v284 = *(uint64_t*)(__twr_v283);
    _mng_p285 = __twr_v284;
    if (_mng_p285) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l31:;
    __twr_v286 = 0ULL;
    __twr_v287 = _mng_entry273 + __twr_v286;
    __twr_v288 = *(uint64_t*)(__twr_v287);
    __twr_v289 = 0ULL;
    __twr_v290 = _mng_p285 + __twr_v289;
    *(uint64_t*)(__twr_v290) = __twr_v288;
    goto __twr_l30;
    __twr_l32:;
    __twr_v291 = 0ULL;
    __twr_v292 = _mng_entry273 + __twr_v291;
    __twr_v293 = *(uint64_t*)(__twr_v292);
    __twr_v294 = 8ULL;
    __twr_v295 = _mng_hashtable277 + __twr_v294;
    __twr_v296 = 8ULL;
    __twr_v297 = _mng_hash281 * __twr_v296;
    __twr_v298 = __twr_v295 + __twr_v297;
    *(uint64_t*)(__twr_v298) = __twr_v293;
    __twr_l30:;
    __twr_v299 = 0ULL;
    __twr_v300 = _mng_entry273 + __twr_v299;
    __twr_v301 = *(uint64_t*)(__twr_v300);
    _mng_p285 = __twr_v301;
    if (_mng_p285) { goto __twr_l34; } else { goto __twr_l33; }
    __twr_l34:;
    __twr_v302 = 8ULL;
    __twr_v303 = _mng_entry273 + __twr_v302;
    __twr_v304 = *(uint64_t*)(__twr_v303);
    __twr_v305 = 8ULL;
    __twr_v306 = _mng_p285 + __twr_v305;
    *(uint64_t*)(__twr_v306) = __twr_v304;
    __twr_l33:;
    __twr_v307 = 24ULL;
    __twr_v308 = _mng_entry273 + __twr_v307;
    __twr_v309 = *(uint64_t*)(__twr_v308);
    _mng_p285 = __twr_v309;
    if (_mng_p285) { goto __twr_l36; } else { goto __twr_l37; }
    __twr_l36:;
    __twr_v310 = 16ULL;
    __twr_v311 = _mng_entry273 + __twr_v310;
    __twr_v312 = *(uint64_t*)(__twr_v311);
    __twr_v313 = 16ULL;
    __twr_v314 = _mng_p285 + __twr_v313;
    *(uint64_t*)(__twr_v314) = __twr_v312;
    goto __twr_l35;
    __twr_l37:;
    __twr_v315 = 16ULL;
    __twr_v316 = _mng_entry273 + __twr_v315;
    __twr_v317 = *(uint64_t*)(__twr_v316);
    __twr_v318 = 0ULL;
    __twr_v319 = _mng_hashtable277 + __twr_v318;
    *(uint64_t*)(__twr_v319) = __twr_v317;
    __twr_l35:;
    __twr_v320 = 16ULL;
    __twr_v321 = _mng_entry273 + __twr_v320;
    __twr_v322 = *(uint64_t*)(__twr_v321);
    _mng_p285 = __twr_v322;
    if (_mng_p285) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l39:;
    __twr_v323 = 24ULL;
    __twr_v324 = _mng_entry273 + __twr_v323;
    __twr_v325 = *(uint64_t*)(__twr_v324);
    __twr_v326 = 24ULL;
    __twr_v327 = _mng_p285 + __twr_v326;
    *(uint64_t*)(__twr_v327) = __twr_v325;
    __twr_l38:;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable328, uint64_t _mng_enumfunc329) {
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t _mng_entry333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t _mng_nextentry337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    __twr_v330 = 0ULL;
    __twr_v331 = _mng_hashtable328 + __twr_v330;
    __twr_v332 = *(uint64_t*)(__twr_v331);
    _mng_entry333 = __twr_v332;
    if (_mng_entry333) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l40:;
    __twr_v334 = 0ULL;
    __twr_v335 = _mng_entry333 + __twr_v334;
    __twr_v336 = *(uint64_t*)(__twr_v335);
    _mng_nextentry337 = __twr_v336;
    __twr_v338 = (uint64_t)(&_mng_enumfunc329);
    __twr_v339 = *(uint64_t*)(__twr_v338);
    ((void (*)(uint64_t))__twr_v339)(_mng_entry333);
    _mng_entry333 = _mng_nextentry337;
    __twr_l42:;
    if (_mng_entry333) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l41:;
}
uint64_t TlHashString(uint64_t _mng_str340) {
    uint64_t __twr_v341;
    uint32_t _mng_hash342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    __twr_v341 = 0ULL;
    _mng_hash342 = __twr_v341;
    __twr_v343 = *(uint8_t*)(_mng_str340);
    if (__twr_v343) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l43:;
    __twr_v344 = *(uint8_t*)(_mng_str340);
    __twr_v345 = _mng_hash342 + __twr_v344;
    _mng_hash342 = __twr_v345;
    __twr_v346 = 10ULL;
    __twr_v347 = _mng_hash342 << __twr_v346;
    __twr_v348 = _mng_hash342 + __twr_v347;
    _mng_hash342 = __twr_v348;
    __twr_v349 = 6ULL;
    __twr_v350 = _mng_hash342 >> __twr_v349;
    __twr_v351 = _mng_hash342 ^ __twr_v350;
    _mng_hash342 = __twr_v351;
    __twr_v352 = 1ULL;
    __twr_v353 = _mng_str340 + __twr_v352;
    _mng_str340 = __twr_v353;
    __twr_l45:;
    __twr_v354 = *(uint8_t*)(_mng_str340);
    if (__twr_v354) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v355 = 3ULL;
    __twr_v356 = _mng_hash342 << __twr_v355;
    __twr_v357 = _mng_hash342 + __twr_v356;
    _mng_hash342 = __twr_v357;
    __twr_v358 = 11ULL;
    __twr_v359 = _mng_hash342 >> __twr_v358;
    __twr_v360 = _mng_hash342 ^ __twr_v359;
    _mng_hash342 = __twr_v360;
    __twr_v361 = 15ULL;
    __twr_v362 = _mng_hash342 << __twr_v361;
    __twr_v363 = _mng_hash342 + __twr_v362;
    _mng_hash342 = __twr_v363;
    __twr_v364 = 97ULL;
    __twr_v365 = _mng_hash342 % __twr_v364;
    _mng_hash342 = __twr_v365;
    return _mng_hash342;
}

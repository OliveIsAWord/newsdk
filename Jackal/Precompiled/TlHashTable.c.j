#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_ptr20);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_ptr22);
extern void TlFree(uint64_t _mng_ptr23);
extern uint64_t TlCompareString(uint64_t _mng_str124, uint64_t _mng_str225);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str126, uint64_t _mng_str227, uint64_t _mng_count28);
extern void TlCopyString(uint64_t _mng_dest29, uint64_t _mng_src30, uint64_t _mng_bufsize31);
extern uint64_t TlOpenSource(uint64_t _mng_filename32, uint64_t _mng_handle33);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_handle35);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_created54);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable55, uint64_t _mng_key56);
extern void TlRemoveHashTable(uint64_t _mng_entry57);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable58, uint64_t _mng_enumfunc59);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable60, uint64_t _mng_key61, uint64_t _mng_hash62);
extern uint64_t TlHashString(uint64_t _mng_str63);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable64, uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope67, uint64_t _mng_deletefunc68);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable69);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_name71);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable72, uint64_t _mng_entry73, uint64_t _mng_name74);
extern void TlRemoveSymbolTable(uint64_t _mng_entry75);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array77);
extern void TlInsertDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_byte79);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array80, uint64_t _mng_srcbuf81, uint64_t _mng_length82);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array83, uint64_t _mng_number84, uint64_t _mng_base85);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array86);
extern uint64_t TlMatchPath(uint64_t _mng_path87, uint64_t _mng_pathset88, uint64_t _mng_resultingpath89, uint64_t _mng_handle90);
extern void TlCopyParentPath(uint64_t _mng_srcpath91, uint64_t _mng_destpath92);
extern void TlInitializeZone(uint64_t _mng_zone93, uint64_t _mng_blocksize94);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone95);
extern void TlFreeToZone(uint64_t _mng_zone96, uint64_t _mng_block97);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant98);
extern void TlPunchValue(uint64_t _mng_ptr99, uint64_t _mng_value100, uint64_t _mng_bytes101);
void TlInitializeHashTable(uint64_t _mng_hashtable102) {
    uint64_t __twr_v103;
    uint64_t __twr_v104;
    uint64_t _mng_listhead105;
    uint64_t __twr_v106;
    uint64_t __twr_v107;
    uint64_t __twr_v108;
    uint64_t __twr_v109;
    uint64_t __twr_v110;
    uint64_t _mng_i111;
    uint64_t __twr_v112;
    uint64_t __twr_v113;
    uint64_t __twr_v114;
    uint64_t __twr_v115;
    uint64_t __twr_v116;
    uint64_t __twr_v117;
    uint64_t _mng_listhead118;
    uint64_t __twr_v119;
    uint64_t __twr_v120;
    uint64_t __twr_v121;
    uint64_t __twr_v122;
    uint64_t __twr_v123;
    uint64_t __twr_v124;
    uint64_t __twr_v125;
    __twr_v103 = 0ULL;
    __twr_v104 = _mng_hashtable102 + __twr_v103;
    _mng_listhead105 = __twr_v104;
    __twr_v106 = 8ULL;
    __twr_v107 = _mng_listhead105 + __twr_v106;
    *(uint64_t*)(__twr_v107) = _mng_listhead105;
    __twr_v108 = 0ULL;
    __twr_v109 = _mng_listhead105 + __twr_v108;
    *(uint64_t*)(__twr_v109) = _mng_listhead105;
    __twr_v110 = 0ULL;
    _mng_i111 = __twr_v110;
    __twr_v112 = 97ULL;
    if (_mng_i111 < __twr_v112) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l1:;
    __twr_v113 = 16ULL;
    __twr_v114 = _mng_hashtable102 + __twr_v113;
    __twr_v115 = 16ULL;
    __twr_v116 = _mng_i111 * __twr_v115;
    __twr_v117 = __twr_v114 + __twr_v116;
    _mng_listhead118 = __twr_v117;
    __twr_v119 = 8ULL;
    __twr_v120 = _mng_listhead118 + __twr_v119;
    *(uint64_t*)(__twr_v120) = _mng_listhead118;
    __twr_v121 = 0ULL;
    __twr_v122 = _mng_listhead118 + __twr_v121;
    *(uint64_t*)(__twr_v122) = _mng_listhead118;
    __twr_v123 = 1ULL;
    __twr_v124 = _mng_i111 + __twr_v123;
    _mng_i111 = __twr_v124;
    __twr_l3:;
    __twr_v125 = 97ULL;
    if (_mng_i111 < __twr_v125) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable126) {
    uint64_t __twr_v127;
    uint64_t _mng_i128;
    uint64_t __twr_v129;
    uint64_t __twr_v130;
    uint64_t _mng_entries131;
    uint64_t __twr_v132;
    uint64_t __twr_v133;
    uint64_t __twr_v134;
    uint64_t __twr_v135;
    uint64_t __twr_v136;
    uint64_t _mng_head137;
    uint64_t __twr_v138;
    uint64_t __twr_v139;
    uint64_t __twr_v140;
    uint64_t _mng_listentry141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    __twr_v127 = 0ULL;
    _mng_i128 = __twr_v127;
    __twr_v129 = 97ULL;
    if (_mng_i128 < __twr_v129) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l4:;
    __twr_v130 = 0ULL;
    _mng_entries131 = __twr_v130;
    __twr_v132 = 16ULL;
    __twr_v133 = _mng_hashtable126 + __twr_v132;
    __twr_v134 = 16ULL;
    __twr_v135 = _mng_i128 * __twr_v134;
    __twr_v136 = __twr_v133 + __twr_v135;
    _mng_head137 = __twr_v136;
    __twr_v138 = 0ULL;
    __twr_v139 = _mng_head137 + __twr_v138;
    __twr_v140 = *(uint64_t*)(__twr_v139);
    _mng_listentry141 = __twr_v140;
    if (_mng_listentry141 != _mng_head137) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l7:;
    __twr_v142 = 1ULL;
    __twr_v143 = _mng_entries131 + __twr_v142;
    _mng_entries131 = __twr_v143;
    __twr_v144 = 0ULL;
    __twr_v145 = _mng_listentry141 + __twr_v144;
    __twr_v146 = *(uint64_t*)(__twr_v145);
    _mng_listentry141 = __twr_v146;
    __twr_l9:;
    if (_mng_listentry141 != _mng_head137) { goto __twr_l7; } else { goto __twr_l8; }
    __twr_l8:;
    if (_mng_entries131) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l11:;
    __twr_v147 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v147)(_mng_i128);
    __twr_v148 = (uint64_t)(&TlPrintString);
    __twr_v149 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v148)(__twr_v149);
    __twr_v150 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v150)(_mng_entries131);
    __twr_v151 = (uint64_t)(&TlPrintString);
    __twr_v152 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v151)(__twr_v152);
    __twr_l10:;
    __twr_v153 = 1ULL;
    __twr_v154 = _mng_i128 + __twr_v153;
    _mng_i128 = __twr_v154;
    __twr_l6:;
    __twr_v155 = 97ULL;
    if (_mng_i128 < __twr_v155) { goto __twr_l4; } else { goto __twr_l5; }
    __twr_l5:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable156, uint64_t _mng_entry157, uint64_t _mng_key158, uint64_t _mng_hash159) {
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t _mng_listhead169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t _mng_listentry172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t _mng_first176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t _mng_listhead191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t _mng_listentry194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t _mng_first198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    __twr_v160 = 32ULL;
    __twr_v161 = _mng_entry157 + __twr_v160;
    *(uint64_t*)(__twr_v161) = _mng_hashtable156;
    __twr_v162 = 40ULL;
    __twr_v163 = _mng_entry157 + __twr_v162;
    *(uint64_t*)(__twr_v163) = _mng_key158;
    __twr_v164 = 16ULL;
    __twr_v165 = _mng_hashtable156 + __twr_v164;
    __twr_v166 = 16ULL;
    __twr_v167 = _mng_hash159 * __twr_v166;
    __twr_v168 = __twr_v165 + __twr_v167;
    _mng_listhead169 = __twr_v168;
    __twr_v170 = 0ULL;
    __twr_v171 = _mng_entry157 + __twr_v170;
    _mng_listentry172 = __twr_v171;
    __twr_v173 = 0ULL;
    __twr_v174 = _mng_listhead169 + __twr_v173;
    __twr_v175 = *(uint64_t*)(__twr_v174);
    _mng_first176 = __twr_v175;
    __twr_v177 = 0ULL;
    __twr_v178 = _mng_listentry172 + __twr_v177;
    *(uint64_t*)(__twr_v178) = _mng_first176;
    __twr_v179 = 8ULL;
    __twr_v180 = _mng_listentry172 + __twr_v179;
    *(uint64_t*)(__twr_v180) = _mng_listhead169;
    __twr_v181 = 0ULL;
    __twr_v182 = _mng_entry157 + __twr_v181;
    __twr_v183 = 8ULL;
    __twr_v184 = _mng_first176 + __twr_v183;
    *(uint64_t*)(__twr_v184) = __twr_v182;
    __twr_v185 = 0ULL;
    __twr_v186 = _mng_entry157 + __twr_v185;
    __twr_v187 = 0ULL;
    __twr_v188 = _mng_listhead169 + __twr_v187;
    *(uint64_t*)(__twr_v188) = __twr_v186;
    __twr_v189 = 0ULL;
    __twr_v190 = _mng_hashtable156 + __twr_v189;
    _mng_listhead191 = __twr_v190;
    __twr_v192 = 16ULL;
    __twr_v193 = _mng_entry157 + __twr_v192;
    _mng_listentry194 = __twr_v193;
    __twr_v195 = 0ULL;
    __twr_v196 = _mng_listhead191 + __twr_v195;
    __twr_v197 = *(uint64_t*)(__twr_v196);
    _mng_first198 = __twr_v197;
    __twr_v199 = 0ULL;
    __twr_v200 = _mng_listentry194 + __twr_v199;
    *(uint64_t*)(__twr_v200) = _mng_first198;
    __twr_v201 = 8ULL;
    __twr_v202 = _mng_listentry194 + __twr_v201;
    *(uint64_t*)(__twr_v202) = _mng_listhead191;
    __twr_v203 = 16ULL;
    __twr_v204 = _mng_entry157 + __twr_v203;
    __twr_v205 = 8ULL;
    __twr_v206 = _mng_first198 + __twr_v205;
    *(uint64_t*)(__twr_v206) = __twr_v204;
    __twr_v207 = 16ULL;
    __twr_v208 = _mng_entry157 + __twr_v207;
    __twr_v209 = 0ULL;
    __twr_v210 = _mng_listhead191 + __twr_v209;
    *(uint64_t*)(__twr_v210) = __twr_v208;
}
void TlInsertHashTable(uint64_t _mng_hashtable211, uint64_t _mng_entry212, uint64_t _mng_key213) {
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t _mng_hash216;
    uint64_t __twr_v217;
    __twr_v214 = (uint64_t)(&TlHashString);
    __twr_v215 = ((uint64_t (*)(uint64_t))__twr_v214)(_mng_key213);
    _mng_hash216 = __twr_v215;
    __twr_v217 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v217)(_mng_hashtable211, _mng_entry212, _mng_key213, _mng_hash216);
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable218, uint64_t _mng_entrysize219, uint64_t _mng_key220, uint64_t _mng_created221) {
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t _mng_hash224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t _mng_head230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t _mng_listentry234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t _mng_entry237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t _mng_status251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    __twr_v222 = (uint64_t)(&TlHashString);
    __twr_v223 = ((uint64_t (*)(uint64_t))__twr_v222)(_mng_key220);
    _mng_hash224 = __twr_v223;
    __twr_v225 = 16ULL;
    __twr_v226 = _mng_hashtable218 + __twr_v225;
    __twr_v227 = 16ULL;
    __twr_v228 = _mng_hash224 * __twr_v227;
    __twr_v229 = __twr_v226 + __twr_v228;
    _mng_head230 = __twr_v229;
    __twr_v231 = 0ULL;
    __twr_v232 = _mng_head230 + __twr_v231;
    __twr_v233 = *(uint64_t*)(__twr_v232);
    _mng_listentry234 = __twr_v233;
    if (_mng_listentry234 != _mng_head230) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l12:;
    __twr_v235 = 0ULL;
    __twr_v236 = _mng_listentry234 - __twr_v235;
    _mng_entry237 = __twr_v236;
    __twr_v238 = (uint64_t)(&TlCompareString);
    __twr_v239 = 40ULL;
    __twr_v240 = _mng_entry237 + __twr_v239;
    __twr_v241 = *(uint64_t*)(__twr_v240);
    __twr_v242 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v238)(_mng_key220, __twr_v241);
    __twr_v243 = 0ULL;
    if (__twr_v242 == __twr_v243) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l16:;
    __twr_v244 = 0ULL;
    *(uint8_t*)(_mng_created221) = __twr_v244;
    return _mng_entry237;
    __twr_l15:;
    __twr_v245 = 0ULL;
    __twr_v246 = _mng_listentry234 + __twr_v245;
    __twr_v247 = *(uint64_t*)(__twr_v246);
    _mng_listentry234 = __twr_v247;
    __twr_l14:;
    if (_mng_listentry234 != _mng_head230) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v248 = (uint64_t)(&TlBumpAlloc);
    __twr_v249 = (uint64_t)(&_mng_entry237);
    __twr_v250 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v248)(_mng_entrysize219, __twr_v249);
    _mng_status251 = __twr_v250;
    if (_mng_status251) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l18:;
    __twr_v252 = (uint64_t)(&TlInternalError);
    __twr_v253 = (uint64_t)(&"Failed to allocate entry");
    __twr_v254 = 0ULL;
    __twr_v255 = 0ULL;
    __twr_v256 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v252)(__twr_v253, __twr_v254, __twr_v255, __twr_v256);
    __twr_l17:;
    __twr_v257 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(_mng_hashtable218, _mng_entry237, _mng_key220, _mng_hash224);
    __twr_v258 = 1ULL;
    *(uint8_t*)(_mng_created221) = __twr_v258;
    return _mng_entry237;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable259, uint64_t _mng_entry260, uint64_t _mng_key261) {
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t _mng_hash264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t _mng_head270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t _mng_listentry274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_oldentry277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    __twr_v262 = (uint64_t)(&TlHashString);
    __twr_v263 = ((uint64_t (*)(uint64_t))__twr_v262)(_mng_key261);
    _mng_hash264 = __twr_v263;
    __twr_v265 = 16ULL;
    __twr_v266 = _mng_hashtable259 + __twr_v265;
    __twr_v267 = 16ULL;
    __twr_v268 = _mng_hash264 * __twr_v267;
    __twr_v269 = __twr_v266 + __twr_v268;
    _mng_head270 = __twr_v269;
    __twr_v271 = 0ULL;
    __twr_v272 = _mng_head270 + __twr_v271;
    __twr_v273 = *(uint64_t*)(__twr_v272);
    _mng_listentry274 = __twr_v273;
    if (_mng_listentry274 != _mng_head270) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l19:;
    __twr_v275 = 0ULL;
    __twr_v276 = _mng_listentry274 - __twr_v275;
    _mng_oldentry277 = __twr_v276;
    __twr_v278 = (uint64_t)(&TlCompareString);
    __twr_v279 = 40ULL;
    __twr_v280 = _mng_oldentry277 + __twr_v279;
    __twr_v281 = *(uint64_t*)(__twr_v280);
    __twr_v282 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v278)(_mng_key261, __twr_v281);
    __twr_v283 = 0ULL;
    if (__twr_v282 == __twr_v283) { goto __twr_l23; } else { goto __twr_l22; }
    __twr_l23:;
    return _mng_oldentry277;
    __twr_l22:;
    __twr_v284 = 0ULL;
    __twr_v285 = _mng_listentry274 + __twr_v284;
    __twr_v286 = *(uint64_t*)(__twr_v285);
    _mng_listentry274 = __twr_v286;
    __twr_l21:;
    if (_mng_listentry274 != _mng_head270) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    __twr_v287 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v287)(_mng_hashtable259, _mng_entry260, _mng_key261, _mng_hash264);
    return _mng_entry260;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable288, uint64_t _mng_key289, uint64_t _mng_hash290) {
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t _mng_head296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t _mng_listentry300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t _mng_entry303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    __twr_v291 = 16ULL;
    __twr_v292 = _mng_hashtable288 + __twr_v291;
    __twr_v293 = 16ULL;
    __twr_v294 = _mng_hash290 * __twr_v293;
    __twr_v295 = __twr_v292 + __twr_v294;
    _mng_head296 = __twr_v295;
    __twr_v297 = 0ULL;
    __twr_v298 = _mng_head296 + __twr_v297;
    __twr_v299 = *(uint64_t*)(__twr_v298);
    _mng_listentry300 = __twr_v299;
    if (_mng_listentry300 != _mng_head296) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l24:;
    __twr_v301 = 0ULL;
    __twr_v302 = _mng_listentry300 - __twr_v301;
    _mng_entry303 = __twr_v302;
    __twr_v304 = (uint64_t)(&TlCompareString);
    __twr_v305 = 40ULL;
    __twr_v306 = _mng_entry303 + __twr_v305;
    __twr_v307 = *(uint64_t*)(__twr_v306);
    __twr_v308 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v304)(_mng_key289, __twr_v307);
    __twr_v309 = 0ULL;
    if (__twr_v308 == __twr_v309) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l28:;
    return _mng_entry303;
    __twr_l27:;
    __twr_v310 = 0ULL;
    __twr_v311 = _mng_listentry300 + __twr_v310;
    __twr_v312 = *(uint64_t*)(__twr_v311);
    _mng_listentry300 = __twr_v312;
    __twr_l26:;
    if (_mng_listentry300 != _mng_head296) { goto __twr_l24; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v313 = 0ULL;
    return __twr_v313;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable314, uint64_t _mng_key315) {
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t _mng_hash318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    __twr_v316 = (uint64_t)(&TlHashString);
    __twr_v317 = ((uint64_t (*)(uint64_t))__twr_v316)(_mng_key315);
    _mng_hash318 = __twr_v317;
    __twr_v319 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v320 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v319)(_mng_hashtable314, _mng_key315, _mng_hash318);
    return __twr_v320;
}
void TlRemoveHashTable(uint64_t _mng_entry321) {
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t _mng_listentry324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t _mng_prev328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t _mng_next332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t _mng_listentry339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t _mng_prev343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t _mng_next347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    __twr_v322 = 0ULL;
    __twr_v323 = _mng_entry321 + __twr_v322;
    _mng_listentry324 = __twr_v323;
    __twr_v325 = 8ULL;
    __twr_v326 = _mng_listentry324 + __twr_v325;
    __twr_v327 = *(uint64_t*)(__twr_v326);
    _mng_prev328 = __twr_v327;
    __twr_v329 = 0ULL;
    __twr_v330 = _mng_listentry324 + __twr_v329;
    __twr_v331 = *(uint64_t*)(__twr_v330);
    _mng_next332 = __twr_v331;
    __twr_v333 = 0ULL;
    __twr_v334 = _mng_prev328 + __twr_v333;
    *(uint64_t*)(__twr_v334) = _mng_next332;
    __twr_v335 = 8ULL;
    __twr_v336 = _mng_next332 + __twr_v335;
    *(uint64_t*)(__twr_v336) = _mng_prev328;
    __twr_v337 = 16ULL;
    __twr_v338 = _mng_entry321 + __twr_v337;
    _mng_listentry339 = __twr_v338;
    __twr_v340 = 8ULL;
    __twr_v341 = _mng_listentry339 + __twr_v340;
    __twr_v342 = *(uint64_t*)(__twr_v341);
    _mng_prev343 = __twr_v342;
    __twr_v344 = 0ULL;
    __twr_v345 = _mng_listentry339 + __twr_v344;
    __twr_v346 = *(uint64_t*)(__twr_v345);
    _mng_next347 = __twr_v346;
    __twr_v348 = 0ULL;
    __twr_v349 = _mng_prev343 + __twr_v348;
    *(uint64_t*)(__twr_v349) = _mng_next347;
    __twr_v350 = 8ULL;
    __twr_v351 = _mng_next347 + __twr_v350;
    *(uint64_t*)(__twr_v351) = _mng_prev343;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable352, uint64_t _mng_enumfunc353) {
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_head356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t _mng_listentry360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t _mng_nextentry364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t _mng_entry367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    __twr_v354 = 0ULL;
    __twr_v355 = _mng_hashtable352 + __twr_v354;
    _mng_head356 = __twr_v355;
    __twr_v357 = 0ULL;
    __twr_v358 = _mng_head356 + __twr_v357;
    __twr_v359 = *(uint64_t*)(__twr_v358);
    _mng_listentry360 = __twr_v359;
    if (_mng_listentry360 != _mng_head356) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l29:;
    __twr_v361 = 0ULL;
    __twr_v362 = _mng_listentry360 + __twr_v361;
    __twr_v363 = *(uint64_t*)(__twr_v362);
    _mng_nextentry364 = __twr_v363;
    __twr_v365 = 16ULL;
    __twr_v366 = _mng_listentry360 - __twr_v365;
    _mng_entry367 = __twr_v366;
    __twr_v368 = (uint64_t)(&_mng_enumfunc353);
    __twr_v369 = *(uint64_t*)(__twr_v368);
    ((void (*)(uint64_t))__twr_v369)(_mng_entry367);
    _mng_listentry360 = _mng_nextentry364;
    __twr_l31:;
    if (_mng_listentry360 != _mng_head356) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
}
uint64_t TlHashString(uint64_t _mng_str370) {
    uint64_t __twr_v371;
    uint64_t _mng_hash372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    __twr_v371 = 0ULL;
    _mng_hash372 = __twr_v371;
    __twr_v373 = *(uint8_t*)(_mng_str370);
    if (__twr_v373) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l32:;
    __twr_v374 = *(uint8_t*)(_mng_str370);
    __twr_v375 = _mng_hash372 + __twr_v374;
    _mng_hash372 = __twr_v375;
    __twr_v376 = 10ULL;
    __twr_v377 = _mng_hash372 << __twr_v376;
    __twr_v378 = _mng_hash372 + __twr_v377;
    _mng_hash372 = __twr_v378;
    __twr_v379 = 6ULL;
    __twr_v380 = _mng_hash372 >> __twr_v379;
    __twr_v381 = _mng_hash372 ^ __twr_v380;
    _mng_hash372 = __twr_v381;
    __twr_v382 = 1ULL;
    __twr_v383 = _mng_str370 + __twr_v382;
    _mng_str370 = __twr_v383;
    __twr_l34:;
    __twr_v384 = *(uint8_t*)(_mng_str370);
    if (__twr_v384) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v385 = 3ULL;
    __twr_v386 = _mng_hash372 << __twr_v385;
    __twr_v387 = _mng_hash372 + __twr_v386;
    _mng_hash372 = __twr_v387;
    __twr_v388 = 11ULL;
    __twr_v389 = _mng_hash372 >> __twr_v388;
    __twr_v390 = _mng_hash372 ^ __twr_v389;
    _mng_hash372 = __twr_v390;
    __twr_v391 = 15ULL;
    __twr_v392 = _mng_hash372 << __twr_v391;
    __twr_v393 = _mng_hash372 + __twr_v392;
    _mng_hash372 = __twr_v393;
    __twr_v394 = 97ULL;
    __twr_v395 = _mng_hash372 % __twr_v394;
    _mng_hash372 = __twr_v395;
    return _mng_hash372;
}

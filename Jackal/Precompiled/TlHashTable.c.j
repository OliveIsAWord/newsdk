#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern void TlInitializeZone(uint64_t _mng_zone87, uint64_t _mng_blocksize88);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone89);
extern void TlFreeToZone(uint64_t _mng_zone90, uint64_t _mng_block91);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant92);
extern void TlPunchValue(uint64_t _mng_ptr93, uint64_t _mng_value94, uint64_t _mng_bytes95);
void TlInitializeHashTable(uint64_t _mng_hashtable96) {
    uint64_t _mng_listhead97;
    uint64_t __twr_v98;
    uint64_t __twr_v99;
    uint64_t _mng_i100;
    uint64_t __twr_v101;
    uint64_t __twr_v102;
    uint64_t __twr_v103;
    uint64_t __twr_v104;
    uint64_t __twr_v105;
    uint64_t _mng_listhead106;
    uint64_t __twr_v107;
    uint64_t __twr_v108;
    uint64_t __twr_v109;
    uint64_t __twr_v110;
    uint64_t __twr_v111;
    _mng_listhead97 = _mng_hashtable96;
    __twr_v98 = 8ULL;
    __twr_v99 = _mng_listhead97 + __twr_v98;
    *(uint64_t*)(__twr_v99) = _mng_listhead97;
    *(uint64_t*)(_mng_listhead97) = _mng_listhead97;
    _mng_i100 = 0ULL;
    __twr_l2:;
    __twr_v101 = 16ULL;
    __twr_v102 = _mng_hashtable96 + __twr_v101;
    __twr_v103 = 4ULL;
    __twr_v104 = _mng_i100 << __twr_v103;
    __twr_v105 = __twr_v102 + __twr_v104;
    _mng_listhead106 = __twr_v105;
    __twr_v107 = 8ULL;
    __twr_v108 = _mng_listhead106 + __twr_v107;
    *(uint64_t*)(__twr_v108) = _mng_listhead106;
    *(uint64_t*)(_mng_listhead106) = _mng_listhead106;
    __twr_v109 = 1ULL;
    __twr_v110 = _mng_i100 + __twr_v109;
    _mng_i100 = __twr_v110;
    __twr_l4:;
    __twr_v111 = 97ULL;
    if (_mng_i100 < __twr_v111) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable112) {
    uint64_t _mng_i113;
    uint64_t _mng_entries114;
    uint64_t __twr_v115;
    uint64_t __twr_v116;
    uint64_t __twr_v117;
    uint64_t __twr_v118;
    uint64_t __twr_v119;
    uint64_t _mng_head120;
    uint64_t __twr_v121;
    uint64_t _mng_listentry122;
    uint64_t __twr_v123;
    uint64_t __twr_v124;
    uint64_t __twr_v125;
    uint64_t __twr_v126;
    uint64_t __twr_v127;
    uint64_t __twr_v128;
    uint64_t __twr_v129;
    uint64_t __twr_v130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    _mng_i113 = 0ULL;
    __twr_l6:;
    _mng_entries114 = 0ULL;
    __twr_v115 = 16ULL;
    __twr_v116 = _mng_hashtable112 + __twr_v115;
    __twr_v117 = 4ULL;
    __twr_v118 = _mng_i113 << __twr_v117;
    __twr_v119 = __twr_v116 + __twr_v118;
    _mng_head120 = __twr_v119;
    __twr_v121 = *(uint64_t*)(_mng_head120);
    _mng_listentry122 = __twr_v121;
    if (_mng_listentry122 == _mng_head120) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v123 = 1ULL;
    __twr_v124 = _mng_entries114 + __twr_v123;
    _mng_entries114 = __twr_v124;
    __twr_v125 = *(uint64_t*)(_mng_listentry122);
    _mng_listentry122 = __twr_v125;
    __twr_l11:;
    if (_mng_listentry122 != _mng_head120) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (!(_mng_entries114)) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v126 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v126)(_mng_i113);
    __twr_v127 = (uint64_t)(&TlPrintString);
    __twr_v128 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v127)(__twr_v128);
    ((void (*)(uint64_t))__twr_v126)(_mng_entries114);
    __twr_v129 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v127)(__twr_v129);
    __twr_l12:;
    __twr_v130 = 1ULL;
    __twr_v131 = _mng_i113 + __twr_v130;
    _mng_i113 = __twr_v131;
    __twr_l8:;
    __twr_v132 = 97ULL;
    if (_mng_i113 < __twr_v132) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_l5:;
    _jkl_epilogue:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable133, uint64_t _mng_entry134, uint64_t _mng_key135, uint64_t _mng_hash136) {
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    uint64_t __twr_v139;
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    uint64_t __twr_v142;
    uint64_t __twr_v143;
    uint64_t __twr_v144;
    uint64_t __twr_v145;
    uint64_t _mng_listhead146;
    uint64_t _mng_listentry147;
    uint64_t __twr_v148;
    uint64_t _mng_first149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t _mng_listhead153;
    uint64_t __twr_v154;
    uint64_t _mng_listentry155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t _mng_last158;
    uint64_t __twr_v159;
    __twr_v137 = 32ULL;
    __twr_v138 = _mng_entry134 + __twr_v137;
    *(uint64_t*)(__twr_v138) = _mng_hashtable133;
    __twr_v139 = 40ULL;
    __twr_v140 = _mng_entry134 + __twr_v139;
    *(uint64_t*)(__twr_v140) = _mng_key135;
    __twr_v141 = 16ULL;
    __twr_v142 = _mng_hashtable133 + __twr_v141;
    __twr_v143 = 4ULL;
    __twr_v144 = _mng_hash136 << __twr_v143;
    __twr_v145 = __twr_v142 + __twr_v144;
    _mng_listhead146 = __twr_v145;
    _mng_listentry147 = _mng_entry134;
    __twr_v148 = *(uint64_t*)(_mng_listhead146);
    _mng_first149 = __twr_v148;
    *(uint64_t*)(_mng_listentry147) = _mng_first149;
    __twr_v150 = 8ULL;
    __twr_v151 = _mng_listentry147 + __twr_v150;
    *(uint64_t*)(__twr_v151) = _mng_listhead146;
    __twr_v152 = _mng_first149 + __twr_v150;
    *(uint64_t*)(__twr_v152) = _mng_entry134;
    *(uint64_t*)(_mng_listhead146) = _mng_entry134;
    _mng_listhead153 = _mng_hashtable133;
    __twr_v154 = _mng_entry134 + __twr_v141;
    _mng_listentry155 = __twr_v154;
    __twr_v156 = _mng_listhead153 + __twr_v150;
    __twr_v157 = *(uint64_t*)(__twr_v156);
    _mng_last158 = __twr_v157;
    __twr_v159 = _mng_listentry155 + __twr_v150;
    *(uint64_t*)(__twr_v159) = _mng_last158;
    *(uint64_t*)(_mng_listentry155) = _mng_listhead153;
    *(uint64_t*)(_mng_last158) = _mng_listentry155;
    *(uint64_t*)(__twr_v156) = _mng_listentry155;
    __twr_l14:;
    _jkl_epilogue:;
}
void TlInsertHashTable(uint64_t _mng_hashtable160, uint64_t _mng_entry161, uint64_t _mng_key162) {
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t _mng_hash165;
    uint64_t __twr_v166;
    __twr_v163 = (uint64_t)(&TlHashString);
    __twr_v164 = ((uint64_t (*)(uint64_t))__twr_v163)(_mng_key162);
    _mng_hash165 = __twr_v164;
    __twr_v166 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v166)(_mng_hashtable160, _mng_entry161, _mng_key162, _mng_hash165);
    __twr_l15:;
    _jkl_epilogue:;
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable167, uint64_t _mng_entrysize168, uint64_t _mng_key169, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t _mng_hash172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t _mng_head178;
    uint64_t __twr_v179;
    uint64_t _mng_listentry180;
    uint64_t _mng_entry181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t _mng_created187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t _mng_status191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    __twr_v170 = (uint64_t)(&TlHashString);
    __twr_v171 = ((uint64_t (*)(uint64_t))__twr_v170)(_mng_key169);
    _mng_hash172 = __twr_v171;
    __twr_v173 = 16ULL;
    __twr_v174 = _mng_hashtable167 + __twr_v173;
    __twr_v175 = 4ULL;
    __twr_v176 = _mng_hash172 << __twr_v175;
    __twr_v177 = __twr_v174 + __twr_v176;
    _mng_head178 = __twr_v177;
    __twr_v179 = *(uint64_t*)(_mng_head178);
    _mng_listentry180 = __twr_v179;
    if (_mng_listentry180 == _mng_head178) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    _mng_entry181 = _mng_listentry180;
    __twr_v182 = (uint64_t)(&TlCompareString);
    __twr_v183 = 40ULL;
    __twr_v184 = _mng_entry181 + __twr_v183;
    __twr_v185 = *(uint64_t*)(__twr_v184);
    __twr_v186 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v182)(_mng_key169, __twr_v185);
    if (__twr_v186) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    _mng_created187 = 0ULL;
    _jkl_retv = _mng_entry181;
    goto _jkl_epilogue;
    __twr_l20:;
    __twr_v188 = *(uint64_t*)(_mng_listentry180);
    _mng_listentry180 = __twr_v188;
    __twr_l19:;
    if (_mng_listentry180 != _mng_head178) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v189 = (uint64_t)(&TlBumpAlloc);
    __twr_v190 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v189)(_mng_entrysize168, (uint64_t)(&_mng_entry181));
    _mng_status191 = __twr_v190;
    if (!(_mng_status191)) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v192 = (uint64_t)(&TlInternalError);
    __twr_v193 = (uint64_t)(&"Failed to allocate entry");
    __twr_v194 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v192)(__twr_v193, __twr_v194, __twr_v194, __twr_v194);
    __twr_l22:;
    __twr_v195 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v195)(_mng_hashtable167, _mng_entry181, _mng_key169, _mng_hash172);
    _mng_created187 = 1ULL;
    _jkl_retv = _mng_entry181;
    goto _jkl_epilogue;
    __twr_l16:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created187;
    return _jkl_retv;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable196, uint64_t _mng_entry197, uint64_t _mng_key198) {
    uint64_t _jkl_retv;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t _mng_hash201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t _mng_head207;
    uint64_t __twr_v208;
    uint64_t _mng_listentry209;
    uint64_t _mng_oldentry210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    __twr_v199 = (uint64_t)(&TlHashString);
    __twr_v200 = ((uint64_t (*)(uint64_t))__twr_v199)(_mng_key198);
    _mng_hash201 = __twr_v200;
    __twr_v202 = 16ULL;
    __twr_v203 = _mng_hashtable196 + __twr_v202;
    __twr_v204 = 4ULL;
    __twr_v205 = _mng_hash201 << __twr_v204;
    __twr_v206 = __twr_v203 + __twr_v205;
    _mng_head207 = __twr_v206;
    __twr_v208 = *(uint64_t*)(_mng_head207);
    _mng_listentry209 = __twr_v208;
    if (_mng_listentry209 == _mng_head207) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    _mng_oldentry210 = _mng_listentry209;
    __twr_v211 = (uint64_t)(&TlCompareString);
    __twr_v212 = 40ULL;
    __twr_v213 = _mng_oldentry210 + __twr_v212;
    __twr_v214 = *(uint64_t*)(__twr_v213);
    __twr_v215 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v211)(_mng_key198, __twr_v214);
    if (__twr_v215) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    _jkl_retv = _mng_oldentry210;
    goto _jkl_epilogue;
    __twr_l28:;
    __twr_v216 = *(uint64_t*)(_mng_listentry209);
    _mng_listentry209 = __twr_v216;
    __twr_l27:;
    if (_mng_listentry209 != _mng_head207) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v217 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v217)(_mng_hashtable196, _mng_entry197, _mng_key198, _mng_hash201);
    _jkl_retv = _mng_entry197;
    goto _jkl_epilogue;
    __twr_l24:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable218, uint64_t _mng_key219, uint64_t _mng_hash220) {
    uint64_t _jkl_retv;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t _mng_head226;
    uint64_t __twr_v227;
    uint64_t _mng_listentry228;
    uint64_t _mng_entry229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    __twr_v221 = 16ULL;
    __twr_v222 = _mng_hashtable218 + __twr_v221;
    __twr_v223 = 4ULL;
    __twr_v224 = _mng_hash220 << __twr_v223;
    __twr_v225 = __twr_v222 + __twr_v224;
    _mng_head226 = __twr_v225;
    __twr_v227 = *(uint64_t*)(_mng_head226);
    _mng_listentry228 = __twr_v227;
    if (_mng_listentry228 == _mng_head226) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    _mng_entry229 = _mng_listentry228;
    __twr_v230 = (uint64_t)(&TlCompareString);
    __twr_v231 = 40ULL;
    __twr_v232 = _mng_entry229 + __twr_v231;
    __twr_v233 = *(uint64_t*)(__twr_v232);
    __twr_v234 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v230)(_mng_key219, __twr_v233);
    if (__twr_v234) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_entry229;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v235 = *(uint64_t*)(_mng_listentry228);
    _mng_listentry228 = __twr_v235;
    __twr_l33:;
    if (_mng_listentry228 != _mng_head226) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v236 = 0ULL;
    _jkl_retv = __twr_v236;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable237, uint64_t _mng_key238) {
    uint64_t _jkl_retv;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t _mng_hash241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    __twr_v239 = (uint64_t)(&TlHashString);
    __twr_v240 = ((uint64_t (*)(uint64_t))__twr_v239)(_mng_key238);
    _mng_hash241 = __twr_v240;
    __twr_v242 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v243 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v242)(_mng_hashtable237, _mng_key238, _mng_hash241);
    _jkl_retv = __twr_v243;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void TlRemoveHashTable(uint64_t _mng_entry244) {
    uint64_t _mng_listentry245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t _mng_prev249;
    uint64_t __twr_v250;
    uint64_t _mng_next251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t _mng_listentry255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t _mng_prev258;
    uint64_t __twr_v259;
    uint64_t _mng_next260;
    uint64_t __twr_v261;
    _mng_listentry245 = _mng_entry244;
    __twr_v246 = 8ULL;
    __twr_v247 = _mng_listentry245 + __twr_v246;
    __twr_v248 = *(uint64_t*)(__twr_v247);
    _mng_prev249 = __twr_v248;
    __twr_v250 = *(uint64_t*)(_mng_listentry245);
    _mng_next251 = __twr_v250;
    *(uint64_t*)(_mng_prev249) = _mng_next251;
    __twr_v252 = _mng_next251 + __twr_v246;
    *(uint64_t*)(__twr_v252) = _mng_prev249;
    __twr_v253 = 16ULL;
    __twr_v254 = _mng_entry244 + __twr_v253;
    _mng_listentry255 = __twr_v254;
    __twr_v256 = _mng_listentry255 + __twr_v246;
    __twr_v257 = *(uint64_t*)(__twr_v256);
    _mng_prev258 = __twr_v257;
    __twr_v259 = *(uint64_t*)(_mng_listentry255);
    _mng_next260 = __twr_v259;
    *(uint64_t*)(_mng_prev258) = _mng_next260;
    __twr_v261 = _mng_next260 + __twr_v246;
    *(uint64_t*)(__twr_v261) = _mng_prev258;
    __twr_l37:;
    _jkl_epilogue:;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable262, uint64_t _mng_enumfunc263) {
    uint64_t _mng_head264;
    uint64_t __twr_v265;
    uint64_t _mng_listentry266;
    uint64_t __twr_v267;
    uint64_t _mng_nextentry268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t _mng_entry271;
    _mng_head264 = _mng_hashtable262;
    __twr_v265 = *(uint64_t*)(_mng_head264);
    _mng_listentry266 = __twr_v265;
    if (_mng_listentry266 == _mng_head264) { goto __twr_l40; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v267 = *(uint64_t*)(_mng_listentry266);
    _mng_nextentry268 = __twr_v267;
    __twr_v269 = 16ULL;
    __twr_v270 = _mng_listentry266 - __twr_v269;
    _mng_entry271 = __twr_v270;
    ((void (*)(uint64_t))_mng_enumfunc263)(_mng_entry271);
    _mng_listentry266 = _mng_nextentry268;
    __twr_l41:;
    if (_mng_listentry266 != _mng_head264) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t TlHashString(uint64_t _mng_str272) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    _mng_hash273 = 0ULL;
    __twr_v274 = *(uint8_t*)(_mng_str272);
    if (!(__twr_v274)) { goto __twr_l44; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v275 = *(uint8_t*)(_mng_str272);
    __twr_v276 = _mng_hash273 + __twr_v275;
    _mng_hash273 = __twr_v276;
    __twr_v277 = 10ULL;
    __twr_v278 = _mng_hash273 << __twr_v277;
    __twr_v279 = _mng_hash273 + __twr_v278;
    _mng_hash273 = __twr_v279;
    __twr_v280 = 6ULL;
    __twr_v281 = _mng_hash273 >> __twr_v280;
    __twr_v282 = _mng_hash273 ^ __twr_v281;
    _mng_hash273 = __twr_v282;
    __twr_v283 = 1ULL;
    __twr_v284 = _mng_str272 + __twr_v283;
    _mng_str272 = __twr_v284;
    __twr_l45:;
    __twr_v285 = *(uint8_t*)(_mng_str272);
    if (__twr_v285) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v286 = 3ULL;
    __twr_v287 = _mng_hash273 << __twr_v286;
    __twr_v288 = _mng_hash273 + __twr_v287;
    _mng_hash273 = __twr_v288;
    __twr_v289 = 11ULL;
    __twr_v290 = _mng_hash273 >> __twr_v289;
    __twr_v291 = _mng_hash273 ^ __twr_v290;
    _mng_hash273 = __twr_v291;
    __twr_v292 = 15ULL;
    __twr_v293 = _mng_hash273 << __twr_v292;
    __twr_v294 = _mng_hash273 + __twr_v293;
    _mng_hash273 = __twr_v294;
    __twr_v295 = 97ULL;
    __twr_v296 = _mng_hash273 % __twr_v295;
    _mng_hash273 = __twr_v296;
    _jkl_retv = _mng_hash273;
    goto _jkl_epilogue;
    __twr_l42:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlIterateDirectory(uint64_t _mng_path88, uint64_t _mng_callback89, uint64_t _mng_context90);
extern uint64_t TlGetPathExtension(uint64_t _mng_path91);
extern uint64_t TlStatFile(uint64_t _mng_path92, uint64_t _mng_statrecord93);
extern void TlInitializeZone(uint64_t _mng_zone94, uint64_t _mng_blocksize95);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone96);
extern void TlFreeToZone(uint64_t _mng_zone97, uint64_t _mng_block98);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant99);
extern void TlPunchValue(uint64_t _mng_ptr100, uint64_t _mng_value101, uint64_t _mng_bytes102);
extern void JklCompileProgram(uint64_t _mng_argc103, uint64_t _mng_argv104);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg105);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename106, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock107, uint64_t _mng_filepath108);
extern uint64_t LexLookupSection(uint64_t _mng_name109);
extern void LexPushSection(uint64_t _mng_section110);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope111);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg112);
extern void LexExpandMacro(uint64_t _mng_macro113, uint64_t _mng_token114);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream115, uint64_t _mng_macro116);
extern void LexUninitializeStream(uint64_t _mng_stream117);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream118);
extern void LexPushStream(uint64_t _mng_stream119);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream120, uint64_t _mng_fileblock121, uint64_t _mng_handle122);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock123, uint64_t _mng_handle124);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope125);
extern uint64_t LexResetScope(uint64_t _mng_scope126);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope127);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest128, uint64_t _mng_src129);
extern void LexGetToken(uint64_t _mng_token130);
extern void LexPutbackToken(uint64_t _mng_token131);
extern uint64_t LexMatchToken(uint64_t _mng_token132, uint64_t _mng_type133, uint64_t _mng_subtype134);
extern void LexStreamError(uint64_t _mng_str135, uint64_t _mng_err1136, uint64_t _mng_err2137, uint64_t _mng_err3138);
extern void LexTokenError(uint64_t _mng_token139, uint64_t _mng_str140, uint64_t _mng_err1141, uint64_t _mng_err2142, uint64_t _mng_err3143);
extern uint64_t LexCrunchNumber(uint64_t _mng_token144, uint64_t _mng_buffer145);
uint64_t LexStreamZone[2];
void LexInitializeStreamZone() {
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    __twr_v146 = (uint64_t)(&TlInitializeZone);
    __twr_v147 = (uint64_t)(&LexStreamZone);
    __twr_v148 = 93ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v146)(__twr_v147, __twr_v148);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexAllocateStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    __twr_v149 = (uint64_t)(&TlAllocateFromZone);
    __twr_v150 = (uint64_t)(&LexStreamZone);
    __twr_v151 = ((uint64_t (*)(uint64_t))__twr_v149)(__twr_v150);
    _jkl_retv = __twr_v151;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeStream(uint64_t _mng_stream152, uint64_t _mng_macro153) {
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    __twr_v154 = 0ULL;
    *(uint64_t*)(_mng_stream152) = __twr_v154;
    __twr_v155 = 8ULL;
    __twr_v156 = _mng_stream152 + __twr_v155;
    *(uint64_t*)(__twr_v156) = __twr_v154;
    __twr_v157 = 16ULL;
    __twr_v158 = _mng_stream152 + __twr_v157;
    *(uint64_t*)(__twr_v158) = __twr_v154;
    __twr_v159 = 24ULL;
    __twr_v160 = _mng_stream152 + __twr_v159;
    *(uint64_t*)(__twr_v160) = __twr_v154;
    __twr_v161 = 32ULL;
    __twr_v162 = _mng_stream152 + __twr_v161;
    *(uint32_t*)(__twr_v162) = __twr_v154;
    __twr_v163 = 36ULL;
    __twr_v164 = _mng_stream152 + __twr_v163;
    *(uint32_t*)(__twr_v164) = __twr_v154;
    __twr_v165 = 1ULL;
    __twr_v166 = 44ULL;
    __twr_v167 = _mng_stream152 + __twr_v166;
    *(uint32_t*)(__twr_v167) = __twr_v165;
    __twr_v168 = 48ULL;
    __twr_v169 = _mng_stream152 + __twr_v168;
    *(uint32_t*)(__twr_v169) = __twr_v165;
    __twr_v170 = 40ULL;
    __twr_v171 = _mng_stream152 + __twr_v170;
    *(uint32_t*)(__twr_v171) = __twr_v154;
    __twr_v172 = 56ULL;
    __twr_v173 = _mng_stream152 + __twr_v172;
    *(uint64_t*)(__twr_v173) = _mng_macro153;
    __twr_v174 = 64ULL;
    __twr_v175 = _mng_stream152 + __twr_v174;
    *(uint8_t*)(__twr_v175) = __twr_v154;
    __twr_v176 = 72ULL;
    __twr_v177 = _mng_stream152 + __twr_v176;
    *(uint64_t*)(__twr_v177) = __twr_v154;
    __twr_v178 = 80ULL;
    __twr_v179 = _mng_stream152 + __twr_v178;
    *(uint64_t*)(__twr_v179) = __twr_v154;
    __twr_v180 = 88ULL;
    __twr_v181 = _mng_stream152 + __twr_v180;
    *(uint8_t*)(__twr_v181) = __twr_v154;
    __twr_v182 = 89ULL;
    __twr_v183 = _mng_stream152 + __twr_v182;
    *(uint8_t*)(__twr_v183) = __twr_v154;
    __twr_v184 = 90ULL;
    __twr_v185 = _mng_stream152 + __twr_v184;
    *(uint8_t*)(__twr_v185) = __twr_v154;
    __twr_v186 = 91ULL;
    __twr_v187 = _mng_stream152 + __twr_v186;
    *(uint8_t*)(__twr_v187) = __twr_v154;
    __twr_v188 = 92ULL;
    __twr_v189 = _mng_stream152 + __twr_v188;
    *(uint8_t*)(__twr_v189) = __twr_v154;
    __twr_l3:;
    _jkl_epilogue:;
}
void LexUninitializeStream(uint64_t _mng_stream190) {
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    __twr_v191 = 56ULL;
    __twr_v192 = _mng_stream190 + __twr_v191;
    __twr_v193 = *(uint64_t*)(__twr_v192);
    if (__twr_v193) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v194 = (uint64_t)(&TlClose);
    __twr_v195 = 16ULL;
    __twr_v196 = _mng_stream190 + __twr_v195;
    __twr_v197 = *(uint64_t*)(__twr_v196);
    ((void (*)(uint64_t))__twr_v194)(__twr_v197);
    __twr_v198 = (uint64_t)(&TlFree);
    __twr_v199 = 24ULL;
    __twr_v200 = _mng_stream190 + __twr_v199;
    __twr_v201 = *(uint64_t*)(__twr_v200);
    ((void (*)(uint64_t))__twr_v198)(__twr_v201);
    __twr_l5:;
    __twr_l4:;
    _jkl_epilogue:;
}
void LexFreeStream(uint64_t _mng_stream202) {
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    __twr_v203 = (uint64_t)(&LexUninitializeStream);
    ((void (*)(uint64_t))__twr_v203)(_mng_stream202);
    __twr_v204 = (uint64_t)(&TlFreeToZone);
    __twr_v205 = (uint64_t)(&LexStreamZone);
    ((void (*)(uint64_t, uint64_t))__twr_v204)(__twr_v205, _mng_stream202);
    __twr_l7:;
    _jkl_epilogue:;
}
void LexPushStream(uint64_t _mng_stream206) {
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    __twr_v207 = (uint64_t)(&LexCurrentStream);
    __twr_v208 = *(uint64_t*)(__twr_v207);
    *(uint64_t*)(_mng_stream206) = __twr_v208;
    *(uint64_t*)(__twr_v207) = _mng_stream206;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t LexPopStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t _mng_oldstream211;
    uint64_t __twr_v212;
    __twr_v209 = (uint64_t)(&LexCurrentStream);
    __twr_v210 = *(uint64_t*)(__twr_v209);
    _mng_oldstream211 = __twr_v210;
    __twr_v212 = *(uint64_t*)(_mng_oldstream211);
    *(uint64_t*)(__twr_v209) = __twr_v212;
    _jkl_retv = _mng_oldstream211;
    goto _jkl_epilogue;
    __twr_l9:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeFileStream(uint64_t _mng_stream213, uint64_t _mng_fileblock214, uint64_t _mng_handle215) {
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t _mng_buffer221;
    uint64_t _mng_status222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    __twr_v216 = (uint64_t)(&LexInitializeStream);
    __twr_v217 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v216)(_mng_stream213, __twr_v217);
    __twr_v218 = (uint64_t)(&TlAlloc);
    __twr_v219 = 16384ULL;
    __twr_v220 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v218)(__twr_v219, (uint64_t)(&_mng_buffer221));
    _mng_status222 = __twr_v220;
    if (!(_mng_status222)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v223 = (uint64_t)(&TlInternalError);
    __twr_v224 = (uint64_t)(&"Failed to allocate lex buffer");
    __twr_v225 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v223)(__twr_v224, __twr_v225, __twr_v225, __twr_v225);
    __twr_l11:;
    __twr_v226 = 8ULL;
    __twr_v227 = _mng_stream213 + __twr_v226;
    *(uint64_t*)(__twr_v227) = _mng_fileblock214;
    __twr_v228 = 16ULL;
    __twr_v229 = _mng_stream213 + __twr_v228;
    *(uint64_t*)(__twr_v229) = _mng_handle215;
    __twr_v230 = 16384ULL;
    __twr_v231 = 32ULL;
    __twr_v232 = _mng_stream213 + __twr_v231;
    *(uint32_t*)(__twr_v232) = __twr_v230;
    __twr_v233 = 24ULL;
    __twr_v234 = _mng_stream213 + __twr_v233;
    *(uint64_t*)(__twr_v234) = _mng_buffer221;
    __twr_l10:;
    _jkl_epilogue:;
}
uint64_t LexCreateFileStream(uint64_t _mng_fileblock235, uint64_t _mng_handle236) {
    uint64_t _jkl_retv;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t _mng_stream239;
    uint64_t __twr_v240;
    __twr_v237 = (uint64_t)(&LexAllocateStream);
    __twr_v238 = ((uint64_t (*)())__twr_v237)();
    _mng_stream239 = __twr_v238;
    __twr_v240 = (uint64_t)(&LexInitializeFileStream);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v240)(_mng_stream239, _mng_fileblock235, _mng_handle236);
    _jkl_retv = _mng_stream239;
    goto _jkl_epilogue;
    __twr_l13:;
    _jkl_epilogue:;
    return _jkl_retv;
}
extern uint64_t PrsLeaveMacro();
uint64_t LexStreamNextCharacter() {
    uint64_t _jkl_retv;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t _mng_stream245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t _mng_byte254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t _mng_macro298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    __twr_v241 = (uint64_t)(&LexCurrentStream);
    __twr_v242 = *(uint64_t*)(__twr_v241);
    if (!(__twr_v242)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v243 = (uint64_t)(&LexCurrentStream);
    __twr_v244 = *(uint64_t*)(__twr_v243);
    _mng_stream245 = __twr_v244;
    __twr_v246 = 92ULL;
    __twr_v247 = _mng_stream245 + __twr_v246;
    __twr_v248 = *(uint8_t*)(__twr_v247);
    if (!(__twr_v248)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v249 = (uint64_t)(&LexCurrentStream);
    __twr_v250 = *(uint64_t*)(__twr_v249);
    __twr_v251 = 92ULL;
    __twr_v252 = __twr_v250 + __twr_v251;
    __twr_v253 = *(uint8_t*)(__twr_v252);
    _mng_byte254 = __twr_v253;
    __twr_v255 = 0ULL;
    *(uint8_t*)(__twr_v252) = __twr_v255;
    _jkl_retv = _mng_byte254;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l20:;
    __twr_v256 = 91ULL;
    __twr_v257 = _mng_stream245 + __twr_v256;
    __twr_v258 = *(uint8_t*)(__twr_v257);
    if (!(__twr_v258)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v259 = (uint64_t)(&LexCurrentStream);
    __twr_v260 = *(uint64_t*)(__twr_v259);
    __twr_v261 = 91ULL;
    __twr_v262 = __twr_v260 + __twr_v261;
    __twr_v263 = *(uint8_t*)(__twr_v262);
    _mng_byte254 = __twr_v263;
    __twr_v264 = 0ULL;
    *(uint8_t*)(__twr_v262) = __twr_v264;
    _jkl_retv = _mng_byte254;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l22:;
    __twr_v265 = 40ULL;
    __twr_v266 = _mng_stream245 + __twr_v265;
    __twr_v267 = *(uint32_t*)(__twr_v266);
    __twr_v268 = 36ULL;
    __twr_v269 = _mng_stream245 + __twr_v268;
    __twr_v270 = *(uint32_t*)(__twr_v269);
    if (__twr_v267 >= __twr_v270) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v271 = 24ULL;
    __twr_v272 = _mng_stream245 + __twr_v271;
    __twr_v273 = *(uint64_t*)(__twr_v272);
    __twr_v274 = 40ULL;
    __twr_v275 = _mng_stream245 + __twr_v274;
    __twr_v276 = *(uint32_t*)(__twr_v275);
    __twr_v277 = 1ULL;
    __twr_v278 = __twr_v273 + __twr_v276;
    __twr_v279 = *(uint8_t*)(__twr_v278);
    _mng_byte254 = __twr_v279;
    __twr_v280 = __twr_v276 + __twr_v277;
    *(uint32_t*)(__twr_v275) = __twr_v280;
    goto __twr_l18;
    __twr_l24:;
    __twr_v281 = 56ULL;
    __twr_v282 = _mng_stream245 + __twr_v281;
    __twr_v283 = *(uint64_t*)(__twr_v282);
    if (!(__twr_v283)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v284 = 64ULL;
    __twr_v285 = _mng_stream245 + __twr_v284;
    __twr_v286 = *(uint8_t*)(__twr_v285);
    if (__twr_v286) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v287 = 1ULL;
    __twr_v288 = 64ULL;
    __twr_v289 = _mng_stream245 + __twr_v288;
    *(uint8_t*)(__twr_v289) = __twr_v287;
    __twr_v290 = 10ULL;
    _jkl_retv = __twr_v290;
    goto _jkl_epilogue;
    __twr_l27:;
    __twr_v291 = 1ULL;
    __twr_v292 = (uint64_t)(&LexMacroDepth);
    __twr_v293 = *(uint32_t*)(__twr_v292);
    __twr_v294 = __twr_v293 - __twr_v291;
    *(uint32_t*)(__twr_v292) = __twr_v294;
    __twr_v295 = 56ULL;
    __twr_v296 = _mng_stream245 + __twr_v295;
    __twr_v297 = *(uint64_t*)(__twr_v296);
    _mng_macro298 = __twr_v297;
    __twr_v299 = 257ULL;
    __twr_v300 = _mng_macro298 + __twr_v299;
    __twr_v301 = *(uint8_t*)(__twr_v300);
    if (__twr_v301) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v302 = 72ULL;
    __twr_v303 = _mng_stream245 + __twr_v302;
    __twr_v304 = *(uint64_t*)(__twr_v303);
    __twr_v305 = (uint64_t)(&LexRootScope);
    __twr_v306 = *(uint64_t*)(__twr_v305);
    if (__twr_v304 == __twr_v306) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v307 = (uint64_t)(&LexCurrentScope);
    __twr_v308 = *(uint64_t*)(__twr_v307);
    __twr_v309 = *(uint64_t*)(__twr_v308);
    __twr_v310 = *(uint64_t*)(__twr_v309);
    if (!(__twr_v310)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v311 = (uint64_t)(&LexStreamError);
    __twr_v312 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v313 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v311)(__twr_v312, __twr_v313, __twr_v313, __twr_v313);
    __twr_l34:;
    __twr_v314 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v315 = (uint64_t)(&LexCurrentScope);
    __twr_v316 = *(uint64_t*)(__twr_v315);
    __twr_v317 = ((uint64_t (*)(uint64_t))__twr_v314)(__twr_v316);
    goto __twr_l31;
    __twr_l33:;
    __twr_v318 = (uint64_t)(&LexCurrentScope);
    __twr_v319 = *(uint64_t*)(__twr_v318);
    __twr_v320 = (uint64_t)(&LexRootScope);
    __twr_v321 = *(uint64_t*)(__twr_v320);
    if (__twr_v319 == __twr_v321) { goto __twr_l31; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v322 = (uint64_t)(&LexStreamError);
    __twr_v323 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v324 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v322)(__twr_v323, __twr_v324, __twr_v324, __twr_v324);
    __twr_l31:;
    __twr_v325 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v326 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v327 = *(uint64_t*)(__twr_v326);
    __twr_v328 = ((uint64_t (*)(uint64_t))__twr_v325)(__twr_v327);
    __twr_l29:;
    __twr_v329 = (uint64_t)(&PrsLeaveMacro);
    __twr_v330 = ((uint64_t (*)())__twr_v329)();
    if (__twr_v330) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v331 = (uint64_t)(&LexStreamError);
    __twr_v332 = (uint64_t)(&"Macro terminated during nested block");
    __twr_v333 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v331)(__twr_v332, __twr_v333, __twr_v333, __twr_v333);
    __twr_l37:;
    __twr_v334 = 72ULL;
    __twr_v335 = _mng_stream245 + __twr_v334;
    __twr_v336 = *(uint64_t*)(__twr_v335);
    __twr_v337 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v337) = __twr_v336;
    __twr_v338 = 80ULL;
    __twr_v339 = _mng_stream245 + __twr_v338;
    __twr_v340 = *(uint64_t*)(__twr_v339);
    __twr_v341 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v341) = __twr_v340;
    __twr_v342 = (uint64_t)(&LexFreeStream);
    __twr_v343 = (uint64_t)(&LexPopStream);
    __twr_v344 = ((uint64_t (*)())__twr_v343)();
    ((void (*)(uint64_t))__twr_v342)(__twr_v344);
    goto __twr_l17;
    goto __twr_l18;
    __twr_l26:;
    __twr_v345 = (uint64_t)(&TlReadFile);
    __twr_v346 = 16ULL;
    __twr_v347 = _mng_stream245 + __twr_v346;
    __twr_v348 = *(uint64_t*)(__twr_v347);
    __twr_v349 = 32ULL;
    __twr_v350 = _mng_stream245 + __twr_v349;
    __twr_v351 = *(uint32_t*)(__twr_v350);
    __twr_v352 = 24ULL;
    __twr_v353 = _mng_stream245 + __twr_v352;
    __twr_v354 = *(uint64_t*)(__twr_v353);
    __twr_v355 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v345)(__twr_v348, __twr_v351, __twr_v354);
    __twr_v356 = 36ULL;
    __twr_v357 = _mng_stream245 + __twr_v356;
    *(uint32_t*)(__twr_v357) = __twr_v355;
    __twr_v358 = *(uint32_t*)(__twr_v357);
    if (__twr_v358) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v359 = 64ULL;
    __twr_v360 = _mng_stream245 + __twr_v359;
    __twr_v361 = *(uint8_t*)(__twr_v360);
    if (__twr_v361) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v362 = 1ULL;
    __twr_v363 = 64ULL;
    __twr_v364 = _mng_stream245 + __twr_v363;
    *(uint8_t*)(__twr_v364) = __twr_v362;
    __twr_v365 = 10ULL;
    _jkl_retv = __twr_v365;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v366 = (uint64_t)(&LexFreeStream);
    __twr_v367 = (uint64_t)(&LexPopStream);
    __twr_v368 = ((uint64_t (*)())__twr_v367)();
    ((void (*)(uint64_t))__twr_v366)(__twr_v368);
    goto __twr_l17;
    __twr_l39:;
    __twr_v369 = 1ULL;
    __twr_v370 = 40ULL;
    __twr_v371 = _mng_stream245 + __twr_v370;
    *(uint32_t*)(__twr_v371) = __twr_v369;
    __twr_v372 = 24ULL;
    __twr_v373 = _mng_stream245 + __twr_v372;
    __twr_v374 = *(uint64_t*)(__twr_v373);
    __twr_v375 = *(uint8_t*)(__twr_v374);
    _mng_byte254 = __twr_v375;
    __twr_l18:;
    if (_mng_byte254) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v376 = (uint64_t)(&LexStreamError);
    __twr_v377 = (uint64_t)(&"An invalid byte was found in the source file.");
    __twr_v378 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v376)(__twr_v377, _mng_byte254, __twr_v378, __twr_v378);
    goto __twr_l43;
    __twr_l45:;
    __twr_v379 = 13ULL;
    if (_mng_byte254 != __twr_v379) { goto __twr_l47; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v380 = (uint64_t)(&LexStreamError);
    __twr_v381 = (uint64_t)(&"DOS line endings were detected in the source file.");
    __twr_v382 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v380)(__twr_v381, __twr_v382, __twr_v382, __twr_v382);
    goto __twr_l43;
    __twr_l47:;
    __twr_v383 = 10ULL;
    if (_mng_byte254 != __twr_v383) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v384 = 1ULL;
    __twr_v385 = 44ULL;
    __twr_v386 = _mng_stream245 + __twr_v385;
    __twr_v387 = *(uint32_t*)(__twr_v386);
    __twr_v388 = __twr_v387 + __twr_v384;
    *(uint32_t*)(__twr_v386) = __twr_v388;
    __twr_v389 = 48ULL;
    __twr_v390 = _mng_stream245 + __twr_v389;
    *(uint32_t*)(__twr_v390) = __twr_v384;
    __twr_v391 = 64ULL;
    __twr_v392 = _mng_stream245 + __twr_v391;
    *(uint8_t*)(__twr_v392) = __twr_v384;
    goto __twr_l43;
    __twr_l49:;
    __twr_v393 = 1ULL;
    __twr_v394 = 48ULL;
    __twr_v395 = _mng_stream245 + __twr_v394;
    __twr_v396 = *(uint32_t*)(__twr_v395);
    __twr_v397 = __twr_v396 + __twr_v393;
    *(uint32_t*)(__twr_v395) = __twr_v397;
    __twr_v398 = 0ULL;
    __twr_v399 = 64ULL;
    __twr_v400 = _mng_stream245 + __twr_v399;
    *(uint8_t*)(__twr_v400) = __twr_v398;
    __twr_l43:;
    _jkl_retv = _mng_byte254;
    goto _jkl_epilogue;
    __twr_l17:;
    __twr_v401 = (uint64_t)(&LexCurrentStream);
    __twr_v402 = *(uint64_t*)(__twr_v401);
    if (__twr_v402) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v403 = 0ULL;
    _jkl_retv = __twr_v403;
    goto _jkl_epilogue;
    __twr_l14:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern void TlInitializeZone(uint64_t _mng_zone96, uint64_t _mng_blocksize97);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone98);
extern void TlFreeToZone(uint64_t _mng_zone99, uint64_t _mng_block100);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant101);
extern void TlPunchValue(uint64_t _mng_ptr102, uint64_t _mng_value103, uint64_t _mng_bytes104);
extern void JklCompileProgram(uint64_t _mng_argc105, uint64_t _mng_argv106);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg107);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename108, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock109, uint64_t _mng_filepath110);
extern uint64_t LexLookupSection(uint64_t _mng_name111);
extern void LexPushSection(uint64_t _mng_section112);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope113);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg114);
extern void LexExpandMacro(uint64_t _mng_macro115, uint64_t _mng_token116);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream117, uint64_t _mng_macro118);
extern void LexUninitializeStream(uint64_t _mng_stream119);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream120);
extern void LexPushStream(uint64_t _mng_stream121);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream122, uint64_t _mng_fileblock123, uint64_t _mng_handle124);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock125, uint64_t _mng_handle126);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope127);
extern uint64_t LexResetScope(uint64_t _mng_scope128);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope129);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest130, uint64_t _mng_src131);
extern void LexGetToken(uint64_t _mng_token132);
extern void LexPutbackToken(uint64_t _mng_token133);
extern uint64_t LexMatchToken(uint64_t _mng_token134, uint64_t _mng_type135, uint64_t _mng_subtype136);
extern void LexStreamError(uint64_t _mng_str137, uint64_t _mng_err1138, uint64_t _mng_err2139, uint64_t _mng_err3140);
extern void LexTokenError(uint64_t _mng_token141, uint64_t _mng_str142, uint64_t _mng_err1143, uint64_t _mng_err2144, uint64_t _mng_err3145);
extern uint64_t LexCrunchNumber(uint64_t _mng_token146, uint64_t _mng_buffer147);
uint64_t LexStreamZone[2];
void LexInitializeStreamZone() {
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    __twr_v148 = (uint64_t)(&TlInitializeZone);
    __twr_v149 = (uint64_t)(&LexStreamZone);
    __twr_v150 = 93ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v148)(__twr_v149, __twr_v150);
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t LexAllocateStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    __twr_v151 = (uint64_t)(&TlAllocateFromZone);
    __twr_v152 = (uint64_t)(&LexStreamZone);
    __twr_v153 = ((uint64_t (*)(uint64_t))__twr_v151)(__twr_v152);
    _jkl_retv = __twr_v153;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeStream(uint64_t _mng_stream154, uint64_t _mng_macro155) {
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    __twr_v156 = 0ULL;
    *(uint64_t*)(_mng_stream154) = __twr_v156;
    __twr_v157 = 8ULL;
    __twr_v158 = _mng_stream154 + __twr_v157;
    *(uint64_t*)(__twr_v158) = __twr_v156;
    __twr_v159 = 16ULL;
    __twr_v160 = _mng_stream154 + __twr_v159;
    *(uint64_t*)(__twr_v160) = __twr_v156;
    __twr_v161 = 24ULL;
    __twr_v162 = _mng_stream154 + __twr_v161;
    *(uint64_t*)(__twr_v162) = __twr_v156;
    __twr_v163 = 32ULL;
    __twr_v164 = _mng_stream154 + __twr_v163;
    *(uint32_t*)(__twr_v164) = __twr_v156;
    __twr_v165 = 36ULL;
    __twr_v166 = _mng_stream154 + __twr_v165;
    *(uint32_t*)(__twr_v166) = __twr_v156;
    __twr_v167 = 1ULL;
    __twr_v168 = 44ULL;
    __twr_v169 = _mng_stream154 + __twr_v168;
    *(uint32_t*)(__twr_v169) = __twr_v167;
    __twr_v170 = 48ULL;
    __twr_v171 = _mng_stream154 + __twr_v170;
    *(uint32_t*)(__twr_v171) = __twr_v167;
    __twr_v172 = 40ULL;
    __twr_v173 = _mng_stream154 + __twr_v172;
    *(uint32_t*)(__twr_v173) = __twr_v156;
    __twr_v174 = 56ULL;
    __twr_v175 = _mng_stream154 + __twr_v174;
    *(uint64_t*)(__twr_v175) = _mng_macro155;
    __twr_v176 = 64ULL;
    __twr_v177 = _mng_stream154 + __twr_v176;
    *(uint8_t*)(__twr_v177) = __twr_v156;
    __twr_v178 = 72ULL;
    __twr_v179 = _mng_stream154 + __twr_v178;
    *(uint64_t*)(__twr_v179) = __twr_v156;
    __twr_v180 = 80ULL;
    __twr_v181 = _mng_stream154 + __twr_v180;
    *(uint64_t*)(__twr_v181) = __twr_v156;
    __twr_v182 = 88ULL;
    __twr_v183 = _mng_stream154 + __twr_v182;
    *(uint8_t*)(__twr_v183) = __twr_v156;
    __twr_v184 = 89ULL;
    __twr_v185 = _mng_stream154 + __twr_v184;
    *(uint8_t*)(__twr_v185) = __twr_v156;
    __twr_v186 = 90ULL;
    __twr_v187 = _mng_stream154 + __twr_v186;
    *(uint8_t*)(__twr_v187) = __twr_v156;
    __twr_v188 = 91ULL;
    __twr_v189 = _mng_stream154 + __twr_v188;
    *(uint8_t*)(__twr_v189) = __twr_v156;
    __twr_v190 = 92ULL;
    __twr_v191 = _mng_stream154 + __twr_v190;
    *(uint8_t*)(__twr_v191) = __twr_v156;
    __twr_l3:;
    _jkl_epilogue:;
}
void LexUninitializeStream(uint64_t _mng_stream192) {
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    __twr_v193 = 56ULL;
    __twr_v194 = _mng_stream192 + __twr_v193;
    __twr_v195 = *(uint64_t*)(__twr_v194);
    if (__twr_v195) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v196 = (uint64_t)(&TlClose);
    __twr_v197 = 16ULL;
    __twr_v198 = _mng_stream192 + __twr_v197;
    __twr_v199 = *(uint64_t*)(__twr_v198);
    ((void (*)(uint64_t))__twr_v196)(__twr_v199);
    __twr_v200 = (uint64_t)(&TlFree);
    __twr_v201 = 24ULL;
    __twr_v202 = _mng_stream192 + __twr_v201;
    __twr_v203 = *(uint64_t*)(__twr_v202);
    ((void (*)(uint64_t))__twr_v200)(__twr_v203);
    __twr_l5:;
    __twr_l4:;
    _jkl_epilogue:;
}
void LexFreeStream(uint64_t _mng_stream204) {
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    __twr_v205 = (uint64_t)(&LexUninitializeStream);
    ((void (*)(uint64_t))__twr_v205)(_mng_stream204);
    __twr_v206 = (uint64_t)(&TlFreeToZone);
    __twr_v207 = (uint64_t)(&LexStreamZone);
    ((void (*)(uint64_t, uint64_t))__twr_v206)(__twr_v207, _mng_stream204);
    __twr_l7:;
    _jkl_epilogue:;
}
void LexPushStream(uint64_t _mng_stream208) {
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    __twr_v209 = (uint64_t)(&LexCurrentStream);
    __twr_v210 = *(uint64_t*)(__twr_v209);
    *(uint64_t*)(_mng_stream208) = __twr_v210;
    *(uint64_t*)(__twr_v209) = _mng_stream208;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t LexPopStream() {
    uint64_t _jkl_retv;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t _mng_oldstream213;
    uint64_t __twr_v214;
    __twr_v211 = (uint64_t)(&LexCurrentStream);
    __twr_v212 = *(uint64_t*)(__twr_v211);
    _mng_oldstream213 = __twr_v212;
    __twr_v214 = *(uint64_t*)(_mng_oldstream213);
    *(uint64_t*)(__twr_v211) = __twr_v214;
    _jkl_retv = _mng_oldstream213;
    goto _jkl_epilogue;
    __twr_l9:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitializeFileStream(uint64_t _mng_stream215, uint64_t _mng_fileblock216, uint64_t _mng_handle217) {
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t _mng_buffer223;
    uint64_t _mng_status224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    __twr_v218 = (uint64_t)(&LexInitializeStream);
    __twr_v219 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v218)(_mng_stream215, __twr_v219);
    __twr_v220 = (uint64_t)(&TlAlloc);
    __twr_v221 = 16384ULL;
    __twr_v222 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v220)(__twr_v221, (uint64_t)(&_mng_buffer223));
    _mng_status224 = __twr_v222;
    if (!(_mng_status224)) { goto __twr_l11; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v225 = (uint64_t)(&TlInternalError);
    __twr_v226 = (uint64_t)(&"Failed to allocate lex buffer");
    __twr_v227 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v225)(__twr_v226, __twr_v227, __twr_v227, __twr_v227);
    __twr_l11:;
    __twr_v228 = 8ULL;
    __twr_v229 = _mng_stream215 + __twr_v228;
    *(uint64_t*)(__twr_v229) = _mng_fileblock216;
    __twr_v230 = 16ULL;
    __twr_v231 = _mng_stream215 + __twr_v230;
    *(uint64_t*)(__twr_v231) = _mng_handle217;
    __twr_v232 = 16384ULL;
    __twr_v233 = 32ULL;
    __twr_v234 = _mng_stream215 + __twr_v233;
    *(uint32_t*)(__twr_v234) = __twr_v232;
    __twr_v235 = 24ULL;
    __twr_v236 = _mng_stream215 + __twr_v235;
    *(uint64_t*)(__twr_v236) = _mng_buffer223;
    __twr_l10:;
    _jkl_epilogue:;
}
uint64_t LexCreateFileStream(uint64_t _mng_fileblock237, uint64_t _mng_handle238) {
    uint64_t _jkl_retv;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t _mng_stream241;
    uint64_t __twr_v242;
    __twr_v239 = (uint64_t)(&LexAllocateStream);
    __twr_v240 = ((uint64_t (*)())__twr_v239)();
    _mng_stream241 = __twr_v240;
    __twr_v242 = (uint64_t)(&LexInitializeFileStream);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v242)(_mng_stream241, _mng_fileblock237, _mng_handle238);
    _jkl_retv = _mng_stream241;
    goto _jkl_epilogue;
    __twr_l13:;
    _jkl_epilogue:;
    return _jkl_retv;
}
extern uint64_t PrsLeaveMacro();
uint64_t LexStreamNextCharacter() {
    uint64_t _jkl_retv;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t _mng_stream247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t _mng_byte256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t _mng_macro300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    __twr_v243 = (uint64_t)(&LexCurrentStream);
    __twr_v244 = *(uint64_t*)(__twr_v243);
    if (!(__twr_v244)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v245 = (uint64_t)(&LexCurrentStream);
    __twr_v246 = *(uint64_t*)(__twr_v245);
    _mng_stream247 = __twr_v246;
    __twr_v248 = 92ULL;
    __twr_v249 = _mng_stream247 + __twr_v248;
    __twr_v250 = *(uint8_t*)(__twr_v249);
    if (!(__twr_v250)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v251 = (uint64_t)(&LexCurrentStream);
    __twr_v252 = *(uint64_t*)(__twr_v251);
    __twr_v253 = 92ULL;
    __twr_v254 = __twr_v252 + __twr_v253;
    __twr_v255 = *(uint8_t*)(__twr_v254);
    _mng_byte256 = __twr_v255;
    __twr_v257 = 0ULL;
    *(uint8_t*)(__twr_v254) = __twr_v257;
    _jkl_retv = _mng_byte256;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l20:;
    __twr_v258 = 91ULL;
    __twr_v259 = _mng_stream247 + __twr_v258;
    __twr_v260 = *(uint8_t*)(__twr_v259);
    if (!(__twr_v260)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v261 = (uint64_t)(&LexCurrentStream);
    __twr_v262 = *(uint64_t*)(__twr_v261);
    __twr_v263 = 91ULL;
    __twr_v264 = __twr_v262 + __twr_v263;
    __twr_v265 = *(uint8_t*)(__twr_v264);
    _mng_byte256 = __twr_v265;
    __twr_v266 = 0ULL;
    *(uint8_t*)(__twr_v264) = __twr_v266;
    _jkl_retv = _mng_byte256;
    goto _jkl_epilogue;
    goto __twr_l18;
    __twr_l22:;
    __twr_v267 = 40ULL;
    __twr_v268 = _mng_stream247 + __twr_v267;
    __twr_v269 = *(uint32_t*)(__twr_v268);
    __twr_v270 = 36ULL;
    __twr_v271 = _mng_stream247 + __twr_v270;
    __twr_v272 = *(uint32_t*)(__twr_v271);
    if (__twr_v269 >= __twr_v272) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v273 = 24ULL;
    __twr_v274 = _mng_stream247 + __twr_v273;
    __twr_v275 = *(uint64_t*)(__twr_v274);
    __twr_v276 = 40ULL;
    __twr_v277 = _mng_stream247 + __twr_v276;
    __twr_v278 = *(uint32_t*)(__twr_v277);
    __twr_v279 = 1ULL;
    __twr_v280 = __twr_v275 + __twr_v278;
    __twr_v281 = *(uint8_t*)(__twr_v280);
    _mng_byte256 = __twr_v281;
    __twr_v282 = __twr_v278 + __twr_v279;
    *(uint32_t*)(__twr_v277) = __twr_v282;
    goto __twr_l18;
    __twr_l24:;
    __twr_v283 = 56ULL;
    __twr_v284 = _mng_stream247 + __twr_v283;
    __twr_v285 = *(uint64_t*)(__twr_v284);
    if (!(__twr_v285)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v286 = 64ULL;
    __twr_v287 = _mng_stream247 + __twr_v286;
    __twr_v288 = *(uint8_t*)(__twr_v287);
    if (__twr_v288) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v289 = 1ULL;
    __twr_v290 = 64ULL;
    __twr_v291 = _mng_stream247 + __twr_v290;
    *(uint8_t*)(__twr_v291) = __twr_v289;
    __twr_v292 = 10ULL;
    _jkl_retv = __twr_v292;
    goto _jkl_epilogue;
    __twr_l27:;
    __twr_v293 = 1ULL;
    __twr_v294 = (uint64_t)(&LexMacroDepth);
    __twr_v295 = *(uint32_t*)(__twr_v294);
    __twr_v296 = __twr_v295 - __twr_v293;
    *(uint32_t*)(__twr_v294) = __twr_v296;
    __twr_v297 = 56ULL;
    __twr_v298 = _mng_stream247 + __twr_v297;
    __twr_v299 = *(uint64_t*)(__twr_v298);
    _mng_macro300 = __twr_v299;
    __twr_v301 = 257ULL;
    __twr_v302 = _mng_macro300 + __twr_v301;
    __twr_v303 = *(uint8_t*)(__twr_v302);
    if (__twr_v303) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v304 = 72ULL;
    __twr_v305 = _mng_stream247 + __twr_v304;
    __twr_v306 = *(uint64_t*)(__twr_v305);
    __twr_v307 = (uint64_t)(&LexRootScope);
    __twr_v308 = *(uint64_t*)(__twr_v307);
    if (__twr_v306 == __twr_v308) { goto __twr_l33; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v309 = (uint64_t)(&LexCurrentScope);
    __twr_v310 = *(uint64_t*)(__twr_v309);
    __twr_v311 = *(uint64_t*)(__twr_v310);
    __twr_v312 = *(uint64_t*)(__twr_v311);
    if (!(__twr_v312)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v313 = (uint64_t)(&LexStreamError);
    __twr_v314 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v315 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v313)(__twr_v314, __twr_v315, __twr_v315, __twr_v315);
    __twr_l34:;
    __twr_v316 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v317 = (uint64_t)(&LexCurrentScope);
    __twr_v318 = *(uint64_t*)(__twr_v317);
    __twr_v319 = ((uint64_t (*)(uint64_t))__twr_v316)(__twr_v318);
    goto __twr_l31;
    __twr_l33:;
    __twr_v320 = (uint64_t)(&LexCurrentScope);
    __twr_v321 = *(uint64_t*)(__twr_v320);
    __twr_v322 = (uint64_t)(&LexRootScope);
    __twr_v323 = *(uint64_t*)(__twr_v322);
    if (__twr_v321 == __twr_v323) { goto __twr_l31; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v324 = (uint64_t)(&LexStreamError);
    __twr_v325 = (uint64_t)(&"Macro terminated during nested scope");
    __twr_v326 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v324)(__twr_v325, __twr_v326, __twr_v326, __twr_v326);
    __twr_l31:;
    __twr_v327 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v328 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v329 = *(uint64_t*)(__twr_v328);
    __twr_v330 = ((uint64_t (*)(uint64_t))__twr_v327)(__twr_v329);
    __twr_l29:;
    __twr_v331 = (uint64_t)(&PrsLeaveMacro);
    __twr_v332 = ((uint64_t (*)())__twr_v331)();
    if (__twr_v332) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v333 = (uint64_t)(&LexStreamError);
    __twr_v334 = (uint64_t)(&"Macro terminated during nested block");
    __twr_v335 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v333)(__twr_v334, __twr_v335, __twr_v335, __twr_v335);
    __twr_l37:;
    __twr_v336 = 72ULL;
    __twr_v337 = _mng_stream247 + __twr_v336;
    __twr_v338 = *(uint64_t*)(__twr_v337);
    __twr_v339 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v339) = __twr_v338;
    __twr_v340 = 80ULL;
    __twr_v341 = _mng_stream247 + __twr_v340;
    __twr_v342 = *(uint64_t*)(__twr_v341);
    __twr_v343 = (uint64_t)(&LexCurrentMacroScope);
    *(uint64_t*)(__twr_v343) = __twr_v342;
    __twr_v344 = (uint64_t)(&LexFreeStream);
    __twr_v345 = (uint64_t)(&LexPopStream);
    __twr_v346 = ((uint64_t (*)())__twr_v345)();
    ((void (*)(uint64_t))__twr_v344)(__twr_v346);
    goto __twr_l17;
    goto __twr_l18;
    __twr_l26:;
    __twr_v347 = (uint64_t)(&TlReadFile);
    __twr_v348 = 16ULL;
    __twr_v349 = _mng_stream247 + __twr_v348;
    __twr_v350 = *(uint64_t*)(__twr_v349);
    __twr_v351 = 32ULL;
    __twr_v352 = _mng_stream247 + __twr_v351;
    __twr_v353 = *(uint32_t*)(__twr_v352);
    __twr_v354 = 24ULL;
    __twr_v355 = _mng_stream247 + __twr_v354;
    __twr_v356 = *(uint64_t*)(__twr_v355);
    __twr_v357 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v347)(__twr_v350, __twr_v353, __twr_v356);
    __twr_v358 = 36ULL;
    __twr_v359 = _mng_stream247 + __twr_v358;
    *(uint32_t*)(__twr_v359) = __twr_v357;
    __twr_v360 = *(uint32_t*)(__twr_v359);
    if (__twr_v360) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_v361 = 64ULL;
    __twr_v362 = _mng_stream247 + __twr_v361;
    __twr_v363 = *(uint8_t*)(__twr_v362);
    if (__twr_v363) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v364 = 1ULL;
    __twr_v365 = 64ULL;
    __twr_v366 = _mng_stream247 + __twr_v365;
    *(uint8_t*)(__twr_v366) = __twr_v364;
    __twr_v367 = 10ULL;
    _jkl_retv = __twr_v367;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v368 = (uint64_t)(&LexFreeStream);
    __twr_v369 = (uint64_t)(&LexPopStream);
    __twr_v370 = ((uint64_t (*)())__twr_v369)();
    ((void (*)(uint64_t))__twr_v368)(__twr_v370);
    goto __twr_l17;
    __twr_l39:;
    __twr_v371 = 1ULL;
    __twr_v372 = 40ULL;
    __twr_v373 = _mng_stream247 + __twr_v372;
    *(uint32_t*)(__twr_v373) = __twr_v371;
    __twr_v374 = 24ULL;
    __twr_v375 = _mng_stream247 + __twr_v374;
    __twr_v376 = *(uint64_t*)(__twr_v375);
    __twr_v377 = *(uint8_t*)(__twr_v376);
    _mng_byte256 = __twr_v377;
    __twr_l18:;
    if (_mng_byte256) { goto __twr_l45; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v378 = (uint64_t)(&LexStreamError);
    __twr_v379 = (uint64_t)(&"An invalid byte was found in the source file.");
    __twr_v380 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v378)(__twr_v379, _mng_byte256, __twr_v380, __twr_v380);
    goto __twr_l43;
    __twr_l45:;
    __twr_v381 = 13ULL;
    if (_mng_byte256 != __twr_v381) { goto __twr_l47; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v382 = (uint64_t)(&LexStreamError);
    __twr_v383 = (uint64_t)(&"DOS line endings were detected in the source file.");
    __twr_v384 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v382)(__twr_v383, __twr_v384, __twr_v384, __twr_v384);
    goto __twr_l43;
    __twr_l47:;
    __twr_v385 = 10ULL;
    if (_mng_byte256 != __twr_v385) { goto __twr_l49; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v386 = 1ULL;
    __twr_v387 = 44ULL;
    __twr_v388 = _mng_stream247 + __twr_v387;
    __twr_v389 = *(uint32_t*)(__twr_v388);
    __twr_v390 = __twr_v389 + __twr_v386;
    *(uint32_t*)(__twr_v388) = __twr_v390;
    __twr_v391 = 48ULL;
    __twr_v392 = _mng_stream247 + __twr_v391;
    *(uint32_t*)(__twr_v392) = __twr_v386;
    __twr_v393 = 64ULL;
    __twr_v394 = _mng_stream247 + __twr_v393;
    *(uint8_t*)(__twr_v394) = __twr_v386;
    goto __twr_l43;
    __twr_l49:;
    __twr_v395 = 1ULL;
    __twr_v396 = 48ULL;
    __twr_v397 = _mng_stream247 + __twr_v396;
    __twr_v398 = *(uint32_t*)(__twr_v397);
    __twr_v399 = __twr_v398 + __twr_v395;
    *(uint32_t*)(__twr_v397) = __twr_v399;
    __twr_v400 = 0ULL;
    __twr_v401 = 64ULL;
    __twr_v402 = _mng_stream247 + __twr_v401;
    *(uint8_t*)(__twr_v402) = __twr_v400;
    __twr_l43:;
    _jkl_retv = _mng_byte256;
    goto _jkl_epilogue;
    __twr_l17:;
    __twr_v403 = (uint64_t)(&LexCurrentStream);
    __twr_v404 = *(uint64_t*)(__twr_v403);
    if (__twr_v404) { goto __twr_l15; } else { goto __twr_l16; }
    __twr_l16:;
    __twr_v405 = 0ULL;
    _jkl_retv = __twr_v405;
    goto _jkl_epilogue;
    __twr_l14:;
    _jkl_epilogue:;
    return _jkl_retv;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine110, uint64_t _mng_arg111, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread112);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex113);
extern void TlReleaseMutex(uint64_t _mng_mutex114);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue115);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore116);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore117);
extern void JklCompileProgram(uint64_t _mng_argc118, uint64_t _mng_argv119);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg120);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename121, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock122, uint64_t _mng_filepath123);
extern uint64_t LexLookupSection(uint64_t _mng_name124);
extern void LexPushSection(uint64_t _mng_section125);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope126);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg127);
extern void LexExpandMacro(uint64_t _mng_macro128, uint64_t _mng_token129);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream130, uint64_t _mng_macro131);
extern void LexUninitializeStream(uint64_t _mng_stream132);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream133);
extern void LexPushStream(uint64_t _mng_stream134);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream135, uint64_t _mng_fileblock136, uint64_t _mng_handle137);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock138, uint64_t _mng_handle139);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope140);
extern uint64_t LexResetScope(uint64_t _mng_scope141);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope142);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest143, uint64_t _mng_src144);
extern void LexGetToken(uint64_t _mng_token145);
extern void LexPutbackToken(uint64_t _mng_token146);
extern uint64_t LexMatchToken(uint64_t _mng_token147, uint64_t _mng_type148, uint64_t _mng_subtype149);
extern void LexStreamError(uint64_t _mng_str150, uint64_t _mng_err1151, uint64_t _mng_err2152, uint64_t _mng_err3153);
extern void LexTokenError(uint64_t _mng_token154, uint64_t _mng_str155, uint64_t _mng_err1156, uint64_t _mng_err2157, uint64_t _mng_err3158);
extern uint64_t LexCrunchNumber(uint64_t _mng_token159, uint64_t _mng_buffer160);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node161);
extern uint64_t IrAllocateStack(uint64_t _mng_func162, uint64_t _mng_bytes163);
extern uint64_t IrGetStackOffset(uint64_t _mng_func164, uint64_t _mng_symbol165);
extern void IrValueNumberVariable(uint64_t _mng_var166, uint64_t _mng_valueop167, uint64_t _mng_src1168, uint64_t _mng_src2169);
extern uint64_t IrFindValue(uint64_t _mng_op170, uint64_t _mng_src1171, uint64_t _mng_src2172);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads173, uint64_t _mng_symbol174);
extern void IrKillVariable(uint64_t _mng_var175);
extern void IrValueNumberConstantVariable(uint64_t _mng_var176, uint64_t _mng_constant177, uint64_t _mng_op178);
extern uint64_t IrFindConstant(uint64_t _mng_constant179, uint64_t _mng_op180);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var181);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[7];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst182, uint64_t _mng_value183);
extern void IrRemoveInstruction(uint64_t _mng_inst184);
uint64_t IrHashTable[196];
uint32_t IrNextValueNumber = 1ULL;
void IrValueNumberBarrier(uint64_t _mng_onlyloads185, uint64_t _mng_symbol186) {
    uint64_t __twr_v187;
    uint64_t _mng_head188;
    uint64_t __twr_v189;
    uint64_t _mng_listentry190;
    uint64_t __twr_v191;
    uint64_t _mng_nextentry192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_var195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t _mng_listentry210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t _mng_prev214;
    uint64_t __twr_v215;
    uint64_t _mng_next216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t _mng_listentry220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t _mng_prev223;
    uint64_t __twr_v224;
    uint64_t _mng_next225;
    uint64_t __twr_v226;
    __twr_v187 = (uint64_t)(&IrHashTable);
    _mng_head188 = __twr_v187;
    __twr_v189 = *(uint64_t*)(_mng_head188);
    _mng_listentry190 = __twr_v189;
    if (_mng_listentry190 == _mng_head188) { goto __twr_l3; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v191 = *(uint64_t*)(_mng_listentry190);
    _mng_nextentry192 = __twr_v191;
    __twr_v193 = 24ULL;
    __twr_v194 = _mng_listentry190 - __twr_v193;
    _mng_var195 = __twr_v194;
    if (!(_mng_onlyloads185)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v196 = 84ULL;
    __twr_v197 = _mng_var195 + __twr_v196;
    __twr_v198 = *(uint8_t*)(__twr_v197);
    if (!(__twr_v198)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    if (!(_mng_symbol186)) { goto __twr_l9; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v199 = 56ULL;
    __twr_v200 = _mng_var195 + __twr_v199;
    __twr_v201 = *(uint64_t*)(__twr_v200);
    if (__twr_v201 == _mng_symbol186) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v202 = 56ULL;
    __twr_v203 = _mng_var195 + __twr_v202;
    __twr_v204 = *(uint64_t*)(__twr_v203);
    if (__twr_v204) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v205 = 0ULL;
    __twr_v206 = 24ULL;
    __twr_v207 = _mng_var195 + __twr_v206;
    __twr_v208 = 80ULL;
    __twr_v209 = _mng_var195 + __twr_v208;
    *(uint32_t*)(__twr_v209) = __twr_v205;
    _mng_listentry210 = __twr_v207;
    __twr_v211 = 8ULL;
    __twr_v212 = _mng_listentry210 + __twr_v211;
    __twr_v213 = *(uint64_t*)(__twr_v212);
    _mng_prev214 = __twr_v213;
    __twr_v215 = *(uint64_t*)(_mng_listentry210);
    _mng_next216 = __twr_v215;
    *(uint64_t*)(_mng_prev214) = _mng_next216;
    __twr_v217 = _mng_next216 + __twr_v211;
    *(uint64_t*)(__twr_v217) = _mng_prev214;
    __twr_v218 = 40ULL;
    __twr_v219 = _mng_var195 + __twr_v218;
    _mng_listentry220 = __twr_v219;
    __twr_v221 = _mng_listentry220 + __twr_v211;
    __twr_v222 = *(uint64_t*)(__twr_v221);
    _mng_prev223 = __twr_v222;
    __twr_v224 = *(uint64_t*)(_mng_listentry220);
    _mng_next225 = __twr_v224;
    *(uint64_t*)(_mng_prev223) = _mng_next225;
    __twr_v226 = _mng_next225 + __twr_v211;
    *(uint64_t*)(__twr_v226) = _mng_prev223;
    __twr_l8:;
    __twr_l5:;
    _mng_listentry190 = _mng_nextentry192;
    __twr_l4:;
    if (_mng_listentry190 != _mng_head188) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void IrKillValueNumber(uint64_t _mng_value227) {
    uint64_t __twr_v228;
    uint64_t _mng_head229;
    uint64_t __twr_v230;
    uint64_t _mng_listentry231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t _mng_var234;
    uint64_t __twr_v235;
    uint64_t _mng_nextentry236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t _mng_listentry248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t _mng_prev252;
    uint64_t __twr_v253;
    uint64_t _mng_next254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t _mng_listentry258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t _mng_prev261;
    uint64_t __twr_v262;
    uint64_t _mng_next263;
    uint64_t __twr_v264;
    __twr_v228 = (uint64_t)(&IrHashTable);
    _mng_head229 = __twr_v228;
    __twr_v230 = *(uint64_t*)(_mng_head229);
    _mng_listentry231 = __twr_v230;
    if (_mng_listentry231 == _mng_head229) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v232 = 24ULL;
    __twr_v233 = _mng_listentry231 - __twr_v232;
    _mng_var234 = __twr_v233;
    __twr_v235 = *(uint64_t*)(_mng_listentry231);
    _mng_nextentry236 = __twr_v235;
    __twr_v237 = 72ULL;
    __twr_v238 = _mng_var234 + __twr_v237;
    __twr_v239 = *(uint32_t*)(__twr_v238);
    if (__twr_v239 == _mng_value227) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v240 = 76ULL;
    __twr_v241 = _mng_var234 + __twr_v240;
    __twr_v242 = *(uint32_t*)(__twr_v241);
    if (__twr_v242 != _mng_value227) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v243 = 0ULL;
    __twr_v244 = 24ULL;
    __twr_v245 = _mng_var234 + __twr_v244;
    __twr_v246 = 80ULL;
    __twr_v247 = _mng_var234 + __twr_v246;
    *(uint32_t*)(__twr_v247) = __twr_v243;
    _mng_listentry248 = __twr_v245;
    __twr_v249 = 8ULL;
    __twr_v250 = _mng_listentry248 + __twr_v249;
    __twr_v251 = *(uint64_t*)(__twr_v250);
    _mng_prev252 = __twr_v251;
    __twr_v253 = *(uint64_t*)(_mng_listentry248);
    _mng_next254 = __twr_v253;
    *(uint64_t*)(_mng_prev252) = _mng_next254;
    __twr_v255 = _mng_next254 + __twr_v249;
    *(uint64_t*)(__twr_v255) = _mng_prev252;
    __twr_v256 = 40ULL;
    __twr_v257 = _mng_var234 + __twr_v256;
    _mng_listentry258 = __twr_v257;
    __twr_v259 = _mng_listentry258 + __twr_v249;
    __twr_v260 = *(uint64_t*)(__twr_v259);
    _mng_prev261 = __twr_v260;
    __twr_v262 = *(uint64_t*)(_mng_listentry258);
    _mng_next263 = __twr_v262;
    *(uint64_t*)(_mng_prev261) = _mng_next263;
    __twr_v264 = _mng_next263 + __twr_v249;
    *(uint64_t*)(__twr_v264) = _mng_prev261;
    __twr_l16:;
    _mng_listentry231 = _mng_nextentry236;
    __twr_l15:;
    if (_mng_listentry231 != _mng_head229) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_l12:;
    _jkl_epilogue:;
}
void IrKillVariable(uint64_t _mng_var265) {
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t _mng_listentry275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t _mng_prev279;
    uint64_t __twr_v280;
    uint64_t _mng_next281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_listentry285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t _mng_prev288;
    uint64_t __twr_v289;
    uint64_t _mng_next290;
    uint64_t __twr_v291;
    __twr_v266 = (uint64_t)(&IrKillValueNumber);
    __twr_v267 = 80ULL;
    __twr_v268 = _mng_var265 + __twr_v267;
    __twr_v269 = *(uint32_t*)(__twr_v268);
    ((void (*)(uint64_t))__twr_v266)(__twr_v269);
    __twr_v270 = 85ULL;
    __twr_v271 = _mng_var265 + __twr_v270;
    __twr_v272 = *(uint8_t*)(__twr_v271);
    if (!(__twr_v272)) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v273 = 24ULL;
    __twr_v274 = _mng_var265 + __twr_v273;
    _mng_listentry275 = __twr_v274;
    __twr_v276 = 8ULL;
    __twr_v277 = _mng_listentry275 + __twr_v276;
    __twr_v278 = *(uint64_t*)(__twr_v277);
    _mng_prev279 = __twr_v278;
    __twr_v280 = *(uint64_t*)(_mng_listentry275);
    _mng_next281 = __twr_v280;
    *(uint64_t*)(_mng_prev279) = _mng_next281;
    __twr_v282 = _mng_next281 + __twr_v276;
    *(uint64_t*)(__twr_v282) = _mng_prev279;
    __twr_v283 = 40ULL;
    __twr_v284 = _mng_var265 + __twr_v283;
    _mng_listentry285 = __twr_v284;
    __twr_v286 = _mng_listentry285 + __twr_v276;
    __twr_v287 = *(uint64_t*)(__twr_v286);
    _mng_prev288 = __twr_v287;
    __twr_v289 = *(uint64_t*)(_mng_listentry285);
    _mng_next290 = __twr_v289;
    *(uint64_t*)(_mng_prev288) = _mng_next290;
    __twr_v291 = _mng_next290 + __twr_v276;
    *(uint64_t*)(__twr_v291) = _mng_prev288;
    __twr_l20:;
    __twr_l19:;
    _jkl_epilogue:;
}
void IrGiveOpaqueValueVariable(uint64_t _mng_var292) {
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t _mng_listentry300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t _mng_prev304;
    uint64_t __twr_v305;
    uint64_t _mng_next306;
    uint64_t __twr_v307;
    uint64_t _mng_listentry308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t _mng_prev311;
    uint64_t __twr_v312;
    uint64_t _mng_next313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    __twr_v293 = 85ULL;
    __twr_v294 = _mng_var292 + __twr_v293;
    __twr_v295 = *(uint8_t*)(__twr_v294);
    if (!(__twr_v295)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v296 = 24ULL;
    __twr_v297 = _mng_var292 + __twr_v296;
    __twr_v298 = 40ULL;
    __twr_v299 = _mng_var292 + __twr_v298;
    _mng_listentry300 = __twr_v299;
    __twr_v301 = 8ULL;
    __twr_v302 = _mng_listentry300 + __twr_v301;
    __twr_v303 = *(uint64_t*)(__twr_v302);
    _mng_prev304 = __twr_v303;
    __twr_v305 = *(uint64_t*)(_mng_listentry300);
    _mng_next306 = __twr_v305;
    *(uint64_t*)(_mng_prev304) = _mng_next306;
    __twr_v307 = _mng_next306 + __twr_v301;
    *(uint64_t*)(__twr_v307) = _mng_prev304;
    _mng_listentry308 = __twr_v297;
    __twr_v309 = _mng_listentry308 + __twr_v301;
    __twr_v310 = *(uint64_t*)(__twr_v309);
    _mng_prev311 = __twr_v310;
    __twr_v312 = *(uint64_t*)(_mng_listentry308);
    _mng_next313 = __twr_v312;
    *(uint64_t*)(_mng_prev311) = _mng_next313;
    __twr_v314 = _mng_next313 + __twr_v301;
    *(uint64_t*)(__twr_v314) = _mng_prev311;
    __twr_v315 = (uint64_t)(&IrKillValueNumber);
    __twr_v316 = 80ULL;
    __twr_v317 = _mng_var292 + __twr_v316;
    __twr_v318 = *(uint32_t*)(__twr_v317);
    ((void (*)(uint64_t))__twr_v315)(__twr_v318);
    __twr_l23:;
    __twr_v319 = 0ULL;
    __twr_v320 = 85ULL;
    __twr_v321 = _mng_var292 + __twr_v320;
    *(uint8_t*)(__twr_v321) = __twr_v319;
    __twr_v322 = (uint64_t)(&IrNextValueNumber);
    __twr_v323 = *(uint32_t*)(__twr_v322);
    __twr_v324 = 80ULL;
    __twr_v325 = _mng_var292 + __twr_v324;
    *(uint32_t*)(__twr_v325) = __twr_v323;
    __twr_v326 = 1ULL;
    __twr_v327 = *(uint32_t*)(__twr_v322);
    __twr_v328 = __twr_v327 + __twr_v326;
    *(uint32_t*)(__twr_v322) = __twr_v328;
    __twr_l22:;
    _jkl_epilogue:;
}
void IrValueNumberVariable(uint64_t _mng_var329, uint64_t _mng_valueop330, uint64_t _mng_src1331, uint64_t _mng_src2332) {
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t _mng_byload339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t _mng_byloadof343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t _mng_valuesrc1353;
    uint64_t _mng_valuesrc2354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t _mng_listentry373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t _mng_prev377;
    uint64_t __twr_v378;
    uint64_t _mng_next379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t _mng_listhead386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t _mng_listentry389;
    uint64_t __twr_v390;
    uint64_t _mng_first391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t _mng_vn397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t _mng_hash414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t _mng_listhead435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t _mng_listentry438;
    uint64_t __twr_v439;
    uint64_t _mng_first440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    __twr_v333 = 84ULL;
    __twr_v334 = _mng_var329 + __twr_v333;
    __twr_v335 = *(uint8_t*)(__twr_v334);
    __twr_v336 = _mng_src1331 + __twr_v333;
    __twr_v337 = *(uint8_t*)(__twr_v336);
    __twr_v338 = __twr_v335 | __twr_v337;
    _mng_byload339 = __twr_v338;
    __twr_v340 = 56ULL;
    __twr_v341 = _mng_var329 + __twr_v340;
    __twr_v342 = *(uint64_t*)(__twr_v341);
    _mng_byloadof343 = __twr_v342;
    if (_mng_byloadof343) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v344 = 56ULL;
    __twr_v345 = _mng_src1331 + __twr_v344;
    __twr_v346 = *(uint64_t*)(__twr_v345);
    _mng_byloadof343 = __twr_v346;
    goto __twr_l26;
    __twr_l28:;
    __twr_v347 = 56ULL;
    __twr_v348 = _mng_src1331 + __twr_v347;
    __twr_v349 = *(uint64_t*)(__twr_v348);
    if (!(__twr_v349)) { goto __twr_l26; } else { goto __twr_l29; }
    __twr_l29:;
    _mng_byloadof343 = 0ULL;
    __twr_l26:;
    __twr_v350 = 80ULL;
    __twr_v351 = _mng_src1331 + __twr_v350;
    __twr_v352 = *(uint32_t*)(__twr_v351);
    _mng_valuesrc1353 = __twr_v352;
    if (_mng_valuesrc1353) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    _mng_valuesrc2354 = 0ULL;
    if (!(_mng_src2332)) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v355 = 80ULL;
    __twr_v356 = _mng_src2332 + __twr_v355;
    __twr_v357 = *(uint32_t*)(__twr_v356);
    _mng_valuesrc2354 = __twr_v357;
    __twr_v358 = 84ULL;
    __twr_v359 = _mng_src2332 + __twr_v358;
    __twr_v360 = *(uint8_t*)(__twr_v359);
    __twr_v361 = _mng_byload339 | __twr_v360;
    _mng_byload339 = __twr_v361;
    if (_mng_byloadof343) { goto __twr_l36; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v362 = 56ULL;
    __twr_v363 = _mng_src2332 + __twr_v362;
    __twr_v364 = *(uint64_t*)(__twr_v363);
    _mng_byloadof343 = __twr_v364;
    goto __twr_l34;
    __twr_l36:;
    __twr_v365 = 56ULL;
    __twr_v366 = _mng_src2332 + __twr_v365;
    __twr_v367 = *(uint64_t*)(__twr_v366);
    if (!(__twr_v367)) { goto __twr_l34; } else { goto __twr_l37; }
    __twr_l37:;
    _mng_byloadof343 = 0ULL;
    __twr_l34:;
    if (_mng_valuesrc2354) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    goto _jkl_epilogue;
    __twr_l38:;
    __twr_l32:;
    __twr_v368 = 85ULL;
    __twr_v369 = _mng_var329 + __twr_v368;
    __twr_v370 = *(uint8_t*)(__twr_v369);
    if (!(__twr_v370)) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    __twr_v371 = 40ULL;
    __twr_v372 = _mng_var329 + __twr_v371;
    _mng_listentry373 = __twr_v372;
    __twr_v374 = 8ULL;
    __twr_v375 = _mng_listentry373 + __twr_v374;
    __twr_v376 = *(uint64_t*)(__twr_v375);
    _mng_prev377 = __twr_v376;
    __twr_v378 = *(uint64_t*)(_mng_listentry373);
    _mng_next379 = __twr_v378;
    *(uint64_t*)(_mng_prev377) = _mng_next379;
    __twr_v380 = _mng_next379 + __twr_v374;
    *(uint64_t*)(__twr_v380) = _mng_prev377;
    __twr_v381 = (uint64_t)(&IrKillValueNumber);
    __twr_v382 = 80ULL;
    __twr_v383 = _mng_var329 + __twr_v382;
    __twr_v384 = *(uint32_t*)(__twr_v383);
    ((void (*)(uint64_t))__twr_v381)(__twr_v384);
    goto __twr_l40;
    __twr_l42:;
    __twr_v385 = (uint64_t)(&IrHashTable);
    _mng_listhead386 = __twr_v385;
    __twr_v387 = 24ULL;
    __twr_v388 = _mng_var329 + __twr_v387;
    _mng_listentry389 = __twr_v388;
    __twr_v390 = *(uint64_t*)(_mng_listhead386);
    _mng_first391 = __twr_v390;
    *(uint64_t*)(_mng_listentry389) = _mng_first391;
    __twr_v392 = 8ULL;
    __twr_v393 = _mng_listentry389 + __twr_v392;
    *(uint64_t*)(__twr_v393) = _mng_listhead386;
    __twr_v394 = _mng_first391 + __twr_v392;
    *(uint64_t*)(__twr_v394) = __twr_v388;
    *(uint64_t*)(_mng_listhead386) = __twr_v388;
    __twr_l40:;
    __twr_v395 = (uint64_t)(&IrNextValueNumber);
    __twr_v396 = *(uint32_t*)(__twr_v395);
    _mng_vn397 = __twr_v396;
    __twr_v398 = 1ULL;
    __twr_v399 = __twr_v396 + __twr_v398;
    *(uint32_t*)(__twr_v395) = __twr_v399;
    __twr_v400 = 56ULL;
    __twr_v401 = 80ULL;
    __twr_v402 = _mng_var329 + __twr_v401;
    *(uint32_t*)(__twr_v402) = _mng_vn397;
    __twr_v403 = 84ULL;
    __twr_v404 = _mng_var329 + __twr_v403;
    *(uint8_t*)(__twr_v404) = _mng_byload339;
    __twr_v405 = _mng_var329 + __twr_v400;
    *(uint64_t*)(__twr_v405) = _mng_byloadof343;
    __twr_v406 = 72ULL;
    __twr_v407 = _mng_var329 + __twr_v406;
    *(uint32_t*)(__twr_v407) = _mng_valuesrc1353;
    __twr_v408 = 76ULL;
    __twr_v409 = _mng_var329 + __twr_v408;
    *(uint32_t*)(__twr_v409) = _mng_valuesrc2354;
    __twr_v410 = 85ULL;
    __twr_v411 = _mng_var329 + __twr_v410;
    *(uint8_t*)(__twr_v411) = _mng_valueop330;
    __twr_v412 = _mng_valuesrc1353 ^ _mng_valuesrc2354;
    __twr_v413 = __twr_v412 ^ _mng_valueop330;
    _mng_hash414 = __twr_v413;
    __twr_v415 = 7ULL;
    __twr_v416 = _mng_hash414 >> __twr_v415;
    __twr_v417 = _mng_hash414 ^ __twr_v416;
    _mng_hash414 = __twr_v417;
    __twr_v418 = 14ULL;
    __twr_v419 = _mng_hash414 >> __twr_v418;
    __twr_v420 = _mng_hash414 ^ __twr_v419;
    _mng_hash414 = __twr_v420;
    __twr_v421 = 21ULL;
    __twr_v422 = _mng_hash414 >> __twr_v421;
    __twr_v423 = _mng_hash414 ^ __twr_v422;
    _mng_hash414 = __twr_v423;
    __twr_v424 = 28ULL;
    __twr_v425 = _mng_hash414 >> __twr_v424;
    __twr_v426 = _mng_hash414 ^ __twr_v425;
    _mng_hash414 = __twr_v426;
    __twr_v427 = 97ULL;
    __twr_v428 = _mng_hash414 % __twr_v427;
    _mng_hash414 = __twr_v428;
    __twr_v429 = (uint64_t)(&IrHashTable);
    __twr_v430 = 16ULL;
    __twr_v431 = __twr_v429 + __twr_v430;
    __twr_v432 = 4ULL;
    __twr_v433 = _mng_hash414 << __twr_v432;
    __twr_v434 = __twr_v431 + __twr_v433;
    _mng_listhead435 = __twr_v434;
    __twr_v436 = 40ULL;
    __twr_v437 = _mng_var329 + __twr_v436;
    _mng_listentry438 = __twr_v437;
    __twr_v439 = *(uint64_t*)(_mng_listhead435);
    _mng_first440 = __twr_v439;
    *(uint64_t*)(_mng_listentry438) = _mng_first440;
    __twr_v441 = 8ULL;
    __twr_v442 = _mng_listentry438 + __twr_v441;
    *(uint64_t*)(__twr_v442) = _mng_listhead435;
    __twr_v443 = _mng_first440 + __twr_v441;
    *(uint64_t*)(__twr_v443) = __twr_v437;
    *(uint64_t*)(_mng_listhead435) = __twr_v437;
    __twr_l25:;
    _jkl_epilogue:;
}
void IrValueNumberConstantVariable(uint64_t _mng_var444, uint64_t _mng_constant445, uint64_t _mng_op446) {
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t _mng_listentry452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t _mng_prev456;
    uint64_t __twr_v457;
    uint64_t _mng_next458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t _mng_listhead465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t _mng_listentry468;
    uint64_t __twr_v469;
    uint64_t _mng_first470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t _mng_vn476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t _mng_hash486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t _mng_listhead507;
    uint64_t __twr_v508;
    uint64_t _mng_listentry509;
    uint64_t __twr_v510;
    uint64_t _mng_first511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    __twr_v447 = 85ULL;
    __twr_v448 = _mng_var444 + __twr_v447;
    __twr_v449 = *(uint8_t*)(__twr_v448);
    if (!(__twr_v449)) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v450 = 40ULL;
    __twr_v451 = _mng_var444 + __twr_v450;
    _mng_listentry452 = __twr_v451;
    __twr_v453 = 8ULL;
    __twr_v454 = _mng_listentry452 + __twr_v453;
    __twr_v455 = *(uint64_t*)(__twr_v454);
    _mng_prev456 = __twr_v455;
    __twr_v457 = *(uint64_t*)(_mng_listentry452);
    _mng_next458 = __twr_v457;
    *(uint64_t*)(_mng_prev456) = _mng_next458;
    __twr_v459 = _mng_next458 + __twr_v453;
    *(uint64_t*)(__twr_v459) = _mng_prev456;
    __twr_v460 = (uint64_t)(&IrKillValueNumber);
    __twr_v461 = 80ULL;
    __twr_v462 = _mng_var444 + __twr_v461;
    __twr_v463 = *(uint32_t*)(__twr_v462);
    ((void (*)(uint64_t))__twr_v460)(__twr_v463);
    goto __twr_l44;
    __twr_l46:;
    __twr_v464 = (uint64_t)(&IrHashTable);
    _mng_listhead465 = __twr_v464;
    __twr_v466 = 24ULL;
    __twr_v467 = _mng_var444 + __twr_v466;
    _mng_listentry468 = __twr_v467;
    __twr_v469 = *(uint64_t*)(_mng_listhead465);
    _mng_first470 = __twr_v469;
    *(uint64_t*)(_mng_listentry468) = _mng_first470;
    __twr_v471 = 8ULL;
    __twr_v472 = _mng_listentry468 + __twr_v471;
    *(uint64_t*)(__twr_v472) = _mng_listhead465;
    __twr_v473 = _mng_first470 + __twr_v471;
    *(uint64_t*)(__twr_v473) = __twr_v467;
    *(uint64_t*)(_mng_listhead465) = __twr_v467;
    __twr_l44:;
    __twr_v474 = (uint64_t)(&IrNextValueNumber);
    __twr_v475 = *(uint32_t*)(__twr_v474);
    _mng_vn476 = __twr_v475;
    __twr_v477 = 1ULL;
    __twr_v478 = __twr_v475 + __twr_v477;
    *(uint32_t*)(__twr_v474) = __twr_v478;
    __twr_v479 = 80ULL;
    __twr_v480 = _mng_var444 + __twr_v479;
    *(uint32_t*)(__twr_v480) = _mng_vn476;
    __twr_v481 = 40ULL;
    __twr_v482 = 64ULL;
    __twr_v483 = _mng_var444 + __twr_v482;
    *(uint64_t*)(__twr_v483) = _mng_constant445;
    __twr_v484 = 85ULL;
    __twr_v485 = _mng_var444 + __twr_v484;
    *(uint8_t*)(__twr_v485) = _mng_op446;
    _mng_hash486 = _mng_constant445;
    __twr_v487 = 7ULL;
    __twr_v488 = _mng_hash486 >> __twr_v487;
    __twr_v489 = _mng_hash486 ^ __twr_v488;
    _mng_hash486 = __twr_v489;
    __twr_v490 = 14ULL;
    __twr_v491 = _mng_hash486 >> __twr_v490;
    __twr_v492 = _mng_hash486 ^ __twr_v491;
    _mng_hash486 = __twr_v492;
    __twr_v493 = 21ULL;
    __twr_v494 = _mng_hash486 >> __twr_v493;
    __twr_v495 = _mng_hash486 ^ __twr_v494;
    _mng_hash486 = __twr_v495;
    __twr_v496 = 28ULL;
    __twr_v497 = _mng_hash486 >> __twr_v496;
    __twr_v498 = _mng_hash486 ^ __twr_v497;
    _mng_hash486 = __twr_v498;
    __twr_v499 = 97ULL;
    __twr_v500 = _mng_hash486 % __twr_v499;
    _mng_hash486 = __twr_v500;
    __twr_v501 = (uint64_t)(&IrHashTable);
    __twr_v502 = 16ULL;
    __twr_v503 = __twr_v501 + __twr_v502;
    __twr_v504 = 4ULL;
    __twr_v505 = _mng_hash486 << __twr_v504;
    __twr_v506 = __twr_v503 + __twr_v505;
    _mng_listhead507 = __twr_v506;
    __twr_v508 = _mng_var444 + __twr_v481;
    _mng_listentry509 = __twr_v508;
    __twr_v510 = *(uint64_t*)(_mng_listhead507);
    _mng_first511 = __twr_v510;
    *(uint64_t*)(_mng_listentry509) = _mng_first511;
    __twr_v512 = 8ULL;
    __twr_v513 = _mng_listentry509 + __twr_v512;
    *(uint64_t*)(__twr_v513) = _mng_listhead507;
    __twr_v514 = _mng_first511 + __twr_v512;
    *(uint64_t*)(__twr_v514) = __twr_v508;
    *(uint64_t*)(_mng_listhead507) = __twr_v508;
    __twr_l43:;
    _jkl_epilogue:;
}
uint64_t IrFindValue(uint64_t _mng_op515, uint64_t _mng_src1516, uint64_t _mng_src2517) {
    uint64_t _jkl_retv;
    uint64_t _mng_valuesrc1518;
    uint64_t _mng_valuesrc2519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t _mng_hash528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t _mng_head549;
    uint64_t __twr_v550;
    uint64_t _mng_listentry551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t _mng_var554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    _mng_valuesrc1518 = 0ULL;
    _mng_valuesrc2519 = 0ULL;
    if (!(_mng_src1516)) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v520 = 80ULL;
    __twr_v521 = _mng_src1516 + __twr_v520;
    __twr_v522 = *(uint32_t*)(__twr_v521);
    _mng_valuesrc1518 = __twr_v522;
    __twr_l48:;
    if (!(_mng_src2517)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v523 = 80ULL;
    __twr_v524 = _mng_src2517 + __twr_v523;
    __twr_v525 = *(uint32_t*)(__twr_v524);
    _mng_valuesrc2519 = __twr_v525;
    __twr_l50:;
    __twr_v526 = _mng_valuesrc1518 ^ _mng_valuesrc2519;
    __twr_v527 = __twr_v526 ^ _mng_op515;
    _mng_hash528 = __twr_v527;
    __twr_v529 = 7ULL;
    __twr_v530 = _mng_hash528 >> __twr_v529;
    __twr_v531 = _mng_hash528 ^ __twr_v530;
    _mng_hash528 = __twr_v531;
    __twr_v532 = 14ULL;
    __twr_v533 = _mng_hash528 >> __twr_v532;
    __twr_v534 = _mng_hash528 ^ __twr_v533;
    _mng_hash528 = __twr_v534;
    __twr_v535 = 21ULL;
    __twr_v536 = _mng_hash528 >> __twr_v535;
    __twr_v537 = _mng_hash528 ^ __twr_v536;
    _mng_hash528 = __twr_v537;
    __twr_v538 = 28ULL;
    __twr_v539 = _mng_hash528 >> __twr_v538;
    __twr_v540 = _mng_hash528 ^ __twr_v539;
    _mng_hash528 = __twr_v540;
    __twr_v541 = 97ULL;
    __twr_v542 = _mng_hash528 % __twr_v541;
    _mng_hash528 = __twr_v542;
    __twr_v543 = (uint64_t)(&IrHashTable);
    __twr_v544 = 16ULL;
    __twr_v545 = __twr_v543 + __twr_v544;
    __twr_v546 = 4ULL;
    __twr_v547 = _mng_hash528 << __twr_v546;
    __twr_v548 = __twr_v545 + __twr_v547;
    _mng_head549 = __twr_v548;
    __twr_v550 = *(uint64_t*)(_mng_head549);
    _mng_listentry551 = __twr_v550;
    if (_mng_listentry551 == _mng_head549) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v552 = 40ULL;
    __twr_v553 = _mng_listentry551 - __twr_v552;
    _mng_var554 = __twr_v553;
    __twr_v555 = 85ULL;
    __twr_v556 = _mng_var554 + __twr_v555;
    __twr_v557 = *(uint8_t*)(__twr_v556);
    if (__twr_v557 != _mng_op515) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v558 = 72ULL;
    __twr_v559 = _mng_var554 + __twr_v558;
    __twr_v560 = *(uint32_t*)(__twr_v559);
    if (__twr_v560 != _mng_valuesrc1518) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v561 = 76ULL;
    __twr_v562 = _mng_var554 + __twr_v561;
    __twr_v563 = *(uint32_t*)(__twr_v562);
    if (__twr_v563 != _mng_valuesrc2519) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v564 = 0ULL;
    __twr_v565 = 92ULL;
    __twr_v566 = _mng_var554 + __twr_v565;
    *(uint8_t*)(__twr_v566) = __twr_v564;
    _jkl_retv = _mng_var554;
    goto _jkl_epilogue;
    goto __twr_l57;
    __twr_l59:;
    __twr_v567 = (uint64_t)(&IrCommutativity);
    __twr_v568 = __twr_v567 + _mng_op515;
    __twr_v569 = *(uint8_t*)(__twr_v568);
    if (!(__twr_v569)) { goto __twr_l57; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v570 = 72ULL;
    __twr_v571 = _mng_var554 + __twr_v570;
    __twr_v572 = *(uint32_t*)(__twr_v571);
    if (__twr_v572 != _mng_valuesrc2519) { goto __twr_l57; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v573 = 76ULL;
    __twr_v574 = _mng_var554 + __twr_v573;
    __twr_v575 = *(uint32_t*)(__twr_v574);
    if (__twr_v575 != _mng_valuesrc1518) { goto __twr_l57; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v576 = 0ULL;
    __twr_v577 = 92ULL;
    __twr_v578 = _mng_var554 + __twr_v577;
    *(uint8_t*)(__twr_v578) = __twr_v576;
    _jkl_retv = _mng_var554;
    goto _jkl_epilogue;
    __twr_l57:;
    __twr_l55:;
    __twr_v579 = *(uint64_t*)(_mng_listentry551);
    _mng_listentry551 = __twr_v579;
    __twr_l54:;
    if (_mng_listentry551 != _mng_head549) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v580 = 0ULL;
    _jkl_retv = __twr_v580;
    goto _jkl_epilogue;
    __twr_l47:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t IrFindConstant(uint64_t _mng_constant581, uint64_t _mng_op582) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t _mng_head604;
    uint64_t __twr_v605;
    uint64_t _mng_listentry606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t _mng_var609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    _mng_hash583 = _mng_constant581;
    __twr_v584 = 7ULL;
    __twr_v585 = _mng_hash583 >> __twr_v584;
    __twr_v586 = _mng_hash583 ^ __twr_v585;
    _mng_hash583 = __twr_v586;
    __twr_v587 = 14ULL;
    __twr_v588 = _mng_hash583 >> __twr_v587;
    __twr_v589 = _mng_hash583 ^ __twr_v588;
    _mng_hash583 = __twr_v589;
    __twr_v590 = 21ULL;
    __twr_v591 = _mng_hash583 >> __twr_v590;
    __twr_v592 = _mng_hash583 ^ __twr_v591;
    _mng_hash583 = __twr_v592;
    __twr_v593 = 28ULL;
    __twr_v594 = _mng_hash583 >> __twr_v593;
    __twr_v595 = _mng_hash583 ^ __twr_v594;
    _mng_hash583 = __twr_v595;
    __twr_v596 = 97ULL;
    __twr_v597 = _mng_hash583 % __twr_v596;
    _mng_hash583 = __twr_v597;
    __twr_v598 = (uint64_t)(&IrHashTable);
    __twr_v599 = 16ULL;
    __twr_v600 = __twr_v598 + __twr_v599;
    __twr_v601 = 4ULL;
    __twr_v602 = _mng_hash583 << __twr_v601;
    __twr_v603 = __twr_v600 + __twr_v602;
    _mng_head604 = __twr_v603;
    __twr_v605 = *(uint64_t*)(_mng_head604);
    _mng_listentry606 = __twr_v605;
    if (_mng_listentry606 == _mng_head604) { goto __twr_l66; } else { goto __twr_l65; }
    __twr_l65:;
    __twr_v607 = 40ULL;
    __twr_v608 = _mng_listentry606 - __twr_v607;
    _mng_var609 = __twr_v608;
    __twr_v610 = 85ULL;
    __twr_v611 = _mng_var609 + __twr_v610;
    __twr_v612 = *(uint8_t*)(__twr_v611);
    if (__twr_v612 != _mng_op582) { goto __twr_l68; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v613 = 64ULL;
    __twr_v614 = _mng_var609 + __twr_v613;
    __twr_v615 = *(uint64_t*)(__twr_v614);
    if (__twr_v615 != _mng_constant581) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    __twr_v616 = 0ULL;
    __twr_v617 = 92ULL;
    __twr_v618 = _mng_var609 + __twr_v617;
    *(uint8_t*)(__twr_v618) = __twr_v616;
    _jkl_retv = _mng_var609;
    goto _jkl_epilogue;
    __twr_l68:;
    __twr_v619 = *(uint64_t*)(_mng_listentry606);
    _mng_listentry606 = __twr_v619;
    __twr_l67:;
    if (_mng_listentry606 != _mng_head604) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v620 = 0ULL;
    _jkl_retv = __twr_v620;
    goto _jkl_epilogue;
    __twr_l64:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void IrInitializeValueNumber() {
    uint64_t __twr_v621;
    uint64_t _mng_listhead622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t _mng_i625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t _mng_listhead632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    __twr_v621 = (uint64_t)(&IrHashTable);
    _mng_listhead622 = __twr_v621;
    __twr_v623 = 8ULL;
    __twr_v624 = _mng_listhead622 + __twr_v623;
    *(uint64_t*)(__twr_v624) = _mng_listhead622;
    *(uint64_t*)(_mng_listhead622) = _mng_listhead622;
    _mng_i625 = 0ULL;
    __twr_l72:;
    __twr_v626 = (uint64_t)(&IrHashTable);
    __twr_v627 = 16ULL;
    __twr_v628 = __twr_v626 + __twr_v627;
    __twr_v629 = 4ULL;
    __twr_v630 = _mng_i625 << __twr_v629;
    __twr_v631 = __twr_v628 + __twr_v630;
    _mng_listhead632 = __twr_v631;
    __twr_v633 = 8ULL;
    __twr_v634 = _mng_listhead632 + __twr_v633;
    *(uint64_t*)(__twr_v634) = _mng_listhead632;
    *(uint64_t*)(_mng_listhead632) = _mng_listhead632;
    __twr_v635 = 1ULL;
    __twr_v636 = _mng_i625 + __twr_v635;
    _mng_i625 = __twr_v636;
    __twr_l74:;
    __twr_v637 = 97ULL;
    if (_mng_i625 < __twr_v637) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_l71:;
    _jkl_epilogue:;
}

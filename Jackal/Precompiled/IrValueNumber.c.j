#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlStringToNumber(uint64_t _mng_src110, uint64_t _mng_bufsize111, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler112);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine113, uint64_t _mng_arg114, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread115);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex116);
extern void TlReleaseMutex(uint64_t _mng_mutex117);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue118);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore119);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore120);
extern void JklCompileProgram(uint64_t _mng_argc121, uint64_t _mng_argv122);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg123);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename124, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock125, uint64_t _mng_filepath126);
extern uint64_t LexLookupSection(uint64_t _mng_name127);
extern void LexPushSection(uint64_t _mng_section128);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope129);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg130);
extern void LexExpandMacro(uint64_t _mng_macro131, uint64_t _mng_token132);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream133, uint64_t _mng_macro134);
extern void LexUninitializeStream(uint64_t _mng_stream135);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream136);
extern void LexPushStream(uint64_t _mng_stream137);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream138, uint64_t _mng_fileblock139, uint64_t _mng_handle140);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock141, uint64_t _mng_handle142);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope143);
extern uint64_t LexResetScope(uint64_t _mng_scope144);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope145);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest146, uint64_t _mng_src147);
extern void LexGetToken(uint64_t _mng_token148);
extern void LexPutbackToken(uint64_t _mng_token149);
extern uint64_t LexMatchToken(uint64_t _mng_token150, uint64_t _mng_type151, uint64_t _mng_subtype152);
extern void LexStreamError(uint64_t _mng_str153, uint64_t _mng_err1154, uint64_t _mng_err2155, uint64_t _mng_err3156);
extern void LexTokenError(uint64_t _mng_token157, uint64_t _mng_str158, uint64_t _mng_err1159, uint64_t _mng_err2160, uint64_t _mng_err3161);
extern uint64_t LexCrunchNumber(uint64_t _mng_token162, uint64_t _mng_buffer163);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node164);
extern uint64_t IrAllocateStack(uint64_t _mng_func165, uint64_t _mng_bytes166);
extern uint64_t IrGetStackOffset(uint64_t _mng_func167, uint64_t _mng_symbol168);
extern void IrValueNumberVariable(uint64_t _mng_var169, uint64_t _mng_valueop170, uint64_t _mng_src1171, uint64_t _mng_src2172);
extern uint64_t IrFindValue(uint64_t _mng_op173, uint64_t _mng_src1174, uint64_t _mng_src2175);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads176, uint64_t _mng_symbol177);
extern void IrKillVariable(uint64_t _mng_var178);
extern void IrValueNumberConstantVariable(uint64_t _mng_var179, uint64_t _mng_constant180, uint64_t _mng_op181);
extern uint64_t IrFindConstant(uint64_t _mng_constant182, uint64_t _mng_op183);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var184);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[7];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst185, uint64_t _mng_value186);
extern void IrRemoveInstruction(uint64_t _mng_inst187);
uint64_t IrHashTable[196];
uint32_t IrNextValueNumber = 1ULL;
void IrValueNumberBarrier(uint64_t _mng_onlyloads188, uint64_t _mng_symbol189) {
    uint64_t __twr_v190;
    uint64_t _mng_head191;
    uint64_t __twr_v192;
    uint64_t _mng_listentry193;
    uint64_t __twr_v194;
    uint64_t _mng_nextentry195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t _mng_var198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t _mng_listentry213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t _mng_prev217;
    uint64_t __twr_v218;
    uint64_t _mng_next219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t _mng_listentry223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t _mng_prev226;
    uint64_t __twr_v227;
    uint64_t _mng_next228;
    uint64_t __twr_v229;
    __twr_v190 = (uint64_t)(&IrHashTable);
    _mng_head191 = __twr_v190;
    __twr_v192 = *(uint64_t*)(_mng_head191);
    _mng_listentry193 = __twr_v192;
    if (_mng_listentry193 == _mng_head191) { goto __twr_l3; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v194 = *(uint64_t*)(_mng_listentry193);
    _mng_nextentry195 = __twr_v194;
    __twr_v196 = 24ULL;
    __twr_v197 = _mng_listentry193 - __twr_v196;
    _mng_var198 = __twr_v197;
    if (!(_mng_onlyloads188)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v199 = 84ULL;
    __twr_v200 = _mng_var198 + __twr_v199;
    __twr_v201 = *(uint8_t*)(__twr_v200);
    if (!(__twr_v201)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    if (!(_mng_symbol189)) { goto __twr_l9; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v202 = 56ULL;
    __twr_v203 = _mng_var198 + __twr_v202;
    __twr_v204 = *(uint64_t*)(__twr_v203);
    if (__twr_v204 == _mng_symbol189) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v205 = 56ULL;
    __twr_v206 = _mng_var198 + __twr_v205;
    __twr_v207 = *(uint64_t*)(__twr_v206);
    if (__twr_v207) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v208 = 0ULL;
    __twr_v209 = 24ULL;
    __twr_v210 = _mng_var198 + __twr_v209;
    __twr_v211 = 80ULL;
    __twr_v212 = _mng_var198 + __twr_v211;
    *(uint32_t*)(__twr_v212) = __twr_v208;
    _mng_listentry213 = __twr_v210;
    __twr_v214 = 8ULL;
    __twr_v215 = _mng_listentry213 + __twr_v214;
    __twr_v216 = *(uint64_t*)(__twr_v215);
    _mng_prev217 = __twr_v216;
    __twr_v218 = *(uint64_t*)(_mng_listentry213);
    _mng_next219 = __twr_v218;
    *(uint64_t*)(_mng_prev217) = _mng_next219;
    __twr_v220 = _mng_next219 + __twr_v214;
    *(uint64_t*)(__twr_v220) = _mng_prev217;
    __twr_v221 = 40ULL;
    __twr_v222 = _mng_var198 + __twr_v221;
    _mng_listentry223 = __twr_v222;
    __twr_v224 = _mng_listentry223 + __twr_v214;
    __twr_v225 = *(uint64_t*)(__twr_v224);
    _mng_prev226 = __twr_v225;
    __twr_v227 = *(uint64_t*)(_mng_listentry223);
    _mng_next228 = __twr_v227;
    *(uint64_t*)(_mng_prev226) = _mng_next228;
    __twr_v229 = _mng_next228 + __twr_v214;
    *(uint64_t*)(__twr_v229) = _mng_prev226;
    __twr_l8:;
    __twr_l5:;
    _mng_listentry193 = _mng_nextentry195;
    __twr_l4:;
    if (_mng_listentry193 != _mng_head191) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void IrKillValueNumber(uint64_t _mng_value230) {
    uint64_t __twr_v231;
    uint64_t _mng_head232;
    uint64_t __twr_v233;
    uint64_t _mng_listentry234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t _mng_var237;
    uint64_t __twr_v238;
    uint64_t _mng_nextentry239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t _mng_listentry251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t _mng_prev255;
    uint64_t __twr_v256;
    uint64_t _mng_next257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t _mng_listentry261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t _mng_prev264;
    uint64_t __twr_v265;
    uint64_t _mng_next266;
    uint64_t __twr_v267;
    __twr_v231 = (uint64_t)(&IrHashTable);
    _mng_head232 = __twr_v231;
    __twr_v233 = *(uint64_t*)(_mng_head232);
    _mng_listentry234 = __twr_v233;
    if (_mng_listentry234 == _mng_head232) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v235 = 24ULL;
    __twr_v236 = _mng_listentry234 - __twr_v235;
    _mng_var237 = __twr_v236;
    __twr_v238 = *(uint64_t*)(_mng_listentry234);
    _mng_nextentry239 = __twr_v238;
    __twr_v240 = 72ULL;
    __twr_v241 = _mng_var237 + __twr_v240;
    __twr_v242 = *(uint32_t*)(__twr_v241);
    if (__twr_v242 == _mng_value230) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v243 = 76ULL;
    __twr_v244 = _mng_var237 + __twr_v243;
    __twr_v245 = *(uint32_t*)(__twr_v244);
    if (__twr_v245 != _mng_value230) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v246 = 0ULL;
    __twr_v247 = 24ULL;
    __twr_v248 = _mng_var237 + __twr_v247;
    __twr_v249 = 80ULL;
    __twr_v250 = _mng_var237 + __twr_v249;
    *(uint32_t*)(__twr_v250) = __twr_v246;
    _mng_listentry251 = __twr_v248;
    __twr_v252 = 8ULL;
    __twr_v253 = _mng_listentry251 + __twr_v252;
    __twr_v254 = *(uint64_t*)(__twr_v253);
    _mng_prev255 = __twr_v254;
    __twr_v256 = *(uint64_t*)(_mng_listentry251);
    _mng_next257 = __twr_v256;
    *(uint64_t*)(_mng_prev255) = _mng_next257;
    __twr_v258 = _mng_next257 + __twr_v252;
    *(uint64_t*)(__twr_v258) = _mng_prev255;
    __twr_v259 = 40ULL;
    __twr_v260 = _mng_var237 + __twr_v259;
    _mng_listentry261 = __twr_v260;
    __twr_v262 = _mng_listentry261 + __twr_v252;
    __twr_v263 = *(uint64_t*)(__twr_v262);
    _mng_prev264 = __twr_v263;
    __twr_v265 = *(uint64_t*)(_mng_listentry261);
    _mng_next266 = __twr_v265;
    *(uint64_t*)(_mng_prev264) = _mng_next266;
    __twr_v267 = _mng_next266 + __twr_v252;
    *(uint64_t*)(__twr_v267) = _mng_prev264;
    __twr_l16:;
    _mng_listentry234 = _mng_nextentry239;
    __twr_l15:;
    if (_mng_listentry234 != _mng_head232) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_l12:;
    _jkl_epilogue:;
}
void IrKillVariable(uint64_t _mng_var268) {
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t _mng_listentry278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t _mng_prev282;
    uint64_t __twr_v283;
    uint64_t _mng_next284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t _mng_listentry288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t _mng_prev291;
    uint64_t __twr_v292;
    uint64_t _mng_next293;
    uint64_t __twr_v294;
    __twr_v269 = (uint64_t)(&IrKillValueNumber);
    __twr_v270 = 80ULL;
    __twr_v271 = _mng_var268 + __twr_v270;
    __twr_v272 = *(uint32_t*)(__twr_v271);
    ((void (*)(uint64_t))__twr_v269)(__twr_v272);
    __twr_v273 = 85ULL;
    __twr_v274 = _mng_var268 + __twr_v273;
    __twr_v275 = *(uint8_t*)(__twr_v274);
    if (!(__twr_v275)) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v276 = 24ULL;
    __twr_v277 = _mng_var268 + __twr_v276;
    _mng_listentry278 = __twr_v277;
    __twr_v279 = 8ULL;
    __twr_v280 = _mng_listentry278 + __twr_v279;
    __twr_v281 = *(uint64_t*)(__twr_v280);
    _mng_prev282 = __twr_v281;
    __twr_v283 = *(uint64_t*)(_mng_listentry278);
    _mng_next284 = __twr_v283;
    *(uint64_t*)(_mng_prev282) = _mng_next284;
    __twr_v285 = _mng_next284 + __twr_v279;
    *(uint64_t*)(__twr_v285) = _mng_prev282;
    __twr_v286 = 40ULL;
    __twr_v287 = _mng_var268 + __twr_v286;
    _mng_listentry288 = __twr_v287;
    __twr_v289 = _mng_listentry288 + __twr_v279;
    __twr_v290 = *(uint64_t*)(__twr_v289);
    _mng_prev291 = __twr_v290;
    __twr_v292 = *(uint64_t*)(_mng_listentry288);
    _mng_next293 = __twr_v292;
    *(uint64_t*)(_mng_prev291) = _mng_next293;
    __twr_v294 = _mng_next293 + __twr_v279;
    *(uint64_t*)(__twr_v294) = _mng_prev291;
    __twr_l20:;
    __twr_l19:;
    _jkl_epilogue:;
}
void IrGiveOpaqueValueVariable(uint64_t _mng_var295) {
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t _mng_listentry303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t _mng_prev307;
    uint64_t __twr_v308;
    uint64_t _mng_next309;
    uint64_t __twr_v310;
    uint64_t _mng_listentry311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t _mng_prev314;
    uint64_t __twr_v315;
    uint64_t _mng_next316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    __twr_v296 = 85ULL;
    __twr_v297 = _mng_var295 + __twr_v296;
    __twr_v298 = *(uint8_t*)(__twr_v297);
    if (!(__twr_v298)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v299 = 24ULL;
    __twr_v300 = _mng_var295 + __twr_v299;
    __twr_v301 = 40ULL;
    __twr_v302 = _mng_var295 + __twr_v301;
    _mng_listentry303 = __twr_v302;
    __twr_v304 = 8ULL;
    __twr_v305 = _mng_listentry303 + __twr_v304;
    __twr_v306 = *(uint64_t*)(__twr_v305);
    _mng_prev307 = __twr_v306;
    __twr_v308 = *(uint64_t*)(_mng_listentry303);
    _mng_next309 = __twr_v308;
    *(uint64_t*)(_mng_prev307) = _mng_next309;
    __twr_v310 = _mng_next309 + __twr_v304;
    *(uint64_t*)(__twr_v310) = _mng_prev307;
    _mng_listentry311 = __twr_v300;
    __twr_v312 = _mng_listentry311 + __twr_v304;
    __twr_v313 = *(uint64_t*)(__twr_v312);
    _mng_prev314 = __twr_v313;
    __twr_v315 = *(uint64_t*)(_mng_listentry311);
    _mng_next316 = __twr_v315;
    *(uint64_t*)(_mng_prev314) = _mng_next316;
    __twr_v317 = _mng_next316 + __twr_v304;
    *(uint64_t*)(__twr_v317) = _mng_prev314;
    __twr_v318 = (uint64_t)(&IrKillValueNumber);
    __twr_v319 = 80ULL;
    __twr_v320 = _mng_var295 + __twr_v319;
    __twr_v321 = *(uint32_t*)(__twr_v320);
    ((void (*)(uint64_t))__twr_v318)(__twr_v321);
    __twr_l23:;
    __twr_v322 = 0ULL;
    __twr_v323 = 85ULL;
    __twr_v324 = _mng_var295 + __twr_v323;
    *(uint8_t*)(__twr_v324) = __twr_v322;
    __twr_v325 = (uint64_t)(&IrNextValueNumber);
    __twr_v326 = *(uint32_t*)(__twr_v325);
    __twr_v327 = 80ULL;
    __twr_v328 = _mng_var295 + __twr_v327;
    *(uint32_t*)(__twr_v328) = __twr_v326;
    __twr_v329 = 1ULL;
    __twr_v330 = *(uint32_t*)(__twr_v325);
    __twr_v331 = __twr_v330 + __twr_v329;
    *(uint32_t*)(__twr_v325) = __twr_v331;
    __twr_l22:;
    _jkl_epilogue:;
}
void IrValueNumberVariable(uint64_t _mng_var332, uint64_t _mng_valueop333, uint64_t _mng_src1334, uint64_t _mng_src2335) {
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t _mng_byload342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t _mng_byloadof346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t _mng_valuesrc1356;
    uint64_t _mng_valuesrc2357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t _mng_listentry376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t _mng_prev380;
    uint64_t __twr_v381;
    uint64_t _mng_next382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t _mng_listhead389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t _mng_listentry392;
    uint64_t __twr_v393;
    uint64_t _mng_first394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t _mng_vn400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t _mng_hash417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t _mng_listhead438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t _mng_listentry441;
    uint64_t __twr_v442;
    uint64_t _mng_first443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    __twr_v336 = 84ULL;
    __twr_v337 = _mng_var332 + __twr_v336;
    __twr_v338 = *(uint8_t*)(__twr_v337);
    __twr_v339 = _mng_src1334 + __twr_v336;
    __twr_v340 = *(uint8_t*)(__twr_v339);
    __twr_v341 = __twr_v338 | __twr_v340;
    _mng_byload342 = __twr_v341;
    __twr_v343 = 56ULL;
    __twr_v344 = _mng_var332 + __twr_v343;
    __twr_v345 = *(uint64_t*)(__twr_v344);
    _mng_byloadof346 = __twr_v345;
    if (_mng_byloadof346) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v347 = 56ULL;
    __twr_v348 = _mng_src1334 + __twr_v347;
    __twr_v349 = *(uint64_t*)(__twr_v348);
    _mng_byloadof346 = __twr_v349;
    goto __twr_l26;
    __twr_l28:;
    __twr_v350 = 56ULL;
    __twr_v351 = _mng_src1334 + __twr_v350;
    __twr_v352 = *(uint64_t*)(__twr_v351);
    if (!(__twr_v352)) { goto __twr_l26; } else { goto __twr_l29; }
    __twr_l29:;
    _mng_byloadof346 = 0ULL;
    __twr_l26:;
    __twr_v353 = 80ULL;
    __twr_v354 = _mng_src1334 + __twr_v353;
    __twr_v355 = *(uint32_t*)(__twr_v354);
    _mng_valuesrc1356 = __twr_v355;
    if (_mng_valuesrc1356) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    _mng_valuesrc2357 = 0ULL;
    if (!(_mng_src2335)) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v358 = 80ULL;
    __twr_v359 = _mng_src2335 + __twr_v358;
    __twr_v360 = *(uint32_t*)(__twr_v359);
    _mng_valuesrc2357 = __twr_v360;
    __twr_v361 = 84ULL;
    __twr_v362 = _mng_src2335 + __twr_v361;
    __twr_v363 = *(uint8_t*)(__twr_v362);
    __twr_v364 = _mng_byload342 | __twr_v363;
    _mng_byload342 = __twr_v364;
    if (_mng_byloadof346) { goto __twr_l36; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v365 = 56ULL;
    __twr_v366 = _mng_src2335 + __twr_v365;
    __twr_v367 = *(uint64_t*)(__twr_v366);
    _mng_byloadof346 = __twr_v367;
    goto __twr_l34;
    __twr_l36:;
    __twr_v368 = 56ULL;
    __twr_v369 = _mng_src2335 + __twr_v368;
    __twr_v370 = *(uint64_t*)(__twr_v369);
    if (!(__twr_v370)) { goto __twr_l34; } else { goto __twr_l37; }
    __twr_l37:;
    _mng_byloadof346 = 0ULL;
    __twr_l34:;
    if (_mng_valuesrc2357) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    goto _jkl_epilogue;
    __twr_l38:;
    __twr_l32:;
    __twr_v371 = 85ULL;
    __twr_v372 = _mng_var332 + __twr_v371;
    __twr_v373 = *(uint8_t*)(__twr_v372);
    if (!(__twr_v373)) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    __twr_v374 = 40ULL;
    __twr_v375 = _mng_var332 + __twr_v374;
    _mng_listentry376 = __twr_v375;
    __twr_v377 = 8ULL;
    __twr_v378 = _mng_listentry376 + __twr_v377;
    __twr_v379 = *(uint64_t*)(__twr_v378);
    _mng_prev380 = __twr_v379;
    __twr_v381 = *(uint64_t*)(_mng_listentry376);
    _mng_next382 = __twr_v381;
    *(uint64_t*)(_mng_prev380) = _mng_next382;
    __twr_v383 = _mng_next382 + __twr_v377;
    *(uint64_t*)(__twr_v383) = _mng_prev380;
    __twr_v384 = (uint64_t)(&IrKillValueNumber);
    __twr_v385 = 80ULL;
    __twr_v386 = _mng_var332 + __twr_v385;
    __twr_v387 = *(uint32_t*)(__twr_v386);
    ((void (*)(uint64_t))__twr_v384)(__twr_v387);
    goto __twr_l40;
    __twr_l42:;
    __twr_v388 = (uint64_t)(&IrHashTable);
    _mng_listhead389 = __twr_v388;
    __twr_v390 = 24ULL;
    __twr_v391 = _mng_var332 + __twr_v390;
    _mng_listentry392 = __twr_v391;
    __twr_v393 = *(uint64_t*)(_mng_listhead389);
    _mng_first394 = __twr_v393;
    *(uint64_t*)(_mng_listentry392) = _mng_first394;
    __twr_v395 = 8ULL;
    __twr_v396 = _mng_listentry392 + __twr_v395;
    *(uint64_t*)(__twr_v396) = _mng_listhead389;
    __twr_v397 = _mng_first394 + __twr_v395;
    *(uint64_t*)(__twr_v397) = __twr_v391;
    *(uint64_t*)(_mng_listhead389) = __twr_v391;
    __twr_l40:;
    __twr_v398 = (uint64_t)(&IrNextValueNumber);
    __twr_v399 = *(uint32_t*)(__twr_v398);
    _mng_vn400 = __twr_v399;
    __twr_v401 = 1ULL;
    __twr_v402 = __twr_v399 + __twr_v401;
    *(uint32_t*)(__twr_v398) = __twr_v402;
    __twr_v403 = 56ULL;
    __twr_v404 = 80ULL;
    __twr_v405 = _mng_var332 + __twr_v404;
    *(uint32_t*)(__twr_v405) = _mng_vn400;
    __twr_v406 = 84ULL;
    __twr_v407 = _mng_var332 + __twr_v406;
    *(uint8_t*)(__twr_v407) = _mng_byload342;
    __twr_v408 = _mng_var332 + __twr_v403;
    *(uint64_t*)(__twr_v408) = _mng_byloadof346;
    __twr_v409 = 72ULL;
    __twr_v410 = _mng_var332 + __twr_v409;
    *(uint32_t*)(__twr_v410) = _mng_valuesrc1356;
    __twr_v411 = 76ULL;
    __twr_v412 = _mng_var332 + __twr_v411;
    *(uint32_t*)(__twr_v412) = _mng_valuesrc2357;
    __twr_v413 = 85ULL;
    __twr_v414 = _mng_var332 + __twr_v413;
    *(uint8_t*)(__twr_v414) = _mng_valueop333;
    __twr_v415 = _mng_valuesrc1356 ^ _mng_valuesrc2357;
    __twr_v416 = __twr_v415 ^ _mng_valueop333;
    _mng_hash417 = __twr_v416;
    __twr_v418 = 7ULL;
    __twr_v419 = _mng_hash417 >> __twr_v418;
    __twr_v420 = _mng_hash417 ^ __twr_v419;
    _mng_hash417 = __twr_v420;
    __twr_v421 = 14ULL;
    __twr_v422 = _mng_hash417 >> __twr_v421;
    __twr_v423 = _mng_hash417 ^ __twr_v422;
    _mng_hash417 = __twr_v423;
    __twr_v424 = 21ULL;
    __twr_v425 = _mng_hash417 >> __twr_v424;
    __twr_v426 = _mng_hash417 ^ __twr_v425;
    _mng_hash417 = __twr_v426;
    __twr_v427 = 28ULL;
    __twr_v428 = _mng_hash417 >> __twr_v427;
    __twr_v429 = _mng_hash417 ^ __twr_v428;
    _mng_hash417 = __twr_v429;
    __twr_v430 = 97ULL;
    __twr_v431 = _mng_hash417 % __twr_v430;
    _mng_hash417 = __twr_v431;
    __twr_v432 = (uint64_t)(&IrHashTable);
    __twr_v433 = 16ULL;
    __twr_v434 = __twr_v432 + __twr_v433;
    __twr_v435 = 4ULL;
    __twr_v436 = _mng_hash417 << __twr_v435;
    __twr_v437 = __twr_v434 + __twr_v436;
    _mng_listhead438 = __twr_v437;
    __twr_v439 = 40ULL;
    __twr_v440 = _mng_var332 + __twr_v439;
    _mng_listentry441 = __twr_v440;
    __twr_v442 = *(uint64_t*)(_mng_listhead438);
    _mng_first443 = __twr_v442;
    *(uint64_t*)(_mng_listentry441) = _mng_first443;
    __twr_v444 = 8ULL;
    __twr_v445 = _mng_listentry441 + __twr_v444;
    *(uint64_t*)(__twr_v445) = _mng_listhead438;
    __twr_v446 = _mng_first443 + __twr_v444;
    *(uint64_t*)(__twr_v446) = __twr_v440;
    *(uint64_t*)(_mng_listhead438) = __twr_v440;
    __twr_l25:;
    _jkl_epilogue:;
}
void IrValueNumberConstantVariable(uint64_t _mng_var447, uint64_t _mng_constant448, uint64_t _mng_op449) {
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t _mng_listentry455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t _mng_prev459;
    uint64_t __twr_v460;
    uint64_t _mng_next461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t _mng_listhead468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t _mng_listentry471;
    uint64_t __twr_v472;
    uint64_t _mng_first473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t _mng_vn479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t _mng_hash489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t _mng_listhead510;
    uint64_t __twr_v511;
    uint64_t _mng_listentry512;
    uint64_t __twr_v513;
    uint64_t _mng_first514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    __twr_v450 = 85ULL;
    __twr_v451 = _mng_var447 + __twr_v450;
    __twr_v452 = *(uint8_t*)(__twr_v451);
    if (!(__twr_v452)) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v453 = 40ULL;
    __twr_v454 = _mng_var447 + __twr_v453;
    _mng_listentry455 = __twr_v454;
    __twr_v456 = 8ULL;
    __twr_v457 = _mng_listentry455 + __twr_v456;
    __twr_v458 = *(uint64_t*)(__twr_v457);
    _mng_prev459 = __twr_v458;
    __twr_v460 = *(uint64_t*)(_mng_listentry455);
    _mng_next461 = __twr_v460;
    *(uint64_t*)(_mng_prev459) = _mng_next461;
    __twr_v462 = _mng_next461 + __twr_v456;
    *(uint64_t*)(__twr_v462) = _mng_prev459;
    __twr_v463 = (uint64_t)(&IrKillValueNumber);
    __twr_v464 = 80ULL;
    __twr_v465 = _mng_var447 + __twr_v464;
    __twr_v466 = *(uint32_t*)(__twr_v465);
    ((void (*)(uint64_t))__twr_v463)(__twr_v466);
    goto __twr_l44;
    __twr_l46:;
    __twr_v467 = (uint64_t)(&IrHashTable);
    _mng_listhead468 = __twr_v467;
    __twr_v469 = 24ULL;
    __twr_v470 = _mng_var447 + __twr_v469;
    _mng_listentry471 = __twr_v470;
    __twr_v472 = *(uint64_t*)(_mng_listhead468);
    _mng_first473 = __twr_v472;
    *(uint64_t*)(_mng_listentry471) = _mng_first473;
    __twr_v474 = 8ULL;
    __twr_v475 = _mng_listentry471 + __twr_v474;
    *(uint64_t*)(__twr_v475) = _mng_listhead468;
    __twr_v476 = _mng_first473 + __twr_v474;
    *(uint64_t*)(__twr_v476) = __twr_v470;
    *(uint64_t*)(_mng_listhead468) = __twr_v470;
    __twr_l44:;
    __twr_v477 = (uint64_t)(&IrNextValueNumber);
    __twr_v478 = *(uint32_t*)(__twr_v477);
    _mng_vn479 = __twr_v478;
    __twr_v480 = 1ULL;
    __twr_v481 = __twr_v478 + __twr_v480;
    *(uint32_t*)(__twr_v477) = __twr_v481;
    __twr_v482 = 80ULL;
    __twr_v483 = _mng_var447 + __twr_v482;
    *(uint32_t*)(__twr_v483) = _mng_vn479;
    __twr_v484 = 40ULL;
    __twr_v485 = 64ULL;
    __twr_v486 = _mng_var447 + __twr_v485;
    *(uint64_t*)(__twr_v486) = _mng_constant448;
    __twr_v487 = 85ULL;
    __twr_v488 = _mng_var447 + __twr_v487;
    *(uint8_t*)(__twr_v488) = _mng_op449;
    _mng_hash489 = _mng_constant448;
    __twr_v490 = 7ULL;
    __twr_v491 = _mng_hash489 >> __twr_v490;
    __twr_v492 = _mng_hash489 ^ __twr_v491;
    _mng_hash489 = __twr_v492;
    __twr_v493 = 14ULL;
    __twr_v494 = _mng_hash489 >> __twr_v493;
    __twr_v495 = _mng_hash489 ^ __twr_v494;
    _mng_hash489 = __twr_v495;
    __twr_v496 = 21ULL;
    __twr_v497 = _mng_hash489 >> __twr_v496;
    __twr_v498 = _mng_hash489 ^ __twr_v497;
    _mng_hash489 = __twr_v498;
    __twr_v499 = 28ULL;
    __twr_v500 = _mng_hash489 >> __twr_v499;
    __twr_v501 = _mng_hash489 ^ __twr_v500;
    _mng_hash489 = __twr_v501;
    __twr_v502 = 97ULL;
    __twr_v503 = _mng_hash489 % __twr_v502;
    _mng_hash489 = __twr_v503;
    __twr_v504 = (uint64_t)(&IrHashTable);
    __twr_v505 = 16ULL;
    __twr_v506 = __twr_v504 + __twr_v505;
    __twr_v507 = 4ULL;
    __twr_v508 = _mng_hash489 << __twr_v507;
    __twr_v509 = __twr_v506 + __twr_v508;
    _mng_listhead510 = __twr_v509;
    __twr_v511 = _mng_var447 + __twr_v484;
    _mng_listentry512 = __twr_v511;
    __twr_v513 = *(uint64_t*)(_mng_listhead510);
    _mng_first514 = __twr_v513;
    *(uint64_t*)(_mng_listentry512) = _mng_first514;
    __twr_v515 = 8ULL;
    __twr_v516 = _mng_listentry512 + __twr_v515;
    *(uint64_t*)(__twr_v516) = _mng_listhead510;
    __twr_v517 = _mng_first514 + __twr_v515;
    *(uint64_t*)(__twr_v517) = __twr_v511;
    *(uint64_t*)(_mng_listhead510) = __twr_v511;
    __twr_l43:;
    _jkl_epilogue:;
}
uint64_t IrFindValue(uint64_t _mng_op518, uint64_t _mng_src1519, uint64_t _mng_src2520) {
    uint64_t _jkl_retv;
    uint64_t _mng_valuesrc1521;
    uint64_t _mng_valuesrc2522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t _mng_hash531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t _mng_head552;
    uint64_t __twr_v553;
    uint64_t _mng_listentry554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t _mng_var557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    _mng_valuesrc1521 = 0ULL;
    _mng_valuesrc2522 = 0ULL;
    if (!(_mng_src1519)) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v523 = 80ULL;
    __twr_v524 = _mng_src1519 + __twr_v523;
    __twr_v525 = *(uint32_t*)(__twr_v524);
    _mng_valuesrc1521 = __twr_v525;
    __twr_l48:;
    if (!(_mng_src2520)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v526 = 80ULL;
    __twr_v527 = _mng_src2520 + __twr_v526;
    __twr_v528 = *(uint32_t*)(__twr_v527);
    _mng_valuesrc2522 = __twr_v528;
    __twr_l50:;
    __twr_v529 = _mng_valuesrc1521 ^ _mng_valuesrc2522;
    __twr_v530 = __twr_v529 ^ _mng_op518;
    _mng_hash531 = __twr_v530;
    __twr_v532 = 7ULL;
    __twr_v533 = _mng_hash531 >> __twr_v532;
    __twr_v534 = _mng_hash531 ^ __twr_v533;
    _mng_hash531 = __twr_v534;
    __twr_v535 = 14ULL;
    __twr_v536 = _mng_hash531 >> __twr_v535;
    __twr_v537 = _mng_hash531 ^ __twr_v536;
    _mng_hash531 = __twr_v537;
    __twr_v538 = 21ULL;
    __twr_v539 = _mng_hash531 >> __twr_v538;
    __twr_v540 = _mng_hash531 ^ __twr_v539;
    _mng_hash531 = __twr_v540;
    __twr_v541 = 28ULL;
    __twr_v542 = _mng_hash531 >> __twr_v541;
    __twr_v543 = _mng_hash531 ^ __twr_v542;
    _mng_hash531 = __twr_v543;
    __twr_v544 = 97ULL;
    __twr_v545 = _mng_hash531 % __twr_v544;
    _mng_hash531 = __twr_v545;
    __twr_v546 = (uint64_t)(&IrHashTable);
    __twr_v547 = 16ULL;
    __twr_v548 = __twr_v546 + __twr_v547;
    __twr_v549 = 4ULL;
    __twr_v550 = _mng_hash531 << __twr_v549;
    __twr_v551 = __twr_v548 + __twr_v550;
    _mng_head552 = __twr_v551;
    __twr_v553 = *(uint64_t*)(_mng_head552);
    _mng_listentry554 = __twr_v553;
    if (_mng_listentry554 == _mng_head552) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v555 = 40ULL;
    __twr_v556 = _mng_listentry554 - __twr_v555;
    _mng_var557 = __twr_v556;
    __twr_v558 = 85ULL;
    __twr_v559 = _mng_var557 + __twr_v558;
    __twr_v560 = *(uint8_t*)(__twr_v559);
    if (__twr_v560 != _mng_op518) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v561 = 72ULL;
    __twr_v562 = _mng_var557 + __twr_v561;
    __twr_v563 = *(uint32_t*)(__twr_v562);
    if (__twr_v563 != _mng_valuesrc1521) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v564 = 76ULL;
    __twr_v565 = _mng_var557 + __twr_v564;
    __twr_v566 = *(uint32_t*)(__twr_v565);
    if (__twr_v566 != _mng_valuesrc2522) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v567 = 0ULL;
    __twr_v568 = 92ULL;
    __twr_v569 = _mng_var557 + __twr_v568;
    *(uint8_t*)(__twr_v569) = __twr_v567;
    _jkl_retv = _mng_var557;
    goto _jkl_epilogue;
    goto __twr_l57;
    __twr_l59:;
    __twr_v570 = (uint64_t)(&IrCommutativity);
    __twr_v571 = __twr_v570 + _mng_op518;
    __twr_v572 = *(uint8_t*)(__twr_v571);
    if (!(__twr_v572)) { goto __twr_l57; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v573 = 72ULL;
    __twr_v574 = _mng_var557 + __twr_v573;
    __twr_v575 = *(uint32_t*)(__twr_v574);
    if (__twr_v575 != _mng_valuesrc2522) { goto __twr_l57; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v576 = 76ULL;
    __twr_v577 = _mng_var557 + __twr_v576;
    __twr_v578 = *(uint32_t*)(__twr_v577);
    if (__twr_v578 != _mng_valuesrc1521) { goto __twr_l57; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v579 = 0ULL;
    __twr_v580 = 92ULL;
    __twr_v581 = _mng_var557 + __twr_v580;
    *(uint8_t*)(__twr_v581) = __twr_v579;
    _jkl_retv = _mng_var557;
    goto _jkl_epilogue;
    __twr_l57:;
    __twr_l55:;
    __twr_v582 = *(uint64_t*)(_mng_listentry554);
    _mng_listentry554 = __twr_v582;
    __twr_l54:;
    if (_mng_listentry554 != _mng_head552) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v583 = 0ULL;
    _jkl_retv = __twr_v583;
    goto _jkl_epilogue;
    __twr_l47:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t IrFindConstant(uint64_t _mng_constant584, uint64_t _mng_op585) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t _mng_head607;
    uint64_t __twr_v608;
    uint64_t _mng_listentry609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t _mng_var612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    _mng_hash586 = _mng_constant584;
    __twr_v587 = 7ULL;
    __twr_v588 = _mng_hash586 >> __twr_v587;
    __twr_v589 = _mng_hash586 ^ __twr_v588;
    _mng_hash586 = __twr_v589;
    __twr_v590 = 14ULL;
    __twr_v591 = _mng_hash586 >> __twr_v590;
    __twr_v592 = _mng_hash586 ^ __twr_v591;
    _mng_hash586 = __twr_v592;
    __twr_v593 = 21ULL;
    __twr_v594 = _mng_hash586 >> __twr_v593;
    __twr_v595 = _mng_hash586 ^ __twr_v594;
    _mng_hash586 = __twr_v595;
    __twr_v596 = 28ULL;
    __twr_v597 = _mng_hash586 >> __twr_v596;
    __twr_v598 = _mng_hash586 ^ __twr_v597;
    _mng_hash586 = __twr_v598;
    __twr_v599 = 97ULL;
    __twr_v600 = _mng_hash586 % __twr_v599;
    _mng_hash586 = __twr_v600;
    __twr_v601 = (uint64_t)(&IrHashTable);
    __twr_v602 = 16ULL;
    __twr_v603 = __twr_v601 + __twr_v602;
    __twr_v604 = 4ULL;
    __twr_v605 = _mng_hash586 << __twr_v604;
    __twr_v606 = __twr_v603 + __twr_v605;
    _mng_head607 = __twr_v606;
    __twr_v608 = *(uint64_t*)(_mng_head607);
    _mng_listentry609 = __twr_v608;
    if (_mng_listentry609 == _mng_head607) { goto __twr_l66; } else { goto __twr_l65; }
    __twr_l65:;
    __twr_v610 = 40ULL;
    __twr_v611 = _mng_listentry609 - __twr_v610;
    _mng_var612 = __twr_v611;
    __twr_v613 = 85ULL;
    __twr_v614 = _mng_var612 + __twr_v613;
    __twr_v615 = *(uint8_t*)(__twr_v614);
    if (__twr_v615 != _mng_op585) { goto __twr_l68; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v616 = 64ULL;
    __twr_v617 = _mng_var612 + __twr_v616;
    __twr_v618 = *(uint64_t*)(__twr_v617);
    if (__twr_v618 != _mng_constant584) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    __twr_v619 = 0ULL;
    __twr_v620 = 92ULL;
    __twr_v621 = _mng_var612 + __twr_v620;
    *(uint8_t*)(__twr_v621) = __twr_v619;
    _jkl_retv = _mng_var612;
    goto _jkl_epilogue;
    __twr_l68:;
    __twr_v622 = *(uint64_t*)(_mng_listentry609);
    _mng_listentry609 = __twr_v622;
    __twr_l67:;
    if (_mng_listentry609 != _mng_head607) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v623 = 0ULL;
    _jkl_retv = __twr_v623;
    goto _jkl_epilogue;
    __twr_l64:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void IrInitializeValueNumber() {
    uint64_t __twr_v624;
    uint64_t _mng_listhead625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t _mng_i628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t _mng_listhead635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    __twr_v624 = (uint64_t)(&IrHashTable);
    _mng_listhead625 = __twr_v624;
    __twr_v626 = 8ULL;
    __twr_v627 = _mng_listhead625 + __twr_v626;
    *(uint64_t*)(__twr_v627) = _mng_listhead625;
    *(uint64_t*)(_mng_listhead625) = _mng_listhead625;
    _mng_i628 = 0ULL;
    __twr_l72:;
    __twr_v629 = (uint64_t)(&IrHashTable);
    __twr_v630 = 16ULL;
    __twr_v631 = __twr_v629 + __twr_v630;
    __twr_v632 = 4ULL;
    __twr_v633 = _mng_i628 << __twr_v632;
    __twr_v634 = __twr_v631 + __twr_v633;
    _mng_listhead635 = __twr_v634;
    __twr_v636 = 8ULL;
    __twr_v637 = _mng_listhead635 + __twr_v636;
    *(uint64_t*)(__twr_v637) = _mng_listhead635;
    *(uint64_t*)(_mng_listhead635) = _mng_listhead635;
    __twr_v638 = 1ULL;
    __twr_v639 = _mng_i628 + __twr_v638;
    _mng_i628 = __twr_v639;
    __twr_l74:;
    __twr_v640 = 97ULL;
    if (_mng_i628 < __twr_v640) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_l71:;
    _jkl_epilogue:;
}

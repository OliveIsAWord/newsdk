#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlStringToNumber(uint64_t _mng_src110, uint64_t _mng_bufsize111, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler112);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine113, uint64_t _mng_arg114, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread115);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex116);
extern void TlReleaseMutex(uint64_t _mng_mutex117);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue118);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore119);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore120);
extern uint64_t TlSystem(uint64_t _mng_cmdline121);
extern void JklCompileProgram(uint64_t _mng_argc122, uint64_t _mng_argv123);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg124);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename125, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock126, uint64_t _mng_filepath127);
extern uint64_t LexLookupSection(uint64_t _mng_name128);
extern void LexPushSection(uint64_t _mng_section129);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope130);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg131);
extern void LexExpandMacro(uint64_t _mng_macro132, uint64_t _mng_token133);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream134, uint64_t _mng_macro135);
extern void LexUninitializeStream(uint64_t _mng_stream136);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream137);
extern void LexPushStream(uint64_t _mng_stream138);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream139, uint64_t _mng_fileblock140, uint64_t _mng_handle141);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock142, uint64_t _mng_handle143);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope144);
extern uint64_t LexResetScope(uint64_t _mng_scope145);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope146);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest147, uint64_t _mng_src148);
extern void LexGetToken(uint64_t _mng_token149);
extern void LexPutbackToken(uint64_t _mng_token150);
extern uint64_t LexMatchToken(uint64_t _mng_token151, uint64_t _mng_type152, uint64_t _mng_subtype153);
extern void LexStreamError(uint64_t _mng_str154, uint64_t _mng_err1155, uint64_t _mng_err2156, uint64_t _mng_err3157);
extern void LexTokenError(uint64_t _mng_token158, uint64_t _mng_str159, uint64_t _mng_err1160, uint64_t _mng_err2161, uint64_t _mng_err3162);
extern uint64_t LexCrunchNumber(uint64_t _mng_token163, uint64_t _mng_buffer164);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node165);
extern uint64_t IrAllocateStack(uint64_t _mng_func166, uint64_t _mng_bytes167);
extern uint64_t IrGetStackOffset(uint64_t _mng_func168, uint64_t _mng_symbol169);
extern void IrValueNumberVariable(uint64_t _mng_var170, uint64_t _mng_valueop171, uint64_t _mng_src1172, uint64_t _mng_src2173);
extern uint64_t IrFindValue(uint64_t _mng_op174, uint64_t _mng_src1175, uint64_t _mng_src2176);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads177, uint64_t _mng_symbol178);
extern void IrKillVariable(uint64_t _mng_var179);
extern void IrValueNumberConstantVariable(uint64_t _mng_var180, uint64_t _mng_constant181, uint64_t _mng_op182);
extern uint64_t IrFindConstant(uint64_t _mng_constant183, uint64_t _mng_op184);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var185);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[7];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst186, uint64_t _mng_value187);
extern void IrRemoveInstruction(uint64_t _mng_inst188);
uint64_t IrHashTable[196];
uint32_t IrNextValueNumber = 1ULL;
void IrValueNumberBarrier(uint64_t _mng_onlyloads189, uint64_t _mng_symbol190) {
    uint64_t __twr_v191;
    uint64_t _mng_head192;
    uint64_t __twr_v193;
    uint64_t _mng_listentry194;
    uint64_t __twr_v195;
    uint64_t _mng_nextentry196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t _mng_var199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t _mng_listentry214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t _mng_prev218;
    uint64_t __twr_v219;
    uint64_t _mng_next220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t _mng_listentry224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t _mng_prev227;
    uint64_t __twr_v228;
    uint64_t _mng_next229;
    uint64_t __twr_v230;
    __twr_v191 = (uint64_t)(&IrHashTable);
    _mng_head192 = __twr_v191;
    __twr_v193 = *(uint64_t*)(_mng_head192);
    _mng_listentry194 = __twr_v193;
    if (_mng_listentry194 == _mng_head192) { goto __twr_l3; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v195 = *(uint64_t*)(_mng_listentry194);
    _mng_nextentry196 = __twr_v195;
    __twr_v197 = 24ULL;
    __twr_v198 = _mng_listentry194 - __twr_v197;
    _mng_var199 = __twr_v198;
    if (!(_mng_onlyloads189)) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v200 = 84ULL;
    __twr_v201 = _mng_var199 + __twr_v200;
    __twr_v202 = *(uint8_t*)(__twr_v201);
    if (!(__twr_v202)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    if (!(_mng_symbol190)) { goto __twr_l9; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v203 = 56ULL;
    __twr_v204 = _mng_var199 + __twr_v203;
    __twr_v205 = *(uint64_t*)(__twr_v204);
    if (__twr_v205 == _mng_symbol190) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v206 = 56ULL;
    __twr_v207 = _mng_var199 + __twr_v206;
    __twr_v208 = *(uint64_t*)(__twr_v207);
    if (__twr_v208) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v209 = 0ULL;
    __twr_v210 = 24ULL;
    __twr_v211 = _mng_var199 + __twr_v210;
    __twr_v212 = 80ULL;
    __twr_v213 = _mng_var199 + __twr_v212;
    *(uint32_t*)(__twr_v213) = __twr_v209;
    _mng_listentry214 = __twr_v211;
    __twr_v215 = 8ULL;
    __twr_v216 = _mng_listentry214 + __twr_v215;
    __twr_v217 = *(uint64_t*)(__twr_v216);
    _mng_prev218 = __twr_v217;
    __twr_v219 = *(uint64_t*)(_mng_listentry214);
    _mng_next220 = __twr_v219;
    *(uint64_t*)(_mng_prev218) = _mng_next220;
    __twr_v221 = _mng_next220 + __twr_v215;
    *(uint64_t*)(__twr_v221) = _mng_prev218;
    __twr_v222 = 40ULL;
    __twr_v223 = _mng_var199 + __twr_v222;
    _mng_listentry224 = __twr_v223;
    __twr_v225 = _mng_listentry224 + __twr_v215;
    __twr_v226 = *(uint64_t*)(__twr_v225);
    _mng_prev227 = __twr_v226;
    __twr_v228 = *(uint64_t*)(_mng_listentry224);
    _mng_next229 = __twr_v228;
    *(uint64_t*)(_mng_prev227) = _mng_next229;
    __twr_v230 = _mng_next229 + __twr_v215;
    *(uint64_t*)(__twr_v230) = _mng_prev227;
    __twr_l8:;
    __twr_l5:;
    _mng_listentry194 = _mng_nextentry196;
    __twr_l4:;
    if (_mng_listentry194 != _mng_head192) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void IrKillValueNumber(uint64_t _mng_value231) {
    uint64_t __twr_v232;
    uint64_t _mng_head233;
    uint64_t __twr_v234;
    uint64_t _mng_listentry235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t _mng_var238;
    uint64_t __twr_v239;
    uint64_t _mng_nextentry240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t _mng_listentry252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t _mng_prev256;
    uint64_t __twr_v257;
    uint64_t _mng_next258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t _mng_listentry262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t _mng_prev265;
    uint64_t __twr_v266;
    uint64_t _mng_next267;
    uint64_t __twr_v268;
    __twr_v232 = (uint64_t)(&IrHashTable);
    _mng_head233 = __twr_v232;
    __twr_v234 = *(uint64_t*)(_mng_head233);
    _mng_listentry235 = __twr_v234;
    if (_mng_listentry235 == _mng_head233) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v236 = 24ULL;
    __twr_v237 = _mng_listentry235 - __twr_v236;
    _mng_var238 = __twr_v237;
    __twr_v239 = *(uint64_t*)(_mng_listentry235);
    _mng_nextentry240 = __twr_v239;
    __twr_v241 = 72ULL;
    __twr_v242 = _mng_var238 + __twr_v241;
    __twr_v243 = *(uint32_t*)(__twr_v242);
    if (__twr_v243 == _mng_value231) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v244 = 76ULL;
    __twr_v245 = _mng_var238 + __twr_v244;
    __twr_v246 = *(uint32_t*)(__twr_v245);
    if (__twr_v246 != _mng_value231) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v247 = 0ULL;
    __twr_v248 = 24ULL;
    __twr_v249 = _mng_var238 + __twr_v248;
    __twr_v250 = 80ULL;
    __twr_v251 = _mng_var238 + __twr_v250;
    *(uint32_t*)(__twr_v251) = __twr_v247;
    _mng_listentry252 = __twr_v249;
    __twr_v253 = 8ULL;
    __twr_v254 = _mng_listentry252 + __twr_v253;
    __twr_v255 = *(uint64_t*)(__twr_v254);
    _mng_prev256 = __twr_v255;
    __twr_v257 = *(uint64_t*)(_mng_listentry252);
    _mng_next258 = __twr_v257;
    *(uint64_t*)(_mng_prev256) = _mng_next258;
    __twr_v259 = _mng_next258 + __twr_v253;
    *(uint64_t*)(__twr_v259) = _mng_prev256;
    __twr_v260 = 40ULL;
    __twr_v261 = _mng_var238 + __twr_v260;
    _mng_listentry262 = __twr_v261;
    __twr_v263 = _mng_listentry262 + __twr_v253;
    __twr_v264 = *(uint64_t*)(__twr_v263);
    _mng_prev265 = __twr_v264;
    __twr_v266 = *(uint64_t*)(_mng_listentry262);
    _mng_next267 = __twr_v266;
    *(uint64_t*)(_mng_prev265) = _mng_next267;
    __twr_v268 = _mng_next267 + __twr_v253;
    *(uint64_t*)(__twr_v268) = _mng_prev265;
    __twr_l16:;
    _mng_listentry235 = _mng_nextentry240;
    __twr_l15:;
    if (_mng_listentry235 != _mng_head233) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_l12:;
    _jkl_epilogue:;
}
void IrKillVariable(uint64_t _mng_var269) {
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t _mng_listentry279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t _mng_prev283;
    uint64_t __twr_v284;
    uint64_t _mng_next285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t _mng_listentry289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t _mng_prev292;
    uint64_t __twr_v293;
    uint64_t _mng_next294;
    uint64_t __twr_v295;
    __twr_v270 = (uint64_t)(&IrKillValueNumber);
    __twr_v271 = 80ULL;
    __twr_v272 = _mng_var269 + __twr_v271;
    __twr_v273 = *(uint32_t*)(__twr_v272);
    ((void (*)(uint64_t))__twr_v270)(__twr_v273);
    __twr_v274 = 85ULL;
    __twr_v275 = _mng_var269 + __twr_v274;
    __twr_v276 = *(uint8_t*)(__twr_v275);
    if (!(__twr_v276)) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v277 = 24ULL;
    __twr_v278 = _mng_var269 + __twr_v277;
    _mng_listentry279 = __twr_v278;
    __twr_v280 = 8ULL;
    __twr_v281 = _mng_listentry279 + __twr_v280;
    __twr_v282 = *(uint64_t*)(__twr_v281);
    _mng_prev283 = __twr_v282;
    __twr_v284 = *(uint64_t*)(_mng_listentry279);
    _mng_next285 = __twr_v284;
    *(uint64_t*)(_mng_prev283) = _mng_next285;
    __twr_v286 = _mng_next285 + __twr_v280;
    *(uint64_t*)(__twr_v286) = _mng_prev283;
    __twr_v287 = 40ULL;
    __twr_v288 = _mng_var269 + __twr_v287;
    _mng_listentry289 = __twr_v288;
    __twr_v290 = _mng_listentry289 + __twr_v280;
    __twr_v291 = *(uint64_t*)(__twr_v290);
    _mng_prev292 = __twr_v291;
    __twr_v293 = *(uint64_t*)(_mng_listentry289);
    _mng_next294 = __twr_v293;
    *(uint64_t*)(_mng_prev292) = _mng_next294;
    __twr_v295 = _mng_next294 + __twr_v280;
    *(uint64_t*)(__twr_v295) = _mng_prev292;
    __twr_l20:;
    __twr_l19:;
    _jkl_epilogue:;
}
void IrGiveOpaqueValueVariable(uint64_t _mng_var296) {
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t _mng_listentry304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t _mng_prev308;
    uint64_t __twr_v309;
    uint64_t _mng_next310;
    uint64_t __twr_v311;
    uint64_t _mng_listentry312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t _mng_prev315;
    uint64_t __twr_v316;
    uint64_t _mng_next317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    __twr_v297 = 85ULL;
    __twr_v298 = _mng_var296 + __twr_v297;
    __twr_v299 = *(uint8_t*)(__twr_v298);
    if (!(__twr_v299)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v300 = 24ULL;
    __twr_v301 = _mng_var296 + __twr_v300;
    __twr_v302 = 40ULL;
    __twr_v303 = _mng_var296 + __twr_v302;
    _mng_listentry304 = __twr_v303;
    __twr_v305 = 8ULL;
    __twr_v306 = _mng_listentry304 + __twr_v305;
    __twr_v307 = *(uint64_t*)(__twr_v306);
    _mng_prev308 = __twr_v307;
    __twr_v309 = *(uint64_t*)(_mng_listentry304);
    _mng_next310 = __twr_v309;
    *(uint64_t*)(_mng_prev308) = _mng_next310;
    __twr_v311 = _mng_next310 + __twr_v305;
    *(uint64_t*)(__twr_v311) = _mng_prev308;
    _mng_listentry312 = __twr_v301;
    __twr_v313 = _mng_listentry312 + __twr_v305;
    __twr_v314 = *(uint64_t*)(__twr_v313);
    _mng_prev315 = __twr_v314;
    __twr_v316 = *(uint64_t*)(_mng_listentry312);
    _mng_next317 = __twr_v316;
    *(uint64_t*)(_mng_prev315) = _mng_next317;
    __twr_v318 = _mng_next317 + __twr_v305;
    *(uint64_t*)(__twr_v318) = _mng_prev315;
    __twr_v319 = (uint64_t)(&IrKillValueNumber);
    __twr_v320 = 80ULL;
    __twr_v321 = _mng_var296 + __twr_v320;
    __twr_v322 = *(uint32_t*)(__twr_v321);
    ((void (*)(uint64_t))__twr_v319)(__twr_v322);
    __twr_l23:;
    __twr_v323 = 0ULL;
    __twr_v324 = 85ULL;
    __twr_v325 = _mng_var296 + __twr_v324;
    *(uint8_t*)(__twr_v325) = __twr_v323;
    __twr_v326 = (uint64_t)(&IrNextValueNumber);
    __twr_v327 = *(uint32_t*)(__twr_v326);
    __twr_v328 = 80ULL;
    __twr_v329 = _mng_var296 + __twr_v328;
    *(uint32_t*)(__twr_v329) = __twr_v327;
    __twr_v330 = 1ULL;
    __twr_v331 = *(uint32_t*)(__twr_v326);
    __twr_v332 = __twr_v331 + __twr_v330;
    *(uint32_t*)(__twr_v326) = __twr_v332;
    __twr_l22:;
    _jkl_epilogue:;
}
void IrValueNumberVariable(uint64_t _mng_var333, uint64_t _mng_valueop334, uint64_t _mng_src1335, uint64_t _mng_src2336) {
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t _mng_byload343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t _mng_byloadof347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t _mng_valuesrc1357;
    uint64_t _mng_valuesrc2358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t _mng_listentry377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t _mng_prev381;
    uint64_t __twr_v382;
    uint64_t _mng_next383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t _mng_listhead390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t _mng_listentry393;
    uint64_t __twr_v394;
    uint64_t _mng_first395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t _mng_vn401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t _mng_hash418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t _mng_listhead439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t _mng_listentry442;
    uint64_t __twr_v443;
    uint64_t _mng_first444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    __twr_v337 = 84ULL;
    __twr_v338 = _mng_var333 + __twr_v337;
    __twr_v339 = *(uint8_t*)(__twr_v338);
    __twr_v340 = _mng_src1335 + __twr_v337;
    __twr_v341 = *(uint8_t*)(__twr_v340);
    __twr_v342 = __twr_v339 | __twr_v341;
    _mng_byload343 = __twr_v342;
    __twr_v344 = 56ULL;
    __twr_v345 = _mng_var333 + __twr_v344;
    __twr_v346 = *(uint64_t*)(__twr_v345);
    _mng_byloadof347 = __twr_v346;
    if (_mng_byloadof347) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v348 = 56ULL;
    __twr_v349 = _mng_src1335 + __twr_v348;
    __twr_v350 = *(uint64_t*)(__twr_v349);
    _mng_byloadof347 = __twr_v350;
    goto __twr_l26;
    __twr_l28:;
    __twr_v351 = 56ULL;
    __twr_v352 = _mng_src1335 + __twr_v351;
    __twr_v353 = *(uint64_t*)(__twr_v352);
    if (!(__twr_v353)) { goto __twr_l26; } else { goto __twr_l29; }
    __twr_l29:;
    _mng_byloadof347 = 0ULL;
    __twr_l26:;
    __twr_v354 = 80ULL;
    __twr_v355 = _mng_src1335 + __twr_v354;
    __twr_v356 = *(uint32_t*)(__twr_v355);
    _mng_valuesrc1357 = __twr_v356;
    if (_mng_valuesrc1357) { goto __twr_l30; } else { goto __twr_l31; }
    __twr_l31:;
    goto _jkl_epilogue;
    __twr_l30:;
    _mng_valuesrc2358 = 0ULL;
    if (!(_mng_src2336)) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v359 = 80ULL;
    __twr_v360 = _mng_src2336 + __twr_v359;
    __twr_v361 = *(uint32_t*)(__twr_v360);
    _mng_valuesrc2358 = __twr_v361;
    __twr_v362 = 84ULL;
    __twr_v363 = _mng_src2336 + __twr_v362;
    __twr_v364 = *(uint8_t*)(__twr_v363);
    __twr_v365 = _mng_byload343 | __twr_v364;
    _mng_byload343 = __twr_v365;
    if (_mng_byloadof347) { goto __twr_l36; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v366 = 56ULL;
    __twr_v367 = _mng_src2336 + __twr_v366;
    __twr_v368 = *(uint64_t*)(__twr_v367);
    _mng_byloadof347 = __twr_v368;
    goto __twr_l34;
    __twr_l36:;
    __twr_v369 = 56ULL;
    __twr_v370 = _mng_src2336 + __twr_v369;
    __twr_v371 = *(uint64_t*)(__twr_v370);
    if (!(__twr_v371)) { goto __twr_l34; } else { goto __twr_l37; }
    __twr_l37:;
    _mng_byloadof347 = 0ULL;
    __twr_l34:;
    if (_mng_valuesrc2358) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    goto _jkl_epilogue;
    __twr_l38:;
    __twr_l32:;
    __twr_v372 = 85ULL;
    __twr_v373 = _mng_var333 + __twr_v372;
    __twr_v374 = *(uint8_t*)(__twr_v373);
    if (!(__twr_v374)) { goto __twr_l42; } else { goto __twr_l41; }
    __twr_l41:;
    __twr_v375 = 40ULL;
    __twr_v376 = _mng_var333 + __twr_v375;
    _mng_listentry377 = __twr_v376;
    __twr_v378 = 8ULL;
    __twr_v379 = _mng_listentry377 + __twr_v378;
    __twr_v380 = *(uint64_t*)(__twr_v379);
    _mng_prev381 = __twr_v380;
    __twr_v382 = *(uint64_t*)(_mng_listentry377);
    _mng_next383 = __twr_v382;
    *(uint64_t*)(_mng_prev381) = _mng_next383;
    __twr_v384 = _mng_next383 + __twr_v378;
    *(uint64_t*)(__twr_v384) = _mng_prev381;
    __twr_v385 = (uint64_t)(&IrKillValueNumber);
    __twr_v386 = 80ULL;
    __twr_v387 = _mng_var333 + __twr_v386;
    __twr_v388 = *(uint32_t*)(__twr_v387);
    ((void (*)(uint64_t))__twr_v385)(__twr_v388);
    goto __twr_l40;
    __twr_l42:;
    __twr_v389 = (uint64_t)(&IrHashTable);
    _mng_listhead390 = __twr_v389;
    __twr_v391 = 24ULL;
    __twr_v392 = _mng_var333 + __twr_v391;
    _mng_listentry393 = __twr_v392;
    __twr_v394 = *(uint64_t*)(_mng_listhead390);
    _mng_first395 = __twr_v394;
    *(uint64_t*)(_mng_listentry393) = _mng_first395;
    __twr_v396 = 8ULL;
    __twr_v397 = _mng_listentry393 + __twr_v396;
    *(uint64_t*)(__twr_v397) = _mng_listhead390;
    __twr_v398 = _mng_first395 + __twr_v396;
    *(uint64_t*)(__twr_v398) = __twr_v392;
    *(uint64_t*)(_mng_listhead390) = __twr_v392;
    __twr_l40:;
    __twr_v399 = (uint64_t)(&IrNextValueNumber);
    __twr_v400 = *(uint32_t*)(__twr_v399);
    _mng_vn401 = __twr_v400;
    __twr_v402 = 1ULL;
    __twr_v403 = __twr_v400 + __twr_v402;
    *(uint32_t*)(__twr_v399) = __twr_v403;
    __twr_v404 = 56ULL;
    __twr_v405 = 80ULL;
    __twr_v406 = _mng_var333 + __twr_v405;
    *(uint32_t*)(__twr_v406) = _mng_vn401;
    __twr_v407 = 84ULL;
    __twr_v408 = _mng_var333 + __twr_v407;
    *(uint8_t*)(__twr_v408) = _mng_byload343;
    __twr_v409 = _mng_var333 + __twr_v404;
    *(uint64_t*)(__twr_v409) = _mng_byloadof347;
    __twr_v410 = 72ULL;
    __twr_v411 = _mng_var333 + __twr_v410;
    *(uint32_t*)(__twr_v411) = _mng_valuesrc1357;
    __twr_v412 = 76ULL;
    __twr_v413 = _mng_var333 + __twr_v412;
    *(uint32_t*)(__twr_v413) = _mng_valuesrc2358;
    __twr_v414 = 85ULL;
    __twr_v415 = _mng_var333 + __twr_v414;
    *(uint8_t*)(__twr_v415) = _mng_valueop334;
    __twr_v416 = _mng_valuesrc1357 ^ _mng_valuesrc2358;
    __twr_v417 = __twr_v416 ^ _mng_valueop334;
    _mng_hash418 = __twr_v417;
    __twr_v419 = 7ULL;
    __twr_v420 = _mng_hash418 >> __twr_v419;
    __twr_v421 = _mng_hash418 ^ __twr_v420;
    _mng_hash418 = __twr_v421;
    __twr_v422 = 14ULL;
    __twr_v423 = _mng_hash418 >> __twr_v422;
    __twr_v424 = _mng_hash418 ^ __twr_v423;
    _mng_hash418 = __twr_v424;
    __twr_v425 = 21ULL;
    __twr_v426 = _mng_hash418 >> __twr_v425;
    __twr_v427 = _mng_hash418 ^ __twr_v426;
    _mng_hash418 = __twr_v427;
    __twr_v428 = 28ULL;
    __twr_v429 = _mng_hash418 >> __twr_v428;
    __twr_v430 = _mng_hash418 ^ __twr_v429;
    _mng_hash418 = __twr_v430;
    __twr_v431 = 97ULL;
    __twr_v432 = _mng_hash418 % __twr_v431;
    _mng_hash418 = __twr_v432;
    __twr_v433 = (uint64_t)(&IrHashTable);
    __twr_v434 = 16ULL;
    __twr_v435 = __twr_v433 + __twr_v434;
    __twr_v436 = 4ULL;
    __twr_v437 = _mng_hash418 << __twr_v436;
    __twr_v438 = __twr_v435 + __twr_v437;
    _mng_listhead439 = __twr_v438;
    __twr_v440 = 40ULL;
    __twr_v441 = _mng_var333 + __twr_v440;
    _mng_listentry442 = __twr_v441;
    __twr_v443 = *(uint64_t*)(_mng_listhead439);
    _mng_first444 = __twr_v443;
    *(uint64_t*)(_mng_listentry442) = _mng_first444;
    __twr_v445 = 8ULL;
    __twr_v446 = _mng_listentry442 + __twr_v445;
    *(uint64_t*)(__twr_v446) = _mng_listhead439;
    __twr_v447 = _mng_first444 + __twr_v445;
    *(uint64_t*)(__twr_v447) = __twr_v441;
    *(uint64_t*)(_mng_listhead439) = __twr_v441;
    __twr_l25:;
    _jkl_epilogue:;
}
void IrValueNumberConstantVariable(uint64_t _mng_var448, uint64_t _mng_constant449, uint64_t _mng_op450) {
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t _mng_listentry456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t _mng_prev460;
    uint64_t __twr_v461;
    uint64_t _mng_next462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t _mng_listhead469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t _mng_listentry472;
    uint64_t __twr_v473;
    uint64_t _mng_first474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t _mng_vn480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t _mng_hash490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t _mng_listhead511;
    uint64_t __twr_v512;
    uint64_t _mng_listentry513;
    uint64_t __twr_v514;
    uint64_t _mng_first515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    __twr_v451 = 85ULL;
    __twr_v452 = _mng_var448 + __twr_v451;
    __twr_v453 = *(uint8_t*)(__twr_v452);
    if (!(__twr_v453)) { goto __twr_l46; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v454 = 40ULL;
    __twr_v455 = _mng_var448 + __twr_v454;
    _mng_listentry456 = __twr_v455;
    __twr_v457 = 8ULL;
    __twr_v458 = _mng_listentry456 + __twr_v457;
    __twr_v459 = *(uint64_t*)(__twr_v458);
    _mng_prev460 = __twr_v459;
    __twr_v461 = *(uint64_t*)(_mng_listentry456);
    _mng_next462 = __twr_v461;
    *(uint64_t*)(_mng_prev460) = _mng_next462;
    __twr_v463 = _mng_next462 + __twr_v457;
    *(uint64_t*)(__twr_v463) = _mng_prev460;
    __twr_v464 = (uint64_t)(&IrKillValueNumber);
    __twr_v465 = 80ULL;
    __twr_v466 = _mng_var448 + __twr_v465;
    __twr_v467 = *(uint32_t*)(__twr_v466);
    ((void (*)(uint64_t))__twr_v464)(__twr_v467);
    goto __twr_l44;
    __twr_l46:;
    __twr_v468 = (uint64_t)(&IrHashTable);
    _mng_listhead469 = __twr_v468;
    __twr_v470 = 24ULL;
    __twr_v471 = _mng_var448 + __twr_v470;
    _mng_listentry472 = __twr_v471;
    __twr_v473 = *(uint64_t*)(_mng_listhead469);
    _mng_first474 = __twr_v473;
    *(uint64_t*)(_mng_listentry472) = _mng_first474;
    __twr_v475 = 8ULL;
    __twr_v476 = _mng_listentry472 + __twr_v475;
    *(uint64_t*)(__twr_v476) = _mng_listhead469;
    __twr_v477 = _mng_first474 + __twr_v475;
    *(uint64_t*)(__twr_v477) = __twr_v471;
    *(uint64_t*)(_mng_listhead469) = __twr_v471;
    __twr_l44:;
    __twr_v478 = (uint64_t)(&IrNextValueNumber);
    __twr_v479 = *(uint32_t*)(__twr_v478);
    _mng_vn480 = __twr_v479;
    __twr_v481 = 1ULL;
    __twr_v482 = __twr_v479 + __twr_v481;
    *(uint32_t*)(__twr_v478) = __twr_v482;
    __twr_v483 = 80ULL;
    __twr_v484 = _mng_var448 + __twr_v483;
    *(uint32_t*)(__twr_v484) = _mng_vn480;
    __twr_v485 = 40ULL;
    __twr_v486 = 64ULL;
    __twr_v487 = _mng_var448 + __twr_v486;
    *(uint64_t*)(__twr_v487) = _mng_constant449;
    __twr_v488 = 85ULL;
    __twr_v489 = _mng_var448 + __twr_v488;
    *(uint8_t*)(__twr_v489) = _mng_op450;
    _mng_hash490 = _mng_constant449;
    __twr_v491 = 7ULL;
    __twr_v492 = _mng_hash490 >> __twr_v491;
    __twr_v493 = _mng_hash490 ^ __twr_v492;
    _mng_hash490 = __twr_v493;
    __twr_v494 = 14ULL;
    __twr_v495 = _mng_hash490 >> __twr_v494;
    __twr_v496 = _mng_hash490 ^ __twr_v495;
    _mng_hash490 = __twr_v496;
    __twr_v497 = 21ULL;
    __twr_v498 = _mng_hash490 >> __twr_v497;
    __twr_v499 = _mng_hash490 ^ __twr_v498;
    _mng_hash490 = __twr_v499;
    __twr_v500 = 28ULL;
    __twr_v501 = _mng_hash490 >> __twr_v500;
    __twr_v502 = _mng_hash490 ^ __twr_v501;
    _mng_hash490 = __twr_v502;
    __twr_v503 = 97ULL;
    __twr_v504 = _mng_hash490 % __twr_v503;
    _mng_hash490 = __twr_v504;
    __twr_v505 = (uint64_t)(&IrHashTable);
    __twr_v506 = 16ULL;
    __twr_v507 = __twr_v505 + __twr_v506;
    __twr_v508 = 4ULL;
    __twr_v509 = _mng_hash490 << __twr_v508;
    __twr_v510 = __twr_v507 + __twr_v509;
    _mng_listhead511 = __twr_v510;
    __twr_v512 = _mng_var448 + __twr_v485;
    _mng_listentry513 = __twr_v512;
    __twr_v514 = *(uint64_t*)(_mng_listhead511);
    _mng_first515 = __twr_v514;
    *(uint64_t*)(_mng_listentry513) = _mng_first515;
    __twr_v516 = 8ULL;
    __twr_v517 = _mng_listentry513 + __twr_v516;
    *(uint64_t*)(__twr_v517) = _mng_listhead511;
    __twr_v518 = _mng_first515 + __twr_v516;
    *(uint64_t*)(__twr_v518) = __twr_v512;
    *(uint64_t*)(_mng_listhead511) = __twr_v512;
    __twr_l43:;
    _jkl_epilogue:;
}
uint64_t IrFindValue(uint64_t _mng_op519, uint64_t _mng_src1520, uint64_t _mng_src2521) {
    uint64_t _jkl_retv;
    uint64_t _mng_valuesrc1522;
    uint64_t _mng_valuesrc2523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t _mng_hash532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t __twr_v546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t _mng_head553;
    uint64_t __twr_v554;
    uint64_t _mng_listentry555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t _mng_var558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    _mng_valuesrc1522 = 0ULL;
    _mng_valuesrc2523 = 0ULL;
    if (!(_mng_src1520)) { goto __twr_l48; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v524 = 80ULL;
    __twr_v525 = _mng_src1520 + __twr_v524;
    __twr_v526 = *(uint32_t*)(__twr_v525);
    _mng_valuesrc1522 = __twr_v526;
    __twr_l48:;
    if (!(_mng_src2521)) { goto __twr_l50; } else { goto __twr_l51; }
    __twr_l51:;
    __twr_v527 = 80ULL;
    __twr_v528 = _mng_src2521 + __twr_v527;
    __twr_v529 = *(uint32_t*)(__twr_v528);
    _mng_valuesrc2523 = __twr_v529;
    __twr_l50:;
    __twr_v530 = _mng_valuesrc1522 ^ _mng_valuesrc2523;
    __twr_v531 = __twr_v530 ^ _mng_op519;
    _mng_hash532 = __twr_v531;
    __twr_v533 = 7ULL;
    __twr_v534 = _mng_hash532 >> __twr_v533;
    __twr_v535 = _mng_hash532 ^ __twr_v534;
    _mng_hash532 = __twr_v535;
    __twr_v536 = 14ULL;
    __twr_v537 = _mng_hash532 >> __twr_v536;
    __twr_v538 = _mng_hash532 ^ __twr_v537;
    _mng_hash532 = __twr_v538;
    __twr_v539 = 21ULL;
    __twr_v540 = _mng_hash532 >> __twr_v539;
    __twr_v541 = _mng_hash532 ^ __twr_v540;
    _mng_hash532 = __twr_v541;
    __twr_v542 = 28ULL;
    __twr_v543 = _mng_hash532 >> __twr_v542;
    __twr_v544 = _mng_hash532 ^ __twr_v543;
    _mng_hash532 = __twr_v544;
    __twr_v545 = 97ULL;
    __twr_v546 = _mng_hash532 % __twr_v545;
    _mng_hash532 = __twr_v546;
    __twr_v547 = (uint64_t)(&IrHashTable);
    __twr_v548 = 16ULL;
    __twr_v549 = __twr_v547 + __twr_v548;
    __twr_v550 = 4ULL;
    __twr_v551 = _mng_hash532 << __twr_v550;
    __twr_v552 = __twr_v549 + __twr_v551;
    _mng_head553 = __twr_v552;
    __twr_v554 = *(uint64_t*)(_mng_head553);
    _mng_listentry555 = __twr_v554;
    if (_mng_listentry555 == _mng_head553) { goto __twr_l53; } else { goto __twr_l52; }
    __twr_l52:;
    __twr_v556 = 40ULL;
    __twr_v557 = _mng_listentry555 - __twr_v556;
    _mng_var558 = __twr_v557;
    __twr_v559 = 85ULL;
    __twr_v560 = _mng_var558 + __twr_v559;
    __twr_v561 = *(uint8_t*)(__twr_v560);
    if (__twr_v561 != _mng_op519) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v562 = 72ULL;
    __twr_v563 = _mng_var558 + __twr_v562;
    __twr_v564 = *(uint32_t*)(__twr_v563);
    if (__twr_v564 != _mng_valuesrc1522) { goto __twr_l59; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v565 = 76ULL;
    __twr_v566 = _mng_var558 + __twr_v565;
    __twr_v567 = *(uint32_t*)(__twr_v566);
    if (__twr_v567 != _mng_valuesrc2523) { goto __twr_l59; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v568 = 0ULL;
    __twr_v569 = 92ULL;
    __twr_v570 = _mng_var558 + __twr_v569;
    *(uint8_t*)(__twr_v570) = __twr_v568;
    _jkl_retv = _mng_var558;
    goto _jkl_epilogue;
    goto __twr_l57;
    __twr_l59:;
    __twr_v571 = (uint64_t)(&IrCommutativity);
    __twr_v572 = __twr_v571 + _mng_op519;
    __twr_v573 = *(uint8_t*)(__twr_v572);
    if (!(__twr_v573)) { goto __twr_l57; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v574 = 72ULL;
    __twr_v575 = _mng_var558 + __twr_v574;
    __twr_v576 = *(uint32_t*)(__twr_v575);
    if (__twr_v576 != _mng_valuesrc2523) { goto __twr_l57; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v577 = 76ULL;
    __twr_v578 = _mng_var558 + __twr_v577;
    __twr_v579 = *(uint32_t*)(__twr_v578);
    if (__twr_v579 != _mng_valuesrc1522) { goto __twr_l57; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v580 = 0ULL;
    __twr_v581 = 92ULL;
    __twr_v582 = _mng_var558 + __twr_v581;
    *(uint8_t*)(__twr_v582) = __twr_v580;
    _jkl_retv = _mng_var558;
    goto _jkl_epilogue;
    __twr_l57:;
    __twr_l55:;
    __twr_v583 = *(uint64_t*)(_mng_listentry555);
    _mng_listentry555 = __twr_v583;
    __twr_l54:;
    if (_mng_listentry555 != _mng_head553) { goto __twr_l52; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v584 = 0ULL;
    _jkl_retv = __twr_v584;
    goto _jkl_epilogue;
    __twr_l47:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t IrFindConstant(uint64_t _mng_constant585, uint64_t _mng_op586) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t _mng_head608;
    uint64_t __twr_v609;
    uint64_t _mng_listentry610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t _mng_var613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t __twr_v618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    _mng_hash587 = _mng_constant585;
    __twr_v588 = 7ULL;
    __twr_v589 = _mng_hash587 >> __twr_v588;
    __twr_v590 = _mng_hash587 ^ __twr_v589;
    _mng_hash587 = __twr_v590;
    __twr_v591 = 14ULL;
    __twr_v592 = _mng_hash587 >> __twr_v591;
    __twr_v593 = _mng_hash587 ^ __twr_v592;
    _mng_hash587 = __twr_v593;
    __twr_v594 = 21ULL;
    __twr_v595 = _mng_hash587 >> __twr_v594;
    __twr_v596 = _mng_hash587 ^ __twr_v595;
    _mng_hash587 = __twr_v596;
    __twr_v597 = 28ULL;
    __twr_v598 = _mng_hash587 >> __twr_v597;
    __twr_v599 = _mng_hash587 ^ __twr_v598;
    _mng_hash587 = __twr_v599;
    __twr_v600 = 97ULL;
    __twr_v601 = _mng_hash587 % __twr_v600;
    _mng_hash587 = __twr_v601;
    __twr_v602 = (uint64_t)(&IrHashTable);
    __twr_v603 = 16ULL;
    __twr_v604 = __twr_v602 + __twr_v603;
    __twr_v605 = 4ULL;
    __twr_v606 = _mng_hash587 << __twr_v605;
    __twr_v607 = __twr_v604 + __twr_v606;
    _mng_head608 = __twr_v607;
    __twr_v609 = *(uint64_t*)(_mng_head608);
    _mng_listentry610 = __twr_v609;
    if (_mng_listentry610 == _mng_head608) { goto __twr_l66; } else { goto __twr_l65; }
    __twr_l65:;
    __twr_v611 = 40ULL;
    __twr_v612 = _mng_listentry610 - __twr_v611;
    _mng_var613 = __twr_v612;
    __twr_v614 = 85ULL;
    __twr_v615 = _mng_var613 + __twr_v614;
    __twr_v616 = *(uint8_t*)(__twr_v615);
    if (__twr_v616 != _mng_op586) { goto __twr_l68; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v617 = 64ULL;
    __twr_v618 = _mng_var613 + __twr_v617;
    __twr_v619 = *(uint64_t*)(__twr_v618);
    if (__twr_v619 != _mng_constant585) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    __twr_v620 = 0ULL;
    __twr_v621 = 92ULL;
    __twr_v622 = _mng_var613 + __twr_v621;
    *(uint8_t*)(__twr_v622) = __twr_v620;
    _jkl_retv = _mng_var613;
    goto _jkl_epilogue;
    __twr_l68:;
    __twr_v623 = *(uint64_t*)(_mng_listentry610);
    _mng_listentry610 = __twr_v623;
    __twr_l67:;
    if (_mng_listentry610 != _mng_head608) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    __twr_v624 = 0ULL;
    _jkl_retv = __twr_v624;
    goto _jkl_epilogue;
    __twr_l64:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void IrInitializeValueNumber() {
    uint64_t __twr_v625;
    uint64_t _mng_listhead626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t _mng_i629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t _mng_listhead636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    __twr_v625 = (uint64_t)(&IrHashTable);
    _mng_listhead626 = __twr_v625;
    __twr_v627 = 8ULL;
    __twr_v628 = _mng_listhead626 + __twr_v627;
    *(uint64_t*)(__twr_v628) = _mng_listhead626;
    *(uint64_t*)(_mng_listhead626) = _mng_listhead626;
    _mng_i629 = 0ULL;
    __twr_l72:;
    __twr_v630 = (uint64_t)(&IrHashTable);
    __twr_v631 = 16ULL;
    __twr_v632 = __twr_v630 + __twr_v631;
    __twr_v633 = 4ULL;
    __twr_v634 = _mng_i629 << __twr_v633;
    __twr_v635 = __twr_v632 + __twr_v634;
    _mng_listhead636 = __twr_v635;
    __twr_v637 = 8ULL;
    __twr_v638 = _mng_listhead636 + __twr_v637;
    *(uint64_t*)(__twr_v638) = _mng_listhead636;
    *(uint64_t*)(_mng_listhead636) = _mng_listhead636;
    __twr_v639 = 1ULL;
    __twr_v640 = _mng_i629 + __twr_v639;
    _mng_i629 = __twr_v640;
    __twr_l74:;
    __twr_v641 = 97ULL;
    if (_mng_i629 < __twr_v641) { goto __twr_l72; } else { goto __twr_l73; }
    __twr_l73:;
    __twr_l71:;
    _jkl_epilogue:;
}

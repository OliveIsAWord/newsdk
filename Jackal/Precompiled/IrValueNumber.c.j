#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_ptr20);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_ptr22);
extern void TlFree(uint64_t _mng_ptr23);
extern uint64_t TlCompareString(uint64_t _mng_str124, uint64_t _mng_str225);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str126, uint64_t _mng_str227, uint64_t _mng_count28);
extern void TlCopyString(uint64_t _mng_dest29, uint64_t _mng_src30, uint64_t _mng_bufsize31);
extern uint64_t TlOpenSource(uint64_t _mng_filename32, uint64_t _mng_handle33);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_handle35);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_created54);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable55, uint64_t _mng_key56);
extern void TlRemoveHashTable(uint64_t _mng_entry57);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable58, uint64_t _mng_enumfunc59);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable60, uint64_t _mng_key61, uint64_t _mng_hash62);
extern uint64_t TlHashString(uint64_t _mng_str63);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable64, uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope67, uint64_t _mng_deletefunc68);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable69);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_name71);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable72, uint64_t _mng_entry73, uint64_t _mng_name74);
extern void TlRemoveSymbolTable(uint64_t _mng_entry75);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array77);
extern void TlInsertDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_byte79);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array80, uint64_t _mng_srcbuf81, uint64_t _mng_length82);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array83, uint64_t _mng_number84, uint64_t _mng_base85);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array86);
extern uint64_t TlMatchPath(uint64_t _mng_path87, uint64_t _mng_pathset88, uint64_t _mng_resultingpath89, uint64_t _mng_handle90);
extern void TlCopyParentPath(uint64_t _mng_srcpath91, uint64_t _mng_destpath92);
extern void TlInitializeZone(uint64_t _mng_zone93, uint64_t _mng_blocksize94);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone95);
extern void TlFreeToZone(uint64_t _mng_zone96, uint64_t _mng_block97);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant98);
extern void TlPunchValue(uint64_t _mng_ptr99, uint64_t _mng_value100, uint64_t _mng_bytes101);
extern void JklCompileProgram(uint64_t _mng_argc102, uint64_t _mng_argv103);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg104);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename105, uint64_t _mng_created106);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock107, uint64_t _mng_filepath108);
extern uint64_t LexLookupSection(uint64_t _mng_name109);
extern void LexPushSection(uint64_t _mng_section110);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[212];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope111);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg112);
extern void LexExpandMacro(uint64_t _mng_macro113, uint64_t _mng_token114);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream115, uint64_t _mng_macro116);
extern void LexUninitializeStream(uint64_t _mng_stream117);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream118);
extern void LexPushStream(uint64_t _mng_stream119);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream120, uint64_t _mng_fileblock121, uint64_t _mng_handle122);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock123, uint64_t _mng_handle124);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope125);
extern uint64_t LexResetScope(uint64_t _mng_scope126);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope127);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest128, uint64_t _mng_src129);
extern void LexGetToken(uint64_t _mng_token130);
extern void LexPutbackToken(uint64_t _mng_token131);
extern uint64_t LexMatchToken(uint64_t _mng_token132, uint64_t _mng_type133, uint64_t _mng_subtype134);
extern void LexStreamError(uint64_t _mng_str135, uint64_t _mng_err1136, uint64_t _mng_err2137, uint64_t _mng_err3138);
extern void LexTokenError(uint64_t _mng_token139, uint64_t _mng_str140, uint64_t _mng_err1141, uint64_t _mng_err2142, uint64_t _mng_err3143);
extern uint64_t LexCrunchNumber(uint64_t _mng_token144, uint64_t _mng_buffer145);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node146);
extern uint64_t IrAllocateStack(uint64_t _mng_func147, uint64_t _mng_bytes148);
extern void IrValueNumberVariable(uint64_t _mng_var149, uint64_t _mng_valueop150, uint64_t _mng_src1151, uint64_t _mng_src2152);
extern uint64_t IrFindValue(uint64_t _mng_op153, uint64_t _mng_src1154, uint64_t _mng_src2155);
extern void IrValueNumberBarrier(uint64_t _mng_onlyloads156, uint64_t _mng_onlynameds157);
extern void IrKillVariable(uint64_t _mng_var158);
extern void IrValueNumberConstantVariable(uint64_t _mng_var159, uint64_t _mng_constant160, uint64_t _mng_op161);
extern uint64_t IrFindConstant(uint64_t _mng_constant162, uint64_t _mng_op163);
extern void IrGiveOpaqueValueVariable(uint64_t _mng_var164);
extern void IrInitializeValueNumber();
extern uint64_t IrCommutativity[7];
extern uint64_t IrCreateConstantBefore(uint64_t _mng_beforeinst165, uint64_t _mng_value166);
extern void IrRemoveInstruction(uint64_t _mng_inst167);
uint64_t IrHashTable[196];
uint32_t IrNextValueNumber = 1ULL;
void IrValueNumberBarrier(uint64_t _mng_onlyloads168, uint64_t _mng_onlynameds169) {
    uint64_t __twr_v170;
    uint64_t _mng_head171;
    uint64_t __twr_v172;
    uint64_t _mng_listentry173;
    uint64_t __twr_v174;
    uint64_t _mng_nextentry175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t _mng_var178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    __twr_v170 = (uint64_t)(&IrHashTable);
    _mng_head171 = __twr_v170;
    __twr_v172 = *(uint64_t*)(__twr_v170);
    _mng_listentry173 = __twr_v172;
    if (__twr_v172 != __twr_v170) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l1:;
    __twr_v174 = *(uint64_t*)(_mng_listentry173);
    _mng_nextentry175 = __twr_v174;
    __twr_v176 = 24ULL;
    __twr_v177 = _mng_listentry173 - __twr_v176;
    _mng_var178 = __twr_v177;
    if (_mng_onlyloads168) { goto __twr_l7; } else { goto __twr_l6; }
    __twr_l7:;
    __twr_v179 = 76ULL;
    __twr_v180 = _mng_var178 + __twr_v179;
    __twr_v181 = *(uint8_t*)(__twr_v180);
    if (__twr_v181) { goto __twr_l6; } else { goto __twr_l4; }
    __twr_l6:;
    if (_mng_onlynameds169) { goto __twr_l8; } else { goto __twr_l5; }
    __twr_l8:;
    __twr_v182 = 77ULL;
    __twr_v183 = _mng_var178 + __twr_v182;
    __twr_v184 = *(uint8_t*)(__twr_v183);
    if (__twr_v184) { goto __twr_l5; } else { goto __twr_l4; }
    __twr_l5:;
    __twr_v185 = 0ULL;
    __twr_v186 = 24ULL;
    __twr_v187 = _mng_var178 + __twr_v186;
    __twr_v188 = 48ULL;
    __twr_v189 = 72ULL;
    __twr_v190 = _mng_var178 + __twr_v189;
    *(uint32_t*)(__twr_v190) = __twr_v185;
    __twr_v191 = 8ULL;
    __twr_v192 = 32ULL;
    __twr_v193 = _mng_var178 + __twr_v192;
    __twr_v194 = *(uint64_t*)(__twr_v193);
    __twr_v195 = *(uint64_t*)(__twr_v187);
    *(uint64_t*)(__twr_v194) = __twr_v195;
    __twr_v196 = __twr_v195 + __twr_v191;
    *(uint64_t*)(__twr_v196) = __twr_v194;
    __twr_v197 = 40ULL;
    __twr_v198 = _mng_var178 + __twr_v197;
    __twr_v199 = _mng_var178 + __twr_v188;
    __twr_v200 = *(uint64_t*)(__twr_v199);
    __twr_v201 = *(uint64_t*)(__twr_v198);
    *(uint64_t*)(__twr_v200) = __twr_v201;
    __twr_v202 = __twr_v201 + __twr_v191;
    *(uint64_t*)(__twr_v202) = __twr_v200;
    __twr_l4:;
    _mng_listentry173 = _mng_nextentry175;
    __twr_l3:;
    if (_mng_listentry173 != _mng_head171) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
}
void IrKillValueNumber(uint64_t _mng_value203) {
    uint64_t __twr_v204;
    uint64_t _mng_head205;
    uint64_t __twr_v206;
    uint64_t _mng_listentry207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t _mng_var210;
    uint64_t __twr_v211;
    uint64_t _mng_nextentry212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    __twr_v204 = (uint64_t)(&IrHashTable);
    _mng_head205 = __twr_v204;
    __twr_v206 = *(uint64_t*)(__twr_v204);
    _mng_listentry207 = __twr_v206;
    if (__twr_v206 != __twr_v204) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l9:;
    __twr_v208 = 24ULL;
    __twr_v209 = _mng_listentry207 - __twr_v208;
    _mng_var210 = __twr_v209;
    __twr_v211 = *(uint64_t*)(_mng_listentry207);
    _mng_nextentry212 = __twr_v211;
    __twr_v213 = 64ULL;
    __twr_v214 = __twr_v209 + __twr_v213;
    __twr_v215 = *(uint32_t*)(__twr_v214);
    if (__twr_v215 == _mng_value203) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v216 = 68ULL;
    __twr_v217 = _mng_var210 + __twr_v216;
    __twr_v218 = *(uint32_t*)(__twr_v217);
    if (__twr_v218 == _mng_value203) { goto __twr_l13; } else { goto __twr_l12; }
    __twr_l13:;
    __twr_v219 = 0ULL;
    __twr_v220 = 24ULL;
    __twr_v221 = _mng_var210 + __twr_v220;
    __twr_v222 = 48ULL;
    __twr_v223 = 72ULL;
    __twr_v224 = _mng_var210 + __twr_v223;
    *(uint32_t*)(__twr_v224) = __twr_v219;
    __twr_v225 = 8ULL;
    __twr_v226 = 32ULL;
    __twr_v227 = _mng_var210 + __twr_v226;
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = *(uint64_t*)(__twr_v221);
    *(uint64_t*)(__twr_v228) = __twr_v229;
    __twr_v230 = __twr_v229 + __twr_v225;
    *(uint64_t*)(__twr_v230) = __twr_v228;
    __twr_v231 = 40ULL;
    __twr_v232 = _mng_var210 + __twr_v231;
    __twr_v233 = _mng_var210 + __twr_v222;
    __twr_v234 = *(uint64_t*)(__twr_v233);
    __twr_v235 = *(uint64_t*)(__twr_v232);
    *(uint64_t*)(__twr_v234) = __twr_v235;
    __twr_v236 = __twr_v235 + __twr_v225;
    *(uint64_t*)(__twr_v236) = __twr_v234;
    __twr_l12:;
    _mng_listentry207 = _mng_nextentry212;
    __twr_l11:;
    if (_mng_listentry207 != _mng_head205) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
}
void IrKillVariable(uint64_t _mng_var237) {
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    __twr_v238 = (uint64_t)(&IrKillValueNumber);
    __twr_v239 = 72ULL;
    __twr_v240 = _mng_var237 + __twr_v239;
    __twr_v241 = *(uint32_t*)(__twr_v240);
    ((void (*)(uint64_t))__twr_v238)(__twr_v241);
    __twr_v242 = 78ULL;
    __twr_v243 = _mng_var237 + __twr_v242;
    __twr_v244 = *(uint8_t*)(__twr_v243);
    if (__twr_v244) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l16:;
    __twr_v245 = 24ULL;
    __twr_v246 = _mng_var237 + __twr_v245;
    __twr_v247 = 8ULL;
    __twr_v248 = 32ULL;
    __twr_v249 = _mng_var237 + __twr_v248;
    __twr_v250 = *(uint64_t*)(__twr_v249);
    __twr_v251 = *(uint64_t*)(__twr_v246);
    *(uint64_t*)(__twr_v250) = __twr_v251;
    __twr_v252 = __twr_v251 + __twr_v247;
    *(uint64_t*)(__twr_v252) = __twr_v250;
    __twr_v253 = 40ULL;
    __twr_v254 = _mng_var237 + __twr_v253;
    __twr_v255 = 48ULL;
    __twr_v256 = _mng_var237 + __twr_v255;
    __twr_v257 = *(uint64_t*)(__twr_v256);
    __twr_v258 = *(uint64_t*)(__twr_v254);
    *(uint64_t*)(__twr_v257) = __twr_v258;
    __twr_v259 = __twr_v258 + __twr_v247;
    *(uint64_t*)(__twr_v259) = __twr_v257;
    __twr_l15:;
}
void IrGiveOpaqueValueVariable(uint64_t _mng_var260) {
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    __twr_v261 = 78ULL;
    __twr_v262 = _mng_var260 + __twr_v261;
    __twr_v263 = *(uint8_t*)(__twr_v262);
    if (__twr_v263) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l18:;
    __twr_v264 = 24ULL;
    __twr_v265 = _mng_var260 + __twr_v264;
    __twr_v266 = 40ULL;
    __twr_v267 = _mng_var260 + __twr_v266;
    __twr_v268 = 8ULL;
    __twr_v269 = 48ULL;
    __twr_v270 = _mng_var260 + __twr_v269;
    __twr_v271 = *(uint64_t*)(__twr_v270);
    __twr_v272 = *(uint64_t*)(__twr_v267);
    *(uint64_t*)(__twr_v271) = __twr_v272;
    __twr_v273 = __twr_v272 + __twr_v268;
    *(uint64_t*)(__twr_v273) = __twr_v271;
    __twr_v274 = 32ULL;
    __twr_v275 = _mng_var260 + __twr_v274;
    __twr_v276 = *(uint64_t*)(__twr_v275);
    __twr_v277 = *(uint64_t*)(__twr_v265);
    *(uint64_t*)(__twr_v276) = __twr_v277;
    __twr_v278 = __twr_v277 + __twr_v268;
    *(uint64_t*)(__twr_v278) = __twr_v276;
    __twr_v279 = (uint64_t)(&IrKillValueNumber);
    __twr_v280 = 72ULL;
    __twr_v281 = _mng_var260 + __twr_v280;
    __twr_v282 = *(uint32_t*)(__twr_v281);
    ((void (*)(uint64_t))__twr_v279)(__twr_v282);
    __twr_l17:;
    __twr_v283 = 0ULL;
    __twr_v284 = 78ULL;
    __twr_v285 = _mng_var260 + __twr_v284;
    *(uint8_t*)(__twr_v285) = __twr_v283;
    __twr_v286 = (uint64_t)(&IrNextValueNumber);
    __twr_v287 = *(uint32_t*)(__twr_v286);
    __twr_v288 = 72ULL;
    __twr_v289 = _mng_var260 + __twr_v288;
    *(uint32_t*)(__twr_v289) = __twr_v287;
    __twr_v290 = 1ULL;
    __twr_v291 = *(uint32_t*)(__twr_v286);
    __twr_v292 = __twr_v291 + __twr_v290;
    *(uint32_t*)(__twr_v286) = __twr_v292;
}
void IrValueNumberVariable(uint64_t _mng_var293, uint64_t _mng_valueop294, uint64_t _mng_src1295, uint64_t _mng_src2296) {
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint8_t _mng_byload303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint8_t _mng_bynamed310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint32_t _mng_valuesrc1314;
    uint64_t __twr_v315;
    uint32_t _mng_valuesrc2316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    __twr_v297 = 76ULL;
    __twr_v298 = _mng_var293 + __twr_v297;
    __twr_v299 = *(uint8_t*)(__twr_v298);
    __twr_v300 = _mng_src1295 + __twr_v297;
    __twr_v301 = *(uint8_t*)(__twr_v300);
    __twr_v302 = __twr_v299 | __twr_v301;
    _mng_byload303 = __twr_v302;
    __twr_v304 = 77ULL;
    __twr_v305 = _mng_var293 + __twr_v304;
    __twr_v306 = *(uint8_t*)(__twr_v305);
    __twr_v307 = _mng_src1295 + __twr_v304;
    __twr_v308 = *(uint8_t*)(__twr_v307);
    __twr_v309 = __twr_v306 | __twr_v308;
    _mng_bynamed310 = __twr_v309;
    __twr_v311 = 72ULL;
    __twr_v312 = _mng_src1295 + __twr_v311;
    __twr_v313 = *(uint32_t*)(__twr_v312);
    _mng_valuesrc1314 = __twr_v313;
    if (__twr_v313) { goto __twr_l19; } else { goto __twr_l20; }
    __twr_l20:;
    return;
    __twr_l19:;
    __twr_v315 = 0ULL;
    _mng_valuesrc2316 = __twr_v315;
    if (_mng_src2296) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l22:;
    __twr_v317 = 72ULL;
    __twr_v318 = _mng_src2296 + __twr_v317;
    __twr_v319 = *(uint32_t*)(__twr_v318);
    _mng_valuesrc2316 = __twr_v319;
    __twr_v320 = 76ULL;
    __twr_v321 = _mng_src2296 + __twr_v320;
    __twr_v322 = *(uint8_t*)(__twr_v321);
    __twr_v323 = _mng_byload303 | __twr_v322;
    _mng_byload303 = __twr_v323;
    __twr_v324 = 77ULL;
    __twr_v325 = _mng_src2296 + __twr_v324;
    __twr_v326 = *(uint8_t*)(__twr_v325);
    __twr_v327 = _mng_bynamed310 | __twr_v326;
    _mng_bynamed310 = __twr_v327;
    if (__twr_v319) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    return;
    __twr_l23:;
    __twr_l21:;
    __twr_v328 = 78ULL;
    __twr_v329 = _mng_var293 + __twr_v328;
    __twr_v330 = *(uint8_t*)(__twr_v329);
    if (__twr_v330) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l26:;
    __twr_v331 = 40ULL;
    __twr_v332 = _mng_var293 + __twr_v331;
    __twr_v333 = 8ULL;
    __twr_v334 = 48ULL;
    __twr_v335 = _mng_var293 + __twr_v334;
    __twr_v336 = *(uint64_t*)(__twr_v335);
    __twr_v337 = *(uint64_t*)(__twr_v332);
    *(uint64_t*)(__twr_v336) = __twr_v337;
    __twr_v338 = __twr_v337 + __twr_v333;
    *(uint64_t*)(__twr_v338) = __twr_v336;
    __twr_v339 = (uint64_t)(&IrKillValueNumber);
    __twr_v340 = 72ULL;
    __twr_v341 = _mng_var293 + __twr_v340;
    __twr_v342 = *(uint32_t*)(__twr_v341);
    ((void (*)(uint64_t))__twr_v339)(__twr_v342);
    goto __twr_l25;
    __twr_l27:;
    __twr_v343 = (uint64_t)(&IrHashTable);
    __twr_v344 = 24ULL;
    __twr_v345 = _mng_var293 + __twr_v344;
    __twr_v346 = *(uint64_t*)(__twr_v343);
    *(uint64_t*)(__twr_v345) = __twr_v346;
    __twr_v347 = 8ULL;
    __twr_v348 = 32ULL;
    __twr_v349 = _mng_var293 + __twr_v348;
    *(uint64_t*)(__twr_v349) = __twr_v343;
    __twr_v350 = __twr_v346 + __twr_v347;
    *(uint64_t*)(__twr_v350) = __twr_v345;
    *(uint64_t*)(__twr_v343) = __twr_v345;
    __twr_l25:;
    __twr_v351 = (uint64_t)(&IrNextValueNumber);
    __twr_v352 = *(uint32_t*)(__twr_v351);
    __twr_v353 = 1ULL;
    __twr_v354 = __twr_v352 + __twr_v353;
    *(uint32_t*)(__twr_v351) = __twr_v354;
    __twr_v355 = 48ULL;
    __twr_v356 = 72ULL;
    __twr_v357 = _mng_var293 + __twr_v356;
    *(uint32_t*)(__twr_v357) = __twr_v352;
    __twr_v358 = 76ULL;
    __twr_v359 = _mng_var293 + __twr_v358;
    *(uint8_t*)(__twr_v359) = _mng_byload303;
    __twr_v360 = 77ULL;
    __twr_v361 = _mng_var293 + __twr_v360;
    *(uint8_t*)(__twr_v361) = _mng_bynamed310;
    __twr_v362 = 40ULL;
    __twr_v363 = 64ULL;
    __twr_v364 = _mng_var293 + __twr_v363;
    *(uint32_t*)(__twr_v364) = _mng_valuesrc1314;
    __twr_v365 = 68ULL;
    __twr_v366 = _mng_var293 + __twr_v365;
    *(uint32_t*)(__twr_v366) = _mng_valuesrc2316;
    __twr_v367 = 78ULL;
    __twr_v368 = _mng_var293 + __twr_v367;
    *(uint8_t*)(__twr_v368) = _mng_valueop294;
    __twr_v369 = _mng_valuesrc1314 ^ _mng_valuesrc2316;
    __twr_v370 = __twr_v369 ^ _mng_valueop294;
    __twr_v371 = 7ULL;
    __twr_v372 = __twr_v370 >> __twr_v371;
    __twr_v373 = __twr_v370 ^ __twr_v372;
    __twr_v374 = 14ULL;
    __twr_v375 = __twr_v373 >> __twr_v374;
    __twr_v376 = __twr_v373 ^ __twr_v375;
    __twr_v377 = 21ULL;
    __twr_v378 = __twr_v376 >> __twr_v377;
    __twr_v379 = __twr_v376 ^ __twr_v378;
    __twr_v380 = 28ULL;
    __twr_v381 = __twr_v379 >> __twr_v380;
    __twr_v382 = __twr_v379 ^ __twr_v381;
    __twr_v383 = 97ULL;
    __twr_v384 = __twr_v382 % __twr_v383;
    __twr_v385 = (uint64_t)(&IrHashTable);
    __twr_v386 = 16ULL;
    __twr_v387 = __twr_v385 + __twr_v386;
    __twr_v388 = 4ULL;
    __twr_v389 = __twr_v384 << __twr_v388;
    __twr_v390 = __twr_v387 + __twr_v389;
    __twr_v391 = _mng_var293 + __twr_v362;
    __twr_v392 = *(uint64_t*)(__twr_v390);
    *(uint64_t*)(__twr_v391) = __twr_v392;
    __twr_v393 = 8ULL;
    __twr_v394 = _mng_var293 + __twr_v355;
    *(uint64_t*)(__twr_v394) = __twr_v390;
    __twr_v395 = __twr_v392 + __twr_v393;
    *(uint64_t*)(__twr_v395) = __twr_v391;
    *(uint64_t*)(__twr_v390) = __twr_v391;
}
void IrValueNumberConstantVariable(uint64_t _mng_var396, uint64_t _mng_constant397, uint64_t _mng_op398) {
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    __twr_v399 = 78ULL;
    __twr_v400 = _mng_var396 + __twr_v399;
    __twr_v401 = *(uint8_t*)(__twr_v400);
    if (__twr_v401) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l29:;
    __twr_v402 = 40ULL;
    __twr_v403 = _mng_var396 + __twr_v402;
    __twr_v404 = 8ULL;
    __twr_v405 = 48ULL;
    __twr_v406 = _mng_var396 + __twr_v405;
    __twr_v407 = *(uint64_t*)(__twr_v406);
    __twr_v408 = *(uint64_t*)(__twr_v403);
    *(uint64_t*)(__twr_v407) = __twr_v408;
    __twr_v409 = __twr_v408 + __twr_v404;
    *(uint64_t*)(__twr_v409) = __twr_v407;
    __twr_v410 = (uint64_t)(&IrKillValueNumber);
    __twr_v411 = 72ULL;
    __twr_v412 = _mng_var396 + __twr_v411;
    __twr_v413 = *(uint32_t*)(__twr_v412);
    ((void (*)(uint64_t))__twr_v410)(__twr_v413);
    goto __twr_l28;
    __twr_l30:;
    __twr_v414 = (uint64_t)(&IrHashTable);
    __twr_v415 = 24ULL;
    __twr_v416 = _mng_var396 + __twr_v415;
    __twr_v417 = *(uint64_t*)(__twr_v414);
    *(uint64_t*)(__twr_v416) = __twr_v417;
    __twr_v418 = 8ULL;
    __twr_v419 = 32ULL;
    __twr_v420 = _mng_var396 + __twr_v419;
    *(uint64_t*)(__twr_v420) = __twr_v414;
    __twr_v421 = __twr_v417 + __twr_v418;
    *(uint64_t*)(__twr_v421) = __twr_v416;
    *(uint64_t*)(__twr_v414) = __twr_v416;
    __twr_l28:;
    __twr_v422 = (uint64_t)(&IrNextValueNumber);
    __twr_v423 = *(uint32_t*)(__twr_v422);
    __twr_v424 = 1ULL;
    __twr_v425 = __twr_v423 + __twr_v424;
    *(uint32_t*)(__twr_v422) = __twr_v425;
    __twr_v426 = 48ULL;
    __twr_v427 = 72ULL;
    __twr_v428 = _mng_var396 + __twr_v427;
    *(uint32_t*)(__twr_v428) = __twr_v423;
    __twr_v429 = 56ULL;
    __twr_v430 = _mng_var396 + __twr_v429;
    *(uint64_t*)(__twr_v430) = _mng_constant397;
    __twr_v431 = 78ULL;
    __twr_v432 = _mng_var396 + __twr_v431;
    *(uint8_t*)(__twr_v432) = _mng_op398;
    __twr_v433 = 7ULL;
    __twr_v434 = _mng_constant397 >> __twr_v433;
    __twr_v435 = _mng_constant397 ^ __twr_v434;
    __twr_v436 = 14ULL;
    __twr_v437 = __twr_v435 >> __twr_v436;
    __twr_v438 = __twr_v435 ^ __twr_v437;
    __twr_v439 = 21ULL;
    __twr_v440 = __twr_v438 >> __twr_v439;
    __twr_v441 = __twr_v438 ^ __twr_v440;
    __twr_v442 = 28ULL;
    __twr_v443 = __twr_v441 >> __twr_v442;
    __twr_v444 = __twr_v441 ^ __twr_v443;
    __twr_v445 = 97ULL;
    __twr_v446 = __twr_v444 % __twr_v445;
    __twr_v447 = (uint64_t)(&IrHashTable);
    __twr_v448 = 16ULL;
    __twr_v449 = __twr_v447 + __twr_v448;
    __twr_v450 = 4ULL;
    __twr_v451 = __twr_v446 << __twr_v450;
    __twr_v452 = __twr_v449 + __twr_v451;
    __twr_v453 = 40ULL;
    __twr_v454 = _mng_var396 + __twr_v453;
    __twr_v455 = *(uint64_t*)(__twr_v452);
    *(uint64_t*)(__twr_v454) = __twr_v455;
    __twr_v456 = 8ULL;
    __twr_v457 = _mng_var396 + __twr_v426;
    *(uint64_t*)(__twr_v457) = __twr_v452;
    __twr_v458 = __twr_v455 + __twr_v456;
    *(uint64_t*)(__twr_v458) = __twr_v454;
    *(uint64_t*)(__twr_v452) = __twr_v454;
}
uint64_t IrFindValue(uint64_t _mng_op459, uint64_t _mng_src1460, uint64_t _mng_src2461) {
    uint64_t __twr_v462;
    uint32_t _mng_valuesrc1463;
    uint32_t _mng_valuesrc2464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t _mng_head493;
    uint64_t __twr_v494;
    uint64_t _mng_listentry495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t _mng_var498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    uint64_t __twr_v504;
    uint64_t __twr_v505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    __twr_v462 = 0ULL;
    _mng_valuesrc1463 = __twr_v462;
    _mng_valuesrc2464 = __twr_v462;
    if (_mng_src1460) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l32:;
    __twr_v465 = 72ULL;
    __twr_v466 = _mng_src1460 + __twr_v465;
    __twr_v467 = *(uint32_t*)(__twr_v466);
    _mng_valuesrc1463 = __twr_v467;
    __twr_l31:;
    if (_mng_src2461) { goto __twr_l34; } else { goto __twr_l33; }
    __twr_l34:;
    __twr_v468 = 72ULL;
    __twr_v469 = _mng_src2461 + __twr_v468;
    __twr_v470 = *(uint32_t*)(__twr_v469);
    _mng_valuesrc2464 = __twr_v470;
    __twr_l33:;
    __twr_v471 = _mng_valuesrc1463 ^ _mng_valuesrc2464;
    __twr_v472 = __twr_v471 ^ _mng_op459;
    __twr_v473 = 7ULL;
    __twr_v474 = __twr_v472 >> __twr_v473;
    __twr_v475 = __twr_v472 ^ __twr_v474;
    __twr_v476 = 14ULL;
    __twr_v477 = __twr_v475 >> __twr_v476;
    __twr_v478 = __twr_v475 ^ __twr_v477;
    __twr_v479 = 21ULL;
    __twr_v480 = __twr_v478 >> __twr_v479;
    __twr_v481 = __twr_v478 ^ __twr_v480;
    __twr_v482 = 28ULL;
    __twr_v483 = __twr_v481 >> __twr_v482;
    __twr_v484 = __twr_v481 ^ __twr_v483;
    __twr_v485 = 97ULL;
    __twr_v486 = __twr_v484 % __twr_v485;
    __twr_v487 = (uint64_t)(&IrHashTable);
    __twr_v488 = 16ULL;
    __twr_v489 = __twr_v487 + __twr_v488;
    __twr_v490 = 4ULL;
    __twr_v491 = __twr_v486 << __twr_v490;
    __twr_v492 = __twr_v489 + __twr_v491;
    _mng_head493 = __twr_v492;
    __twr_v494 = *(uint64_t*)(__twr_v492);
    _mng_listentry495 = __twr_v494;
    if (__twr_v494 != __twr_v492) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l35:;
    __twr_v496 = 40ULL;
    __twr_v497 = _mng_listentry495 - __twr_v496;
    _mng_var498 = __twr_v497;
    __twr_v499 = 78ULL;
    __twr_v500 = __twr_v497 + __twr_v499;
    __twr_v501 = *(uint8_t*)(__twr_v500);
    if (__twr_v501 == _mng_op459) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l39:;
    __twr_v502 = 64ULL;
    __twr_v503 = _mng_var498 + __twr_v502;
    __twr_v504 = *(uint32_t*)(__twr_v503);
    if (__twr_v504 == _mng_valuesrc1463) { goto __twr_l43; } else { goto __twr_l42; }
    __twr_l43:;
    __twr_v505 = 68ULL;
    __twr_v506 = _mng_var498 + __twr_v505;
    __twr_v507 = *(uint32_t*)(__twr_v506);
    if (__twr_v507 == _mng_valuesrc2464) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l41:;
    return _mng_var498;
    goto __twr_l40;
    __twr_l42:;
    __twr_v508 = (uint64_t)(&IrCommutativity);
    __twr_v509 = __twr_v508 + _mng_op459;
    __twr_v510 = *(uint8_t*)(__twr_v509);
    if (__twr_v510) { goto __twr_l46; } else { goto __twr_l40; }
    __twr_l46:;
    __twr_v511 = 64ULL;
    __twr_v512 = _mng_var498 + __twr_v511;
    __twr_v513 = *(uint32_t*)(__twr_v512);
    if (__twr_v513 == _mng_valuesrc2464) { goto __twr_l45; } else { goto __twr_l40; }
    __twr_l45:;
    __twr_v514 = 68ULL;
    __twr_v515 = _mng_var498 + __twr_v514;
    __twr_v516 = *(uint32_t*)(__twr_v515);
    if (__twr_v516 == _mng_valuesrc1463) { goto __twr_l44; } else { goto __twr_l40; }
    __twr_l44:;
    return _mng_var498;
    __twr_l40:;
    __twr_l38:;
    __twr_v517 = *(uint64_t*)(_mng_listentry495);
    _mng_listentry495 = __twr_v517;
    __twr_l37:;
    if (_mng_listentry495 != _mng_head493) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v518 = 0ULL;
    return __twr_v518;
}
uint64_t IrFindConstant(uint64_t _mng_constant519, uint64_t _mng_op520) {
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    uint64_t __twr_v523;
    uint64_t __twr_v524;
    uint64_t __twr_v525;
    uint64_t __twr_v526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t _mng_head541;
    uint64_t __twr_v542;
    uint64_t _mng_listentry543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t _mng_var546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    __twr_v521 = 7ULL;
    __twr_v522 = _mng_constant519 >> __twr_v521;
    __twr_v523 = _mng_constant519 ^ __twr_v522;
    __twr_v524 = 14ULL;
    __twr_v525 = __twr_v523 >> __twr_v524;
    __twr_v526 = __twr_v523 ^ __twr_v525;
    __twr_v527 = 21ULL;
    __twr_v528 = __twr_v526 >> __twr_v527;
    __twr_v529 = __twr_v526 ^ __twr_v528;
    __twr_v530 = 28ULL;
    __twr_v531 = __twr_v529 >> __twr_v530;
    __twr_v532 = __twr_v529 ^ __twr_v531;
    __twr_v533 = 97ULL;
    __twr_v534 = __twr_v532 % __twr_v533;
    __twr_v535 = (uint64_t)(&IrHashTable);
    __twr_v536 = 16ULL;
    __twr_v537 = __twr_v535 + __twr_v536;
    __twr_v538 = 4ULL;
    __twr_v539 = __twr_v534 << __twr_v538;
    __twr_v540 = __twr_v537 + __twr_v539;
    _mng_head541 = __twr_v540;
    __twr_v542 = *(uint64_t*)(__twr_v540);
    _mng_listentry543 = __twr_v542;
    if (__twr_v542 != __twr_v540) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l47:;
    __twr_v544 = 40ULL;
    __twr_v545 = _mng_listentry543 - __twr_v544;
    _mng_var546 = __twr_v545;
    __twr_v547 = 78ULL;
    __twr_v548 = __twr_v545 + __twr_v547;
    __twr_v549 = *(uint8_t*)(__twr_v548);
    if (__twr_v549 == _mng_op520) { goto __twr_l52; } else { goto __twr_l50; }
    __twr_l52:;
    __twr_v550 = 56ULL;
    __twr_v551 = _mng_var546 + __twr_v550;
    __twr_v552 = *(uint64_t*)(__twr_v551);
    if (__twr_v552 == _mng_constant519) { goto __twr_l51; } else { goto __twr_l50; }
    __twr_l51:;
    return _mng_var546;
    __twr_l50:;
    __twr_v553 = *(uint64_t*)(_mng_listentry543);
    _mng_listentry543 = __twr_v553;
    __twr_l49:;
    if (_mng_listentry543 != _mng_head541) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v554 = 0ULL;
    return __twr_v554;
}
void IrInitializeValueNumber() {
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t _mng_i559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    __twr_v555 = (uint64_t)(&IrHashTable);
    __twr_v556 = 0ULL;
    __twr_v557 = 8ULL;
    __twr_v558 = __twr_v555 + __twr_v557;
    *(uint64_t*)(__twr_v558) = __twr_v555;
    *(uint64_t*)(__twr_v555) = __twr_v555;
    _mng_i559 = __twr_v556;
    __twr_v560 = 97ULL;
    goto __twr_l53;
    __twr_l53:;
    __twr_v561 = (uint64_t)(&IrHashTable);
    __twr_v562 = 16ULL;
    __twr_v563 = __twr_v561 + __twr_v562;
    __twr_v564 = 4ULL;
    __twr_v565 = _mng_i559 << __twr_v564;
    __twr_v566 = __twr_v563 + __twr_v565;
    __twr_v567 = 8ULL;
    __twr_v568 = __twr_v566 + __twr_v567;
    *(uint64_t*)(__twr_v568) = __twr_v566;
    *(uint64_t*)(__twr_v566) = __twr_v566;
    __twr_v569 = 1ULL;
    __twr_v570 = _mng_i559 + __twr_v569;
    _mng_i559 = __twr_v570;
    __twr_l55:;
    __twr_v571 = 97ULL;
    if (_mng_i559 < __twr_v571) { goto __twr_l53; } else { goto __twr_l54; }
    __twr_l54:;
}

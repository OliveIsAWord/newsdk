#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_ptr20);
extern uint64_t TlAlloc(uint64_t _mng_bytes21, uint64_t _mng_ptr22);
extern void TlFree(uint64_t _mng_ptr23);
extern uint64_t TlCompareString(uint64_t _mng_str124, uint64_t _mng_str225);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str126, uint64_t _mng_str227, uint64_t _mng_count28);
extern void TlCopyString(uint64_t _mng_dest29, uint64_t _mng_src30, uint64_t _mng_bufsize31);
extern uint64_t TlOpenSource(uint64_t _mng_filename32, uint64_t _mng_handle33);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_handle35);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_created54);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable55, uint64_t _mng_key56);
extern void TlRemoveHashTable(uint64_t _mng_entry57);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable58, uint64_t _mng_enumfunc59);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable60, uint64_t _mng_key61, uint64_t _mng_hash62);
extern uint64_t TlHashString(uint64_t _mng_str63);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable64, uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope67, uint64_t _mng_deletefunc68);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable69);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_name71);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable72, uint64_t _mng_entry73, uint64_t _mng_name74);
extern void TlRemoveSymbolTable(uint64_t _mng_entry75);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array77);
extern void TlInsertDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_byte79);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array80, uint64_t _mng_srcbuf81, uint64_t _mng_length82);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array83, uint64_t _mng_number84, uint64_t _mng_base85);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array86);
extern uint64_t TlMatchPath(uint64_t _mng_path87, uint64_t _mng_pathset88, uint64_t _mng_resultingpath89, uint64_t _mng_handle90);
extern void TlCopyParentPath(uint64_t _mng_srcpath91, uint64_t _mng_destpath92);
extern void TlInitializeZone(uint64_t _mng_zone93, uint64_t _mng_blocksize94);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone95);
extern void TlFreeToZone(uint64_t _mng_zone96, uint64_t _mng_block97);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant98);
extern void TlPunchValue(uint64_t _mng_ptr99, uint64_t _mng_value100, uint64_t _mng_bytes101);
extern void JklCompileProgram(uint64_t _mng_argc102, uint64_t _mng_argv103);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg104);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename105, uint64_t _mng_created106);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock107, uint64_t _mng_filepath108);
extern uint64_t LexLookupSection(uint64_t _mng_name109);
extern void LexPushSection(uint64_t _mng_section110);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[212];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope111);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg112);
extern void LexExpandMacro(uint64_t _mng_macro113, uint64_t _mng_token114);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream115, uint64_t _mng_macro116);
extern void LexUninitializeStream(uint64_t _mng_stream117);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream118);
extern void LexPushStream(uint64_t _mng_stream119);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream120, uint64_t _mng_fileblock121, uint64_t _mng_handle122);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock123, uint64_t _mng_handle124);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope125);
extern uint64_t LexResetScope(uint64_t _mng_scope126);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope127);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest128, uint64_t _mng_src129);
extern void LexGetToken(uint64_t _mng_token130);
extern void LexPutbackToken(uint64_t _mng_token131);
extern uint64_t LexMatchToken(uint64_t _mng_token132, uint64_t _mng_type133, uint64_t _mng_subtype134);
extern void LexStreamError(uint64_t _mng_str135, uint64_t _mng_err1136, uint64_t _mng_err2137, uint64_t _mng_err3138);
extern void LexTokenError(uint64_t _mng_token139, uint64_t _mng_str140, uint64_t _mng_err1141, uint64_t _mng_err2142, uint64_t _mng_err3143);
extern uint64_t LexCrunchNumber(uint64_t _mng_token144, uint64_t _mng_buffer145);
uint64_t LexNextSymbolSection = 0ULL;
uint64_t LexCurrentSection = 0ULL;
uint64_t LexSectionListHead = 0ULL;
uint64_t LexSectionListTail = 0ULL;
uint64_t LexSectionStackElementZone[2];
uint64_t LexSectionHashTable[196];
uint64_t LexSectionStackTop;
uint64_t LexDefaultSection[212];
void LexInitializeSection(uint64_t _mng_section146, uint64_t _mng_name147) {
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t __twr_v150;
    uint64_t __twr_v151;
    uint64_t __twr_v152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    __twr_v148 = (uint64_t)(&TlCopyString);
    __twr_v149 = 48ULL;
    __twr_v150 = _mng_section146 + __twr_v149;
    __twr_v151 = 0ULL;
    __twr_v152 = 1ULL;
    __twr_v153 = __twr_v151;
    __twr_v154 = __twr_v150;
    __twr_v155 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v148)(__twr_v150, _mng_name147, __twr_v155);
    __twr_v156 = _mng_section146 + __twr_v149;
    __twr_v157 = __twr_v156;
    __twr_v158 = _mng_section146;
    __twr_v159 = 40ULL;
    __twr_v160 = _mng_section146 + __twr_v159;
    *(uint64_t*)(__twr_v160) = __twr_v156;
    __twr_v161 = (uint64_t)(&TlInitializeHashTable);
    __twr_v162 = 120ULL;
    __twr_v163 = _mng_section146 + __twr_v162;
    ((void (*)(uint64_t))__twr_v161)(__twr_v163);
    __twr_v164 = 112ULL;
    __twr_v165 = _mng_section146 + __twr_v164;
    *(uint64_t*)(__twr_v165) = __twr_v151;
    __twr_v166 = (uint64_t)(&LexSectionListTail);
    __twr_v167 = *(uint64_t*)(__twr_v166);
    if (__twr_v167) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l2:;
    __twr_v168 = (uint64_t)(&LexSectionListTail);
    __twr_v169 = *(uint64_t*)(__twr_v168);
    __twr_v170 = 112ULL;
    __twr_v171 = __twr_v169 + __twr_v170;
    *(uint64_t*)(__twr_v171) = _mng_section146;
    goto __twr_l1;
    __twr_l3:;
    __twr_v172 = (uint64_t)(&LexSectionListHead);
    *(uint64_t*)(__twr_v172) = _mng_section146;
    __twr_l1:;
    __twr_v173 = (uint64_t)(&LexSectionListTail);
    *(uint64_t*)(__twr_v173) = _mng_section146;
}
void LexInitializeSectionStuff() {
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    __twr_v174 = (uint64_t)(&TlInitializeZone);
    __twr_v175 = (uint64_t)(&LexSectionStackElementZone);
    __twr_v176 = 16ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v174)(__twr_v175, __twr_v176);
    __twr_v177 = (uint64_t)(&TlInitializeHashTable);
    __twr_v178 = (uint64_t)(&LexSectionHashTable);
    ((void (*)(uint64_t))__twr_v177)(__twr_v178);
    __twr_v179 = (uint64_t)(&LexInitializeSection);
    __twr_v180 = (uint64_t)(&LexDefaultSection);
    __twr_v181 = (uint64_t)(&"DEFAULT_SECTION");
    ((void (*)(uint64_t, uint64_t))__twr_v179)(__twr_v180, __twr_v181);
    __twr_v182 = (uint64_t)(&LexCurrentSection);
    *(uint64_t*)(__twr_v182) = __twr_v180;
}
uint64_t LexLookupSection(uint64_t _mng_name183) {
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint8_t _mng_created194;
    uint64_t __twr_v195;
    uint64_t _mng_section196;
    uint64_t __twr_v197;
    __twr_v184 = 0ULL;
    __twr_v185 = 1ULL;
    __twr_v186 = __twr_v184;
    __twr_v187 = _mng_name183;
    __twr_v188 = *(uint8_t*)(_mng_name183);
    if (__twr_v188 == __twr_v184) { goto __twr_l5; } else { goto __twr_l4; }
    __twr_l5:;
    __twr_v189 = (uint64_t)(&LexDefaultSection);
    return __twr_v189;
    __twr_l4:;
    __twr_v190 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v191 = (uint64_t)(&LexSectionHashTable);
    __twr_v192 = 1696ULL;
    __twr_v193 = (uint64_t)(&_mng_created194);
    __twr_v195 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v190)(__twr_v191, __twr_v192, _mng_name183, __twr_v193);
    _mng_section196 = __twr_v195;
    if (_mng_created194) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    return _mng_section196;
    __twr_l6:;
    __twr_v197 = (uint64_t)(&LexInitializeSection);
    ((void (*)(uint64_t, uint64_t))__twr_v197)(_mng_section196, _mng_name183);
    return _mng_section196;
}
void LexPushSection(uint64_t _mng_section198) {
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t _mng_elem202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    __twr_v199 = (uint64_t)(&TlAllocateFromZone);
    __twr_v200 = (uint64_t)(&LexSectionStackElementZone);
    __twr_v201 = ((uint64_t (*)(uint64_t))__twr_v199)(__twr_v200);
    _mng_elem202 = __twr_v201;
    __twr_v203 = (uint64_t)(&LexSectionStackTop);
    __twr_v204 = *(uint64_t*)(__twr_v203);
    __twr_v205 = 0ULL;
    __twr_v206 = __twr_v201;
    *(uint64_t*)(__twr_v201) = __twr_v204;
    __twr_v207 = (uint64_t)(&LexCurrentSection);
    __twr_v208 = *(uint64_t*)(__twr_v207);
    __twr_v209 = 8ULL;
    __twr_v210 = __twr_v201 + __twr_v209;
    *(uint64_t*)(__twr_v210) = __twr_v208;
    *(uint64_t*)(__twr_v203) = __twr_v201;
    *(uint64_t*)(__twr_v207) = _mng_section198;
}
uint64_t LexPopSection() {
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t _mng_elem213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    __twr_v211 = (uint64_t)(&LexSectionStackTop);
    __twr_v212 = *(uint64_t*)(__twr_v211);
    _mng_elem213 = __twr_v212;
    if (__twr_v212) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v214 = 0ULL;
    return __twr_v214;
    __twr_l8:;
    __twr_v215 = 0ULL;
    __twr_v216 = _mng_elem213;
    __twr_v217 = *(uint64_t*)(_mng_elem213);
    __twr_v218 = (uint64_t)(&LexSectionStackTop);
    *(uint64_t*)(__twr_v218) = __twr_v217;
    __twr_v219 = 8ULL;
    __twr_v220 = _mng_elem213 + __twr_v219;
    __twr_v221 = *(uint64_t*)(__twr_v220);
    __twr_v222 = (uint64_t)(&LexCurrentSection);
    *(uint64_t*)(__twr_v222) = __twr_v221;
    __twr_v223 = (uint64_t)(&TlFreeToZone);
    __twr_v224 = (uint64_t)(&LexSectionStackElementZone);
    ((void (*)(uint64_t, uint64_t))__twr_v223)(__twr_v224, _mng_elem213);
    __twr_v225 = 1ULL;
    return __twr_v225;
}

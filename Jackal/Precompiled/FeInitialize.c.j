#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine110, uint64_t _mng_arg111, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread112);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex113);
extern void TlReleaseMutex(uint64_t _mng_mutex114);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue115);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore116);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore117);
extern void JklCompileProgram(uint64_t _mng_argc118, uint64_t _mng_argv119);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg120);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename121, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock122, uint64_t _mng_filepath123);
extern uint64_t LexLookupSection(uint64_t _mng_name124);
extern void LexPushSection(uint64_t _mng_section125);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope126);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg127);
extern void LexExpandMacro(uint64_t _mng_macro128, uint64_t _mng_token129);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream130, uint64_t _mng_macro131);
extern void LexUninitializeStream(uint64_t _mng_stream132);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream133);
extern void LexPushStream(uint64_t _mng_stream134);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream135, uint64_t _mng_fileblock136, uint64_t _mng_handle137);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock138, uint64_t _mng_handle139);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope140);
extern uint64_t LexResetScope(uint64_t _mng_scope141);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope142);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest143, uint64_t _mng_src144);
extern void LexGetToken(uint64_t _mng_token145);
extern void LexPutbackToken(uint64_t _mng_token146);
extern uint64_t LexMatchToken(uint64_t _mng_token147, uint64_t _mng_type148, uint64_t _mng_subtype149);
extern void LexStreamError(uint64_t _mng_str150, uint64_t _mng_err1151, uint64_t _mng_err2152, uint64_t _mng_err3153);
extern void LexTokenError(uint64_t _mng_token154, uint64_t _mng_str155, uint64_t _mng_err1156, uint64_t _mng_err2157, uint64_t _mng_err3158);
extern uint64_t LexCrunchNumber(uint64_t _mng_token159, uint64_t _mng_buffer160);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node161);
uint64_t FeLibraryDirectory[32];
uint64_t FeIncludeDirectory[32];
uint64_t FeInputFile[32];
uint64_t FeOutputFile[32];
uint64_t FeTargetString[32];
uint64_t FeInputFileHandle;
uint64_t FeOutputFileHandle;
uint64_t FeOutputHeaders = 0ULL;
uint64_t JklBinaryName = 0ULL;
uint64_t JklTargetInfo = 0ULL;
uint64_t JklPrimitiveTypeMasks[14] = {
    0x0000000000000000,
    0x0000000000000000,
    0x00000000000000FF,
    0x000000000000FFFF,
    0x00000000FFFFFFFF,
    0xFFFFFFFFFFFFFFFF,
    0x0000000000000000,
    0x0000000000000000,
    0x00000000000000FF,
    0x000000000000FFFF,
    0x00000000FFFFFFFF,
    0xFFFFFFFFFFFFFFFF,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t JklSignExtendedTypeMasks[14] = {
    0x0000000000000000,
    0x0000000000000000,
    0xFFFFFFFFFFFFFF80,
    0xFFFFFFFFFFFF8000,
    0xFFFFFFFF80000000,
    0x8000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0xFFFFFFFFFFFFFF80,
    0xFFFFFFFFFFFF8000,
    0xFFFFFFFF80000000,
    0x8000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
void JklUsage() {
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    __twr_v162 = (uint64_t)(&TlPrintString);
    __twr_v163 = (uint64_t)(&"Usage: ");
    ((void (*)(uint64_t))__twr_v162)(__twr_v163);
    __twr_v164 = (uint64_t)(&JklBinaryName);
    __twr_v165 = *(uint64_t*)(__twr_v164);
    ((void (*)(uint64_t))__twr_v162)(__twr_v165);
    __twr_v166 = (uint64_t)(&" [inputfile] [outputfile] target=[CHost/xr17032/fox32]\n");
    ((void (*)(uint64_t))__twr_v162)(__twr_v166);
    __twr_v167 = (uint64_t)(&TlErrorExit);
    ((void (*)())__twr_v167)();
    __twr_l1:;
    _jkl_epilogue:;
}
uint64_t FeFileBlockHashTable[196];
uint64_t FeIsMacroArgument(uint64_t _mng_arg168) {
    uint64_t _jkl_retv;
    uint64_t _mng_i169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    _mng_i169 = 0ULL;
    __twr_v170 = *(uint8_t*)(_mng_arg168);
    if (!(__twr_v170)) { goto __twr_l4; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v171 = _mng_arg168 + _mng_i169;
    __twr_v172 = *(uint8_t*)(__twr_v171);
    __twr_v173 = 61ULL;
    if (__twr_v172 != __twr_v173) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_v174 = _mng_arg168 + _mng_i169;
    _jkl_retv = __twr_v174;
    goto _jkl_epilogue;
    __twr_l6:;
    __twr_v175 = 1ULL;
    __twr_v176 = _mng_i169 + __twr_v175;
    _mng_i169 = __twr_v176;
    __twr_l5:;
    __twr_v177 = _mng_arg168 + _mng_i169;
    __twr_v178 = *(uint8_t*)(__twr_v177);
    if (__twr_v178) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v179 = 0ULL;
    _jkl_retv = __twr_v179;
    goto _jkl_epilogue;
    __twr_l2:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void FeParseArguments(uint64_t _mng_argc180, uint64_t _mng_argv181) {
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t _mng_foundinput185;
    uint64_t _mng_foundoutput186;
    uint64_t _mng_foundtarget187;
    uint64_t _mng_i188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    __twr_v182 = 0ULL;
    __twr_v183 = (uint64_t)(&FeLibraryDirectory);
    *(uint8_t*)(__twr_v183) = __twr_v182;
    __twr_v184 = (uint64_t)(&FeIncludeDirectory);
    *(uint8_t*)(__twr_v184) = __twr_v182;
    _mng_foundinput185 = 0ULL;
    _mng_foundoutput186 = 0ULL;
    _mng_foundtarget187 = 0ULL;
    _mng_i188 = 1ULL;
    if (_mng_argc180 <= _mng_i188) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v189 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v190 = 3ULL;
    __twr_v191 = _mng_i188 << __twr_v190;
    __twr_v192 = _mng_argv181 + __twr_v191;
    __twr_v193 = *(uint64_t*)(__twr_v192);
    __twr_v194 = (uint64_t)(&"libdir=");
    __twr_v195 = 7ULL;
    __twr_v196 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v189)(__twr_v193, __twr_v194, __twr_v195);
    if (__twr_v196) { goto __twr_l14; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v197 = (uint64_t)(&TlCopyString);
    __twr_v198 = (uint64_t)(&FeLibraryDirectory);
    __twr_v199 = 3ULL;
    __twr_v200 = _mng_i188 << __twr_v199;
    __twr_v201 = _mng_argv181 + __twr_v200;
    __twr_v202 = *(uint64_t*)(__twr_v201);
    __twr_v203 = 7ULL;
    __twr_v204 = __twr_v202 + __twr_v203;
    __twr_v205 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v197)(__twr_v198, __twr_v204, __twr_v205);
    goto __twr_l12;
    __twr_l14:;
    __twr_v206 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v207 = 3ULL;
    __twr_v208 = _mng_i188 << __twr_v207;
    __twr_v209 = _mng_argv181 + __twr_v208;
    __twr_v210 = *(uint64_t*)(__twr_v209);
    __twr_v211 = (uint64_t)(&"incdir=");
    __twr_v212 = 7ULL;
    __twr_v213 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v206)(__twr_v210, __twr_v211, __twr_v212);
    if (__twr_v213) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v214 = (uint64_t)(&TlCopyString);
    __twr_v215 = (uint64_t)(&FeIncludeDirectory);
    __twr_v216 = 3ULL;
    __twr_v217 = _mng_i188 << __twr_v216;
    __twr_v218 = _mng_argv181 + __twr_v217;
    __twr_v219 = *(uint64_t*)(__twr_v218);
    __twr_v220 = 7ULL;
    __twr_v221 = __twr_v219 + __twr_v220;
    __twr_v222 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v214)(__twr_v215, __twr_v221, __twr_v222);
    goto __twr_l12;
    __twr_l16:;
    __twr_v223 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v224 = 3ULL;
    __twr_v225 = _mng_i188 << __twr_v224;
    __twr_v226 = _mng_argv181 + __twr_v225;
    __twr_v227 = *(uint64_t*)(__twr_v226);
    __twr_v228 = (uint64_t)(&"target=");
    __twr_v229 = 7ULL;
    __twr_v230 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v223)(__twr_v227, __twr_v228, __twr_v229);
    if (__twr_v230) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v231 = (uint64_t)(&TlCopyString);
    __twr_v232 = (uint64_t)(&FeTargetString);
    __twr_v233 = 3ULL;
    __twr_v234 = _mng_i188 << __twr_v233;
    __twr_v235 = _mng_argv181 + __twr_v234;
    __twr_v236 = *(uint64_t*)(__twr_v235);
    __twr_v237 = 7ULL;
    __twr_v238 = __twr_v236 + __twr_v237;
    __twr_v239 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v231)(__twr_v232, __twr_v238, __twr_v239);
    _mng_foundtarget187 = 1ULL;
    goto __twr_l12;
    __twr_l18:;
    __twr_v240 = (uint64_t)(&TlCompareStringWithMax);
    __twr_v241 = 3ULL;
    __twr_v242 = _mng_i188 << __twr_v241;
    __twr_v243 = _mng_argv181 + __twr_v242;
    __twr_v244 = *(uint64_t*)(__twr_v243);
    __twr_v245 = (uint64_t)(&"header=");
    __twr_v246 = 7ULL;
    __twr_v247 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v240)(__twr_v244, __twr_v245, __twr_v246);
    if (__twr_v247) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v248 = 3ULL;
    __twr_v249 = _mng_i188 << __twr_v248;
    __twr_v250 = _mng_argv181 + __twr_v249;
    __twr_v251 = *(uint64_t*)(__twr_v250);
    __twr_v252 = 7ULL;
    __twr_v253 = __twr_v251 + __twr_v252;
    __twr_v254 = (uint64_t)(&FeOutputHeaders);
    *(uint64_t*)(__twr_v254) = __twr_v253;
    goto __twr_l12;
    __twr_l20:;
    __twr_v255 = (uint64_t)(&FeIsMacroArgument);
    __twr_v256 = 3ULL;
    __twr_v257 = _mng_i188 << __twr_v256;
    __twr_v258 = _mng_argv181 + __twr_v257;
    __twr_v259 = *(uint64_t*)(__twr_v258);
    __twr_v260 = ((uint64_t (*)(uint64_t))__twr_v255)(__twr_v259);
    if (!(__twr_v260)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v261 = (uint64_t)(&LexDefineMacroFromArgumentString);
    __twr_v262 = 3ULL;
    __twr_v263 = _mng_i188 << __twr_v262;
    __twr_v264 = _mng_argv181 + __twr_v263;
    __twr_v265 = *(uint64_t*)(__twr_v264);
    ((void (*)(uint64_t))__twr_v261)(__twr_v265);
    goto __twr_l12;
    __twr_l22:;
    if (!(_mng_foundinput185)) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    if (!(_mng_foundoutput186)) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v266 = (uint64_t)(&TlPrintString);
    __twr_v267 = (uint64_t)(&"Too many arguments specified!\n");
    ((void (*)(uint64_t))__twr_v266)(__twr_v267);
    __twr_v268 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v268)();
    __twr_l25:;
    _mng_foundoutput186 = 1ULL;
    __twr_v269 = (uint64_t)(&TlCopyString);
    __twr_v270 = (uint64_t)(&FeOutputFile);
    __twr_v271 = 3ULL;
    __twr_v272 = _mng_i188 << __twr_v271;
    __twr_v273 = _mng_argv181 + __twr_v272;
    __twr_v274 = *(uint64_t*)(__twr_v273);
    __twr_v275 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v269)(__twr_v270, __twr_v274, __twr_v275);
    goto __twr_l12;
    __twr_l24:;
    _mng_foundinput185 = 1ULL;
    __twr_v276 = (uint64_t)(&TlCopyString);
    __twr_v277 = (uint64_t)(&FeInputFile);
    __twr_v278 = 3ULL;
    __twr_v279 = _mng_i188 << __twr_v278;
    __twr_v280 = _mng_argv181 + __twr_v279;
    __twr_v281 = *(uint64_t*)(__twr_v280);
    __twr_v282 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v276)(__twr_v277, __twr_v281, __twr_v282);
    __twr_l12:;
    __twr_v283 = 1ULL;
    __twr_v284 = _mng_i188 + __twr_v283;
    _mng_i188 = __twr_v284;
    __twr_l11:;
    if (_mng_i188 < _mng_argc180) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (_mng_foundinput185) { goto __twr_l27; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v285 = (uint64_t)(&TlPrintString);
    __twr_v286 = (uint64_t)(&"Error: No input file specified.\n");
    ((void (*)(uint64_t))__twr_v285)(__twr_v286);
    __twr_v287 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v287)();
    __twr_l27:;
    if (_mng_foundoutput186) { goto __twr_l29; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v288 = (uint64_t)(&TlPrintString);
    __twr_v289 = (uint64_t)(&"Error: No output file specified.\n");
    ((void (*)(uint64_t))__twr_v288)(__twr_v289);
    __twr_v290 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v290)();
    __twr_l29:;
    if (_mng_foundtarget187) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v291 = (uint64_t)(&TlPrintString);
    __twr_v292 = (uint64_t)(&"Error: No target specified.\n");
    ((void (*)(uint64_t))__twr_v291)(__twr_v292);
    __twr_v293 = (uint64_t)(&JklUsage);
    ((void (*)())__twr_v293)();
    __twr_l31:;
    __twr_l8:;
    _jkl_epilogue:;
}
uint64_t FeCreateFileBlock(uint64_t _mng_includename294, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t _mng_created299;
    uint64_t _mng_fileblock300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    __twr_v295 = (uint64_t)(&TlLookupOrAllocateEntryHashTable);
    __twr_v296 = (uint64_t)(&FeFileBlockHashTable);
    __twr_v297 = 560ULL;
    __twr_v298 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v295)(__twr_v296, __twr_v297, _mng_includename294, (uint64_t)(&_mng_created299));
    _mng_fileblock300 = __twr_v298;
    if (!(_mng_created299)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v301 = (uint64_t)(&TlCopyString);
    __twr_v302 = 304ULL;
    __twr_v303 = _mng_fileblock300 + __twr_v302;
    __twr_v304 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v301)(__twr_v303, _mng_includename294, __twr_v304);
    __twr_v305 = 40ULL;
    __twr_v306 = _mng_fileblock300 + __twr_v305;
    *(uint64_t*)(__twr_v306) = __twr_v303;
    __twr_l34:;
    _jkl_retv = _mng_fileblock300;
    goto _jkl_epilogue;
    __twr_l33:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created299;
    return _jkl_retv;
}
void FeCopyPathFileBlock(uint64_t _mng_fileblock307, uint64_t _mng_filepath308) {
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    __twr_v309 = (uint64_t)(&TlCopyString);
    __twr_v310 = 48ULL;
    __twr_v311 = _mng_fileblock307 + __twr_v310;
    __twr_v312 = 256ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v309)(__twr_v311, _mng_filepath308, __twr_v312);
    __twr_l36:;
    _jkl_epilogue:;
}
extern uint64_t CtTargetInfo[12];
extern uint64_t FoxTargetInfo[12];
extern uint64_t XrTargetInfo[12];
uint64_t TrgInfoRecords[8] = {
    (uint64_t)(&CtTargetInfo),
    (uint64_t)(&FoxTargetInfo),
    (uint64_t)(&XrTargetInfo),
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
void TrgInitialize() {
    uint64_t __twr_v313;
    uint64_t _mng_target314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    __twr_v313 = (uint64_t)(&TrgInfoRecords);
    _mng_target314 = __twr_v313;
    __twr_v315 = *(uint64_t*)(_mng_target314);
    if (!(__twr_v315)) { goto __twr_l39; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v316 = (uint64_t)(&TlCompareString);
    __twr_v317 = (uint64_t)(&FeTargetString);
    __twr_v318 = *(uint64_t*)(_mng_target314);
    __twr_v319 = *(uint64_t*)(__twr_v318);
    __twr_v320 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v316)(__twr_v317, __twr_v319);
    if (__twr_v320) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v321 = *(uint64_t*)(_mng_target314);
    __twr_v322 = (uint64_t)(&JklTargetInfo);
    *(uint64_t*)(__twr_v322) = __twr_v321;
    goto _jkl_epilogue;
    __twr_l41:;
    __twr_v323 = 8ULL;
    __twr_v324 = _mng_target314 + __twr_v323;
    _mng_target314 = __twr_v324;
    __twr_l40:;
    __twr_v325 = *(uint64_t*)(_mng_target314);
    if (__twr_v325) { goto __twr_l38; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v326 = (uint64_t)(&TlUserError);
    __twr_v327 = (uint64_t)(&"Unknown target specified");
    __twr_v328 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v326)(__twr_v327, __twr_v328, __twr_v328, __twr_v328);
    __twr_l37:;
    _jkl_epilogue:;
}
void FeInitialize(uint64_t _mng_argc329, uint64_t _mng_argv330) {
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t _mng_status340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    __twr_v331 = (uint64_t)(&TlInitializeHashTable);
    __twr_v332 = (uint64_t)(&FeFileBlockHashTable);
    ((void (*)(uint64_t))__twr_v331)(__twr_v332);
    __twr_v333 = (uint64_t)(&LexInitializePreprocessor);
    ((void (*)())__twr_v333)();
    __twr_v334 = (uint64_t)(&FeParseArguments);
    ((void (*)(uint64_t, uint64_t))__twr_v334)(_mng_argc329, _mng_argv330);
    __twr_v335 = (uint64_t)(&TlOpenSource);
    __twr_v336 = (uint64_t)(&FeInputFile);
    __twr_v337 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v335)(__twr_v336, (uint64_t)(&__twr_v338));
    __twr_v339 = (uint64_t)(&FeInputFileHandle);
    *(uint64_t*)(__twr_v339) = __twr_v338;
    _mng_status340 = __twr_v337;
    if (!(_mng_status340)) { goto __twr_l44; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v341 = (uint64_t)(&TlUserError);
    __twr_v342 = (uint64_t)(&"Failed to open source file.");
    __twr_v343 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v341)(__twr_v342, __twr_v343, __twr_v343, __twr_v343);
    __twr_l44:;
    __twr_v344 = (uint64_t)(&TrgInitialize);
    ((void (*)())__twr_v344)();
    __twr_v345 = (uint64_t)(&LexInitialize);
    ((void (*)())__twr_v345)();
    __twr_v346 = (uint64_t)(&PrsInitialize);
    ((void (*)())__twr_v346)();
    __twr_l43:;
    _jkl_epilogue:;
}
void FeOutputHeaderDependencies() {
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t _mng_handle351;
    uint64_t _mng_status352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t _mng_headerbuf358[11];
    uint64_t __twr_v359;
    uint64_t _mng_head360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t _mng_entry366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t _mng_hashentry369;
    uint64_t _mng_fileblock370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    __twr_v347 = (uint64_t)(&TlOpenDestination);
    __twr_v348 = (uint64_t)(&FeOutputHeaders);
    __twr_v349 = *(uint64_t*)(__twr_v348);
    __twr_v350 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v347)(__twr_v349, (uint64_t)(&_mng_handle351));
    _mng_status352 = __twr_v350;
    if (!(_mng_status352)) { goto __twr_l47; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v353 = (uint64_t)(&TlUserError);
    __twr_v354 = (uint64_t)(&"Failed to open header dependencies file.");
    __twr_v355 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v353)(__twr_v354, __twr_v355, __twr_v355, __twr_v355);
    __twr_l47:;
    __twr_v356 = (uint64_t)(&TlInitializeDynamicBuffer);
    __twr_v357 = (uint64_t)(&_mng_headerbuf358);
    ((void (*)(uint64_t))__twr_v356)(__twr_v357);
    __twr_v359 = (uint64_t)(&FeFileBlockHashTable);
    _mng_head360 = __twr_v359;
    __twr_v361 = 8ULL;
    __twr_v362 = _mng_head360 + __twr_v361;
    __twr_v363 = *(uint64_t*)(__twr_v362);
    __twr_v364 = __twr_v363 + __twr_v361;
    __twr_v365 = *(uint64_t*)(__twr_v364);
    _mng_entry366 = __twr_v365;
    if (_mng_head360 == _mng_entry366) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v367 = 16ULL;
    __twr_v368 = _mng_entry366 - __twr_v367;
    _mng_hashentry369 = __twr_v368;
    _mng_fileblock370 = _mng_hashentry369;
    __twr_v371 = (uint64_t)(&TlCopyIntoDynamicBuffer);
    __twr_v372 = (uint64_t)(&_mng_headerbuf358);
    __twr_v373 = 48ULL;
    __twr_v374 = _mng_fileblock370 + __twr_v373;
    __twr_v375 = (uint64_t)(&TlMeasureString);
    __twr_v376 = ((uint64_t (*)(uint64_t))__twr_v375)(__twr_v374);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v371)(__twr_v372, __twr_v374, __twr_v376);
    __twr_v377 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v378 = 10ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v377)(__twr_v372, __twr_v378);
    __twr_v379 = 8ULL;
    __twr_v380 = _mng_entry366 + __twr_v379;
    __twr_v381 = *(uint64_t*)(__twr_v380);
    _mng_entry366 = __twr_v381;
    __twr_l51:;
    if (_mng_head360 != _mng_entry366) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_v382 = (uint64_t)(&TlWriteFile);
    __twr_v383 = (uint64_t)(&_mng_headerbuf358);
    __twr_v384 = *(uint64_t*)(__twr_v383);
    __twr_v385 = 16ULL;
    __twr_v386 = __twr_v383 + __twr_v385;
    __twr_v387 = *(uint64_t*)(__twr_v386);
    __twr_v388 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v382)(_mng_handle351, __twr_v384, __twr_v387);
    __twr_v389 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v389)(__twr_v383);
    __twr_l46:;
    _jkl_epilogue:;
}
extern void IrGenerate();
extern void IrSimplify();
extern void IrEliminateDeadVariables();
void JklCompileProgram(uint64_t _mng_argc390, uint64_t _mng_argv391) {
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t _mng_status404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    __twr_v392 = *(uint64_t*)(_mng_argv391);
    __twr_v393 = (uint64_t)(&JklBinaryName);
    *(uint64_t*)(__twr_v393) = __twr_v392;
    __twr_v394 = (uint64_t)(&FeInitialize);
    ((void (*)(uint64_t, uint64_t))__twr_v394)(_mng_argc390, _mng_argv391);
    __twr_v395 = (uint64_t)(&PrsProgram);
    ((void (*)())__twr_v395)();
    __twr_v396 = (uint64_t)(&IrGenerate);
    ((void (*)())__twr_v396)();
    __twr_v397 = (uint64_t)(&IrSimplify);
    ((void (*)())__twr_v397)();
    __twr_v398 = (uint64_t)(&IrEliminateDeadVariables);
    ((void (*)())__twr_v398)();
    __twr_v399 = (uint64_t)(&TlOpenDestination);
    __twr_v400 = (uint64_t)(&FeOutputFile);
    __twr_v401 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v399)(__twr_v400, (uint64_t)(&__twr_v402));
    __twr_v403 = (uint64_t)(&FeOutputFileHandle);
    *(uint64_t*)(__twr_v403) = __twr_v402;
    _mng_status404 = __twr_v401;
    if (!(_mng_status404)) { goto __twr_l53; } else { goto __twr_l54; }
    __twr_l54:;
    __twr_v405 = (uint64_t)(&TlUserError);
    __twr_v406 = (uint64_t)(&"Failed to open destination file.");
    __twr_v407 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v405)(__twr_v406, __twr_v407, __twr_v407, __twr_v407);
    __twr_l53:;
    __twr_v408 = (uint64_t)(&JklTargetInfo);
    __twr_v409 = *(uint64_t*)(__twr_v408);
    __twr_v410 = 8ULL;
    __twr_v411 = __twr_v409 + __twr_v410;
    __twr_v412 = *(uint64_t*)(__twr_v411);
    ((void (*)())__twr_v412)();
    __twr_v413 = (uint64_t)(&FeOutputHeaders);
    __twr_v414 = *(uint64_t*)(__twr_v413);
    if (!(__twr_v414)) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v415 = (uint64_t)(&FeOutputHeaderDependencies);
    ((void (*)())__twr_v415)();
    __twr_l55:;
    __twr_l52:;
    _jkl_epilogue:;
}

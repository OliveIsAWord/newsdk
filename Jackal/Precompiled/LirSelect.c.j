#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern void JklCompileProgram(uint64_t _mng_argc110, uint64_t _mng_argv111);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg112);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename113, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock114, uint64_t _mng_filepath115);
extern uint64_t LexLookupSection(uint64_t _mng_name116);
extern void LexPushSection(uint64_t _mng_section117);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope118);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg119);
extern void LexExpandMacro(uint64_t _mng_macro120, uint64_t _mng_token121);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream122, uint64_t _mng_macro123);
extern void LexUninitializeStream(uint64_t _mng_stream124);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream125);
extern void LexPushStream(uint64_t _mng_stream126);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream127, uint64_t _mng_fileblock128, uint64_t _mng_handle129);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock130, uint64_t _mng_handle131);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope132);
extern uint64_t LexResetScope(uint64_t _mng_scope133);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope134);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest135, uint64_t _mng_src136);
extern void LexGetToken(uint64_t _mng_token137);
extern void LexPutbackToken(uint64_t _mng_token138);
extern uint64_t LexMatchToken(uint64_t _mng_token139, uint64_t _mng_type140, uint64_t _mng_subtype141);
extern void LexStreamError(uint64_t _mng_str142, uint64_t _mng_err1143, uint64_t _mng_err2144, uint64_t _mng_err3145);
extern void LexTokenError(uint64_t _mng_token146, uint64_t _mng_str147, uint64_t _mng_err1148, uint64_t _mng_err2149, uint64_t _mng_err3150);
extern uint64_t LexCrunchNumber(uint64_t _mng_token151, uint64_t _mng_buffer152);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node153);
extern uint64_t IrAllocateStack(uint64_t _mng_func154, uint64_t _mng_bytes155);
extern uint64_t IrGetStackOffset(uint64_t _mng_func156, uint64_t _mng_symbol157);
extern uint64_t LirCreateInstruction(uint64_t _mng_type158, uint64_t _mng_machtype159);
extern void LirInsertInstructionTail(uint64_t _mng_lirinst160);
extern void LirRemoveInstruction(uint64_t _mng_lirinst161);
extern uint64_t LirGetLabel(uint64_t _mng_oldlabel162);
extern uint64_t LirCreateRegister();
extern uint64_t LirGetRegister(uint64_t _mng_oldvariable163);
extern uint64_t LirSelect(uint64_t _mng_inst164);
extern uint64_t LirSelectOrGetRegister(uint64_t _mng_var165);
extern void LirSelectForFunction(uint64_t _mng_funcsym166);
extern void LirAllocateRegistersForFunction(uint64_t _mng_funcsym167);
extern void LirInsertInstructionBefore(uint64_t _mng_beforeinst168, uint64_t _mng_inst169);
extern void LirInsertInstructionAfter(uint64_t _mng_afterinst170, uint64_t _mng_inst171);
extern uint64_t LirGetSpillOffset(uint64_t _mng_irfunc172, uint64_t _mng_spilledreg173);
extern uint64_t LirCurrentFunction;
uint64_t LirCurrentFunction;
uint64_t LirCreateInstruction(uint64_t _mng_type174, uint64_t _mng_machtype175) {
    uint64_t _jkl_retv;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t _mng_lirinst179;
    uint64_t _mng_status180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    __twr_v176 = (uint64_t)(&TlBumpAlloc);
    __twr_v177 = 122ULL;
    __twr_v178 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v176)(__twr_v177, (uint64_t)(&_mng_lirinst179));
    _mng_status180 = __twr_v178;
    if (!(_mng_status180)) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v181 = (uint64_t)(&TlInternalError);
    __twr_v182 = (uint64_t)(&"Failed to create LIR instruction");
    __twr_v183 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v181)(__twr_v182, __twr_v183, __twr_v183, __twr_v183);
    __twr_l2:;
    __twr_v184 = 121ULL;
    __twr_v185 = _mng_lirinst179 + __twr_v184;
    *(uint8_t*)(__twr_v185) = _mng_type174;
    __twr_v186 = 0ULL;
    __twr_v187 = 24ULL;
    __twr_v188 = _mng_lirinst179 + __twr_v187;
    *(uint64_t*)(__twr_v188) = __twr_v186;
    __twr_v189 = 32ULL;
    __twr_v190 = _mng_lirinst179 + __twr_v189;
    *(uint64_t*)(__twr_v190) = __twr_v186;
    __twr_v191 = 40ULL;
    __twr_v192 = _mng_lirinst179 + __twr_v191;
    *(uint64_t*)(__twr_v192) = __twr_v186;
    __twr_v193 = 48ULL;
    __twr_v194 = _mng_lirinst179 + __twr_v193;
    *(uint64_t*)(__twr_v194) = __twr_v186;
    __twr_v195 = 120ULL;
    __twr_v196 = _mng_lirinst179 + __twr_v195;
    *(uint8_t*)(__twr_v196) = _mng_machtype175;
    _jkl_retv = _mng_lirinst179;
    goto _jkl_epilogue;
    __twr_l1:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirCreateRegister() {
    uint64_t _jkl_retv;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t _mng_reg200;
    uint64_t _mng_status201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    __twr_v197 = (uint64_t)(&TlBumpAlloc);
    __twr_v198 = 74ULL;
    __twr_v199 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v197)(__twr_v198, (uint64_t)(&_mng_reg200));
    _mng_status201 = __twr_v199;
    if (!(_mng_status201)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v202 = (uint64_t)(&TlInternalError);
    __twr_v203 = (uint64_t)(&"Failed to create LIR register");
    __twr_v204 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v202)(__twr_v203, __twr_v204, __twr_v204, __twr_v204);
    __twr_l5:;
    __twr_v205 = 1ULL;
    __twr_v206 = 65ULL;
    __twr_v207 = _mng_reg200 + __twr_v206;
    *(uint8_t*)(__twr_v207) = __twr_v205;
    __twr_v208 = 0ULL;
    *(uint64_t*)(_mng_reg200) = __twr_v208;
    __twr_v209 = 60ULL;
    __twr_v210 = _mng_reg200 + __twr_v209;
    *(uint8_t*)(__twr_v210) = __twr_v208;
    __twr_v211 = 61ULL;
    __twr_v212 = _mng_reg200 + __twr_v211;
    *(uint8_t*)(__twr_v212) = __twr_v208;
    __twr_v213 = 62ULL;
    __twr_v214 = _mng_reg200 + __twr_v213;
    *(uint8_t*)(__twr_v214) = __twr_v208;
    __twr_v215 = 52ULL;
    __twr_v216 = _mng_reg200 + __twr_v215;
    *(uint32_t*)(__twr_v216) = __twr_v208;
    __twr_v217 = 64ULL;
    __twr_v218 = _mng_reg200 + __twr_v217;
    *(uint8_t*)(__twr_v218) = __twr_v208;
    __twr_v219 = 4294967295ULL;
    __twr_v220 = 48ULL;
    __twr_v221 = _mng_reg200 + __twr_v220;
    *(uint32_t*)(__twr_v221) = __twr_v219;
    __twr_v222 = (uint64_t)(&TlFillMemoryWithByte);
    __twr_v223 = 66ULL;
    __twr_v224 = _mng_reg200 + __twr_v223;
    __twr_v225 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v222)(__twr_v224, __twr_v225, __twr_v208);
    _jkl_retv = _mng_reg200;
    goto _jkl_epilogue;
    __twr_l4:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LirInsertInstructionTail(uint64_t _mng_lirinst226) {
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    __twr_v227 = (uint64_t)(&LirCurrentFunction);
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = 16ULL;
    __twr_v230 = _mng_lirinst226 + __twr_v229;
    *(uint64_t*)(__twr_v230) = __twr_v228;
    __twr_v231 = 0ULL;
    *(uint64_t*)(_mng_lirinst226) = __twr_v231;
    __twr_v232 = *(uint64_t*)(__twr_v227);
    __twr_v233 = 32ULL;
    __twr_v234 = __twr_v232 + __twr_v233;
    __twr_v235 = *(uint64_t*)(__twr_v234);
    __twr_v236 = 8ULL;
    __twr_v237 = _mng_lirinst226 + __twr_v236;
    *(uint64_t*)(__twr_v237) = __twr_v235;
    __twr_v238 = *(uint64_t*)(__twr_v227);
    __twr_v239 = __twr_v238 + __twr_v233;
    __twr_v240 = *(uint64_t*)(__twr_v239);
    if (__twr_v240) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v241 = (uint64_t)(&LirCurrentFunction);
    __twr_v242 = *(uint64_t*)(__twr_v241);
    __twr_v243 = 24ULL;
    __twr_v244 = __twr_v242 + __twr_v243;
    *(uint64_t*)(__twr_v244) = _mng_lirinst226;
    goto __twr_l8;
    __twr_l10:;
    __twr_v245 = (uint64_t)(&LirCurrentFunction);
    __twr_v246 = *(uint64_t*)(__twr_v245);
    __twr_v247 = 32ULL;
    __twr_v248 = __twr_v246 + __twr_v247;
    __twr_v249 = *(uint64_t*)(__twr_v248);
    *(uint64_t*)(__twr_v249) = _mng_lirinst226;
    __twr_l8:;
    __twr_v250 = (uint64_t)(&LirCurrentFunction);
    __twr_v251 = *(uint64_t*)(__twr_v250);
    __twr_v252 = 32ULL;
    __twr_v253 = __twr_v251 + __twr_v252;
    *(uint64_t*)(__twr_v253) = _mng_lirinst226;
    __twr_l7:;
    _jkl_epilogue:;
}
void LirInsertInstructionBefore(uint64_t _mng_beforeinst254, uint64_t _mng_inst255) {
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t _mng_prev274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    __twr_v256 = (uint64_t)(&LirCurrentFunction);
    __twr_v257 = *(uint64_t*)(__twr_v256);
    __twr_v258 = 16ULL;
    __twr_v259 = _mng_inst255 + __twr_v258;
    *(uint64_t*)(__twr_v259) = __twr_v257;
    if (_mng_beforeinst254) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v260 = 0ULL;
    __twr_v261 = 8ULL;
    __twr_v262 = _mng_inst255 + __twr_v261;
    *(uint64_t*)(__twr_v262) = __twr_v260;
    *(uint64_t*)(_mng_inst255) = __twr_v260;
    __twr_v263 = 16ULL;
    __twr_v264 = _mng_inst255 + __twr_v263;
    __twr_v265 = *(uint64_t*)(__twr_v264);
    __twr_v266 = 32ULL;
    __twr_v267 = __twr_v265 + __twr_v266;
    *(uint64_t*)(__twr_v267) = _mng_inst255;
    __twr_v268 = *(uint64_t*)(__twr_v264);
    __twr_v269 = 24ULL;
    __twr_v270 = __twr_v268 + __twr_v269;
    *(uint64_t*)(__twr_v270) = _mng_inst255;
    goto _jkl_epilogue;
    __twr_l12:;
    __twr_v271 = 8ULL;
    __twr_v272 = _mng_beforeinst254 + __twr_v271;
    __twr_v273 = *(uint64_t*)(__twr_v272);
    _mng_prev274 = __twr_v273;
    if (!(_mng_prev274)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    *(uint64_t*)(_mng_prev274) = _mng_inst255;
    goto __twr_l14;
    __twr_l16:;
    __twr_v275 = 16ULL;
    __twr_v276 = _mng_beforeinst254 + __twr_v275;
    __twr_v277 = *(uint64_t*)(__twr_v276);
    __twr_v278 = 24ULL;
    __twr_v279 = __twr_v277 + __twr_v278;
    *(uint64_t*)(__twr_v279) = _mng_inst255;
    __twr_l14:;
    __twr_v280 = 8ULL;
    __twr_v281 = _mng_beforeinst254 + __twr_v280;
    *(uint64_t*)(__twr_v281) = _mng_inst255;
    *(uint64_t*)(_mng_inst255) = _mng_beforeinst254;
    __twr_v282 = _mng_inst255 + __twr_v280;
    *(uint64_t*)(__twr_v282) = _mng_prev274;
    __twr_l11:;
    _jkl_epilogue:;
}
void LirInsertInstructionAfter(uint64_t _mng_afterinst283, uint64_t _mng_inst284) {
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t _mng_next301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    __twr_v285 = (uint64_t)(&LirCurrentFunction);
    __twr_v286 = *(uint64_t*)(__twr_v285);
    __twr_v287 = 16ULL;
    __twr_v288 = _mng_inst284 + __twr_v287;
    *(uint64_t*)(__twr_v288) = __twr_v286;
    if (_mng_afterinst283) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v289 = 0ULL;
    __twr_v290 = 8ULL;
    __twr_v291 = _mng_inst284 + __twr_v290;
    *(uint64_t*)(__twr_v291) = __twr_v289;
    *(uint64_t*)(_mng_inst284) = __twr_v289;
    __twr_v292 = 16ULL;
    __twr_v293 = _mng_inst284 + __twr_v292;
    __twr_v294 = *(uint64_t*)(__twr_v293);
    __twr_v295 = 32ULL;
    __twr_v296 = __twr_v294 + __twr_v295;
    *(uint64_t*)(__twr_v296) = _mng_inst284;
    __twr_v297 = *(uint64_t*)(__twr_v293);
    __twr_v298 = 24ULL;
    __twr_v299 = __twr_v297 + __twr_v298;
    *(uint64_t*)(__twr_v299) = _mng_inst284;
    goto _jkl_epilogue;
    __twr_l18:;
    __twr_v300 = *(uint64_t*)(_mng_afterinst283);
    _mng_next301 = __twr_v300;
    if (!(_mng_next301)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v302 = 8ULL;
    __twr_v303 = _mng_next301 + __twr_v302;
    *(uint64_t*)(__twr_v303) = _mng_inst284;
    goto __twr_l20;
    __twr_l22:;
    __twr_v304 = 16ULL;
    __twr_v305 = _mng_afterinst283 + __twr_v304;
    __twr_v306 = *(uint64_t*)(__twr_v305);
    __twr_v307 = 32ULL;
    __twr_v308 = __twr_v306 + __twr_v307;
    *(uint64_t*)(__twr_v308) = _mng_inst284;
    __twr_l20:;
    *(uint64_t*)(_mng_afterinst283) = _mng_inst284;
    __twr_v309 = 8ULL;
    __twr_v310 = _mng_inst284 + __twr_v309;
    *(uint64_t*)(__twr_v310) = _mng_afterinst283;
    *(uint64_t*)(_mng_inst284) = _mng_next301;
    __twr_l17:;
    _jkl_epilogue:;
}
void LirRemoveInstruction(uint64_t _mng_lirinst311) {
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t _mng_block315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t _mng_p319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    __twr_v312 = 16ULL;
    __twr_v313 = _mng_lirinst311 + __twr_v312;
    __twr_v314 = *(uint64_t*)(__twr_v313);
    _mng_block315 = __twr_v314;
    __twr_v316 = 8ULL;
    __twr_v317 = _mng_lirinst311 + __twr_v316;
    __twr_v318 = *(uint64_t*)(__twr_v317);
    _mng_p319 = __twr_v318;
    if (!(_mng_p319)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v320 = *(uint64_t*)(_mng_lirinst311);
    *(uint64_t*)(_mng_p319) = __twr_v320;
    goto __twr_l24;
    __twr_l26:;
    __twr_v321 = *(uint64_t*)(_mng_lirinst311);
    __twr_v322 = 24ULL;
    __twr_v323 = _mng_block315 + __twr_v322;
    *(uint64_t*)(__twr_v323) = __twr_v321;
    __twr_l24:;
    __twr_v324 = *(uint64_t*)(_mng_lirinst311);
    _mng_p319 = __twr_v324;
    if (!(_mng_p319)) { goto __twr_l29; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v325 = 8ULL;
    __twr_v326 = _mng_lirinst311 + __twr_v325;
    __twr_v327 = *(uint64_t*)(__twr_v326);
    __twr_v328 = _mng_p319 + __twr_v325;
    *(uint64_t*)(__twr_v328) = __twr_v327;
    goto __twr_l27;
    __twr_l29:;
    __twr_v329 = 8ULL;
    __twr_v330 = _mng_lirinst311 + __twr_v329;
    __twr_v331 = *(uint64_t*)(__twr_v330);
    __twr_v332 = 32ULL;
    __twr_v333 = _mng_block315 + __twr_v332;
    *(uint64_t*)(__twr_v333) = __twr_v331;
    __twr_l27:;
    __twr_l23:;
    _jkl_epilogue:;
}
uint64_t LirGetLabel(uint64_t _mng_oldlabel334) {
    uint64_t _jkl_retv;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t _mng_lirinst338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    __twr_v335 = 8ULL;
    __twr_v336 = _mng_oldlabel334 + __twr_v335;
    __twr_v337 = *(uint64_t*)(__twr_v336);
    _mng_lirinst338 = __twr_v337;
    if (!(_mng_lirinst338)) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    _jkl_retv = _mng_lirinst338;
    goto _jkl_epilogue;
    __twr_l31:;
    __twr_v339 = (uint64_t)(&LirCreateInstruction);
    __twr_v340 = 1ULL;
    __twr_v341 = 0ULL;
    __twr_v342 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v339)(__twr_v340, __twr_v341);
    _mng_lirinst338 = __twr_v342;
    __twr_v343 = 8ULL;
    __twr_v344 = _mng_oldlabel334 + __twr_v343;
    *(uint64_t*)(__twr_v344) = _mng_lirinst338;
    __twr_v345 = 56ULL;
    __twr_v346 = _mng_lirinst338 + __twr_v345;
    *(uint32_t*)(__twr_v346) = __twr_v341;
    __twr_v347 = 4294967295ULL;
    __twr_v348 = 60ULL;
    __twr_v349 = _mng_lirinst338 + __twr_v348;
    *(uint32_t*)(__twr_v349) = __twr_v347;
    _jkl_retv = _mng_lirinst338;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirGetRegister(uint64_t _mng_oldvariable350) {
    uint64_t _jkl_retv;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t _mng_lirreg354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    __twr_v351 = 16ULL;
    __twr_v352 = _mng_oldvariable350 + __twr_v351;
    __twr_v353 = *(uint64_t*)(__twr_v352);
    _mng_lirreg354 = __twr_v353;
    if (!(_mng_lirreg354)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_lirreg354;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v355 = (uint64_t)(&LirCreateRegister);
    __twr_v356 = ((uint64_t (*)())__twr_v355)();
    _mng_lirreg354 = __twr_v356;
    __twr_v357 = 16ULL;
    __twr_v358 = _mng_oldvariable350 + __twr_v357;
    *(uint64_t*)(__twr_v358) = _mng_lirreg354;
    __twr_v359 = *(uint64_t*)(_mng_oldvariable350);
    *(uint64_t*)(_mng_lirreg354) = __twr_v359;
    _jkl_retv = _mng_lirreg354;
    goto _jkl_epilogue;
    __twr_l33:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirGetSpillOffset(uint64_t _mng_irfunc360, uint64_t _mng_spilledreg361) {
    uint64_t _jkl_retv;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t _mng_spilloff365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    __twr_v362 = 48ULL;
    __twr_v363 = _mng_spilledreg361 + __twr_v362;
    __twr_v364 = *(uint32_t*)(__twr_v363);
    _mng_spilloff365 = __twr_v364;
    __twr_v366 = 4294967295ULL;
    if (_mng_spilloff365 == __twr_v366) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    _jkl_retv = _mng_spilloff365;
    goto _jkl_epilogue;
    __twr_l37:;
    __twr_v367 = 40ULL;
    __twr_v368 = _mng_irfunc360 + __twr_v367;
    __twr_v369 = *(uint64_t*)(__twr_v368);
    __twr_v370 = 128ULL;
    __twr_v371 = _mng_irfunc360 + __twr_v370;
    __twr_v372 = *(uint64_t*)(__twr_v371);
    __twr_v373 = __twr_v369 + __twr_v372;
    _mng_spilloff365 = __twr_v373;
    __twr_v374 = 48ULL;
    __twr_v375 = _mng_spilledreg361 + __twr_v374;
    *(uint32_t*)(__twr_v375) = _mng_spilloff365;
    __twr_v376 = (uint64_t)(&JklTargetInfo);
    __twr_v377 = *(uint64_t*)(__twr_v376);
    __twr_v378 = 43ULL;
    __twr_v379 = __twr_v377 + __twr_v378;
    __twr_v380 = *(uint8_t*)(__twr_v379);
    __twr_v381 = *(uint64_t*)(__twr_v368);
    __twr_v382 = __twr_v381 + __twr_v380;
    *(uint64_t*)(__twr_v368) = __twr_v382;
    _jkl_retv = _mng_spilloff365;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirSelect(uint64_t _mng_inst383) {
    uint64_t _jkl_retv;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t _mng_reg387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    __twr_v384 = 80ULL;
    __twr_v385 = _mng_inst383 + __twr_v384;
    __twr_v386 = *(uint64_t*)(__twr_v385);
    _mng_reg387 = __twr_v386;
    if (!(_mng_reg387)) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l41:;
    _jkl_retv = _mng_reg387;
    goto _jkl_epilogue;
    __twr_l40:;
    __twr_v388 = (uint64_t)(&JklTargetInfo);
    __twr_v389 = *(uint64_t*)(__twr_v388);
    __twr_v390 = 24ULL;
    __twr_v391 = __twr_v389 + __twr_v390;
    __twr_v392 = *(uint64_t*)(__twr_v391);
    __twr_v393 = 88ULL;
    __twr_v394 = _mng_inst383 + __twr_v393;
    __twr_v395 = *(uint8_t*)(__twr_v394);
    __twr_v396 = 3ULL;
    __twr_v397 = __twr_v395 << __twr_v396;
    __twr_v398 = __twr_v392 + __twr_v397;
    __twr_v399 = *(uint64_t*)(__twr_v398);
    __twr_v400 = ((uint64_t (*)(uint64_t))__twr_v399)(_mng_inst383);
    _mng_reg387 = __twr_v400;
    if (!(_mng_reg387)) { goto __twr_l42; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v401 = 65ULL;
    __twr_v402 = _mng_reg387 + __twr_v401;
    __twr_v403 = *(uint8_t*)(__twr_v402);
    __twr_v404 = 3ULL;
    if (__twr_v403 != __twr_v404) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v405 = (uint64_t)(&TlInternalError);
    __twr_v406 = (uint64_t)(&"Prealloc -> Virt TODO");
    __twr_v407 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v405)(__twr_v406, __twr_v407, __twr_v407, __twr_v407);
    __twr_l42:;
    __twr_v408 = 80ULL;
    __twr_v409 = _mng_inst383 + __twr_v408;
    *(uint64_t*)(__twr_v409) = _mng_reg387;
    _jkl_retv = _mng_reg387;
    goto _jkl_epilogue;
    __twr_l39:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirSelectOrGetRegister(uint64_t _mng_var410) {
    uint64_t _jkl_retv;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    __twr_v411 = 8ULL;
    __twr_v412 = _mng_var410 + __twr_v411;
    __twr_v413 = *(uint64_t*)(__twr_v412);
    if (!(__twr_v413)) { goto __twr_l46; } else { goto __twr_l47; }
    __twr_l47:;
    __twr_v414 = (uint64_t)(&LirSelect);
    __twr_v415 = 8ULL;
    __twr_v416 = _mng_var410 + __twr_v415;
    __twr_v417 = *(uint64_t*)(__twr_v416);
    __twr_v418 = ((uint64_t (*)(uint64_t))__twr_v414)(__twr_v417);
    _jkl_retv = __twr_v418;
    goto _jkl_epilogue;
    __twr_l46:;
    __twr_v419 = (uint64_t)(&LirGetRegister);
    __twr_v420 = ((uint64_t (*)(uint64_t))__twr_v419)(_mng_var410);
    _jkl_retv = __twr_v420;
    goto _jkl_epilogue;
    __twr_l45:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LirSelectForFunction(uint64_t _mng_funcsym421) {
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t _mng_irfunc425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t _mng_inst432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t _mng_lirinst441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    __twr_v422 = 96ULL;
    __twr_v423 = _mng_funcsym421 + __twr_v422;
    __twr_v424 = *(uint64_t*)(__twr_v423);
    _mng_irfunc425 = __twr_v424;
    __twr_v426 = 0ULL;
    __twr_v427 = 24ULL;
    __twr_v428 = _mng_irfunc425 + __twr_v427;
    *(uint64_t*)(__twr_v428) = __twr_v426;
    __twr_v429 = 32ULL;
    __twr_v430 = _mng_irfunc425 + __twr_v429;
    *(uint64_t*)(__twr_v430) = __twr_v426;
    __twr_v431 = *(uint64_t*)(_mng_irfunc425);
    _mng_inst432 = __twr_v431;
    __twr_v433 = (uint64_t)(&LirCurrentFunction);
    *(uint64_t*)(__twr_v433) = _mng_irfunc425;
    if (!(_mng_inst432)) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v434 = 88ULL;
    __twr_v435 = _mng_inst432 + __twr_v434;
    __twr_v436 = *(uint8_t*)(__twr_v435);
    __twr_v437 = 21ULL;
    if (__twr_v436 != __twr_v437) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v438 = 8ULL;
    __twr_v439 = _mng_inst432 + __twr_v438;
    __twr_v440 = *(uint64_t*)(__twr_v439);
    _mng_lirinst441 = __twr_v440;
    if (_mng_lirinst441) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v442 = (uint64_t)(&LirCreateInstruction);
    __twr_v443 = 1ULL;
    __twr_v444 = 0ULL;
    __twr_v445 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v442)(__twr_v443, __twr_v444);
    _mng_lirinst441 = __twr_v445;
    __twr_v446 = 8ULL;
    __twr_v447 = _mng_inst432 + __twr_v446;
    *(uint64_t*)(__twr_v447) = _mng_lirinst441;
    __twr_v448 = 56ULL;
    __twr_v449 = _mng_lirinst441 + __twr_v448;
    *(uint32_t*)(__twr_v449) = __twr_v444;
    __twr_v450 = 4294967295ULL;
    __twr_v451 = 60ULL;
    __twr_v452 = _mng_lirinst441 + __twr_v451;
    *(uint32_t*)(__twr_v452) = __twr_v450;
    __twr_l55:;
    __twr_v453 = (uint64_t)(&LirInsertInstructionTail);
    ((void (*)(uint64_t))__twr_v453)(_mng_lirinst441);
    goto __twr_l52;
    __twr_l54:;
    __twr_v454 = 88ULL;
    __twr_v455 = _mng_inst432 + __twr_v454;
    __twr_v456 = *(uint8_t*)(__twr_v455);
    __twr_v457 = 25ULL;
    if (__twr_v456 == __twr_v457) { goto __twr_l57; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v458 = 88ULL;
    __twr_v459 = _mng_inst432 + __twr_v458;
    __twr_v460 = *(uint8_t*)(__twr_v459);
    __twr_v461 = 28ULL;
    if (__twr_v460 == __twr_v461) { goto __twr_l57; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v462 = 88ULL;
    __twr_v463 = _mng_inst432 + __twr_v462;
    __twr_v464 = *(uint8_t*)(__twr_v463);
    __twr_v465 = 6ULL;
    if (__twr_v464 != __twr_v465) { goto __twr_l59; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v466 = 48ULL;
    __twr_v467 = _mng_inst432 + __twr_v466;
    __twr_v468 = *(uint64_t*)(__twr_v467);
    __twr_v469 = *(uint64_t*)(__twr_v468);
    if (__twr_v469) { goto __twr_l57; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v470 = 88ULL;
    __twr_v471 = _mng_inst432 + __twr_v470;
    __twr_v472 = *(uint8_t*)(__twr_v471);
    __twr_v473 = 5ULL;
    if (__twr_v472 != __twr_v473) { goto __twr_l58; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v474 = 48ULL;
    __twr_v475 = _mng_inst432 + __twr_v474;
    __twr_v476 = *(uint64_t*)(__twr_v475);
    __twr_v477 = 8ULL;
    __twr_v478 = __twr_v476 + __twr_v477;
    __twr_v479 = *(uint64_t*)(__twr_v478);
    if (!(__twr_v479)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v480 = 88ULL;
    __twr_v481 = _mng_inst432 + __twr_v480;
    __twr_v482 = *(uint8_t*)(__twr_v481);
    __twr_v483 = 7ULL;
    if (__twr_v482 <= __twr_v483) { goto __twr_l52; } else { goto __twr_l64; }
    __twr_l64:;
    __twr_v484 = 88ULL;
    __twr_v485 = _mng_inst432 + __twr_v484;
    __twr_v486 = *(uint8_t*)(__twr_v485);
    __twr_v487 = 23ULL;
    if (__twr_v486 >= __twr_v487) { goto __twr_l52; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v488 = (uint64_t)(&LirSelect);
    __twr_v489 = ((uint64_t (*)(uint64_t))__twr_v488)(_mng_inst432);
    __twr_l52:;
    __twr_v490 = 32ULL;
    __twr_v491 = _mng_inst432 + __twr_v490;
    __twr_v492 = *(uint64_t*)(__twr_v491);
    _mng_inst432 = __twr_v492;
    __twr_l51:;
    if (_mng_inst432) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_l48:;
    _jkl_epilogue:;
}

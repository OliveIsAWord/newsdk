#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlStringToNumber(uint64_t _mng_src110, uint64_t _mng_bufsize111, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler112);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine113, uint64_t _mng_arg114, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread115);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex116);
extern void TlReleaseMutex(uint64_t _mng_mutex117);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue118);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore119);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore120);
extern void JklCompileProgram(uint64_t _mng_argc121, uint64_t _mng_argv122);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg123);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename124, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock125, uint64_t _mng_filepath126);
extern uint64_t LexLookupSection(uint64_t _mng_name127);
extern void LexPushSection(uint64_t _mng_section128);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope129);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg130);
extern void LexExpandMacro(uint64_t _mng_macro131, uint64_t _mng_token132);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream133, uint64_t _mng_macro134);
extern void LexUninitializeStream(uint64_t _mng_stream135);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream136);
extern void LexPushStream(uint64_t _mng_stream137);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream138, uint64_t _mng_fileblock139, uint64_t _mng_handle140);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock141, uint64_t _mng_handle142);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope143);
extern uint64_t LexResetScope(uint64_t _mng_scope144);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope145);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest146, uint64_t _mng_src147);
extern void LexGetToken(uint64_t _mng_token148);
extern void LexPutbackToken(uint64_t _mng_token149);
extern uint64_t LexMatchToken(uint64_t _mng_token150, uint64_t _mng_type151, uint64_t _mng_subtype152);
extern void LexStreamError(uint64_t _mng_str153, uint64_t _mng_err1154, uint64_t _mng_err2155, uint64_t _mng_err3156);
extern void LexTokenError(uint64_t _mng_token157, uint64_t _mng_str158, uint64_t _mng_err1159, uint64_t _mng_err2160, uint64_t _mng_err3161);
extern uint64_t LexCrunchNumber(uint64_t _mng_token162, uint64_t _mng_buffer163);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsCompoundTypeListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node164);
extern uint64_t IrAllocateStack(uint64_t _mng_func165, uint64_t _mng_bytes166);
extern uint64_t IrGetStackOffset(uint64_t _mng_func167, uint64_t _mng_symbol168);
extern uint64_t LirCreateInstruction(uint64_t _mng_type169, uint64_t _mng_machtype170);
extern void LirInsertInstructionTail(uint64_t _mng_lirinst171);
extern void LirRemoveInstruction(uint64_t _mng_lirinst172);
extern uint64_t LirGetLabel(uint64_t _mng_oldlabel173);
extern uint64_t LirCreateRegister();
extern uint64_t LirGetRegister(uint64_t _mng_oldvariable174);
extern uint64_t LirSelect(uint64_t _mng_inst175);
extern uint64_t LirSelectOrGetRegister(uint64_t _mng_var176);
extern void LirSelectForFunction(uint64_t _mng_funcsym177);
extern void LirAllocateRegistersForFunction(uint64_t _mng_funcsym178);
extern void LirInsertInstructionBefore(uint64_t _mng_beforeinst179, uint64_t _mng_inst180);
extern void LirInsertInstructionAfter(uint64_t _mng_afterinst181, uint64_t _mng_inst182);
extern uint64_t LirGetSpillOffset(uint64_t _mng_irfunc183, uint64_t _mng_spilledreg184);
extern uint64_t LirCurrentFunction;
uint64_t LirCurrentFunction;
uint64_t LirCreateInstruction(uint64_t _mng_type185, uint64_t _mng_machtype186) {
    uint64_t _jkl_retv;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t _mng_lirinst190;
    uint64_t _mng_status191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    __twr_v187 = (uint64_t)(&TlBumpAlloc);
    __twr_v188 = 122ULL;
    __twr_v189 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v187)(__twr_v188, (uint64_t)(&_mng_lirinst190));
    _mng_status191 = __twr_v189;
    if (!(_mng_status191)) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v192 = (uint64_t)(&TlInternalError);
    __twr_v193 = (uint64_t)(&"Failed to create LIR instruction");
    __twr_v194 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v192)(__twr_v193, __twr_v194, __twr_v194, __twr_v194);
    __twr_l2:;
    __twr_v195 = 121ULL;
    __twr_v196 = _mng_lirinst190 + __twr_v195;
    *(uint8_t*)(__twr_v196) = _mng_type185;
    __twr_v197 = 0ULL;
    __twr_v198 = 24ULL;
    __twr_v199 = _mng_lirinst190 + __twr_v198;
    *(uint64_t*)(__twr_v199) = __twr_v197;
    __twr_v200 = 32ULL;
    __twr_v201 = _mng_lirinst190 + __twr_v200;
    *(uint64_t*)(__twr_v201) = __twr_v197;
    __twr_v202 = 40ULL;
    __twr_v203 = _mng_lirinst190 + __twr_v202;
    *(uint64_t*)(__twr_v203) = __twr_v197;
    __twr_v204 = 48ULL;
    __twr_v205 = _mng_lirinst190 + __twr_v204;
    *(uint64_t*)(__twr_v205) = __twr_v197;
    __twr_v206 = 120ULL;
    __twr_v207 = _mng_lirinst190 + __twr_v206;
    *(uint8_t*)(__twr_v207) = _mng_machtype186;
    _jkl_retv = _mng_lirinst190;
    goto _jkl_epilogue;
    __twr_l1:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirCreateRegister() {
    uint64_t _jkl_retv;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t _mng_reg211;
    uint64_t _mng_status212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    __twr_v208 = (uint64_t)(&TlBumpAlloc);
    __twr_v209 = 74ULL;
    __twr_v210 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v208)(__twr_v209, (uint64_t)(&_mng_reg211));
    _mng_status212 = __twr_v210;
    if (!(_mng_status212)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v213 = (uint64_t)(&TlInternalError);
    __twr_v214 = (uint64_t)(&"Failed to create LIR register");
    __twr_v215 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v213)(__twr_v214, __twr_v215, __twr_v215, __twr_v215);
    __twr_l5:;
    __twr_v216 = 1ULL;
    __twr_v217 = 65ULL;
    __twr_v218 = _mng_reg211 + __twr_v217;
    *(uint8_t*)(__twr_v218) = __twr_v216;
    __twr_v219 = 0ULL;
    *(uint64_t*)(_mng_reg211) = __twr_v219;
    __twr_v220 = 60ULL;
    __twr_v221 = _mng_reg211 + __twr_v220;
    *(uint8_t*)(__twr_v221) = __twr_v219;
    __twr_v222 = 61ULL;
    __twr_v223 = _mng_reg211 + __twr_v222;
    *(uint8_t*)(__twr_v223) = __twr_v219;
    __twr_v224 = 62ULL;
    __twr_v225 = _mng_reg211 + __twr_v224;
    *(uint8_t*)(__twr_v225) = __twr_v219;
    __twr_v226 = 52ULL;
    __twr_v227 = _mng_reg211 + __twr_v226;
    *(uint32_t*)(__twr_v227) = __twr_v219;
    __twr_v228 = 64ULL;
    __twr_v229 = _mng_reg211 + __twr_v228;
    *(uint8_t*)(__twr_v229) = __twr_v219;
    __twr_v230 = 4294967295ULL;
    __twr_v231 = 48ULL;
    __twr_v232 = _mng_reg211 + __twr_v231;
    *(uint32_t*)(__twr_v232) = __twr_v230;
    __twr_v233 = (uint64_t)(&TlFillMemoryWithByte);
    __twr_v234 = 66ULL;
    __twr_v235 = _mng_reg211 + __twr_v234;
    __twr_v236 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v233)(__twr_v235, __twr_v236, __twr_v219);
    _jkl_retv = _mng_reg211;
    goto _jkl_epilogue;
    __twr_l4:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LirInsertInstructionTail(uint64_t _mng_lirinst237) {
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    __twr_v238 = (uint64_t)(&LirCurrentFunction);
    __twr_v239 = *(uint64_t*)(__twr_v238);
    __twr_v240 = 16ULL;
    __twr_v241 = _mng_lirinst237 + __twr_v240;
    *(uint64_t*)(__twr_v241) = __twr_v239;
    __twr_v242 = 0ULL;
    *(uint64_t*)(_mng_lirinst237) = __twr_v242;
    __twr_v243 = *(uint64_t*)(__twr_v238);
    __twr_v244 = 32ULL;
    __twr_v245 = __twr_v243 + __twr_v244;
    __twr_v246 = *(uint64_t*)(__twr_v245);
    __twr_v247 = 8ULL;
    __twr_v248 = _mng_lirinst237 + __twr_v247;
    *(uint64_t*)(__twr_v248) = __twr_v246;
    __twr_v249 = *(uint64_t*)(__twr_v238);
    __twr_v250 = __twr_v249 + __twr_v244;
    __twr_v251 = *(uint64_t*)(__twr_v250);
    if (__twr_v251) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v252 = (uint64_t)(&LirCurrentFunction);
    __twr_v253 = *(uint64_t*)(__twr_v252);
    __twr_v254 = 24ULL;
    __twr_v255 = __twr_v253 + __twr_v254;
    *(uint64_t*)(__twr_v255) = _mng_lirinst237;
    goto __twr_l8;
    __twr_l10:;
    __twr_v256 = (uint64_t)(&LirCurrentFunction);
    __twr_v257 = *(uint64_t*)(__twr_v256);
    __twr_v258 = 32ULL;
    __twr_v259 = __twr_v257 + __twr_v258;
    __twr_v260 = *(uint64_t*)(__twr_v259);
    *(uint64_t*)(__twr_v260) = _mng_lirinst237;
    __twr_l8:;
    __twr_v261 = (uint64_t)(&LirCurrentFunction);
    __twr_v262 = *(uint64_t*)(__twr_v261);
    __twr_v263 = 32ULL;
    __twr_v264 = __twr_v262 + __twr_v263;
    *(uint64_t*)(__twr_v264) = _mng_lirinst237;
    __twr_l7:;
    _jkl_epilogue:;
}
void LirInsertInstructionBefore(uint64_t _mng_beforeinst265, uint64_t _mng_inst266) {
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_prev285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    __twr_v267 = (uint64_t)(&LirCurrentFunction);
    __twr_v268 = *(uint64_t*)(__twr_v267);
    __twr_v269 = 16ULL;
    __twr_v270 = _mng_inst266 + __twr_v269;
    *(uint64_t*)(__twr_v270) = __twr_v268;
    if (_mng_beforeinst265) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v271 = 0ULL;
    __twr_v272 = 8ULL;
    __twr_v273 = _mng_inst266 + __twr_v272;
    *(uint64_t*)(__twr_v273) = __twr_v271;
    *(uint64_t*)(_mng_inst266) = __twr_v271;
    __twr_v274 = 16ULL;
    __twr_v275 = _mng_inst266 + __twr_v274;
    __twr_v276 = *(uint64_t*)(__twr_v275);
    __twr_v277 = 32ULL;
    __twr_v278 = __twr_v276 + __twr_v277;
    *(uint64_t*)(__twr_v278) = _mng_inst266;
    __twr_v279 = *(uint64_t*)(__twr_v275);
    __twr_v280 = 24ULL;
    __twr_v281 = __twr_v279 + __twr_v280;
    *(uint64_t*)(__twr_v281) = _mng_inst266;
    goto _jkl_epilogue;
    __twr_l12:;
    __twr_v282 = 8ULL;
    __twr_v283 = _mng_beforeinst265 + __twr_v282;
    __twr_v284 = *(uint64_t*)(__twr_v283);
    _mng_prev285 = __twr_v284;
    if (!(_mng_prev285)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    *(uint64_t*)(_mng_prev285) = _mng_inst266;
    goto __twr_l14;
    __twr_l16:;
    __twr_v286 = 16ULL;
    __twr_v287 = _mng_beforeinst265 + __twr_v286;
    __twr_v288 = *(uint64_t*)(__twr_v287);
    __twr_v289 = 24ULL;
    __twr_v290 = __twr_v288 + __twr_v289;
    *(uint64_t*)(__twr_v290) = _mng_inst266;
    __twr_l14:;
    __twr_v291 = 8ULL;
    __twr_v292 = _mng_beforeinst265 + __twr_v291;
    *(uint64_t*)(__twr_v292) = _mng_inst266;
    *(uint64_t*)(_mng_inst266) = _mng_beforeinst265;
    __twr_v293 = _mng_inst266 + __twr_v291;
    *(uint64_t*)(__twr_v293) = _mng_prev285;
    __twr_l11:;
    _jkl_epilogue:;
}
void LirInsertInstructionAfter(uint64_t _mng_afterinst294, uint64_t _mng_inst295) {
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t _mng_next312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    __twr_v296 = (uint64_t)(&LirCurrentFunction);
    __twr_v297 = *(uint64_t*)(__twr_v296);
    __twr_v298 = 16ULL;
    __twr_v299 = _mng_inst295 + __twr_v298;
    *(uint64_t*)(__twr_v299) = __twr_v297;
    if (_mng_afterinst294) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v300 = 0ULL;
    __twr_v301 = 8ULL;
    __twr_v302 = _mng_inst295 + __twr_v301;
    *(uint64_t*)(__twr_v302) = __twr_v300;
    *(uint64_t*)(_mng_inst295) = __twr_v300;
    __twr_v303 = 16ULL;
    __twr_v304 = _mng_inst295 + __twr_v303;
    __twr_v305 = *(uint64_t*)(__twr_v304);
    __twr_v306 = 32ULL;
    __twr_v307 = __twr_v305 + __twr_v306;
    *(uint64_t*)(__twr_v307) = _mng_inst295;
    __twr_v308 = *(uint64_t*)(__twr_v304);
    __twr_v309 = 24ULL;
    __twr_v310 = __twr_v308 + __twr_v309;
    *(uint64_t*)(__twr_v310) = _mng_inst295;
    goto _jkl_epilogue;
    __twr_l18:;
    __twr_v311 = *(uint64_t*)(_mng_afterinst294);
    _mng_next312 = __twr_v311;
    if (!(_mng_next312)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v313 = 8ULL;
    __twr_v314 = _mng_next312 + __twr_v313;
    *(uint64_t*)(__twr_v314) = _mng_inst295;
    goto __twr_l20;
    __twr_l22:;
    __twr_v315 = 16ULL;
    __twr_v316 = _mng_afterinst294 + __twr_v315;
    __twr_v317 = *(uint64_t*)(__twr_v316);
    __twr_v318 = 32ULL;
    __twr_v319 = __twr_v317 + __twr_v318;
    *(uint64_t*)(__twr_v319) = _mng_inst295;
    __twr_l20:;
    *(uint64_t*)(_mng_afterinst294) = _mng_inst295;
    __twr_v320 = 8ULL;
    __twr_v321 = _mng_inst295 + __twr_v320;
    *(uint64_t*)(__twr_v321) = _mng_afterinst294;
    *(uint64_t*)(_mng_inst295) = _mng_next312;
    __twr_l17:;
    _jkl_epilogue:;
}
void LirRemoveInstruction(uint64_t _mng_lirinst322) {
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t _mng_block326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t _mng_p330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    __twr_v323 = 16ULL;
    __twr_v324 = _mng_lirinst322 + __twr_v323;
    __twr_v325 = *(uint64_t*)(__twr_v324);
    _mng_block326 = __twr_v325;
    __twr_v327 = 8ULL;
    __twr_v328 = _mng_lirinst322 + __twr_v327;
    __twr_v329 = *(uint64_t*)(__twr_v328);
    _mng_p330 = __twr_v329;
    if (!(_mng_p330)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v331 = *(uint64_t*)(_mng_lirinst322);
    *(uint64_t*)(_mng_p330) = __twr_v331;
    goto __twr_l24;
    __twr_l26:;
    __twr_v332 = *(uint64_t*)(_mng_lirinst322);
    __twr_v333 = 24ULL;
    __twr_v334 = _mng_block326 + __twr_v333;
    *(uint64_t*)(__twr_v334) = __twr_v332;
    __twr_l24:;
    __twr_v335 = *(uint64_t*)(_mng_lirinst322);
    _mng_p330 = __twr_v335;
    if (!(_mng_p330)) { goto __twr_l29; } else { goto __twr_l28; }
    __twr_l28:;
    __twr_v336 = 8ULL;
    __twr_v337 = _mng_lirinst322 + __twr_v336;
    __twr_v338 = *(uint64_t*)(__twr_v337);
    __twr_v339 = _mng_p330 + __twr_v336;
    *(uint64_t*)(__twr_v339) = __twr_v338;
    goto __twr_l27;
    __twr_l29:;
    __twr_v340 = 8ULL;
    __twr_v341 = _mng_lirinst322 + __twr_v340;
    __twr_v342 = *(uint64_t*)(__twr_v341);
    __twr_v343 = 32ULL;
    __twr_v344 = _mng_block326 + __twr_v343;
    *(uint64_t*)(__twr_v344) = __twr_v342;
    __twr_l27:;
    __twr_l23:;
    _jkl_epilogue:;
}
uint64_t LirGetLabel(uint64_t _mng_oldlabel345) {
    uint64_t _jkl_retv;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t _mng_lirinst349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    __twr_v346 = 8ULL;
    __twr_v347 = _mng_oldlabel345 + __twr_v346;
    __twr_v348 = *(uint64_t*)(__twr_v347);
    _mng_lirinst349 = __twr_v348;
    if (!(_mng_lirinst349)) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    _jkl_retv = _mng_lirinst349;
    goto _jkl_epilogue;
    __twr_l31:;
    __twr_v350 = (uint64_t)(&LirCreateInstruction);
    __twr_v351 = 1ULL;
    __twr_v352 = 0ULL;
    __twr_v353 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v350)(__twr_v351, __twr_v352);
    _mng_lirinst349 = __twr_v353;
    __twr_v354 = 8ULL;
    __twr_v355 = _mng_oldlabel345 + __twr_v354;
    *(uint64_t*)(__twr_v355) = _mng_lirinst349;
    __twr_v356 = 56ULL;
    __twr_v357 = _mng_lirinst349 + __twr_v356;
    *(uint32_t*)(__twr_v357) = __twr_v352;
    __twr_v358 = 4294967295ULL;
    __twr_v359 = 60ULL;
    __twr_v360 = _mng_lirinst349 + __twr_v359;
    *(uint32_t*)(__twr_v360) = __twr_v358;
    _jkl_retv = _mng_lirinst349;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirGetRegister(uint64_t _mng_oldvariable361) {
    uint64_t _jkl_retv;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t _mng_lirreg365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    __twr_v362 = 16ULL;
    __twr_v363 = _mng_oldvariable361 + __twr_v362;
    __twr_v364 = *(uint64_t*)(__twr_v363);
    _mng_lirreg365 = __twr_v364;
    if (!(_mng_lirreg365)) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_lirreg365;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v366 = (uint64_t)(&LirCreateRegister);
    __twr_v367 = ((uint64_t (*)())__twr_v366)();
    _mng_lirreg365 = __twr_v367;
    __twr_v368 = 16ULL;
    __twr_v369 = _mng_oldvariable361 + __twr_v368;
    *(uint64_t*)(__twr_v369) = _mng_lirreg365;
    __twr_v370 = *(uint64_t*)(_mng_oldvariable361);
    *(uint64_t*)(_mng_lirreg365) = __twr_v370;
    _jkl_retv = _mng_lirreg365;
    goto _jkl_epilogue;
    __twr_l33:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirGetSpillOffset(uint64_t _mng_irfunc371, uint64_t _mng_spilledreg372) {
    uint64_t _jkl_retv;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t _mng_spilloff376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    __twr_v373 = 48ULL;
    __twr_v374 = _mng_spilledreg372 + __twr_v373;
    __twr_v375 = *(uint32_t*)(__twr_v374);
    _mng_spilloff376 = __twr_v375;
    __twr_v377 = 4294967295ULL;
    if (_mng_spilloff376 == __twr_v377) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    _jkl_retv = _mng_spilloff376;
    goto _jkl_epilogue;
    __twr_l37:;
    __twr_v378 = 40ULL;
    __twr_v379 = _mng_irfunc371 + __twr_v378;
    __twr_v380 = *(uint64_t*)(__twr_v379);
    __twr_v381 = 128ULL;
    __twr_v382 = _mng_irfunc371 + __twr_v381;
    __twr_v383 = *(uint64_t*)(__twr_v382);
    __twr_v384 = __twr_v380 + __twr_v383;
    _mng_spilloff376 = __twr_v384;
    __twr_v385 = 48ULL;
    __twr_v386 = _mng_spilledreg372 + __twr_v385;
    *(uint32_t*)(__twr_v386) = _mng_spilloff376;
    __twr_v387 = (uint64_t)(&JklTargetInfo);
    __twr_v388 = *(uint64_t*)(__twr_v387);
    __twr_v389 = 43ULL;
    __twr_v390 = __twr_v388 + __twr_v389;
    __twr_v391 = *(uint8_t*)(__twr_v390);
    __twr_v392 = *(uint64_t*)(__twr_v379);
    __twr_v393 = __twr_v392 + __twr_v391;
    *(uint64_t*)(__twr_v379) = __twr_v393;
    _jkl_retv = _mng_spilloff376;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirSelect(uint64_t _mng_inst394) {
    uint64_t _jkl_retv;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t _mng_reg398;
    uint64_t __twr_v399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t __twr_v402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    __twr_v395 = 80ULL;
    __twr_v396 = _mng_inst394 + __twr_v395;
    __twr_v397 = *(uint64_t*)(__twr_v396);
    _mng_reg398 = __twr_v397;
    if (!(_mng_reg398)) { goto __twr_l40; } else { goto __twr_l41; }
    __twr_l41:;
    _jkl_retv = _mng_reg398;
    goto _jkl_epilogue;
    __twr_l40:;
    __twr_v399 = (uint64_t)(&JklTargetInfo);
    __twr_v400 = *(uint64_t*)(__twr_v399);
    __twr_v401 = 24ULL;
    __twr_v402 = __twr_v400 + __twr_v401;
    __twr_v403 = *(uint64_t*)(__twr_v402);
    __twr_v404 = 88ULL;
    __twr_v405 = _mng_inst394 + __twr_v404;
    __twr_v406 = *(uint8_t*)(__twr_v405);
    __twr_v407 = 3ULL;
    __twr_v408 = __twr_v406 << __twr_v407;
    __twr_v409 = __twr_v403 + __twr_v408;
    __twr_v410 = *(uint64_t*)(__twr_v409);
    __twr_v411 = ((uint64_t (*)(uint64_t))__twr_v410)(_mng_inst394);
    _mng_reg398 = __twr_v411;
    if (!(_mng_reg398)) { goto __twr_l42; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v412 = 65ULL;
    __twr_v413 = _mng_reg398 + __twr_v412;
    __twr_v414 = *(uint8_t*)(__twr_v413);
    __twr_v415 = 3ULL;
    if (__twr_v414 != __twr_v415) { goto __twr_l42; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v416 = (uint64_t)(&TlInternalError);
    __twr_v417 = (uint64_t)(&"Prealloc -> Virt TODO");
    __twr_v418 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v416)(__twr_v417, __twr_v418, __twr_v418, __twr_v418);
    __twr_l42:;
    __twr_v419 = 80ULL;
    __twr_v420 = _mng_inst394 + __twr_v419;
    *(uint64_t*)(__twr_v420) = _mng_reg398;
    _jkl_retv = _mng_reg398;
    goto _jkl_epilogue;
    __twr_l39:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirSelectOrGetRegister(uint64_t _mng_var421) {
    uint64_t _jkl_retv;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    __twr_v422 = 8ULL;
    __twr_v423 = _mng_var421 + __twr_v422;
    __twr_v424 = *(uint64_t*)(__twr_v423);
    if (!(__twr_v424)) { goto __twr_l46; } else { goto __twr_l47; }
    __twr_l47:;
    __twr_v425 = (uint64_t)(&LirSelect);
    __twr_v426 = 8ULL;
    __twr_v427 = _mng_var421 + __twr_v426;
    __twr_v428 = *(uint64_t*)(__twr_v427);
    __twr_v429 = ((uint64_t (*)(uint64_t))__twr_v425)(__twr_v428);
    _jkl_retv = __twr_v429;
    goto _jkl_epilogue;
    __twr_l46:;
    __twr_v430 = (uint64_t)(&LirGetRegister);
    __twr_v431 = ((uint64_t (*)(uint64_t))__twr_v430)(_mng_var421);
    _jkl_retv = __twr_v431;
    goto _jkl_epilogue;
    __twr_l45:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LirSelectForFunction(uint64_t _mng_funcsym432) {
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t _mng_irfunc436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t _mng_inst443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t __twr_v447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t _mng_lirinst452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    uint64_t __twr_v469;
    uint64_t __twr_v470;
    uint64_t __twr_v471;
    uint64_t __twr_v472;
    uint64_t __twr_v473;
    uint64_t __twr_v474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t __twr_v477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t __twr_v499;
    uint64_t __twr_v500;
    uint64_t __twr_v501;
    uint64_t __twr_v502;
    uint64_t __twr_v503;
    __twr_v433 = 96ULL;
    __twr_v434 = _mng_funcsym432 + __twr_v433;
    __twr_v435 = *(uint64_t*)(__twr_v434);
    _mng_irfunc436 = __twr_v435;
    __twr_v437 = 0ULL;
    __twr_v438 = 24ULL;
    __twr_v439 = _mng_irfunc436 + __twr_v438;
    *(uint64_t*)(__twr_v439) = __twr_v437;
    __twr_v440 = 32ULL;
    __twr_v441 = _mng_irfunc436 + __twr_v440;
    *(uint64_t*)(__twr_v441) = __twr_v437;
    __twr_v442 = *(uint64_t*)(_mng_irfunc436);
    _mng_inst443 = __twr_v442;
    __twr_v444 = (uint64_t)(&LirCurrentFunction);
    *(uint64_t*)(__twr_v444) = _mng_irfunc436;
    if (!(_mng_inst443)) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    __twr_v445 = 88ULL;
    __twr_v446 = _mng_inst443 + __twr_v445;
    __twr_v447 = *(uint8_t*)(__twr_v446);
    __twr_v448 = 21ULL;
    if (__twr_v447 != __twr_v448) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    __twr_v449 = 8ULL;
    __twr_v450 = _mng_inst443 + __twr_v449;
    __twr_v451 = *(uint64_t*)(__twr_v450);
    _mng_lirinst452 = __twr_v451;
    if (_mng_lirinst452) { goto __twr_l55; } else { goto __twr_l56; }
    __twr_l56:;
    __twr_v453 = (uint64_t)(&LirCreateInstruction);
    __twr_v454 = 1ULL;
    __twr_v455 = 0ULL;
    __twr_v456 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v453)(__twr_v454, __twr_v455);
    _mng_lirinst452 = __twr_v456;
    __twr_v457 = 8ULL;
    __twr_v458 = _mng_inst443 + __twr_v457;
    *(uint64_t*)(__twr_v458) = _mng_lirinst452;
    __twr_v459 = 56ULL;
    __twr_v460 = _mng_lirinst452 + __twr_v459;
    *(uint32_t*)(__twr_v460) = __twr_v455;
    __twr_v461 = 4294967295ULL;
    __twr_v462 = 60ULL;
    __twr_v463 = _mng_lirinst452 + __twr_v462;
    *(uint32_t*)(__twr_v463) = __twr_v461;
    __twr_l55:;
    __twr_v464 = (uint64_t)(&LirInsertInstructionTail);
    ((void (*)(uint64_t))__twr_v464)(_mng_lirinst452);
    goto __twr_l52;
    __twr_l54:;
    __twr_v465 = 88ULL;
    __twr_v466 = _mng_inst443 + __twr_v465;
    __twr_v467 = *(uint8_t*)(__twr_v466);
    __twr_v468 = 25ULL;
    if (__twr_v467 == __twr_v468) { goto __twr_l57; } else { goto __twr_l61; }
    __twr_l61:;
    __twr_v469 = 88ULL;
    __twr_v470 = _mng_inst443 + __twr_v469;
    __twr_v471 = *(uint8_t*)(__twr_v470);
    __twr_v472 = 28ULL;
    if (__twr_v471 == __twr_v472) { goto __twr_l57; } else { goto __twr_l60; }
    __twr_l60:;
    __twr_v473 = 88ULL;
    __twr_v474 = _mng_inst443 + __twr_v473;
    __twr_v475 = *(uint8_t*)(__twr_v474);
    __twr_v476 = 6ULL;
    if (__twr_v475 != __twr_v476) { goto __twr_l59; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v477 = 48ULL;
    __twr_v478 = _mng_inst443 + __twr_v477;
    __twr_v479 = *(uint64_t*)(__twr_v478);
    __twr_v480 = *(uint64_t*)(__twr_v479);
    if (__twr_v480) { goto __twr_l57; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v481 = 88ULL;
    __twr_v482 = _mng_inst443 + __twr_v481;
    __twr_v483 = *(uint8_t*)(__twr_v482);
    __twr_v484 = 5ULL;
    if (__twr_v483 != __twr_v484) { goto __twr_l58; } else { goto __twr_l63; }
    __twr_l63:;
    __twr_v485 = 48ULL;
    __twr_v486 = _mng_inst443 + __twr_v485;
    __twr_v487 = *(uint64_t*)(__twr_v486);
    __twr_v488 = 8ULL;
    __twr_v489 = __twr_v487 + __twr_v488;
    __twr_v490 = *(uint64_t*)(__twr_v489);
    if (!(__twr_v490)) { goto __twr_l57; } else { goto __twr_l58; }
    __twr_l58:;
    __twr_v491 = 88ULL;
    __twr_v492 = _mng_inst443 + __twr_v491;
    __twr_v493 = *(uint8_t*)(__twr_v492);
    __twr_v494 = 7ULL;
    if (__twr_v493 <= __twr_v494) { goto __twr_l52; } else { goto __twr_l64; }
    __twr_l64:;
    __twr_v495 = 88ULL;
    __twr_v496 = _mng_inst443 + __twr_v495;
    __twr_v497 = *(uint8_t*)(__twr_v496);
    __twr_v498 = 23ULL;
    if (__twr_v497 >= __twr_v498) { goto __twr_l52; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v499 = (uint64_t)(&LirSelect);
    __twr_v500 = ((uint64_t (*)(uint64_t))__twr_v499)(_mng_inst443);
    __twr_l52:;
    __twr_v501 = 32ULL;
    __twr_v502 = _mng_inst443 + __twr_v501;
    __twr_v503 = *(uint64_t*)(__twr_v502);
    _mng_inst443 = __twr_v503;
    __twr_l51:;
    if (_mng_inst443) { goto __twr_l49; } else { goto __twr_l50; }
    __twr_l50:;
    __twr_l48:;
    _jkl_epilogue:;
}

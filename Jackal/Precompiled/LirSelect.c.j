#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern void TlInitializeZone(uint64_t _mng_zone87, uint64_t _mng_blocksize88);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone89);
extern void TlFreeToZone(uint64_t _mng_zone90, uint64_t _mng_block91);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant92);
extern void TlPunchValue(uint64_t _mng_ptr93, uint64_t _mng_value94, uint64_t _mng_bytes95);
extern void JklCompileProgram(uint64_t _mng_argc96, uint64_t _mng_argv97);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg98);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename99, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock100, uint64_t _mng_filepath101);
extern uint64_t LexLookupSection(uint64_t _mng_name102);
extern void LexPushSection(uint64_t _mng_section103);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope104);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg105);
extern void LexExpandMacro(uint64_t _mng_macro106, uint64_t _mng_token107);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream108, uint64_t _mng_macro109);
extern void LexUninitializeStream(uint64_t _mng_stream110);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream111);
extern void LexPushStream(uint64_t _mng_stream112);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream113, uint64_t _mng_fileblock114, uint64_t _mng_handle115);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock116, uint64_t _mng_handle117);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope118);
extern uint64_t LexResetScope(uint64_t _mng_scope119);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope120);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest121, uint64_t _mng_src122);
extern void LexGetToken(uint64_t _mng_token123);
extern void LexPutbackToken(uint64_t _mng_token124);
extern uint64_t LexMatchToken(uint64_t _mng_token125, uint64_t _mng_type126, uint64_t _mng_subtype127);
extern void LexStreamError(uint64_t _mng_str128, uint64_t _mng_err1129, uint64_t _mng_err2130, uint64_t _mng_err3131);
extern void LexTokenError(uint64_t _mng_token132, uint64_t _mng_str133, uint64_t _mng_err1134, uint64_t _mng_err2135, uint64_t _mng_err3136);
extern uint64_t LexCrunchNumber(uint64_t _mng_token137, uint64_t _mng_buffer138);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node139);
extern uint64_t IrAllocateStack(uint64_t _mng_func140, uint64_t _mng_bytes141);
extern uint64_t IrGetStackOffset(uint64_t _mng_func142, uint64_t _mng_symbol143);
extern uint64_t LirCreateInstruction(uint64_t _mng_type144, uint64_t _mng_machtype145);
extern void LirInsertInstructionTail(uint64_t _mng_lirinst146);
extern void LirRemoveInstruction(uint64_t _mng_lirinst147);
extern uint64_t LirGetLabel(uint64_t _mng_oldlabel148);
extern uint64_t LirCreateRegister();
extern uint64_t LirGetRegister(uint64_t _mng_oldvariable149);
extern uint64_t LirCreatePreallocatedRegister(uint64_t _mng_machreg150);
extern uint64_t LirSelect(uint64_t _mng_inst151);
extern uint64_t LirSelectOrGetRegister(uint64_t _mng_var152);
extern void LirSelectForFunction(uint64_t _mng_funcsym153);
extern void LirAllocateRegistersForFunction(uint64_t _mng_funcsym154);
extern void XrAsmEmit(uint64_t _mng_emitter155);
extern uint64_t LirCurrentFunction;
uint64_t LirCurrentFunction;
uint64_t LirCreateInstruction(uint64_t _mng_type156, uint64_t _mng_machtype157) {
    uint64_t _jkl_retv;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t _mng_lirinst161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    __twr_v158 = (uint64_t)(&TlBumpAlloc);
    __twr_v159 = 98ULL;
    __twr_v160 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v158)(__twr_v159, (uint64_t)(&_mng_lirinst161));
    if (!(__twr_v160)) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_v162 = (uint64_t)(&TlInternalError);
    __twr_v163 = (uint64_t)(&"Failed to create LIR instruction");
    __twr_v164 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v162)(__twr_v163, __twr_v164, __twr_v164, __twr_v164);
    __twr_l2:;
    __twr_v165 = 97ULL;
    __twr_v166 = _mng_lirinst161 + __twr_v165;
    *(uint8_t*)(__twr_v166) = _mng_type156;
    __twr_v167 = 0ULL;
    __twr_v168 = 24ULL;
    __twr_v169 = _mng_lirinst161 + __twr_v168;
    *(uint64_t*)(__twr_v169) = __twr_v167;
    __twr_v170 = 32ULL;
    __twr_v171 = _mng_lirinst161 + __twr_v170;
    *(uint64_t*)(__twr_v171) = __twr_v167;
    __twr_v172 = 40ULL;
    __twr_v173 = _mng_lirinst161 + __twr_v172;
    *(uint64_t*)(__twr_v173) = __twr_v167;
    __twr_v174 = 96ULL;
    __twr_v175 = _mng_lirinst161 + __twr_v174;
    *(uint8_t*)(__twr_v175) = _mng_machtype157;
    _jkl_retv = _mng_lirinst161;
    goto _jkl_epilogue;
    __twr_l1:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirCreateRegister() {
    uint64_t _jkl_retv;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t _mng_reg179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t __twr_v185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    __twr_v176 = (uint64_t)(&TlBumpAlloc);
    __twr_v177 = 61ULL;
    __twr_v178 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v176)(__twr_v177, (uint64_t)(&_mng_reg179));
    if (!(__twr_v178)) { goto __twr_l5; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v180 = (uint64_t)(&TlInternalError);
    __twr_v181 = (uint64_t)(&"Failed to create LIR register");
    __twr_v182 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v180)(__twr_v181, __twr_v182, __twr_v182, __twr_v182);
    __twr_l5:;
    __twr_v183 = 1ULL;
    __twr_v184 = 60ULL;
    __twr_v185 = _mng_reg179 + __twr_v184;
    *(uint8_t*)(__twr_v185) = __twr_v183;
    __twr_v186 = 0ULL;
    *(uint64_t*)(_mng_reg179) = __twr_v186;
    __twr_v187 = 56ULL;
    __twr_v188 = _mng_reg179 + __twr_v187;
    *(uint8_t*)(__twr_v188) = __twr_v186;
    __twr_v189 = 57ULL;
    __twr_v190 = _mng_reg179 + __twr_v189;
    *(uint8_t*)(__twr_v190) = __twr_v186;
    __twr_v191 = 48ULL;
    __twr_v192 = _mng_reg179 + __twr_v191;
    *(uint32_t*)(__twr_v192) = __twr_v186;
    __twr_v193 = 59ULL;
    __twr_v194 = _mng_reg179 + __twr_v193;
    *(uint8_t*)(__twr_v194) = __twr_v186;
    _jkl_retv = _mng_reg179;
    goto _jkl_epilogue;
    __twr_l4:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirCreatePreallocatedRegister(uint64_t _mng_machreg195) {
    uint64_t _jkl_retv;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    __twr_v196 = (uint64_t)(&LirCreateRegister);
    __twr_v197 = ((uint64_t (*)())__twr_v196)();
    __twr_v198 = 3ULL;
    __twr_v199 = 60ULL;
    __twr_v200 = __twr_v197 + __twr_v199;
    *(uint8_t*)(__twr_v200) = __twr_v198;
    __twr_v201 = 58ULL;
    __twr_v202 = __twr_v197 + __twr_v201;
    *(uint8_t*)(__twr_v202) = _mng_machreg195;
    _jkl_retv = __twr_v197;
    goto _jkl_epilogue;
    __twr_l7:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LirInsertInstructionTail(uint64_t _mng_lirinst203) {
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    __twr_v204 = (uint64_t)(&LirCurrentFunction);
    __twr_v205 = *(uint64_t*)(__twr_v204);
    __twr_v206 = 16ULL;
    __twr_v207 = _mng_lirinst203 + __twr_v206;
    *(uint64_t*)(__twr_v207) = __twr_v205;
    __twr_v208 = 0ULL;
    *(uint64_t*)(_mng_lirinst203) = __twr_v208;
    __twr_v209 = *(uint64_t*)(__twr_v204);
    __twr_v210 = 32ULL;
    __twr_v211 = __twr_v209 + __twr_v210;
    __twr_v212 = *(uint64_t*)(__twr_v211);
    __twr_v213 = 8ULL;
    __twr_v214 = _mng_lirinst203 + __twr_v213;
    *(uint64_t*)(__twr_v214) = __twr_v212;
    __twr_v215 = *(uint64_t*)(__twr_v204);
    __twr_v216 = __twr_v215 + __twr_v210;
    __twr_v217 = *(uint64_t*)(__twr_v216);
    if (__twr_v217) { goto __twr_l11; } else { goto __twr_l10; }
    __twr_l10:;
    __twr_v218 = (uint64_t)(&LirCurrentFunction);
    __twr_v219 = *(uint64_t*)(__twr_v218);
    __twr_v220 = 24ULL;
    __twr_v221 = __twr_v219 + __twr_v220;
    *(uint64_t*)(__twr_v221) = _mng_lirinst203;
    goto __twr_l9;
    __twr_l11:;
    __twr_v222 = (uint64_t)(&LirCurrentFunction);
    __twr_v223 = *(uint64_t*)(__twr_v222);
    __twr_v224 = 32ULL;
    __twr_v225 = __twr_v223 + __twr_v224;
    __twr_v226 = *(uint64_t*)(__twr_v225);
    *(uint64_t*)(__twr_v226) = _mng_lirinst203;
    __twr_l9:;
    __twr_v227 = (uint64_t)(&LirCurrentFunction);
    __twr_v228 = *(uint64_t*)(__twr_v227);
    __twr_v229 = 32ULL;
    __twr_v230 = __twr_v228 + __twr_v229;
    *(uint64_t*)(__twr_v230) = _mng_lirinst203;
    __twr_l8:;
    _jkl_epilogue:;
}
void LirRemoveInstruction(uint64_t _mng_lirinst231) {
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t _mng_block235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t _mng_p239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    __twr_v232 = 16ULL;
    __twr_v233 = _mng_lirinst231 + __twr_v232;
    __twr_v234 = *(uint64_t*)(__twr_v233);
    _mng_block235 = __twr_v234;
    __twr_v236 = 8ULL;
    __twr_v237 = _mng_lirinst231 + __twr_v236;
    __twr_v238 = *(uint64_t*)(__twr_v237);
    _mng_p239 = __twr_v238;
    if (!(__twr_v238)) { goto __twr_l15; } else { goto __twr_l14; }
    __twr_l14:;
    __twr_v240 = *(uint64_t*)(_mng_lirinst231);
    *(uint64_t*)(_mng_p239) = __twr_v240;
    goto __twr_l13;
    __twr_l15:;
    __twr_v241 = *(uint64_t*)(_mng_lirinst231);
    __twr_v242 = 24ULL;
    __twr_v243 = _mng_block235 + __twr_v242;
    *(uint64_t*)(__twr_v243) = __twr_v241;
    __twr_l13:;
    __twr_v244 = *(uint64_t*)(_mng_lirinst231);
    _mng_p239 = __twr_v244;
    if (!(__twr_v244)) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v245 = 8ULL;
    __twr_v246 = _mng_lirinst231 + __twr_v245;
    __twr_v247 = *(uint64_t*)(__twr_v246);
    __twr_v248 = _mng_p239 + __twr_v245;
    *(uint64_t*)(__twr_v248) = __twr_v247;
    goto __twr_l16;
    __twr_l18:;
    __twr_v249 = 8ULL;
    __twr_v250 = _mng_lirinst231 + __twr_v249;
    __twr_v251 = *(uint64_t*)(__twr_v250);
    __twr_v252 = 32ULL;
    __twr_v253 = _mng_block235 + __twr_v252;
    *(uint64_t*)(__twr_v253) = __twr_v251;
    __twr_l16:;
    __twr_l12:;
    _jkl_epilogue:;
}
uint64_t LirGetLabel(uint64_t _mng_oldlabel254) {
    uint64_t _jkl_retv;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t _mng_lirinst258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    __twr_v255 = 8ULL;
    __twr_v256 = _mng_oldlabel254 + __twr_v255;
    __twr_v257 = *(uint64_t*)(__twr_v256);
    _mng_lirinst258 = __twr_v257;
    if (!(__twr_v257)) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v259 = 1ULL;
    __twr_v260 = 48ULL;
    __twr_v261 = _mng_lirinst258 + __twr_v260;
    __twr_v262 = *(uint32_t*)(__twr_v261);
    __twr_v263 = __twr_v262 + __twr_v259;
    *(uint32_t*)(__twr_v261) = __twr_v263;
    _jkl_retv = _mng_lirinst258;
    goto _jkl_epilogue;
    __twr_l20:;
    __twr_v264 = (uint64_t)(&LirCreateInstruction);
    __twr_v265 = 1ULL;
    __twr_v266 = 0ULL;
    __twr_v267 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v264)(__twr_v265, __twr_v266);
    _mng_lirinst258 = __twr_v267;
    __twr_v268 = 8ULL;
    __twr_v269 = _mng_oldlabel254 + __twr_v268;
    *(uint64_t*)(__twr_v269) = __twr_v267;
    __twr_v270 = 48ULL;
    __twr_v271 = __twr_v267 + __twr_v270;
    *(uint32_t*)(__twr_v271) = __twr_v265;
    _jkl_retv = __twr_v267;
    goto _jkl_epilogue;
    __twr_l19:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirGetRegister(uint64_t _mng_oldvariable272) {
    uint64_t _jkl_retv;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t _mng_lirreg276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    __twr_v273 = 16ULL;
    __twr_v274 = _mng_oldvariable272 + __twr_v273;
    __twr_v275 = *(uint64_t*)(__twr_v274);
    _mng_lirreg276 = __twr_v275;
    if (!(__twr_v275)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    _jkl_retv = _mng_lirreg276;
    goto _jkl_epilogue;
    __twr_l23:;
    __twr_v277 = (uint64_t)(&LirCreateRegister);
    __twr_v278 = ((uint64_t (*)())__twr_v277)();
    _mng_lirreg276 = __twr_v278;
    __twr_v279 = 16ULL;
    __twr_v280 = _mng_oldvariable272 + __twr_v279;
    *(uint64_t*)(__twr_v280) = __twr_v278;
    __twr_v281 = *(uint64_t*)(_mng_oldvariable272);
    *(uint64_t*)(__twr_v278) = __twr_v281;
    _jkl_retv = __twr_v278;
    goto _jkl_epilogue;
    __twr_l22:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirSelect(uint64_t _mng_inst282) {
    uint64_t _jkl_retv;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t _mng_reg286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    __twr_v283 = 80ULL;
    __twr_v284 = _mng_inst282 + __twr_v283;
    __twr_v285 = *(uint64_t*)(__twr_v284);
    _mng_reg286 = __twr_v285;
    if (!(__twr_v285)) { goto __twr_l26; } else { goto __twr_l27; }
    __twr_l27:;
    _jkl_retv = _mng_reg286;
    goto _jkl_epilogue;
    __twr_l26:;
    __twr_v287 = (uint64_t)(&JklTargetInfo);
    __twr_v288 = *(uint64_t*)(__twr_v287);
    __twr_v289 = 24ULL;
    __twr_v290 = __twr_v288 + __twr_v289;
    __twr_v291 = *(uint64_t*)(__twr_v290);
    __twr_v292 = 88ULL;
    __twr_v293 = _mng_inst282 + __twr_v292;
    __twr_v294 = *(uint8_t*)(__twr_v293);
    __twr_v295 = 3ULL;
    __twr_v296 = __twr_v294 << __twr_v295;
    __twr_v297 = __twr_v291 + __twr_v296;
    __twr_v298 = *(uint64_t*)(__twr_v297);
    __twr_v299 = ((uint64_t (*)(uint64_t))__twr_v298)(_mng_inst282);
    _mng_reg286 = __twr_v299;
    if (!(__twr_v299)) { goto __twr_l28; } else { goto __twr_l30; }
    __twr_l30:;
    __twr_v300 = 60ULL;
    __twr_v301 = _mng_reg286 + __twr_v300;
    __twr_v302 = *(uint8_t*)(__twr_v301);
    __twr_v303 = 3ULL;
    if (__twr_v302 != __twr_v303) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v304 = (uint64_t)(&TlInternalError);
    __twr_v305 = (uint64_t)(&"Prealloc -> Virt TODO");
    __twr_v306 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v304)(__twr_v305, __twr_v306, __twr_v306, __twr_v306);
    __twr_l28:;
    __twr_v307 = 80ULL;
    __twr_v308 = _mng_inst282 + __twr_v307;
    *(uint64_t*)(__twr_v308) = _mng_reg286;
    _jkl_retv = _mng_reg286;
    goto _jkl_epilogue;
    __twr_l25:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirSelectOrGetRegister(uint64_t _mng_var309) {
    uint64_t _jkl_retv;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    __twr_v310 = 8ULL;
    __twr_v311 = _mng_var309 + __twr_v310;
    __twr_v312 = *(uint64_t*)(__twr_v311);
    if (!(__twr_v312)) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v313 = (uint64_t)(&LirSelect);
    __twr_v314 = 8ULL;
    __twr_v315 = _mng_var309 + __twr_v314;
    __twr_v316 = *(uint64_t*)(__twr_v315);
    __twr_v317 = ((uint64_t (*)(uint64_t))__twr_v313)(__twr_v316);
    _jkl_retv = __twr_v317;
    goto _jkl_epilogue;
    __twr_l32:;
    __twr_v318 = (uint64_t)(&LirGetRegister);
    __twr_v319 = ((uint64_t (*)(uint64_t))__twr_v318)(_mng_var309);
    _jkl_retv = __twr_v319;
    goto _jkl_epilogue;
    __twr_l31:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LirSelectForFunction(uint64_t _mng_funcsym320) {
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t _mng_inst330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t _mng_lirinst339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    __twr_v321 = 96ULL;
    __twr_v322 = _mng_funcsym320 + __twr_v321;
    __twr_v323 = *(uint64_t*)(__twr_v322);
    __twr_v324 = 0ULL;
    __twr_v325 = 24ULL;
    __twr_v326 = __twr_v323 + __twr_v325;
    *(uint64_t*)(__twr_v326) = __twr_v324;
    __twr_v327 = 32ULL;
    __twr_v328 = __twr_v323 + __twr_v327;
    *(uint64_t*)(__twr_v328) = __twr_v324;
    __twr_v329 = *(uint64_t*)(__twr_v323);
    _mng_inst330 = __twr_v329;
    __twr_v331 = (uint64_t)(&LirCurrentFunction);
    *(uint64_t*)(__twr_v331) = __twr_v323;
    if (!(__twr_v329)) { goto __twr_l36; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v332 = 88ULL;
    __twr_v333 = _mng_inst330 + __twr_v332;
    __twr_v334 = *(uint8_t*)(__twr_v333);
    __twr_v335 = 21ULL;
    if (__twr_v334 != __twr_v335) { goto __twr_l40; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v336 = 8ULL;
    __twr_v337 = _mng_inst330 + __twr_v336;
    __twr_v338 = *(uint64_t*)(__twr_v337);
    _mng_lirinst339 = __twr_v338;
    if (__twr_v338) { goto __twr_l41; } else { goto __twr_l42; }
    __twr_l42:;
    __twr_v340 = (uint64_t)(&LirCreateInstruction);
    __twr_v341 = 1ULL;
    __twr_v342 = 0ULL;
    __twr_v343 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v340)(__twr_v341, __twr_v342);
    _mng_lirinst339 = __twr_v343;
    __twr_v344 = 8ULL;
    __twr_v345 = _mng_inst330 + __twr_v344;
    *(uint64_t*)(__twr_v345) = __twr_v343;
    __twr_v346 = 48ULL;
    __twr_v347 = __twr_v343 + __twr_v346;
    *(uint32_t*)(__twr_v347) = __twr_v342;
    __twr_l41:;
    __twr_v348 = (uint64_t)(&LirInsertInstructionTail);
    ((void (*)(uint64_t))__twr_v348)(_mng_lirinst339);
    goto __twr_l38;
    __twr_l40:;
    __twr_v349 = 88ULL;
    __twr_v350 = _mng_inst330 + __twr_v349;
    __twr_v351 = *(uint8_t*)(__twr_v350);
    __twr_v352 = 25ULL;
    if (__twr_v351 == __twr_v352) { goto __twr_l43; } else { goto __twr_l46; }
    __twr_l46:;
    __twr_v353 = 88ULL;
    __twr_v354 = _mng_inst330 + __twr_v353;
    __twr_v355 = *(uint8_t*)(__twr_v354);
    __twr_v356 = 28ULL;
    if (__twr_v355 == __twr_v356) { goto __twr_l43; } else { goto __twr_l45; }
    __twr_l45:;
    __twr_v357 = 88ULL;
    __twr_v358 = _mng_inst330 + __twr_v357;
    __twr_v359 = *(uint8_t*)(__twr_v358);
    __twr_v360 = 6ULL;
    if (__twr_v359 != __twr_v360) { goto __twr_l44; } else { goto __twr_l47; }
    __twr_l47:;
    __twr_v361 = 48ULL;
    __twr_v362 = _mng_inst330 + __twr_v361;
    __twr_v363 = *(uint64_t*)(__twr_v362);
    __twr_v364 = *(uint64_t*)(__twr_v363);
    if (__twr_v364) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v365 = 88ULL;
    __twr_v366 = _mng_inst330 + __twr_v365;
    __twr_v367 = *(uint8_t*)(__twr_v366);
    __twr_v368 = 7ULL;
    if (__twr_v367 <= __twr_v368) { goto __twr_l38; } else { goto __twr_l48; }
    __twr_l48:;
    __twr_v369 = 88ULL;
    __twr_v370 = _mng_inst330 + __twr_v369;
    __twr_v371 = *(uint8_t*)(__twr_v370);
    __twr_v372 = 23ULL;
    if (__twr_v371 >= __twr_v372) { goto __twr_l38; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v373 = (uint64_t)(&LirSelect);
    __twr_v374 = ((uint64_t (*)(uint64_t))__twr_v373)(_mng_inst330);
    __twr_l38:;
    __twr_v375 = 32ULL;
    __twr_v376 = _mng_inst330 + __twr_v375;
    __twr_v377 = *(uint64_t*)(__twr_v376);
    _mng_inst330 = __twr_v377;
    __twr_l37:;
    if (_mng_inst330) { goto __twr_l35; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_l34:;
    _jkl_epilogue:;
}

#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern void TlInitializeZone(uint64_t _mng_zone87, uint64_t _mng_blocksize88);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone89);
extern void TlFreeToZone(uint64_t _mng_zone90, uint64_t _mng_block91);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant92);
extern void TlPunchValue(uint64_t _mng_ptr93, uint64_t _mng_value94, uint64_t _mng_bytes95);
extern void JklCompileProgram(uint64_t _mng_argc96, uint64_t _mng_argv97);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg98);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename99, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock100, uint64_t _mng_filepath101);
extern uint64_t LexLookupSection(uint64_t _mng_name102);
extern void LexPushSection(uint64_t _mng_section103);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[212];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope104);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg105);
extern void LexExpandMacro(uint64_t _mng_macro106, uint64_t _mng_token107);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream108, uint64_t _mng_macro109);
extern void LexUninitializeStream(uint64_t _mng_stream110);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream111);
extern void LexPushStream(uint64_t _mng_stream112);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream113, uint64_t _mng_fileblock114, uint64_t _mng_handle115);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock116, uint64_t _mng_handle117);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope118);
extern uint64_t LexResetScope(uint64_t _mng_scope119);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope120);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest121, uint64_t _mng_src122);
extern void LexGetToken(uint64_t _mng_token123);
extern void LexPutbackToken(uint64_t _mng_token124);
extern uint64_t LexMatchToken(uint64_t _mng_token125, uint64_t _mng_type126, uint64_t _mng_subtype127);
extern void LexStreamError(uint64_t _mng_str128, uint64_t _mng_err1129, uint64_t _mng_err2130, uint64_t _mng_err3131);
extern void LexTokenError(uint64_t _mng_token132, uint64_t _mng_str133, uint64_t _mng_err1134, uint64_t _mng_err2135, uint64_t _mng_err3136);
extern uint64_t LexCrunchNumber(uint64_t _mng_token137, uint64_t _mng_buffer138);
extern void PrsProgram();
extern void PrsInitialize();
extern uint64_t PrsGlobalListHead;
extern uint64_t PrsFunctionListHead;
extern uint64_t PrsEvaluateType(uint64_t _mng_node139);
extern uint64_t IrAllocateStack(uint64_t _mng_func140, uint64_t _mng_bytes141);
extern uint64_t IrGetStackOffset(uint64_t _mng_func142, uint64_t _mng_symbol143);
extern uint64_t LirCreateInstruction(uint64_t _mng_type144, uint64_t _mng_machtype145);
extern void LirInsertInstructionTail(uint64_t _mng_lirinst146);
extern void LirRemoveInstruction(uint64_t _mng_lirinst147);
extern uint64_t LirGetLabel(uint64_t _mng_oldlabel148);
extern uint64_t LirCreateRegister();
extern uint64_t LirGetRegister(uint64_t _mng_oldvariable149);
extern uint64_t LirSelect(uint64_t _mng_inst150);
extern uint64_t LirSelectOrGetRegister(uint64_t _mng_var151);
extern void LirSelectForFunction(uint64_t _mng_funcsym152);
extern void LirAllocateRegistersForFunction(uint64_t _mng_funcsym153);
extern void XrAsmEmit(uint64_t _mng_emitter154);
extern uint64_t LirCurrentFunction;
uint64_t LirCurrentFunction;
uint64_t LirCreateInstruction(uint64_t _mng_type155, uint64_t _mng_machtype156) {
    uint64_t _jkl_retv;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t _mng_lirinst160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t __twr_v165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    __twr_v157 = (uint64_t)(&TlBumpAlloc);
    __twr_v158 = 98ULL;
    __twr_v159 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v157)(__twr_v158, (uint64_t)(&_mng_lirinst160));
    if (!(__twr_v159)) { goto __twr_l1; } else { goto __twr_l2; }
    __twr_l2:;
    __twr_v161 = (uint64_t)(&TlInternalError);
    __twr_v162 = (uint64_t)(&"Failed to create LIR instruction");
    __twr_v163 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v161)(__twr_v162, __twr_v163, __twr_v163, __twr_v163);
    __twr_l1:;
    __twr_v164 = 97ULL;
    __twr_v165 = _mng_lirinst160 + __twr_v164;
    *(uint8_t*)(__twr_v165) = _mng_type155;
    __twr_v166 = 0ULL;
    __twr_v167 = 24ULL;
    __twr_v168 = _mng_lirinst160 + __twr_v167;
    *(uint64_t*)(__twr_v168) = __twr_v166;
    __twr_v169 = 32ULL;
    __twr_v170 = _mng_lirinst160 + __twr_v169;
    *(uint64_t*)(__twr_v170) = __twr_v166;
    __twr_v171 = 40ULL;
    __twr_v172 = _mng_lirinst160 + __twr_v171;
    *(uint64_t*)(__twr_v172) = __twr_v166;
    __twr_v173 = 96ULL;
    __twr_v174 = _mng_lirinst160 + __twr_v173;
    *(uint8_t*)(__twr_v174) = _mng_machtype156;
    _jkl_retv = _mng_lirinst160;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirCreateRegister() {
    uint64_t _jkl_retv;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t _mng_reg178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    __twr_v175 = (uint64_t)(&TlBumpAlloc);
    __twr_v176 = 3ULL;
    __twr_v177 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v175)(__twr_v176, (uint64_t)(&_mng_reg178));
    if (!(__twr_v177)) { goto __twr_l3; } else { goto __twr_l4; }
    __twr_l4:;
    __twr_v179 = (uint64_t)(&TlInternalError);
    __twr_v180 = (uint64_t)(&"Failed to create LIR register");
    __twr_v181 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v179)(__twr_v180, __twr_v181, __twr_v181, __twr_v181);
    __twr_l3:;
    __twr_v182 = 1ULL;
    __twr_v183 = 2ULL;
    __twr_v184 = _mng_reg178 + __twr_v183;
    *(uint8_t*)(__twr_v184) = __twr_v182;
    _jkl_retv = _mng_reg178;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LirInsertInstructionTail(uint64_t _mng_lirinst185) {
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    __twr_v186 = (uint64_t)(&TlPrintNumber);
    __twr_v187 = 97ULL;
    __twr_v188 = _mng_lirinst185 + __twr_v187;
    __twr_v189 = *(uint8_t*)(__twr_v188);
    ((void (*)(uint64_t))__twr_v186)(__twr_v189);
    __twr_v190 = (uint64_t)(&TlPrintString);
    __twr_v191 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v190)(__twr_v191);
    __twr_v192 = 96ULL;
    __twr_v193 = _mng_lirinst185 + __twr_v192;
    __twr_v194 = *(uint8_t*)(__twr_v193);
    ((void (*)(uint64_t))__twr_v186)(__twr_v194);
    __twr_v195 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v190)(__twr_v195);
    __twr_v196 = (uint64_t)(&LirCurrentFunction);
    __twr_v197 = *(uint64_t*)(__twr_v196);
    __twr_v198 = 16ULL;
    __twr_v199 = _mng_lirinst185 + __twr_v198;
    *(uint64_t*)(__twr_v199) = __twr_v197;
    __twr_v200 = 0ULL;
    *(uint64_t*)(_mng_lirinst185) = __twr_v200;
    __twr_v201 = *(uint64_t*)(__twr_v196);
    __twr_v202 = 24ULL;
    __twr_v203 = __twr_v201 + __twr_v202;
    __twr_v204 = *(uint64_t*)(__twr_v203);
    __twr_v205 = 8ULL;
    __twr_v206 = _mng_lirinst185 + __twr_v205;
    *(uint64_t*)(__twr_v206) = __twr_v204;
    __twr_v207 = *(uint64_t*)(__twr_v196);
    __twr_v208 = __twr_v207 + __twr_v202;
    __twr_v209 = *(uint64_t*)(__twr_v208);
    if (__twr_v209) { goto __twr_l7; } else { goto __twr_l6; }
    __twr_l6:;
    __twr_v210 = (uint64_t)(&LirCurrentFunction);
    __twr_v211 = *(uint64_t*)(__twr_v210);
    __twr_v212 = 16ULL;
    __twr_v213 = __twr_v211 + __twr_v212;
    *(uint64_t*)(__twr_v213) = _mng_lirinst185;
    goto __twr_l5;
    __twr_l7:;
    __twr_v214 = (uint64_t)(&LirCurrentFunction);
    __twr_v215 = *(uint64_t*)(__twr_v214);
    __twr_v216 = 24ULL;
    __twr_v217 = __twr_v215 + __twr_v216;
    __twr_v218 = *(uint64_t*)(__twr_v217);
    *(uint64_t*)(__twr_v218) = _mng_lirinst185;
    __twr_l5:;
    __twr_v219 = (uint64_t)(&LirCurrentFunction);
    __twr_v220 = *(uint64_t*)(__twr_v219);
    __twr_v221 = 24ULL;
    __twr_v222 = __twr_v220 + __twr_v221;
    *(uint64_t*)(__twr_v222) = _mng_lirinst185;
    _jkl_epilogue:;
}
void LirRemoveInstruction(uint64_t _mng_lirinst223) {
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t _mng_block227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t _mng_p231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    __twr_v224 = 16ULL;
    __twr_v225 = _mng_lirinst223 + __twr_v224;
    __twr_v226 = *(uint64_t*)(__twr_v225);
    _mng_block227 = __twr_v226;
    __twr_v228 = 8ULL;
    __twr_v229 = _mng_lirinst223 + __twr_v228;
    __twr_v230 = *(uint64_t*)(__twr_v229);
    _mng_p231 = __twr_v230;
    if (!(__twr_v230)) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v232 = *(uint64_t*)(_mng_lirinst223);
    *(uint64_t*)(_mng_p231) = __twr_v232;
    goto __twr_l8;
    __twr_l10:;
    __twr_v233 = *(uint64_t*)(_mng_lirinst223);
    __twr_v234 = 16ULL;
    __twr_v235 = _mng_block227 + __twr_v234;
    *(uint64_t*)(__twr_v235) = __twr_v233;
    __twr_l8:;
    __twr_v236 = *(uint64_t*)(_mng_lirinst223);
    _mng_p231 = __twr_v236;
    if (!(__twr_v236)) { goto __twr_l13; } else { goto __twr_l12; }
    __twr_l12:;
    __twr_v237 = 8ULL;
    __twr_v238 = _mng_lirinst223 + __twr_v237;
    __twr_v239 = *(uint64_t*)(__twr_v238);
    __twr_v240 = _mng_p231 + __twr_v237;
    *(uint64_t*)(__twr_v240) = __twr_v239;
    goto __twr_l11;
    __twr_l13:;
    __twr_v241 = 8ULL;
    __twr_v242 = _mng_lirinst223 + __twr_v241;
    __twr_v243 = *(uint64_t*)(__twr_v242);
    __twr_v244 = 24ULL;
    __twr_v245 = _mng_block227 + __twr_v244;
    *(uint64_t*)(__twr_v245) = __twr_v243;
    __twr_l11:;
    _jkl_epilogue:;
}
uint64_t LirGetLabel(uint64_t _mng_oldlabel246) {
    uint64_t _jkl_retv;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t _mng_lirinst250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    __twr_v247 = 8ULL;
    __twr_v248 = _mng_oldlabel246 + __twr_v247;
    __twr_v249 = *(uint64_t*)(__twr_v248);
    _mng_lirinst250 = __twr_v249;
    if (!(__twr_v249)) { goto __twr_l14; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v251 = 1ULL;
    __twr_v252 = 48ULL;
    __twr_v253 = _mng_lirinst250 + __twr_v252;
    __twr_v254 = *(uint32_t*)(__twr_v253);
    __twr_v255 = __twr_v254 + __twr_v251;
    *(uint32_t*)(__twr_v253) = __twr_v255;
    _jkl_retv = _mng_lirinst250;
    goto _jkl_epilogue;
    __twr_l14:;
    __twr_v256 = (uint64_t)(&LirCreateInstruction);
    __twr_v257 = 1ULL;
    __twr_v258 = 0ULL;
    __twr_v259 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v256)(__twr_v257, __twr_v258);
    _mng_lirinst250 = __twr_v259;
    __twr_v260 = 8ULL;
    __twr_v261 = _mng_oldlabel246 + __twr_v260;
    *(uint64_t*)(__twr_v261) = __twr_v259;
    __twr_v262 = 48ULL;
    __twr_v263 = __twr_v259 + __twr_v262;
    *(uint32_t*)(__twr_v263) = __twr_v257;
    _jkl_retv = __twr_v259;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirGetRegister(uint64_t _mng_oldvariable264) {
    uint64_t _jkl_retv;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t _mng_lirreg268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    __twr_v265 = 16ULL;
    __twr_v266 = _mng_oldvariable264 + __twr_v265;
    __twr_v267 = *(uint64_t*)(__twr_v266);
    _mng_lirreg268 = __twr_v267;
    if (!(__twr_v267)) { goto __twr_l16; } else { goto __twr_l17; }
    __twr_l17:;
    _jkl_retv = _mng_lirreg268;
    goto _jkl_epilogue;
    __twr_l16:;
    __twr_v269 = (uint64_t)(&LirCreateRegister);
    __twr_v270 = ((uint64_t (*)())__twr_v269)();
    _mng_lirreg268 = __twr_v270;
    __twr_v271 = 16ULL;
    __twr_v272 = _mng_oldvariable264 + __twr_v271;
    *(uint64_t*)(__twr_v272) = __twr_v270;
    _jkl_retv = __twr_v270;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirSelect(uint64_t _mng_inst273) {
    uint64_t _jkl_retv;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t _mng_reg277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    __twr_v274 = 80ULL;
    __twr_v275 = _mng_inst273 + __twr_v274;
    __twr_v276 = *(uint64_t*)(__twr_v275);
    _mng_reg277 = __twr_v276;
    if (!(__twr_v276)) { goto __twr_l18; } else { goto __twr_l19; }
    __twr_l19:;
    _jkl_retv = _mng_reg277;
    goto _jkl_epilogue;
    __twr_l18:;
    __twr_v278 = (uint64_t)(&JklTargetInfo);
    __twr_v279 = *(uint64_t*)(__twr_v278);
    __twr_v280 = 24ULL;
    __twr_v281 = __twr_v279 + __twr_v280;
    __twr_v282 = *(uint64_t*)(__twr_v281);
    __twr_v283 = 88ULL;
    __twr_v284 = _mng_inst273 + __twr_v283;
    __twr_v285 = *(uint8_t*)(__twr_v284);
    __twr_v286 = 3ULL;
    __twr_v287 = __twr_v285 << __twr_v286;
    __twr_v288 = __twr_v282 + __twr_v287;
    __twr_v289 = *(uint64_t*)(__twr_v288);
    __twr_v290 = ((uint64_t (*)(uint64_t))__twr_v289)(_mng_inst273);
    _mng_reg277 = __twr_v290;
    if (!(__twr_v290)) { goto __twr_l20; } else { goto __twr_l22; }
    __twr_l22:;
    __twr_v291 = 2ULL;
    __twr_v292 = _mng_reg277 + __twr_v291;
    __twr_v293 = *(uint8_t*)(__twr_v292);
    __twr_v294 = 0ULL;
    if (__twr_v293 != __twr_v294) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v295 = (uint64_t)(&TlInternalError);
    __twr_v296 = (uint64_t)(&"Machine -> Virt TODO");
    __twr_v297 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v295)(__twr_v296, __twr_v297, __twr_v297, __twr_v297);
    __twr_l20:;
    __twr_v298 = 80ULL;
    __twr_v299 = _mng_inst273 + __twr_v298;
    *(uint64_t*)(__twr_v299) = _mng_reg277;
    _jkl_retv = _mng_reg277;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LirSelectOrGetRegister(uint64_t _mng_var300) {
    uint64_t _jkl_retv;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    __twr_v301 = 8ULL;
    __twr_v302 = _mng_var300 + __twr_v301;
    __twr_v303 = *(uint64_t*)(__twr_v302);
    if (!(__twr_v303)) { goto __twr_l23; } else { goto __twr_l24; }
    __twr_l24:;
    __twr_v304 = (uint64_t)(&LirSelect);
    __twr_v305 = 8ULL;
    __twr_v306 = _mng_var300 + __twr_v305;
    __twr_v307 = *(uint64_t*)(__twr_v306);
    __twr_v308 = ((uint64_t (*)(uint64_t))__twr_v304)(__twr_v307);
    _jkl_retv = __twr_v308;
    goto _jkl_epilogue;
    __twr_l23:;
    __twr_v309 = (uint64_t)(&LirGetRegister);
    __twr_v310 = ((uint64_t (*)(uint64_t))__twr_v309)(_mng_var300);
    _jkl_retv = __twr_v310;
    goto _jkl_epilogue;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LirSelectForFunction(uint64_t _mng_funcsym311) {
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t _mng_inst321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t _mng_lirinst330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    __twr_v312 = 96ULL;
    __twr_v313 = _mng_funcsym311 + __twr_v312;
    __twr_v314 = *(uint64_t*)(__twr_v313);
    __twr_v315 = 0ULL;
    __twr_v316 = 16ULL;
    __twr_v317 = __twr_v314 + __twr_v316;
    *(uint64_t*)(__twr_v317) = __twr_v315;
    __twr_v318 = 24ULL;
    __twr_v319 = __twr_v314 + __twr_v318;
    *(uint64_t*)(__twr_v319) = __twr_v315;
    __twr_v320 = *(uint64_t*)(__twr_v314);
    _mng_inst321 = __twr_v320;
    __twr_v322 = (uint64_t)(&LirCurrentFunction);
    *(uint64_t*)(__twr_v322) = __twr_v314;
    if (!(__twr_v320)) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    __twr_v323 = 88ULL;
    __twr_v324 = _mng_inst321 + __twr_v323;
    __twr_v325 = *(uint8_t*)(__twr_v324);
    __twr_v326 = 21ULL;
    if (__twr_v325 != __twr_v326) { goto __twr_l30; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v327 = 8ULL;
    __twr_v328 = _mng_inst321 + __twr_v327;
    __twr_v329 = *(uint64_t*)(__twr_v328);
    _mng_lirinst330 = __twr_v329;
    if (__twr_v329) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v331 = (uint64_t)(&LirCreateInstruction);
    __twr_v332 = 1ULL;
    __twr_v333 = 0ULL;
    __twr_v334 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v331)(__twr_v332, __twr_v333);
    _mng_lirinst330 = __twr_v334;
    __twr_v335 = 8ULL;
    __twr_v336 = _mng_inst321 + __twr_v335;
    *(uint64_t*)(__twr_v336) = __twr_v334;
    __twr_v337 = 48ULL;
    __twr_v338 = __twr_v334 + __twr_v337;
    *(uint32_t*)(__twr_v338) = __twr_v333;
    __twr_l31:;
    __twr_v339 = (uint64_t)(&LirInsertInstructionTail);
    ((void (*)(uint64_t))__twr_v339)(_mng_lirinst330);
    goto __twr_l28;
    __twr_l30:;
    __twr_v340 = 88ULL;
    __twr_v341 = _mng_inst321 + __twr_v340;
    __twr_v342 = *(uint8_t*)(__twr_v341);
    __twr_v343 = 25ULL;
    if (__twr_v342 == __twr_v343) { goto __twr_l33; } else { goto __twr_l36; }
    __twr_l36:;
    __twr_v344 = 88ULL;
    __twr_v345 = _mng_inst321 + __twr_v344;
    __twr_v346 = *(uint8_t*)(__twr_v345);
    __twr_v347 = 26ULL;
    if (__twr_v346 == __twr_v347) { goto __twr_l33; } else { goto __twr_l35; }
    __twr_l35:;
    __twr_v348 = 88ULL;
    __twr_v349 = _mng_inst321 + __twr_v348;
    __twr_v350 = *(uint8_t*)(__twr_v349);
    __twr_v351 = 6ULL;
    if (__twr_v350 != __twr_v351) { goto __twr_l34; } else { goto __twr_l37; }
    __twr_l37:;
    __twr_v352 = 48ULL;
    __twr_v353 = _mng_inst321 + __twr_v352;
    __twr_v354 = *(uint64_t*)(__twr_v353);
    __twr_v355 = *(uint64_t*)(__twr_v354);
    if (__twr_v355) { goto __twr_l33; } else { goto __twr_l34; }
    __twr_l34:;
    __twr_v356 = 88ULL;
    __twr_v357 = _mng_inst321 + __twr_v356;
    __twr_v358 = *(uint8_t*)(__twr_v357);
    __twr_v359 = 7ULL;
    if (__twr_v358 <= __twr_v359) { goto __twr_l28; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v360 = 88ULL;
    __twr_v361 = _mng_inst321 + __twr_v360;
    __twr_v362 = *(uint8_t*)(__twr_v361);
    __twr_v363 = 23ULL;
    if (__twr_v362 >= __twr_v363) { goto __twr_l28; } else { goto __twr_l33; }
    __twr_l33:;
    __twr_v364 = (uint64_t)(&LirSelect);
    __twr_v365 = ((uint64_t (*)(uint64_t))__twr_v364)(_mng_inst321);
    __twr_l28:;
    __twr_v366 = 32ULL;
    __twr_v367 = _mng_inst321 + __twr_v366;
    __twr_v368 = *(uint64_t*)(__twr_v367);
    _mng_inst321 = __twr_v368;
    __twr_l27:;
    if (_mng_inst321) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    _jkl_epilogue:;
}

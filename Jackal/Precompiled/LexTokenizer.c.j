#include <stdint.h>
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str1);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr2, uint64_t _mng_sz3, uint64_t _mng_byte4);
extern void TlCopyMemory(uint64_t _mng_dest5, uint64_t _mng_src6, uint64_t _mng_sz7);
extern void TlPrintString(uint64_t _mng_str8);
extern void TlPrintNumber(uint64_t _mng_num9);
extern void TlPrintCharacter(uint64_t _mng_byte10);
extern void TlInternalError(uint64_t _mng_str11, uint64_t _mng_err112, uint64_t _mng_err213, uint64_t _mng_err314);
extern void TlUserError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes19, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes20, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr21);
extern uint64_t TlCompareString(uint64_t _mng_str122, uint64_t _mng_str223);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str124, uint64_t _mng_str225, uint64_t _mng_count26);
extern void TlCopyString(uint64_t _mng_dest27, uint64_t _mng_src28, uint64_t _mng_bufsize29);
extern uint64_t TlOpenSource(uint64_t _mng_filename30, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename31, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle32);
extern uint64_t TlReadFile(uint64_t _mng_handle33, uint64_t _mng_bytes34, uint64_t _mng_buffer35);
extern uint64_t TlWriteFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable39);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable40);
extern void TlInsertHashTable(uint64_t _mng_hashtable41, uint64_t _mng_entry42, uint64_t _mng_key43);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entrysize48, uint64_t _mng_key49, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable50, uint64_t _mng_key51);
extern void TlRemoveHashTable(uint64_t _mng_entry52);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable53, uint64_t _mng_enumfunc54);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable55, uint64_t _mng_key56, uint64_t _mng_hash57);
extern uint64_t TlHashString(uint64_t _mng_str58);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable59, uint64_t _mng_outerscope60, uint64_t _mng_deletefunc61);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope62, uint64_t _mng_deletefunc63);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable64);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable65, uint64_t _mng_name66);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable67, uint64_t _mng_entry68, uint64_t _mng_name69);
extern void TlRemoveSymbolTable(uint64_t _mng_entry70);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array71);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array72);
extern void TlInsertDynamicBuffer(uint64_t _mng_array73, uint64_t _mng_byte74);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array75, uint64_t _mng_srcbuf76, uint64_t _mng_length77);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_number79, uint64_t _mng_base80);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array81);
extern uint64_t TlMatchPath(uint64_t _mng_path82, uint64_t _mng_pathset83, uint64_t _mng_resultingpath84, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath85, uint64_t _mng_destpath86);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path87);
extern uint64_t TlPathExists(uint64_t _mng_path88);
extern uint64_t TlIterateDirectory(uint64_t _mng_path89, uint64_t _mng_callback90, uint64_t _mng_context91);
extern uint64_t TlGetPathExtension(uint64_t _mng_path92);
extern uint64_t TlStatFile(uint64_t _mng_path93, uint64_t _mng_statrecord94);
extern uint64_t TlCreateDirectory(uint64_t _mng_path95);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path96);
extern void TlInitializeZone(uint64_t _mng_zone97, uint64_t _mng_blocksize98);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone99);
extern void TlFreeToZone(uint64_t _mng_zone100, uint64_t _mng_block101);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant102);
extern void TlPunchValue(uint64_t _mng_ptr103, uint64_t _mng_value104, uint64_t _mng_bytes105);
extern uint64_t TlTokenize(uint64_t _mng_buffer106, uint64_t _mng_tokenbuffer107, uint64_t _mng_bufsize108, uint64_t _mng_delimiter109);
extern uint64_t TlStringToNumber(uint64_t _mng_src110, uint64_t _mng_bufsize111, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler112);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine113, uint64_t _mng_arg114, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread115);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex116);
extern void TlReleaseMutex(uint64_t _mng_mutex117);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue118);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore119);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore120);
extern void JklCompileProgram(uint64_t _mng_argc121, uint64_t _mng_argv122);
extern uint64_t FeLibraryDirectory[32];
extern uint64_t FeIncludeDirectory[32];
extern uint64_t FeInputFile[32];
extern uint64_t FeOutputFile[32];
extern uint64_t FeInputFileHandle;
extern uint64_t FeOutputFileHandle;
extern uint64_t FeOutputHeaders;
extern uint64_t JklTargetInfo;
extern uint64_t JklPrimitiveTypeMasks[14];
extern uint64_t JklSignExtendedTypeMasks[14];
extern uint64_t FeIsMacroArgument(uint64_t _mng_arg123);
extern uint64_t FeCreateFileBlock(uint64_t _mng_includename124, uint64_t _mng_o_created);
extern void FeCopyPathFileBlock(uint64_t _mng_fileblock125, uint64_t _mng_filepath126);
extern uint64_t LexLookupSection(uint64_t _mng_name127);
extern void LexPushSection(uint64_t _mng_section128);
extern uint64_t LexPopSection();
extern uint64_t LexNextSymbolSection;
extern uint64_t LexCurrentSection;
extern uint64_t LexSectionListHead;
extern uint64_t LexDefaultSection[234];
extern uint64_t LexTextSection[234];
extern uint64_t LexDataSection[234];
extern uint64_t LexBssSection[234];
extern uint64_t LexCharTreatment[32];
extern uint64_t LexCurrentStream;
extern uint64_t LexCurrentMacroScope;
extern uint64_t LexRootScope;
extern uint64_t LexCurrentScope;
extern uint32_t LexFalseCount;
extern uint32_t LexMacroDepth;
extern uint64_t LexAsmBlockListHead;
extern void LexInitialize();
extern uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope129);
extern void LexInitializeSectionStuff();
extern void LexInitializePreprocessor();
extern void LexDefineMacroFromArgumentString(uint64_t _mng_arg130);
extern void LexExpandMacro(uint64_t _mng_macro131, uint64_t _mng_token132);
extern void LexInitializeStreamZone();
extern void LexInitializeStream(uint64_t _mng_stream133, uint64_t _mng_macro134);
extern void LexUninitializeStream(uint64_t _mng_stream135);
extern uint64_t LexAllocateStream();
extern void LexFreeStream(uint64_t _mng_stream136);
extern void LexPushStream(uint64_t _mng_stream137);
extern uint64_t LexPopStream();
extern void LexInitializeFileStream(uint64_t _mng_stream138, uint64_t _mng_fileblock139, uint64_t _mng_handle140);
extern uint64_t LexCreateFileStream(uint64_t _mng_fileblock141, uint64_t _mng_handle142);
extern uint64_t LexStreamNextCharacter();
extern void LexParseDirective();
extern uint64_t LexEnterScope(uint64_t _mng_scope143);
extern uint64_t LexResetScope(uint64_t _mng_scope144);
extern void LexLeaveScope();
extern void LexEnterOverlayScope(uint64_t _mng_scope145);
extern void LexExitOverlayScope();
extern void LexEnterMacroFreeZone();
extern void LexLeaveMacroFreeZone();
extern void LexCopyToken(uint64_t _mng_dest146, uint64_t _mng_src147);
extern void LexGetToken(uint64_t _mng_token148);
extern void LexPutbackToken(uint64_t _mng_token149);
extern uint64_t LexMatchToken(uint64_t _mng_token150, uint64_t _mng_type151, uint64_t _mng_subtype152);
extern void LexStreamError(uint64_t _mng_str153, uint64_t _mng_err1154, uint64_t _mng_err2155, uint64_t _mng_err3156);
extern void LexTokenError(uint64_t _mng_token157, uint64_t _mng_str158, uint64_t _mng_err1159, uint64_t _mng_err2160, uint64_t _mng_err3161);
extern uint64_t LexCrunchNumber(uint64_t _mng_token162, uint64_t _mng_buffer163);
uint64_t LexCharTreatment[32] = {
    0x0000000000000004,
    0x0000000000030300,
    0x0000000000000000,
    0x0000000000000000,
    0x0002020201000203,
    0x0202020102020101,
    0x0000000000000000,
    0x0002020200010000,
    0x0000000000000002,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010001000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0001010201000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
};
uint64_t LexCurrentStream = 0ULL;
uint64_t LexRootScope = 0ULL;
uint64_t LexCurrentScope = 0ULL;
uint32_t LexFalseCount = 0ULL;
uint64_t LexMacroFree = 0ULL;
uint64_t LexSavedMacro = 0ULL;
uint64_t LexSavedMacroToken[4];
uint64_t LexCurrentOverlayScope = 0ULL;
uint64_t LexPutbackStack[1024];
uint32_t LexPutbackStackPtr = 0ULL;
uint64_t LexInternedStringZone[2];
uint64_t LexKeywordHashTable[196];
uint64_t LexKeywordBumpArray[896];
uint64_t LexKeywordBumpIndex = 0ULL;
void LexInsertKeyword(uint64_t _mng_name164, uint64_t _mng_type165, uint64_t _mng_subtype166, uint64_t _mng_context167) {
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t _mng_keyword174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    uint64_t __twr_v177;
    uint64_t __twr_v178;
    uint64_t __twr_v179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    __twr_v168 = (uint64_t)(&LexKeywordBumpArray);
    __twr_v169 = (uint64_t)(&LexKeywordBumpIndex);
    __twr_v170 = *(uint64_t*)(__twr_v169);
    __twr_v171 = 56ULL;
    __twr_v172 = __twr_v170 * __twr_v171;
    __twr_v173 = __twr_v168 + __twr_v172;
    _mng_keyword174 = __twr_v173;
    __twr_v175 = 1ULL;
    __twr_v176 = __twr_v170 + __twr_v175;
    *(uint64_t*)(__twr_v169) = __twr_v176;
    __twr_v177 = 48ULL;
    __twr_v178 = _mng_keyword174 + __twr_v177;
    *(uint8_t*)(__twr_v178) = _mng_type165;
    __twr_v179 = 49ULL;
    __twr_v180 = _mng_keyword174 + __twr_v179;
    *(uint8_t*)(__twr_v180) = _mng_subtype166;
    __twr_v181 = 50ULL;
    __twr_v182 = _mng_keyword174 + __twr_v181;
    *(uint8_t*)(__twr_v182) = _mng_context167;
    __twr_v183 = (uint64_t)(&TlInsertHashTable);
    __twr_v184 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v183)(__twr_v184, _mng_keyword174, _mng_name164);
    __twr_l1:;
    _jkl_epilogue:;
}
void LexDeleteSymbol(uint64_t _mng_entry185) {
    __twr_l2:;
    _jkl_epilogue:;
}
uint64_t LexCreateSymbolTable(uint64_t _mng_outerscope186) {
    uint64_t _jkl_retv;
    uint64_t __twr_v187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    __twr_v187 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v188 = (uint64_t)(&LexDeleteSymbol);
    __twr_v189 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v187)(_mng_outerscope186, __twr_v188);
    _jkl_retv = __twr_v189;
    goto _jkl_epilogue;
    __twr_l3:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexInitialize() {
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_dumpster195;
    uint64_t _mng_fileblock196;
    uint64_t __twr_v197;
    uint64_t __twr_v198;
    uint64_t __twr_v199;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t _mng_filestream204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t __twr_v211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    uint64_t __twr_v226;
    uint64_t __twr_v227;
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t __twr_v231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t __twr_v237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t __twr_v256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    uint64_t __twr_v274;
    uint64_t __twr_v275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t __twr_v285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t __twr_v291;
    uint64_t __twr_v292;
    uint64_t __twr_v293;
    uint64_t __twr_v294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    uint64_t __twr_v302;
    uint64_t __twr_v303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    uint64_t __twr_v327;
    uint64_t __twr_v328;
    uint64_t __twr_v329;
    uint64_t __twr_v330;
    uint64_t __twr_v331;
    uint64_t __twr_v332;
    uint64_t __twr_v333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t __twr_v336;
    uint64_t __twr_v337;
    uint64_t __twr_v338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    uint64_t __twr_v362;
    uint64_t __twr_v363;
    uint64_t __twr_v364;
    uint64_t __twr_v365;
    uint64_t __twr_v366;
    uint64_t __twr_v367;
    uint64_t __twr_v368;
    uint64_t __twr_v369;
    uint64_t __twr_v370;
    uint64_t __twr_v371;
    uint64_t __twr_v372;
    uint64_t __twr_v373;
    uint64_t __twr_v374;
    uint64_t __twr_v375;
    uint64_t __twr_v376;
    uint64_t __twr_v377;
    uint64_t __twr_v378;
    uint64_t __twr_v379;
    uint64_t __twr_v380;
    uint64_t __twr_v381;
    uint64_t __twr_v382;
    uint64_t __twr_v383;
    uint64_t __twr_v384;
    uint64_t __twr_v385;
    uint64_t __twr_v386;
    uint64_t __twr_v387;
    uint64_t __twr_v388;
    uint64_t __twr_v389;
    uint64_t __twr_v390;
    uint64_t __twr_v391;
    uint64_t __twr_v392;
    uint64_t __twr_v393;
    uint64_t __twr_v394;
    uint64_t __twr_v395;
    uint64_t __twr_v396;
    uint64_t __twr_v397;
    uint64_t __twr_v398;
    __twr_v190 = (uint64_t)(&FeCreateFileBlock);
    __twr_v191 = (uint64_t)(&FeInputFile);
    __twr_v192 = 0ULL;
    __twr_v193 = 1ULL;
    __twr_v194 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v190)(__twr_v191, (uint64_t)(&_mng_dumpster195));
    _mng_fileblock196 = __twr_v194;
    __twr_v197 = (uint64_t)(&FeCopyPathFileBlock);
    ((void (*)(uint64_t, uint64_t))__twr_v197)(_mng_fileblock196, __twr_v191);
    __twr_v198 = (uint64_t)(&LexInitializeSectionStuff);
    ((void (*)())__twr_v198)();
    __twr_v199 = (uint64_t)(&LexInitializeStreamZone);
    ((void (*)())__twr_v199)();
    __twr_v200 = (uint64_t)(&LexCreateFileStream);
    __twr_v201 = (uint64_t)(&FeInputFileHandle);
    __twr_v202 = *(uint64_t*)(__twr_v201);
    __twr_v203 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v200)(_mng_fileblock196, __twr_v202);
    _mng_filestream204 = __twr_v203;
    __twr_v205 = (uint64_t)(&LexPushStream);
    ((void (*)(uint64_t))__twr_v205)(_mng_filestream204);
    __twr_v206 = (uint64_t)(&LexCreateSymbolTable);
    __twr_v207 = ((uint64_t (*)(uint64_t))__twr_v206)(__twr_v192);
    __twr_v208 = (uint64_t)(&LexRootScope);
    *(uint64_t*)(__twr_v208) = __twr_v207;
    __twr_v209 = *(uint64_t*)(__twr_v208);
    __twr_v210 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v210) = __twr_v209;
    __twr_v211 = (uint64_t)(&TlInitializeZone);
    __twr_v212 = (uint64_t)(&LexInternedStringZone);
    __twr_v213 = 152ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v211)(__twr_v212, __twr_v213);
    __twr_v214 = (uint64_t)(&TlInitializeHashTable);
    __twr_v215 = (uint64_t)(&LexKeywordHashTable);
    ((void (*)(uint64_t))__twr_v214)(__twr_v215);
    __twr_v216 = (uint64_t)(&LexInsertKeyword);
    __twr_v217 = (uint64_t)(&"AND");
    __twr_v218 = 3ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v217, __twr_v218, __twr_v193, __twr_v192);
    __twr_v219 = (uint64_t)(&"BREAK");
    __twr_v220 = 2ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v219, __twr_v193, __twr_v220, __twr_v192);
    __twr_v221 = (uint64_t)(&"BYTE");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v221, __twr_v220, __twr_v218, __twr_v220);
    __twr_v222 = (uint64_t)(&"CAST");
    __twr_v223 = 4ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v222, __twr_v218, __twr_v223, __twr_v192);
    __twr_v224 = (uint64_t)(&"CONTAINEROF");
    __twr_v225 = 5ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v224, __twr_v218, __twr_v225, __twr_v192);
    __twr_v226 = (uint64_t)(&"CONTINUE");
    __twr_v227 = 6ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v226, __twr_v193, __twr_v227, __twr_v192);
    __twr_v228 = (uint64_t)(&"DO");
    __twr_v229 = 7ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v228, __twr_v229, __twr_v229, __twr_v192);
    __twr_v230 = (uint64_t)(&"ELSE");
    __twr_v231 = 9ULL;
    __twr_v232 = 8ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v230, __twr_v231, __twr_v232, __twr_v192);
    __twr_v233 = (uint64_t)(&"ELSEIF");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v233, __twr_v231, __twr_v231, __twr_v192);
    __twr_v234 = (uint64_t)(&"END");
    __twr_v235 = 10ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v234, __twr_v231, __twr_v235, __twr_v192);
    __twr_v236 = (uint64_t)(&"ENUM");
    __twr_v237 = 11ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v236, __twr_v227, __twr_v237, __twr_v192);
    __twr_v238 = (uint64_t)(&"EXTERN");
    __twr_v239 = 12ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v238, __twr_v227, __twr_v239, __twr_v192);
    __twr_v240 = (uint64_t)(&"FALSE");
    __twr_v241 = 13ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v240, __twr_v223, __twr_v241, __twr_v192);
    __twr_v242 = (uint64_t)(&"FN");
    __twr_v243 = 14ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v242, __twr_v227, __twr_v243, __twr_v192);
    __twr_v244 = (uint64_t)(&"FNPTR");
    __twr_v245 = 15ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v244, __twr_v227, __twr_v245, __twr_v192);
    __twr_v246 = (uint64_t)(&"GOTO");
    __twr_v247 = 16ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v246, __twr_v193, __twr_v247, __twr_v192);
    __twr_v248 = (uint64_t)(&"IF");
    __twr_v249 = 17ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v248, __twr_v193, __twr_v249, __twr_v192);
    __twr_v250 = (uint64_t)(&"IN");
    __twr_v251 = 18ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v250, __twr_v225, __twr_v251, __twr_v192);
    __twr_v252 = (uint64_t)(&"INT");
    __twr_v253 = 19ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v252, __twr_v220, __twr_v253, __twr_v218);
    __twr_v254 = (uint64_t)(&"LEAVE");
    __twr_v255 = 20ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v254, __twr_v193, __twr_v255, __twr_v192);
    __twr_v256 = (uint64_t)(&"LONG");
    __twr_v257 = 21ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v256, __twr_v220, __twr_v257, __twr_v223);
    __twr_v258 = (uint64_t)(&"NOT");
    __twr_v259 = 22ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v258, __twr_v218, __twr_v259, __twr_v192);
    __twr_v260 = (uint64_t)(&"NULLPTR");
    __twr_v261 = 23ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v260, __twr_v223, __twr_v261, __twr_v192);
    __twr_v262 = (uint64_t)(&"OR");
    __twr_v263 = 24ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v262, __twr_v218, __twr_v263, __twr_v192);
    __twr_v264 = (uint64_t)(&"OUT");
    __twr_v265 = 25ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v264, __twr_v225, __twr_v265, __twr_v192);
    __twr_v266 = (uint64_t)(&"PACKED");
    __twr_v267 = 26ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v266, __twr_v229, __twr_v267, __twr_v192);
    __twr_v268 = (uint64_t)(&"PUBLIC");
    __twr_v269 = 27ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v268, __twr_v227, __twr_v269, __twr_v192);
    __twr_v270 = (uint64_t)(&"RETURN");
    __twr_v271 = 28ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v270, __twr_v193, __twr_v271, __twr_v192);
    __twr_v272 = (uint64_t)(&"SIZEOF");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v272, __twr_v247, __twr_v192, __twr_v192);
    __twr_v273 = (uint64_t)(&"OFFSETOF");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v273, __twr_v249, __twr_v192, __twr_v192);
    __twr_v274 = (uint64_t)(&"SIZEOFVALUE");
    __twr_v275 = 29ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v274, __twr_v218, __twr_v275, __twr_v192);
    __twr_v276 = (uint64_t)(&"STRUCT");
    __twr_v277 = 30ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v276, __twr_v227, __twr_v277, __twr_v192);
    __twr_v278 = (uint64_t)(&"THEN");
    __twr_v279 = 31ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v278, __twr_v229, __twr_v279, __twr_v192);
    __twr_v280 = (uint64_t)(&"TO");
    __twr_v281 = 32ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v280, __twr_v229, __twr_v281, __twr_v192);
    __twr_v282 = (uint64_t)(&"TRUE");
    __twr_v283 = 33ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v282, __twr_v223, __twr_v283, __twr_v192);
    __twr_v284 = (uint64_t)(&"TYPE");
    __twr_v285 = 34ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v284, __twr_v227, __twr_v285, __twr_v192);
    __twr_v286 = (uint64_t)(&"UBYTE");
    __twr_v287 = 35ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v286, __twr_v220, __twr_v287, __twr_v232);
    __twr_v288 = (uint64_t)(&"UINT");
    __twr_v289 = 36ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v288, __twr_v220, __twr_v289, __twr_v231);
    __twr_v290 = (uint64_t)(&"ULONG");
    __twr_v291 = 37ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v290, __twr_v220, __twr_v291, __twr_v235);
    __twr_v292 = (uint64_t)(&"UNION");
    __twr_v293 = 38ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v292, __twr_v227, __twr_v293, __twr_v192);
    __twr_v294 = (uint64_t)(&"VOID");
    __twr_v295 = 39ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v294, __twr_v220, __twr_v295, __twr_v192);
    __twr_v296 = (uint64_t)(&"WHILE");
    __twr_v297 = 40ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v296, __twr_v193, __twr_v297, __twr_v192);
    __twr_v298 = (uint64_t)(&"BARRIER");
    __twr_v299 = 41ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v298, __twr_v193, __twr_v299, __twr_v192);
    __twr_v300 = (uint64_t)(&"NOTHING");
    __twr_v301 = 42ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v300, __twr_v193, __twr_v301, __twr_v192);
    __twr_v302 = (uint64_t)(&"PROBE");
    __twr_v303 = 43ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v302, __twr_v193, __twr_v303, __twr_v192);
    __twr_v304 = (uint64_t)(&"EXPORT");
    __twr_v305 = 44ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v304, __twr_v227, __twr_v305, __twr_v192);
    __twr_v306 = (uint64_t)(&"PRIVATE");
    __twr_v307 = 45ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v306, __twr_v227, __twr_v307, __twr_v192);
    __twr_v308 = (uint64_t)(&"UQUAD");
    __twr_v309 = 46ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v308, __twr_v220, __twr_v309, __twr_v237);
    __twr_v310 = (uint64_t)(&"QUAD");
    __twr_v311 = 47ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v310, __twr_v220, __twr_v311, __twr_v225);
    __twr_v312 = (uint64_t)(&"UWORD");
    __twr_v313 = 48ULL;
    __twr_v314 = (uint64_t)(&JklTargetInfo);
    __twr_v315 = *(uint64_t*)(__twr_v314);
    __twr_v316 = 87ULL;
    __twr_v317 = __twr_v315 + __twr_v316;
    __twr_v318 = *(uint8_t*)(__twr_v317);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v312, __twr_v220, __twr_v313, __twr_v318);
    __twr_v319 = (uint64_t)(&"WORD");
    __twr_v320 = 49ULL;
    __twr_v321 = *(uint64_t*)(__twr_v314);
    __twr_v322 = 88ULL;
    __twr_v323 = __twr_v321 + __twr_v322;
    __twr_v324 = *(uint8_t*)(__twr_v323);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v319, __twr_v220, __twr_v320, __twr_v324);
    __twr_v325 = (uint64_t)(&")");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v325, __twr_v235, __twr_v192, __twr_v192);
    __twr_v326 = (uint64_t)(&"]");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v326, __twr_v237, __twr_v192, __twr_v192);
    __twr_v327 = (uint64_t)(&":");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v327, __twr_v239, __twr_v192, __twr_v192);
    __twr_v328 = (uint64_t)(&"{");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v328, __twr_v241, __twr_v192, __twr_v192);
    __twr_v329 = (uint64_t)(&"}");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v329, __twr_v243, __twr_v192, __twr_v192);
    __twr_v330 = (uint64_t)(&",");
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v330, __twr_v245, __twr_v192, __twr_v192);
    __twr_v331 = (uint64_t)(&"==");
    __twr_v332 = 50ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v331, __twr_v218, __twr_v332, __twr_v192);
    __twr_v333 = (uint64_t)(&"!=");
    __twr_v334 = 51ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v333, __twr_v218, __twr_v334, __twr_v192);
    __twr_v335 = (uint64_t)(&"&");
    __twr_v336 = 52ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v335, __twr_v218, __twr_v336, __twr_v192);
    __twr_v337 = (uint64_t)(&"|");
    __twr_v338 = 53ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v337, __twr_v218, __twr_v338, __twr_v192);
    __twr_v339 = (uint64_t)(&"<");
    __twr_v340 = 54ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v339, __twr_v218, __twr_v340, __twr_v192);
    __twr_v341 = (uint64_t)(&">");
    __twr_v342 = 55ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v341, __twr_v218, __twr_v342, __twr_v192);
    __twr_v343 = (uint64_t)(&"<=");
    __twr_v344 = 56ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v343, __twr_v218, __twr_v344, __twr_v192);
    __twr_v345 = (uint64_t)(&">=");
    __twr_v346 = 57ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v345, __twr_v218, __twr_v346, __twr_v192);
    __twr_v347 = (uint64_t)(&"+");
    __twr_v348 = 58ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v347, __twr_v218, __twr_v348, __twr_v192);
    __twr_v349 = (uint64_t)(&"-");
    __twr_v350 = 59ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v349, __twr_v218, __twr_v350, __twr_v192);
    __twr_v351 = (uint64_t)(&"/");
    __twr_v352 = 60ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v351, __twr_v218, __twr_v352, __twr_v192);
    __twr_v353 = (uint64_t)(&"%");
    __twr_v354 = 61ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v353, __twr_v218, __twr_v354, __twr_v192);
    __twr_v355 = (uint64_t)(&".");
    __twr_v356 = 62ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v355, __twr_v218, __twr_v356, __twr_v192);
    __twr_v357 = (uint64_t)(&"@");
    __twr_v358 = 63ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v357, __twr_v193, __twr_v358, __twr_v192);
    __twr_v359 = (uint64_t)(&"$");
    __twr_v360 = 64ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v359, __twr_v218, __twr_v360, __twr_v192);
    __twr_v361 = (uint64_t)(&"<<");
    __twr_v362 = 65ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v361, __twr_v218, __twr_v362, __twr_v192);
    __twr_v363 = (uint64_t)(&">>");
    __twr_v364 = 66ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v363, __twr_v218, __twr_v364, __twr_v192);
    __twr_v365 = (uint64_t)(&"~");
    __twr_v366 = 67ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v365, __twr_v218, __twr_v366, __twr_v192);
    __twr_v367 = (uint64_t)(&"*");
    __twr_v368 = 68ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v367, __twr_v218, __twr_v368, __twr_v192);
    __twr_v369 = (uint64_t)(&"...");
    __twr_v370 = 69ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v369, __twr_v225, __twr_v370, __twr_v192);
    __twr_v371 = (uint64_t)(&"[");
    __twr_v372 = 70ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v371, __twr_v218, __twr_v372, __twr_v192);
    __twr_v373 = (uint64_t)(&"^");
    __twr_v374 = 71ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v373, __twr_v218, __twr_v374, __twr_v192);
    __twr_v375 = (uint64_t)(&"(");
    __twr_v376 = 72ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v375, __twr_v218, __twr_v376, __twr_v192);
    __twr_v377 = (uint64_t)(&"=");
    __twr_v378 = 73ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v377, __twr_v232, __twr_v378, __twr_v192);
    __twr_v379 = (uint64_t)(&"+=");
    __twr_v380 = 74ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v379, __twr_v232, __twr_v380, __twr_v192);
    __twr_v381 = (uint64_t)(&"-=");
    __twr_v382 = 75ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v381, __twr_v232, __twr_v382, __twr_v192);
    __twr_v383 = (uint64_t)(&"*=");
    __twr_v384 = 76ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v383, __twr_v232, __twr_v384, __twr_v192);
    __twr_v385 = (uint64_t)(&"/=");
    __twr_v386 = 77ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v385, __twr_v232, __twr_v386, __twr_v192);
    __twr_v387 = (uint64_t)(&"%=");
    __twr_v388 = 78ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v387, __twr_v232, __twr_v388, __twr_v192);
    __twr_v389 = (uint64_t)(&"&=");
    __twr_v390 = 79ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v389, __twr_v232, __twr_v390, __twr_v192);
    __twr_v391 = (uint64_t)(&"|=");
    __twr_v392 = 80ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v391, __twr_v232, __twr_v392, __twr_v192);
    __twr_v393 = (uint64_t)(&"$=");
    __twr_v394 = 81ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v393, __twr_v232, __twr_v394, __twr_v192);
    __twr_v395 = (uint64_t)(&"<<=");
    __twr_v396 = 82ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v395, __twr_v232, __twr_v396, __twr_v192);
    __twr_v397 = (uint64_t)(&">>=");
    __twr_v398 = 83ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v216)(__twr_v397, __twr_v232, __twr_v398, __twr_v192);
    __twr_l4:;
    _jkl_epilogue:;
}
uint64_t LexGetCharacter() {
    uint64_t _jkl_retv;
    uint64_t _mng_comment399;
    uint64_t __twr_v400;
    uint64_t __twr_v401;
    uint64_t _mng_byte402;
    uint64_t __twr_v403;
    uint64_t __twr_v404;
    uint64_t __twr_v405;
    uint64_t __twr_v406;
    uint64_t __twr_v407;
    uint64_t __twr_v408;
    uint64_t __twr_v409;
    uint64_t __twr_v410;
    uint64_t __twr_v411;
    uint64_t __twr_v412;
    uint64_t __twr_v413;
    uint64_t __twr_v414;
    uint64_t __twr_v415;
    uint64_t __twr_v416;
    uint64_t __twr_v417;
    uint64_t __twr_v418;
    uint64_t __twr_v419;
    uint64_t __twr_v420;
    uint64_t __twr_v421;
    uint64_t __twr_v422;
    uint64_t __twr_v423;
    uint64_t __twr_v424;
    uint64_t __twr_v425;
    uint64_t __twr_v426;
    uint64_t __twr_v427;
    uint64_t __twr_v428;
    uint64_t __twr_v429;
    uint64_t __twr_v430;
    uint64_t __twr_v431;
    uint64_t __twr_v432;
    uint64_t __twr_v433;
    uint64_t __twr_v434;
    uint64_t __twr_v435;
    uint64_t __twr_v436;
    uint64_t __twr_v437;
    uint64_t __twr_v438;
    uint64_t __twr_v439;
    uint64_t __twr_v440;
    uint64_t __twr_v441;
    uint64_t __twr_v442;
    uint64_t __twr_v443;
    uint64_t __twr_v444;
    uint64_t __twr_v445;
    uint64_t __twr_v446;
    uint64_t _mng_nextbyte447;
    uint64_t __twr_v448;
    uint64_t __twr_v449;
    uint64_t __twr_v450;
    uint64_t __twr_v451;
    uint64_t __twr_v452;
    uint64_t __twr_v453;
    uint64_t __twr_v454;
    uint64_t __twr_v455;
    uint64_t __twr_v456;
    uint64_t __twr_v457;
    uint64_t __twr_v458;
    uint64_t __twr_v459;
    uint64_t __twr_v460;
    uint64_t __twr_v461;
    uint64_t __twr_v462;
    uint64_t __twr_v463;
    uint64_t __twr_v464;
    uint64_t __twr_v465;
    uint64_t __twr_v466;
    uint64_t __twr_v467;
    uint64_t __twr_v468;
    _mng_comment399 = 0ULL;
    __twr_l6:;
    __twr_v400 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v401 = ((uint64_t (*)())__twr_v400)();
    _mng_byte402 = __twr_v401;
    if (_mng_byte402) { goto __twr_l8; } else { goto __twr_l9; }
    __twr_l9:;
    goto __twr_l7;
    __twr_l8:;
    if (!(_mng_comment399)) { goto __twr_l12; } else { goto __twr_l11; }
    __twr_l11:;
    __twr_v403 = 10ULL;
    if (_mng_byte402 == __twr_v403) { goto __twr_l13; } else { goto __twr_l14; }
    __twr_l14:;
    goto __twr_l6;
    __twr_l13:;
    _mng_comment399 = 0ULL;
    goto __twr_l10;
    __twr_l12:;
    __twr_v404 = (uint64_t)(&LexCurrentStream);
    __twr_v405 = *(uint64_t*)(__twr_v404);
    __twr_v406 = 88ULL;
    __twr_v407 = __twr_v405 + __twr_v406;
    __twr_v408 = *(uint8_t*)(__twr_v407);
    if (!(__twr_v408)) { goto __twr_l16; } else { goto __twr_l15; }
    __twr_l15:;
    __twr_v409 = 0ULL;
    __twr_v410 = (uint64_t)(&LexCurrentStream);
    __twr_v411 = *(uint64_t*)(__twr_v410);
    __twr_v412 = 88ULL;
    __twr_v413 = __twr_v411 + __twr_v412;
    *(uint8_t*)(__twr_v413) = __twr_v409;
    goto __twr_l10;
    __twr_l16:;
    __twr_v414 = 92ULL;
    if (_mng_byte402 != __twr_v414) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    __twr_v415 = 1ULL;
    __twr_v416 = (uint64_t)(&LexCurrentStream);
    __twr_v417 = *(uint64_t*)(__twr_v416);
    __twr_v418 = 88ULL;
    __twr_v419 = __twr_v417 + __twr_v418;
    *(uint8_t*)(__twr_v419) = __twr_v415;
    goto __twr_l10;
    __twr_l18:;
    __twr_v420 = (uint64_t)(&LexCurrentStream);
    __twr_v421 = *(uint64_t*)(__twr_v420);
    __twr_v422 = 89ULL;
    __twr_v423 = __twr_v421 + __twr_v422;
    __twr_v424 = *(uint8_t*)(__twr_v423);
    if (!(__twr_v424)) { goto __twr_l20; } else { goto __twr_l19; }
    __twr_l19:;
    __twr_v425 = 34ULL;
    __twr_v426 = (_mng_byte402 == __twr_v425);
    __twr_v427 = !__twr_v426;
    __twr_v428 = (uint64_t)(&LexCurrentStream);
    __twr_v429 = *(uint64_t*)(__twr_v428);
    __twr_v430 = 89ULL;
    __twr_v431 = __twr_v429 + __twr_v430;
    *(uint8_t*)(__twr_v431) = __twr_v427;
    goto __twr_l10;
    __twr_l20:;
    __twr_v432 = (uint64_t)(&LexCurrentStream);
    __twr_v433 = *(uint64_t*)(__twr_v432);
    __twr_v434 = 90ULL;
    __twr_v435 = __twr_v433 + __twr_v434;
    __twr_v436 = *(uint8_t*)(__twr_v435);
    if (!(__twr_v436)) { goto __twr_l22; } else { goto __twr_l21; }
    __twr_l21:;
    __twr_v437 = 39ULL;
    __twr_v438 = (_mng_byte402 == __twr_v437);
    __twr_v439 = !__twr_v438;
    __twr_v440 = (uint64_t)(&LexCurrentStream);
    __twr_v441 = *(uint64_t*)(__twr_v440);
    __twr_v442 = 90ULL;
    __twr_v443 = __twr_v441 + __twr_v442;
    *(uint8_t*)(__twr_v443) = __twr_v439;
    goto __twr_l10;
    __twr_l22:;
    __twr_v444 = 47ULL;
    if (_mng_byte402 != __twr_v444) { goto __twr_l24; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v445 = (uint64_t)(&LexStreamNextCharacter);
    __twr_v446 = ((uint64_t (*)())__twr_v445)();
    _mng_nextbyte447 = __twr_v446;
    __twr_v448 = 47ULL;
    if (_mng_nextbyte447 != __twr_v448) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    _mng_comment399 = 1ULL;
    goto __twr_l6;
    __twr_l25:;
    __twr_v449 = (uint64_t)(&LexCurrentStream);
    __twr_v450 = *(uint64_t*)(__twr_v449);
    __twr_v451 = 91ULL;
    __twr_v452 = __twr_v450 + __twr_v451;
    *(uint8_t*)(__twr_v452) = _mng_nextbyte447;
    goto __twr_l10;
    __twr_l24:;
    __twr_v453 = 34ULL;
    if (_mng_byte402 != __twr_v453) { goto __twr_l28; } else { goto __twr_l27; }
    __twr_l27:;
    __twr_v454 = 1ULL;
    __twr_v455 = (uint64_t)(&LexCurrentStream);
    __twr_v456 = *(uint64_t*)(__twr_v455);
    __twr_v457 = 89ULL;
    __twr_v458 = __twr_v456 + __twr_v457;
    *(uint8_t*)(__twr_v458) = __twr_v454;
    goto __twr_l10;
    __twr_l28:;
    __twr_v459 = 39ULL;
    if (_mng_byte402 != __twr_v459) { goto __twr_l30; } else { goto __twr_l29; }
    __twr_l29:;
    __twr_v460 = 1ULL;
    __twr_v461 = (uint64_t)(&LexCurrentStream);
    __twr_v462 = *(uint64_t*)(__twr_v461);
    __twr_v463 = 90ULL;
    __twr_v464 = __twr_v462 + __twr_v463;
    *(uint8_t*)(__twr_v464) = __twr_v460;
    goto __twr_l10;
    __twr_l30:;
    __twr_v465 = 35ULL;
    if (_mng_byte402 != __twr_v465) { goto __twr_l10; } else { goto __twr_l31; }
    __twr_l31:;
    __twr_v466 = (uint64_t)(&LexParseDirective);
    ((void (*)())__twr_v466)();
    _mng_byte402 = 10ULL;
    __twr_l10:;
    __twr_v467 = (uint64_t)(&LexFalseCount);
    __twr_v468 = *(uint32_t*)(__twr_v467);
    if (!(__twr_v468)) { goto __twr_l32; } else { goto __twr_l33; }
    __twr_l33:;
    goto __twr_l6;
    __twr_l32:;
    goto __twr_l7;
    goto __twr_l6;
    __twr_l7:;
    _jkl_retv = _mng_byte402;
    goto _jkl_epilogue;
    __twr_l5:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexGetStringTokenInternal(uint64_t _mng_token469, uint64_t _mng_terminator470, uint64_t _mng_dynamicbuffer471, uint64_t _mng_buffer472, uint64_t _mng_o_length) {
    uint64_t _mng_len473;
    uint64_t _mng_isbackslash474;
    uint64_t __twr_v475;
    uint64_t __twr_v476;
    uint64_t _mng_byte477;
    uint64_t __twr_v478;
    uint64_t __twr_v479;
    uint64_t __twr_v480;
    uint64_t __twr_v481;
    uint64_t __twr_v482;
    uint64_t __twr_v483;
    uint64_t __twr_v484;
    uint64_t __twr_v485;
    uint64_t __twr_v486;
    uint64_t __twr_v487;
    uint64_t __twr_v488;
    uint64_t __twr_v489;
    uint64_t __twr_v490;
    uint64_t __twr_v491;
    uint64_t __twr_v492;
    uint64_t __twr_v493;
    uint64_t __twr_v494;
    uint64_t __twr_v495;
    uint64_t __twr_v496;
    uint64_t __twr_v497;
    uint64_t __twr_v498;
    uint64_t _mng_length499;
    _mng_len473 = 0ULL;
    _mng_isbackslash474 = 0ULL;
    __twr_l35:;
    __twr_v475 = (uint64_t)(&LexGetCharacter);
    __twr_v476 = ((uint64_t (*)())__twr_v475)();
    _mng_byte477 = __twr_v476;
    if (_mng_byte477) { goto __twr_l37; } else { goto __twr_l38; }
    __twr_l38:;
    __twr_v478 = (uint64_t)(&LexTokenError);
    __twr_v479 = (uint64_t)(&"String token terminated by EOF!");
    __twr_v480 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v478)(_mng_token469, __twr_v479, __twr_v480, __twr_v480, __twr_v480);
    __twr_l37:;
    if (_mng_isbackslash474) { goto __twr_l41; } else { goto __twr_l40; }
    __twr_l40:;
    if (_mng_byte477 != _mng_terminator470) { goto __twr_l44; } else { goto __twr_l43; }
    __twr_l43:;
    goto __twr_l36;
    goto __twr_l42;
    __twr_l44:;
    __twr_v481 = 92ULL;
    if (_mng_byte477 != __twr_v481) { goto __twr_l42; } else { goto __twr_l45; }
    __twr_l45:;
    _mng_isbackslash474 = 1ULL;
    goto __twr_l35;
    __twr_l42:;
    goto __twr_l39;
    __twr_l41:;
    _mng_isbackslash474 = 0ULL;
    __twr_v482 = 110ULL;
    if (_mng_byte477 != __twr_v482) { goto __twr_l48; } else { goto __twr_l47; }
    __twr_l47:;
    _mng_byte477 = 10ULL;
    goto __twr_l46;
    __twr_l48:;
    __twr_v483 = 116ULL;
    if (_mng_byte477 != __twr_v483) { goto __twr_l50; } else { goto __twr_l49; }
    __twr_l49:;
    _mng_byte477 = 9ULL;
    goto __twr_l46;
    __twr_l50:;
    __twr_v484 = 114ULL;
    if (_mng_byte477 != __twr_v484) { goto __twr_l52; } else { goto __twr_l51; }
    __twr_l51:;
    _mng_byte477 = 13ULL;
    goto __twr_l46;
    __twr_l52:;
    __twr_v485 = 98ULL;
    if (_mng_byte477 != __twr_v485) { goto __twr_l54; } else { goto __twr_l53; }
    __twr_l53:;
    _mng_byte477 = 8ULL;
    goto __twr_l46;
    __twr_l54:;
    __twr_v486 = 91ULL;
    if (_mng_byte477 != __twr_v486) { goto __twr_l46; } else { goto __twr_l55; }
    __twr_l55:;
    _mng_byte477 = 27ULL;
    __twr_l46:;
    __twr_l39:;
    if (!(_mng_dynamicbuffer471)) { goto __twr_l58; } else { goto __twr_l57; }
    __twr_l57:;
    __twr_v487 = (uint64_t)(&TlInsertDynamicBuffer);
    ((void (*)(uint64_t, uint64_t))__twr_v487)(_mng_dynamicbuffer471, _mng_byte477);
    goto __twr_l56;
    __twr_l58:;
    __twr_v488 = 127ULL;
    if (_mng_len473 != __twr_v488) { goto __twr_l60; } else { goto __twr_l59; }
    __twr_l59:;
    __twr_v489 = (uint64_t)(&LexTokenError);
    __twr_v490 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v491 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v489)(_mng_token469, __twr_v490, __twr_v491, __twr_v491, __twr_v491);
    goto __twr_l56;
    __twr_l60:;
    __twr_v492 = 1ULL;
    __twr_v493 = _mng_buffer472 + _mng_len473;
    *(uint8_t*)(__twr_v493) = _mng_byte477;
    __twr_v494 = _mng_len473 + __twr_v492;
    _mng_len473 = __twr_v494;
    __twr_l56:;
    goto __twr_l35;
    __twr_l36:;
    if (!(_mng_dynamicbuffer471)) { goto __twr_l63; } else { goto __twr_l62; }
    __twr_l62:;
    __twr_v495 = (uint64_t)(&TlInsertDynamicBuffer);
    __twr_v496 = 0ULL;
    ((void (*)(uint64_t, uint64_t))__twr_v495)(_mng_dynamicbuffer471, __twr_v496);
    goto __twr_l61;
    __twr_l63:;
    __twr_v497 = 0ULL;
    __twr_v498 = _mng_buffer472 + _mng_len473;
    *(uint8_t*)(__twr_v498) = __twr_v497;
    _mng_length499 = _mng_len473;
    __twr_l61:;
    __twr_l34:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length499;
}
uint64_t LexCrunchCharacterLiteral(uint64_t _mng_token500, uint64_t _mng_buffer501) {
    uint64_t _jkl_retv;
    uint64_t _mng_num502;
    uint64_t _mng_i503;
    uint64_t __twr_v504;
    uint64_t _mng_lastnum505;
    uint64_t __twr_v506;
    uint64_t __twr_v507;
    uint64_t __twr_v508;
    uint64_t __twr_v509;
    uint64_t __twr_v510;
    uint64_t __twr_v511;
    uint64_t __twr_v512;
    uint64_t __twr_v513;
    uint64_t __twr_v514;
    uint64_t __twr_v515;
    uint64_t __twr_v516;
    uint64_t __twr_v517;
    uint64_t __twr_v518;
    uint64_t __twr_v519;
    uint64_t __twr_v520;
    uint64_t __twr_v521;
    uint64_t __twr_v522;
    _mng_num502 = 0ULL;
    _mng_i503 = 0ULL;
    __twr_v504 = *(uint8_t*)(_mng_buffer501);
    if (!(__twr_v504)) { goto __twr_l66; } else { goto __twr_l65; }
    __twr_l65:;
    _mng_lastnum505 = _mng_num502;
    __twr_v506 = 8ULL;
    __twr_v507 = _mng_num502 << __twr_v506;
    _mng_num502 = __twr_v507;
    if (!(_mng_lastnum505)) { goto __twr_l68; } else { goto __twr_l70; }
    __twr_l70:;
    __twr_v508 = _mng_num502 / _mng_lastnum505;
    __twr_v509 = 256ULL;
    if (__twr_v508 == __twr_v509) { goto __twr_l68; } else { goto __twr_l69; }
    __twr_l69:;
    __twr_v510 = (uint64_t)(&LexTokenError);
    __twr_v511 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v512 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v510)(_mng_token500, __twr_v511, __twr_v512, __twr_v512, __twr_v512);
    __twr_l68:;
    __twr_v513 = _mng_buffer501 + _mng_i503;
    __twr_v514 = *(uint8_t*)(__twr_v513);
    __twr_v515 = _mng_num502 + __twr_v514;
    _mng_num502 = __twr_v515;
    if (_mng_num502 >= _mng_lastnum505) { goto __twr_l71; } else { goto __twr_l72; }
    __twr_l72:;
    __twr_v516 = (uint64_t)(&LexTokenError);
    __twr_v517 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v518 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v516)(_mng_token500, __twr_v517, __twr_v518, __twr_v518, __twr_v518);
    __twr_l71:;
    __twr_v519 = 1ULL;
    __twr_v520 = _mng_i503 + __twr_v519;
    _mng_i503 = __twr_v520;
    __twr_l67:;
    __twr_v521 = _mng_buffer501 + _mng_i503;
    __twr_v522 = *(uint8_t*)(__twr_v521);
    if (__twr_v522) { goto __twr_l65; } else { goto __twr_l66; }
    __twr_l66:;
    _jkl_retv = _mng_num502;
    goto _jkl_epilogue;
    __twr_l64:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexCrunchNumber(uint64_t _mng_token523, uint64_t _mng_buffer524) {
    uint64_t _jkl_retv;
    uint64_t _mng_num525;
    uint64_t _mng_i526;
    uint64_t __twr_v527;
    uint64_t __twr_v528;
    uint64_t __twr_v529;
    uint64_t __twr_v530;
    uint64_t __twr_v531;
    uint64_t __twr_v532;
    uint64_t __twr_v533;
    uint64_t __twr_v534;
    uint64_t __twr_v535;
    uint64_t __twr_v536;
    uint64_t __twr_v537;
    uint64_t __twr_v538;
    uint64_t __twr_v539;
    uint64_t __twr_v540;
    uint64_t __twr_v541;
    uint64_t __twr_v542;
    uint64_t __twr_v543;
    uint64_t __twr_v544;
    uint64_t __twr_v545;
    uint64_t _mng_lastnum546;
    uint64_t __twr_v547;
    uint64_t __twr_v548;
    uint64_t __twr_v549;
    uint64_t __twr_v550;
    uint64_t __twr_v551;
    uint64_t __twr_v552;
    uint64_t __twr_v553;
    uint64_t __twr_v554;
    uint64_t __twr_v555;
    uint64_t __twr_v556;
    uint64_t __twr_v557;
    uint64_t __twr_v558;
    uint64_t __twr_v559;
    uint64_t __twr_v560;
    uint64_t __twr_v561;
    uint64_t __twr_v562;
    uint64_t __twr_v563;
    uint64_t __twr_v564;
    uint64_t __twr_v565;
    uint64_t __twr_v566;
    uint64_t __twr_v567;
    uint64_t __twr_v568;
    uint64_t __twr_v569;
    uint64_t __twr_v570;
    uint64_t __twr_v571;
    uint64_t __twr_v572;
    uint64_t __twr_v573;
    uint64_t __twr_v574;
    uint64_t __twr_v575;
    uint64_t __twr_v576;
    uint64_t __twr_v577;
    uint64_t __twr_v578;
    uint64_t __twr_v579;
    uint64_t __twr_v580;
    uint64_t __twr_v581;
    uint64_t __twr_v582;
    uint64_t __twr_v583;
    uint64_t __twr_v584;
    uint64_t __twr_v585;
    uint64_t __twr_v586;
    uint64_t __twr_v587;
    uint64_t __twr_v588;
    uint64_t __twr_v589;
    uint64_t __twr_v590;
    uint64_t __twr_v591;
    uint64_t __twr_v592;
    uint64_t __twr_v593;
    uint64_t __twr_v594;
    uint64_t __twr_v595;
    uint64_t __twr_v596;
    uint64_t __twr_v597;
    uint64_t __twr_v598;
    uint64_t __twr_v599;
    uint64_t __twr_v600;
    uint64_t __twr_v601;
    uint64_t __twr_v602;
    uint64_t __twr_v603;
    uint64_t __twr_v604;
    uint64_t __twr_v605;
    uint64_t __twr_v606;
    uint64_t __twr_v607;
    uint64_t __twr_v608;
    uint64_t __twr_v609;
    uint64_t __twr_v610;
    uint64_t __twr_v611;
    uint64_t __twr_v612;
    uint64_t __twr_v613;
    uint64_t __twr_v614;
    uint64_t __twr_v615;
    uint64_t __twr_v616;
    uint64_t __twr_v617;
    uint64_t _mng_lastnum618;
    uint64_t __twr_v619;
    uint64_t __twr_v620;
    uint64_t __twr_v621;
    uint64_t __twr_v622;
    uint64_t __twr_v623;
    uint64_t __twr_v624;
    uint64_t __twr_v625;
    uint64_t __twr_v626;
    uint64_t __twr_v627;
    uint64_t __twr_v628;
    uint64_t __twr_v629;
    uint64_t __twr_v630;
    uint64_t __twr_v631;
    uint64_t __twr_v632;
    uint64_t __twr_v633;
    uint64_t __twr_v634;
    uint64_t __twr_v635;
    uint64_t __twr_v636;
    uint64_t __twr_v637;
    uint64_t __twr_v638;
    uint64_t __twr_v639;
    uint64_t __twr_v640;
    uint64_t __twr_v641;
    uint64_t __twr_v642;
    uint64_t __twr_v643;
    uint64_t __twr_v644;
    uint64_t __twr_v645;
    uint64_t __twr_v646;
    uint64_t __twr_v647;
    uint64_t __twr_v648;
    uint64_t __twr_v649;
    uint64_t __twr_v650;
    uint64_t __twr_v651;
    uint64_t __twr_v652;
    uint64_t __twr_v653;
    uint64_t __twr_v654;
    uint64_t __twr_v655;
    uint64_t __twr_v656;
    uint64_t __twr_v657;
    uint64_t _mng_lastnum658;
    uint64_t __twr_v659;
    uint64_t __twr_v660;
    uint64_t __twr_v661;
    uint64_t __twr_v662;
    uint64_t __twr_v663;
    uint64_t __twr_v664;
    uint64_t __twr_v665;
    uint64_t __twr_v666;
    uint64_t __twr_v667;
    uint64_t __twr_v668;
    uint64_t __twr_v669;
    uint64_t __twr_v670;
    uint64_t __twr_v671;
    uint64_t __twr_v672;
    uint64_t __twr_v673;
    uint64_t __twr_v674;
    uint64_t __twr_v675;
    uint64_t __twr_v676;
    uint64_t __twr_v677;
    uint64_t __twr_v678;
    uint64_t __twr_v679;
    uint64_t __twr_v680;
    uint64_t __twr_v681;
    uint64_t __twr_v682;
    uint64_t __twr_v683;
    uint64_t __twr_v684;
    uint64_t __twr_v685;
    uint64_t __twr_v686;
    _mng_num525 = 0ULL;
    _mng_i526 = 0ULL;
    __twr_v527 = *(uint8_t*)(_mng_buffer524);
    __twr_v528 = 48ULL;
    if (__twr_v527 != __twr_v528) { goto __twr_l74; } else { goto __twr_l75; }
    __twr_l75:;
    __twr_v529 = 1ULL;
    __twr_v530 = _mng_buffer524 + __twr_v529;
    __twr_v531 = *(uint8_t*)(__twr_v530);
    if (__twr_v531) { goto __twr_l76; } else { goto __twr_l77; }
    __twr_l77:;
    __twr_v532 = 0ULL;
    _jkl_retv = __twr_v532;
    goto _jkl_epilogue;
    __twr_l76:;
    __twr_v533 = 1ULL;
    __twr_v534 = _mng_buffer524 + __twr_v533;
    __twr_v535 = *(uint8_t*)(__twr_v534);
    __twr_v536 = 120ULL;
    if (__twr_v535 != __twr_v536) { goto __twr_l78; } else { goto __twr_l79; }
    __twr_l79:;
    __twr_v537 = 2ULL;
    __twr_v538 = _mng_buffer524 + __twr_v537;
    __twr_v539 = *(uint8_t*)(__twr_v538);
    if (__twr_v539) { goto __twr_l80; } else { goto __twr_l81; }
    __twr_l81:;
    __twr_v540 = (uint64_t)(&LexTokenError);
    __twr_v541 = (uint64_t)(&"Unfinished hex number.");
    __twr_v542 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v540)(_mng_token523, __twr_v541, __twr_v542, __twr_v542, __twr_v542);
    __twr_l80:;
    _mng_i526 = 2ULL;
    __twr_v543 = 2ULL;
    __twr_v544 = _mng_buffer524 + __twr_v543;
    __twr_v545 = *(uint8_t*)(__twr_v544);
    if (!(__twr_v545)) { goto __twr_l83; } else { goto __twr_l82; }
    __twr_l82:;
    _mng_lastnum546 = _mng_num525;
    __twr_v547 = 4ULL;
    __twr_v548 = _mng_num525 << __twr_v547;
    _mng_num525 = __twr_v548;
    if (!(_mng_lastnum546)) { goto __twr_l85; } else { goto __twr_l87; }
    __twr_l87:;
    __twr_v549 = _mng_num525 / _mng_lastnum546;
    __twr_v550 = 16ULL;
    if (__twr_v549 == __twr_v550) { goto __twr_l85; } else { goto __twr_l86; }
    __twr_l86:;
    __twr_v551 = (uint64_t)(&LexTokenError);
    __twr_v552 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v553 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v551)(_mng_token523, __twr_v552, __twr_v553, __twr_v553, __twr_v553);
    __twr_l85:;
    __twr_v554 = _mng_buffer524 + _mng_i526;
    __twr_v555 = *(uint8_t*)(__twr_v554);
    __twr_v556 = 48ULL;
    if (__twr_v555 < __twr_v556) { goto __twr_l90; } else { goto __twr_l91; }
    __twr_l91:;
    __twr_v557 = _mng_buffer524 + _mng_i526;
    __twr_v558 = *(uint8_t*)(__twr_v557);
    __twr_v559 = 57ULL;
    if (__twr_v558 > __twr_v559) { goto __twr_l90; } else { goto __twr_l89; }
    __twr_l89:;
    __twr_v560 = _mng_buffer524 + _mng_i526;
    __twr_v561 = *(uint8_t*)(__twr_v560);
    __twr_v562 = 48ULL;
    __twr_v563 = __twr_v561 - __twr_v562;
    __twr_v564 = _mng_num525 + __twr_v563;
    _mng_num525 = __twr_v564;
    goto __twr_l88;
    __twr_l90:;
    __twr_v565 = _mng_buffer524 + _mng_i526;
    __twr_v566 = *(uint8_t*)(__twr_v565);
    __twr_v567 = 65ULL;
    if (__twr_v566 < __twr_v567) { goto __twr_l93; } else { goto __twr_l94; }
    __twr_l94:;
    __twr_v568 = _mng_buffer524 + _mng_i526;
    __twr_v569 = *(uint8_t*)(__twr_v568);
    __twr_v570 = 70ULL;
    if (__twr_v569 > __twr_v570) { goto __twr_l93; } else { goto __twr_l92; }
    __twr_l92:;
    __twr_v571 = _mng_buffer524 + _mng_i526;
    __twr_v572 = *(uint8_t*)(__twr_v571);
    __twr_v573 = 55ULL;
    __twr_v574 = __twr_v572 - __twr_v573;
    __twr_v575 = _mng_num525 + __twr_v574;
    _mng_num525 = __twr_v575;
    goto __twr_l88;
    __twr_l93:;
    __twr_v576 = _mng_buffer524 + _mng_i526;
    __twr_v577 = *(uint8_t*)(__twr_v576);
    __twr_v578 = 97ULL;
    if (__twr_v577 < __twr_v578) { goto __twr_l96; } else { goto __twr_l97; }
    __twr_l97:;
    __twr_v579 = _mng_buffer524 + _mng_i526;
    __twr_v580 = *(uint8_t*)(__twr_v579);
    __twr_v581 = 102ULL;
    if (__twr_v580 > __twr_v581) { goto __twr_l96; } else { goto __twr_l95; }
    __twr_l95:;
    __twr_v582 = _mng_buffer524 + _mng_i526;
    __twr_v583 = *(uint8_t*)(__twr_v582);
    __twr_v584 = 87ULL;
    __twr_v585 = __twr_v583 - __twr_v584;
    __twr_v586 = _mng_num525 + __twr_v585;
    _mng_num525 = __twr_v586;
    goto __twr_l88;
    __twr_l96:;
    __twr_v587 = (uint64_t)(&LexTokenError);
    __twr_v588 = (uint64_t)(&"Malformed hex number.");
    __twr_v589 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v587)(_mng_token523, __twr_v588, __twr_v589, __twr_v589, __twr_v589);
    __twr_l88:;
    if (_mng_num525 >= _mng_lastnum546) { goto __twr_l98; } else { goto __twr_l99; }
    __twr_l99:;
    __twr_v590 = (uint64_t)(&LexTokenError);
    __twr_v591 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v592 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v590)(_mng_token523, __twr_v591, __twr_v592, __twr_v592, __twr_v592);
    __twr_l98:;
    __twr_v593 = 1ULL;
    __twr_v594 = _mng_i526 + __twr_v593;
    _mng_i526 = __twr_v594;
    __twr_l84:;
    __twr_v595 = _mng_buffer524 + _mng_i526;
    __twr_v596 = *(uint8_t*)(__twr_v595);
    if (__twr_v596) { goto __twr_l82; } else { goto __twr_l83; }
    __twr_l83:;
    __twr_v597 = (uint64_t)(&JklTargetInfo);
    __twr_v598 = *(uint64_t*)(__twr_v597);
    __twr_v599 = 32ULL;
    __twr_v600 = __twr_v598 + __twr_v599;
    __twr_v601 = *(uint64_t*)(__twr_v600);
    __twr_v602 = _mng_num525 & __twr_v601;
    if (__twr_v602 == _mng_num525) { goto __twr_l100; } else { goto __twr_l101; }
    __twr_l101:;
    __twr_v603 = (uint64_t)(&LexTokenError);
    __twr_v604 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v605 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v603)(_mng_token523, __twr_v604, __twr_v605, __twr_v605, __twr_v605);
    __twr_l100:;
    _jkl_retv = _mng_num525;
    goto _jkl_epilogue;
    __twr_l78:;
    _mng_i526 = 1ULL;
    __twr_v606 = 1ULL;
    __twr_v607 = _mng_buffer524 + __twr_v606;
    __twr_v608 = *(uint8_t*)(__twr_v607);
    if (!(__twr_v608)) { goto __twr_l103; } else { goto __twr_l102; }
    __twr_l102:;
    __twr_v609 = _mng_buffer524 + _mng_i526;
    __twr_v610 = *(uint8_t*)(__twr_v609);
    __twr_v611 = 48ULL;
    if (__twr_v610 < __twr_v611) { goto __twr_l106; } else { goto __twr_l107; }
    __twr_l107:;
    __twr_v612 = _mng_buffer524 + _mng_i526;
    __twr_v613 = *(uint8_t*)(__twr_v612);
    __twr_v614 = 55ULL;
    if (__twr_v613 <= __twr_v614) { goto __twr_l105; } else { goto __twr_l106; }
    __twr_l106:;
    __twr_v615 = (uint64_t)(&LexTokenError);
    __twr_v616 = (uint64_t)(&"Malformed octal number.");
    __twr_v617 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v615)(_mng_token523, __twr_v616, __twr_v617, __twr_v617, __twr_v617);
    __twr_l105:;
    _mng_lastnum618 = _mng_num525;
    __twr_v619 = 3ULL;
    __twr_v620 = _mng_num525 << __twr_v619;
    _mng_num525 = __twr_v620;
    if (!(_mng_lastnum618)) { goto __twr_l108; } else { goto __twr_l110; }
    __twr_l110:;
    __twr_v621 = _mng_num525 / _mng_lastnum618;
    __twr_v622 = 8ULL;
    if (__twr_v621 == __twr_v622) { goto __twr_l108; } else { goto __twr_l109; }
    __twr_l109:;
    __twr_v623 = (uint64_t)(&LexTokenError);
    __twr_v624 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v625 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v623)(_mng_token523, __twr_v624, __twr_v625, __twr_v625, __twr_v625);
    __twr_l108:;
    __twr_v626 = _mng_buffer524 + _mng_i526;
    __twr_v627 = *(uint8_t*)(__twr_v626);
    __twr_v628 = 48ULL;
    __twr_v629 = __twr_v627 - __twr_v628;
    __twr_v630 = _mng_num525 + __twr_v629;
    _mng_num525 = __twr_v630;
    if (_mng_num525 >= _mng_lastnum618) { goto __twr_l111; } else { goto __twr_l112; }
    __twr_l112:;
    __twr_v631 = (uint64_t)(&LexTokenError);
    __twr_v632 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v633 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v631)(_mng_token523, __twr_v632, __twr_v633, __twr_v633, __twr_v633);
    __twr_l111:;
    __twr_v634 = 1ULL;
    __twr_v635 = _mng_i526 + __twr_v634;
    _mng_i526 = __twr_v635;
    __twr_l104:;
    __twr_v636 = _mng_buffer524 + _mng_i526;
    __twr_v637 = *(uint8_t*)(__twr_v636);
    if (__twr_v637) { goto __twr_l102; } else { goto __twr_l103; }
    __twr_l103:;
    __twr_v638 = (uint64_t)(&JklTargetInfo);
    __twr_v639 = *(uint64_t*)(__twr_v638);
    __twr_v640 = 32ULL;
    __twr_v641 = __twr_v639 + __twr_v640;
    __twr_v642 = *(uint64_t*)(__twr_v641);
    __twr_v643 = _mng_num525 & __twr_v642;
    if (__twr_v643 == _mng_num525) { goto __twr_l113; } else { goto __twr_l114; }
    __twr_l114:;
    __twr_v644 = (uint64_t)(&LexTokenError);
    __twr_v645 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v646 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v644)(_mng_token523, __twr_v645, __twr_v646, __twr_v646, __twr_v646);
    __twr_l113:;
    _jkl_retv = _mng_num525;
    goto _jkl_epilogue;
    __twr_l74:;
    __twr_v647 = _mng_buffer524 + _mng_i526;
    __twr_v648 = *(uint8_t*)(__twr_v647);
    if (!(__twr_v648)) { goto __twr_l116; } else { goto __twr_l115; }
    __twr_l115:;
    __twr_v649 = _mng_buffer524 + _mng_i526;
    __twr_v650 = *(uint8_t*)(__twr_v649);
    __twr_v651 = 48ULL;
    if (__twr_v650 < __twr_v651) { goto __twr_l119; } else { goto __twr_l120; }
    __twr_l120:;
    __twr_v652 = _mng_buffer524 + _mng_i526;
    __twr_v653 = *(uint8_t*)(__twr_v652);
    __twr_v654 = 57ULL;
    if (__twr_v653 <= __twr_v654) { goto __twr_l118; } else { goto __twr_l119; }
    __twr_l119:;
    __twr_v655 = (uint64_t)(&LexTokenError);
    __twr_v656 = (uint64_t)(&"Malformed decimal number.");
    __twr_v657 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v655)(_mng_token523, __twr_v656, __twr_v657, __twr_v657, __twr_v657);
    __twr_l118:;
    _mng_lastnum658 = _mng_num525;
    __twr_v659 = 10ULL;
    __twr_v660 = _mng_num525 * __twr_v659;
    _mng_num525 = __twr_v660;
    if (!(_mng_lastnum658)) { goto __twr_l121; } else { goto __twr_l123; }
    __twr_l123:;
    __twr_v661 = _mng_num525 / _mng_lastnum658;
    __twr_v662 = 10ULL;
    if (__twr_v661 == __twr_v662) { goto __twr_l121; } else { goto __twr_l122; }
    __twr_l122:;
    __twr_v663 = (uint64_t)(&LexTokenError);
    __twr_v664 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v665 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v663)(_mng_token523, __twr_v664, __twr_v665, __twr_v665, __twr_v665);
    __twr_l121:;
    __twr_v666 = _mng_buffer524 + _mng_i526;
    __twr_v667 = *(uint8_t*)(__twr_v666);
    __twr_v668 = 48ULL;
    __twr_v669 = __twr_v667 - __twr_v668;
    __twr_v670 = _mng_num525 + __twr_v669;
    _mng_num525 = __twr_v670;
    if (_mng_num525 >= _mng_lastnum658) { goto __twr_l124; } else { goto __twr_l125; }
    __twr_l125:;
    __twr_v671 = (uint64_t)(&LexTokenError);
    __twr_v672 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v673 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v671)(_mng_token523, __twr_v672, __twr_v673, __twr_v673, __twr_v673);
    __twr_l124:;
    __twr_v674 = 1ULL;
    __twr_v675 = _mng_i526 + __twr_v674;
    _mng_i526 = __twr_v675;
    __twr_l117:;
    __twr_v676 = _mng_buffer524 + _mng_i526;
    __twr_v677 = *(uint8_t*)(__twr_v676);
    if (__twr_v677) { goto __twr_l115; } else { goto __twr_l116; }
    __twr_l116:;
    __twr_v678 = (uint64_t)(&JklTargetInfo);
    __twr_v679 = *(uint64_t*)(__twr_v678);
    __twr_v680 = 32ULL;
    __twr_v681 = __twr_v679 + __twr_v680;
    __twr_v682 = *(uint64_t*)(__twr_v681);
    __twr_v683 = _mng_num525 & __twr_v682;
    if (__twr_v683 == _mng_num525) { goto __twr_l126; } else { goto __twr_l127; }
    __twr_l127:;
    __twr_v684 = (uint64_t)(&LexTokenError);
    __twr_v685 = (uint64_t)(&"Number does not fit in machine word.");
    __twr_v686 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v684)(_mng_token523, __twr_v685, __twr_v686, __twr_v686, __twr_v686);
    __twr_l126:;
    _jkl_retv = _mng_num525;
    goto _jkl_epilogue;
    __twr_l73:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexGetTokenContents(uint64_t _mng_token687, uint64_t _mng_buffer688, uint64_t _mng_o_length, uint64_t _mng_o_internedstring) {
    uint64_t _jkl_retv;
    uint64_t __twr_v689;
    uint64_t __twr_v690;
    uint64_t __twr_v691;
    uint64_t __twr_v692;
    uint64_t __twr_v693;
    uint64_t __twr_v694;
    uint64_t __twr_v695;
    uint64_t _mng_macro696;
    uint64_t __twr_v697;
    uint64_t __twr_v698;
    uint64_t __twr_v699;
    uint64_t _mng_length700;
    uint64_t __twr_v701;
    uint64_t __twr_v702;
    uint64_t _mng_stream703;
    uint64_t __twr_v704;
    uint64_t __twr_v705;
    uint64_t __twr_v706;
    uint64_t __twr_v707;
    uint64_t __twr_v708;
    uint64_t __twr_v709;
    uint64_t __twr_v710;
    uint64_t __twr_v711;
    uint64_t __twr_v712;
    uint64_t __twr_v713;
    uint64_t __twr_v714;
    uint64_t __twr_v715;
    uint64_t __twr_v716;
    uint64_t __twr_v717;
    uint64_t __twr_v718;
    uint64_t __twr_v719;
    uint64_t _mng_byte720;
    uint64_t __twr_v721;
    uint64_t __twr_v722;
    uint64_t __twr_v723;
    uint64_t __twr_v724;
    uint64_t __twr_v725;
    uint64_t __twr_v726;
    uint64_t __twr_v727;
    uint64_t __twr_v728;
    uint64_t __twr_v729;
    uint64_t __twr_v730;
    uint64_t __twr_v731;
    uint64_t __twr_v732;
    uint64_t __twr_v733;
    uint64_t __twr_v734;
    uint64_t __twr_v735;
    uint64_t __twr_v736;
    uint64_t __twr_v737;
    uint64_t __twr_v738;
    uint64_t __twr_v739;
    uint64_t __twr_v740;
    uint64_t __twr_v741;
    uint64_t __twr_v742;
    uint64_t __twr_v743;
    uint64_t __twr_v744;
    uint64_t __twr_v745;
    uint64_t __twr_v746;
    uint64_t __twr_v747;
    uint64_t __twr_v748;
    uint64_t __twr_v749;
    uint64_t __twr_v750;
    uint64_t __twr_v751;
    uint64_t _mng_internedstring752;
    uint64_t __twr_v753;
    uint64_t __twr_v754;
    uint64_t __twr_v755;
    uint64_t __twr_v756;
    uint64_t __twr_v757;
    uint64_t __twr_v758;
    uint64_t __twr_v759;
    uint64_t __twr_v760;
    uint64_t __twr_v761;
    uint64_t __twr_v762;
    uint64_t __twr_v763;
    uint64_t __twr_v764;
    uint64_t _mng_dynamicbuffer765;
    uint64_t __twr_v766;
    uint64_t __twr_v767;
    uint64_t __twr_v768;
    uint64_t __twr_v769;
    uint64_t _mng_dumpster770;
    uint64_t __twr_v771;
    uint64_t __twr_v772;
    uint64_t __twr_v773;
    uint64_t __twr_v774;
    uint64_t __twr_v775;
    uint64_t __twr_v776;
    uint64_t __twr_v777;
    uint64_t __twr_v778;
    uint64_t __twr_v779;
    uint64_t _mng_str780;
    uint64_t __twr_v781;
    uint64_t __twr_v782;
    uint64_t __twr_v783;
    uint64_t __twr_v784;
    uint64_t __twr_v785;
    uint64_t __twr_v786;
    uint64_t __twr_v787;
    uint64_t __twr_v788;
    uint64_t __twr_v789;
    uint64_t __twr_v790;
    uint64_t __twr_v791;
    uint64_t __twr_v792;
    uint64_t __twr_v793;
    uint64_t __twr_v794;
    uint64_t __twr_v795;
    uint64_t __twr_v796;
    uint64_t __twr_v797;
    uint64_t __twr_v798;
    uint64_t __twr_v799;
    uint64_t __twr_v800;
    uint64_t __twr_v801;
    uint64_t _mng_len802;
    uint64_t __twr_v803;
    uint64_t __twr_v804;
    uint64_t __twr_v805;
    uint64_t __twr_v806;
    uint64_t __twr_v807;
    uint64_t __twr_v808;
    uint64_t __twr_v809;
    uint64_t __twr_v810;
    uint64_t __twr_v811;
    uint64_t __twr_v812;
    uint64_t __twr_v813;
    uint64_t __twr_v814;
    uint64_t __twr_v815;
    uint64_t __twr_v816;
    uint64_t __twr_v817;
    uint64_t __twr_v818;
    uint64_t __twr_v819;
    uint64_t __twr_v820;
    uint64_t __twr_v821;
    uint64_t __twr_v822;
    uint64_t __twr_v823;
    uint64_t __twr_v824;
    uint64_t __twr_v825;
    uint64_t __twr_v826;
    uint64_t __twr_v827;
    uint64_t __twr_v828;
    uint64_t __twr_v829;
    uint64_t __twr_v830;
    uint64_t __twr_v831;
    uint64_t __twr_v832;
    uint64_t __twr_v833;
    uint64_t _mng_uppercaseonly834;
    uint64_t _mng_len835;
    uint64_t __twr_v836;
    uint64_t __twr_v837;
    uint64_t __twr_v838;
    uint64_t __twr_v839;
    uint64_t __twr_v840;
    uint64_t __twr_v841;
    uint64_t __twr_v842;
    uint64_t __twr_v843;
    uint64_t __twr_v844;
    uint64_t __twr_v845;
    uint64_t __twr_v846;
    uint64_t __twr_v847;
    uint64_t __twr_v848;
    uint64_t __twr_v849;
    uint64_t __twr_v850;
    uint64_t __twr_v851;
    uint64_t __twr_v852;
    uint64_t __twr_v853;
    uint64_t __twr_v854;
    uint64_t __twr_v855;
    uint64_t __twr_v856;
    uint64_t __twr_v857;
    uint64_t __twr_v858;
    uint64_t __twr_v859;
    uint64_t __twr_v860;
    uint64_t __twr_v861;
    uint64_t __twr_v862;
    uint64_t __twr_v863;
    uint64_t __twr_v864;
    uint64_t __twr_v865;
    uint64_t __twr_v866;
    uint64_t __twr_v867;
    uint64_t __twr_v868;
    uint64_t __twr_v869;
    uint64_t __twr_v870;
    uint64_t __twr_v871;
    uint64_t __twr_v872;
    uint64_t __twr_v873;
    uint64_t _mng_macro874;
    uint64_t __twr_v875;
    uint64_t __twr_v876;
    uint64_t __twr_v877;
    uint64_t __twr_v878;
    uint64_t __twr_v879;
    uint64_t __twr_v880;
    uint64_t __twr_v881;
    uint64_t __twr_v882;
    __twr_v689 = (uint64_t)(&LexSavedMacro);
    __twr_v690 = *(uint64_t*)(__twr_v689);
    if (!(__twr_v690)) { goto __twr_l129; } else { goto __twr_l130; }
    __twr_l130:;
    __twr_v691 = (uint64_t)(&LexMacroFree);
    __twr_v692 = *(uint64_t*)(__twr_v691);
    if (!(__twr_v692)) { goto __twr_l131; } else { goto __twr_l132; }
    __twr_l132:;
    __twr_v693 = 32ULL;
    _jkl_retv = __twr_v693;
    goto _jkl_epilogue;
    __twr_l131:;
    __twr_v694 = (uint64_t)(&LexSavedMacro);
    __twr_v695 = *(uint64_t*)(__twr_v694);
    _mng_macro696 = __twr_v695;
    __twr_v697 = 0ULL;
    *(uint64_t*)(__twr_v694) = __twr_v697;
    __twr_v698 = (uint64_t)(&LexExpandMacro);
    __twr_v699 = (uint64_t)(&LexSavedMacroToken);
    ((void (*)(uint64_t, uint64_t))__twr_v698)(_mng_macro696, __twr_v699);
    __twr_l129:;
    __twr_lLoopOnMacro:;
    _mng_length700 = 0ULL;
    __twr_v701 = (uint64_t)(&LexCurrentStream);
    __twr_v702 = *(uint64_t*)(__twr_v701);
    _mng_stream703 = __twr_v702;
    if (!(_mng_stream703)) { goto __twr_l134; } else { goto __twr_l135; }
    __twr_l135:;
    __twr_v704 = 8ULL;
    __twr_v705 = _mng_stream703 + __twr_v704;
    __twr_v706 = *(uint64_t*)(__twr_v705);
    __twr_v707 = _mng_token687 + __twr_v704;
    *(uint64_t*)(__twr_v707) = __twr_v706;
    __twr_v708 = 44ULL;
    __twr_v709 = _mng_stream703 + __twr_v708;
    __twr_v710 = *(uint32_t*)(__twr_v709);
    __twr_v711 = 16ULL;
    __twr_v712 = _mng_token687 + __twr_v711;
    *(uint32_t*)(__twr_v712) = __twr_v710;
    __twr_v713 = 48ULL;
    __twr_v714 = _mng_stream703 + __twr_v713;
    __twr_v715 = *(uint32_t*)(__twr_v714);
    __twr_v716 = 20ULL;
    __twr_v717 = _mng_token687 + __twr_v716;
    *(uint32_t*)(__twr_v717) = __twr_v715;
    __twr_l134:;
    __twr_v718 = (uint64_t)(&LexGetCharacter);
    __twr_v719 = ((uint64_t (*)())__twr_v718)();
    _mng_byte720 = __twr_v719;
    __twr_v721 = (uint64_t)(&LexCharTreatment);
    __twr_v722 = __twr_v721 + _mng_byte720;
    __twr_v723 = *(uint8_t*)(__twr_v722);
    __twr_v724 = 3ULL;
    if (__twr_v723 != __twr_v724) { goto __twr_l137; } else { goto __twr_l136; }
    __twr_l136:;
    __twr_v725 = (uint64_t)(&LexCurrentStream);
    __twr_v726 = *(uint64_t*)(__twr_v725);
    _mng_stream703 = __twr_v726;
    if (!(_mng_stream703)) { goto __twr_l139; } else { goto __twr_l140; }
    __twr_l140:;
    __twr_v727 = 8ULL;
    __twr_v728 = _mng_stream703 + __twr_v727;
    __twr_v729 = *(uint64_t*)(__twr_v728);
    __twr_v730 = _mng_token687 + __twr_v727;
    *(uint64_t*)(__twr_v730) = __twr_v729;
    __twr_v731 = 44ULL;
    __twr_v732 = _mng_stream703 + __twr_v731;
    __twr_v733 = *(uint32_t*)(__twr_v732);
    __twr_v734 = 16ULL;
    __twr_v735 = _mng_token687 + __twr_v734;
    *(uint32_t*)(__twr_v735) = __twr_v733;
    __twr_v736 = 48ULL;
    __twr_v737 = _mng_stream703 + __twr_v736;
    __twr_v738 = *(uint32_t*)(__twr_v737);
    __twr_v739 = 20ULL;
    __twr_v740 = _mng_token687 + __twr_v739;
    *(uint32_t*)(__twr_v740) = __twr_v738;
    __twr_l139:;
    __twr_v741 = (uint64_t)(&LexGetCharacter);
    __twr_v742 = ((uint64_t (*)())__twr_v741)();
    _mng_byte720 = __twr_v742;
    __twr_l138:;
    __twr_v743 = (uint64_t)(&LexCharTreatment);
    __twr_v744 = __twr_v743 + _mng_byte720;
    __twr_v745 = *(uint8_t*)(__twr_v744);
    __twr_v746 = 3ULL;
    if (__twr_v745 == __twr_v746) { goto __twr_l136; } else { goto __twr_l137; }
    __twr_l137:;
    if (_mng_byte720) { goto __twr_l141; } else { goto __twr_l142; }
    __twr_l142:;
    __twr_v747 = 0ULL;
    _jkl_retv = __twr_v747;
    goto _jkl_epilogue;
    __twr_l141:;
    __twr_v748 = 34ULL;
    if (_mng_byte720 != __twr_v748) { goto __twr_l143; } else { goto __twr_l144; }
    __twr_l144:;
    __twr_v749 = (uint64_t)(&TlAllocateFromZone);
    __twr_v750 = (uint64_t)(&LexInternedStringZone);
    __twr_v751 = ((uint64_t (*)(uint64_t))__twr_v749)(__twr_v750);
    _mng_internedstring752 = __twr_v751;
    __twr_v753 = (uint64_t)(&LexCurrentSection);
    __twr_v754 = *(uint64_t*)(__twr_v753);
    __twr_v755 = (uint64_t)(&LexDefaultSection);
    if (__twr_v754 != __twr_v755) { goto __twr_l147; } else { goto __twr_l146; }
    __twr_l146:;
    __twr_v756 = (uint64_t)(&LexTextSection);
    __twr_v757 = 136ULL;
    __twr_v758 = _mng_internedstring752 + __twr_v757;
    *(uint64_t*)(__twr_v758) = __twr_v756;
    goto __twr_l145;
    __twr_l147:;
    __twr_v759 = (uint64_t)(&LexCurrentSection);
    __twr_v760 = *(uint64_t*)(__twr_v759);
    __twr_v761 = 136ULL;
    __twr_v762 = _mng_internedstring752 + __twr_v761;
    *(uint64_t*)(__twr_v762) = __twr_v760;
    __twr_l145:;
    __twr_v763 = 48ULL;
    __twr_v764 = _mng_internedstring752 + __twr_v763;
    _mng_dynamicbuffer765 = __twr_v764;
    __twr_v766 = (uint64_t)(&TlInitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v766)(_mng_dynamicbuffer765);
    __twr_v767 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v768 = 34ULL;
    __twr_v769 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v767)(_mng_token687, __twr_v768, _mng_dynamicbuffer765, __twr_v769, (uint64_t)(&_mng_dumpster770));
    __twr_v771 = (uint64_t)(&TlLookupOrInsertHashTable);
    __twr_v772 = (uint64_t)(&LexCurrentSection);
    __twr_v773 = *(uint64_t*)(__twr_v772);
    __twr_v774 = 120ULL;
    __twr_v775 = __twr_v773 + __twr_v774;
    __twr_v776 = 16ULL;
    __twr_v777 = _mng_dynamicbuffer765 + __twr_v776;
    __twr_v778 = *(uint64_t*)(__twr_v777);
    __twr_v779 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v771)(__twr_v775, _mng_internedstring752, __twr_v778);
    _mng_str780 = __twr_v779;
    if (_mng_str780 == _mng_internedstring752) { goto __twr_l148; } else { goto __twr_l149; }
    __twr_l149:;
    __twr_v781 = (uint64_t)(&TlUninitializeDynamicBuffer);
    ((void (*)(uint64_t))__twr_v781)(_mng_dynamicbuffer765);
    __twr_v782 = (uint64_t)(&TlFreeToZone);
    __twr_v783 = (uint64_t)(&LexInternedStringZone);
    ((void (*)(uint64_t, uint64_t))__twr_v782)(__twr_v783, _mng_internedstring752);
    _mng_internedstring752 = _mng_str780;
    __twr_l148:;
    __twr_v784 = 4ULL;
    _jkl_retv = __twr_v784;
    goto _jkl_epilogue;
    __twr_l143:;
    __twr_v785 = 39ULL;
    if (_mng_byte720 != __twr_v785) { goto __twr_l150; } else { goto __twr_l151; }
    __twr_l151:;
    __twr_v786 = (uint64_t)(&LexGetStringTokenInternal);
    __twr_v787 = 39ULL;
    __twr_v788 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v786)(_mng_token687, __twr_v787, __twr_v788, _mng_buffer688, (uint64_t)(&_mng_length700));
    __twr_v789 = 8ULL;
    _jkl_retv = __twr_v789;
    goto _jkl_epilogue;
    __twr_l150:;
    __twr_v790 = (uint64_t)(&LexCharTreatment);
    __twr_v791 = 1ULL;
    __twr_v792 = __twr_v790 + _mng_byte720;
    __twr_v793 = *(uint8_t*)(__twr_v792);
    if (__twr_v793 != __twr_v791) { goto __twr_l152; } else { goto __twr_l153; }
    __twr_l153:;
    _mng_length700 = 1ULL;
    __twr_v794 = 0ULL;
    __twr_v795 = 1ULL;
    *(uint8_t*)(_mng_buffer688) = _mng_byte720;
    __twr_v796 = 1ULL;
    __twr_v797 = _mng_buffer688 + __twr_v796;
    *(uint8_t*)(__twr_v797) = __twr_v794;
    _jkl_retv = __twr_v795;
    goto _jkl_epilogue;
    __twr_l152:;
    __twr_v798 = (uint64_t)(&LexCharTreatment);
    __twr_v799 = __twr_v798 + _mng_byte720;
    __twr_v800 = *(uint8_t*)(__twr_v799);
    __twr_v801 = 2ULL;
    if (__twr_v800 != __twr_v801) { goto __twr_l154; } else { goto __twr_l155; }
    __twr_l155:;
    _mng_len802 = 0ULL;
    __twr_v803 = (uint64_t)(&LexCharTreatment);
    __twr_v804 = __twr_v803 + _mng_byte720;
    __twr_v805 = *(uint8_t*)(__twr_v804);
    __twr_v806 = 2ULL;
    if (__twr_v805 != __twr_v806) { goto __twr_l157; } else { goto __twr_l156; }
    __twr_l156:;
    __twr_v807 = 127ULL;
    if (_mng_len802 != __twr_v807) { goto __twr_l159; } else { goto __twr_l160; }
    __twr_l160:;
    __twr_v808 = (uint64_t)(&LexTokenError);
    __twr_v809 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v810 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v808)(_mng_token687, __twr_v809, __twr_v810, __twr_v810, __twr_v810);
    __twr_l159:;
    __twr_v811 = 1ULL;
    __twr_v812 = _mng_buffer688 + _mng_len802;
    *(uint8_t*)(__twr_v812) = _mng_byte720;
    __twr_v813 = _mng_len802 + __twr_v811;
    _mng_len802 = __twr_v813;
    __twr_v814 = (uint64_t)(&LexGetCharacter);
    __twr_v815 = ((uint64_t (*)())__twr_v814)();
    _mng_byte720 = __twr_v815;
    __twr_l158:;
    __twr_v816 = (uint64_t)(&LexCharTreatment);
    __twr_v817 = __twr_v816 + _mng_byte720;
    __twr_v818 = *(uint8_t*)(__twr_v817);
    __twr_v819 = 2ULL;
    if (__twr_v818 == __twr_v819) { goto __twr_l156; } else { goto __twr_l157; }
    __twr_l157:;
    __twr_v820 = 0ULL;
    __twr_v821 = _mng_buffer688 + _mng_len802;
    *(uint8_t*)(__twr_v821) = __twr_v820;
    _mng_length700 = _mng_len802;
    __twr_v822 = (uint64_t)(&LexCharTreatment);
    __twr_v823 = __twr_v822 + _mng_byte720;
    __twr_v824 = *(uint8_t*)(__twr_v823);
    __twr_v825 = 3ULL;
    if (__twr_v824 == __twr_v825) { goto __twr_l161; } else { goto __twr_l162; }
    __twr_l162:;
    __twr_v826 = (uint64_t)(&LexCurrentStream);
    __twr_v827 = *(uint64_t*)(__twr_v826);
    __twr_v828 = 92ULL;
    __twr_v829 = __twr_v827 + __twr_v828;
    *(uint8_t*)(__twr_v829) = _mng_byte720;
    __twr_l161:;
    __twr_v830 = 2ULL;
    _jkl_retv = __twr_v830;
    goto _jkl_epilogue;
    __twr_l154:;
    __twr_v831 = 65ULL;
    if (_mng_byte720 < __twr_v831) { goto __twr_l165; } else { goto __twr_l163; }
    __twr_l163:;
    __twr_v832 = 90ULL;
    if (_mng_byte720 > __twr_v832) { goto __twr_l165; } else { goto __twr_l164; }
    __twr_l164:;
    __twr_v833 = 1ULL;
    goto __twr_l166;
    __twr_l165:;
    __twr_v833 = 0ULL;
    __twr_l166:;
    _mng_uppercaseonly834 = __twr_v833;
    _mng_len835 = 0ULL;
    __twr_v836 = (uint64_t)(&LexCharTreatment);
    __twr_v837 = __twr_v836 + _mng_byte720;
    __twr_v838 = *(uint8_t*)(__twr_v837);
    if (__twr_v838) { goto __twr_l168; } else { goto __twr_l167; }
    __twr_l167:;
    __twr_v839 = 127ULL;
    if (_mng_len835 != __twr_v839) { goto __twr_l170; } else { goto __twr_l171; }
    __twr_l171:;
    __twr_v840 = (uint64_t)(&LexTokenError);
    __twr_v841 = (uint64_t)(&"Token length exceeds maximum.");
    __twr_v842 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v840)(_mng_token687, __twr_v841, __twr_v842, __twr_v842, __twr_v842);
    __twr_l170:;
    if (!(_mng_uppercaseonly834)) { goto __twr_l172; } else { goto __twr_l173; }
    __twr_l173:;
    __twr_v843 = 65ULL;
    if (_mng_byte720 < __twr_v843) { goto __twr_l176; } else { goto __twr_l174; }
    __twr_l174:;
    __twr_v844 = 90ULL;
    if (_mng_byte720 > __twr_v844) { goto __twr_l176; } else { goto __twr_l175; }
    __twr_l175:;
    __twr_v845 = 1ULL;
    goto __twr_l177;
    __twr_l176:;
    __twr_v845 = 0ULL;
    __twr_l177:;
    _mng_uppercaseonly834 = __twr_v845;
    __twr_l172:;
    __twr_v846 = 1ULL;
    __twr_v847 = _mng_buffer688 + _mng_len835;
    *(uint8_t*)(__twr_v847) = _mng_byte720;
    __twr_v848 = _mng_len835 + __twr_v846;
    _mng_len835 = __twr_v848;
    __twr_v849 = (uint64_t)(&LexGetCharacter);
    __twr_v850 = ((uint64_t (*)())__twr_v849)();
    _mng_byte720 = __twr_v850;
    __twr_l169:;
    __twr_v851 = (uint64_t)(&LexCharTreatment);
    __twr_v852 = __twr_v851 + _mng_byte720;
    __twr_v853 = *(uint8_t*)(__twr_v852);
    if (!(__twr_v853)) { goto __twr_l167; } else { goto __twr_l168; }
    __twr_l168:;
    __twr_v854 = 0ULL;
    __twr_v855 = _mng_buffer688 + _mng_len835;
    *(uint8_t*)(__twr_v855) = __twr_v854;
    _mng_length700 = _mng_len835;
    __twr_v856 = (uint64_t)(&LexCharTreatment);
    __twr_v857 = 1ULL;
    __twr_v858 = __twr_v856 + _mng_byte720;
    __twr_v859 = *(uint8_t*)(__twr_v858);
    if (__twr_v859 == __twr_v857) { goto __twr_l179; } else { goto __twr_l180; }
    __twr_l180:;
    __twr_v860 = (uint64_t)(&LexCharTreatment);
    __twr_v861 = __twr_v860 + _mng_byte720;
    __twr_v862 = *(uint8_t*)(__twr_v861);
    __twr_v863 = 2ULL;
    if (__twr_v862 != __twr_v863) { goto __twr_l178; } else { goto __twr_l179; }
    __twr_l179:;
    __twr_v864 = (uint64_t)(&LexCurrentStream);
    __twr_v865 = *(uint64_t*)(__twr_v864);
    __twr_v866 = 92ULL;
    __twr_v867 = __twr_v865 + __twr_v866;
    *(uint8_t*)(__twr_v867) = _mng_byte720;
    __twr_l178:;
    if (!(_mng_uppercaseonly834)) { goto __twr_l181; } else { goto __twr_l183; }
    __twr_l183:;
    __twr_v868 = 1ULL;
    if (_mng_len835 <= __twr_v868) { goto __twr_l181; } else { goto __twr_l182; }
    __twr_l182:;
    __twr_v869 = 16ULL;
    _jkl_retv = __twr_v869;
    goto _jkl_epilogue;
    __twr_l181:;
    __twr_v870 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v871 = (uint64_t)(&LexCurrentMacroScope);
    __twr_v872 = *(uint64_t*)(__twr_v871);
    __twr_v873 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v870)(__twr_v872, _mng_buffer688);
    _mng_macro874 = __twr_v873;
    if (_mng_macro874) { goto __twr_l184; } else { goto __twr_l185; }
    __twr_l185:;
    __twr_v875 = 0ULL;
    _jkl_retv = __twr_v875;
    goto _jkl_epilogue;
    __twr_l184:;
    __twr_v876 = (uint64_t)(&LexMacroFree);
    __twr_v877 = *(uint64_t*)(__twr_v876);
    if (!(__twr_v877)) { goto __twr_l186; } else { goto __twr_l187; }
    __twr_l187:;
    __twr_v878 = (uint64_t)(&LexCopyToken);
    __twr_v879 = (uint64_t)(&LexSavedMacroToken);
    ((void (*)(uint64_t, uint64_t))__twr_v878)(__twr_v879, _mng_token687);
    __twr_v880 = (uint64_t)(&LexSavedMacro);
    *(uint64_t*)(__twr_v880) = _mng_macro874;
    __twr_v881 = 32ULL;
    _jkl_retv = __twr_v881;
    goto _jkl_epilogue;
    __twr_l186:;
    __twr_v882 = (uint64_t)(&LexExpandMacro);
    ((void (*)(uint64_t, uint64_t))__twr_v882)(_mng_macro874, _mng_token687);
    goto __twr_lLoopOnMacro;
    __twr_l128:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_length) = _mng_length700;
    *(uint64_t*)(_mng_o_internedstring) = _mng_internedstring752;
    return _jkl_retv;
}
void LexNextToken(uint64_t _mng_token883) {
    uint64_t __twr_v884;
    uint64_t __twr_v885;
    uint64_t _mng_buffer886[16];
    uint64_t __twr_v887;
    uint64_t _mng_length888;
    uint64_t _mng_internedstring889;
    uint64_t _mng_tokenflag890;
    uint64_t __twr_v891;
    uint64_t __twr_v892;
    uint64_t __twr_v893;
    uint64_t __twr_v894;
    uint64_t __twr_v895;
    uint64_t __twr_v896;
    uint64_t _mng_keyword897;
    uint64_t __twr_v898;
    uint64_t __twr_v899;
    uint64_t __twr_v900;
    uint64_t __twr_v901;
    uint64_t __twr_v902;
    uint64_t __twr_v903;
    uint64_t __twr_v904;
    uint64_t __twr_v905;
    uint64_t __twr_v906;
    uint64_t __twr_v907;
    uint64_t __twr_v908;
    uint64_t __twr_v909;
    uint64_t __twr_v910;
    uint64_t __twr_v911;
    uint64_t __twr_v912;
    uint64_t __twr_v913;
    uint64_t __twr_v914;
    uint64_t __twr_v915;
    uint64_t __twr_v916;
    uint64_t __twr_v917;
    uint64_t __twr_v918;
    uint64_t __twr_v919;
    uint64_t __twr_v920;
    uint64_t __twr_v921;
    uint64_t __twr_v922;
    uint64_t __twr_v923;
    uint64_t __twr_v924;
    uint64_t __twr_v925;
    uint64_t __twr_v926;
    uint64_t __twr_v927;
    uint64_t __twr_v928;
    uint64_t __twr_v929;
    uint64_t __twr_v930;
    uint64_t __twr_v931;
    uint64_t __twr_v932;
    uint64_t __twr_v933;
    uint64_t __twr_v934;
    uint64_t __twr_v935;
    uint64_t __twr_v936;
    uint64_t __twr_v937;
    uint64_t __twr_v938;
    uint64_t __twr_v939;
    uint64_t __twr_v940;
    uint64_t __twr_v941;
    uint64_t __twr_v942;
    uint64_t __twr_v943;
    uint64_t __twr_v944;
    uint64_t __twr_v945;
    uint64_t __twr_v946;
    uint64_t __twr_v947;
    uint64_t __twr_v948;
    uint64_t __twr_v949;
    uint64_t __twr_v950;
    uint64_t __twr_v951;
    uint64_t __twr_v952;
    uint64_t __twr_v953;
    uint64_t __twr_v954;
    uint64_t __twr_v955;
    uint64_t __twr_v956;
    uint64_t __twr_v957;
    uint64_t __twr_v958;
    uint64_t __twr_v959;
    uint64_t __twr_v960;
    uint64_t __twr_v961;
    uint64_t __twr_v962;
    uint64_t __twr_v963;
    uint64_t __twr_v964;
    uint64_t __twr_v965;
    uint64_t __twr_v966;
    uint64_t _mng_symbol967;
    uint64_t __twr_v968;
    uint64_t __twr_v969;
    uint64_t __twr_v970;
    uint64_t __twr_v971;
    uint64_t __twr_v972;
    uint64_t __twr_v973;
    uint64_t __twr_v974;
    uint64_t __twr_v975;
    uint64_t __twr_v976;
    uint64_t _mng_status977;
    uint64_t __twr_v978;
    uint64_t __twr_v979;
    uint64_t __twr_v980;
    uint64_t __twr_v981;
    uint64_t __twr_v982;
    uint64_t __twr_v983;
    uint64_t __twr_v984;
    uint64_t __twr_v985;
    uint64_t __twr_v986;
    uint64_t __twr_v987;
    uint64_t __twr_v988;
    uint64_t __twr_v989;
    uint64_t __twr_v990;
    uint64_t __twr_v991;
    uint64_t __twr_v992;
    uint64_t __twr_v993;
    uint64_t __twr_v994;
    uint64_t __twr_v995;
    uint64_t __twr_v996;
    uint64_t __twr_v997;
    uint64_t __twr_v998;
    uint64_t __twr_v999;
    uint64_t __twr_v1000;
    uint64_t __twr_v1001;
    uint64_t __twr_v1002;
    uint64_t __twr_v1003;
    uint64_t __twr_v1004;
    uint64_t __twr_v1005;
    uint64_t __twr_v1006;
    uint64_t __twr_v1007;
    uint64_t __twr_v1008;
    uint64_t __twr_v1009;
    uint64_t __twr_v1010;
    uint64_t __twr_v1011;
    uint64_t __twr_v1012;
    uint64_t __twr_v1013;
    uint64_t __twr_v1014;
    uint64_t __twr_v1015;
    uint64_t __twr_v1016;
    uint64_t __twr_v1017;
    __twr_v884 = (uint64_t)(&LexGetTokenContents);
    __twr_v885 = (uint64_t)(&_mng_buffer886);
    __twr_v887 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v884)(_mng_token883, __twr_v885, (uint64_t)(&_mng_length888), (uint64_t)(&_mng_internedstring889));
    _mng_tokenflag890 = __twr_v887;
    __twr_v891 = 19ULL;
    __twr_v892 = _mng_tokenflag890 & __twr_v891;
    if (!(__twr_v892)) { goto __twr_l189; } else { goto __twr_l190; }
    __twr_l190:;
    __twr_v893 = (uint64_t)(&TlLookupHashTable);
    __twr_v894 = (uint64_t)(&LexKeywordHashTable);
    __twr_v895 = (uint64_t)(&_mng_buffer886);
    __twr_v896 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v893)(__twr_v894, __twr_v895);
    _mng_keyword897 = __twr_v896;
    if (_mng_keyword897) { goto __twr_l191; } else { goto __twr_l192; }
    __twr_l192:;
    __twr_v898 = 16ULL;
    __twr_v899 = _mng_tokenflag890 & __twr_v898;
    if (!(__twr_v899)) { goto __twr_l193; } else { goto __twr_l194; }
    __twr_l194:;
    __twr_v900 = (uint64_t)(&LexTokenError);
    __twr_v901 = (uint64_t)(&"Bad use of uppercase alphabetic token (must be keyword).");
    __twr_v902 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v900)(_mng_token883, __twr_v901, __twr_v902, __twr_v902, __twr_v902);
    __twr_l193:;
    __twr_v903 = (uint64_t)(&LexTokenError);
    __twr_v904 = (uint64_t)(&"Unknown keyword");
    __twr_v905 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))__twr_v903)(_mng_token883, __twr_v904, __twr_v905, __twr_v905, __twr_v905);
    __twr_l191:;
    __twr_v906 = 48ULL;
    __twr_v907 = _mng_keyword897 + __twr_v906;
    __twr_v908 = *(uint8_t*)(__twr_v907);
    __twr_v909 = 24ULL;
    __twr_v910 = _mng_token883 + __twr_v909;
    *(uint8_t*)(__twr_v910) = __twr_v908;
    __twr_v911 = 49ULL;
    __twr_v912 = _mng_keyword897 + __twr_v911;
    __twr_v913 = *(uint8_t*)(__twr_v912);
    __twr_v914 = 25ULL;
    __twr_v915 = _mng_token883 + __twr_v914;
    *(uint8_t*)(__twr_v915) = __twr_v913;
    __twr_v916 = 50ULL;
    __twr_v917 = _mng_keyword897 + __twr_v916;
    __twr_v918 = *(uint8_t*)(__twr_v917);
    __twr_v919 = 26ULL;
    __twr_v920 = _mng_token883 + __twr_v919;
    *(uint8_t*)(__twr_v920) = __twr_v918;
    goto _jkl_epilogue;
    __twr_l189:;
    __twr_v921 = 8ULL;
    __twr_v922 = _mng_tokenflag890 & __twr_v921;
    if (!(__twr_v922)) { goto __twr_l195; } else { goto __twr_l196; }
    __twr_l196:;
    __twr_v923 = 20ULL;
    __twr_v924 = 24ULL;
    __twr_v925 = _mng_token883 + __twr_v924;
    *(uint8_t*)(__twr_v925) = __twr_v923;
    __twr_v926 = (uint64_t)(&LexCrunchCharacterLiteral);
    __twr_v927 = (uint64_t)(&_mng_buffer886);
    __twr_v928 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v926)(_mng_token883, __twr_v927);
    *(uint64_t*)(_mng_token883) = __twr_v928;
    goto _jkl_epilogue;
    __twr_l195:;
    __twr_v929 = 4ULL;
    __twr_v930 = _mng_tokenflag890 & __twr_v929;
    if (!(__twr_v930)) { goto __twr_l197; } else { goto __twr_l198; }
    __twr_l198:;
    __twr_v931 = 19ULL;
    __twr_v932 = 24ULL;
    __twr_v933 = _mng_token883 + __twr_v932;
    *(uint8_t*)(__twr_v933) = __twr_v931;
    *(uint64_t*)(_mng_token883) = _mng_internedstring889;
    goto _jkl_epilogue;
    __twr_l197:;
    __twr_v934 = 32ULL;
    __twr_v935 = _mng_tokenflag890 & __twr_v934;
    if (!(__twr_v935)) { goto __twr_l199; } else { goto __twr_l200; }
    __twr_l200:;
    __twr_v936 = 22ULL;
    __twr_v937 = 24ULL;
    __twr_v938 = _mng_token883 + __twr_v937;
    *(uint8_t*)(__twr_v938) = __twr_v936;
    goto _jkl_epilogue;
    __twr_l199:;
    if (_mng_length888) { goto __twr_l201; } else { goto __twr_l202; }
    __twr_l202:;
    __twr_v939 = 22ULL;
    __twr_v940 = 24ULL;
    __twr_v941 = _mng_token883 + __twr_v940;
    *(uint8_t*)(__twr_v941) = __twr_v939;
    goto _jkl_epilogue;
    __twr_l201:;
    __twr_v942 = (uint64_t)(&_mng_buffer886);
    __twr_v943 = *(uint8_t*)(__twr_v942);
    __twr_v944 = 48ULL;
    if (__twr_v943 < __twr_v944) { goto __twr_l203; } else { goto __twr_l205; }
    __twr_l205:;
    __twr_v945 = (uint64_t)(&_mng_buffer886);
    __twr_v946 = *(uint8_t*)(__twr_v945);
    __twr_v947 = 57ULL;
    if (__twr_v946 > __twr_v947) { goto __twr_l203; } else { goto __twr_l204; }
    __twr_l204:;
    __twr_v948 = 20ULL;
    __twr_v949 = 24ULL;
    __twr_v950 = _mng_token883 + __twr_v949;
    *(uint8_t*)(__twr_v950) = __twr_v948;
    __twr_v951 = (uint64_t)(&LexCrunchNumber);
    __twr_v952 = (uint64_t)(&_mng_buffer886);
    __twr_v953 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v951)(_mng_token883, __twr_v952);
    *(uint64_t*)(_mng_token883) = __twr_v953;
    goto _jkl_epilogue;
    __twr_l203:;
    __twr_v954 = 18ULL;
    __twr_v955 = 24ULL;
    __twr_v956 = _mng_token883 + __twr_v955;
    *(uint8_t*)(__twr_v956) = __twr_v954;
    __twr_v957 = 86ULL;
    __twr_v958 = 25ULL;
    __twr_v959 = _mng_token883 + __twr_v958;
    *(uint8_t*)(__twr_v959) = __twr_v957;
    __twr_v960 = (uint64_t)(&LexCurrentOverlayScope);
    __twr_v961 = *(uint64_t*)(__twr_v960);
    if (!(__twr_v961)) { goto __twr_l208; } else { goto __twr_l207; }
    __twr_l207:;
    __twr_v962 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v963 = (uint64_t)(&LexCurrentOverlayScope);
    __twr_v964 = *(uint64_t*)(__twr_v963);
    __twr_v965 = (uint64_t)(&_mng_buffer886);
    __twr_v966 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v962)(__twr_v964, __twr_v965);
    _mng_symbol967 = __twr_v966;
    goto __twr_l206;
    __twr_l208:;
    __twr_v968 = (uint64_t)(&TlLookupSymbolTable);
    __twr_v969 = (uint64_t)(&LexCurrentScope);
    __twr_v970 = *(uint64_t*)(__twr_v969);
    __twr_v971 = (uint64_t)(&_mng_buffer886);
    __twr_v972 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v968)(__twr_v970, __twr_v971);
    _mng_symbol967 = __twr_v972;
    __twr_l206:;
    if (_mng_symbol967) { goto __twr_l209; } else { goto __twr_l210; }
    __twr_l210:;
    __twr_v973 = (uint64_t)(&TlBumpAlloc);
    __twr_v974 = 144ULL;
    __twr_v975 = _mng_length888 + __twr_v974;
    __twr_v976 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v973)(__twr_v975, (uint64_t)(&_mng_symbol967));
    _mng_status977 = __twr_v976;
    if (!(_mng_status977)) { goto __twr_l211; } else { goto __twr_l212; }
    __twr_l212:;
    __twr_v978 = (uint64_t)(&TlInternalError);
    __twr_v979 = (uint64_t)(&"Couldn't allocate symbol");
    __twr_v980 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v978)(__twr_v979, __twr_v980, __twr_v980, __twr_v980);
    __twr_l211:;
    __twr_v981 = 143ULL;
    __twr_v982 = _mng_symbol967 + __twr_v981;
    __twr_v983 = 48ULL;
    __twr_v984 = _mng_symbol967 + __twr_v983;
    *(uint64_t*)(__twr_v984) = __twr_v982;
    __twr_v985 = 0ULL;
    __twr_v986 = 140ULL;
    __twr_v987 = _mng_symbol967 + __twr_v986;
    *(uint8_t*)(__twr_v987) = __twr_v985;
    __twr_v988 = 112ULL;
    __twr_v989 = _mng_symbol967 + __twr_v988;
    *(uint64_t*)(__twr_v989) = __twr_v985;
    __twr_v990 = 128ULL;
    __twr_v991 = _mng_symbol967 + __twr_v990;
    *(uint64_t*)(__twr_v991) = __twr_v985;
    __twr_v992 = 141ULL;
    __twr_v993 = _mng_symbol967 + __twr_v992;
    *(uint8_t*)(__twr_v993) = __twr_v985;
    __twr_v994 = 142ULL;
    __twr_v995 = _mng_symbol967 + __twr_v994;
    *(uint8_t*)(__twr_v995) = __twr_v985;
    __twr_v996 = (uint64_t)(&TlCopyMemory);
    __twr_v997 = *(uint64_t*)(__twr_v984);
    __twr_v998 = (uint64_t)(&_mng_buffer886);
    __twr_v999 = 1ULL;
    __twr_v1000 = _mng_length888 + __twr_v999;
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v996)(__twr_v997, __twr_v998, __twr_v1000);
    __twr_v1001 = (uint64_t)(&LexCurrentOverlayScope);
    __twr_v1002 = *(uint64_t*)(__twr_v1001);
    if (!(__twr_v1002)) { goto __twr_l215; } else { goto __twr_l214; }
    __twr_l214:;
    __twr_v1003 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1004 = (uint64_t)(&LexCurrentOverlayScope);
    __twr_v1005 = *(uint64_t*)(__twr_v1004);
    __twr_v1006 = 48ULL;
    __twr_v1007 = _mng_symbol967 + __twr_v1006;
    __twr_v1008 = *(uint64_t*)(__twr_v1007);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1003)(__twr_v1005, _mng_symbol967, __twr_v1008);
    goto __twr_l213;
    __twr_l215:;
    __twr_v1009 = (uint64_t)(&TlInsertSymbolTable);
    __twr_v1010 = (uint64_t)(&LexCurrentScope);
    __twr_v1011 = *(uint64_t*)(__twr_v1010);
    __twr_v1012 = 48ULL;
    __twr_v1013 = _mng_symbol967 + __twr_v1012;
    __twr_v1014 = *(uint64_t*)(__twr_v1013);
    ((void (*)(uint64_t, uint64_t, uint64_t))__twr_v1009)(__twr_v1011, _mng_symbol967, __twr_v1014);
    __twr_l213:;
    __twr_v1015 = 85ULL;
    __twr_v1016 = 25ULL;
    __twr_v1017 = _mng_token883 + __twr_v1016;
    *(uint8_t*)(__twr_v1017) = __twr_v1015;
    __twr_l209:;
    *(uint64_t*)(_mng_token883) = _mng_symbol967;
    __twr_l188:;
    _jkl_epilogue:;
}
uint64_t LexEnterScope(uint64_t _mng_scope1018) {
    uint64_t _jkl_retv;
    uint64_t __twr_v1019;
    uint64_t __twr_v1020;
    uint64_t _mng_oldscope1021;
    uint64_t __twr_v1022;
    uint64_t __twr_v1023;
    uint64_t __twr_v1024;
    uint64_t __twr_v1025;
    uint64_t __twr_v1026;
    __twr_v1019 = (uint64_t)(&LexCurrentScope);
    __twr_v1020 = *(uint64_t*)(__twr_v1019);
    _mng_oldscope1021 = __twr_v1020;
    if (_mng_scope1018) { goto __twr_l219; } else { goto __twr_l218; }
    __twr_l218:;
    __twr_v1022 = (uint64_t)(&TlCreateSymbolTable);
    __twr_v1023 = (uint64_t)(&LexDeleteSymbol);
    __twr_v1024 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v1022)(_mng_oldscope1021, __twr_v1023);
    __twr_v1025 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v1025) = __twr_v1024;
    goto __twr_l217;
    __twr_l219:;
    __twr_v1026 = (uint64_t)(&LexCurrentScope);
    *(uint64_t*)(__twr_v1026) = _mng_scope1018;
    __twr_l217:;
    _jkl_retv = _mng_oldscope1021;
    goto _jkl_epilogue;
    __twr_l216:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t LexResetScope(uint64_t _mng_scope1027) {
    uint64_t _jkl_retv;
    uint64_t __twr_v1028;
    uint64_t __twr_v1029;
    uint64_t _mng_oldscope1030;
    __twr_v1028 = (uint64_t)(&LexCurrentScope);
    __twr_v1029 = *(uint64_t*)(__twr_v1028);
    _mng_oldscope1030 = __twr_v1029;
    *(uint64_t*)(__twr_v1028) = _mng_scope1027;
    _jkl_retv = _mng_oldscope1030;
    goto _jkl_epilogue;
    __twr_l220:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void LexLeaveScope() {
    uint64_t __twr_v1031;
    uint64_t __twr_v1032;
    uint64_t __twr_v1033;
    uint64_t __twr_v1034;
    __twr_v1031 = (uint64_t)(&TlDeleteSymbolTable);
    __twr_v1032 = (uint64_t)(&LexCurrentScope);
    __twr_v1033 = *(uint64_t*)(__twr_v1032);
    __twr_v1034 = ((uint64_t (*)(uint64_t))__twr_v1031)(__twr_v1033);
    *(uint64_t*)(__twr_v1032) = __twr_v1034;
    __twr_l221:;
    _jkl_epilogue:;
}
void LexEnterOverlayScope(uint64_t _mng_scope1035) {
    uint64_t __twr_v1036;
    __twr_v1036 = (uint64_t)(&LexCurrentOverlayScope);
    *(uint64_t*)(__twr_v1036) = _mng_scope1035;
    __twr_l222:;
    _jkl_epilogue:;
}
void LexExitOverlayScope() {
    uint64_t __twr_v1037;
    uint64_t __twr_v1038;
    __twr_v1037 = 0ULL;
    __twr_v1038 = (uint64_t)(&LexCurrentOverlayScope);
    *(uint64_t*)(__twr_v1038) = __twr_v1037;
    __twr_l223:;
    _jkl_epilogue:;
}
void LexEnterMacroFreeZone() {
    uint64_t __twr_v1039;
    uint64_t __twr_v1040;
    uint64_t __twr_v1041;
    uint64_t __twr_v1042;
    __twr_v1039 = 1ULL;
    __twr_v1040 = (uint64_t)(&LexMacroFree);
    __twr_v1041 = *(uint64_t*)(__twr_v1040);
    __twr_v1042 = __twr_v1041 + __twr_v1039;
    *(uint64_t*)(__twr_v1040) = __twr_v1042;
    __twr_l224:;
    _jkl_epilogue:;
}
void LexLeaveMacroFreeZone() {
    uint64_t __twr_v1043;
    uint64_t __twr_v1044;
    uint64_t __twr_v1045;
    uint64_t __twr_v1046;
    __twr_v1043 = 1ULL;
    __twr_v1044 = (uint64_t)(&LexMacroFree);
    __twr_v1045 = *(uint64_t*)(__twr_v1044);
    __twr_v1046 = __twr_v1045 - __twr_v1043;
    *(uint64_t*)(__twr_v1044) = __twr_v1046;
    __twr_l225:;
    _jkl_epilogue:;
}
void LexCopyToken(uint64_t _mng_dest1047, uint64_t _mng_src1048) {
    uint64_t __twr_v1049;
    uint64_t __twr_v1050;
    uint64_t __twr_v1051;
    uint64_t __twr_v1052;
    uint64_t __twr_v1053;
    uint64_t __twr_v1054;
    uint64_t __twr_v1055;
    uint64_t __twr_v1056;
    uint64_t __twr_v1057;
    uint64_t __twr_v1058;
    uint64_t __twr_v1059;
    uint64_t __twr_v1060;
    uint64_t __twr_v1061;
    uint64_t __twr_v1062;
    uint64_t __twr_v1063;
    uint64_t __twr_v1064;
    uint64_t __twr_v1065;
    uint64_t __twr_v1066;
    uint64_t __twr_v1067;
    uint64_t __twr_v1068;
    uint64_t __twr_v1069;
    uint64_t __twr_v1070;
    uint64_t __twr_v1071;
    uint64_t __twr_v1072;
    uint64_t __twr_v1073;
    __twr_v1049 = *(uint64_t*)(_mng_src1048);
    *(uint64_t*)(_mng_dest1047) = __twr_v1049;
    __twr_v1050 = 8ULL;
    __twr_v1051 = _mng_src1048 + __twr_v1050;
    __twr_v1052 = *(uint64_t*)(__twr_v1051);
    __twr_v1053 = _mng_dest1047 + __twr_v1050;
    *(uint64_t*)(__twr_v1053) = __twr_v1052;
    __twr_v1054 = 16ULL;
    __twr_v1055 = _mng_src1048 + __twr_v1054;
    __twr_v1056 = *(uint32_t*)(__twr_v1055);
    __twr_v1057 = _mng_dest1047 + __twr_v1054;
    *(uint32_t*)(__twr_v1057) = __twr_v1056;
    __twr_v1058 = 20ULL;
    __twr_v1059 = _mng_src1048 + __twr_v1058;
    __twr_v1060 = *(uint32_t*)(__twr_v1059);
    __twr_v1061 = _mng_dest1047 + __twr_v1058;
    *(uint32_t*)(__twr_v1061) = __twr_v1060;
    __twr_v1062 = 24ULL;
    __twr_v1063 = _mng_src1048 + __twr_v1062;
    __twr_v1064 = *(uint8_t*)(__twr_v1063);
    __twr_v1065 = _mng_dest1047 + __twr_v1062;
    *(uint8_t*)(__twr_v1065) = __twr_v1064;
    __twr_v1066 = 25ULL;
    __twr_v1067 = _mng_src1048 + __twr_v1066;
    __twr_v1068 = *(uint8_t*)(__twr_v1067);
    __twr_v1069 = _mng_dest1047 + __twr_v1066;
    *(uint8_t*)(__twr_v1069) = __twr_v1068;
    __twr_v1070 = 26ULL;
    __twr_v1071 = _mng_src1048 + __twr_v1070;
    __twr_v1072 = *(uint8_t*)(__twr_v1071);
    __twr_v1073 = _mng_dest1047 + __twr_v1070;
    *(uint8_t*)(__twr_v1073) = __twr_v1072;
    __twr_l226:;
    _jkl_epilogue:;
}
void LexGetToken(uint64_t _mng_token1074) {
    uint64_t __twr_v1075;
    uint64_t __twr_v1076;
    uint64_t _mng_index1077;
    uint64_t __twr_v1078;
    uint64_t __twr_v1079;
    uint64_t __twr_v1080;
    uint64_t __twr_v1081;
    uint64_t __twr_v1082;
    uint64_t __twr_v1083;
    uint64_t __twr_v1084;
    uint64_t __twr_v1085;
    uint64_t __twr_v1086;
    __twr_v1075 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v1076 = *(uint32_t*)(__twr_v1075);
    _mng_index1077 = __twr_v1076;
    if (!(_mng_index1077)) { goto __twr_l228; } else { goto __twr_l229; }
    __twr_l229:;
    __twr_v1078 = (uint64_t)(&LexCopyToken);
    __twr_v1079 = (uint64_t)(&LexPutbackStack);
    __twr_v1080 = 1ULL;
    __twr_v1081 = _mng_index1077 - __twr_v1080;
    __twr_v1082 = 5ULL;
    __twr_v1083 = __twr_v1081 << __twr_v1082;
    __twr_v1084 = __twr_v1079 + __twr_v1083;
    ((void (*)(uint64_t, uint64_t))__twr_v1078)(_mng_token1074, __twr_v1084);
    __twr_v1085 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v1085) = __twr_v1081;
    goto _jkl_epilogue;
    __twr_l228:;
    __twr_v1086 = (uint64_t)(&LexNextToken);
    ((void (*)(uint64_t))__twr_v1086)(_mng_token1074);
    __twr_l227:;
    _jkl_epilogue:;
}
void LexPutbackToken(uint64_t _mng_token1087) {
    uint64_t __twr_v1088;
    uint64_t __twr_v1089;
    uint64_t _mng_index1090;
    uint64_t __twr_v1091;
    uint64_t __twr_v1092;
    uint64_t __twr_v1093;
    uint64_t __twr_v1094;
    uint64_t __twr_v1095;
    uint64_t __twr_v1096;
    uint64_t __twr_v1097;
    uint64_t __twr_v1098;
    uint64_t __twr_v1099;
    uint64_t __twr_v1100;
    uint64_t __twr_v1101;
    uint64_t __twr_v1102;
    __twr_v1088 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v1089 = *(uint32_t*)(__twr_v1088);
    _mng_index1090 = __twr_v1089;
    __twr_v1091 = 256ULL;
    if (_mng_index1090 != __twr_v1091) { goto __twr_l231; } else { goto __twr_l232; }
    __twr_l232:;
    __twr_v1092 = (uint64_t)(&TlInternalError);
    __twr_v1093 = (uint64_t)(&"Lexer putback stack overflow");
    __twr_v1094 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v1092)(__twr_v1093, __twr_v1094, __twr_v1094, __twr_v1094);
    __twr_l231:;
    __twr_v1095 = (uint64_t)(&LexCopyToken);
    __twr_v1096 = (uint64_t)(&LexPutbackStack);
    __twr_v1097 = 5ULL;
    __twr_v1098 = _mng_index1090 << __twr_v1097;
    __twr_v1099 = __twr_v1096 + __twr_v1098;
    ((void (*)(uint64_t, uint64_t))__twr_v1095)(__twr_v1099, _mng_token1087);
    __twr_v1100 = 1ULL;
    __twr_v1101 = _mng_index1090 + __twr_v1100;
    __twr_v1102 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v1102) = __twr_v1101;
    __twr_l230:;
    _jkl_epilogue:;
}
uint64_t LexMatchToken(uint64_t _mng_token1103, uint64_t _mng_type1104, uint64_t _mng_subtype1105) {
    uint64_t _jkl_retv;
    uint64_t __twr_v1106;
    uint64_t __twr_v1107;
    uint64_t _mng_index1108;
    uint64_t __twr_v1109;
    uint64_t __twr_v1110;
    uint64_t __twr_v1111;
    uint64_t __twr_v1112;
    uint64_t __twr_v1113;
    uint64_t __twr_v1114;
    uint64_t __twr_v1115;
    uint64_t __twr_v1116;
    uint64_t __twr_v1117;
    uint64_t __twr_v1118;
    uint64_t _mng_matchtoken1119;
    uint64_t __twr_v1120;
    uint64_t __twr_v1121;
    uint64_t __twr_v1122;
    uint64_t __twr_v1123;
    uint64_t __twr_v1124;
    uint64_t __twr_v1125;
    uint64_t __twr_v1126;
    uint64_t __twr_v1127;
    uint64_t __twr_v1128;
    uint64_t __twr_v1129;
    uint64_t __twr_v1130;
    uint64_t __twr_v1131;
    uint64_t __twr_v1132;
    uint64_t __twr_v1133;
    uint64_t __twr_v1134;
    uint64_t __twr_v1135;
    uint64_t __twr_v1136;
    uint64_t __twr_v1137;
    uint64_t __twr_v1138;
    uint64_t __twr_v1139;
    __twr_v1106 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v1107 = *(uint32_t*)(__twr_v1106);
    _mng_index1108 = __twr_v1107;
    if (_mng_index1108) { goto __twr_l234; } else { goto __twr_l235; }
    __twr_l235:;
    __twr_v1109 = (uint64_t)(&LexNextToken);
    __twr_v1110 = (uint64_t)(&LexPutbackStack);
    ((void (*)(uint64_t))__twr_v1109)(__twr_v1110);
    __twr_v1111 = 1ULL;
    __twr_v1112 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v1112) = __twr_v1111;
    _mng_index1108 = 1ULL;
    __twr_l234:;
    __twr_v1113 = (uint64_t)(&LexPutbackStack);
    __twr_v1114 = 1ULL;
    __twr_v1115 = _mng_index1108 - __twr_v1114;
    __twr_v1116 = 5ULL;
    __twr_v1117 = __twr_v1115 << __twr_v1116;
    __twr_v1118 = __twr_v1113 + __twr_v1117;
    _mng_matchtoken1119 = __twr_v1118;
    if (!(_mng_token1103)) { goto __twr_l236; } else { goto __twr_l237; }
    __twr_l237:;
    __twr_v1120 = (uint64_t)(&LexCopyToken);
    ((void (*)(uint64_t, uint64_t))__twr_v1120)(_mng_token1103, _mng_matchtoken1119);
    __twr_l236:;
    __twr_v1121 = 24ULL;
    __twr_v1122 = _mng_matchtoken1119 + __twr_v1121;
    __twr_v1123 = *(uint8_t*)(__twr_v1122);
    if (__twr_v1123 == _mng_type1104) { goto __twr_l238; } else { goto __twr_l239; }
    __twr_l239:;
    __twr_v1124 = 24ULL;
    __twr_v1125 = _mng_matchtoken1119 + __twr_v1124;
    __twr_v1126 = *(uint8_t*)(__twr_v1125);
    __twr_v1127 = 22ULL;
    if (__twr_v1126 != __twr_v1127) { goto __twr_l240; } else { goto __twr_l241; }
    __twr_l241:;
    __twr_v1128 = 1ULL;
    __twr_v1129 = (uint64_t)(&LexPutbackStackPtr);
    __twr_v1130 = *(uint32_t*)(__twr_v1129);
    __twr_v1131 = __twr_v1130 - __twr_v1128;
    *(uint32_t*)(__twr_v1129) = __twr_v1131;
    __twr_l240:;
    __twr_v1132 = 0ULL;
    _jkl_retv = __twr_v1132;
    goto _jkl_epilogue;
    __twr_l238:;
    if (!(_mng_subtype1105)) { goto __twr_l243; } else { goto __twr_l244; }
    __twr_l244:;
    __twr_v1133 = 25ULL;
    __twr_v1134 = _mng_matchtoken1119 + __twr_v1133;
    __twr_v1135 = *(uint8_t*)(__twr_v1134);
    if (__twr_v1135 != _mng_subtype1105) { goto __twr_l242; } else { goto __twr_l243; }
    __twr_l243:;
    __twr_v1136 = 1ULL;
    __twr_v1137 = _mng_index1108 - __twr_v1136;
    __twr_v1138 = (uint64_t)(&LexPutbackStackPtr);
    *(uint32_t*)(__twr_v1138) = __twr_v1137;
    _jkl_retv = __twr_v1136;
    goto _jkl_epilogue;
    __twr_l242:;
    __twr_v1139 = 0ULL;
    _jkl_retv = __twr_v1139;
    goto _jkl_epilogue;
    __twr_l233:;
    _jkl_epilogue:;
    return _jkl_retv;
}

//
// Disk Update Tool initialization.
//

#INCLUDE "Dut.hjk"

FN DutUsage ()
    TlPrintByHandle (
        TlStdErr, // handle
        "Usage: %s <command> <options ...>

Commands:
  info <imagename>:
    Print miscellaneous information about the disk image.

  create <imagename> <sectors>
  [-apt:disklabel;label1,sectors1;label2,sectors2;... [-boot:bootfile]]
  [-fs:part,fsname[,manifest]]:
    Create a disk image with the given name, size in sectors, partition layout,
    boot sector, and initialize with one or more filesystems.

  update <imagename> <partition> <manifest>:
    Update all recursive subdirectories indicated by manifest file.

  updatefiles <imagename> <partition> <listfile>:
    Update all files indicated by list file.

  ls <imagename> <partition> <path>:
    List the contents of the specified filesystem directory.

  read <imagename> <partition> <path>:
    Read the contents of the specified file to stdout.

  write <imagename> <partition> <path> <hostpath>:
    Write the contents of the specified file from another file.

  delete <imagename> <partition> <path>:
    Delete the specified file.\n", // fmt
        TlProgramName,
    )

    TlErrorExit ()
END

FN DutCreateImage (
    IN argc : ULONG,
    IN argv : ^^UBYTE,
)

    // Parse the arguments and generate a disk image as specified.

    TlInternalError ( "DutCreateImage", 0, 0, 0 )
END

FN DutUpdate (
    IN imagename : ^UBYTE,
    IN partition : ^UBYTE,
    IN manifest : ^UBYTE,
)

    TlInternalError ( "DutUpdate", 0, 0, 0 )
END

FN DutUpdateFiles (
    IN imagename : ^UBYTE,
    IN partition : ^UBYTE,
    IN listfile : ^UBYTE,
)

    TlInternalError ( "DutUpdateFiles", 0, 0, 0 )
END

FN DutListFiles (
    IN imagename : ^UBYTE,
    IN partition : ^UBYTE,
    IN path : ^UBYTE,
)

    TlInternalError ( "DutListFiles", 0, 0, 0 )
END

FN DutReadFile (
    IN imagename : ^UBYTE,
    IN partition : ^UBYTE,
    IN path : ^UBYTE,
)

    TlInternalError ( "DutReadFile", 0, 0, 0 )
END

FN DutWriteFile (
    IN imagename : ^UBYTE,
    IN partition : ^UBYTE,
    IN path : ^UBYTE,
    IN hostpath : ^UBYTE,
)

    TlInternalError ( "DutWriteFile", 0, 0, 0 )
END

FN DutDeleteFile (
    IN imagename : ^UBYTE,
    IN partition : ^UBYTE,
    IN path : ^UBYTE,
)

    TlInternalError ( "DutDeleteFile", 0, 0, 0 )
END

FN TlMain (
    IN argc : ULONG,
    IN argv : ^^UBYTE,
)

    // Dispatch to the correct command.

    IF argc < 3 THEN
        DutUsage ()
    END

    cmd := argv[1]

    IF TlCompareString ( cmd, "create" ) == 0 THEN
        DutCreateImage ( argc, argv )

    ELSEIF TlCompareString ( cmd, "update" ) == 0 THEN
        IF argc != 5 THEN
            DutUsage ()
        END

        DutUpdate (
            argv[2], // imagename
            argv[3], // partition
            argv[4], // manifest
        )

    ELSEIF TlCompareString ( cmd, "updatefiles" ) == 0 THEN
        IF argc != 5 THEN
            DutUsage ()
        END

        DutUpdateFiles (
            argv[2], // imagename
            argv[3], // partition
            argv[4], // listfile
        )

    ELSEIF TlCompareString ( cmd, "ls" ) == 0 THEN
        IF argc != 5 THEN
            DutUsage ()
        END

        DutListFiles (
            argv[2], // imagename
            argv[3], // partition
            argv[4], // path
        )

    ELSEIF TlCompareString ( cmd, "read" ) == 0 THEN
        IF argc != 5 THEN
            DutUsage ()
        END

        DutReadFile (
            argv[2], // imagename
            argv[3], // partition
            argv[4], // path
        )

    ELSEIF TlCompareString ( cmd, "write" ) == 0 THEN
        IF argc != 6 THEN
            DutUsage ()
        END

        DutWriteFile (
            argv[2], // imagename
            argv[3], // partition
            argv[4], // path
            argv[5], // hostpath
        )

    ELSEIF TlCompareString ( cmd, "delete" ) == 0 THEN
        IF argc != 5 THEN
            DutUsage ()
        END

        DutDeleteFile (
            argv[2], // imagename
            argv[3], // partition
            argv[4], // path
        )

    ELSE
        DutUsage ()
    END
END
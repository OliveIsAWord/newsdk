#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize(uint64_t _mng_programname3);
extern uint64_t TlMeasureString(uint64_t _mng_str4);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr5, uint64_t _mng_sz6, uint64_t _mng_byte7);
extern void TlCopyMemory(uint64_t _mng_dest8, uint64_t _mng_src9, uint64_t _mng_sz10);
extern void TlPrintString(uint64_t _mng_str11);
extern void TlPrintNumber(uint64_t _mng_num12);
extern void TlPrintHex(uint64_t _mng_num13);
extern void TlPrintCharacter(uint64_t _mng_byte14);
extern void TlInternalError(uint64_t _mng_str15, uint64_t _mng_err116, uint64_t _mng_err217, uint64_t _mng_err318);
extern void TlUserError(uint64_t _mng_str19, uint64_t _mng_err120, uint64_t _mng_err221, uint64_t _mng_err322);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes24, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr25);
extern uint64_t TlCompareString(uint64_t _mng_str126, uint64_t _mng_str227);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str128, uint64_t _mng_str229, uint64_t _mng_count30);
extern void TlCopyString(uint64_t _mng_dest31, uint64_t _mng_src32, uint64_t _mng_bufsize33);
extern uint64_t TlOpenSource(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename35, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle36);
extern uint64_t TlReadFile(uint64_t _mng_handle37, uint64_t _mng_bytes38, uint64_t _mng_buffer39);
extern uint64_t TlWriteFile(uint64_t _mng_handle40, uint64_t _mng_bytes41, uint64_t _mng_buffer42);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable43);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable44);
extern void TlInsertHashTable(uint64_t _mng_hashtable45, uint64_t _mng_entry46, uint64_t _mng_key47);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable48, uint64_t _mng_entry49, uint64_t _mng_key50);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable51, uint64_t _mng_entrysize52, uint64_t _mng_key53, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable54, uint64_t _mng_key55);
extern void TlRemoveHashTable(uint64_t _mng_entry56);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable57, uint64_t _mng_enumfunc58);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable59, uint64_t _mng_key60, uint64_t _mng_hash61);
extern uint64_t TlHashString(uint64_t _mng_str62);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable63, uint64_t _mng_outerscope64, uint64_t _mng_deletefunc65);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope66, uint64_t _mng_deletefunc67);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable68);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable69, uint64_t _mng_name70);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable71, uint64_t _mng_entry72, uint64_t _mng_name73);
extern void TlRemoveSymbolTable(uint64_t _mng_entry74);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array76);
extern void TlInsertDynamicBuffer(uint64_t _mng_array77, uint64_t _mng_byte78);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array79, uint64_t _mng_srcbuf80, uint64_t _mng_length81);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array82, uint64_t _mng_number83, uint64_t _mng_base84);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array85);
extern uint64_t TlMatchPath(uint64_t _mng_path86, uint64_t _mng_pathset87, uint64_t _mng_resultingpath88, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath89, uint64_t _mng_destpath90);
extern uint64_t TlGetFileName(uint64_t _mng_path91);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path92);
extern uint64_t TlPathExists(uint64_t _mng_path93);
extern uint64_t TlIterateDirectory(uint64_t _mng_path94, uint64_t _mng_callback95, uint64_t _mng_context96);
extern uint64_t TlGetPathExtension(uint64_t _mng_path97);
extern uint64_t TlStatFile(uint64_t _mng_path98, uint64_t _mng_statrecord99);
extern uint64_t TlCreateDirectory(uint64_t _mng_path100);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path101);
extern void TlInitializeZone(uint64_t _mng_zone102, uint64_t _mng_blocksize103);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone104);
extern void TlFreeToZone(uint64_t _mng_zone105, uint64_t _mng_block106);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant107);
extern void TlPunchValue(uint64_t _mng_ptr108, uint64_t _mng_value109, uint64_t _mng_bytes110);
extern uint64_t TlTokenize(uint64_t _mng_buffer111, uint64_t _mng_tokenbuffer112, uint64_t _mng_bufsize113, uint64_t _mng_delimiter114);
extern uint64_t TlStringToNumber(uint64_t _mng_src115, uint64_t _mng_bufsize116, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler117);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine118, uint64_t _mng_arg119, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread120);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex121);
extern void TlReleaseMutex(uint64_t _mng_mutex122);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue123);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore124);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore125);
extern uint64_t TlSystem(uint64_t _mng_cmdline126);
extern uint64_t TlCurrentEpochTime();
extern uint64_t TlProgramName;
extern uint64_t TlStdErr;
extern void TlPrintByCallbackByVarTable(uint64_t _mng_callback127, uint64_t _mng_context128, uint64_t _mng_fmt129, uint64_t _mng_argv130, uint64_t _mng_argc131);
extern void TlPrintByCallback(uint64_t _mng_callback132, uint64_t _mng_context133, uint64_t _mng_fmt134, uint64_t _mng_argv135, uint64_t _mng_argc136);
extern void TlPrintByVarTable(uint64_t _mng_handle137, uint64_t _mng_fmt138, uint64_t _mng_argv139, uint64_t _mng_argc140);
extern void TlPrintByHandle(uint64_t _mng_handle141, uint64_t _mng_fmt142, uint64_t _mng_argv143, uint64_t _mng_argc144);
extern void TlPrint(uint64_t _mng_fmt145, uint64_t _mng_argv146, uint64_t _mng_argc147);
extern void TlFormatByVarTable(uint64_t _mng_dest148, uint64_t _mng_bufsize149, uint64_t _mng_fmt150, uint64_t _mng_argv151, uint64_t _mng_argc152);
extern void TlFormat(uint64_t _mng_dest153, uint64_t _mng_bufsize154, uint64_t _mng_fmt155, uint64_t _mng_argv156, uint64_t _mng_argc157);
extern void TlError(uint64_t _mng_fmt158, uint64_t _mng_argv159, uint64_t _mng_argc160);
void TlInitializeHashTable(uint64_t _mng_hashtable161) {
    uint64_t _mng_listhead162;
    uint64_t __twr_v163;
    uint64_t __twr_v164;
    uint64_t _mng_i165;
    uint64_t __twr_v166;
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t _mng_listhead171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t __twr_v176;
    _mng_listhead162 = _mng_hashtable161;
    __twr_v163 = 8ULL;
    __twr_v164 = _mng_listhead162 + __twr_v163;
    *(uint64_t*)(__twr_v164) = _mng_listhead162;
    *(uint64_t*)(_mng_listhead162) = _mng_listhead162;
    _mng_i165 = 0ULL;
    __twr_l2:;
    __twr_v166 = 16ULL;
    __twr_v167 = _mng_hashtable161 + __twr_v166;
    __twr_v168 = 4ULL;
    __twr_v169 = _mng_i165 << __twr_v168;
    __twr_v170 = __twr_v167 + __twr_v169;
    _mng_listhead171 = __twr_v170;
    __twr_v172 = 8ULL;
    __twr_v173 = _mng_listhead171 + __twr_v172;
    *(uint64_t*)(__twr_v173) = _mng_listhead171;
    *(uint64_t*)(_mng_listhead171) = _mng_listhead171;
    __twr_v174 = 1ULL;
    __twr_v175 = _mng_i165 + __twr_v174;
    _mng_i165 = __twr_v175;
    __twr_l4:;
    __twr_v176 = 97ULL;
    if (_mng_i165 < __twr_v176) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable177) {
    uint64_t _mng_i178;
    uint64_t _mng_entries179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t __twr_v183;
    uint64_t __twr_v184;
    uint64_t _mng_head185;
    uint64_t __twr_v186;
    uint64_t _mng_listentry187;
    uint64_t __twr_v188;
    uint64_t __twr_v189;
    uint64_t __twr_v190;
    uint64_t __twr_v191;
    uint64_t __twr_v192;
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t __twr_v195;
    uint64_t __twr_v196;
    uint64_t __twr_v197;
    _mng_i178 = 0ULL;
    __twr_l6:;
    _mng_entries179 = 0ULL;
    __twr_v180 = 16ULL;
    __twr_v181 = _mng_hashtable177 + __twr_v180;
    __twr_v182 = 4ULL;
    __twr_v183 = _mng_i178 << __twr_v182;
    __twr_v184 = __twr_v181 + __twr_v183;
    _mng_head185 = __twr_v184;
    __twr_v186 = *(uint64_t*)(_mng_head185);
    _mng_listentry187 = __twr_v186;
    if (_mng_listentry187 == _mng_head185) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v188 = 1ULL;
    __twr_v189 = _mng_entries179 + __twr_v188;
    _mng_entries179 = __twr_v189;
    __twr_v190 = *(uint64_t*)(_mng_listentry187);
    _mng_listentry187 = __twr_v190;
    __twr_l11:;
    if (_mng_listentry187 != _mng_head185) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (!(_mng_entries179)) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v191 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v191)(_mng_i178);
    __twr_v192 = (uint64_t)(&TlPrintString);
    __twr_v193 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v192)(__twr_v193);
    ((void (*)(uint64_t))__twr_v191)(_mng_entries179);
    __twr_v194 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v192)(__twr_v194);
    __twr_l12:;
    __twr_v195 = 1ULL;
    __twr_v196 = _mng_i178 + __twr_v195;
    _mng_i178 = __twr_v196;
    __twr_l8:;
    __twr_v197 = 97ULL;
    if (_mng_i178 < __twr_v197) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_l5:;
    _jkl_epilogue:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable198, uint64_t _mng_entry199, uint64_t _mng_key200, uint64_t _mng_hash201) {
    uint64_t __twr_v202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t __twr_v208;
    uint64_t __twr_v209;
    uint64_t __twr_v210;
    uint64_t _mng_listhead211;
    uint64_t _mng_listentry212;
    uint64_t __twr_v213;
    uint64_t _mng_first214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t __twr_v217;
    uint64_t _mng_listhead218;
    uint64_t __twr_v219;
    uint64_t _mng_listentry220;
    uint64_t __twr_v221;
    uint64_t __twr_v222;
    uint64_t _mng_last223;
    uint64_t __twr_v224;
    __twr_v202 = 32ULL;
    __twr_v203 = _mng_entry199 + __twr_v202;
    *(uint64_t*)(__twr_v203) = _mng_hashtable198;
    __twr_v204 = 40ULL;
    __twr_v205 = _mng_entry199 + __twr_v204;
    *(uint64_t*)(__twr_v205) = _mng_key200;
    __twr_v206 = 16ULL;
    __twr_v207 = _mng_hashtable198 + __twr_v206;
    __twr_v208 = 4ULL;
    __twr_v209 = _mng_hash201 << __twr_v208;
    __twr_v210 = __twr_v207 + __twr_v209;
    _mng_listhead211 = __twr_v210;
    _mng_listentry212 = _mng_entry199;
    __twr_v213 = *(uint64_t*)(_mng_listhead211);
    _mng_first214 = __twr_v213;
    *(uint64_t*)(_mng_listentry212) = _mng_first214;
    __twr_v215 = 8ULL;
    __twr_v216 = _mng_listentry212 + __twr_v215;
    *(uint64_t*)(__twr_v216) = _mng_listhead211;
    __twr_v217 = _mng_first214 + __twr_v215;
    *(uint64_t*)(__twr_v217) = _mng_entry199;
    *(uint64_t*)(_mng_listhead211) = _mng_entry199;
    _mng_listhead218 = _mng_hashtable198;
    __twr_v219 = _mng_entry199 + __twr_v206;
    _mng_listentry220 = __twr_v219;
    __twr_v221 = _mng_listhead218 + __twr_v215;
    __twr_v222 = *(uint64_t*)(__twr_v221);
    _mng_last223 = __twr_v222;
    __twr_v224 = _mng_listentry220 + __twr_v215;
    *(uint64_t*)(__twr_v224) = _mng_last223;
    *(uint64_t*)(_mng_listentry220) = _mng_listhead218;
    *(uint64_t*)(_mng_last223) = _mng_listentry220;
    *(uint64_t*)(__twr_v221) = _mng_listentry220;
    __twr_l14:;
    _jkl_epilogue:;
}
void TlInsertHashTable(uint64_t _mng_hashtable225, uint64_t _mng_entry226, uint64_t _mng_key227) {
    uint64_t __twr_v228;
    uint64_t __twr_v229;
    uint64_t _mng_hash230;
    uint64_t __twr_v231;
    __twr_v228 = (uint64_t)(&TlHashString);
    __twr_v229 = ((uint64_t (*)(uint64_t))__twr_v228)(_mng_key227);
    _mng_hash230 = __twr_v229;
    __twr_v231 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v231)(_mng_hashtable225, _mng_entry226, _mng_key227, _mng_hash230);
    __twr_l15:;
    _jkl_epilogue:;
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable232, uint64_t _mng_entrysize233, uint64_t _mng_key234, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t _mng_hash237;
    uint64_t __twr_v238;
    uint64_t __twr_v239;
    uint64_t __twr_v240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t _mng_head243;
    uint64_t __twr_v244;
    uint64_t _mng_listentry245;
    uint64_t _mng_entry246;
    uint64_t __twr_v247;
    uint64_t __twr_v248;
    uint64_t __twr_v249;
    uint64_t __twr_v250;
    uint64_t __twr_v251;
    uint64_t _mng_created252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t _mng_status256;
    uint64_t __twr_v257;
    uint64_t __twr_v258;
    uint64_t __twr_v259;
    uint64_t __twr_v260;
    __twr_v235 = (uint64_t)(&TlHashString);
    __twr_v236 = ((uint64_t (*)(uint64_t))__twr_v235)(_mng_key234);
    _mng_hash237 = __twr_v236;
    __twr_v238 = 16ULL;
    __twr_v239 = _mng_hashtable232 + __twr_v238;
    __twr_v240 = 4ULL;
    __twr_v241 = _mng_hash237 << __twr_v240;
    __twr_v242 = __twr_v239 + __twr_v241;
    _mng_head243 = __twr_v242;
    __twr_v244 = *(uint64_t*)(_mng_head243);
    _mng_listentry245 = __twr_v244;
    if (_mng_listentry245 == _mng_head243) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    _mng_entry246 = _mng_listentry245;
    __twr_v247 = (uint64_t)(&TlCompareString);
    __twr_v248 = 40ULL;
    __twr_v249 = _mng_entry246 + __twr_v248;
    __twr_v250 = *(uint64_t*)(__twr_v249);
    __twr_v251 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v247)(_mng_key234, __twr_v250);
    if (__twr_v251) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    _mng_created252 = 0ULL;
    _jkl_retv = _mng_entry246;
    goto _jkl_epilogue;
    __twr_l20:;
    __twr_v253 = *(uint64_t*)(_mng_listentry245);
    _mng_listentry245 = __twr_v253;
    __twr_l19:;
    if (_mng_listentry245 != _mng_head243) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v254 = (uint64_t)(&TlBumpAlloc);
    __twr_v255 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v254)(_mng_entrysize233, (uint64_t)(&_mng_entry246));
    _mng_status256 = __twr_v255;
    if (!(_mng_status256)) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v257 = (uint64_t)(&TlInternalError);
    __twr_v258 = (uint64_t)(&"Failed to allocate entry");
    __twr_v259 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v257)(__twr_v258, __twr_v259, __twr_v259, __twr_v259);
    __twr_l22:;
    __twr_v260 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v260)(_mng_hashtable232, _mng_entry246, _mng_key234, _mng_hash237);
    _mng_created252 = 1ULL;
    _jkl_retv = _mng_entry246;
    goto _jkl_epilogue;
    __twr_l16:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created252;
    return _jkl_retv;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable261, uint64_t _mng_entry262, uint64_t _mng_key263) {
    uint64_t _jkl_retv;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t _mng_hash266;
    uint64_t __twr_v267;
    uint64_t __twr_v268;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t __twr_v271;
    uint64_t _mng_head272;
    uint64_t __twr_v273;
    uint64_t _mng_listentry274;
    uint64_t _mng_oldentry275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t __twr_v279;
    uint64_t __twr_v280;
    uint64_t __twr_v281;
    uint64_t __twr_v282;
    __twr_v264 = (uint64_t)(&TlHashString);
    __twr_v265 = ((uint64_t (*)(uint64_t))__twr_v264)(_mng_key263);
    _mng_hash266 = __twr_v265;
    __twr_v267 = 16ULL;
    __twr_v268 = _mng_hashtable261 + __twr_v267;
    __twr_v269 = 4ULL;
    __twr_v270 = _mng_hash266 << __twr_v269;
    __twr_v271 = __twr_v268 + __twr_v270;
    _mng_head272 = __twr_v271;
    __twr_v273 = *(uint64_t*)(_mng_head272);
    _mng_listentry274 = __twr_v273;
    if (_mng_listentry274 == _mng_head272) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    _mng_oldentry275 = _mng_listentry274;
    __twr_v276 = (uint64_t)(&TlCompareString);
    __twr_v277 = 40ULL;
    __twr_v278 = _mng_oldentry275 + __twr_v277;
    __twr_v279 = *(uint64_t*)(__twr_v278);
    __twr_v280 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v276)(_mng_key263, __twr_v279);
    if (__twr_v280) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    _jkl_retv = _mng_oldentry275;
    goto _jkl_epilogue;
    __twr_l28:;
    __twr_v281 = *(uint64_t*)(_mng_listentry274);
    _mng_listentry274 = __twr_v281;
    __twr_l27:;
    if (_mng_listentry274 != _mng_head272) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v282 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v282)(_mng_hashtable261, _mng_entry262, _mng_key263, _mng_hash266);
    _jkl_retv = _mng_entry262;
    goto _jkl_epilogue;
    __twr_l24:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable283, uint64_t _mng_key284, uint64_t _mng_hash285) {
    uint64_t _jkl_retv;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t __twr_v288;
    uint64_t __twr_v289;
    uint64_t __twr_v290;
    uint64_t _mng_head291;
    uint64_t __twr_v292;
    uint64_t _mng_listentry293;
    uint64_t _mng_entry294;
    uint64_t __twr_v295;
    uint64_t __twr_v296;
    uint64_t __twr_v297;
    uint64_t __twr_v298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t __twr_v301;
    __twr_v286 = 16ULL;
    __twr_v287 = _mng_hashtable283 + __twr_v286;
    __twr_v288 = 4ULL;
    __twr_v289 = _mng_hash285 << __twr_v288;
    __twr_v290 = __twr_v287 + __twr_v289;
    _mng_head291 = __twr_v290;
    __twr_v292 = *(uint64_t*)(_mng_head291);
    _mng_listentry293 = __twr_v292;
    if (_mng_listentry293 == _mng_head291) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    _mng_entry294 = _mng_listentry293;
    __twr_v295 = (uint64_t)(&TlCompareString);
    __twr_v296 = 40ULL;
    __twr_v297 = _mng_entry294 + __twr_v296;
    __twr_v298 = *(uint64_t*)(__twr_v297);
    __twr_v299 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v295)(_mng_key284, __twr_v298);
    if (__twr_v299) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_entry294;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v300 = *(uint64_t*)(_mng_listentry293);
    _mng_listentry293 = __twr_v300;
    __twr_l33:;
    if (_mng_listentry293 != _mng_head291) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v301 = 0ULL;
    _jkl_retv = __twr_v301;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable302, uint64_t _mng_key303) {
    uint64_t _jkl_retv;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t _mng_hash306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    __twr_v304 = (uint64_t)(&TlHashString);
    __twr_v305 = ((uint64_t (*)(uint64_t))__twr_v304)(_mng_key303);
    _mng_hash306 = __twr_v305;
    __twr_v307 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v308 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v307)(_mng_hashtable302, _mng_key303, _mng_hash306);
    _jkl_retv = __twr_v308;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void TlRemoveHashTable(uint64_t _mng_entry309) {
    uint64_t _mng_listentry310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t _mng_prev314;
    uint64_t __twr_v315;
    uint64_t _mng_next316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t _mng_listentry320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t _mng_prev323;
    uint64_t __twr_v324;
    uint64_t _mng_next325;
    uint64_t __twr_v326;
    _mng_listentry310 = _mng_entry309;
    __twr_v311 = 8ULL;
    __twr_v312 = _mng_listentry310 + __twr_v311;
    __twr_v313 = *(uint64_t*)(__twr_v312);
    _mng_prev314 = __twr_v313;
    __twr_v315 = *(uint64_t*)(_mng_listentry310);
    _mng_next316 = __twr_v315;
    *(uint64_t*)(_mng_prev314) = _mng_next316;
    __twr_v317 = _mng_next316 + __twr_v311;
    *(uint64_t*)(__twr_v317) = _mng_prev314;
    __twr_v318 = 16ULL;
    __twr_v319 = _mng_entry309 + __twr_v318;
    _mng_listentry320 = __twr_v319;
    __twr_v321 = _mng_listentry320 + __twr_v311;
    __twr_v322 = *(uint64_t*)(__twr_v321);
    _mng_prev323 = __twr_v322;
    __twr_v324 = *(uint64_t*)(_mng_listentry320);
    _mng_next325 = __twr_v324;
    *(uint64_t*)(_mng_prev323) = _mng_next325;
    __twr_v326 = _mng_next325 + __twr_v311;
    *(uint64_t*)(__twr_v326) = _mng_prev323;
    __twr_l37:;
    _jkl_epilogue:;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable327, uint64_t _mng_enumfunc328) {
    uint64_t _mng_head329;
    uint64_t __twr_v330;
    uint64_t _mng_listentry331;
    uint64_t __twr_v332;
    uint64_t _mng_nextentry333;
    uint64_t __twr_v334;
    uint64_t __twr_v335;
    uint64_t _mng_entry336;
    _mng_head329 = _mng_hashtable327;
    __twr_v330 = *(uint64_t*)(_mng_head329);
    _mng_listentry331 = __twr_v330;
    if (_mng_listentry331 == _mng_head329) { goto __twr_l40; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v332 = *(uint64_t*)(_mng_listentry331);
    _mng_nextentry333 = __twr_v332;
    __twr_v334 = 16ULL;
    __twr_v335 = _mng_listentry331 - __twr_v334;
    _mng_entry336 = __twr_v335;
    ((void (*)(uint64_t))_mng_enumfunc328)(_mng_entry336);
    _mng_listentry331 = _mng_nextentry333;
    __twr_l41:;
    if (_mng_listentry331 != _mng_head329) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t TlHashString(uint64_t _mng_str337) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash338;
    uint64_t __twr_v339;
    uint64_t __twr_v340;
    uint64_t __twr_v341;
    uint64_t __twr_v342;
    uint64_t __twr_v343;
    uint64_t __twr_v344;
    uint64_t __twr_v345;
    uint64_t __twr_v346;
    uint64_t __twr_v347;
    uint64_t __twr_v348;
    uint64_t __twr_v349;
    uint64_t __twr_v350;
    uint64_t __twr_v351;
    uint64_t __twr_v352;
    uint64_t __twr_v353;
    uint64_t __twr_v354;
    uint64_t __twr_v355;
    uint64_t __twr_v356;
    uint64_t __twr_v357;
    uint64_t __twr_v358;
    uint64_t __twr_v359;
    uint64_t __twr_v360;
    uint64_t __twr_v361;
    _mng_hash338 = 0ULL;
    __twr_v339 = *(uint8_t*)(_mng_str337);
    if (!(__twr_v339)) { goto __twr_l44; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v340 = *(uint8_t*)(_mng_str337);
    __twr_v341 = _mng_hash338 + __twr_v340;
    _mng_hash338 = __twr_v341;
    __twr_v342 = 10ULL;
    __twr_v343 = _mng_hash338 << __twr_v342;
    __twr_v344 = _mng_hash338 + __twr_v343;
    _mng_hash338 = __twr_v344;
    __twr_v345 = 6ULL;
    __twr_v346 = _mng_hash338 >> __twr_v345;
    __twr_v347 = _mng_hash338 ^ __twr_v346;
    _mng_hash338 = __twr_v347;
    __twr_v348 = 1ULL;
    __twr_v349 = _mng_str337 + __twr_v348;
    _mng_str337 = __twr_v349;
    __twr_l45:;
    __twr_v350 = *(uint8_t*)(_mng_str337);
    if (__twr_v350) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v351 = 3ULL;
    __twr_v352 = _mng_hash338 << __twr_v351;
    __twr_v353 = _mng_hash338 + __twr_v352;
    _mng_hash338 = __twr_v353;
    __twr_v354 = 11ULL;
    __twr_v355 = _mng_hash338 >> __twr_v354;
    __twr_v356 = _mng_hash338 ^ __twr_v355;
    _mng_hash338 = __twr_v356;
    __twr_v357 = 15ULL;
    __twr_v358 = _mng_hash338 << __twr_v357;
    __twr_v359 = _mng_hash338 + __twr_v358;
    _mng_hash338 = __twr_v359;
    __twr_v360 = 97ULL;
    __twr_v361 = _mng_hash338 % __twr_v360;
    _mng_hash338 = __twr_v361;
    _jkl_retv = _mng_hash338;
    goto _jkl_epilogue;
    __twr_l42:;
    _jkl_epilogue:;
    return _jkl_retv;
}

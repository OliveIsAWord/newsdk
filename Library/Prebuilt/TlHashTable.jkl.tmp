#include <stdint.h>
extern void TlMain(uint64_t _mng_argc1, uint64_t _mng_argv2);
extern void TlInitialize();
extern uint64_t TlMeasureString(uint64_t _mng_str3);
extern void TlFillMemoryWithByte(uint64_t _mng_ptr4, uint64_t _mng_sz5, uint64_t _mng_byte6);
extern void TlCopyMemory(uint64_t _mng_dest7, uint64_t _mng_src8, uint64_t _mng_sz9);
extern void TlPrintString(uint64_t _mng_str10);
extern void TlPrintNumber(uint64_t _mng_num11);
extern void TlPrintHex(uint64_t _mng_num12);
extern void TlPrintCharacter(uint64_t _mng_byte13);
extern void TlInternalError(uint64_t _mng_str14, uint64_t _mng_err115, uint64_t _mng_err216, uint64_t _mng_err317);
extern void TlUserError(uint64_t _mng_str18, uint64_t _mng_err119, uint64_t _mng_err220, uint64_t _mng_err321);
extern void TlErrorExit();
extern uint64_t TlBumpAlloc(uint64_t _mng_bytes22, uint64_t _mng_o_ptr);
extern uint64_t TlAlloc(uint64_t _mng_bytes23, uint64_t _mng_o_ptr);
extern void TlFree(uint64_t _mng_ptr24);
extern uint64_t TlCompareString(uint64_t _mng_str125, uint64_t _mng_str226);
extern uint64_t TlCompareStringWithMax(uint64_t _mng_str127, uint64_t _mng_str228, uint64_t _mng_count29);
extern void TlCopyString(uint64_t _mng_dest30, uint64_t _mng_src31, uint64_t _mng_bufsize32);
extern uint64_t TlOpenSource(uint64_t _mng_filename33, uint64_t _mng_o_handle);
extern uint64_t TlOpenDestination(uint64_t _mng_filename34, uint64_t _mng_o_handle);
extern void TlClose(uint64_t _mng_handle35);
extern uint64_t TlReadFile(uint64_t _mng_handle36, uint64_t _mng_bytes37, uint64_t _mng_buffer38);
extern uint64_t TlWriteFile(uint64_t _mng_handle39, uint64_t _mng_bytes40, uint64_t _mng_buffer41);
extern uint64_t TlHeapHits;
extern uint64_t TlBumpBytesUsed;
extern uint64_t TlBumpHits;
extern void TlInitializeHashTable(uint64_t _mng_hashtable42);
extern void TlSummarizeHashTable(uint64_t _mng_hashtable43);
extern void TlInsertHashTable(uint64_t _mng_hashtable44, uint64_t _mng_entry45, uint64_t _mng_key46);
extern uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable47, uint64_t _mng_entry48, uint64_t _mng_key49);
extern uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable50, uint64_t _mng_entrysize51, uint64_t _mng_key52, uint64_t _mng_o_created);
extern uint64_t TlLookupHashTable(uint64_t _mng_hashtable53, uint64_t _mng_key54);
extern void TlRemoveHashTable(uint64_t _mng_entry55);
extern void TlEnumerateHashTable(uint64_t _mng_hashtable56, uint64_t _mng_enumfunc57);
extern uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable58, uint64_t _mng_key59, uint64_t _mng_hash60);
extern uint64_t TlHashString(uint64_t _mng_str61);
extern void TlInitializeSymbolTable(uint64_t _mng_symboltable62, uint64_t _mng_outerscope63, uint64_t _mng_deletefunc64);
extern uint64_t TlCreateSymbolTable(uint64_t _mng_outerscope65, uint64_t _mng_deletefunc66);
extern uint64_t TlDeleteSymbolTable(uint64_t _mng_symboltable67);
extern uint64_t TlLookupSymbolTable(uint64_t _mng_symboltable68, uint64_t _mng_name69);
extern void TlInsertSymbolTable(uint64_t _mng_symboltable70, uint64_t _mng_entry71, uint64_t _mng_name72);
extern void TlRemoveSymbolTable(uint64_t _mng_entry73);
extern void TlInitializeDynamicBuffer(uint64_t _mng_array74);
extern void TlUninitializeDynamicBuffer(uint64_t _mng_array75);
extern void TlInsertDynamicBuffer(uint64_t _mng_array76, uint64_t _mng_byte77);
extern void TlCopyIntoDynamicBuffer(uint64_t _mng_array78, uint64_t _mng_srcbuf79, uint64_t _mng_length80);
extern void TlInsertNumberDynamicBuffer(uint64_t _mng_array81, uint64_t _mng_number82, uint64_t _mng_base83);
extern uint64_t TlPopDynamicBuffer(uint64_t _mng_array84);
extern uint64_t TlMatchPath(uint64_t _mng_path85, uint64_t _mng_pathset86, uint64_t _mng_resultingpath87, uint64_t _mng_o_handle);
extern void TlCopyParentPath(uint64_t _mng_srcpath88, uint64_t _mng_destpath89);
extern uint64_t TlGetFileName(uint64_t _mng_path90);
extern uint64_t TlIsPathDirectory(uint64_t _mng_path91);
extern uint64_t TlPathExists(uint64_t _mng_path92);
extern uint64_t TlIterateDirectory(uint64_t _mng_path93, uint64_t _mng_callback94, uint64_t _mng_context95);
extern uint64_t TlGetPathExtension(uint64_t _mng_path96);
extern uint64_t TlStatFile(uint64_t _mng_path97, uint64_t _mng_statrecord98);
extern uint64_t TlCreateDirectory(uint64_t _mng_path99);
extern uint64_t TlSwitchDirectory(uint64_t _mng_path100);
extern void TlInitializeZone(uint64_t _mng_zone101, uint64_t _mng_blocksize102);
extern uint64_t TlAllocateFromZone(uint64_t _mng_zone103);
extern void TlFreeToZone(uint64_t _mng_zone104, uint64_t _mng_block105);
extern uint64_t TlIsPowerOfTwo(uint64_t _mng_constant106);
extern void TlPunchValue(uint64_t _mng_ptr107, uint64_t _mng_value108, uint64_t _mng_bytes109);
extern uint64_t TlTokenize(uint64_t _mng_buffer110, uint64_t _mng_tokenbuffer111, uint64_t _mng_bufsize112, uint64_t _mng_delimiter113);
extern uint64_t TlStringToNumber(uint64_t _mng_src114, uint64_t _mng_bufsize115, uint64_t _mng_o_num);
extern void TlSetTerminationHandler(uint64_t _mng_handler116);
extern uint64_t TlCreateThread(uint64_t _mng_startroutine117, uint64_t _mng_arg118, uint64_t _mng_o_thread);
extern uint64_t TlJoinThread(uint64_t _mng_thread119);
extern uint64_t TlCreateMutex();
extern void TlAcquireMutex(uint64_t _mng_mutex120);
extern void TlReleaseMutex(uint64_t _mng_mutex121);
extern uint64_t TlCreateSemaphore(uint64_t _mng_initialvalue122);
extern void TlAcquireSemaphore(uint64_t _mng_semaphore123);
extern void TlReleaseSemaphore(uint64_t _mng_semaphore124);
extern uint64_t TlSystem(uint64_t _mng_cmdline125);
extern uint64_t TlCurrentEpochTime();
void TlInitializeHashTable(uint64_t _mng_hashtable126) {
    uint64_t _mng_listhead127;
    uint64_t __twr_v128;
    uint64_t __twr_v129;
    uint64_t _mng_i130;
    uint64_t __twr_v131;
    uint64_t __twr_v132;
    uint64_t __twr_v133;
    uint64_t __twr_v134;
    uint64_t __twr_v135;
    uint64_t _mng_listhead136;
    uint64_t __twr_v137;
    uint64_t __twr_v138;
    uint64_t __twr_v139;
    uint64_t __twr_v140;
    uint64_t __twr_v141;
    _mng_listhead127 = _mng_hashtable126;
    __twr_v128 = 8ULL;
    __twr_v129 = _mng_listhead127 + __twr_v128;
    *(uint64_t*)(__twr_v129) = _mng_listhead127;
    *(uint64_t*)(_mng_listhead127) = _mng_listhead127;
    _mng_i130 = 0ULL;
    __twr_l2:;
    __twr_v131 = 16ULL;
    __twr_v132 = _mng_hashtable126 + __twr_v131;
    __twr_v133 = 4ULL;
    __twr_v134 = _mng_i130 << __twr_v133;
    __twr_v135 = __twr_v132 + __twr_v134;
    _mng_listhead136 = __twr_v135;
    __twr_v137 = 8ULL;
    __twr_v138 = _mng_listhead136 + __twr_v137;
    *(uint64_t*)(__twr_v138) = _mng_listhead136;
    *(uint64_t*)(_mng_listhead136) = _mng_listhead136;
    __twr_v139 = 1ULL;
    __twr_v140 = _mng_i130 + __twr_v139;
    _mng_i130 = __twr_v140;
    __twr_l4:;
    __twr_v141 = 97ULL;
    if (_mng_i130 < __twr_v141) { goto __twr_l2; } else { goto __twr_l3; }
    __twr_l3:;
    __twr_l1:;
    _jkl_epilogue:;
}
void TlSummarizeHashTable(uint64_t _mng_hashtable142) {
    uint64_t _mng_i143;
    uint64_t _mng_entries144;
    uint64_t __twr_v145;
    uint64_t __twr_v146;
    uint64_t __twr_v147;
    uint64_t __twr_v148;
    uint64_t __twr_v149;
    uint64_t _mng_head150;
    uint64_t __twr_v151;
    uint64_t _mng_listentry152;
    uint64_t __twr_v153;
    uint64_t __twr_v154;
    uint64_t __twr_v155;
    uint64_t __twr_v156;
    uint64_t __twr_v157;
    uint64_t __twr_v158;
    uint64_t __twr_v159;
    uint64_t __twr_v160;
    uint64_t __twr_v161;
    uint64_t __twr_v162;
    _mng_i143 = 0ULL;
    __twr_l6:;
    _mng_entries144 = 0ULL;
    __twr_v145 = 16ULL;
    __twr_v146 = _mng_hashtable142 + __twr_v145;
    __twr_v147 = 4ULL;
    __twr_v148 = _mng_i143 << __twr_v147;
    __twr_v149 = __twr_v146 + __twr_v148;
    _mng_head150 = __twr_v149;
    __twr_v151 = *(uint64_t*)(_mng_head150);
    _mng_listentry152 = __twr_v151;
    if (_mng_listentry152 == _mng_head150) { goto __twr_l10; } else { goto __twr_l9; }
    __twr_l9:;
    __twr_v153 = 1ULL;
    __twr_v154 = _mng_entries144 + __twr_v153;
    _mng_entries144 = __twr_v154;
    __twr_v155 = *(uint64_t*)(_mng_listentry152);
    _mng_listentry152 = __twr_v155;
    __twr_l11:;
    if (_mng_listentry152 != _mng_head150) { goto __twr_l9; } else { goto __twr_l10; }
    __twr_l10:;
    if (!(_mng_entries144)) { goto __twr_l12; } else { goto __twr_l13; }
    __twr_l13:;
    __twr_v156 = (uint64_t)(&TlPrintNumber);
    ((void (*)(uint64_t))__twr_v156)(_mng_i143);
    __twr_v157 = (uint64_t)(&TlPrintString);
    __twr_v158 = (uint64_t)(&": ");
    ((void (*)(uint64_t))__twr_v157)(__twr_v158);
    ((void (*)(uint64_t))__twr_v156)(_mng_entries144);
    __twr_v159 = (uint64_t)(&"\n");
    ((void (*)(uint64_t))__twr_v157)(__twr_v159);
    __twr_l12:;
    __twr_v160 = 1ULL;
    __twr_v161 = _mng_i143 + __twr_v160;
    _mng_i143 = __twr_v161;
    __twr_l8:;
    __twr_v162 = 97ULL;
    if (_mng_i143 < __twr_v162) { goto __twr_l6; } else { goto __twr_l7; }
    __twr_l7:;
    __twr_l5:;
    _jkl_epilogue:;
}
void TlInsertHashTableByHash(uint64_t _mng_hashtable163, uint64_t _mng_entry164, uint64_t _mng_key165, uint64_t _mng_hash166) {
    uint64_t __twr_v167;
    uint64_t __twr_v168;
    uint64_t __twr_v169;
    uint64_t __twr_v170;
    uint64_t __twr_v171;
    uint64_t __twr_v172;
    uint64_t __twr_v173;
    uint64_t __twr_v174;
    uint64_t __twr_v175;
    uint64_t _mng_listhead176;
    uint64_t _mng_listentry177;
    uint64_t __twr_v178;
    uint64_t _mng_first179;
    uint64_t __twr_v180;
    uint64_t __twr_v181;
    uint64_t __twr_v182;
    uint64_t _mng_listhead183;
    uint64_t __twr_v184;
    uint64_t _mng_listentry185;
    uint64_t __twr_v186;
    uint64_t __twr_v187;
    uint64_t _mng_last188;
    uint64_t __twr_v189;
    __twr_v167 = 32ULL;
    __twr_v168 = _mng_entry164 + __twr_v167;
    *(uint64_t*)(__twr_v168) = _mng_hashtable163;
    __twr_v169 = 40ULL;
    __twr_v170 = _mng_entry164 + __twr_v169;
    *(uint64_t*)(__twr_v170) = _mng_key165;
    __twr_v171 = 16ULL;
    __twr_v172 = _mng_hashtable163 + __twr_v171;
    __twr_v173 = 4ULL;
    __twr_v174 = _mng_hash166 << __twr_v173;
    __twr_v175 = __twr_v172 + __twr_v174;
    _mng_listhead176 = __twr_v175;
    _mng_listentry177 = _mng_entry164;
    __twr_v178 = *(uint64_t*)(_mng_listhead176);
    _mng_first179 = __twr_v178;
    *(uint64_t*)(_mng_listentry177) = _mng_first179;
    __twr_v180 = 8ULL;
    __twr_v181 = _mng_listentry177 + __twr_v180;
    *(uint64_t*)(__twr_v181) = _mng_listhead176;
    __twr_v182 = _mng_first179 + __twr_v180;
    *(uint64_t*)(__twr_v182) = _mng_entry164;
    *(uint64_t*)(_mng_listhead176) = _mng_entry164;
    _mng_listhead183 = _mng_hashtable163;
    __twr_v184 = _mng_entry164 + __twr_v171;
    _mng_listentry185 = __twr_v184;
    __twr_v186 = _mng_listhead183 + __twr_v180;
    __twr_v187 = *(uint64_t*)(__twr_v186);
    _mng_last188 = __twr_v187;
    __twr_v189 = _mng_listentry185 + __twr_v180;
    *(uint64_t*)(__twr_v189) = _mng_last188;
    *(uint64_t*)(_mng_listentry185) = _mng_listhead183;
    *(uint64_t*)(_mng_last188) = _mng_listentry185;
    *(uint64_t*)(__twr_v186) = _mng_listentry185;
    __twr_l14:;
    _jkl_epilogue:;
}
void TlInsertHashTable(uint64_t _mng_hashtable190, uint64_t _mng_entry191, uint64_t _mng_key192) {
    uint64_t __twr_v193;
    uint64_t __twr_v194;
    uint64_t _mng_hash195;
    uint64_t __twr_v196;
    __twr_v193 = (uint64_t)(&TlHashString);
    __twr_v194 = ((uint64_t (*)(uint64_t))__twr_v193)(_mng_key192);
    _mng_hash195 = __twr_v194;
    __twr_v196 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v196)(_mng_hashtable190, _mng_entry191, _mng_key192, _mng_hash195);
    __twr_l15:;
    _jkl_epilogue:;
}
uint64_t TlLookupOrAllocateEntryHashTable(uint64_t _mng_hashtable197, uint64_t _mng_entrysize198, uint64_t _mng_key199, uint64_t _mng_o_created) {
    uint64_t _jkl_retv;
    uint64_t __twr_v200;
    uint64_t __twr_v201;
    uint64_t _mng_hash202;
    uint64_t __twr_v203;
    uint64_t __twr_v204;
    uint64_t __twr_v205;
    uint64_t __twr_v206;
    uint64_t __twr_v207;
    uint64_t _mng_head208;
    uint64_t __twr_v209;
    uint64_t _mng_listentry210;
    uint64_t _mng_entry211;
    uint64_t __twr_v212;
    uint64_t __twr_v213;
    uint64_t __twr_v214;
    uint64_t __twr_v215;
    uint64_t __twr_v216;
    uint64_t _mng_created217;
    uint64_t __twr_v218;
    uint64_t __twr_v219;
    uint64_t __twr_v220;
    uint64_t _mng_status221;
    uint64_t __twr_v222;
    uint64_t __twr_v223;
    uint64_t __twr_v224;
    uint64_t __twr_v225;
    __twr_v200 = (uint64_t)(&TlHashString);
    __twr_v201 = ((uint64_t (*)(uint64_t))__twr_v200)(_mng_key199);
    _mng_hash202 = __twr_v201;
    __twr_v203 = 16ULL;
    __twr_v204 = _mng_hashtable197 + __twr_v203;
    __twr_v205 = 4ULL;
    __twr_v206 = _mng_hash202 << __twr_v205;
    __twr_v207 = __twr_v204 + __twr_v206;
    _mng_head208 = __twr_v207;
    __twr_v209 = *(uint64_t*)(_mng_head208);
    _mng_listentry210 = __twr_v209;
    if (_mng_listentry210 == _mng_head208) { goto __twr_l18; } else { goto __twr_l17; }
    __twr_l17:;
    _mng_entry211 = _mng_listentry210;
    __twr_v212 = (uint64_t)(&TlCompareString);
    __twr_v213 = 40ULL;
    __twr_v214 = _mng_entry211 + __twr_v213;
    __twr_v215 = *(uint64_t*)(__twr_v214);
    __twr_v216 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v212)(_mng_key199, __twr_v215);
    if (__twr_v216) { goto __twr_l20; } else { goto __twr_l21; }
    __twr_l21:;
    _mng_created217 = 0ULL;
    _jkl_retv = _mng_entry211;
    goto _jkl_epilogue;
    __twr_l20:;
    __twr_v218 = *(uint64_t*)(_mng_listentry210);
    _mng_listentry210 = __twr_v218;
    __twr_l19:;
    if (_mng_listentry210 != _mng_head208) { goto __twr_l17; } else { goto __twr_l18; }
    __twr_l18:;
    __twr_v219 = (uint64_t)(&TlBumpAlloc);
    __twr_v220 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v219)(_mng_entrysize198, (uint64_t)(&_mng_entry211));
    _mng_status221 = __twr_v220;
    if (!(_mng_status221)) { goto __twr_l22; } else { goto __twr_l23; }
    __twr_l23:;
    __twr_v222 = (uint64_t)(&TlInternalError);
    __twr_v223 = (uint64_t)(&"Failed to allocate entry");
    __twr_v224 = 0ULL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v222)(__twr_v223, __twr_v224, __twr_v224, __twr_v224);
    __twr_l22:;
    __twr_v225 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v225)(_mng_hashtable197, _mng_entry211, _mng_key199, _mng_hash202);
    _mng_created217 = 1ULL;
    _jkl_retv = _mng_entry211;
    goto _jkl_epilogue;
    __twr_l16:;
    _jkl_epilogue:;
    *(uint64_t*)(_mng_o_created) = _mng_created217;
    return _jkl_retv;
}
uint64_t TlLookupOrInsertHashTable(uint64_t _mng_hashtable226, uint64_t _mng_entry227, uint64_t _mng_key228) {
    uint64_t _jkl_retv;
    uint64_t __twr_v229;
    uint64_t __twr_v230;
    uint64_t _mng_hash231;
    uint64_t __twr_v232;
    uint64_t __twr_v233;
    uint64_t __twr_v234;
    uint64_t __twr_v235;
    uint64_t __twr_v236;
    uint64_t _mng_head237;
    uint64_t __twr_v238;
    uint64_t _mng_listentry239;
    uint64_t _mng_oldentry240;
    uint64_t __twr_v241;
    uint64_t __twr_v242;
    uint64_t __twr_v243;
    uint64_t __twr_v244;
    uint64_t __twr_v245;
    uint64_t __twr_v246;
    uint64_t __twr_v247;
    __twr_v229 = (uint64_t)(&TlHashString);
    __twr_v230 = ((uint64_t (*)(uint64_t))__twr_v229)(_mng_key228);
    _mng_hash231 = __twr_v230;
    __twr_v232 = 16ULL;
    __twr_v233 = _mng_hashtable226 + __twr_v232;
    __twr_v234 = 4ULL;
    __twr_v235 = _mng_hash231 << __twr_v234;
    __twr_v236 = __twr_v233 + __twr_v235;
    _mng_head237 = __twr_v236;
    __twr_v238 = *(uint64_t*)(_mng_head237);
    _mng_listentry239 = __twr_v238;
    if (_mng_listentry239 == _mng_head237) { goto __twr_l26; } else { goto __twr_l25; }
    __twr_l25:;
    _mng_oldentry240 = _mng_listentry239;
    __twr_v241 = (uint64_t)(&TlCompareString);
    __twr_v242 = 40ULL;
    __twr_v243 = _mng_oldentry240 + __twr_v242;
    __twr_v244 = *(uint64_t*)(__twr_v243);
    __twr_v245 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v241)(_mng_key228, __twr_v244);
    if (__twr_v245) { goto __twr_l28; } else { goto __twr_l29; }
    __twr_l29:;
    _jkl_retv = _mng_oldentry240;
    goto _jkl_epilogue;
    __twr_l28:;
    __twr_v246 = *(uint64_t*)(_mng_listentry239);
    _mng_listentry239 = __twr_v246;
    __twr_l27:;
    if (_mng_listentry239 != _mng_head237) { goto __twr_l25; } else { goto __twr_l26; }
    __twr_l26:;
    __twr_v247 = (uint64_t)(&TlInsertHashTableByHash);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__twr_v247)(_mng_hashtable226, _mng_entry227, _mng_key228, _mng_hash231);
    _jkl_retv = _mng_entry227;
    goto _jkl_epilogue;
    __twr_l24:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTableByHash(uint64_t _mng_hashtable248, uint64_t _mng_key249, uint64_t _mng_hash250) {
    uint64_t _jkl_retv;
    uint64_t __twr_v251;
    uint64_t __twr_v252;
    uint64_t __twr_v253;
    uint64_t __twr_v254;
    uint64_t __twr_v255;
    uint64_t _mng_head256;
    uint64_t __twr_v257;
    uint64_t _mng_listentry258;
    uint64_t _mng_entry259;
    uint64_t __twr_v260;
    uint64_t __twr_v261;
    uint64_t __twr_v262;
    uint64_t __twr_v263;
    uint64_t __twr_v264;
    uint64_t __twr_v265;
    uint64_t __twr_v266;
    __twr_v251 = 16ULL;
    __twr_v252 = _mng_hashtable248 + __twr_v251;
    __twr_v253 = 4ULL;
    __twr_v254 = _mng_hash250 << __twr_v253;
    __twr_v255 = __twr_v252 + __twr_v254;
    _mng_head256 = __twr_v255;
    __twr_v257 = *(uint64_t*)(_mng_head256);
    _mng_listentry258 = __twr_v257;
    if (_mng_listentry258 == _mng_head256) { goto __twr_l32; } else { goto __twr_l31; }
    __twr_l31:;
    _mng_entry259 = _mng_listentry258;
    __twr_v260 = (uint64_t)(&TlCompareString);
    __twr_v261 = 40ULL;
    __twr_v262 = _mng_entry259 + __twr_v261;
    __twr_v263 = *(uint64_t*)(__twr_v262);
    __twr_v264 = ((uint64_t (*)(uint64_t, uint64_t))__twr_v260)(_mng_key249, __twr_v263);
    if (__twr_v264) { goto __twr_l34; } else { goto __twr_l35; }
    __twr_l35:;
    _jkl_retv = _mng_entry259;
    goto _jkl_epilogue;
    __twr_l34:;
    __twr_v265 = *(uint64_t*)(_mng_listentry258);
    _mng_listentry258 = __twr_v265;
    __twr_l33:;
    if (_mng_listentry258 != _mng_head256) { goto __twr_l31; } else { goto __twr_l32; }
    __twr_l32:;
    __twr_v266 = 0ULL;
    _jkl_retv = __twr_v266;
    goto _jkl_epilogue;
    __twr_l30:;
    _jkl_epilogue:;
    return _jkl_retv;
}
uint64_t TlLookupHashTable(uint64_t _mng_hashtable267, uint64_t _mng_key268) {
    uint64_t _jkl_retv;
    uint64_t __twr_v269;
    uint64_t __twr_v270;
    uint64_t _mng_hash271;
    uint64_t __twr_v272;
    uint64_t __twr_v273;
    __twr_v269 = (uint64_t)(&TlHashString);
    __twr_v270 = ((uint64_t (*)(uint64_t))__twr_v269)(_mng_key268);
    _mng_hash271 = __twr_v270;
    __twr_v272 = (uint64_t)(&TlLookupHashTableByHash);
    __twr_v273 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))__twr_v272)(_mng_hashtable267, _mng_key268, _mng_hash271);
    _jkl_retv = __twr_v273;
    goto _jkl_epilogue;
    __twr_l36:;
    _jkl_epilogue:;
    return _jkl_retv;
}
void TlRemoveHashTable(uint64_t _mng_entry274) {
    uint64_t _mng_listentry275;
    uint64_t __twr_v276;
    uint64_t __twr_v277;
    uint64_t __twr_v278;
    uint64_t _mng_prev279;
    uint64_t __twr_v280;
    uint64_t _mng_next281;
    uint64_t __twr_v282;
    uint64_t __twr_v283;
    uint64_t __twr_v284;
    uint64_t _mng_listentry285;
    uint64_t __twr_v286;
    uint64_t __twr_v287;
    uint64_t _mng_prev288;
    uint64_t __twr_v289;
    uint64_t _mng_next290;
    uint64_t __twr_v291;
    _mng_listentry275 = _mng_entry274;
    __twr_v276 = 8ULL;
    __twr_v277 = _mng_listentry275 + __twr_v276;
    __twr_v278 = *(uint64_t*)(__twr_v277);
    _mng_prev279 = __twr_v278;
    __twr_v280 = *(uint64_t*)(_mng_listentry275);
    _mng_next281 = __twr_v280;
    *(uint64_t*)(_mng_prev279) = _mng_next281;
    __twr_v282 = _mng_next281 + __twr_v276;
    *(uint64_t*)(__twr_v282) = _mng_prev279;
    __twr_v283 = 16ULL;
    __twr_v284 = _mng_entry274 + __twr_v283;
    _mng_listentry285 = __twr_v284;
    __twr_v286 = _mng_listentry285 + __twr_v276;
    __twr_v287 = *(uint64_t*)(__twr_v286);
    _mng_prev288 = __twr_v287;
    __twr_v289 = *(uint64_t*)(_mng_listentry285);
    _mng_next290 = __twr_v289;
    *(uint64_t*)(_mng_prev288) = _mng_next290;
    __twr_v291 = _mng_next290 + __twr_v276;
    *(uint64_t*)(__twr_v291) = _mng_prev288;
    __twr_l37:;
    _jkl_epilogue:;
}
void TlEnumerateHashTable(uint64_t _mng_hashtable292, uint64_t _mng_enumfunc293) {
    uint64_t _mng_head294;
    uint64_t __twr_v295;
    uint64_t _mng_listentry296;
    uint64_t __twr_v297;
    uint64_t _mng_nextentry298;
    uint64_t __twr_v299;
    uint64_t __twr_v300;
    uint64_t _mng_entry301;
    _mng_head294 = _mng_hashtable292;
    __twr_v295 = *(uint64_t*)(_mng_head294);
    _mng_listentry296 = __twr_v295;
    if (_mng_listentry296 == _mng_head294) { goto __twr_l40; } else { goto __twr_l39; }
    __twr_l39:;
    __twr_v297 = *(uint64_t*)(_mng_listentry296);
    _mng_nextentry298 = __twr_v297;
    __twr_v299 = 16ULL;
    __twr_v300 = _mng_listentry296 - __twr_v299;
    _mng_entry301 = __twr_v300;
    ((void (*)(uint64_t))_mng_enumfunc293)(_mng_entry301);
    _mng_listentry296 = _mng_nextentry298;
    __twr_l41:;
    if (_mng_listentry296 != _mng_head294) { goto __twr_l39; } else { goto __twr_l40; }
    __twr_l40:;
    __twr_l38:;
    _jkl_epilogue:;
}
uint64_t TlHashString(uint64_t _mng_str302) {
    uint64_t _jkl_retv;
    uint64_t _mng_hash303;
    uint64_t __twr_v304;
    uint64_t __twr_v305;
    uint64_t __twr_v306;
    uint64_t __twr_v307;
    uint64_t __twr_v308;
    uint64_t __twr_v309;
    uint64_t __twr_v310;
    uint64_t __twr_v311;
    uint64_t __twr_v312;
    uint64_t __twr_v313;
    uint64_t __twr_v314;
    uint64_t __twr_v315;
    uint64_t __twr_v316;
    uint64_t __twr_v317;
    uint64_t __twr_v318;
    uint64_t __twr_v319;
    uint64_t __twr_v320;
    uint64_t __twr_v321;
    uint64_t __twr_v322;
    uint64_t __twr_v323;
    uint64_t __twr_v324;
    uint64_t __twr_v325;
    uint64_t __twr_v326;
    _mng_hash303 = 0ULL;
    __twr_v304 = *(uint8_t*)(_mng_str302);
    if (!(__twr_v304)) { goto __twr_l44; } else { goto __twr_l43; }
    __twr_l43:;
    __twr_v305 = *(uint8_t*)(_mng_str302);
    __twr_v306 = _mng_hash303 + __twr_v305;
    _mng_hash303 = __twr_v306;
    __twr_v307 = 10ULL;
    __twr_v308 = _mng_hash303 << __twr_v307;
    __twr_v309 = _mng_hash303 + __twr_v308;
    _mng_hash303 = __twr_v309;
    __twr_v310 = 6ULL;
    __twr_v311 = _mng_hash303 >> __twr_v310;
    __twr_v312 = _mng_hash303 ^ __twr_v311;
    _mng_hash303 = __twr_v312;
    __twr_v313 = 1ULL;
    __twr_v314 = _mng_str302 + __twr_v313;
    _mng_str302 = __twr_v314;
    __twr_l45:;
    __twr_v315 = *(uint8_t*)(_mng_str302);
    if (__twr_v315) { goto __twr_l43; } else { goto __twr_l44; }
    __twr_l44:;
    __twr_v316 = 3ULL;
    __twr_v317 = _mng_hash303 << __twr_v316;
    __twr_v318 = _mng_hash303 + __twr_v317;
    _mng_hash303 = __twr_v318;
    __twr_v319 = 11ULL;
    __twr_v320 = _mng_hash303 >> __twr_v319;
    __twr_v321 = _mng_hash303 ^ __twr_v320;
    _mng_hash303 = __twr_v321;
    __twr_v322 = 15ULL;
    __twr_v323 = _mng_hash303 << __twr_v322;
    __twr_v324 = _mng_hash303 + __twr_v323;
    _mng_hash303 = __twr_v324;
    __twr_v325 = 97ULL;
    __twr_v326 = _mng_hash303 % __twr_v325;
    _mng_hash303 = __twr_v326;
    _jkl_retv = _mng_hash303;
    goto _jkl_epilogue;
    __twr_l42:;
    _jkl_epilogue:;
    return _jkl_retv;
}
